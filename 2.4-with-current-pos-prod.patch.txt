Only in opensourcepos: .git
Only in opensourcepos: .gitattributes
diff -rBwi --ignore-file-name-case -u pos-prod/.gitignore opensourcepos/.gitignore
--- pos-prod/.gitignore	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/.gitignore	2016-05-23 15:32:31.795841050 -0700
@@ -1,13 +1,21 @@
+node_modules
+bower_components
+application/config/email.php
 application/config/database.php
 *.patch
 patches/
+.idea/
 git-svn-diff.py
 *.bash
-*.sh
-*.swp
+.swp
 .buildpath
 .project
 .settings/*
 *.swp
 *.rej
 *.orig
+*~
+*.~
+*.log
+dist/*_bower.*
+application/sessions/*
Only in opensourcepos: .htaccess
Only in opensourcepos: .travis.yml
Only in opensourcepos: 2.3-with-current-pos-prod.patch
Only in opensourcepos: 2.4-with-current-pos-prod.patch
diff -rBwi --ignore-file-name-case -u pos-prod/application/.htaccess opensourcepos/application/.htaccess
--- pos-prod/application/.htaccess	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/.htaccess	2016-05-23 15:32:31.795841050 -0700
@@ -1 +1,6 @@
+<IfModule authz_core_module>
+    Require all denied
+</IfModule>
+<IfModule !authz_core_module>
 Deny from all
\ No newline at end of file
+</IfModule>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/cache/.htaccess opensourcepos/application/cache/.htaccess
--- pos-prod/application/cache/.htaccess	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/cache/.htaccess	2016-05-23 15:32:31.795841050 -0700
@@ -1 +1,6 @@
+<IfModule authz_core_module>
+    Require all denied
+</IfModule>
+<IfModule !authz_core_module>
 deny from all
\ No newline at end of file
+</IfModule>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/cache/index.html opensourcepos/application/cache/index.html
--- pos-prod/application/cache/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/cache/index.html	2016-05-23 15:32:31.795841050 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/autoload.php opensourcepos/application/config/autoload.php
--- pos-prod/application/config/autoload.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/autoload.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------
 | AUTO-LOADER
@@ -20,16 +22,17 @@
 |
 | 1. Packages
 | 2. Libraries
-| 3. Helper files
-| 4. Custom config files
-| 5. Language files
-| 6. Models
+| 3. Drivers
+| 4. Helper files
+| 5. Custom config files
+| 6. Language files
+| 7. Models
 |
 */
 
 /*
 | -------------------------------------------------------------------
-|  Auto-load Packges
+|  Auto-load Packages
 | -------------------------------------------------------------------
 | Prototype:
 |
@@ -44,16 +45,35 @@
 | -------------------------------------------------------------------
 |  Auto-load Libraries
 | -------------------------------------------------------------------
-| These are the classes located in the system/libraries folder
-| or in your application/libraries folder.
+| These are the classes located in system/libraries/ or your
+| application/libraries/ directory, with the addition of the
+| 'database' library, which is somewhat of a special case.
 |
 | Prototype:
 |
-|	$autoload['libraries'] = array('database', 'session', 'xmlrpc');
+|	$autoload['libraries'] = array('database', 'email', 'session');
+|
+| You can also supply an alternative library name to be assigned
+| in the controller:
+|
+|	$autoload['libraries'] = array('user_agent' => 'ua');
 */
-
 $autoload['libraries'] = array('database','form_validation','session','user_agent', 'pagination');
 
+/*
+| -------------------------------------------------------------------
+|  Auto-load Drivers
+| -------------------------------------------------------------------
+| These classes are located in system/libraries/ or in your
+| application/libraries/ directory, but are also placed inside their
+| own subdirectory and they extend the CI_Driver_Library class. They
+| offer multiple interchangeable driver options.
+|
+| Prototype:
+|
+|	$autoload['drivers'] = array('cache');
+*/
+$autoload['drivers'] = array();
 
 /*
 | -------------------------------------------------------------------
@@ -63,9 +83,7 @@
 |
 |	$autoload['helper'] = array('url', 'file');
 */
-
-$autoload['helper'] = array('form','url','table','text','currency', 'html', 'download', 'directory');
-
+$autoload['helper'] = array('form', 'url', 'table', 'text', 'currency', 'html', 'download', 'directory', 'dateformat_helper');
 
 /*
 | -------------------------------------------------------------------
@@ -105,12 +119,11 @@
 | -------------------------------------------------------------------
 | Prototype:
 |
-|	$autoload['model'] = array('model1', 'model2');
+|	$autoload['model'] = array('first_model', 'second_model');
+|
+| You can also supply an alternative model name to be assigned
+| in the controller:
 |
+|	$autoload['model'] = array('first_model' => 'first');
 */
-
-$autoload['model'] = array('Appconfig','Person','Customer','Employee','Module','Item', 'Item_taxes', 'Sale', 'Sale_suspended', 'Supplier','Inventory','Receiving','Giftcard', 'Item_kit', 'Item_kit_items','Stock_locations','Item_quantities');
-
-
-/* End of file autoload.php */
-/* Location: ./application/config/autoload.php */
\ No newline at end of file
+$autoload['model'] = array('Appconfig', 'Person', 'Customer', 'Employee', 'Module', 'Item', 'Item_taxes', 'Sale', 'Sale_suspended', 'Supplier', 'Inventory', 'Receiving', 'Giftcard', 'Item_kit', 'Item_kit_items', 'Stock_location', 'Item_quantity');
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/config.php opensourcepos/application/config/config.php
--- pos-prod/application/config/config.php	2016-05-05 19:39:48.000000000 -0700
+++ opensourcepos/application/config/config.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,4 +1,5 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /*
 |--------------------------------------------------------------------------
@@ -9,7 +10,7 @@
 |
 |
 */
-$config['application_version'] = '2.3';
+$config['application_version'] = '2.4.0';
 
 /*
 |--------------------------------------------------------------------------
@@ -21,8 +22,16 @@
 |
 |	http://example.com/
 |
-| If this is not set then CodeIgniter will guess the protocol, domain and
-| path to your installation.
+| WARNING: You MUST set this value!
+|
+| If it is not set, then CodeIgniter will try guess the protocol and path
+| your installation, but due to security concerns the hostname will be set
+| to $_SERVER['SERVER_ADDR'] if available, or localhost otherwise.
+| The auto-detection mechanism exists only for convenience during
+| development and MUST NOT be used in production!
+|
+| If you need to allow multiple domains, remember that this file is still
+| a PHP script and you can easily do that on your own.
 |
 */
 $config['base_url'] = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == "on") ? "https" : "http");
@@ -47,17 +56,16 @@
 |--------------------------------------------------------------------------
 |
 | This item determines which server global should be used to retrieve the
-| URI string.  The default setting of 'AUTO' works for most servers.
+| URI string.  The default setting of 'REQUEST_URI' works for most servers.
 | If your links do not seem to work, try one of the other delicious flavors:
 |
-| 'AUTO'			Default - auto detects
-| 'PATH_INFO'		Uses the PATH_INFO
-| 'QUERY_STRING'	Uses the QUERY_STRING
-| 'REQUEST_URI'		Uses the REQUEST_URI
-| 'ORIG_PATH_INFO'	Uses the ORIG_PATH_INFO
+| 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']
+| 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']
+| 'PATH_INFO'      Uses $_SERVER['PATH_INFO']
 |
+| WARNING: If you set this to 'PATH_INFO', URIs will always be URL-decoded!
 */
-$config['uri_protocol']	= 'AUTO';
+$config['uri_protocol']	= 'REQUEST_URI';
 
 /*
 |--------------------------------------------------------------------------
@@ -67,9 +75,8 @@
 | This option allows you to add a suffix to all URLs generated by CodeIgniter.
 | For more information please see the user guide:
 |
-| http://codeigniter.com/user_guide/general/urls.html
+| https://codeigniter.com/user_guide/general/urls.html
 */
-
 $config['url_suffix'] = '';
 
 /*
@@ -92,6 +99,8 @@
 | This determines which character set is used by default in various methods
 | that require a character set to be provided.
 |
+| See http://php.net/htmlspecialchars for a list of supported charsets.
+|
 */
 $config['charset'] = 'UTF-8';
 
@@ -115,27 +123,51 @@
 | This item allows you to set the filename/classname prefix when extending
 | native libraries.  For more information please see the user guide:
 |
-| http://codeigniter.com/user_guide/general/core_classes.html
-| http://codeigniter.com/user_guide/general/creating_libraries.html
+| https://codeigniter.com/user_guide/general/core_classes.html
+| https://codeigniter.com/user_guide/general/creating_libraries.html
 |
 */
 $config['subclass_prefix'] = 'MY_';
 
+/*
+|--------------------------------------------------------------------------
+| Composer auto-loading
+|--------------------------------------------------------------------------
+|
+| Enabling this setting will tell CodeIgniter to look for a Composer
+| package auto-loader script in application/vendor/autoload.php.
+|
+|	$config['composer_autoload'] = TRUE;
+|
+| Or if you have your vendor/ directory located somewhere else, you
+| can opt to set a specific path as well:
+|
+|	$config['composer_autoload'] = '/path/to/vendor/autoload.php';
+|
+| For more information about Composer, please visit http://getcomposer.org/
+|
+| Note: This will NOT disable or override the CodeIgniter-specific
+|	autoloading (application/config/autoload.php)
+*/
+$config['composer_autoload'] = FALSE;
 
 /*
 |--------------------------------------------------------------------------
 | Allowed URL Characters
 |--------------------------------------------------------------------------
 |
-| This lets you specify with a regular expression which characters are permitted
-| within your URLs.  When someone tries to submit a URL with disallowed
-| characters they will get a warning message.
+| This lets you specify which characters are permitted within your URLs.
+| When someone tries to submit a URL with disallowed characters they will
+| get a warning message.
 |
 | As a security measure you are STRONGLY encouraged to restrict URLs to
 | as few characters as possible.  By default only these are allowed: a-z 0-9~%.:_-
 |
 | Leave blank to allow all characters -- but only if you are insane.
 |
+| The configured value is actually a regular expression character group
+| and it will be executed as: ! preg_match('/^[<permitted_uri_chars>]+$/i
+|
 | DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE REPERCUSSIONS!!
 |
 */
@@ -171,15 +202,13 @@
 $config['enable_query_strings'] = FALSE;
 $config['controller_trigger']	= 'c';
 $config['function_trigger']		= 'm';
-$config['directory_trigger']	= 'd'; // experimental not currently in use
+$config['directory_trigger'] = 'd';
 
 /*
 |--------------------------------------------------------------------------
 | Error Logging Threshold
 |--------------------------------------------------------------------------
 |
-| If you have enabled error logging, you can set an error threshold to
-| determine what gets logged. Threshold options are:
 | You can enable error logging by setting a threshold over zero. The
 | threshold determines what gets logged. Threshold options are:
 |
@@ -189,6 +218,10 @@
 |	3 = Informational Messages
 |	4 = All Messages
 |
+| You can also pass an array with threshold levels to show individual error types
+|
+| 	array(2) = Debug Messages, without Error Messages
+|
 | For a live site you'll usually only enable Errors (1) to be logged otherwise
 | your log files will fill up very fast.
 |
@@ -201,10 +234,36 @@
 |--------------------------------------------------------------------------
 |
 | Leave this BLANK unless you would like to set something other than the default
-| application/logs/ folder. Use a full server path with trailing slash.
+| application/logs/ directory. Use a full server path with trailing slash.
+|
+*/
+$config['log_path'] = '';
+
+/*
+|--------------------------------------------------------------------------
+| Log File Extension
+|--------------------------------------------------------------------------
+|
+| The default filename extension for log files. The default 'php' allows for
+| protecting the log files via basic scripting, when they are to be stored
+| under a publicly accessible directory.
+|
+| Note: Leaving it blank will default to 'php'.
+|
+*/
+$config['log_file_extension'] = '';
+
+/*
+|--------------------------------------------------------------------------
+| Log File Permissions
+|--------------------------------------------------------------------------
 |
+| The file system permissions to be applied on newly created log files.
+|
+| IMPORTANT: This MUST be an integer (no quotes) and you MUST use octal
+|            integer notation (i.e. 0700, 0644, etc.)
 */
-$config['log_path'] = '/tmp/';
+$config['log_file_permissions'] = 0644;
 
 /*
 |--------------------------------------------------------------------------
@@ -219,69 +278,150 @@
 
 /*
 |--------------------------------------------------------------------------
+| Error Views Directory Path
+|--------------------------------------------------------------------------
+|
+| Leave this BLANK unless you would like to set something other than the default
+| application/views/errors/ directory.  Use a full server path with trailing slash.
+|
+*/
+$config['error_views_path'] = '';
+
+/*
+|--------------------------------------------------------------------------
 | Cache Directory Path
 |--------------------------------------------------------------------------
 |
 | Leave this BLANK unless you would like to set something other than the default
-| system/cache/ folder.  Use a full server path with trailing slash.
+| application/cache/ directory.  Use a full server path with trailing slash.
 |
 */
 $config['cache_path'] = '';
 
 /*
 |--------------------------------------------------------------------------
+| Cache Include Query String
+|--------------------------------------------------------------------------
+|
+| Whether to take the URL query string into consideration when generating
+| output cache files. Valid options are:
+|
+|	FALSE      = Disabled
+|	TRUE       = Enabled, take all query parameters into account.
+|	             Please be aware that this may result in numerous cache
+|	             files generated for the same page over and over again.
+|	array('q') = Enabled, but only take into account the specified list
+|	             of query parameters.
+|
+*/
+$config['cache_query_string'] = FALSE;
+
+/*
+|--------------------------------------------------------------------------
 | Encryption Key
 |--------------------------------------------------------------------------
 |
-| If you use the Encryption class or the Session class you
-| MUST set an encryption key.  See the user guide for info.
+| If you use the Encryption class, you must set an encryption key.
+| See the user guide for more info.
+|
+| https://codeigniter.com/user_guide/libraries/encryption.html
 |
 */
-$config['encryption_key'] = 'PUT_YOUR_ENCRYPTION_KEY_HERE';
+$config['encryption_key'] = '';
 
 /*
 |--------------------------------------------------------------------------
 | Session Variables
 |--------------------------------------------------------------------------
 |
-| 'sess_cookie_name'		= the name you want for the cookie
-| 'sess_expiration'			= the number of SECONDS you want the session to last.
-|   by default sessions last 7200 seconds (two hours).  Set to zero for no expiration.
-| 'sess_expire_on_close'	= Whether to cause the session to expire automatically
-|   when the browser window is closed
-| 'sess_encrypt_cookie'		= Whether to encrypt the cookie
-| 'sess_use_database'		= Whether to save the session data to a database
-| 'sess_table_name'			= The name of the session database table
-| 'sess_match_ip'			= Whether to match the user's IP address when reading the session data
-| 'sess_match_useragent'	= Whether to match the User Agent when reading the session data
-| 'sess_time_to_update'		= how many seconds between CI refreshing Session Information
-|
-*/
-$config['sess_cookie_name']		= 'ci_session';
-$config['sess_expiration']		= 0; // 14400
-$config['sess_expire_on_close']	= FALSE;
-$config['sess_encrypt_cookie']	= FALSE;
-$config['sess_use_database']	= TRUE;
-$config['sess_table_name']		= 'ospos_sessions';
+| 'sess_driver'
+|
+|	The storage driver to use: files, database, redis, memcached
+|
+| 'sess_cookie_name'
+|
+|	The session cookie name, must contain only [0-9a-z_-] characters
+|
+| 'sess_expiration'
+|
+|	The number of SECONDS you want the session to last.
+|	Setting to 0 (zero) means expire when the browser is closed.
+|
+| 'sess_save_path'
+|
+|	The location to save sessions to, driver dependent.
+|
+|	For the 'files' driver, it's a path to a writable directory.
+|	WARNING: Only absolute paths are supported!
+|
+|	For the 'database' driver, it's a table name.
+|	Please read up the manual for the format with other session drivers.
+|
+|	IMPORTANT: You are REQUIRED to set a valid save path!
+|
+| 'sess_match_ip'
+|
+|	Whether to match the user's IP address when reading the session data.
+|
+|	WARNING: If you're using the database driver, don't forget to update
+|	         your session table's PRIMARY KEY when changing this setting.
+|
+| 'sess_time_to_update'
+|
+|	How many seconds between CI regenerating the session ID.
+|
+| 'sess_regenerate_destroy'
+|
+|	Whether to destroy session data associated with the old session ID
+|	when auto-regenerating the session ID. When set to FALSE, the data
+|	will be later deleted by the garbage collector.
+|
+| Other session cookie settings are shared with the rest of the application,
+| except for 'cookie_prefix' and 'cookie_httponly', which are ignored here.
+|
+*/
+$config['sess_driver'] = 'database';
+$config['sess_cookie_name'] = 'ospos_session';
+$config['sess_expiration'] = 7200;
+$config['sess_save_path'] = 'sessions';
 $config['sess_match_ip']		= FALSE;
-$config['sess_match_useragent']	= FALSE; // TRUE
-$config['sess_time_to_update']	= 86400; // 300
+$config['sess_time_to_update'] = 300;
+$config['sess_regenerate_destroy'] = FALSE;
 
 /*
 |--------------------------------------------------------------------------
 | Cookie Related Variables
 |--------------------------------------------------------------------------
 |
-| 'cookie_prefix' = Set a prefix if you need to avoid collisions
+| 'cookie_prefix'   = Set a cookie name prefix if you need to avoid collisions
 | 'cookie_domain' = Set to .your-domain.com for site-wide cookies
 | 'cookie_path'   =  Typically will be a forward slash
-| 'cookie_secure' =  Cookies will only be set if a secure HTTPS connection exists.
+| 'cookie_secure'   = Cookie will only be set if a secure HTTPS connection exists.
+| 'cookie_httponly' = Cookie will only be accessible via HTTP(S) (no javascript)
+|
+| Note: These settings (with the exception of 'cookie_prefix' and
+|       'cookie_httponly') will also affect sessions.
 |
 */
-$config['cookie_prefix']	= "";
-$config['cookie_domain']	= "";
-$config['cookie_path']		= "/";
+$config['cookie_prefix']	= '';
+$config['cookie_domain']	= '';
+$config['cookie_path']		= '/';
 $config['cookie_secure']	= FALSE;
+$config['cookie_httponly'] 	= FALSE;
+
+/*
+|--------------------------------------------------------------------------
+| Standardize newlines
+|--------------------------------------------------------------------------
+|
+| Determines whether to standardize newline characters in input data,
+| meaning to replace \r\n, \r, \n occurrences with the PHP_EOL value.
+|
+| This is particularly useful for portability between UNIX-based OSes,
+| (usually \n) and Windows (\r\n).
+|
+*/
+$config['standardize_newlines'] = FALSE;
 
 /*
 |--------------------------------------------------------------------------
@@ -291,6 +431,9 @@
 | Determines whether the XSS filter is always active when GET, POST or
 | COOKIE data is encountered
 |
+| WARNING: This feature is DEPRECATED and currently available only
+|          for backwards compatibility purposes!
+|
 */
 $config['global_xss_filtering'] = FALSE;
 
@@ -305,11 +448,15 @@
 | 'csrf_token_name' = The token name
 | 'csrf_cookie_name' = The cookie name
 | 'csrf_expire' = The number in seconds the token should expire.
+| 'csrf_regenerate' = Regenerate token on every submission
+| 'csrf_exclude_uris' = Array of URIs which ignore CSRF checks
 */
 $config['csrf_protection'] = FALSE;
-$config['csrf_token_name'] = 'csrf_test_name';
-$config['csrf_cookie_name'] = 'csrf_cookie_name';
+$config['csrf_token_name'] = 'csrf_ospos_v24';
+$config['csrf_cookie_name'] = 'csrf_cookie_ospos_v24';
 $config['csrf_expire'] = 7200;
+$config['csrf_regenerate'] = TRUE;
+$config['csrf_exclude_uris'] = array();
 
 /*
 |--------------------------------------------------------------------------
@@ -321,6 +468,9 @@
 | Even if it does, however, not all browsers support compression
 | so enable only if you are reasonably sure your visitors can handle it.
 |
+| Only used if zlib.output_compression is turned off in your php.ini.
+| Please do not use it together with httpd-level output compression.
+|
 | VERY IMPORTANT:  If you are getting a blank page when compression is enabled it
 | means you are prematurely outputting something to your browser. It could
 | even be a line of whitespace at the end of one of your scripts.  For
@@ -335,10 +485,10 @@
 | Master Time Reference
 |--------------------------------------------------------------------------
 |
-| Options are 'local' or 'gmt'.  This pref tells the system whether to use
-| your server's local time as the master 'now' reference, or convert it to
-| GMT.  See the 'date helper' page of the user guide for information
-| regarding date handling.
+| Options are 'local' or any PHP supported timezone. This preference tells
+| the system whether to use your server's local time as the master 'now'
+| reference, or convert it to the configured one timezone. See the 'date
+| helper' page of the user guide for information regarding date handling.
 |
 */
 $config['time_reference'] = 'local';
@@ -353,6 +502,8 @@
 | can rewrite the tags on-the-fly, enabling you to utilize that syntax
 | in your view files.  Options are TRUE or FALSE (boolean)
 |
+| Note: You need to have eval() enabled for this to work.
+|
 */
 $config['rewrite_short_tags'] = FALSE;
 
@@ -362,14 +512,15 @@
 | Reverse Proxy IPs
 |--------------------------------------------------------------------------
 |
-| If your server is behind a reverse proxy, you must whitelist the proxy IP
-| addresses from which CodeIgniter should trust the HTTP_X_FORWARDED_FOR
-| header in order to properly identify the visitor's IP address.
-| Comma-delimited, e.g. '10.0.1.200,10.0.1.201'
+| If your server is behind a reverse proxy, you must whitelist the proxy
+| IP addresses from which CodeIgniter should trust headers such as
+| HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify
+| the visitor's IP address.
+|
+| You can use both an array or a comma-separated list of proxy addresses,
+| as well as specifying whole subnets. Here are a few examples:
 |
+| Comma-separated:	'10.0.1.200,192.168.5.0/24'
+| Array:		array('10.0.1.200', '192.168.5.0/24')
 */
 $config['proxy_ips'] = '';
-
-
-/* End of file config.php */
-/* Location: ./application/config/config.php */
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/constants.php opensourcepos/application/config/constants.php
--- pos-prod/application/config/constants.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/constants.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,4 +1,17 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
+/*
+|--------------------------------------------------------------------------
+| Display Debug backtrace
+|--------------------------------------------------------------------------
+|
+| If set to TRUE, a backtrace will be displayed along with php errors. If
+| error_reporting is disabled, the backtrace will not display, regardless
+| of this setting
+|
+*/
+defined('SHOW_DEBUG_BACKTRACE') OR define('SHOW_DEBUG_BACKTRACE', TRUE);
 
 /*
 |--------------------------------------------------------------------------
@@ -13,10 +26,10 @@
 | always be used to set the mode correctly.
 |
 */
-define('FILE_READ_MODE', 0644);
-define('FILE_WRITE_MODE', 0666);
-define('DIR_READ_MODE', 0755);
-define('DIR_WRITE_MODE', 0777);
+defined('FILE_READ_MODE')  OR define('FILE_READ_MODE', 0644);
+defined('FILE_WRITE_MODE') OR define('FILE_WRITE_MODE', 0666);
+defined('DIR_READ_MODE')   OR define('DIR_READ_MODE', 0755);
+defined('DIR_WRITE_MODE')  OR define('DIR_WRITE_MODE', 0755);
 
 /*
 |--------------------------------------------------------------------------
@@ -26,16 +39,52 @@
 | These modes are used when working with fopen()/popen()
 |
 */
+defined('FOPEN_READ')                           OR define('FOPEN_READ', 'rb');
+defined('FOPEN_READ_WRITE')                     OR define('FOPEN_READ_WRITE', 'r+b');
+defined('FOPEN_WRITE_CREATE_DESTRUCTIVE')       OR define('FOPEN_WRITE_CREATE_DESTRUCTIVE', 'wb'); // truncates existing file data, use with care
+defined('FOPEN_READ_WRITE_CREATE_DESCTRUCTIVE') OR define('FOPEN_READ_WRITE_CREATE_DESTRUCTIVE', 'w+b'); // truncates existing file data, use with care
+defined('FOPEN_WRITE_CREATE')                   OR define('FOPEN_WRITE_CREATE', 'ab');
+defined('FOPEN_READ_WRITE_CREATE')              OR define('FOPEN_READ_WRITE_CREATE', 'a+b');
+defined('FOPEN_WRITE_CREATE_STRICT')            OR define('FOPEN_WRITE_CREATE_STRICT', 'xb');
+defined('FOPEN_READ_WRITE_CREATE_STRICT')       OR define('FOPEN_READ_WRITE_CREATE_STRICT', 'x+b');
 
-define('FOPEN_READ',							'rb');
-define('FOPEN_READ_WRITE',						'r+b');
-define('FOPEN_WRITE_CREATE_DESTRUCTIVE',		'wb'); // truncates existing file data, use with care
-define('FOPEN_READ_WRITE_CREATE_DESTRUCTIVE',	'w+b'); // truncates existing file data, use with care
-define('FOPEN_WRITE_CREATE',					'ab');
-define('FOPEN_READ_WRITE_CREATE',				'a+b');
-define('FOPEN_WRITE_CREATE_STRICT',				'xb');
-define('FOPEN_READ_WRITE_CREATE_STRICT',		'x+b');
-
+/*
+|--------------------------------------------------------------------------
+| Exit Status Codes
+|--------------------------------------------------------------------------
+|
+| Used to indicate the conditions under which the script is exit()ing.
+| While there is no universal standard for error codes, there are some
+| broad conventions.  Three such conventions are mentioned below, for
+| those who wish to make use of them.  The CodeIgniter defaults were
+| chosen for the least overlap with these conventions, while still
+| leaving room for others to be defined in future versions and user
+| applications.
+|
+| The three main conventions used for determining exit status codes
+| are as follows:
+|
+|    Standard C/C++ Library (stdlibc):
+|       http://www.gnu.org/software/libc/manual/html_node/Exit-Status.html
+|       (This link also contains other GNU-specific conventions)
+|    BSD sysexits.h:
+|       http://www.gsp.com/cgi-bin/man.cgi?section=3&topic=sysexits
+|    Bash scripting:
+|       http://tldp.org/LDP/abs/html/exitcodes.html
+|
+*/
+defined('EXIT_SUCCESS')        OR define('EXIT_SUCCESS', 0); // no errors
+defined('EXIT_ERROR')          OR define('EXIT_ERROR', 1); // generic error
+defined('EXIT_CONFIG')         OR define('EXIT_CONFIG', 3); // configuration error
+defined('EXIT_UNKNOWN_FILE')   OR define('EXIT_UNKNOWN_FILE', 4); // file not found
+defined('EXIT_UNKNOWN_CLASS')  OR define('EXIT_UNKNOWN_CLASS', 5); // unknown class
+defined('EXIT_UNKNOWN_METHOD') OR define('EXIT_UNKNOWN_METHOD', 6); // unknown class member
+defined('EXIT_USER_INPUT')     OR define('EXIT_USER_INPUT', 7); // invalid user input
+defined('EXIT_DATABASE')       OR define('EXIT_DATABASE', 8); // database error
+defined('EXIT__AUTO_MIN')      OR define('EXIT__AUTO_MIN', 9); // lowest automatically-assigned error code
+defined('EXIT__AUTO_MAX')      OR define('EXIT__AUTO_MAX', 125); // highest automatically-assigned error code
 
-/* End of file constants.php */
-/* Location: ./application/config/constants.php */
\ No newline at end of file
+/*
+ | Precision for calculations performed on decimals 
+ */
+define("PRECISION", 5);
Only in pos-prod/application/config: database.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/database.php.tmpl opensourcepos/application/config/database.php.tmpl
--- pos-prod/application/config/database.php.tmpl	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/database.php.tmpl	2016-05-23 15:32:31.796841035 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------
 | DATABASE CONNECTIVITY SETTINGS
@@ -12,14 +14,17 @@
 | EXPLANATION OF VARIABLES
 | -------------------------------------------------------------------
 |
+|	['dsn']      The full DSN string describe a connection to the database.
 |	['hostname'] The hostname of your database server.
 |	['username'] The username used to connect to the database
 |	['password'] The password used to connect to the database
 |	['database'] The name of the database you want to connect to
-|	['dbdriver'] The database type. ie: mysql.  Currently supported:
-				 mysql, mysqli, postgre, odbc, mssql, sqlite, oci8
+|	['dbdriver'] The database driver. e.g.: mysqli.
+|			Currently supported:
+|				 cubrid, ibase, mssql, mysql, mysqli, oci8,
+|				 odbc, pdo, postgre, sqlite, sqlite3, sqlsrv
 |	['dbprefix'] You can add an optional prefix, which will be added
-|				 to the table name when using the  Active Record class
+|				 to the table name when using the  Query Builder class
 |	['pconnect'] TRUE/FALSE - Whether to use a persistent connection
 |	['db_debug'] TRUE/FALSE - Whether database errors should be displayed.
 |	['cache_on'] TRUE/FALSE - Enables/disables query caching
@@ -34,36 +39,58 @@
 | 				 multi-byte character set and are running versions lower than these.
 | 				 Sites using Latin-1 or UTF-8 database character set and collation are unaffected.
 |	['swap_pre'] A default table prefix that should be swapped with the dbprefix
-|	['autoinit'] Whether or not to automatically initialize the database.
+|	['encrypt']  Whether or not to use an encrypted connection.
+|
+|			'mysql' (deprecated), 'sqlsrv' and 'pdo/sqlsrv' drivers accept TRUE/FALSE
+|			'mysqli' and 'pdo/mysql' drivers accept an array with the following options:
+|
+|				'ssl_key'    - Path to the private key file
+|				'ssl_cert'   - Path to the public key certificate file
+|				'ssl_ca'     - Path to the certificate authority file
+|				'ssl_capath' - Path to a directory containing trusted CA certificats in PEM format
+|				'ssl_cipher' - List of *allowed* ciphers to be used for the encryption, separated by colons (':')
+|				'ssl_verify' - TRUE/FALSE; Whether verify the server certificate or not ('mysqli' only)
+|
+|	['compress'] Whether or not to use client compression (MySQL only)
 |	['stricton'] TRUE/FALSE - forces 'Strict Mode' connections
 |							- good for ensuring strict SQL while developing
+|	['ssl_options']	Used to set various SSL options that can be used when making SSL connections.
+|	['failover'] array - A array with 0 or more data for connections if the main should fail.
+|	['save_queries'] TRUE/FALSE - Whether to "save" all executed queries.
+| 				NOTE: Disabling this will also effectively disable both
+| 				$this->db->last_query() and profiling of DB queries.
+| 				When you run a query, with this setting set to TRUE (default),
+| 				CodeIgniter will store the SQL statement for debugging purposes.
+| 				However, this may cause high memory usage, especially if you run
+| 				a lot of SQL queries ... disable this to avoid that problem.
 |
 | The $active_group variable lets you choose which connection group to
 | make active.  By default there is only one group (the 'default' group).
 |
-| The $active_record variables lets you determine whether or not to load
-| the active record class
+| The $query_builder variables lets you determine whether or not to load
+| the query builder class.
 */
-
 $active_group = 'default';
-$active_record = TRUE;
-
-$db['default']['hostname'] = 'localhost';
-$db['default']['username'] = '';
-$db['default']['password'] = '';
-$db['default']['database'] = '';
-$db['default']['dbdriver'] = 'mysql';
-$db['default']['dbprefix'] = 'ospos_';
-$db['default']['pconnect'] = FALSE;
-$db['default']['db_debug'] = TRUE;
-$db['default']['cache_on'] = FALSE;
-$db['default']['cachedir'] = '';
-$db['default']['char_set'] = 'utf8';
-$db['default']['dbcollat'] = 'utf8_general_ci';
-$db['default']['swap_pre'] = '';
-$db['default']['autoinit'] = TRUE;
-$db['default']['stricton'] = FALSE;
-
+$query_builder = TRUE;
 
-/* End of file database.php */
-/* Location: ./application/config/database.php */
\ No newline at end of file
+$db['default'] = array(
+	'dsn'	=> '',
+	'hostname' => 'localhost',
+	'username' => '',
+	'password' => '',
+	'database' => '',
+	'dbdriver' => 'mysqli',
+	'dbprefix' => 'ospos_',
+	'pconnect' => FALSE,
+	'db_debug' => (ENVIRONMENT !== 'production'),
+	'cache_on' => FALSE,
+	'cachedir' => '',
+	'char_set' => 'utf8',
+	'dbcollat' => 'utf8_general_ci',
+	'swap_pre' => '',
+	'encrypt' => FALSE,
+	'compress' => FALSE,
+	'stricton' => FALSE,
+	'failover' => array(),
+	'save_queries' => TRUE
+);
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/doctypes.php opensourcepos/application/config/doctypes.php
--- pos-prod/application/config/doctypes.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/doctypes.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,15 +1,24 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 $_doctypes = array(
 					'xhtml11'		=> '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
 					'xhtml1-strict'	=> '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
 					'xhtml1-trans'	=> '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
 					'xhtml1-frame'	=> '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
+	'xhtml-basic11' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
 					'html5'			=> '<!DOCTYPE html>',
 					'html4-strict'	=> '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">',
 					'html4-trans'	=> '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">',
-					'html4-frame'	=> '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">'
+	'html4-frame' => '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">',
+	'mathml1' => '<!DOCTYPE math SYSTEM "http://www.w3.org/Math/DTD/mathml1/mathml.dtd">',
+	'mathml2' => '<!DOCTYPE math PUBLIC "-//W3C//DTD MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/mathml2.dtd">',
+	'svg10' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">',
+	'svg11' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',
+	'svg11-basic' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Basic//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-basic.dtd">',
+	'svg11-tiny' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Tiny//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-tiny.dtd">',
+	'xhtml-math-svg-xh' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">',
+	'xhtml-math-svg-sh' => '<!DOCTYPE svg:svg PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">',
+	'xhtml-rdfa-1' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">',
+	'xhtml-rdfa-2' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.1//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd">'
 					);
-
-/* End of file doctypes.php */
-/* Location: ./application/config/doctypes.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/foreign_chars.php opensourcepos/application/config/foreign_chars.php
--- pos-prod/application/config/foreign_chars.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/foreign_chars.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------
 | Foreign Characters
@@ -14,51 +16,88 @@
 	'/Ä/' => 'Ae',
 	'/Ü/' => 'Ue',
 	'/Ö/' => 'Oe',
-	'/À|Á|Â|Ã|Ä|Å|Ǻ|Ā|Ă|Ą|Ǎ/' => 'A',
-	'/à|á|â|ã|å|ǻ|ā|ă|ą|ǎ|ª/' => 'a',
+	'/À|Á|Â|Ã|Ä|Å|Ǻ|Ā|Ă|Ą|Ǎ|Α|Ά|Ả|Ạ|Ầ|Ẫ|Ẩ|Ậ|Ằ|Ắ|Ẵ|Ẳ|Ặ|А/' => 'A',
+	'/à|á|â|ã|å|ǻ|ā|ă|ą|ǎ|ª|α|ά|ả|ạ|ầ|ấ|ẫ|ẩ|ậ|ằ|ắ|ẵ|ẳ|ặ|а/' => 'a',
+	'/Б/' => 'B',
+	'/б/' => 'b',
 	'/Ç|Ć|Ĉ|Ċ|Č/' => 'C',
 	'/ç|ć|ĉ|ċ|č/' => 'c',
-	'/Ð|Ď|Đ/' => 'D',
-	'/ð|ď|đ/' => 'd',
-	'/È|É|Ê|Ë|Ē|Ĕ|Ė|Ę|Ě/' => 'E',
-	'/è|é|ê|ë|ē|ĕ|ė|ę|ě/' => 'e',
-	'/Ĝ|Ğ|Ġ|Ģ/' => 'G',
-	'/ĝ|ğ|ġ|ģ/' => 'g',
+	'/Д/' => 'D',
+	'/д/' => 'd',
+	'/Ð|Ď|Đ|Δ/' => 'Dj',
+	'/ð|ď|đ|δ/' => 'dj',
+	'/È|É|Ê|Ë|Ē|Ĕ|Ė|Ę|Ě|Ε|Έ|Ẽ|Ẻ|Ẹ|Ề|Ế|Ễ|Ể|Ệ|Е|Э/' => 'E',
+	'/è|é|ê|ë|ē|ĕ|ė|ę|ě|έ|ε|ẽ|ẻ|ẹ|ề|ế|ễ|ể|ệ|е|э/' => 'e',
+	'/Ф/' => 'F',
+	'/ф/' => 'f',
+	'/Ĝ|Ğ|Ġ|Ģ|Γ|Г|Ґ/' => 'G',
+	'/ĝ|ğ|ġ|ģ|γ|г|ґ/' => 'g',
 	'/Ĥ|Ħ/' => 'H',
 	'/ĥ|ħ/' => 'h',
-	'/Ì|Í|Î|Ï|Ĩ|Ī|Ĭ|Ǐ|Į|İ/' => 'I',
-	'/ì|í|î|ï|ĩ|ī|ĭ|ǐ|į|ı/' => 'i',
+	'/Ì|Í|Î|Ï|Ĩ|Ī|Ĭ|Ǐ|Į|İ|Η|Ή|Ί|Ι|Ϊ|Ỉ|Ị|И|Ы/' => 'I',
+	'/ì|í|î|ï|ĩ|ī|ĭ|ǐ|į|ı|η|ή|ί|ι|ϊ|ỉ|ị|и|ы|ї/' => 'i',
 	'/Ĵ/' => 'J',
 	'/ĵ/' => 'j',
-	'/Ķ/' => 'K',
-	'/ķ/' => 'k',
-	'/Ĺ|Ļ|Ľ|Ŀ|Ł/' => 'L',
-	'/ĺ|ļ|ľ|ŀ|ł/' => 'l',
-	'/Ñ|Ń|Ņ|Ň/' => 'N',
-	'/ñ|ń|ņ|ň|ŉ/' => 'n',
-	'/Ò|Ó|Ô|Õ|Ō|Ŏ|Ǒ|Ő|Ơ|Ø|Ǿ/' => 'O',
-	'/ò|ó|ô|õ|ō|ŏ|ǒ|ő|ơ|ø|ǿ|º/' => 'o',
-	'/Ŕ|Ŗ|Ř/' => 'R',
-	'/ŕ|ŗ|ř/' => 'r',
-	'/Ś|Ŝ|Ş|Š/' => 'S',
-	'/ś|ŝ|ş|š|ſ/' => 's',
-	'/Ţ|Ť|Ŧ/' => 'T',
-	'/ţ|ť|ŧ/' => 't',
-	'/Ù|Ú|Û|Ũ|Ū|Ŭ|Ů|Ű|Ų|Ư|Ǔ|Ǖ|Ǘ|Ǚ|Ǜ/' => 'U',
-	'/ù|ú|û|ũ|ū|ŭ|ů|ű|ų|ư|ǔ|ǖ|ǘ|ǚ|ǜ/' => 'u',
-	'/Ý|Ÿ|Ŷ/' => 'Y',
-	'/ý|ÿ|ŷ/' => 'y',
+	'/Ķ|Κ|К/' => 'K',
+	'/ķ|κ|к/' => 'k',
+	'/Ĺ|Ļ|Ľ|Ŀ|Ł|Λ|Л/' => 'L',
+	'/ĺ|ļ|ľ|ŀ|ł|λ|л/' => 'l',
+	'/М/' => 'M',
+	'/м/' => 'm',
+	'/Ñ|Ń|Ņ|Ň|Ν|Н/' => 'N',
+	'/ñ|ń|ņ|ň|ŉ|ν|н/' => 'n',
+	'/Ò|Ó|Ô|Õ|Ō|Ŏ|Ǒ|Ő|Ơ|Ø|Ǿ|Ο|Ό|Ω|Ώ|Ỏ|Ọ|Ồ|Ố|Ỗ|Ổ|Ộ|Ờ|Ớ|Ỡ|Ở|Ợ|О/' => 'O',
+	'/ò|ó|ô|õ|ō|ŏ|ǒ|ő|ơ|ø|ǿ|º|ο|ό|ω|ώ|ỏ|ọ|ồ|ố|ỗ|ổ|ộ|ờ|ớ|ỡ|ở|ợ|о/' => 'o',
+	'/П/' => 'P',
+	'/п/' => 'p',
+	'/Ŕ|Ŗ|Ř|Ρ|Р/' => 'R',
+	'/ŕ|ŗ|ř|ρ|р/' => 'r',
+	'/Ś|Ŝ|Ş|Ș|Š|Σ|С/' => 'S',
+	'/ś|ŝ|ş|ș|š|ſ|σ|ς|с/' => 's',
+	'/Ț|Ţ|Ť|Ŧ|τ|Т/' => 'T',
+	'/ț|ţ|ť|ŧ|т/' => 't',
+	'/Þ|þ/' => 'th',
+	'/Ù|Ú|Û|Ũ|Ū|Ŭ|Ů|Ű|Ų|Ư|Ǔ|Ǖ|Ǘ|Ǚ|Ǜ|Ũ|Ủ|Ụ|Ừ|Ứ|Ữ|Ử|Ự|У/' => 'U',
+	'/ù|ú|û|ũ|ū|ŭ|ů|ű|ų|ư|ǔ|ǖ|ǘ|ǚ|ǜ|υ|ύ|ϋ|ủ|ụ|ừ|ứ|ữ|ử|ự|у/' => 'u',
+	'/Ý|Ÿ|Ŷ|Υ|Ύ|Ϋ|Ỳ|Ỹ|Ỷ|Ỵ|Й/' => 'Y',
+	'/ý|ÿ|ŷ|ỳ|ỹ|ỷ|ỵ|й/' => 'y',
+	'/В/' => 'V',
+	'/в/' => 'v',
 	'/Ŵ/' => 'W',
 	'/ŵ/' => 'w',
-	'/Ź|Ż|Ž/' => 'Z',
-	'/ź|ż|ž/' => 'z',
+	'/Ź|Ż|Ž|Ζ|З/' => 'Z',
+	'/ź|ż|ž|ζ|з/' => 'z',
 	'/Æ|Ǽ/' => 'AE',
 	'/ß/'=> 'ss',
 	'/Ĳ/' => 'IJ',
 	'/ĳ/' => 'ij',
 	'/Œ/' => 'OE',
-	'/ƒ/' => 'f'
+	'/ƒ/' => 'f',
+	'/ξ/' => 'ks',
+	'/π/' => 'p',
+	'/β/' => 'v',
+	'/μ/' => 'm',
+	'/ψ/' => 'ps',
+	'/Ё/' => 'Yo',
+	'/ё/' => 'yo',
+	'/Є/' => 'Ye',
+	'/є/' => 'ye',
+	'/Ї/' => 'Yi',
+	'/Ж/' => 'Zh',
+	'/ж/' => 'zh',
+	'/Х/' => 'Kh',
+	'/х/' => 'kh',
+	'/Ц/' => 'Ts',
+	'/ц/' => 'ts',
+	'/Ч/' => 'Ch',
+	'/ч/' => 'ch',
+	'/Ш/' => 'Sh',
+	'/ш/' => 'sh',
+	'/Щ/' => 'Shch',
+	'/щ/' => 'shch',
+	'/Ъ|ъ|Ь|ь/' => '',
+	'/Ю/' => 'Yu',
+	'/ю/' => 'yu',
+	'/Я/' => 'Ya',
+	'/я/' => 'ya'
 );
-
-/* End of file foreign_chars.php */
-/* Location: ./application/config/foreign_chars.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/hooks.php opensourcepos/application/config/hooks.php
--- pos-prod/application/config/hooks.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/hooks.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------------
 | Hooks
@@ -6,7 +8,7 @@
 | This file lets you define "hooks" to extend CI without hacking the core
 | files.  Please see the user guide for info:
 |
-|	http://codeigniter.com/user_guide/general/hooks.html
+|	https://codeigniter.com/user_guide/general/hooks.html
 |
 */
 $hook['post_controller_constructor'] = array(
@@ -15,7 +17,3 @@
                                 'filename' => 'load_config.php',
                                 'filepath' => 'hooks'
                                 );
-
-
-/* End of file hooks.php */
-/* Location: ./application/config/hooks.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/index.html opensourcepos/application/config/index.html
--- pos-prod/application/config/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/index.html	2016-05-23 15:32:31.796841035 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in opensourcepos/application/config: memcached.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/migration.php opensourcepos/application/config/migration.php
--- pos-prod/application/config/migration.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/migration.php	2016-05-23 15:32:31.796841035 -0700
@@ -1,15 +1,63 @@
-<?php defined('BASEPATH') OR exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 |--------------------------------------------------------------------------
 | Enable/Disable Migrations
 |--------------------------------------------------------------------------
 |
-| Migrations are disabled by default but should be enabled 
-| whenever you intend to do a schema migration.
+| Migrations are disabled by default for security reasons.
+| You should enable migrations whenever you intend to do a schema migration
+| and disable it back when you're done.
 |
 */
 $config['migration_enabled'] = FALSE;
 
+/*
+|--------------------------------------------------------------------------
+| Migration Type
+|--------------------------------------------------------------------------
+|
+| Migration file names may be based on a sequential identifier or on
+| a timestamp. Options are:
+|
+|   'sequential' = Sequential migration naming (001_add_blog.php)
+|   'timestamp'  = Timestamp migration naming (20121031104401_add_blog.php)
+|                  Use timestamp format YYYYMMDDHHIISS.
+|
+| Note: If this configuration value is missing the Migration library
+|       defaults to 'sequential' for backward compatibility with CI2.
+|
+*/
+$config['migration_type'] = 'timestamp';
+
+/*
+|--------------------------------------------------------------------------
+| Migrations table
+|--------------------------------------------------------------------------
+|
+| This is the name of the table that will store the current migrations state.
+| When migrations runs it will store in a database table which migration
+| level the system is at. It then compares the migration level in this
+| table to the $config['migration_version'] if they are not the same it
+| will migrate up. This must be set.
+|
+*/
+$config['migration_table'] = 'migrations';
+
+/*
+|--------------------------------------------------------------------------
+| Auto Migrate To Latest
+|--------------------------------------------------------------------------
+|
+| If this is set to TRUE when you load the migrations class and have
+| $config['migration_enabled'] set to TRUE the system will auto migrate
+| to your latest migration (whatever $config['migration_version'] is
+| set to). This way you do not have to call migrations anywhere else
+| in your code to have the latest migration.
+|
+*/
+$config['migration_auto_latest'] = FALSE;
 
 /*
 |--------------------------------------------------------------------------
@@ -17,7 +65,7 @@
 |--------------------------------------------------------------------------
 |
 | This is used to set migration version that the file system should be on.
-| If you run $this->migration->latest() this is the version that schema will
+| If you run $this->migration->current() this is the version that schema will
 | be upgraded / downgraded to.
 |
 */
@@ -35,6 +82,3 @@
 |
 */
 $config['migration_path'] = APPPATH . 'migrations/';
-
-
-/* End of file migration.php */
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/mimes.php opensourcepos/application/config/mimes.php
--- pos-prod/application/config/mimes.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/mimes.php	2016-05-23 15:32:31.797841020 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------
 | MIME TYPES
@@ -7,30 +9,31 @@
 | Upload class to help identify allowed file types.
 |
 */
-
-$mimes = array(	'hqx'	=>	'application/mac-binhex40',
+return array(
+	'hqx'	=>	array('application/mac-binhex40', 'application/mac-binhex', 'application/x-binhex40', 'application/x-mac-binhex40'),
 				'cpt'	=>	'application/mac-compactpro',
-				'csv'	=>	array('text/x-comma-separated-values', 'text/comma-separated-values', 'application/octet-stream', 'application/vnd.ms-excel', 'application/x-csv', 'text/x-csv', 'text/csv', 'application/csv', 'application/excel', 'application/vnd.msexcel'),
-				'bin'	=>	'application/macbinary',
+	'csv'	=>	array('text/x-comma-separated-values', 'text/comma-separated-values', 'application/octet-stream', 'application/vnd.ms-excel', 'application/x-csv', 'text/x-csv', 'text/csv', 'application/csv', 'application/excel', 'application/vnd.msexcel', 'text/plain'),
+	'bin'	=>	array('application/macbinary', 'application/mac-binary', 'application/octet-stream', 'application/x-binary', 'application/x-macbinary'),
 				'dms'	=>	'application/octet-stream',
 				'lha'	=>	'application/octet-stream',
 				'lzh'	=>	'application/octet-stream',
 				'exe'	=>	array('application/octet-stream', 'application/x-msdownload'),
 				'class'	=>	'application/octet-stream',
-				'psd'	=>	'application/x-photoshop',
+	'psd'	=>	array('application/x-photoshop', 'image/vnd.adobe.photoshop'),
 				'so'	=>	'application/octet-stream',
 				'sea'	=>	'application/octet-stream',
 				'dll'	=>	'application/octet-stream',
 				'oda'	=>	'application/oda',
-				'pdf'	=>	array('application/pdf', 'application/x-download'),
-				'ai'	=>	'application/postscript',
+	'pdf'	=>	array('application/pdf', 'application/force-download', 'application/x-download', 'binary/octet-stream'),
+	'ai'	=>	array('application/pdf', 'application/postscript'),
 				'eps'	=>	'application/postscript',
 				'ps'	=>	'application/postscript',
 				'smi'	=>	'application/smil',
 				'smil'	=>	'application/smil',
 				'mif'	=>	'application/vnd.mif',
-				'xls'	=>	array('application/excel', 'application/vnd.ms-excel', 'application/msexcel'),
-				'ppt'	=>	array('application/powerpoint', 'application/vnd.ms-powerpoint'),
+	'xls'	=>	array('application/vnd.ms-excel', 'application/msexcel', 'application/x-msexcel', 'application/x-ms-excel', 'application/x-excel', 'application/x-dos_ms_excel', 'application/xls', 'application/x-xls', 'application/excel', 'application/download', 'application/vnd.ms-office', 'application/msword'),
+	'ppt'	=>	array('application/powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-office', 'application/msword'),
+	'pptx'	=> 	array('application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/x-zip', 'application/zip'),
 				'wbxml'	=>	'application/wbxml',
 				'wmlc'	=>	'application/wmlc',
 				'dcr'	=>	'application/x-director',
@@ -39,26 +42,29 @@
 				'dvi'	=>	'application/x-dvi',
 				'gtar'	=>	'application/x-gtar',
 				'gz'	=>	'application/x-gzip',
-				'php'	=>	'application/x-httpd-php',
+	'gzip'  =>	'application/x-gzip',
+	'php'	=>	array('application/x-httpd-php', 'application/php', 'application/x-php', 'text/php', 'text/x-php', 'application/x-httpd-php-source'),
 				'php4'	=>	'application/x-httpd-php',
 				'php3'	=>	'application/x-httpd-php',
 				'phtml'	=>	'application/x-httpd-php',
 				'phps'	=>	'application/x-httpd-php-source',
-				'js'	=>	'application/x-javascript',
+	'js'	=>	array('application/x-javascript', 'text/plain'),
 				'swf'	=>	'application/x-shockwave-flash',
 				'sit'	=>	'application/x-stuffit',
 				'tar'	=>	'application/x-tar',
 				'tgz'	=>	array('application/x-tar', 'application/x-gzip-compressed'),
+	'z'	=>	'application/x-compress',
 				'xhtml'	=>	'application/xhtml+xml',
 				'xht'	=>	'application/xhtml+xml',
-				'zip'	=>  array('application/x-zip', 'application/zip', 'application/x-zip-compressed'),
+	'zip'	=>	array('application/x-zip', 'application/zip', 'application/x-zip-compressed', 'application/s-compressed', 'multipart/x-zip'),
+	'rar'	=>	array('application/x-rar', 'application/rar', 'application/x-rar-compressed'),
 				'mid'	=>	'audio/midi',
 				'midi'	=>	'audio/midi',
 				'mpga'	=>	'audio/mpeg',
 				'mp2'	=>	'audio/mpeg',
 				'mp3'	=>	array('audio/mpeg', 'audio/mpg', 'audio/mpeg3', 'audio/mp3'),
-				'aif'	=>	'audio/x-aiff',
-				'aiff'	=>	'audio/x-aiff',
+	'aif'	=>	array('audio/x-aiff', 'audio/aiff'),
+	'aiff'	=>	array('audio/x-aiff', 'audio/aiff'),
 				'aifc'	=>	'audio/x-aiff',
 				'ram'	=>	'audio/x-pn-realaudio',
 				'rm'	=>	'audio/x-pn-realaudio',
@@ -66,41 +72,96 @@
 				'ra'	=>	'audio/x-realaudio',
 				'rv'	=>	'video/vnd.rn-realvideo',
 				'wav'	=>	array('audio/x-wav', 'audio/wave', 'audio/wav'),
-				'bmp'	=>	array('image/bmp', 'image/x-windows-bmp'),
+	'bmp'	=>	array('image/bmp', 'image/x-bmp', 'image/x-bitmap', 'image/x-xbitmap', 'image/x-win-bitmap', 'image/x-windows-bmp', 'image/ms-bmp', 'image/x-ms-bmp', 'application/bmp', 'application/x-bmp', 'application/x-win-bitmap'),
 				'gif'	=>	'image/gif',
 				'jpeg'	=>	array('image/jpeg', 'image/pjpeg'),
 				'jpg'	=>	array('image/jpeg', 'image/pjpeg'),
 				'jpe'	=>	array('image/jpeg', 'image/pjpeg'),
+	'jp2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'j2k'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'jpf'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'jpg2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'jpx'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'jpm'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'mj2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
+	'mjp2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
 				'png'	=>	array('image/png',  'image/x-png'),
 				'tiff'	=>	'image/tiff',
 				'tif'	=>	'image/tiff',
-				'css'	=>	'text/css',
-				'html'	=>	'text/html',
-				'htm'	=>	'text/html',
-				'shtml'	=>	'text/html',
+	'css'	=>	array('text/css', 'text/plain'),
+	'html'	=>	array('text/html', 'text/plain'),
+	'htm'	=>	array('text/html', 'text/plain'),
+	'shtml'	=>	array('text/html', 'text/plain'),
 				'txt'	=>	'text/plain',
 				'text'	=>	'text/plain',
 				'log'	=>	array('text/plain', 'text/x-log'),
 				'rtx'	=>	'text/richtext',
 				'rtf'	=>	'text/rtf',
-				'xml'	=>	'text/xml',
-				'xsl'	=>	'text/xml',
+	'xml'	=>	array('application/xml', 'text/xml', 'text/plain'),
+	'xsl'	=>	array('application/xml', 'text/xsl', 'text/xml'),
 				'mpeg'	=>	'video/mpeg',
 				'mpg'	=>	'video/mpeg',
 				'mpe'	=>	'video/mpeg',
 				'qt'	=>	'video/quicktime',
 				'mov'	=>	'video/quicktime',
-				'avi'	=>	'video/x-msvideo',
+	'avi'	=>	array('video/x-msvideo', 'video/msvideo', 'video/avi', 'application/x-troff-msvideo'),
 				'movie'	=>	'video/x-sgi-movie',
-				'doc'	=>	'application/msword',
-				'docx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip'),
-				'xlsx'	=>	array('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip'),
+	'doc'	=>	array('application/msword', 'application/vnd.ms-office'),
+	'docx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip', 'application/msword', 'application/x-zip'),
+	'dot'	=>	array('application/msword', 'application/vnd.ms-office'),
+	'dotx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip', 'application/msword'),
+	'xlsx'	=>	array('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'application/vnd.ms-excel', 'application/msword', 'application/x-zip'),
 				'word'	=>	array('application/msword', 'application/octet-stream'),
 				'xl'	=>	'application/excel',
 				'eml'	=>	'message/rfc822',
-				'json' => array('application/json', 'text/json')
+	'json'  =>	array('application/json', 'text/json'),
+	'pem'   =>	array('application/x-x509-user-cert', 'application/x-pem-file', 'application/octet-stream'),
+	'p10'   =>	array('application/x-pkcs10', 'application/pkcs10'),
+	'p12'   =>	'application/x-pkcs12',
+	'p7a'   =>	'application/x-pkcs7-signature',
+	'p7c'   =>	array('application/pkcs7-mime', 'application/x-pkcs7-mime'),
+	'p7m'   =>	array('application/pkcs7-mime', 'application/x-pkcs7-mime'),
+	'p7r'   =>	'application/x-pkcs7-certreqresp',
+	'p7s'   =>	'application/pkcs7-signature',
+	'crt'   =>	array('application/x-x509-ca-cert', 'application/x-x509-user-cert', 'application/pkix-cert'),
+	'crl'   =>	array('application/pkix-crl', 'application/pkcs-crl'),
+	'der'   =>	'application/x-x509-ca-cert',
+	'kdb'   =>	'application/octet-stream',
+	'pgp'   =>	'application/pgp',
+	'gpg'   =>	'application/gpg-keys',
+	'sst'   =>	'application/octet-stream',
+	'csr'   =>	'application/octet-stream',
+	'rsa'   =>	'application/x-pkcs7',
+	'cer'   =>	array('application/pkix-cert', 'application/x-x509-ca-cert'),
+	'3g2'   =>	'video/3gpp2',
+	'3gp'   =>	array('video/3gp', 'video/3gpp'),
+	'mp4'   =>	'video/mp4',
+	'm4a'   =>	'audio/x-m4a',
+	'f4v'   =>	array('video/mp4', 'video/x-f4v'),
+	'flv'	=>	'video/x-flv',
+	'webm'	=>	'video/webm',
+	'aac'   =>	'audio/x-acc',
+	'm4u'   =>	'application/vnd.mpegurl',
+	'm3u'   =>	'text/plain',
+	'xspf'  =>	'application/xspf+xml',
+	'vlc'   =>	'application/videolan',
+	'wmv'   =>	array('video/x-ms-wmv', 'video/x-ms-asf'),
+	'au'    =>	'audio/x-au',
+	'ac3'   =>	'audio/ac3',
+	'flac'  =>	'audio/x-flac',
+	'ogg'   =>	array('audio/ogg', 'video/ogg', 'application/ogg'),
+	'kmz'	=>	array('application/vnd.google-earth.kmz', 'application/zip', 'application/x-zip'),
+	'kml'	=>	array('application/vnd.google-earth.kml+xml', 'application/xml', 'text/xml'),
+	'ics'	=>	'text/calendar',
+	'ical'	=>	'text/calendar',
+	'zsh'	=>	'text/x-scriptzsh',
+	'7zip'	=>	array('application/x-compressed', 'application/x-zip-compressed', 'application/zip', 'multipart/x-zip'),
+	'cdr'	=>	array('application/cdr', 'application/coreldraw', 'application/x-cdr', 'application/x-coreldraw', 'image/cdr', 'image/x-cdr', 'zz-application/zz-winassoc-cdr'),
+	'wma'	=>	array('audio/x-ms-wma', 'video/x-ms-asf'),
+	'jar'	=>	array('application/java-archive', 'application/x-java-application', 'application/x-jar', 'application/x-compressed'),
+	'svg'	=>	array('image/svg+xml', 'application/xml', 'text/xml'),
+	'vcf'	=>	'text/x-vcard',
+	'srt'	=>	array('text/srt', 'text/plain'),
+	'vtt'	=>	array('text/vtt', 'text/plain'),
+	'ico'	=>	array('image/x-icon', 'image/x-ico', 'image/vnd.microsoft.icon')
 			);
-
-
-/* End of file mimes.php */
-/* Location: ./application/config/mimes.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/profiler.php opensourcepos/application/config/profiler.php
--- pos-prod/application/config/profiler.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/profiler.php	2016-05-23 15:32:31.797841020 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------------
 | Profiler Sections
@@ -7,11 +9,6 @@
 | data are displayed when the Profiler is enabled.
 | Please see the user guide for info:
 |
-|	http://codeigniter.com/user_guide/general/profiling.html
+|	https://codeigniter.com/user_guide/general/profiling.html
 |
 */
-
-
-
-/* End of file profiler.php */
-/* Location: ./application/config/profiler.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/routes.php opensourcepos/application/config/routes.php
--- pos-prod/application/config/routes.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/routes.php	2016-05-23 15:32:31.797841020 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------------
 | URI ROUTING
@@ -17,13 +19,13 @@
 |
 | Please see the user guide for complete details:
 |
-|	http://codeigniter.com/user_guide/general/routing.html
+|	https://codeigniter.com/user_guide/general/routing.html
 |
 | -------------------------------------------------------------------------
 | RESERVED ROUTES
 | -------------------------------------------------------------------------
 |
-| There area two reserved routes:
+| There are three reserved routes:
 |
 |	$route['default_controller'] = 'welcome';
 |
@@ -33,32 +35,44 @@
 |
 |	$route['404_override'] = 'errors/page_missing';
 |
-| This route will tell the Router what URI segments to use if those provided
-| in the URL cannot be matched to a valid route.
+| This route will tell the Router which controller/method to use if those
+| provided in the URL cannot be matched to a valid route.
+|
+|	$route['translate_uri_dashes'] = FALSE;
+|
+| This is not exactly a route, but allows you to automatically route
+| controller and method names that contain dashes. '-' isn't a valid
+| class or method name character, so it requires translation.
+| When you set this option to TRUE, it will replace ALL dashes in the
+| controller and method URI segments.
 |
+| Examples:	my-controller/index	-> my_controller/index
+|		my-controller/my-method	-> my_controller/my_method
 */
 
-$route['default_controller'] = "login";
-$route['no_access/(:any)'] = "no_access/index/$1";
-$route['reports/(summary_:any)/(:any)/(:any)'] = "reports/$1/$2/$3";
-$route['reports/summary_:any'] = "reports/date_input_excel_export";
-$route['reports/(graphical_:any)/(:any)/(:any)'] = "reports/$1/$2/$3";
-$route['reports/graphical_:any'] = "reports/date_input";
-$route['reports/(inventory_:any)/(:any)'] = "reports/$1/$2";
-$route['reports/inventory_:any'] = "reports/excel_export";
-
-$route['reports/(detailed_sales)/(:any)/(:any)'] = "reports/$1/$2/$3";
-$route['reports/detailed_sales'] = "reports/date_input";
-$route['reports/(detailed_receivings)/(:any)/(:any)'] = "reports/$1/$2/$3";
-$route['reports/detailed_receivings'] = "reports/date_input_recv";
-$route['reports/(specific_:any)/(:any)/(:any)/(:any)'] = "reports/$1/$2/$3/$4";
-$route['reports/specific_customer'] = "reports/specific_customer_input";
-$route['reports/specific_employee'] = "reports/specific_employee_input";
-$route['reports/specific_discount'] = "reports/specific_discount_input";
-
-$route['scaffolding_trigger'] = "";
+$route['default_controller'] = 'login';
+$route['no_access/([^/]+)'] = 'no_access/index/$1';
+$route['no_access/([^/]+)/([^/]+)'] = 'no_access/index/$1/$2';
+$route['sales/index/([^/]+)'] = 'sales/manage/$1';
+$route['sales/index/([^/]+)/([^/]+)'] = 'sales/manage/$1/$2';
+$route['sales/index/([^/]+)/([^/]+)/([^/]+)'] = 'sales/manage/$1/$2/$3';
+$route['reports/(summary_:any)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3';
+$route['reports/summary_:any'] = 'reports/date_input_excel_export';
+$route['reports/(graphical_:any)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3';
+$route['reports/graphical_:any'] = 'reports/date_input';
+$route['reports/(inventory_:any)/([^/]+)'] = 'reports/$1/$2';
+$route['reports/inventory_:any'] = 'reports/excel_export';
+$route['reports/inventory_summary'] = 'reports/inventory_summary_input';
+$route['reports/(inventory_summary)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3/$4';
 
-$route['404_override'] = 'errors/page_missing';
+$route['reports/(detailed_sales)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3$/$4';
+$route['reports/detailed_sales'] = 'reports/date_input_sales';
+$route['reports/(detailed_receivings)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3/$4';
+$route['reports/detailed_receivings'] = 'reports/date_input_recv';
+$route['reports/(specific_:any)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3/$4';
+$route['reports/specific_customer'] = 'reports/specific_customer_input';
+$route['reports/specific_employee'] = 'reports/specific_employee_input';
+$route['reports/specific_discount'] = 'reports/specific_discount_input';
 
-/* End of file routes.php */
-/* Location: ./application/config/routes.php */
\ No newline at end of file
+$route['404_override'] = '';
+$route['translate_uri_dashes'] = FALSE;
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/smileys.php opensourcepos/application/config/smileys.php
--- pos-prod/application/config/smileys.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/smileys.php	2016-05-23 15:32:31.797841020 -0700
@@ -1,17 +1,18 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------
 | SMILEYS
 | -------------------------------------------------------------------
 | This file contains an array of smileys for use with the emoticon helper.
-| Individual images can be used to replace multiple simileys.  For example:
+| Individual images can be used to replace multiple smileys.  For example:
 | :-) and :) use the same image replacement.
 |
 | Please see user guide for more info:
-| http://codeigniter.com/user_guide/helpers/smiley_helper.html
+| https://codeigniter.com/user_guide/helpers/smiley_helper.html
 |
 */
-
 $smileys = array(
 
 //	smiley			image name						width	height	alt
@@ -57,10 +58,7 @@
 	':coolcheese:'	=>	array('shade_cheese.gif',	'19',	'19',	'cool cheese'),
 	':vampire:'		=>	array('vampire.gif',		'19',	'19',	'vampire'),
 	':snake:'		=>	array('snake.gif',			'19',	'19',	'snake'),
-	':exclaim:'		=>	array('exclaim.gif',		'19',	'19',	'excaim'),
-	':question:'	=>	array('question.gif',		'19',	'19',	'question') // no comma after last item
+	':exclaim:'		=>	array('exclaim.gif',		'19',	'19',	'exclaim'),
+	':question:'	=>	array('question.gif',		'19',	'19',	'question')
 
 		);
-
-/* End of file smileys.php */
-/* Location: ./application/config/smileys.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/config/user_agents.php opensourcepos/application/config/user_agents.php
--- pos-prod/application/config/user_agents.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/config/user_agents.php	2016-05-23 15:32:31.797841020 -0700
@@ -1,4 +1,6 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
+defined('BASEPATH') OR exit('No direct script access allowed');
+
 /*
 | -------------------------------------------------------------------
 | USER AGENT TYPES
@@ -7,14 +9,16 @@
 | User Agent Class to help identify browser, platform, robot, and
 | mobile device data.  The array keys are used to identify the device
 | and the array values are used to set the actual name of the item.
-|
 */
-
 $platforms = array (
-					'windows nt 6.0'	=> 'Windows Longhorn',
+	'windows nt 10.0'	=> 'Windows 10',
+	'windows nt 6.3'	=> 'Windows 8.1',
+	'windows nt 6.2'	=> 'Windows 8',
+	'windows nt 6.1'	=> 'Windows 7',
+	'windows nt 6.0'	=> 'Windows Vista',
 					'windows nt 5.2'	=> 'Windows 2003',
-					'windows nt 5.0'	=> 'Windows 2000',
 					'windows nt 5.1'	=> 'Windows XP',
+	'windows nt 5.0'	=> 'Windows 2000',
 					'windows nt 4.0'	=> 'Windows NT 4.0',
 					'winnt4.0'			=> 'Windows NT 4.0',
 					'winnt 4.0'			=> 'Windows NT',
@@ -23,7 +27,13 @@
 					'win98'				=> 'Windows 98',
 					'windows 95'		=> 'Windows 95',
 					'win95'				=> 'Windows 95',
+	'windows phone'			=> 'Windows Phone',
 					'windows'			=> 'Unknown Windows OS',
+	'android'			=> 'Android',
+	'blackberry'		=> 'BlackBerry',
+	'iphone'			=> 'iOS',
+	'ipad'				=> 'iOS',
+	'ipod'				=> 'iOS',
 					'os x'				=> 'Mac OS X',
 					'ppc mac'			=> 'Power PC Mac',
 					'freebsd'			=> 'FreeBSD',
@@ -41,18 +51,24 @@
 					'bsdi'				=> 'BSDi',
 					'openbsd'			=> 'OpenBSD',
 					'gnu'				=> 'GNU/Linux',
-					'unix'				=> 'Unknown Unix OS'
+	'unix'				=> 'Unknown Unix OS',
+	'symbian' 			=> 'Symbian OS'
 				);
 
 
 // The order of this array should NOT be changed. Many browsers return
 // multiple browser types so we want to identify the sub-type first.
 $browsers = array(
+	'OPR'			=> 'Opera',
 					'Flock'				=> 'Flock',
+	'Edge'			=> 'Spartan',
 					'Chrome'			=> 'Chrome',
+	// Opera 10+ always reports Opera/9.80 and appends Version/<real version> to the user agent string
+	'Opera.*?Version'	=> 'Opera',
 					'Opera'				=> 'Opera',
 					'MSIE'				=> 'Internet Explorer',
 					'Internet Explorer'	=> 'Internet Explorer',
+	'Trident.* rv'	=> 'Internet Explorer',
 					'Shiira'			=> 'Shiira',
 					'Firefox'			=> 'Firefox',
 					'Chimera'			=> 'Chimera',
@@ -69,7 +85,9 @@
 					'Links'				=> 'Links',
 					'hotjava'			=> 'HotJava',
 					'amaya'				=> 'Amaya',
-					'IBrowse'			=> 'IBrowse'
+	'IBrowse'		=> 'IBrowse',
+	'Maxthon'		=> 'Maxthon',
+	'Ubuntu'		=> 'Ubuntu Web Browser'
 				);
 
 $mobiles = array(
@@ -90,89 +108,104 @@
 //					'motorola'			=> 'Motorola'
 
 					// Phones and Manufacturers
-					'motorola'			=> "Motorola",
-					'nokia'				=> "Nokia",
-					'palm'				=> "Palm",
-					'iphone'			=> "Apple iPhone",
-					'ipad'				=> "iPad",
-					'ipod'				=> "Apple iPod Touch",
-					'sony'				=> "Sony Ericsson",
-					'ericsson'			=> "Sony Ericsson",
-					'blackberry'		=> "BlackBerry",
-					'cocoon'			=> "O2 Cocoon",
-					'blazer'			=> "Treo",
-					'lg'				=> "LG",
-					'amoi'				=> "Amoi",
-					'xda'				=> "XDA",
-					'mda'				=> "MDA",
-					'vario'				=> "Vario",
-					'htc'				=> "HTC",
-					'samsung'			=> "Samsung",
-					'sharp'				=> "Sharp",
-					'sie-'				=> "Siemens",
-					'alcatel'			=> "Alcatel",
-					'benq'				=> "BenQ",
-					'ipaq'				=> "HP iPaq",
-					'mot-'				=> "Motorola",
-					'playstation portable'	=> "PlayStation Portable",
-					'hiptop'			=> "Danger Hiptop",
-					'nec-'				=> "NEC",
-					'panasonic'			=> "Panasonic",
-					'philips'			=> "Philips",
-					'sagem'				=> "Sagem",
-					'sanyo'				=> "Sanyo",
-					'spv'				=> "SPV",
-					'zte'				=> "ZTE",
-					'sendo'				=> "Sendo",
+	'motorola'		=> 'Motorola',
+	'nokia'			=> 'Nokia',
+	'palm'			=> 'Palm',
+	'iphone'		=> 'Apple iPhone',
+	'ipad'			=> 'iPad',
+	'ipod'			=> 'Apple iPod Touch',
+	'sony'			=> 'Sony Ericsson',
+	'ericsson'		=> 'Sony Ericsson',
+	'blackberry'	=> 'BlackBerry',
+	'cocoon'		=> 'O2 Cocoon',
+	'blazer'		=> 'Treo',
+	'lg'			=> 'LG',
+	'amoi'			=> 'Amoi',
+	'xda'			=> 'XDA',
+	'mda'			=> 'MDA',
+	'vario'			=> 'Vario',
+	'htc'			=> 'HTC',
+	'samsung'		=> 'Samsung',
+	'sharp'			=> 'Sharp',
+	'sie-'			=> 'Siemens',
+	'alcatel'		=> 'Alcatel',
+	'benq'			=> 'BenQ',
+	'ipaq'			=> 'HP iPaq',
+	'mot-'			=> 'Motorola',
+	'playstation portable'	=> 'PlayStation Portable',
+	'playstation 3'		=> 'PlayStation 3',
+	'playstation vita'  	=> 'PlayStation Vita',
+	'hiptop'		=> 'Danger Hiptop',
+	'nec-'			=> 'NEC',
+	'panasonic'		=> 'Panasonic',
+	'philips'		=> 'Philips',
+	'sagem'			=> 'Sagem',
+	'sanyo'			=> 'Sanyo',
+	'spv'			=> 'SPV',
+	'zte'			=> 'ZTE',
+	'sendo'			=> 'Sendo',
+	'nintendo dsi'	=> 'Nintendo DSi',
+	'nintendo ds'	=> 'Nintendo DS',
+	'nintendo 3ds'	=> 'Nintendo 3DS',
+	'wii'			=> 'Nintendo Wii',
+	'open web'		=> 'Open Web',
+	'openweb'		=> 'OpenWeb',
 
 					// Operating Systems
-					'symbian'				=> "Symbian",
-					'SymbianOS'				=> "SymbianOS",
-					'elaine'				=> "Palm",
-					'palm'					=> "Palm",
-					'series60'				=> "Symbian S60",
-					'windows ce'			=> "Windows CE",
+	'android'		=> 'Android',
+	'symbian'		=> 'Symbian',
+	'SymbianOS'		=> 'SymbianOS',
+	'elaine'		=> 'Palm',
+	'series60'		=> 'Symbian S60',
+	'windows ce'	=> 'Windows CE',
 
 					// Browsers
-					'obigo'					=> "Obigo",
-					'netfront'				=> "Netfront Browser",
-					'openwave'				=> "Openwave Browser",
-					'mobilexplorer'			=> "Mobile Explorer",
-					'operamini'				=> "Opera Mini",
-					'opera mini'			=> "Opera Mini",
+	'obigo'			=> 'Obigo',
+	'netfront'		=> 'Netfront Browser',
+	'openwave'		=> 'Openwave Browser',
+	'mobilexplorer'	=> 'Mobile Explorer',
+	'operamini'		=> 'Opera Mini',
+	'opera mini'	=> 'Opera Mini',
+	'opera mobi'	=> 'Opera Mobile',
+	'fennec'		=> 'Firefox Mobile',
 
 					// Other
-					'digital paths'			=> "Digital Paths",
-					'avantgo'				=> "AvantGo",
-					'xiino'					=> "Xiino",
-					'novarra'				=> "Novarra Transcoder",
-					'vodafone'				=> "Vodafone",
-					'docomo'				=> "NTT DoCoMo",
-					'o2'					=> "O2",
+	'digital paths'	=> 'Digital Paths',
+	'avantgo'		=> 'AvantGo',
+	'xiino'			=> 'Xiino',
+	'novarra'		=> 'Novarra Transcoder',
+	'vodafone'		=> 'Vodafone',
+	'docomo'		=> 'NTT DoCoMo',
+	'o2'			=> 'O2',
 
 					// Fallback
-					'mobile'				=> "Generic Mobile",
-					'wireless'				=> "Generic Mobile",
-					'j2me'					=> "Generic Mobile",
-					'midp'					=> "Generic Mobile",
-					'cldc'					=> "Generic Mobile",
-					'up.link'				=> "Generic Mobile",
-					'up.browser'			=> "Generic Mobile",
-					'smartphone'			=> "Generic Mobile",
-					'cellphone'				=> "Generic Mobile"
+	'mobile'		=> 'Generic Mobile',
+	'wireless'		=> 'Generic Mobile',
+	'j2me'			=> 'Generic Mobile',
+	'midp'			=> 'Generic Mobile',
+	'cldc'			=> 'Generic Mobile',
+	'up.link'		=> 'Generic Mobile',
+	'up.browser'	=> 'Generic Mobile',
+	'smartphone'	=> 'Generic Mobile',
+	'cellphone'		=> 'Generic Mobile'
 				);
 
 // There are hundreds of bots but these are the most common.
 $robots = array(
 					'googlebot'			=> 'Googlebot',
 					'msnbot'			=> 'MSNBot',
+	'baiduspider'		=> 'Baiduspider',
+	'bingbot'		=> 'Bing',
 					'slurp'				=> 'Inktomi Slurp',
 					'yahoo'				=> 'Yahoo',
 					'askjeeves'			=> 'AskJeeves',
 					'fastcrawler'		=> 'FastCrawler',
 					'infoseek'			=> 'InfoSeek Robot 1.0',
-					'lycos'				=> 'Lycos'
+	'lycos'			=> 'Lycos',
+	'yandex'		=> 'YandexBot',
+	'mediapartners-google'	=> 'MediaPartners Google',
+	'CRAZYWEBCRAWLER'	=> 'Crazy Webcrawler',
+	'adsbot-google'		=> 'AdsBot Google',
+	'feedfetcher-google'	=> 'Feedfetcher Google',
+	'curious george'	=> 'Curious George'
 				);
-
-/* End of file user_agents.php */
-/* Location: ./application/config/user_agents.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/barcode.php opensourcepos/application/controllers/Barcode.php
--- pos-prod/application/controllers/barcode.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Barcode.php	2016-05-23 15:32:31.797841020 -0700
@@ -1,5 +1,6 @@
 <?php
-class Barcode extends CI_Controller 
+require_once ("Secure_area.php");
+class Barcode extends Secure_area 
 {
 	function __construct()
 	{
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/config.php opensourcepos/application/controllers/Config.php
--- pos-prod/application/controllers/config.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Config.php	2016-05-23 15:32:31.797841020 -0700
@@ -5,22 +5,22 @@
 	function __construct()
 	{
 		parent::__construct('config');
+		$this->load->library('barcode_lib');
 	}
 	
 	function index()
 	{
 		$location_names = array();
-		$locations = $this->Stock_locations->get_location_names();
-		foreach($locations->result_array() as $array) 
-		{
-			array_push($location_names, $array['location_name']);
-		}
-		$data['location_names'] = implode(',', $location_names);
-		$this->load->view("config", $data);
+		$data['stock_locations'] = $this->Stock_location->get_all()->result_array();
+		$data['support_barcode'] = $this->barcode_lib->get_list_barcodes();
+		$this->load->view("configs/manage", $data);
 	}
 		
 	function save()
 	{
+		$upload_success = $this->_handle_logo_upload();
+		$upload_data = $this->upload->data();
+		
 		$batch_save_data=array(
 		'company'=>$this->input->post('company'),
 		'address'=>$this->input->post('address'),
@@ -32,32 +32,62 @@
 		'default_tax_1_name'=>$this->input->post('default_tax_1_name'),		
 		'default_tax_2_rate'=>$this->input->post('default_tax_2_rate'),	
 		'default_tax_2_name'=>$this->input->post('default_tax_2_name'),		
-		'currency_symbol'=>$this->input->post('currency_symbol'),
-		'currency_side'=>$this->input->post('currency_side'),/**GARRISON ADDED 4/20/2013**/
 		'return_policy'=>$this->input->post('return_policy'),
+			'tax_included'=>$this->input->post('tax_included') != null,
+			'recv_invoice_format'=>$this->input->post('recv_invoice_format'),
+			'sales_invoice_format'=>$this->input->post('sales_invoice_format'),
+			'receiving_calculate_average_price'=>$this->input->post('receiving_calculate_average_price') != null,
+			'lines_per_page'=>$this->input->post('lines_per_page'),
+			'default_sales_discount'=>$this->input->post('default_sales_discount'),
+			'custom1_name'=>$this->input->post('custom1_name'),
+			'custom2_name'=>$this->input->post('custom2_name'),
+			'custom3_name'=>$this->input->post('custom3_name'),
+			'custom4_name'=>$this->input->post('custom4_name'),
+			'custom5_name'=>$this->input->post('custom5_name'),
+			'custom6_name'=>$this->input->post('custom6_name'),
+			'custom7_name'=>$this->input->post('custom7_name'),
+			'custom8_name'=>$this->input->post('custom8_name'),
+			'custom9_name'=>$this->input->post('custom9_name'),
+			'custom10_name'=>$this->input->post('custom10_name')
+		);
+		
+		if (!empty($upload_data['orig_name']))
+		{
+			$batch_save_data['company_logo'] = $upload_data['raw_name'] . $upload_data['file_ext'];
+		}
+		
+		$result = $this->Appconfig->batch_save( $batch_save_data );
+		$success = $upload_success && $result ? true : false;
+		$message = $this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully');
+		$message = $upload_success ? $message : $this->upload->display_errors();
+		echo json_encode(array('success'=>$success,'message'=>$message));
+	}
+	
+	function save_locale() 
+	{
+		$batch_save_data=array(	
+			'currency_symbol'=>$this->input->post('currency_symbol'),
+			'currency_side'=>$this->input->post('currency_side') != null,
 		'language'=>$this->input->post('language'),
 		'timezone'=>$this->input->post('timezone'),
-		'print_after_sale'=>$this->input->post('print_after_sale'),
-		'custom1_name'=>$this->input->post('custom1_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom2_name'=>$this->input->post('custom2_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom3_name'=>$this->input->post('custom3_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom4_name'=>$this->input->post('custom4_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom5_name'=>$this->input->post('custom5_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom6_name'=>$this->input->post('custom6_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom7_name'=>$this->input->post('custom7_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom8_name'=>$this->input->post('custom8_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom9_name'=>$this->input->post('custom9_name'),/**GARRISON ADDED 4/20/2013**/
-		'custom10_name'=>$this->input->post('custom10_name')/**GARRISON ADDED 4/20/2013**/
+			'dateformat'=>$this->input->post('dateformat'),
+			'timeformat'=>$this->input->post('timeformat'),
+			'thousands_separator'=>$this->input->post('thousands_separator'),
+			'decimal_point'=>$this->input->post('decimal_point')
 		);
 		
-		$stock_locations = explode( ',', $this->input->post('stock_location'));
-        $stock_locations_trimmed=array();
-        foreach($stock_locations as $location)
+        $result = $this->Appconfig->batch_save( $batch_save_data );
+        $success = $result ? true : false;
+        echo json_encode(array('success'=>$success, 'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
+	}
+	
+	function stock_locations() 
         {
-            array_push($stock_locations_trimmed, trim($location, ' '));
+		$stock_locations = $this->Stock_location->get_all()->result_array();
+		$this->load->view('partial/stock_locations', array('stock_locations' => $stock_locations));
         }        
-        $current_locations = $this->Stock_locations->concat_location_names()->location_names;
-        if ($this->input->post('stock_locations') != $current_locations) 
+	
+	function _clear_session_state()
         {
         	$this->load->library('sale_lib');
 			$this->sale_lib->clear_sale_location();
@@ -68,9 +98,118 @@
 			$this->receiving_lib->clear_all();
         }
         
-		if( $this->Appconfig->batch_save( $batch_save_data ) && $this->Stock_locations->array_save($stock_locations_trimmed))
+	function save_locations() 
+	{
+		$this->db->trans_start();
+		
+		$deleted_locations = $this->Stock_location->get_allowed_locations();
+		foreach($this->input->post() as $key => $value)
+		{
+			if (strstr($key, 'stock_location'))
+			{
+				$location_id = preg_replace("/.*?_(\d+)$/", "$1", $key);
+				unset($deleted_locations[$location_id]);
+				// save or update
+				$location_data = array('location_name' => $value);
+				if ($this->Stock_location->save($location_data, $location_id))
+				{
+					$this->_clear_session_state();
+				}
+			}
+		}
+		// all locations not available in post will be deleted now
+		foreach ($deleted_locations as $location_id => $location_name)
+		{
+			$this->Stock_location->delete($location_id);
+		}
+		$success = $this->db->trans_complete();
+		echo json_encode(array('success'=>$success,'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
+	}
+
+    function save_barcode()
+    {
+        $batch_save_data=array(
+			'barcode_type'=>$this->input->post('barcode_type'),
+			'barcode_quality'=>$this->input->post('barcode_quality'),
+			'barcode_width'=>$this->input->post('barcode_width'),
+			'barcode_height'=>$this->input->post('barcode_height'),
+			'barcode_font'=>$this->input->post('barcode_font'),
+			'barcode_font_size'=>$this->input->post('barcode_font_size'),
+			'barcode_first_row'=>$this->input->post('barcode_first_row'),
+			'barcode_second_row'=>$this->input->post('barcode_second_row'),
+			'barcode_third_row'=>$this->input->post('barcode_third_row'),
+			'barcode_num_in_row'=>$this->input->post('barcode_num_in_row'),
+			'barcode_page_width'=>$this->input->post('barcode_page_width'),
+			'barcode_page_cellspacing'=>$this->input->post('barcode_page_cellspacing'),
+			'barcode_generate_if_empty'=>$this->input->post('barcode_generate_if_empty') != null,
+			'barcode_content'=>$this->input->post('barcode_content')
+        );
+        
+        $result = $this->Appconfig->batch_save( $batch_save_data );
+        $success = $result ? true : false;
+        echo json_encode(array('success'=>$success, 'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
+    }
+    
+    function save_receipt()
+    {
+    	$batch_save_data = array (
+			'use_invoice_template' => $this->input->post ( 'use_invoice_template' ) != null,
+			'invoice_default_comments' => $this->input->post ( 'invoice_default_comments' ),
+			'invoice_email_message' => $this->input->post ( 'invoice_email_message' ),
+			'receipt_show_taxes' => $this->input->post ( 'receipt_show_taxes' ) != null,
+			'print_silently' => $this->input->post ( 'print_silently' ) != null,
+			'print_header' => $this->input->post ( 'print_header' ) != null,
+			'print_footer' => $this->input->post ( 'print_footer' ) != null,
+			'print_top_margin' => $this->input->post ( 'print_top_margin' ),
+			'print_left_margin' => $this->input->post ( 'print_left_margin' ),
+			'print_bottom_margin' => $this->input->post ( 'print_bottom_margin' ),
+			'print_right_margin' => $this->input->post ( 'print_right_margin' ),
+			'show_total_discount' => $this->input->post( 'show_total_discount' ) != null
+		);
+    	$result = $this->Appconfig->batch_save( $batch_save_data );
+    	$success = $result ? true : false;
+    	echo json_encode(array('success'=>$success, 'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
+    }
+    
+    function _handle_logo_upload()
+    {
+    	$this->load->helper('directory');
+    	// load upload library
+    	$config = array('upload_path' => './uploads/',
+    			'allowed_types' => 'gif|jpg|png',
+    			'max_size' => '1024',
+    			'max_width' => '800',
+    			'max_height' => '680',
+    			'file_name' => 'company_logo');
+    	$this->load->library('upload', $config);
+    	$this->upload->do_upload('company_logo');
+    	return strlen($this->upload->display_errors()) == 0 || !strcmp($this->upload->display_errors(), '<p>'.$this->lang->line('upload_no_file_selected').'</p>');
+    }
+    
+    function backup_db()
+    {
+    	$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
+    	if($this->Employee->has_module_grant('config',$employee_id))
+    	{
+    		$this->load->dbutil();
+    		$prefs = array(
+				'format'      => 'zip',
+				'filename'    => 'ospos.sql'
+    		);
+    		 
+    		$backup =& $this->dbutil->backup($prefs);
+    		 
+			$file_name = 'ospos-' . date("Y-m-d-H-i-s") .'.zip';
+    		$save = 'uploads/'.$file_name;
+    		$this->load->helper('download');
+    		while (ob_get_level()) {
+    			ob_end_clean();
+    		}
+    		force_download($file_name, $backup);
+    	}
+    	else 
 		{
-			echo json_encode(array('success'=>true,'message'=>$this->lang->line('config_saved_successfully')));
+    		redirect('no_access/config');
 		}
 	}
 }
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/customers.php opensourcepos/application/controllers/Customers.php
--- pos-prod/application/controllers/customers.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Customers.php	2016-05-23 15:32:31.797841020 -0700
@@ -7,17 +8,14 @@
 		parent::__construct('customers');
 	}
 	
-	function index()
+	function index($limit_from=0)
 	{
-		$config['base_url'] = site_url('/customers/index');
-		$config['total_rows'] = $this->Customer->count_all();
-		$config['per_page'] = '20';
-		$config['uri_segment'] = 3;
-		$this->pagination->initialize($config);
-		
-		$data['controller_name']=strtolower(get_class());
+		$data['controller_name'] = $this->get_controller_name();
 		$data['form_width']=$this->get_form_width();
-		$data['manage_table']=get_people_manage_table( $this->Customer->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$customers = $this->Customer->get_all($lines_per_page, $limit_from);
+		$data['links'] = $this->_initialize_pagination($this->Customer, $lines_per_page, $limit_from);
+		$data['manage_table'] = get_people_manage_table($customers, $this);
 		$this->load->view('people/manage',$data);
 	}
 	
@@ -26,9 +24,16 @@
 	*/
 	function search()
 	{
-		$search=$this->input->post('search');
-		$data_rows=get_people_manage_table_data_rows($this->Customer->search($search),$this);
-		echo $data_rows;
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+		$customers = $this->Customer->search($search, $lines_per_page, $limit_from);
+		$total_rows = $this->Customer->get_found_rows($search);
+		$links = $this->_initialize_pagination($this->Customer,$lines_per_page, $limit_from, $total_rows);
+		$data_rows = get_people_manage_table_data_rows($customers, $this);
+
+		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
 	}
 	
 	/*
@@ -57,6 +62,7 @@
 		$person_data = array(
 		'first_name'=>$this->input->post('first_name'),
 		'last_name'=>$this->input->post('last_name'),
+			'gender'=>$this->input->post('gender'),
 		'email'=>$this->input->post('email'),
 		'phone_number'=>$this->input->post('phone_number'),
 		'address_1'=>$this->input->post('address_1'),
@@ -69,9 +75,10 @@
 		);
 		$customer_data=array(
 		'account_number'=>$this->input->post('account_number')=='' ? null:$this->input->post('account_number'),
-		'taxable'=>$this->input->post('taxable')=='' ? 0:1,
+			'company_name'=>$this->input->post('company_name') == '' ? null : $this->input->post('company_name'),
+			'taxable'=>$this->input->post('taxable') != null
 		);
-		if($this->Customer->save($person_data,$customer_data,$customer_id))
+		if($this->Customer->save_customer($person_data,$customer_data,$customer_id))
 		{
 			//New customer
 			if($customer_id==-1)
@@ -92,6 +99,12 @@
 		}
 	}
 	
+	function check_account_number()
+	{
+		$exists = $this->Customer->account_number_exists($this->input->post('account_number'),$this->input->post('person_id'));
+		echo !$exists ? 'true' : 'false';
+	}
+	
 	/*
 	This deletes customers from the customers table
 	*/
@@ -145,23 +158,31 @@
 					$person_data = array(
 					'first_name'=>$data[0],
 					'last_name'=>$data[1],
-					'email'=>$data[2],
-					'phone_number'=>$data[3],
-					'address_1'=>$data[4],
-					'address_2'=>$data[5],
-					'city'=>$data[6],
-					'state'=>$data[7],
-					'zip'=>$data[8],
-					'country'=>$data[9],
-					'comments'=>$data[10]
+					'gender'=>$data[2],
+					'email'=>$data[3],
+					'phone_number'=>$data[4],
+					'address_1'=>$data[5],
+					'address_2'=>$data[6],
+					'city'=>$data[7],
+					'state'=>$data[8],
+					'zip'=>$data[9],
+					'country'=>$data[10],
+					'comments'=>$data[11]
 					);
 					
 					$customer_data=array(
-					'account_number'=>$data[11]=='' ? null:$data[11],
-					'taxable'=>$data[12]=='' ? 0:1,
+					'taxable'=>$data[13]=='' ? 0:1
 					);
 					
-					if(!$this->Customer->save($person_data,$customer_data))
+					$account_number = $data[12];
+					$invalidated = false;
+					if ($account_number != "") 
+					{
+						$customer_data['account_number'] = $account_number;
+						$invalidated = $this->Customer->account_number_exists($account_number);
+					}
+					
+					if($invalidated || !$this->Customer->save_customer($person_data,$customer_data))
 					{	
 						$failCodes[] = $i;
 					}
@@ -177,7 +198,7 @@
 		}
 
 		$success = true;
-		if(count($failCodes) > 1)
+		if(count($failCodes) > 0)
 		{
 			$msg = "Most customers imported. But some were not, here is list of their CODE (" .count($failCodes) ."): ".implode(", ", $failCodes);
 			$success = false;
@@ -195,7 +216,7 @@
 	*/
 	function get_form_width()
 	{			
-		return 350;
+		return 400;
 	}
 }
 ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/employees.php opensourcepos/application/controllers/Employees.php
--- pos-prod/application/controllers/employees.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Employees.php	2016-05-23 15:32:31.797841020 -0700
@@ -7,18 +8,15 @@
 		parent::__construct('employees');
 	}
 	
-	function index()
+	function index($limit_from=0)
 	{
-		$config['base_url'] = site_url('/employees/index');
-		$config['total_rows'] = $this->Employee->count_all();
-		$config['per_page'] = '20';
-		$config['uri_segment'] = 3;
-		$this->pagination->initialize($config);
-		
-		$data['controller_name']=strtolower(get_class());
+		$data['controller_name'] = $this->get_controller_name();
 		$data['form_width']=$this->get_form_width();
-		$data['manage_table']=get_people_manage_table( $this->Employee->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
-		$this->load->view('people/manage',$data);
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$suppliers = $this->Employee->get_all($lines_per_page, $limit_from);
+		$data['links'] = $this->_initialize_pagination($this->Employee, $lines_per_page, $limit_from);
+		$data['manage_table'] = get_people_manage_table($suppliers, $this);
+		$this->load->view('suppliers/manage',$data);
 	}
 	
 	/*
@@ -26,9 +24,16 @@
 	*/
 	function search()
 	{
-		$search=$this->input->post('search');
-		$data_rows=get_people_manage_table_data_rows($this->Employee->search($search),$this);
-		echo $data_rows;
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+		$employees = $this->Employee->search($search, $limit_from, $lines_per_page);
+		$total_rows = $this->Employee->get_found_rows($search);
+		$links = $this->_initialize_pagination($this->Employee, $lines_per_page, $limit_from, $total_rows);
+		$data_rows = get_people_manage_table_data_rows($employees, $this);
+
+		echo json_encode(array('rows' => $data_rows, 'pagination' => $links));
 	}
 	
 	/*
@@ -47,6 +52,7 @@
 	{
 		$data['person_info']=$this->Employee->get_info($employee_id);
 		$data['all_modules']=$this->Module->get_all_modules();
+		$data['all_subpermissions']=$this->Module->get_all_subpermissions();
 		$this->load->view("employees/form",$data);
 	}
 	
@@ -58,6 +64,7 @@
 		$person_data = array(
 		'first_name'=>$this->input->post('first_name'),
 		'last_name'=>$this->input->post('last_name'),
+			'gender'=>$this->input->post('gender'),
 		'email'=>$this->input->post('email'),
 		'phone_number'=>$this->input->post('phone_number'),
 		'address_1'=>$this->input->post('address_1'),
@@ -68,7 +75,7 @@
 		'country'=>$this->input->post('country'),
 		'comments'=>$this->input->post('comments')
 		);
-		$permission_data = $this->input->post("permissions")!=false ? $this->input->post("permissions"):array();
+		$grants_data = $this->input->post('grants') != null ? $this->input->post('grants') : array();
 		
 		//Password has been changed OR first time password set
 		if($this->input->post('password')!='')
@@ -83,7 +90,7 @@
 			$employee_data=array('username'=>$this->input->post('username'));
 		}
 		
-		if($this->Employee->save($person_data,$employee_data,$permission_data,$employee_id))
+		if($this->Employee->save_employee($person_data,$employee_data,$grants_data,$employee_id))
 		{
 			//New employee
 			if($employee_id==-1)
@@ -126,7 +133,7 @@
 	*/
 	function get_form_width()
 	{
-		return 650;
+		return 750;
 	}
 }
 ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/giftcards.php opensourcepos/application/controllers/Giftcards.php
--- pos-prod/application/controllers/giftcards.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Giftcards.php	2016-05-23 15:32:31.797841020 -0700
@@ -8,25 +9,32 @@
 		parent::__construct('giftcards');
 	}
 
-	function index()
+	function index($limit_from=0)
 	{
-		$config['base_url'] = site_url('/giftcards/index');
-		$config['total_rows'] = $this->Giftcard->count_all();
-		$config['per_page'] = '20';
-		$config['uri_segment'] = 3;
-		$this->pagination->initialize($config);
-		
-		$data['controller_name']=strtolower(get_class());
+		$data['controller_name'] = $this->get_controller_name();
 		$data['form_width']=$this->get_form_width();
-		$data['manage_table']=get_giftcards_manage_table( $this->Giftcard->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$giftcards = $this->Giftcard->get_all($lines_per_page, $limit_from);
+		$data['links'] = $this->_initialize_pagination($this->Giftcard, $lines_per_page, $limit_from);
+		$data['manage_table'] = get_giftcards_manage_table($giftcards, $this);
 		$this->load->view('giftcards/manage',$data);
 	}
 
+	/*
+	Returns Giftcards table data rows. This will be called with AJAX.
+	*/
 	function search()
 	{
-		$search=$this->input->post('search');
-		$data_rows=get_giftcards_manage_table_data_rows($this->Giftcard->search($search),$this);
-		echo $data_rows;
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+		$giftcards = $this->Giftcard->search($search, $lines_per_page, $limit_from);
+		$total_rows = $this->Giftcard->get_found_rows($search);
+		$links = $this->_initialize_pagination($this->Giftcard, $lines_per_page, $limit_from, $total_rows);
+		$data_rows = get_giftcards_manage_table_data_rows($giftcards, $this);
+
+		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
 	}
 
 	/*
@@ -37,16 +45,16 @@
 		$suggestions = $this->Giftcard->get_search_suggestions($this->input->post('q'),$this->input->post('limit'));
 		echo implode("\n",$suggestions);
 	}
-/** GARRISON ADDED 5/3/2013 **/
+
 	/*
 	 Gives search suggestions for person_id based on what is being searched for
 	*/
-	function suggest_person()
+	function person_search()
 	{
-		$suggestions = $this->Giftcard->get_person_search_suggestions($this->input->post('q'),$this->input->post('limit'));
+		$suggestions = $this->Customer->get_customer_search_suggestions($this->input->post('q'), $this->input->post('limit'));
 		echo implode("\n",$suggestions);
 	}
-/** END GARRISON ADDED **/
+
 	function get_row()
 	{
 		$giftcard_id = $this->input->post('row_id');
@@ -56,17 +64,21 @@
 
 	function view($giftcard_id=-1)
 	{
-		$data['giftcard_info']=$this->Giftcard->get_info($giftcard_id);
-
+		$giftcard_info = $this->Giftcard->get_info($giftcard_id);
+		$person_name=$giftcard_id > 0? $giftcard_info->first_name . ' ' . $giftcard_info->last_name : '';
+		$data['selected_person'] = $giftcard_id > 0 && isset($giftcard_info->person_id) ? $giftcard_info->person_id . "|" . $person_name : "";
+		$data['giftcard_number'] = $giftcard_id > 0 ? $giftcard_info->giftcard_number : $this->Giftcard->get_max_number()->giftcard_number + 1;
+		$data['giftcard_info'] = $giftcard_info;
 		$this->load->view("giftcards/form",$data);
 	}
 	
 	function save($giftcard_id=-1)
 	{
 		$giftcard_data = array(
-		'giftcard_number'=>$this->input->post('giftcard_number'),
-		'value'=>$this->input->post('value'),
-		'person_id'=>$this->input->post('person_id')/**GARRISON ADDED 4/22/2013**/		
+			'record_time' => date('Y-m-d H:i:s'),
+			'giftcard_number'=>$this->input->post('giftcard_number', TRUE),
+			'value'=>$this->input->post('value', TRUE),
+			'person_id'=>$this->input->post('person_id', TRUE) ? $this->input->post('person_id') : null
 		);
 
 		if( $this->Giftcard->save( $giftcard_data, $giftcard_id ) )
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/home.php opensourcepos/application/controllers/Home.php
--- pos-prod/application/controllers/home.php	2014-10-08 15:42:07.000000000 -0700
+++ opensourcepos/application/controllers/Home.php	2016-05-23 15:32:31.798841005 -0700
@@ -15,7 +15,6 @@
 	
 	function logout()
 	{
-		log_message('error','Logging out');
 		$this->Employee->logout();
 	}
 }
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/index.html opensourcepos/application/controllers/index.html
--- pos-prod/application/controllers/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/index.html	2016-05-23 15:32:31.800840975 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/item_kits.php opensourcepos/application/controllers/Item_kits.php
--- pos-prod/application/controllers/item_kits.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Item_kits.php	2016-05-23 15:32:31.798841005 -0700
@@ -8,25 +9,64 @@
 		parent::__construct('item_kits');
 	}
 
-	function index()
+	// add the total cost and retail price to a passed items kit retrieving the data from each singolar item part of the kit
+	private function add_totals_to_item_kit($item_kit)
+	{
+		$item_kit->total_cost_price = 0;
+		$item_kit->total_unit_price = 0;
+		
+		foreach ($this->Item_kit_items->get_info($item_kit->item_kit_id) as $item_kit_item)
 	{
-		$config['base_url'] = site_url('/item_kits/index');
-		$config['total_rows'] = $this->Item_kit->count_all();
-		$config['per_page'] = '20';
-		$config['uri_segment'] = 3;
-		$this->pagination->initialize($config);
+			$item_info = $this->Item->get_info($item_kit_item['item_id']);
+			
+			$item_kit->total_cost_price += $item_info->cost_price * $item_kit_item['quantity'];
+			$item_kit->total_unit_price += $item_info->unit_price * $item_kit_item['quantity'];
+		}
+
+		return $item_kit;
+	}
 		
-		$data['controller_name']=strtolower(get_class());
+	function index($limit_from=0)
+	{
+		$data['controller_name'] = $this->get_controller_name();
 		$data['form_width']=$this->get_form_width();
-		$data['manage_table']=get_item_kits_manage_table( $this->Item_kit->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$item_kits = $this->Item_kit->get_all($lines_per_page, $limit_from);
+		
+		foreach($item_kits->result() as $item_kit)
+		{
+			// calculate the total cost and retail price of the Kit so it can be printed out in the manage table
+			$item_kit = $this->add_totals_to_item_kit($item_kit);
+		}
+		
+		$data['links'] = $this->_initialize_pagination($this->Item_kit, $lines_per_page, $limit_from);
+		$data['manage_table'] = get_item_kits_manage_table($item_kits, $this);
+
 		$this->load->view('item_kits/manage',$data);
 	}
 
+	/*
+	Returns Item kits table data rows. This will be called with AJAX.
+	*/
 	function search()
 	{
-		$search=$this->input->post('search');
-		$data_rows=get_item_kits_manage_table_data_rows($this->Item_kit->search($search),$this);
-		echo $data_rows;
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+		$item_kits = $this->Item_kit->search($search, $lines_per_page, $limit_from);
+		$total_rows = $this->Item_kit->get_found_rows($search);
+		$links = $this->_initialize_pagination($this->Item_kit, $lines_per_page, $limit_from, $total_rows, 'search');
+
+		foreach($item_kits->result() as $item_kit)
+		{
+			// calculate the total cost and retail price of the Kit so it can be printed out in the manage table
+			$item_kit = $this->add_totals_to_item_kit($item_kit);
+		}
+
+		$data_rows = get_item_kits_manage_table_data_rows($item_kits, $this);
+
+		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
 	}
 
 	/*
@@ -41,8 +82,11 @@
 	function get_row()
 	{
 		$item_kit_id = $this->input->post('row_id');
-		$data_row=get_item_kit_data_row($this->Item_kit->get_info($item_kit_id),$this);
-		echo $data_row;
+
+		// calculate the total cost and retail price of the Kit so it can be added to the table refresh
+		$item_kit = $this->add_totals_to_item_kit($this->Item_kit->get_info($item_kit_id));
+		
+		echo (get_item_kit_data_row($item_kit, $this));
 	}
 
 	function view($item_kit_id=-1)
@@ -63,17 +107,20 @@
 			//New item kit
 			if($item_kit_id==-1)
 			{
-				echo json_encode(array('success'=>true,'message'=>$this->lang->line('item_kits_successful_adding').' '.
-				$item_kit_data['name'],'item_kit_id'=>$item_kit_data['item_kit_id']));
 				$item_kit_id = $item_kit_data['item_kit_id'];
+				
+				echo json_encode(array('success'=>true,
+									'message'=>$this->lang->line('item_kits_successful_adding').' '.$item_kit_data['name'],
+									'item_kit_id'=>$item_kit_id));
 			}
 			else //previous item
 			{
-				echo json_encode(array('success'=>true,'message'=>$this->lang->line('item_kits_successful_updating').' '.
-				$item_kit_data['name'],'item_kit_id'=>$item_kit_id));
+				echo json_encode(array('success'=>true, 
+									'message'=>$this->lang->line('item_kits_successful_updating').' '.$item_kit_data['name'],
+									'item_kit_id'=>$item_kit_id));
 			}
 			
-			if ($this->input->post('item_kit_item'))
+			if ( $this->input->post('item_kit_item') != null )
 			{
 				$item_kit_items = array();
 				foreach($this->input->post('item_kit_item') as $item_id => $quantity)
@@ -89,10 +136,10 @@
 		}
 		else//failure
 		{
-			echo json_encode(array('success'=>false,'message'=>$this->lang->line('item_kits_error_adding_updating').' '.
-			$item_kit_data['name'],'item_kit_id'=>-1));
+			echo json_encode(array('success'=>false, 
+								'message'=>$this->lang->line('item_kits_error_adding_updating').' '.$item_kit_data['name'],
+								'item_kit_id'=>-1));
 		}
-
 	}
 	
 	function delete()
@@ -101,28 +148,39 @@
 
 		if($this->Item_kit->delete_list($item_kits_to_delete))
 		{
-			echo json_encode(array('success'=>true,'message'=>$this->lang->line('item_kits_successful_deleted').' '.
-			count($item_kits_to_delete).' '.$this->lang->line('item_kits_one_or_multiple')));
+			echo json_encode(array('success'=>true,
+								'message'=>$this->lang->line('item_kits_successful_deleted').' '.count($item_kits_to_delete).' '.$this->lang->line('item_kits_one_or_multiple')));
 		}
 		else
 		{
-			echo json_encode(array('success'=>false,'message'=>$this->lang->line('item_kits_cannot_be_deleted')));
+			echo json_encode(array('success'=>false,
+								'message'=>$this->lang->line('item_kits_cannot_be_deleted')));
 		}
 	}
 	
 	function generate_barcodes($item_kit_ids)
 	{
+		$this->load->library('barcode_lib');
 		$result = array();
 
 		$item_kit_ids = explode(':', $item_kit_ids);
 		foreach ($item_kit_ids as $item_kid_id)
 		{
-			$item_kit_info = $this->Item_kit->get_info($item_kid_id);
+			// calculate the total cost and retail price of the Kit so it can be added to the barcode text at the bottom
+			$item_kit = $this->add_totals_to_item_kit($this->Item_kit->get_info($item_kid_id));
 
-			$result[] = array('name' =>$item_kit_info->name, 'id'=> 'KIT '.$item_kid_id);
+			$result[] = array('name'=>$item_kit->name, 'item_id'=>'KIT '.$item_kid_id, 'item_number'=>'KIT '.$item_kid_id, 'cost_price'=>$item_kit->total_cost_price, 'unit_price'=>$item_kit->total_unit_price);
 		}
 
 		$data['items'] = $result;
+        $barcode_config = $this->barcode_lib->get_barcode_config();
+		// in case the selected barcode type is not Code39 or Code128 we set by default Code128
+		// the rationale for this is that EAN codes cannot have strings as seed, so 'KIT ' is not allowed
+		if($barcode_config['barcode_type'] != 'Code39' && $barcode_config['barcode_type'] != 'Code128')
+		{
+			$barcode_config['barcode_type'] = 'Code128';
+		}
+		$data['barcode_config'] = $barcode_config;
 		$this->load->view("barcode_sheet", $data);
 	}
 	
@@ -132,7 +189,7 @@
 	*/
 	function get_form_width()
 	{
-		return 360;
+		return 400;
 	}
 }
 ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/items.php opensourcepos/application/controllers/Items.php
--- pos-prod/application/controllers/items.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/controllers/Items.php	2016-05-23 15:32:31.798841005 -0700
@@ -6,37 +7,36 @@
 	function __construct()
 	{
 		parent::__construct('items');
+		$this->load->library('item_lib');
 	}
 
-	function index()
+	function index($limit_from=0)
 	{
-		$config['base_url'] = site_url('/items/index');
-		$config['total_rows'] = $this->Item->count_all();
-		$config['per_page'] = '20';
-		$config['uri_segment'] = 3;
-		$this->pagination->initialize($config);
+		$stock_location = $this->item_lib->get_item_location();
+		$stock_locations = $this->Stock_location->get_allowed_locations();
 
-		$data['controller_name']=strtolower(get_class());
+		$data['controller_name'] = $this->get_controller_name();
 		$data['form_width']=$this->get_form_width();
-		$data['manage_table']=get_items_manage_table( $this->Item->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
-		$this->load->view('items/manage',$data);
-	}
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$items = $this->Item->get_all($stock_location, $lines_per_page, $limit_from);
+		$data['links'] = $this->_initialize_pagination($this->Item, $lines_per_page, $limit_from);
+		
+		// set 01/01/2010 as starting date for OSPOS
+		$start_of_time = date($this->config->item('dateformat'), mktime(0,0,0,1,1,2010));
+		$today = date($this->config->item('dateformat'));
+
+		$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $start_of_time;
+		$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
+		$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
+		$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
+		
+		$data['start_date'] = $start_date_formatter->format($this->config->item('dateformat'));
+		$data['end_date'] = $end_date_formatter->format($this->config->item('dateformat'));
+	
+		$data['stock_location'] = $stock_location;
+		$data['stock_locations'] = $stock_locations;
+		$data['manage_table'] = get_items_manage_table( $this->Item->get_all($stock_location, $lines_per_page, $limit_from), $this );
 
-	function refresh()
-	{
-		$is_serialized=$this->input->post('is_serialized');
-		$no_description=$this->input->post('no_description');
-		$search_custom=$this->input->post('search_custom');//GARRISON ADDED 4/13/2013    
-        $is_deleted=$this->input->post('is_deleted'); // Parq 131215	
-        
-		$data['search_section_state']=$this->input->post('search_section_state');
-		$data['is_serialized']=$this->input->post('is_serialized');
-		$data['no_description']=$this->input->post('no_description');
-		$data['search_custom']=$this->input->post('search_custom');//GARRISON ADDED 4/13/2013
-		$data['is_deleted']=$this->input->post('is_deleted'); // Parq 131215
-		$data['controller_name']=strtolower(get_class());
-		$data['form_width']=$this->get_form_width(); 
-		$data['manage_table']=get_items_manage_table($this->Item->get_all_filtered($is_serialized,$no_description,$search_custom,$is_deleted),$this);//GARRISON MODIFIED 4/13/2013, Parq 131215
 		$this->load->view('items/manage',$data);
 	}
 
@@ -46,11 +46,72 @@
 		echo json_encode($this->Item->find_item_info($item_number));
 	}
 
+	/*
+	Returns Items table data rows. This will be called with AJAX.
+	*/
 	function search()
 	{
-		$search=$this->input->post('search');
-		$data_rows=get_items_manage_table_data_rows($this->Item->search($search),$this);
-		echo $data_rows;
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$this->item_lib->set_item_location($this->input->post('stock_location'));
+
+		// set 01/01/2010 as starting date for OSPOS
+		$start_of_time = date($this->config->item('dateformat'), mktime(0,0,0,1,1,2010));
+		$today = date($this->config->item('dateformat'));
+
+		$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $start_of_time;
+		$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
+		$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
+		$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
+		
+		$filters = array('start_date' => $start_date_formatter->format('Y-m-d'), 
+						'end_date' => $end_date_formatter->format('Y-m-d'),
+						'stock_location_id' => $this->item_lib->get_item_location(),
+						'empty_upc' => $this->input->post('empty_upc') != null,
+						'low_inventory' => $this->input->post('low_inventory') != null, 
+						'is_serialized' => $this->input->post('is_serialized') != null,
+						'no_description' => $this->input->post('no_description') != null,
+						'search_custom' => $this->input->post('search_custom') != null,
+						'is_deleted' => $this->input->post('is_deleted') != null);
+		
+		$items = $this->Item->search($search, $filters, $lines_per_page, $limit_from);
+		$data_rows = get_items_manage_table_data_rows($items, $this);
+		$total_rows = $this->Item->get_found_rows($search, $filters);
+		$links = $this->_initialize_pagination($this->Item, $lines_per_page, $limit_from, $total_rows, 'search');
+		$data_rows = get_items_manage_table_data_rows($items, $this);
+
+		// do not move this line to be after the json_encode otherwise the searhc function won't work!!
+
+		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
+	}
+	
+	function pic_thumb($pic_id)
+	{
+		$this->load->helper('file');
+		$this->load->library('image_lib');
+		$base_path = "uploads/item_pics/" . $pic_id ;
+		$images = glob ($base_path. "*");
+		if (sizeof($images) > 0)
+		{
+			$image_path = $images[0];
+			$ext = pathinfo($image_path, PATHINFO_EXTENSION);
+			$thumb_path = $base_path . $this->image_lib->thumb_marker.'.'.$ext;
+			if (sizeof($images) < 2)
+			{
+				$config['image_library'] = 'gd2';
+				$config['source_image']  = $image_path;
+				$config['maintain_ratio'] = TRUE;
+				$config['create_thumb'] = TRUE;
+				$config['width'] = 52;
+				$config['height'] = 32;
+ 				$this->image_lib->initialize($config);
+ 				$image = $this->image_lib->resize();
+				$thumb_path = $this->image_lib->full_dst_path;
+			}
+			$this->output->set_content_type(get_mime_by_extension($thumb_path));
+			$this->output->set_output(file_get_contents($thumb_path));
+		}
 	}
 
 	/*
@@ -58,13 +119,16 @@
 	*/
 	function suggest()
 	{
-		$suggestions = $this->Item->get_search_suggestions($this->input->post('q'),$this->input->post('limit'));
+		$suggestions = $this->Item->get_search_suggestions($this->input->post('q'), $this->input->post('limit'),
+															$this->input->post('search_custom'), !empty($this->input->post('is_deleted')));
+
 		echo implode("\n",$suggestions);
 	}
 
 	function item_search()
 	{
-		$suggestions = $this->Item->get_item_search_suggestions($this->input->post('q'),$this->input->post('limit'),'warehouse');
+		$suggestions = $this->Item->get_item_search_suggestions($this->input->post('q'), $this->input->post('limit'));
+
 		echo implode("\n",$suggestions);
 	}
 
@@ -77,7 +142,6 @@
 		echo implode("\n",$suggestions);
 	}
 
-/**GARRISON ADDED 5/18/2013**/	
 	/*
 	 Gives search suggestions based on what is being searched for
 	*/
@@ -177,13 +252,17 @@
 		echo implode("\n",$suggestions);
 	}
 
-/**END GARRISON ADDED**/
-		
 	function get_row()
 	{
 		$item_id = $this->input->post('row_id');
-		$data_row=get_item_data_row($this->Item->get_info($item_id),$this);
+		$item_info = $this->Item->get_info($item_id);
+		$stock_location = $this->item_lib->get_item_location();
+		$item_quantity = $this->Item_quantity->get_item_quantity($item_id,$stock_location);
+		$item_info->quantity = $item_quantity->quantity; 
+		$data_row = get_item_data_row($item_info,$this);
+		
 		echo $data_row;
+
 	}
 
 	function view($item_id=-1)
@@ -190,20 +269,10 @@
 	{
 		$data['item_info']=$this->Item->get_info($item_id);
 		$data['item_tax_info']=$this->Item_taxes->get_info($item_id);
-
-		$categories_rs = $this->Item->get_category_suggestions($this->input->post('q'));
-		$categories = array();
-		foreach($categories_rs as $category)
-		{
-			$categories[$category] = $category;
-		}
-		$data['categories']=$categories;
-		$data['selected_category']=$this->Item->get_info($item_id)->category;
 		$suppliers = array('' => $this->lang->line('items_none'));
 		foreach($this->Supplier->get_all()->result_array() as $row)
 		{
-			//$suppliers[$row['person_id']] = $row['company_name'] .' ('.$row['first_name'] .' '. $row['last_name'].')';
-			$suppliers[$row['person_id']] = $row['first_name'] .' '. $row['last_name'];
+			$suppliers[$row['person_id']] = $row['company_name'];
 		}
 
 		$data['suppliers']=$suppliers;
@@ -211,31 +280,28 @@
 		$data['default_tax_1_rate']=($item_id==-1) ? $this->Appconfig->get('default_tax_1_rate') : '';
 		$data['default_tax_2_rate']=($item_id==-1) ? $this->Appconfig->get('default_tax_2_rate') : '';
 
-        $locations_data = $this->Stock_locations->get_undeleted_all()->result_array();
-        $location_array;
+        $locations_data = $this->Stock_location->get_undeleted_all()->result_array();
         foreach($locations_data as $location)
         {
-           $quantity = $this->Item_quantities->get_item_quantity($item_id, $location['location_id'])->quantity;
+           $quantity = $this->Item_quantity->get_item_quantity($item_id,$location['location_id'])->quantity;
            $quantity = ($item_id == -1) ? null: $quantity;
-           $location_array[$location['location_id']] =  array('location_name'=>$location['location_name'],
-                                                                       'quantity'=>$quantity);
-        }
+           $location_array[$location['location_id']] =  array('location_name'=>$location['location_name'], 'quantity'=>$quantity);
         $data['stock_locations']= $location_array;
-                $this->load->view("items/form",$data);
         }
 
+		$this->load->view("items/form", $data);
+	}
 
-        //Ramel Inventory Tracking
         function inventory($item_id=-1)
         {
                 $data['item_info']=$this->Item->get_info($item_id);
 
         $data['stock_locations'] = array();
-        $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
+        $stock_locations = $this->Stock_location->get_undeleted_all()->result_array();
         foreach($stock_locations as $location_data)
         {
             $data['stock_locations'][$location_data['location_id']] = $location_data['location_name'];
-            $data['item_quantities'][$location_data['location_id']] = $this->Item_quantities->get_item_quantity($item_id,$location_data['location_id'])->quantity;
+            $data['item_quantities'][$location_data['location_id']] = $this->Item_quantity->get_item_quantity($item_id,$location_data['location_id'])->quantity;
         }
 
 		$this->load->view("items/inventory",$data);
@@ -246,30 +312,51 @@
 		$data['item_info']=$this->Item->get_info($item_id);
         
         $data['stock_locations'] = array();
-        $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();   
+        $stock_locations = $this->Stock_location->get_undeleted_all()->result_array();
         foreach($stock_locations as $location_data)
         {            
             $data['stock_locations'][$location_data['location_id']] = $location_data['location_name'];
-            $data['item_quantities'][$location_data['location_id']] = $this->Item_quantities->get_item_quantity($item_id,$location_data['location_id'])->quantity;
+            $data['item_quantities'][$location_data['location_id']] = $this->Item_quantity->get_item_quantity($item_id,$location_data['location_id'])->quantity;
         }     
                 
 		$this->load->view("items/count_details",$data);
-	} //------------------------------------------- Ramel
+	}
 
 	function generate_barcodes($item_ids)
 	{
+		$this->load->library('barcode_lib');
 		$result = array();
 
 		$item_ids = explode(':', $item_ids);
-		foreach ($item_ids as $item_id)
+		$result = $this->Item->get_multiple_info($item_ids)->result_array();
+		$config = $this->barcode_lib->get_barcode_config();
+
+		$data['barcode_config'] = $config;
+		
+		// check the list of items to see if any item_number field is empty
+		foreach($result as &$item)
 		{
-			$item_info = $this->Item->get_info($item_id);
+			// update the UPC/EAN/ISBN field if empty / null with the newly generated barcode
+			if (empty($item['item_number']) && $this->Appconfig->get('barcode_generate_if_empty'))
+			{
+				// get the newly generated barcode
+				$barcode_instance = Barcode_lib::barcode_instance($item, $config);
+				$item['item_number'] = $barcode_instance->getData();
+				// remove from item any suppliers table info to avoid save failure because of unknown fields
+				// WARNING: if suppliers table is changed this list needs to be upgraded, which makes the matter a bit tricky to maintain
+				unset($item['person_id']);
+				unset($item['company_name']);
+				unset($item['account_number']);
+				unset($item['agency_name']);
 
-			$result[] = array('name' =>$item_info->name, 'id'=> $item_id);
+				// update the item in the database in order to save the UPC/EAN/ISBN field
+				$this->Item->save($item, $item['item_id']);
+			}
 		}
-
 		$data['items'] = $result;
+		// display barcodes
 		$this->load->view("barcode_sheet", $data);
+
 	}
 
 	function bulk_edit()
@@ -278,7 +365,7 @@
 		$suppliers = array('' => $this->lang->line('items_none'));
 		foreach($this->Supplier->get_all()->result_array() as $row)
 		{
-			$suppliers[$row['person_id']] = $row['first_name'] .' '. $row['last_name'];
+			$suppliers[$row['person_id']] = $row['company_name'];
 		}
 		$data['suppliers'] = $suppliers;
 		$data['allow_alt_description_choices'] = array(
@@ -295,6 +383,8 @@
 
 	function save($item_id=-1)
 	{
+		$upload_success = $this->_handle_image_upload();
+		$upload_data = $this->upload->data();
         //Save item data
 		$item_data = array(
 		'name'=>$this->input->post('name'),
@@ -305,21 +395,27 @@
 		'cost_price'=>$this->input->post('cost_price'),
 		'unit_price'=>$this->input->post('unit_price'),
 		'reorder_level'=>$this->input->post('reorder_level'),
-		'allow_alt_description'=>$this->input->post('allow_alt_description'),
-		'is_serialized'=>$this->input->post('is_serialized'),
-		'deleted'=>$this->input->post('is_deleted'),  /** Parq 131215 **/
-		'custom1'=>$this->input->post('custom1'),	/**GARRISON ADDED 4/21/2013**/			
-		'custom2'=>$this->input->post('custom2'),/**GARRISON ADDED 4/21/2013**/
-		'custom3'=>$this->input->post('custom3'),/**GARRISON ADDED 4/21/2013**/
-		'custom4'=>$this->input->post('custom4'),/**GARRISON ADDED 4/21/2013**/
-		'custom5'=>$this->input->post('custom5'),/**GARRISON ADDED 4/21/2013**/
-		'custom6'=>$this->input->post('custom6'),/**GARRISON ADDED 4/21/2013**/
-		'custom7'=>$this->input->post('custom7'),/**GARRISON ADDED 4/21/2013**/
-		'custom8'=>$this->input->post('custom8'),/**GARRISON ADDED 4/21/2013**/
-		'custom9'=>$this->input->post('custom9'),/**GARRISON ADDED 4/21/2013**/
-		'custom10'=>$this->input->post('custom10')/**GARRISON ADDED 4/21/2013**/
+			'receiving_quantity'=>$this->input->post('receiving_quantity'),
+			'allow_alt_description'=>$this->input->post('allow_alt_description') != null,
+			'is_serialized'=>$this->input->post('is_serialized') != null,
+			'deleted'=>$this->input->post('is_deleted') != null,
+			'custom1'=>$this->input->post('custom1') == null ? '' : $this->input->post('custom1'),
+			'custom2'=>$this->input->post('custom2') == null ? '' : $this->input->post('custom2'),
+			'custom3'=>$this->input->post('custom3') == null ? '' : $this->input->post('custom3'),
+			'custom4'=>$this->input->post('custom4') == null ? '' : $this->input->post('custom4'),
+			'custom5'=>$this->input->post('custom5') == null ? '' : $this->input->post('custom5'),
+			'custom6'=>$this->input->post('custom6') == null ? '' : $this->input->post('custom6'),
+			'custom7'=>$this->input->post('custom7') == null ? '' : $this->input->post('custom7'),
+			'custom8'=>$this->input->post('custom8') == null ? '' : $this->input->post('custom8'),
+			'custom9'=>$this->input->post('custom9') == null ? '' : $this->input->post('custom9'),
+			'custom10'=>$this->input->post('custom10') == null ? '' : $this->input->post('custom10')
 		);
 
+		if (!empty($upload_data['orig_name']))
+		{
+			$item_data['pic_id'] = $upload_data['raw_name'];
+		}
+		
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
 		$cur_item_info = $this->Item->get_info($item_id);
 
@@ -323,20 +419,15 @@
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
 		$cur_item_info = $this->Item->get_info($item_id);
 
-
 		if($this->Item->save($item_data,$item_id))
 		{
+			$success = TRUE;
+			$new_item = FALSE;
 			//New item
 			if($item_id==-1)
 			{
-				echo json_encode(array('success'=>true,'message'=>$this->lang->line('items_successful_adding').' '.
-				$item_data['name'],'item_id'=>$item_data['item_id']));
 				$item_id = $item_data['item_id'];
-			}
-			else //previous item
-			{
-				echo json_encode(array('success'=>true,'message'=>$this->lang->line('items_successful_updating').' '.
-				$item_data['name'],'item_id'=>$item_id));
+				$new_item = TRUE;
 			}
 
 			$items_taxes_data = array();
@@ -349,24 +440,22 @@
 					$items_taxes_data[] = array('name'=>$tax_names[$k], 'percent'=>$tax_percents[$k] );
 				}
 			}
-			$this->Item_taxes->save($items_taxes_data, $item_id);
-
+			$success &= $this->Item_taxes->save($items_taxes_data, $item_id);
             
             //Save item quantity
-            $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();          
+            $stock_locations = $this->Stock_location->get_undeleted_all()->result_array();
             foreach($stock_locations as $location_data)
             {
                 $updated_quantity = $this->input->post($location_data['location_id'].'_quantity');
                 $location_detail = array('item_id'=>$item_id,
                                         'location_id'=>$location_data['location_id'],
                                         'quantity'=>$updated_quantity);  
-                $item_quantity = $this->Item_quantities->get_item_quantity($item_id, $location_data['location_id']);
-                if ($item_quantity->quantity != $updated_quantity) 
+                $item_quantity = $this->Item_quantity->get_item_quantity($item_id, $location_data['location_id']);
+                if ($item_quantity->quantity != $updated_quantity || $new_item) 
                 {              
-	                $this->Item_quantities->save($location_detail, $item_id, $location_data['location_id']);
+	                $success &= $this->Item_quantity->save($location_detail, $item_id, $location_data['location_id']);
 	                
-	                $inv_data = array
-	                (
+	                $inv_data = array(
 	                    'trans_date'=>date('Y-m-d H:i:s'),
 	                    'trans_items'=>$item_id,
 	                    'trans_user'=>$employee_id,
@@ -374,9 +463,25 @@
 	                    'trans_comment'=>$this->lang->line('items_manually_editing_of_quantity'),
 	                    'trans_inventory'=>$updated_quantity - $item_quantity->quantity
 	                );
-	                $this->Inventory->insert($inv_data);       
+
+	                $success &= $this->Inventory->insert($inv_data);       
+                }                                            
                 }                                            
+			if ($success && $upload_success)
+            {
+            	$success_message = $this->lang->line('items_successful_' . ($new_item ? 'adding' : 'updating')) .' '. $item_data['name'];
+
+            	echo json_encode(array('success'=>true, 'message'=>$success_message, 'item_id'=>$item_id));
+            }
+            else
+            {
+            	$error_message = $upload_success ? 
+	            	$this->lang->line('items_error_adding_updating') .' '. $item_data['name'] : 
+    	        	$this->upload->display_errors(); 
+
+            	echo json_encode(array('success'=>false, 'message'=>$error_message, 'item_id'=>$item_id)); 
             }        
+            
 		}
 		else//failure
 		{
@@ -380,20 +485,41 @@
 		}
 		else//failure
 		{
-			echo json_encode(array('success'=>false,'message'=>$this->lang->line('items_error_adding_updating').' '.
-			$item_data['name'],'item_id'=>-1));
+			echo json_encode(array('success'=>false, 'message'=>$this->lang->line('items_error_adding_updating').' '.$item_data['name'], 'item_id'=>-1));
+		}
 		}
 
+	function check_item_number()
+	{
+		$exists = $this->Item->item_number_exists($this->input->post('item_number'),$this->input->post('item_id'));
+		echo !$exists ? 'true' : 'false';
+	}
+	
+	function _handle_image_upload()
+	{
+		$this->load->helper('directory');
+		$map = directory_map('./uploads/item_pics/', 1);
+		// load upload library
+		$config = array('upload_path' => './uploads/item_pics/',
+				'allowed_types' => 'gif|jpg|png',
+				'max_size' => '100',
+				'max_width' => '640',
+				'max_height' => '480',
+				'file_name' => sizeof($map));
+		$this->load->library('upload', $config);
+		$this->upload->do_upload('item_image');           
+		
+		return strlen($this->upload->display_errors()) == 0 || 
+            	!strcmp($this->upload->display_errors(), 
+            		'<p>'.$this->lang->line('upload_no_file_selected').'</p>');
 	}
 
-	//Ramel Inventory Tracking
 	function save_inventory($item_id=-1)
 	{
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
 		$cur_item_info = $this->Item->get_info($item_id);
         $location_id = $this->input->post('stock_location');
-		$inv_data = array
-		(
+		$inv_data = array(
 			'trans_date'=>date('Y-m-d H:i:s'),
 			'trans_items'=>$item_id,
 			'trans_user'=>$employee_id,
@@ -401,16 +527,18 @@
 			'trans_comment'=>$this->input->post('trans_comment'),
 			'trans_inventory'=>$this->input->post('newquantity')
 		);
+		
 		$this->Inventory->insert($inv_data);
-                //Update stock quantity
 
-                $item_quantity= $this->Item_quantities->get_item_quantity($item_id,$location_id);
+		//Update stock quantity
+		$item_quantity= $this->Item_quantity->get_item_quantity($item_id,$location_id);
                 $item_quantity_data = array(
                 'item_id'=>$item_id,
                 'location_id'=>$location_id,
                 'quantity'=>$item_quantity->quantity + $this->input->post('newquantity')
                 );
-                if($this->Item_quantities->save($item_quantity_data,$item_id,$location_id))
+
+		if($this->Item_quantity->save($item_quantity_data,$item_id,$location_id))
                 {
 			echo json_encode(array('success'=>true,'message'=>$this->lang->line('items_successful_updating').' '.
 			$cur_item_info->name,'item_id'=>$item_id));
@@ -420,8 +548,7 @@
 			echo json_encode(array('success'=>false,'message'=>$this->lang->line('items_error_adding_updating').' '.
 			$cur_item_info->name,'item_id'=>-1));
 		}
-
-	}//---------------------------------------------------------------------Ramel
+	}
 
 	function bulk_update()
 	{
@@ -431,11 +558,11 @@
 		foreach($_POST as $key=>$value)
 		{
 			//This field is nullable, so treat it differently
-			if ($key == 'supplier_id')
+			if($key == 'supplier_id' && $value != '')
 			{
-				$item_data["$key"]=$value == '' ? null : $value;
+				$item_data["$key"] = $value;
 			}
-			elseif($value!='' and !(in_array($key, array('item_ids', 'tax_names', 'tax_percents'))))
+			elseif($value != '' && !(in_array($key, array('submit', 'item_ids', 'tax_names', 'tax_percents'))))
 			{
 				$item_data["$key"]=$value;
 			}
@@ -447,14 +574,21 @@
 			$items_taxes_data = array();
 			$tax_names = $this->input->post('tax_names');
 			$tax_percents = $this->input->post('tax_percents');
+			$tax_updated = false;
 			for($k=0;$k<count($tax_percents);$k++)
 			{
-				if (is_numeric($tax_percents[$k]))
+				if (!empty($tax_names[$k]) && is_numeric($tax_percents[$k]))
 				{
+					$tax_updated = true;
+					
 					$items_taxes_data[] = array('name'=>$tax_names[$k], 'percent'=>$tax_percents[$k] );
 				}
 			}
+			
+			if($tax_updated)
+			{
 			$this->Item_taxes->save_multiple($items_taxes_data, $items_to_update);
+			}
 
 			echo json_encode(array('success'=>true,'message'=>$this->lang->line('items_successful_bulk_edit')));
 		}
@@ -511,36 +646,41 @@
 				$i=1;
 				while (($data = fgetcsv($handle)) !== FALSE)
 				{
+					if (sizeof($data) >= 23) {
 					$item_data = array(
 					'name'			=>	$data[1],
-					'description'	=>	$data[13],
+	                        'description'	=>	$data[11],
 					'category'		=>	$data[2],
 					'cost_price'	=>	$data[4],
 					'unit_price'	=>	$data[5],
-					'quantity'		=>	$data[10],
-					'reorder_level'	=>	$data[11],
+	                        'reorder_level'	=>	$data[10],
 					'supplier_id'	=>  $this->Supplier->exists($data[3]) ? $data[3] : null,
-					'allow_alt_description'	=>	$data[14] != '' ? '1' : '0',
-					'is_serialized'	=>	$data[15] != '' ? '1' : '0',
-					'custom1'		=>	$data[16],	/** GARRISON ADDED 5/6/2013 **/
-					'custom2'		=>	$data[17],	/** GARRISON ADDED 5/6/2013 **/
-					'custom3'		=>	$data[18],	/** GARRISON ADDED 5/6/2013 **/
-					'custom4'		=>	$data[19],	/** GARRISON ADDED 5/6/2013 **/
-					'custom5'		=>	$data[20],	/** GARRISON ADDED 5/6/2013 **/
-					'custom6'		=>	$data[21],	/** GARRISON ADDED 5/6/2013 **/
-					'custom7'		=>	$data[22],	/** GARRISON ADDED 5/6/2013 **/
-					'custom8'		=>	$data[23],	/** GARRISON ADDED 5/6/2013 **/
-					'custom9'		=>	$data[24],	/** GARRISON ADDED 5/6/2013 **/
-					'custom10'		=>	$data[25]	/** GARRISON ADDED 5/6/2013 **/
+	                        'allow_alt_description'	=>	$data[12] != '' ? '1' : '0',
+	                        'is_serialized'	=>	$data[13] != '' ? '1' : '0',
+	                        'custom1'		=>	$data[14],
+	                        'custom2'		=>	$data[15],
+	                        'custom3'		=>	$data[16],
+	                        'custom4'		=>	$data[17],
+	                        'custom5'		=>	$data[18],
+	                        'custom6'		=>	$data[19],
+	                        'custom7'		=>	$data[20],
+	                        'custom8'		=>	$data[21],
+	                        'custom9'		=>	$data[22],
+	                        'custom10'		=>	$data[23]
 					);
 					$item_number = $data[0];
-
+	                    $invalidated = false;
 					if ($item_number != "")
 					{
 						$item_data['item_number'] = $item_number;
+		                    $invalidated = $this->Item->item_number_exists($item_number);
 					}
-
-					if($this->Item->save($item_data))
+					}
+					else 
+					{
+						$invalidated = true;
+					}
+                    if(!$invalidated && $this->Item->save($item_data)) 
 					{
 						$items_taxes_data = null;
 						//tax 1
@@ -561,18 +701,64 @@
 							$this->Item_taxes->save($items_taxes_data, $item_data['item_id']);
 						}
 
+                        // quantities   & inventory Info
 							$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
 							$emp_info=$this->Employee->get_info($employee_id);
 							$comment ='Qty CSV Imported';
+
+                        $cols = count($data);
+
+                        // array to store information if location got a quantity
+                        $allowed_locations = $this->Stock_location->get_allowed_locations();
+                        for ($col = 24; $col < $cols; $col = $col + 2)
+                        {
+                            $location_id = $data[$col];
+                            if (array_key_exists($location_id, $allowed_locations))
+                            {
+                                $item_quantity_data = array (
+                                    'item_id' => $item_data['item_id'],
+                                    'location_id' => $location_id,
+                                    'quantity' => $data[$col + 1],
+                                );
+                                $this->Item_quantity->save($item_quantity_data, $item_data['item_id'], $location_id);
+
+                                $excel_data = array(
+                                    'trans_items'=>$item_data['item_id'],
+                                    'trans_user'=>$employee_id,
+                                    'trans_comment'=>$comment,
+                                    'trans_location'=>$data[$col],
+                                    'trans_inventory'=>$data[$col + 1]
+                                );
+								
+                                $this->Inventory->insert($excel_data);
+                                unset($allowed_locations[$location_id]);
+                            }
+                        }
+
+                        /*
+                         * now iterate through the array and check for which location_id no entry into item_quantities was made yet
+                         * those get an entry with quantity as 0.
+                         * unfortunately a bit duplicate code from above...
+                         */
+                        foreach($allowed_locations as $location_id => $location_name)
+                        {
+                            $item_quantity_data = array(
+                                'item_id' => $item_data['item_id'],
+                                'location_id' => $location_id,
+                                'quantity' => 0,
+                            );
+                            $this->Item_quantity->save($item_quantity_data, $item_data['item_id'], $data[$col]);
+
 							$excel_data = array
 								(
 								'trans_items'=>$item_data['item_id'],
 								'trans_user'=>$employee_id,
 								'trans_comment'=>$comment,
-								'trans_inventory'=>$data[10]
+                                    'trans_location'=>$location_id,
+                                    'trans_inventory'=>0
 								);
 								$this->db->insert('inventory',$excel_data);
-						//------------------------------------------------Ramel
+                        }
 					}
 					else//insert or update item failure
 					{
@@ -590,7 +776,7 @@
 		}
 
 		$success = true;
-		if(count($failCodes) > 1)
+		if(count($failCodes) > 0)
 		{
 			$msg = "Most items imported. But some were not, here is list of their CODE (" .count($failCodes) ."): ".implode(", ", $failCodes);
 			$success = false;
@@ -608,13 +794,7 @@
 	*/
 	function get_form_width()
 	{
-		return 560;
+		return 450;
 	}
-    
-    function is_sale_store_item($item_number)
-    {  
-        echo $this->Item->is_sale_store_item_exist($item_number);        
-    }
-    
 }
 ?>
Only in pos-prod/application/controllers: items.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/languagecheck.php opensourcepos/application/controllers/Languagecheck.php
--- pos-prod/application/controllers/languagecheck.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Languagecheck.php	2016-05-23 15:32:31.798841005 -0700
@@ -62,7 +62,7 @@
 		foreach( $references as $reference )
 		{
 			// skip non-language files in the language directory
-			if ( strpos($reference, '_lang'.EXT) === FALSE )
+			if ( strpos($reference, '_lang.php') === FALSE )
 			{
 				continue;
 			}
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/login.php opensourcepos/application/controllers/Login.php
--- pos-prod/application/controllers/login.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Login.php	2016-05-23 15:32:31.798841005 -0700
@@ -30,7 +30,7 @@
 	
 	function login_check($username)
 	{
-		$password = $this->input->post("password");	
+		$password = $this->input->post('password');	
 		
 		if(!$this->Employee->login($username,$password))
 		{
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/no_access.php opensourcepos/application/controllers/No_access.php
--- pos-prod/application/controllers/no_access.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/No_access.php	2016-05-23 15:32:31.798841005 -0700
@@ -6,9 +6,10 @@
 		parent::__construct();
 	}
 	
-	function index($module_id='')
+	function index($module_id='',$permission_id='')
 	{
 		$data['module_name']=$this->Module->get_module_name($module_id);
+		$data['permission_id']=$permission_id;
 		$this->load->view('no_access',$data);
 	}
 }
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/person_controller.php opensourcepos/application/controllers/Person_controller.php
--- pos-prod/application/controllers/person_controller.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Person_controller.php	2016-05-23 15:32:31.798841005 -0700
@@ -30,7 +30,7 @@
 		}
 		echo '#';
 	}
-/** GARRISON ADDED 4/25/2013 IN PROGRESS **/	
+	
 	/*
 	 Gives search suggestions based on what is being searched for
 	*/
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/receivings.php opensourcepos/application/controllers/Receivings.php
--- pos-prod/application/controllers/receivings.php	2016-05-05 18:59:56.000000000 -0700
+++ opensourcepos/application/controllers/Receivings.php	2016-05-23 15:32:31.798841005 -0700
@@ -6,6 +6,7 @@
 	{
 		parent::__construct('receivings');
 		$this->load->library('receiving_lib');
+		$this->load->library('barcode_lib');
 	}
 
 	function index()
@@ -28,23 +29,26 @@
 
 	function select_supplier()
 	{
-		$supplier_id = $this->input->post("supplier");
+		$supplier_id = $this->input->post('supplier');
+		if ($this->Supplier->exists($supplier_id))
+		{
 		$this->receiving_lib->set_supplier($supplier_id);
+		}
 		$this->_reload();
 	}
 
         function change_mode()
         {
                 $stock_destination = $this->input->post('stock_destination');
-                $stock_source = $this->input->post("stock_source");
+		$stock_source = $this->input->post('stock_source');
                 if ((!$stock_source || $stock_source == $this->receiving_lib->get_stock_source()) &&
                         (!$stock_destination || $stock_destination == $this->receiving_lib->get_stock_destination()))
                 {
-                        $this->receiving_lib->empty_cart();
-                        $mode = $this->input->post("mode");
+			$this->receiving_lib->clear_invoice_number();
+			$mode = $this->input->post('mode');
                         $this->receiving_lib->set_mode($mode);
                 }
-                else
+		else if ($this->Stock_location->is_allowed_location($stock_source, 'receivings'))
                 {
                         $this->receiving_lib->set_stock_source($stock_source);
                         $this->receiving_lib->set_stock_destination($stock_destination);
@@ -52,16 +56,36 @@
                 $this->_reload();
         }
 
+	function set_comment()
+	{
+		$this->receiving_lib->set_comment($this->input->post('comment'));
+	}
+	
+	function set_invoice_number_enabled()
+	{
+		$this->receiving_lib->set_invoice_number_enabled($this->input->post('recv_invoice_number_enabled'));
+	}
+	
+	function set_print_after_sale()
+	{
+		$this->receiving_lib->set_print_after_sale($this->input->post('recv_print_after_sale'));
+	}
+	
+	function set_invoice_number()
+	{
+		$this->receiving_lib->set_invoice_number($this->input->post('recv_invoice_number'));
+	}
+	
 	function add()
 	{
 		$data=array();
 		$mode = $this->receiving_lib->get_mode();
-                $item_id_or_number_or_item_kit_or_receipt = $this->input->post("item");
+		$item_id_or_number_or_item_kit_or_receipt = $this->input->post('item');
                 $quantity = ($mode=="receive" or $mode=="requisition") ? 1:-1;
                 $item_location = $this->receiving_lib->get_stock_source();
-                if($this->receiving_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt) && $mode=='return')
+		if($mode=='return' && $this->receiving_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt))
                 {
-                        $this->receiving_lib->return_entire_receiving($item_id_or_number_or_item_kit_or_receipt,$item_location);
+			$this->receiving_lib->return_entire_receiving($item_id_or_number_or_item_kit_or_receipt);
                 }
                 elseif($this->receiving_lib->is_valid_item_kit($item_id_or_number_or_item_kit_or_receipt))
                 {
@@ -80,16 +104,15 @@
 		$data= array();
 
 		$this->form_validation->set_rules('price', 'lang:items_price', 'required|numeric');
-		$this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|integer');
-		$this->form_validation->set_rules('discount', 'lang:items_discount', 'required|integer');
+		$this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|numeric');
+		$this->form_validation->set_rules('discount', 'lang:items_discount', 'required|numeric');
 
-    	$description = $this->input->post("description");
-    	$serialnumber = $this->input->post("serialnumber");
-		$price = $this->input->post("price");
-		$unit_price = $this->input->post("unit_price");
-		$quantity = $this->input->post("quantity");
-                $discount = $this->input->post("discount");
-                $item_location = $this->input->post("location");
+    	$description = $this->input->post('description');
+    	$serialnumber = $this->input->post('serialnumber');
+		$price = $this->input->post('price');
+		$quantity = $this->input->post('quantity');
+		$discount = $this->input->post('discount');
+		$item_location = $this->input->post('location');
 
 		if ($this->form_validation->run() != FALSE)
 		{
@@ -103,24 +126,28 @@
 		$this->_reload($data);
 	}
 
-     function edit_item_unit($item_id)
+	function edit($receiving_id)
      {
          $data= array();
  
-         $this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|integer');
-         $quantity = $this->input->post("quantity");
- 
- 
-         if ($this->form_validation->run() != FALSE)
+		$data['suppliers'] = array('' => 'No Supplier');
+		foreach ($this->Supplier->get_all()->result() as $supplier)
          {
-             $this->receiving_lib->edit_item_unit($item_id,$description,$quantity,0,0);
+			$data['suppliers'][$supplier->person_id] = $supplier->first_name . ' ' . $supplier->last_name;
          }
-         else
+	
+		$data['employees'] = array();
+		foreach ($this->Employee->get_all()->result() as $employee)
          {
-             $data['error']=$this->lang->line('recvs_error_editing_item');
+			$data['employees'][$employee->person_id] = $employee->first_name . ' '. $employee->last_name;
          }
  
-         $this->_reload($data);
+		$receiving_info = $this->Receiving->get_info($receiving_id)->row_array();
+		$person_name = $receiving_info['first_name'] . " " . $receiving_info['last_name'];
+		$data['selected_supplier'] = !empty($receiving_info['supplier_id']) ? $receiving_info['supplier_id'] . "|" . $person_name : "";
+		$data['receiving_info'] = $receiving_info;
+	
+		$this->load->view('receivings/form', $data);
      }
  
 	function delete_item($item_number)
@@ -129,8 +156,25 @@
 		$this->_reload();
 	}
 
+	function delete($receiving_id = -1, $update_inventory=TRUE) 
+	{
+		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
+		$receiving_ids=$receiving_id == -1 ? $this->input->post('ids') : array($receiving_id);
+	
+		if($this->Receiving->delete_list($receiving_ids, $employee_id, $update_inventory))
+		{
+			echo json_encode(array('success'=>true,'message'=>$this->lang->line('recvs_successfully_deleted').' '.
+					count($receiving_ids).' '.$this->lang->line('recvs_one_or_multiple'),'ids'=>$receiving_ids));
+		}
+		else
+		{
+			echo json_encode(array('success'=>false,'message'=>$this->lang->line('recvs_cannot_be_deleted')));
+		}
+	}
+
 	function delete_supplier()
 	{
+		$this->receiving_lib->clear_invoice_number();
 		$this->receiving_lib->delete_supplier();
 		$this->_reload();
 	}
@@ -140,47 +184,96 @@
 		$data['cart']=$this->receiving_lib->get_cart();
 		$data['total']=$this->receiving_lib->get_total();
 		$data['receipt_title']=$this->lang->line('recvs_receipt');
-		$data['transaction_time']= date('m/d/Y h:i:s a');
+		$data['transaction_time']= date($this->config->item('dateformat').' '.$this->config->item('timeformat'));
                 $data['mode']=$this->receiving_lib->get_mode();
-                $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
-                $data['show_stock_locations'] = count($stock_locations) > 1;
+		$data['show_stock_locations']=$this->Stock_location->show_locations('receivings');
 		$supplier_id=$this->receiving_lib->get_supplier();
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
 		$comment = $this->input->post('comment');
 		$emp_info=$this->Employee->get_info($employee_id);
 		$payment_type = $this->input->post('payment_type');
-		$data['payment_type']=$this->input->post('payment_type');
          $data['stock_location']=$this->receiving_lib->get_stock_source();
-
-		if ($this->input->post('amount_tendered'))
+		if ( $this->input->post('amount_tendered') != null )
 		{
 			$data['amount_tendered'] = $this->input->post('amount_tendered');
 			$data['amount_change'] = to_currency($data['amount_tendered'] - round($data['total'], 2));
 		}
 		$data['employee']=$emp_info->first_name.' '.$emp_info->last_name;
-
+		$suppl_info	='';
 		if($supplier_id!=-1)
 		{
 			$suppl_info=$this->Supplier->get_info($supplier_id);
-			$data['supplier']=$suppl_info->first_name.' '.$suppl_info->last_name;
-			$data['supplier_2']=$suppl_info->address_1;
-			$data['supplier_3']=$suppl_info->city.', '.$suppl_info->state.' '.$suppl_info->zip;
-			if ( $data['supplier_3'] == ',  ' ) $data['supplier_3'] = '';
-			$data['supplier_4']=$suppl_info->phone_number;
-			$data['supplier_5']=$suppl_info->account_number;
+			$data['supplier']=$suppl_info->company_name;  //   first_name.' '.$suppl_info->last_name;
 		}
-
+		$invoice_number=$this->_substitute_invoice_number($suppl_info);
+		if ($this->receiving_lib->is_invoice_number_enabled() && $this->Receiving->invoice_number_exists($invoice_number))
+		{
+			$data['error']=$this->lang->line('recvs_invoice_number_duplicate');
+			$this->_reload($data);
+		}
+		else
+		{
+			$invoice_number = $this->receiving_lib->is_invoice_number_enabled() ? $invoice_number : null;
+			$data['invoice_number']=$invoice_number;
+			$data['payment_type']=$this->input->post('payment_type');
 		//SAVE receiving to database
-                $data['receiving_id']='RECV '.$this->Receiving->save($data['cart'], $supplier_id,$employee_id,$comment,$payment_type,$data['stock_location']);
+			$data['receiving_id']='RECV '.$this->Receiving->save($data['cart'], $supplier_id,$employee_id,$comment,$invoice_number,$payment_type,$data['stock_location']);
 		
 		if ($data['receiving_id'] == 'RECV -1')
 		{
 			$data['error_message'] = $this->lang->line('receivings_transaction_failed');
 		}
-
+			$data['barcode']=$this->barcode_lib->generate_receipt_barcode($data['receiving_id']);
+			$data['print_after_sale'] = $this->receiving_lib->is_print_after_sale();
 		$this->load->view("receivings/receipt",$data);
 		$this->receiving_lib->clear_all();
-                $this->_remove_duplicate_cookies();
+		}
+	}
+	
+	private function _substitute_variable($text, $variable, $object, $function)
+	{
+		// don't query if this variable isn't used
+		if (strstr($text, $variable))
+		{
+			$value = call_user_func(array($object, $function));
+			$text = str_replace($variable, $value, $text);
+		}
+		return $text;
+	}
+	
+	private function _substitute_variables($text,$supplier_info)
+	{
+		$text=$this->_substitute_variable($text, '$YCO', $this->Receiving, 'get_invoice_number_for_year');
+		$text=$this->_substitute_variable($text, '$CO', $this->Receiving , 'get_invoice_count');
+		$text=strftime($text);
+		$text=$this->_substitute_supplier($text, $supplier_info);
+		return $text;
+	}
+	
+
+	private function _substitute_supplier($text,$supplier_info)
+	{
+		$supplier_id=$this->receiving_lib->get_supplier();
+		if($supplier_id!=-1)
+		{
+			$text=str_replace('$SU',$supplier_info->company_name,$text);
+			$words = preg_split("/\s+/", trim($supplier_info->company_name));
+			$acronym = "";
+			foreach ($words as $w) {
+				$acronym .= $w[0];
+			}
+			$text=str_replace('$SI',$acronym,$text);
+		}
+		return $text;
+	}
+	
+	private function _substitute_invoice_number($supplier_info='')
+	{
+		$invoice_number=$this->receiving_lib->get_invoice_number();
+		$invoice_number=$this->config->config['recv_invoice_format'];
+		$invoice_number = $this->_substitute_variables($invoice_number,$supplier_info);
+		$this->receiving_lib->set_invoice_number($invoice_number);
+		return $this->receiving_lib->get_invoice_number();
 	}
 
      function requisition_complete()
@@ -211,13 +304,14 @@
                 $data['total']=$this->receiving_lib->get_total();
                 $data['mode']=$this->receiving_lib->get_mode();
                 $data['receipt_title']=$this->lang->line('recvs_receipt');
-                $data['transaction_time']= date('m/d/Y h:i:s a', strtotime($receiving_info['receiving_time']));
-                $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
-                $data['show_stock_locations'] = count($stock_locations) > 1;
+		$data['transaction_time']= date($this->config->item('dateformat').' '.$this->config->item('timeformat'), strtotime($receiving_info['receiving_time']));
+		$data['show_stock_locations']=$this->Stock_location->show_locations('receivings');
                 $supplier_id=$this->receiving_lib->get_supplier();
 		$emp_info=$this->Employee->get_info($receiving_info['employee_id']);
 		$data['payment_type']=$receiving_info['payment_type'];
-
+		$data['invoice_number']=$this->receiving_lib->get_invoice_number();
+		$data['receiving_id']='RECV '.$receiving_id;
+		$data['barcode']=$this->barcode_lib->generate_receipt_barcode($data['receiving_id']);
 		$data['employee']=$emp_info->first_name.' '.$emp_info->last_name;
 
 		if($supplier_id!=-1)
@@ -225,18 +319,13 @@
 			$supplier_info=$this->Supplier->get_info($supplier_id);
 			$data['supplier']=$supplier_info->first_name.' '.$supplier_info->last_name;
 		}
-		$data['receiving_id']='RECV '.$receiving_id;
+		$data['print_after_sale'] = FALSE;
 		$this->load->view("receivings/receipt",$data);
 		$this->receiving_lib->clear_all();
-                $this->_remove_duplicate_cookies();
 	}
 
-	function _reload($data=array())
+	private function _reload($data=array())
 	{
-         $data['stock_locations'] = array();
-         $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
-                $show_stock_locations = count($stock_locations) > 1;
- 
                 $person_info = $this->Employee->get_logged_in_employee_info();
                 $data['cart']=$this->receiving_lib->get_cart();
                 $data['modes']=array('receive'=>$this->lang->line('recvs_receiving'),'return'=>$this->lang->line('recvs_return'));
@@ -240,43 +329,69 @@
                 $person_info = $this->Employee->get_logged_in_employee_info();
                 $data['cart']=$this->receiving_lib->get_cart();
                 $data['modes']=array('receive'=>$this->lang->line('recvs_receiving'),'return'=>$this->lang->line('recvs_return'));
- 
                 $data['mode']=$this->receiving_lib->get_mode();
  
-         if ($show_stock_locations) {
-                $data['modes']['requisition'] = $this->lang->line('recvs_requisition');
-                foreach($stock_locations as $location_data)
+		$data['stock_locations']=$this->Stock_location->get_allowed_locations('receivings');
+		$show_stock_locations = count($data['stock_locations']) > 1;
+        if ($show_stock_locations) 
                 {
-                    $data['stock_locations'][$location_data['location_id']] = $location_data['location_name'];
-                }
- 
+        	$data['modes']['requisition']=$this->lang->line('recvs_requisition');
                 $data['stock_source']=$this->receiving_lib->get_stock_source();
                 $data['stock_destination']=$this->receiving_lib->get_stock_destination();
          }
          $data['show_stock_locations'] = $show_stock_locations;
  
                 $data['total']=$this->receiving_lib->get_total();
-		$data['items_module_allowed'] = $this->Employee->has_permission('items', $person_info->person_id);
+		$data['items_module_allowed']=$this->Employee->has_grant('items',$person_info->person_id);
+		$data['comment']=$this->receiving_lib->get_comment();
 		$data['payment_options']=array(
 			$this->lang->line('sales_cash') => $this->lang->line('sales_cash'),
 			$this->lang->line('sales_check') => $this->lang->line('sales_check'),
 			$this->lang->line('sales_debit') => $this->lang->line('sales_debit'),
-			$this->lang->line('sales_credit') => $this->lang->line('sales_credit'),
-			$this->lang->line('sales_layaway_bal') => $this->lang->line('sales_layaway_bal'),
-			$this->lang->line('sales_oos_pmt') => $this->lang->line('sales_oos_pmt'),
-			$this->lang->line('sales_deposit') => $this->lang->line('sales_deposit'),
-			$this->lang->line('sales_house_acct') => $this->lang->line('sales_house_acct')
+			$this->lang->line('sales_credit') => $this->lang->line('sales_credit')
 		);
 
 		$supplier_id=$this->receiving_lib->get_supplier();
+		$suppl_info='';
 		if($supplier_id!=-1)
 		{
-			$info=$this->Supplier->get_info($supplier_id);
-			$data['supplier']=$info->first_name.' '.$info->last_name;
+			$suppl_info=$this->Supplier->get_info($supplier_id);
+			$data['supplier']=$suppl_info->company_name;  // first_name.' '.$info->last_name;
 		}
+		$data['invoice_number']=$this->_substitute_invoice_number($suppl_info);
+		$data['invoice_number_enabled']=$this->receiving_lib->is_invoice_number_enabled();
+		$data['print_after_sale']=$this->receiving_lib->is_print_after_sale();
 		$this->load->view("receivings/receiving",$data);
-                $this->_remove_duplicate_cookies();
+	}
+	
+	function save($receiving_id)
+	{
+		$date_formatter = date_create_from_format($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), $this->input->post('date', TRUE));
 
+		$receiving_data = array(
+			'receiving_time' => $date_formatter->format('Y-m-d H:i:s'),
+			'supplier_id' => empty($this->input->post('supplier_id')) ? NULL : $this->input->post('supplier_id'),
+			'employee_id' => $this->input->post('employee_id'),
+			'comment' => $this->input->post('comment'),
+			'invoice_number' => $this->input->post('invoice_number')
+		);
+	
+		if ($this->Receiving->update($receiving_data, $receiving_id))
+		{
+			echo json_encode(array(
+				'success'=>true,
+				'message'=>$this->lang->line('recvs_successfully_updated'),
+				'id'=>$receiving_id)
+			);
+		}
+		else
+		{
+			echo json_encode(array(
+				'success'=>false,
+				'message'=>$this->lang->line('recvs_unsuccessfully_updated'),
+				'id'=>$receiving_id)
+			);
+		}
 	}
 
     function cancel_receiving()
@@ -285,5 +400,12 @@
     	$this->_reload();
     }
 
+    function check_invoice_number()
+    {
+		$receiving_id=$this->input->post('receiving_id');
+		$invoice_number=$this->input->post('invoice_number');
+		$exists=!empty($invoice_number) && $this->Receiving->invoice_number_exists($invoice_number,$receiving_id);
+		echo !$exists ? 'true' : 'false';
+    }
 }
 ?>
Only in pos-prod/application/controllers: receivings.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/reports.php opensourcepos/application/controllers/Reports.php
--- pos-prod/application/controllers/reports.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/controllers/Reports.php	2016-05-23 15:32:31.799840990 -0700
@@ -9,13 +10,25 @@
 	function __construct()
 	{
 		parent::__construct('reports');
+		$method_name = $this->uri->segment(2);
+		$exploder = explode('_', $method_name);
+		preg_match("/(?:inventory)|([^_.]*)(?:_graph|_row)?$/", $method_name, $matches);
+		preg_match("/^(.*?)([sy])?$/", array_pop($matches), $matches);
+		$submodule_id = $matches[1] . ((count($matches) > 2) ? $matches[2] : "s");
+		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
+		// check access to report submodule
+		if (sizeof($exploder) > 1 && !$this->Employee->has_grant('reports_'.$submodule_id,$employee_id))
+		{
+			redirect('no_access/reports/reports_' . $submodule_id);
+		}
 		$this->load->helper('report');		
 	}
 	
 	//Initial report listing screen
 	function index()
 	{
-		$this->load->view("reports/listing",array());	
+		$data['grants']=$this->Employee->get_employee_grants($this->session->userdata('person_id'));
+		$this->load->view("reports/listing",$data);
 	}
 	
 	function _get_common_report_data()
@@ -39,12 +52,12 @@
 		$this->load->view("reports/date_input_excel_export",$data);	
 	}
 	
- 	function get_detailed_sales_row($sale_id, $sale_type=1)
+ 	function get_detailed_sales_row($sale_id)
 	{
 		$this->load->model('reports/Detailed_sales');
 		$model = $this->Detailed_sales;
 		
-		$report_data = $model->getDataBySaleId($sale_id, $sale_type);
+		$report_data = $model->getDataBySaleId($sale_id);
 		
 		$summary_data = array(anchor('sales/edit/'.$report_data['sale_id'] . '/width:'.FORM_WIDTH, 
 				'POS '.$report_data['sale_id'], 
@@ -56,15 +69,37 @@
 				to_currency($report_data['subtotal']), 
 				to_currency($report_data['total']), 
 				to_currency($report_data['tax']),
+				to_currency($report_data['cost']),
 				to_currency($report_data['profit']), 
 				$report_data['payment_type'], 
 				$report_data['comment']);
-		echo get_detailed_sales_data_row($summary_data, $this);
+		echo get_detailed_data_row($summary_data, $this);
+	}
+
+	function get_detailed_receivings_row($receiving_id)
+	{
+		$this->load->model('reports/Detailed_receivings');
+		$model = $this->Detailed_receivings;
+
+		$report_data = $model->getDataByReceivingId($receiving_id);
+
+		$summary_data = array(anchor('receivings/edit/'.$report_data['receiving_id'] . '/width:'.FORM_WIDTH,
+				'RECV '.$report_data['receiving_id'],
+				array('class' => 'thickbox')),
+				$report_data['receiving_date'],
+				$report_data['items_purchased'],
+				$report_data['employee_name'],
+				$report_data['supplier_name'],
+				to_currency($report_data['total']),
+				$report_data['payment_type'],
+				$report_data['invoice_number'],
+				$report_data['comment']);
+		echo get_detailed_data_row($summary_data, $this);
 	}
 	
 	function get_summary_data($start_date, $end_date = NULL, $sale_type=0) 
 	{
-		$end_date = $end_date ?: $start_date;
+		$end_date = $end_date ? $end_date : $start_date;
 		$this->load->model('reports/Summary_sales');
 		$model = $this->Summary_sales;
 		$summary = $model->getSummaryData(array(
@@ -84,12 +119,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['sale_date'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
+			$tabular_data[] = array($row['sale_date'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_sales_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -109,12 +144,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['category'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
+			$tabular_data[] = array($row['category'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_categories_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -134,12 +169,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['customer'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
+			$tabular_data[] = array($row['customer'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_customers_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -159,12 +194,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['supplier'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
+			$tabular_data[] = array($row['supplier'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_suppliers_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -184,12 +219,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array(character_limiter($row['name'], 16), $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
+			$tabular_data[] = array(character_limiter($row['name'], 40), $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_items_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -209,12 +244,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['employee'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
+			$tabular_data[] = array($row['employee'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_employees_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -234,12 +269,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['percent'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']));
+			$tabular_data[] = array($row['percent'], $row['count'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_taxes_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -264,7 +299,7 @@
 
 		$data = array(
 			"title" => $this->lang->line('reports_discounts_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -274,6 +309,7 @@
 		$this->load->view("reports/tabular",$data);
 	}
 	
+	//Summary payments report
 	function summary_payments($start_date, $end_date, $sale_type, $export_excel=0)
 	{
 		$this->load->model('reports/Summary_payments');
@@ -283,12 +319,12 @@
 		
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['payment_type'],to_currency($row['payment_amount']));
+			$tabular_data[] = array($row['payment_type'], $row['count'], to_currency($row['payment_amount']));
 		}
 
 		$data = array(
 			"title" => $this->lang->line('reports_payments_summary_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
@@ -306,26 +342,24 @@
 		$this->load->view("reports/date_input",$data);	
 	}
 	
-    function date_input_recv()
+	//Input for reports that require only a date range. (see routes.php to see that all graphical summary reports route here)
+	function date_input_sales()
     {
-	    //log_message('error',print_r($this,true));
         $data = $this->_get_common_report_data();
-	    $data['specific_input_name'] = "Suppliers";
-        $data['mode'] = 'receiving';
-	    $suppliers = array();
-	    $suppliers[-1]=' ';
-	    foreach($this->Supplier->get_all()->result() as $supplier)
-	    {
-		    $suppliers[$supplier->person_id]=$supplier->first_name." ".$supplier->last_name;
-	    }
-	    $data['specific_input_data']=$suppliers;
+		$stock_locations = $this->Stock_location->get_allowed_locations('sales');
+		$stock_locations['all'] =  $this->lang->line('reports_all');
+		$data['stock_locations'] = array_reverse($stock_locations, TRUE);
+        $data['mode'] = 'sale';
         $this->load->view("reports/date_input",$data);  
     }
     
-    function date_input_reqs()
+    function date_input_recv()
     {
         $data = $this->_get_common_report_data();
-        $data['mode'] = 'requisition';
+		$stock_locations = $this->Stock_location->get_allowed_locations('receivings');
+		$stock_locations['all'] =  $this->lang->line('reports_all');
+		$data['stock_locations'] = array_reverse($stock_locations, TRUE);
+ 		$data['mode'] = 'receiving';
         $this->load->view("reports/date_input",$data);  
     }
     
@@ -338,7 +372,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_sales_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_sales_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -355,7 +389,7 @@
 		$graph_data = array();
 		foreach($report_data as $row)
 		{
-			$graph_data[date('m/d/Y', strtotime($row['sale_date']))]= $row['total'];
+			$graph_data[date($this->config->item('dateformat'), strtotime($row['sale_date']))]= $row['total'];
 		}
 
 		$data = array(
@@ -378,7 +412,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_items_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_items_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -417,7 +451,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_categories_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_categories_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -445,6 +479,7 @@
 		$this->load->view("reports/graphs/pie",$data);
 	}
 	
+	//Graphical summary suppliers report
 	function graphical_summary_suppliers($start_date, $end_date, $sale_type)
 	{
 		$this->load->model('reports/Summary_suppliers');
@@ -453,7 +488,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_suppliers_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_suppliers_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -481,6 +516,7 @@
 		$this->load->view("reports/graphs/pie",$data);
 	}
 	
+	//Graphical summary employees report
 	function graphical_summary_employees($start_date, $end_date, $sale_type)
 	{
 		$this->load->model('reports/Summary_employees');
@@ -489,7 +525,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_employees_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_employees_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -517,6 +553,7 @@
 		$this->load->view("reports/graphs/pie",$data);
 	}
 	
+	//Graphical summary taxes report
 	function graphical_summary_taxes($start_date, $end_date, $sale_type)
 	{
 		$this->load->model('reports/Summary_taxes');
@@ -525,7 +562,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_taxes_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_taxes_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -562,7 +599,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_customers_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_customers_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -601,7 +638,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_discounts_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_discounts_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -631,6 +668,7 @@
 		$this->load->view("reports/graphs/bar",$data);
 	}
 	
+	//Graphical summary payments report
 	function graphical_summary_payments($start_date, $end_date, $sale_type)
 	{
 		$this->load->model('reports/Summary_payments');
@@ -639,7 +677,7 @@
 		$data = array(
 			"title" => $this->lang->line('reports_payments_summary_report'),
 			"data_file" => site_url("reports/graphical_summary_payments_graph/$start_date/$end_date/$sale_type"),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type))
 		);
 
@@ -695,21 +734,22 @@
 		
 		foreach($report_data['summary'] as $key=>$row)
 		{
-			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']), $row['payment_type'], $row['comment']);
+			$summary_data[] = array(anchor('sales/receipt/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']), $row['payment_type'], $row['comment']);
 			
 			foreach($report_data['details'][$key] as $drow)
 			{
-				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),to_currency($drow['profit']), $drow['discount_percent'].'%');
+				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']), to_currency($drow['cost']), to_currency($drow['profit']), $drow['discount_percent'].'%');
 			}
 		}
 
 		$customer_info = $this->Customer->get_info($customer_id);
 		$data = array(
 			"title" => $customer_info->first_name .' '. $customer_info->last_name.' '.$this->lang->line('reports_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"summary_data" => $summary_data,
 			"details_data" => $details_data,
+			"header_width" => intval(100 / count($headers['summary'])),
 			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date,'customer_id' =>$customer_id, 'sale_type' => $sale_type)),
 			"export_excel" => $export_excel
 		);
@@ -744,21 +784,22 @@
 		
 		foreach($report_data['summary'] as $key=>$row)
 		{
-			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']), $row['payment_type'], $row['comment']);
+			$summary_data[] = array(anchor('sales/receipt/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']), $row['payment_type'], $row['comment']);
 			
 			foreach($report_data['details'][$key] as $drow)
 			{
-				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),to_currency($drow['profit']), $drow['discount_percent'].'%');
+				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']), to_currency($drow['cost']), to_currency($drow['profit']), $drow['discount_percent'].'%');
 			}
 		}
 
 		$employee_info = $this->Employee->get_info($employee_id);
 		$data = array(
 			"title" => $employee_info->first_name .' '. $employee_info->last_name.' '.$this->lang->line('reports_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
 			"summary_data" => $summary_data,
 			"details_data" => $details_data,
+			"header_width" => intval(100 / count($headers)),
 			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date,'employee_id' =>$employee_id, 'sale_type' => $sale_type)),
 			"export_excel" => $export_excel
 		);
@@ -797,13 +838,13 @@
 				
 			foreach($report_data['details'][$key] as $drow)
 			{
-				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),/*to_currency($drow['profit']),*/ $drow['discount_percent'].'%');
+				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),/*to_currency($drow['profit']),*/ $drow['discount_percent'].'%');
 			}
 		}
 		
 		$data = array(
 					"title" => $discount. '% '.$this->lang->line('reports_discount') . ' ' . $this->lang->line('reports_report'),
-					"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+					"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 					"headers" => $headers,
 					"summary_data" => $summary_data,
 					"details_data" => $details_data,
@@ -816,109 +857,93 @@
 		
 	}
 	
-	function detailed_sales($start_date, $end_date, $sale_type, $export_excel=0)
+	function detailed_sales($start_date, $end_date, $sale_type, $location_id='all', $export_excel=0)
 	{
 		$this->load->model('reports/Detailed_sales');
 		$model = $this->Detailed_sales;
 		
 		$headers = $model->getDataColumns();
-		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type));
+		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type, 'location_id' => $location_id));
 		
 		$summary_data = array();
 		$details_data = array();
 		
+		$show_locations = $this->Stock_location->multiple_locations();
+
 		foreach($report_data['summary'] as $key=>$row)
 		{
-			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'] . '/width:'.FORM_WIDTH, 'POS '.$row['sale_id'], array('class' => 'thickbox')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']), $row['payment_type'], $row['comment']);
+			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'] . '/width:'.FORM_WIDTH, 'POS '.$row['sale_id'], array('class' => 'thickbox')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']), $row['payment_type'], $row['comment']);
 			
 			foreach($report_data['details'][$key] as $drow)
 			{
-				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),to_currency($drow['profit']), $drow['discount_percent'].'%');
+				$quantity_purchased = $drow['quantity_purchased'];
+				if ($show_locations)
+				{
+					$quantity_purchased .= ' [' . $this->Stock_location->get_location_name($drow['item_location']) . ']';
+				}
+				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $quantity_purchased, to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']), to_currency($drow['cost']), to_currency($drow['profit']), $drow['discount_percent'].'%');
 			}
 		}
 
 		$data = array(
 			"title" =>$this->lang->line('reports_detailed_sales_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
-			"editable" => true,	
+			"editable" => "sales",
 			"summary_data" => $summary_data,
 			"details_data" => $details_data,
 			"header_width" => intval(100 / count($headers['summary'])),	
-			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
+			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type, 'location_id' => $location_id)),
 			"export_excel" => $export_excel
 		);
 
 		$this->load->view("reports/tabular_details",$data);
 	}
 	
-	function detailed_receivings($start_date, $end_date, $receiving_type, $supplier_id, $export_excel=0)
+	function detailed_receivings($start_date, $end_date, $receiving_type, $location_id='all', $export_excel=0)
 	{
 		$this->load->model('reports/Detailed_receivings');
 		$model = $this->Detailed_receivings;
 		
 		$headers = $model->getDataColumns();
-		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type' => $receiving_type, 'supplier_id' => $supplier_id));
+		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type'=>$receiving_type, 'location_id' => $location_id));
 		
 		$summary_data = array();
 		$details_data = array();
 		
+		$show_locations = $this->Stock_location->multiple_locations();
+
 		foreach($report_data['summary'] as $key=>$row)
 		{
-			$summary_data[] = array(anchor('receivings/receipt/'.$row['receiving_id'], 'RECV '.$row['receiving_id'], array('target' => '_blank')), $row['receiving_date'], $row['items_purchased'], $row['employee_name'], $row['supplier_name'], to_currency($row['total']), $row['payment_type'], $row['comment']);
+			$summary_data[] = array(anchor('receivings/edit/'.$row['receiving_id'].'/width:'.FORM_WIDTH, 'RECV '.$row['receiving_id'], array('class' => 'thickbox')), $row['receiving_date'], $row['items_purchased'], $row['employee_name'], $row['supplier_name'], to_currency($row['total']), $row['payment_type'], $row['invoice_number'], $row['comment']);
 			
 			foreach($report_data['details'][$key] as $drow)
 			{
-				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['quantity_purchased'], to_currency($drow['total']), $drow['discount_percent'].'%');
+				$quantity_purchased = $drow['receiving_quantity'] > 1 ? $drow['quantity_purchased'] . ' x ' . $drow['receiving_quantity'] : $drow['quantity_purchased'];
+				if ($show_locations)
+				{
+					$quantity_purchased .= ' [' . $this->Stock_location->get_location_name($drow['item_location']) . ']';
+				}
+				$details_data[$key][] = array($drow['item_number'], $drow['name'], $drow['category'], $quantity_purchased, to_currency($drow['total']), $drow['discount_percent'].'%');
 			}
 		}
 
 		$data = array(
 			"title" =>$this->lang->line('reports_detailed_receivings_report'),
-			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
+			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
 			"headers" => $model->getDataColumns(),
+			"header_width" => intval(100 / count($headers['summary'])),
+			"editable" => "receivings",
 			"summary_data" => $summary_data,
 			"details_data" => $details_data,
-			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type' => $receiving_type, 'supplier_id' => $supplier_id)),
+			"header_width" => intval(100 / count($headers['summary'])),
+			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type' => $receiving_type, 'location_id' => $location_id)),
 			"export_excel" => $export_excel
 		);
 
 		$this->load->view("reports/tabular_details",$data);
 	}
     
-    function detailed_requisition($start_date, $end_date , $export_excel=0)
-    {
-        $this->load->model('reports/Detailed_requisition');
-        $model = $this->Detailed_requisition;
-        $report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date));
-        
-        $summary_data = array();
-        $details_data = array();
-        
-        foreach($report_data['summary'] as $key=>$row)
-        {
-            $summary_data[] = array(anchor('receivings/requisition_receipt/'.$row['requisition_id'], 'REQS '.$row['requisition_id'], array('target' => '_blank')), $row['requisition_date'], $row['employee_name'], $row['comment']);
-            
-            foreach($report_data['details'][$key] as $drow)
-            {
-                $details_data[$key][] = array($drow['name'], $drow['requisition_quantity'], 
-                                                $drow['related_item_id'], $drow['related_item_quantity'],
-                                                $drow['related_item_total_quantity']);
-            }
-        }
-             
-        $data = array(
-            "title" =>$this->lang->line('reports_detailed_requisition_report'),
-            "subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
-            "headers" => $model->getDataColumns(),
-            "summary_data" => $summary_data,
-            "details_data" => $details_data,
-            "overall_summary_data" => '',
-            "export_excel" => $export_excel
-        );
-        $this->load->view("reports/tabular_details",$data);
-    }
-    
 	function excel_export()
 	{
 		$this->load->view("reports/excel_export",array());		
@@ -936,7 +961,7 @@
 		}
 
 		$data = array(
-			"title" => $this->lang->line('reports_low_inventory_report'),
+			"title" => $this->lang->line('reports_inventory_low_report'),
 			"subtitle" => '',
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
@@ -947,15 +972,38 @@
 		$this->load->view("reports/tabular",$data);	
 	}
 	
-	function inventory_summary($export_excel=0)
+	function inventory_summary_input()
+	{
+		$data = array();
+
+		$this->load->model('reports/Inventory_Summary');
+		$model = $this->Inventory_Summary;
+		$data['item_count'] = $model->getItemCountDropdownArray();
+
+		$stock_locations = $this->Stock_location->get_allowed_locations();
+		$stock_locations['all'] =  $this->lang->line('reports_all');
+		$data['stock_locations'] = array_reverse($stock_locations, TRUE);
+
+		$this->load->view("reports/inventory_summary_input", $data);
+	}
+
+	function inventory_summary($export_excel=0, $location_id = 'all', $item_count = 'all')
 	{
 		$this->load->model('reports/Inventory_summary');
 		$model = $this->Inventory_summary;
 		$tabular_data = array();
-		$report_data = $model->getData(array());
+		$report_data = $model->getData(array('location_id'=>$location_id,'item_count'=>$item_count));
 		foreach($report_data as $row)
 		{
-			$tabular_data[] = array($row['name'], $row['item_number'], $row['description'], $row['quantity'], $row['reorder_level'],$row['location_name']);
+			$tabular_data[] = array($row['name'],
+								$row['item_number'],
+								$row['description'],
+								$row['quantity'],
+								$row['reorder_level'],
+								$row['location_name'],
+								to_currency($row['cost_price']),
+								to_currency($row['unit_price']),
+								to_currency($row['sub_total_value']));
 		}
 
 		$data = array(
@@ -963,7 +1011,7 @@
 			"subtitle" => '',
 			"headers" => $model->getDataColumns(),
 			"data" => $tabular_data,
-			"summary_data" => $model->getSummaryData(array()),
+			"summary_data" => $model->getSummaryData($report_data),
 			"export_excel" => $export_excel
 		);
 
Only in pos-prod/application/controllers: reports.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/sales.php opensourcepos/application/controllers/Sales.php
--- pos-prod/application/controllers/sales.php	2016-05-05 18:59:56.000000000 -0700
+++ opensourcepos/application/controllers/Sales.php	2016-05-23 15:32:31.799840990 -0700
@@ -6,6 +7,7 @@
 	{
 		parent::__construct('sales');
 		$this->load->library('sale_lib');
+		$this->load->library('barcode_lib');
 	}
 
 	function index()
@@ -13,23 +15,163 @@
 		$this->_reload();
 	}
 
+	function manage($only_invoices = FALSE, $only_cash = FALSE, $limit_from = 0)
+	{
+		$person_id = $this->session->userdata('person_id');
+
+		if (!$this->Employee->has_grant('reports_sales', $person_id))
+		{
+			redirect('no_access/sales/reports_sales');
+		}
+		else
+		{
+			$this->Sale->create_sales_items_temp_table();
+
+			$data['controller_name'] = $this->get_controller_name();
+			$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+			$today = date($this->config->item('dateformat'));
+
+			$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $today;
+			$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
+			$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
+			$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
+
+			$sale_type = 'all';
+			$location_id = 'all';
+			$is_valid_receipt = FALSE;
+			$search = null;
+
+			$filters = array('sale_type' => $sale_type,
+							'location_id' => $location_id,
+							'start_date' => $start_date_formatter->format('Y-m-d'),
+							'end_date' => $end_date_formatter->format('Y-m-d'),
+							'only_invoices' => $only_invoices,
+							'only_cash' => $only_cash,
+							'is_valid_receipt' => $is_valid_receipt);
+
+			$sales = $this->Sale->search($search, $filters, $lines_per_page, $limit_from)->result_array();
+			$payments = $this->Sale->get_payments_summary($search, $filters);
+			$total_rows = $this->Sale->get_found_rows($search, $filters);
+			$data['only_invoices'] = $only_invoices;
+			$data['only_cash '] = $only_cash;
+			$data['start_date'] = $start_date_formatter->format($this->config->item('dateformat'));
+			$data['end_date'] = $end_date_formatter->format($this->config->item('dateformat'));
+			$data['links'] = $this->_initialize_pagination($this->Sale, $lines_per_page, $limit_from, $total_rows, 'manage', $only_invoices);
+			$data['manage_table'] = get_sales_manage_table($sales, $this);
+			$data['payments_summary'] = get_sales_manage_payments_summary($payments, $sales, $this);
+
+			$this->load->view($data['controller_name'] . '/manage', $data);
+		}
+
+	}
+	
+	function get_row()
+	{
+		$this->Sale->create_sales_items_temp_table();
+
+		$sale_id = $this->input->post('row_id');
+		$sale_info = $this->Sale->get_info($sale_id)->result_array();
+		$data_row = get_sales_manage_sale_data_row($sale_info[0], $this);
+
+		echo $data_row;
+	}
+	
+	/**
+	 *
+	 * Get the width for the add/edit form.
+	 * @return number The form width
+	 */
+	function get_form_width()
+	{
+		return 400;
+	}
+
+	/*
+	Returns Sales table data rows. This will be called with AJAX.
+	*/
+	function search()
+	{
+		$this->Sale->create_sales_items_temp_table();
+
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+		$today = date($this->config->item('dateformat'));
+
+		$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $today;
+		$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
+		$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
+		$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
+
+		$is_valid_receipt = isset($search) ? $this->sale_lib->is_valid_receipt($search) : FALSE;
+
+		$sale_type = 'all';
+		$location_id = 'all';
+		$only_invoices = $this->input->post('only_invoices') != null;
+		$only_cash = $this->input->post('only_cash') != null;
+
+		$filters = array('sale_type' => $sale_type,
+						'location_id' => $location_id,
+						'start_date' => $start_date_formatter->format('Y-m-d'),
+						'end_date' => $end_date_formatter->format('Y-m-d'),
+						'only_invoices' => $only_invoices,
+						'only_cash' => $only_cash,
+						'is_valid_receipt' => $is_valid_receipt);
+
+		$sales = $this->Sale->search($search, $filters, $lines_per_page, $limit_from)->result_array();
+		$payments = $this->Sale->get_payments_summary($search, $filters);
+		$total_rows = $this->Sale->get_found_rows($search, $filters);
+		$links = $this->_initialize_pagination($this->Sale, $lines_per_page, $limit_from, $total_rows, 'search', $only_invoices);
+		$sale_rows = get_sales_manage_table_data_rows($sales, $this);
+		$payment_summary = get_sales_manage_payments_summary($payments, $sales, $this);
+
+		echo json_encode(array('total_rows' => $total_rows, 'rows' => $sale_rows, 'pagination' => $links, 'payment_summary' => $payment_summary));
+	}
+
 	function item_search()
 	{
-		$suggestions = $this->Item->get_item_search_suggestions($this->input->post('q'),$this->input->post('limit'));
-		$suggestions = array_merge($suggestions, $this->Item_kit->get_item_kit_search_suggestions($this->input->post('q'),$this->input->post('limit')));
+		$suggestions = array();
+		$search = $this->input->post('q');
+		$limit = $this->input->post('limit');
+
+		if ($this->sale_lib->get_mode() == 'return' && $this->sale_lib->is_valid_receipt($search) )
+		{
+			$suggestions[] = $search;
+		}
+		$suggestions = array_merge($suggestions, $this->Item->get_item_search_suggestions($search , $limit));
+		$suggestions = array_merge($suggestions, $this->Item_kit->get_item_kit_search_suggestions($search, $limit));
+
 		echo implode("\n",$suggestions);
 	}
 
 	function customer_search()
 	{
-		$suggestions = $this->Customer->get_customer_search_suggestions($this->input->post('q'),$this->input->post('limit'));
+		$search = $this->input->post('q');
+		$limit = $this->input->post('limit');
+		
+		$suggestions = $this->Customer->get_customer_search_suggestions($search, $limit);
+
+		echo implode("\n", $suggestions);
+	}
+
+	function suggest()
+	{
+		$search = $this->input->post('q');
+		$limit = $this->input->post('limit');
+		$suggestions = $this->Sale->get_search_suggestions($search, $limit);
+
 		echo implode("\n",$suggestions);
 	}
 
 	function select_customer()
 	{
-		$customer_id = $this->input->post("customer");
+		$customer_id = $this->input->post('customer');
+		if ($this->Customer->exists($customer_id))
+		{
 		$this->sale_lib->set_customer($customer_id);
+		}
 		$this->_reload();
 	}
 
@@ -38,11 +180,10 @@
 		$stock_location = $this->input->post("stock_location");
 		if (!$stock_location || $stock_location == $this->sale_lib->get_sale_location()) 
 		{
-			$this->sale_lib->clear_all();
 			$mode = $this->input->post("mode");
 			$this->sale_lib->set_mode($mode);
 		} 
-		else
+		else if ($this->Stock_location->is_allowed_location($stock_location, 'sales'))
 		{
 			$this->sale_lib->set_sale_location($stock_location);
 		}
@@ -54,25 +195,45 @@
  	  $this->sale_lib->set_comment($this->input->post('comment'));
 	}
 	
+	function set_invoice_number()
+	{
+		$this->sale_lib->set_invoice_number($this->input->post('sales_invoice_number'));
+	}
+	
+	function set_invoice_number_enabled()
+	{
+		$this->sale_lib->set_invoice_number_enabled($this->input->post('sales_invoice_number_enabled'));
+	}
+	
+	function set_print_after_sale()
+	{
+		$this->sale_lib->set_print_after_sale($this->input->post('sales_print_after_sale'));
+	}
+	
 	function set_email_receipt()
 	{
  	  $this->sale_lib->set_email_receipt($this->input->post('email_receipt'));
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function add_payment()
 	{		
 		$data=array();
-		$this->form_validation->set_rules('amount_tendered', 'lang:sales_amount_tendered', 'numeric');
+		$this->form_validation->set_rules('amount_tendered', 'lang:sales_amount_tendered', 'trim|required|numeric');
 		
 		if ($this->form_validation->run() == FALSE)
 		{
 			if ( $this->input->post('payment_type') == $this->lang->line('sales_gift_card') )
+			{
 				$data['error']=$this->lang->line('sales_must_enter_numeric_giftcard');
+			}
 			else
+			{
 				$data['error']=$this->lang->line('sales_must_enter_numeric');
+			}
 				
  			$this->_reload($data);
+
  			return;
 		}
 		
@@ -83,17 +244,18 @@
 			$payment_type=$this->input->post('payment_type').':'.$payment_amount=$this->input->post('amount_tendered');
 			$current_payments_with_giftcard = isset($payments[$payment_type]) ? $payments[$payment_type]['payment_amount'] : 0;
 			$cur_giftcard_value = $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $current_payments_with_giftcard;
+			
 			if ( $cur_giftcard_value <= 0 )
 			{
-				$data['error']='Giftcard balance is '.to_currency( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) ).' !';
+				$data['error'] = $this->lang->line('giftcards_remaining_balance', $this->input->post('amount_tendered'), to_currency( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered'))));
 				$this->_reload($data);
 				return;
 			}
-			elseif ( ( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $this->sale_lib->get_total() ) > 0 )
-			{
-				$data['warning']='Giftcard balance is '.to_currency( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $this->sale_lib->get_total() ).' !';
-			}
-			$payment_amount=min( $this->sale_lib->get_total(), $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) );
+			$new_giftcard_value = $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $this->sale_lib->get_amount_due();
+			$new_giftcard_value = ( $new_giftcard_value >= 0 ) ? $new_giftcard_value : 0;
+			$this->sale_lib->set_giftcard_remainder($new_giftcard_value);
+			$data['warning'] = $this->lang->line('giftcards_remaining_balance', $this->input->post('amount_tendered'), to_currency( $new_giftcard_value, TRUE ));
+			$payment_amount = min( $this->sale_lib->get_amount_due( ), $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) );
 		}
 		else
 		{
@@ -108,7 +270,7 @@
 		$this->_reload($data);
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function delete_payment( $payment_id )
 	{
 		$this->sale_lib->delete_payment( $payment_id );
@@ -119,11 +281,11 @@
 	{
 		$data=array();
 		$mode = $this->sale_lib->get_mode();
-		$item_id_or_number_or_item_kit_or_receipt = $this->input->post("item");
+		$item_id_or_number_or_item_kit_or_receipt = $this->input->post('item');
 		$quantity = ($mode=="return")? -1:1;
 		$item_location = $this->sale_lib->get_sale_location();
 
-		if($this->sale_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt) && $mode=='return')
+		if($mode == 'return' && $this->sale_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt))
 		{
 			$this->sale_lib->return_entire_sale($item_id_or_number_or_item_kit_or_receipt);
 		}
@@ -131,15 +293,13 @@
 		{
 			$this->sale_lib->add_item_kit($item_id_or_number_or_item_kit_or_receipt,$item_location);
 		}
-		elseif(!$this->sale_lib->add_item($item_id_or_number_or_item_kit_or_receipt,$quantity,$item_location))
+		else if(!$this->sale_lib->add_item($item_id_or_number_or_item_kit_or_receipt,$quantity,$item_location,$this->config->item('default_sales_discount')))
 		{
 			$data['error']=$this->lang->line('sales_unable_to_add_item');
 		}
 		
-		if($this->sale_lib->out_of_stock($item_id_or_number_or_item_kit_or_receipt,$item_location))
-		{
-			$data['warning'] = $this->lang->line('sales_quantity_less_than_zero');
-		}
+		$data['warning'] = $this->sale_lib->out_of_stock($item_id_or_number_or_item_kit_or_receipt,$item_location);
+
 		$this->_reload($data);
 	}
 
@@ -149,14 +309,14 @@
 
 		$this->form_validation->set_rules('price', 'lang:items_price', 'required|numeric');
 		$this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|numeric');
+		$this->form_validation->set_rules('discount', 'lang:items_discount', 'required|numeric');
 
-        $description = $this->input->post("description");
-        $serialnumber = $this->input->post("serialnumber");
-		$price = $this->input->post("price");
-		$quantity = $this->input->post("quantity");
-		$discount = $this->input->post("discount");
-		$item_location = $this->input->post("location");
-
+		$description = $this->input->post('description');
+		$serialnumber = $this->input->post('serialnumber');
+		$price = $this->input->post('price');
+		$quantity = $this->input->post('quantity');
+		$discount = $this->input->post('discount');
+		$item_location = $this->input->post('location');
 
 		if ($this->form_validation->run() != FALSE)
 		{
@@ -166,12 +326,7 @@
 		{
 			$data['error']=$this->lang->line('sales_error_editing_item');
 		}
-		
-		if($this->sale_lib->out_of_stock($this->sale_lib->get_item_id($line),$item_location))
-		{
-			$data['warning'] = $this->lang->line('sales_quantity_less_than_zero');
-		}
-
+		$data['warning'] = $this->sale_lib->out_of_stock($this->sale_lib->get_item_id($line),$item_location);
 
 		$this->_reload($data);
 	}
@@ -184,6 +339,8 @@
 
 	function remove_customer()
 	{
+		$this->sale_lib->clear_giftcard_remainder();
+		$this->sale_lib->clear_invoice_number();
 		$this->sale_lib->remove_customer();
 		$this->_reload();
 	}
@@ -192,34 +349,69 @@
 	{
 		$data['cart']=$this->sale_lib->get_cart();
 		$data['subtotal']=$this->sale_lib->get_subtotal();
+		$data['discounted_subtotal'] = $this->sale_lib->get_subtotal(TRUE);
+		$data['tax_exclusive_subtotal'] = $this->sale_lib->get_subtotal(TRUE, TRUE);
 		$data['taxes']=$this->sale_lib->get_taxes();
 		$data['total']=$this->sale_lib->get_total();
+		$data['discount'] = $this->sale_lib->get_discount();
 		$data['receipt_title']=$this->lang->line('sales_receipt');
-		$data['transaction_time']= date('m/d/Y h:i:s a');
-		$stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
-		$data['show_stock_locations'] = count($stock_locations) > 1;
+		$data['transaction_time'] = date($this->config->item('dateformat').' '.$this->config->item('timeformat'));
+		$data['transaction_date'] = date($this->config->item('dateformat'));
+		$data['show_stock_locations'] = $this->Stock_location->show_locations('sales');
 		$customer_id=$this->sale_lib->get_customer();
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
-		$comment = $this->sale_lib->get_comment();
+		$data['comments'] = $this->sale_lib->get_comment();
 		$emp_info=$this->Employee->get_info($employee_id);
 		$data['payments']=$this->sale_lib->get_payments();
-		$data['amount_change']=to_currency($this->sale_lib->get_amount_due() * -1);
+		$data['amount_change'] = $this->sale_lib->get_amount_due() * -1;
+		$data['amount_due'] = $this->sale_lib->get_amount_due();
 		$data['employee']=$emp_info->first_name.' '.$emp_info->last_name;
-        
+		$data['company_info'] = implode("\n", array(
+				$this->config->item('address'),
+				$this->config->item('phone'),
+				$this->config->item('account_number')
+		));
+		$cust_info = '';
 		if($customer_id!=-1)
 		{
 			$cust_info=$this->Customer->get_info($customer_id);
+			if (isset($cust_info->company_name))
+			{
+				$data['customer'] = $cust_info->company_name;
+			}
+			else
+			{
 			$data['customer']=$cust_info->first_name.' '.$cust_info->last_name;
 		}
-
-		//SAVE sale to database
-		$data['sale_id']='POS '.$this->Sale->save($data['cart'], $customer_id,$employee_id,$comment,$data['payments']);
+			$data['customer_address'] = $cust_info->address_1;
+			$data['customer_location'] = $cust_info->zip . ' ' . $cust_info->city;
+			$data['account_number'] = $cust_info->account_number;
+			$data['customer_info'] = implode("\n", array(
+				$data['customer'],
+				$data['customer_address'],
+				$data['customer_location'],
+				$data['account_number']
+			));
+		}
+		$invoice_number = $this->_substitute_invoice_number($cust_info);
+		if ($this->sale_lib->is_invoice_number_enabled() && $this->Sale->invoice_number_exists($invoice_number))
+		{
+			$data['error'] = $this->lang->line('sales_invoice_number_duplicate');
+			$this->_reload($data);
+		}
+		else 
+		{
+			$invoice_number = $this->sale_lib->is_invoice_number_enabled() ? $invoice_number : null;
+			$data['invoice_number'] = $invoice_number;
+			$data['sale_id'] = 'POS ' . $this->Sale->save($data['cart'], $customer_id, $employee_id, $data['comments'], $invoice_number, $data['payments']);
 		if ($data['sale_id'] == 'POS -1')
 		{
 			$data['error_message'] = $this->lang->line('sales_transaction_failed');
 		}
 		else
 		{
+				$data['barcode'] = $this->barcode_lib->generate_receipt_barcode($data['sale_id']);
+				// if we want to email. .. just attach the pdf in there?
 			if ($this->sale_lib->get_email_receipt() && !empty($cust_info->email))
 			{
 				$this->load->library('email');
@@ -229,60 +421,232 @@
 				$this->email->to($cust_info->email); 
 
 				$this->email->subject($this->lang->line('sales_receipt'));
+					if ($this->config->item('use_invoice_template') && $this->sale_lib->is_invoice_number_enabled())
+					{
+						$data['image_prefix'] = "";
+						$filename = $this->_invoice_email_pdf($data);
+						$this->email->attach($filename);
+						$text = $this->config->item('invoice_email_message');
+						$text = str_replace('$INV', $invoice_number, $text);
+						$text = str_replace('$CO', $data['sale_id'], $text);
+						$text = $this->_substitute_customer($text, $cust_info);
+						$this->email->message($text);
+					}
+					else
+					{
 				$this->email->message($this->load->view("sales/receipt_email",$data, true));	
+					}
 				$this->email->send();
 			}
 		}
+			$data['cur_giftcard_value'] = $this->sale_lib->get_giftcard_remainder();
+			$data['print_after_sale'] = $this->sale_lib->is_print_after_sale();
+			if ($this->sale_lib->is_invoice_number_enabled() && $this->config->item('use_invoice_template'))
+			{
+				$this->load->view("sales/invoice", $data);
+			}
+			else
+			{
 		$this->load->view("sales/receipt",$data);
+			}
+
 		$this->sale_lib->clear_all();
-		$this->_remove_duplicate_cookies();
 	}
 	
-	function receipt($sale_id)
+	}
+	
+	private function _invoice_email_pdf($data)
+	{
+		$data['image_prefix'] = "";
+		$html = $this->load->view('sales/invoice_email', $data, true);
+		// load pdf helper
+		$this->load->helper(array('dompdf', 'file'));
+		$file_content  = pdf_create($html, '', false);
+		$filename = sys_get_temp_dir() . '/'. $this->lang->line('sales_invoice') .'-' . str_replace('/', '-' , $data["invoice_number"]) . '.pdf';
+		write_file($filename, $file_content);
+
+		return $filename;
+	}
+	
+	function invoice_email($sale_id)
+	{
+		$sale_data = $this->_load_sale_data($sale_id);
+		$sale_data['image_prefix'] = base_url();
+		$this->load->view('sales/invoice_email', $sale_data);
+		$this->sale_lib->clear_all();
+	}
+	
+	function send_invoice($sale_id)
+	{
+		$sale_data = $this->_load_sale_data($sale_id);
+		$text = $this->config->item('invoice_email_message');
+		$text = str_replace('$INV', $sale_data['invoice_number'], $text);
+		$text = str_replace('$CO', 'POS ' . $sale_data['sale_id'], $text);
+		$text = $this->_substitute_customer($text,(object) $sale_data);
+		$result = FALSE;
+		$message = $this->lang->line('sales_invoice_no_email');
+		if (isset($sale_data["customer_email"]) && !empty( $sale_data["customer_email"])) {
+			$this->load->library('email');
+			$this->email->from($this->config->item('email'), $this->config->item('company'));
+			$this->email->to($sale_data['customer_email']);
+			$this->email->subject($this->lang->line('sales_invoice') . ' ' . $sale_data['invoice_number']);
+			$this->email->message($text);
+			$filename = $this->_invoice_email_pdf($sale_data);
+			$this->email->attach($filename);
+			$result = $this->email->send();
+			$message = $this->lang->line($result ? 'sales_invoice_sent' : 'sales_invoice_unsent') . ' ' . $sale_data["customer_email"];
+		}
+		echo json_encode(array('success'=>$result, 'message'=>$message, 'id'=>$sale_id));
+		$this->sale_lib->clear_all();
+	}
+	
+	private function _substitute_variable($text, $variable, $object, $function)
+	{
+		// don't query if this variable isn't used
+		if (strstr($text, $variable))
+		{
+			$value = call_user_func(array($object, $function));
+			$text = str_replace($variable, $value, $text);
+		}
+
+		return $text;
+	}
+	
+	private function _substitute_customer($text, $cust_info)
 	{
+		// substitute customer info
+		$customer_id = $this->sale_lib->get_customer();
+		if($customer_id != -1 && $cust_info != '')
+		{
+			$text = str_replace('$CU',$cust_info->first_name . ' ' . $cust_info->last_name,$text);
+			$words = preg_split("/\s+/", trim($cust_info->first_name . ' ' . $cust_info->last_name));
+			$acronym = "";
+			foreach ($words as $w)
+			{
+				$acronym .= $w[0];
+			}
+			$text = str_replace('$CI',$acronym,$text);
+		}
+
+		return $text;
+	}
+
+	private function _is_custom_invoice_number($cust_info)
+	{
+		$invoice_number = $this->config->config['sales_invoice_format'];
+		$invoice_number = $this->_substitute_variables($invoice_number, $cust_info);
+		return $this->sale_lib->get_invoice_number() != $invoice_number;
+	}
+	
+	private function _substitute_variables($text, $cust_info)
+	{
+		$text = $this->_substitute_variable($text, '$YCO', $this->Sale, 'get_invoice_number_for_year');
+		$text = $this->_substitute_variable($text, '$CO', $this->Sale , 'get_invoice_count');
+		$text = $this->_substitute_variable($text, '$SCO', $this->Sale_suspended, 'get_invoice_count');
+		$text = strftime($text);
+		$text = $this->_substitute_customer($text, $cust_info);
+
+		return $text;
+	}
+	
+	private function _substitute_invoice_number($cust_info)
+	{
+		$invoice_number = $this->config->config['sales_invoice_format'];
+		$invoice_number = $this->_substitute_variables($invoice_number, $cust_info);
+		$this->sale_lib->set_invoice_number($invoice_number, TRUE);
+		return $this->sale_lib->get_invoice_number();
+	}
+
+	private function _load_sale_data($sale_id)
+	{
+		$this->Sale->create_sales_items_temp_table();
+
+		$this->sale_lib->clear_all();
 		$sale_info = $this->Sale->get_info($sale_id)->row_array();
 		$this->sale_lib->copy_entire_sale($sale_id);
-		$stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
-		$data['show_stock_locations'] = count($stock_locations) > 1;
 		$data['cart']=$this->sale_lib->get_cart();
 		$data['payments']=$this->sale_lib->get_payments();
 		$data['subtotal']=$this->sale_lib->get_subtotal();
+		$data['discounted_subtotal'] = $this->sale_lib->get_subtotal(TRUE);
+		$data['tax_exclusive_subtotal'] = $this->sale_lib->get_subtotal(TRUE, TRUE);
 		$data['taxes']=$this->sale_lib->get_taxes();
 		$data['total']=$this->sale_lib->get_total();
+		$data['discount'] = $this->sale_lib->get_discount();
 		$data['receipt_title']=$this->lang->line('sales_receipt');
-		$data['transaction_time']= date('m/d/Y h:i:s a', strtotime($sale_info['sale_time']));
+		$data['transaction_time'] = date($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), strtotime($sale_info['sale_time']));
+		$data['transaction_date'] = date($this->config->item('dateformat'), strtotime($sale_info['sale_time']));
+		$data['show_stock_locations'] = $this->Stock_location->show_locations('sales');
 		$customer_id=$this->sale_lib->get_customer();
-		$emp_info=$this->Employee->get_info($sale_info['employee_id']);
-		$data['payment_type']=$sale_info['payment_type'];
-		$data['amount_change']=to_currency($this->sale_lib->get_amount_due() * -1);
+		$employee_id = $this->Employee->get_logged_in_employee_info()->person_id;
+		$emp_info = $this->Employee->get_info($employee_id);
+		$data['amount_change'] = $this->sale_lib->get_amount_due() * -1;
+		$data['amount_due'] = $this->sale_lib->get_amount_due();
 		$data['employee']=$emp_info->first_name.' '.$emp_info->last_name;
 
 		if($customer_id!=-1)
 		{
 			$cust_info=$this->Customer->get_info($customer_id);
+			if (isset($cust_info->company_name))
+			{
+				$data['customer'] = $cust_info->company_name;
+			}
+			else
+			{
 			$data['customer']=$cust_info->first_name.' '.$cust_info->last_name;
 		}
+			$data['first_name'] = $cust_info->first_name;
+			$data['last_name'] = $cust_info->last_name;
+			$data['customer_address'] = $cust_info->address_1;
+			$data['customer_location'] = $cust_info->zip . ' ' . $cust_info->city;
+			$data['customer_email'] = $cust_info->email;
+			$data['account_number'] = $cust_info->account_number;
+			$data['customer_info'] = implode("\n", array(
+				$data['customer'],
+				$data['customer_address'],
+				$data['customer_location'],
+				$data['account_number']
+			));
+		}
 		$data['sale_id']='POS '.$sale_id;
+		$data['comments'] = $sale_info['comment'];
+		$data['invoice_number'] = $sale_info['invoice_number'];
+		$data['company_info'] = implode("\n", array(
+			$this->config->item('address'),
+			$this->config->item('phone'),
+			$this->config->item('account_number')
+		));
+		$data['barcode'] = $this->barcode_lib->generate_receipt_barcode($data['sale_id']);
+		$data['print_after_sale'] = FALSE;
+
+		return $data;
+	}
+	
+	function receipt($sale_id)
+	{
+		$data = $this->_load_sale_data($sale_id);	
 		$this->load->view("sales/receipt",$data);
 		$this->sale_lib->clear_all();
-		$this->_remove_duplicate_cookies();
 	}
 	
-	function edit($sale_id)
+	function invoice($sale_id, $sale_info='')
 	{
-		$data = array();
+		if ($sale_info == '') {
+			$sale_info = $this->_load_sale_data($sale_id);
+		}
+		$this->load->view("sales/invoice",$sale_info);
+		$this->sale_lib->clear_all();
+	}
 
-		$data['customers'] = array('' => 'No Customer');
-		foreach ($this->Customer->get_all()->result() as $customer)
+	function edit($sale_id)
 		{
-			$data['customers'][$customer->person_id] = $customer->first_name . ' '. $customer->last_name;
-		}
+		$data = array();
 
 		$data['employees'] = array();
 		foreach ($this->Employee->get_all()->result() as $employee)
 		{
 			$data['employees'][$employee->person_id] = $employee->first_name . ' '. $employee->last_name;
 		}
+		$this->Sale->create_sales_items_temp_table();
 
 		$sale_info = $this->Sale->get_info($sale_id)->row_array();
 		$person_name = $sale_info['first_name'] . " " . $sale_info['last_name'];
@@ -292,49 +656,45 @@
 		$this->load->view('sales/form', $data);
 	}
 	
-	function delete($sale_id = -1, $update_inventory=TRUE) {
+	function delete($sale_id = -1, $update_inventory=TRUE)
+	{
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
 		$sale_ids= $sale_id == -1 ? $this->input->post('ids') : array($sale_id);
 		
 		if($this->Sale->delete_list($sale_ids, $employee_id, $update_inventory))
 		{
-			echo json_encode(array('success'=>true,'message'=>$this->lang->line('sales_delete_successful').' '.
+			echo json_encode(array('success'=>true, 'message'=>$this->lang->line('sales_successfully_deleted').' '.
 			count($sale_ids).' '.$this->lang->line('sales_one_or_multiple'),'ids'=>$sale_ids));
 		}
 		else
 		{
-			echo json_encode(array('success'=>false,'message'=>$this->lang->line('sales_delete_unsuccessful')));
+			echo json_encode(array('success'=>false, 'message'=>$this->lang->line('sales_unsuccessfully_deleted')));
 		}
 	}
 	
 	function save($sale_id)
 	{
+		$start_date_formatter = date_create_from_format($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), $this->input->post('date'));
+
 		$sale_data = array(
-			'sale_time' => date('Y-m-d', strtotime($this->input->post('date'))),
-			'customer_id' => $this->input->post('customer_id') ? $this->input->post('customer_id') : null,
+			'sale_time' => $start_date_formatter->format('Y-m-d H:i:s'),
+			'customer_id' => $this->input->post('customer_id') != '' ? $this->input->post('customer_id') : null,
 			'employee_id' => $this->input->post('employee_id'),
-			'comment' => $this->input->post('comment')
+			'comment' => $this->input->post('comment'),
+			'invoice_number' => $this->input->post('invoice_number') != '' ? $this->input->post('invoice_number') : null
 		);
 		
 		if ($this->Sale->update($sale_data, $sale_id))
 		{
-			echo json_encode(array(
-				'success'=>true,
-				'message'=>$this->lang->line('sales_successfully_updated'),
-				'id'=>$sale_id)
-			);
+			echo json_encode(array('success'=>true, 'message'=>$this->lang->line('sales_successfully_updated'), 'id'=>$sale_id));
 		}
 		else
 		{
-			echo json_encode(array(
-				'success'=>false,
-				'message'=>$this->lang->line('sales_unsuccessfully_updated'),
-				'id'=>$sale_id)
-			);
+			echo json_encode(array('success'=>false, 'message'=>$this->lang->line('sales_unsuccessfully_updated'), 'id'=>$sale_id));
 		}
 	}
 	
-	function _payments_cover_total()
+	private function _payments_cover_total()
 	{
 		$total_payments = 0;
 
@@ -353,29 +713,22 @@
 		return true;
 	}
 	
-	function _reload($data=array())
+	private function _reload($data=array())
 	{
 		$person_info = $this->Employee->get_logged_in_employee_info();
 		$data['cart']=$this->sale_lib->get_cart();	 
         $data['modes']=array('sale'=>$this->lang->line('sales_sale'),'return'=>$this->lang->line('sales_return'));
         $data['mode']=$this->sale_lib->get_mode();
                      
-        $data['stock_locations'] = array();
-        $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
-        $show_stock_locations = count($stock_locations) > 1;
-        if ($show_stock_locations) {
-	        foreach($stock_locations as $location_data)
-	        {            
-	            $data['stock_locations'][$location_data['location_id']] = $location_data['location_name'];
-	        }       		
+		$data['stock_locations'] = $this->Stock_location->get_allowed_locations('sales');
 	        $data['stock_location']=$this->sale_lib->get_sale_location();
-        }
-        $data['show_stock_locations'] = $show_stock_locations;
         
-		$data['subtotal']=$this->sale_lib->get_subtotal();
+		$data['subtotal'] = $this->sale_lib->get_subtotal(TRUE);
+		$data['tax_exclusive_subtotal'] = $this->sale_lib->get_subtotal(TRUE, TRUE);
 		$data['taxes']=$this->sale_lib->get_taxes();
+		$data['discount'] = $this->sale_lib->get_discount();
 		$data['total']=$this->sale_lib->get_total();
-		$data['items_module_allowed'] = $this->Employee->has_permission('items', $person_info->person_id);
+		$data['items_module_allowed'] = $this->Employee->has_grant('items', $person_info->person_id);
 		$data['comment'] = $this->sale_lib->get_comment();
 		$data['email_receipt'] = $this->sale_lib->get_email_receipt();
 		$data['payments_total']=$this->sale_lib->get_payments_total();
@@ -386,23 +739,24 @@
 			$this->lang->line('sales_check') => $this->lang->line('sales_check'),
 			$this->lang->line('sales_giftcard') => $this->lang->line('sales_giftcard'),
 			$this->lang->line('sales_debit') => $this->lang->line('sales_debit'),
-			$this->lang->line('sales_credit') => $this->lang->line('sales_credit'),
-			$this->lang->line('sales_layaway_bal') => $this->lang->line('sales_layaway_bal'),
-			$this->lang->line('sales_oos_pmt') => $this->lang->line('sales_oos_pmt'),
-			$this->lang->line('sales_deposit') => $this->lang->line('sales_deposit'),
-			$this->lang->line('sales_house_acct') => $this->lang->line('sales_house_acct')
+			$this->lang->line('sales_credit') => $this->lang->line('sales_credit')
 		);
 
 		$customer_id=$this->sale_lib->get_customer();
+		$cust_info = '';
 		if($customer_id!=-1)
 		{
-			$info=$this->Customer->get_info($customer_id);
-			$data['customer']=$info->first_name.' '.$info->last_name;
-			$data['customer_email']=$info->email;
+			$cust_info = $this->Customer->get_info($customer_id);
+			$data['customer'] = $cust_info->first_name . ' ' . $cust_info->last_name;
+			$data['customer_email'] = $cust_info->email;
 		}
+		$data['invoice_number'] = $this->_substitute_invoice_number($cust_info);
+		$data['invoice_number_enabled'] = $this->sale_lib->is_invoice_number_enabled();
+		$data['print_after_sale'] = $this->sale_lib->is_print_after_sale();
 		$data['payments_cover_total'] = $this->_payments_cover_total();
+
 		$this->load->view("sales/register",$data);
-		$this->_remove_duplicate_cookies();
+
 	}
 
     function cancel_sale()
@@ -419,33 +772,45 @@
 		$data['taxes']=$this->sale_lib->get_taxes();
 		$data['total']=$this->sale_lib->get_total();
 		$data['receipt_title']=$this->lang->line('sales_receipt');
-		$data['transaction_time']= date('m/d/Y h:i:s a');
+		$data['transaction_time'] = date($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'));
 		$customer_id=$this->sale_lib->get_customer();
 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
-		$comment = $this->input->post('comment');
+		$comment = $this->sale_lib->get_comment();
+		$invoice_number = $this->sale_lib->get_invoice_number();
+
 		$emp_info=$this->Employee->get_info($employee_id);
-		$payment_type = $this->input->post('payment_type');
 		$data['payment_type']=$this->input->post('payment_type');
-		//Alain Multiple payments
+		// Multiple payments
 		$data['payments']=$this->sale_lib->get_payments();
 		$data['amount_change']=to_currency($this->sale_lib->get_amount_due() * -1);
 		$data['employee']=$emp_info->first_name.' '.$emp_info->last_name;
 
+		$cust_info = '';
 		if($customer_id!=-1)
 		{
 			$cust_info=$this->Customer->get_info($customer_id);
+			if (isset($cust_info->company_name))
+			{
+				$data['customer'] = $cust_info->company_name;
+			}
+			else
+			{
 			$data['customer']=$cust_info->first_name.' '.$cust_info->last_name;
 		}
+		}
+
+		$is_set = $this->_is_custom_invoice_number($cust_info);
+		$invoice_number = $is_set ? $invoice_number : NULL;
 
 		$total_payments = 0;
 
 		foreach($data['payments'] as $payment)
 		{
-			$total_payments += $payment['payment_amount'];
+			$total_payments = bcadd($total_payments, $payment['payment_amount'], PRECISION);
 		}
 
 		//SAVE sale to database
-		$data['sale_id']='POS '.$this->Sale_suspended->save($data['cart'], $customer_id,$employee_id,$comment,$data['payments']);
+		$data['sale_id'] = 'POS ' . $this->Sale_suspended->save($data['cart'], $customer_id, $employee_id, $comment, $invoice_number, $data['payments']);
 		if ($data['sale_id'] == 'POS -1')
 		{
 			$data['error_message'] = $this->lang->line('sales_transaction_failed');
@@ -469,5 +836,13 @@
 		$this->Sale_suspended->delete($sale_id);
     	$this->_reload();
 	}
+	
+	function check_invoice_number()
+	{
+		$sale_id = $this->input->post('sale_id');
+		$invoice_number = $this->input->post('invoice_number');
+		$exists = !empty($invoice_number) && $this->Sale->invoice_number_exists($invoice_number,$sale_id);
+		echo !$exists ? 'true' : 'false';
+	}
 }
 ?>
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/secure_area.php opensourcepos/application/controllers/Secure_area.php
--- pos-prod/application/controllers/secure_area.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Secure_area.php	2016-05-23 15:32:31.799840990 -0700
@@ -1,11 +1,13 @@
 <?php
 class Secure_area extends CI_Controller 
 {
+	private $controller_name;
+	
 	/*
 	Controllers that are considered secure extend Secure_area, optionally a $module_id can
 	be set to also check if a user can access a particular module in the system.
 	*/
-	function __construct($module_id=null)
+	function __construct($module_id=null,$submodule_id=null)
 	{
 		parent::__construct();	
 		$this->load->model('Employee');
@@ -13,70 +15,51 @@
 		{
 			redirect('login');
 		}
-		
-		if(!$this->Employee->has_permission($module_id,$this->Employee->get_logged_in_employee_info()->person_id))
+		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
+		if(!$this->Employee->has_module_grant($module_id,$employee_id) || 
+			(isset($submodule_id) && !$this->Employee->has_module_grant($submodule_id,$employee_id)))
 		{
-			redirect('no_access/'.$module_id);
+			redirect('no_access/'.$module_id.'/'.$submodule_id);
 		}
 		
 		//load up global data
 		$logged_in_employee_info=$this->Employee->get_logged_in_employee_info();
 		$data['allowed_modules']=$this->Module->get_allowed_modules($logged_in_employee_info->person_id);
+		$data['backup_allowed']=false;
+		foreach($data['allowed_modules']->result_array() as $module) 
+		{
+			$data['backup_allowed']|=$module['module_id']==='config';
+		}
 		$data['user_info']=$logged_in_employee_info;
+		$data['controller_name']=$module_id;
+		$this->controller_name=$module_id;
 		$this->load->vars($data);
 	}
 	
-	function _remove_duplicate_cookies ()
-	{
-		//php < 5.3 doesn't have header remove so this function will fatal error otherwise
-		if (function_exists('header_remove'))
-		{
-			$CI = &get_instance();
-	
-			// clean up all the cookies that are set...
-			$headers             = headers_list();
-			$cookies_to_output   = array ();
-			$header_session_cookie = '';
-			$session_cookie_name = $CI->config->item('sess_cookie_name');
-	
-			foreach ($headers as $header)
+	function get_controller_name()
 			{
-				list ($header_type, $data) = explode (':', $header, 2);
-				$header_type = trim ($header_type);
-				$data        = trim ($data);
+		return strtolower($this->controller_name);
+	}
 	
-				if (strtolower ($header_type) == 'set-cookie')
+	function _initialize_pagination($object, $lines_per_page, $limit_from = 0, $total_rows = -1, $function='index', $filter='')
 				{
-					header_remove ('Set-Cookie');
+		$this->load->library('pagination');
 	
-					$cookie_value = current(explode (';', $data));
-					list ($key, $val) = explode ('=', $cookie_value);
-					$key = trim ($key);
+		$config['base_url'] = site_url($this->get_controller_name() . "/$function/" . $filter);
+		$config['total_rows'] = $total_rows > -1 ? $total_rows : call_user_func(array($object, 'get_total_rows'));
+		$config['per_page'] = $lines_per_page;
+		$config['num_links'] = 2;
+		$config['last_link'] = $this->lang->line('common_last_page');
+		$config['first_link'] = $this->lang->line('common_first_page');
+		// page is calculated here instead of in pagination lib
+		$config['cur_page'] = $limit_from > 0  ? $limit_from : 0;
+		$config['page_query_string'] = FALSE;
+		$config['uri_segment'] = 0;
 	
-					if ($key == $session_cookie_name)
-					{
-						// OVERWRITE IT (yes! do it!)
-						$header_session_cookie = $data;
-						continue;
-					}
-					else
-					{
-						// Not a session related cookie, add it as normal. Might be a CSRF or some other cookie we are setting
-						$cookies_to_output[] = array ('header_type' => $header_type, 'data' => $data);
-					}
-				}
-			}
+		$this->pagination->initialize($config);
 	
-			if ( ! empty ($header_session_cookie))
-			{
-				$cookies_to_output[] = array ('header_type' => 'Set-Cookie', 'data' => $header_session_cookie);
+		return $this->pagination->create_links();
 			}
 	
-			foreach ($cookies_to_output as $cookie)
-			{
-				header ("{$cookie['header_type']}: {$cookie['data']}", false);
-			}
-		}
-	}
 }
 ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/controllers/suppliers.php opensourcepos/application/controllers/Suppliers.php
--- pos-prod/application/controllers/suppliers.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/controllers/Suppliers.php	2016-05-23 15:32:31.799840990 -0700
@@ -7,17 +8,15 @@
 		parent::__construct('suppliers');
 	}
 	
-	function index()
+	function index($limit_from=0)
 	{
-		$config['base_url'] = site_url('/suppliers/index');
-		$config['total_rows'] = $this->Supplier->count_all();
-		$config['per_page'] = '20';
-		$config['uri_segment'] = 3;
-		$this->pagination->initialize($config);
-		
-		$data['controller_name']=strtolower(get_class());
+		$data['controller_name'] = $this->get_controller_name();
 		$data['form_width']=$this->get_form_width();
-		$data['manage_table']=get_supplier_manage_table( $this->Supplier->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+		$suppliers = $this->Supplier->get_all($lines_per_page);
+		
+		$data['links'] = $this->_initialize_pagination($this->Supplier, $lines_per_page, $limit_from);
+		$data['manage_table'] = get_supplier_manage_table($suppliers, $this);
 		$this->load->view('suppliers/manage',$data);
 	}
 	
@@ -26,9 +25,16 @@
 	*/
 	function search()
 	{
-		$search=$this->input->post('search');
-		$data_rows=get_supplier_manage_table_data_rows($this->Supplier->search($search),$this);
-		echo $data_rows;
+		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
+		$limit_from = $this->input->post('limit_from');
+		$lines_per_page = $this->Appconfig->get('lines_per_page');
+
+		$suppliers = $this->Supplier->search($search, $lines_per_page, $limit_from);
+		$total_rows = $this->Supplier->get_found_rows($search);
+		$links = $this->_initialize_pagination($this->Supplier, $lines_per_page, $limit_from, $total_rows);
+		$data_rows = get_supplier_manage_table_data_rows($suppliers, $this);
+
+		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
 	}
 	
 	/*
@@ -57,6 +63,7 @@
 		$person_data = array(
 		'first_name'=>$this->input->post('first_name'),
 		'last_name'=>$this->input->post('last_name'),
+			'gender'=>$this->input->post('gender'),
 		'email'=>$this->input->post('email'),
 		'phone_number'=>$this->input->post('phone_number'),
 		'address_1'=>$this->input->post('address_1'),
@@ -69,9 +76,10 @@
 		);
 		$supplier_data=array(
 		'company_name'=>$this->input->post('company_name'),
-		'account_number'=>$this->input->post('account_number')=='' ? null:$this->input->post('account_number'),
+			'agency_name'=>$this->input->post('agency_name'),
+			'account_number'=>$this->input->post('account_number') == '' ? null : $this->input->post('account_number')
 		);
-		if($this->Supplier->save($person_data,$supplier_data,$supplier_id))
+		if($this->Supplier->save_supplier($person_data,$supplier_data,$supplier_id))
 		{
 			//New supplier
 			if($supplier_id==-1)
diff -rBwi --ignore-file-name-case -u pos-prod/application/core/index.html opensourcepos/application/core/index.html
--- pos-prod/application/core/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/core/index.html	2016-05-23 15:32:31.800840975 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in opensourcepos/application/core: MY_Lang.php
Only in pos-prod/application: errors
diff -rBwi --ignore-file-name-case -u pos-prod/application/helpers/currency_helper.php opensourcepos/application/helpers/currency_helper.php
--- pos-prod/application/helpers/currency_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/helpers/currency_helper.php	2016-05-23 15:32:31.800840975 -0700
@@ -1,25 +1,26 @@
 <?php
-/** GARRISON MODIFIED 4/20/2013 **/
-function to_currency($number)
+function to_currency($number,$escape=FALSE)
 {
 	$CI =& get_instance();
 	$currency_symbol = $CI->config->item('currency_symbol') ? $CI->config->item('currency_symbol') : '$';
+	$currency_symbol = $currency_symbol == '$' && $escape ? '\$' : $currency_symbol; 
+	$thousands_separator = $CI->config->item('thousands_separator') ? $CI->config->item('thousands_separator') : '';
+	$decimal_point = $CI->config->item('decimal_point') ? $CI->config->item('decimal_point') : '.';
 	if($number >= 0)
 	{
 		if($CI->config->item('currency_side') !== 'currency_side')
-			return $currency_symbol.number_format($number, 2, '.', '');
+			return $currency_symbol.number_format($number, 2, $decimal_point, $thousands_separator);
 		else
-			return number_format($number, 2, '.', '').$currency_symbol;
+			return number_format($number, 2, $decimal_point, $thousands_separator).$currency_symbol;
 	}
     else
     {
     	if($CI->config->item('currency_side') !== 'currency_side')
-    		return '-'.$currency_symbol.number_format(abs($number), 2, '.', '');
+    		return '-'.$currency_symbol.number_format(abs($number), 2, $decimal_point, $thousands_separator);
     	else
-    		return '-'.number_format(abs($number), 2, '.', '').$currency_symbol;
+    		return '-'.number_format(abs($number), 2, $decimal_point, $thousands_separator).$currency_symbol;
     }
 }
-/** END MODIFIED **/
 
 function to_currency_no_money($number)
 {
Only in opensourcepos/application/helpers: dateformat_helper.php
Only in opensourcepos/application/helpers: dompdf
Only in opensourcepos/application/helpers: dompdf_helper.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/helpers/index.html opensourcepos/application/helpers/index.html
--- pos-prod/application/helpers/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/helpers/index.html	2016-05-23 15:32:31.901839455 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/helpers/report_helper.php opensourcepos/application/helpers/report_helper.php
--- pos-prod/application/helpers/report_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/helpers/report_helper.php	2016-05-23 15:32:31.901839455 -0700
@@ -3,11 +3,15 @@
 {
 		$CI =& get_instance();
 		$CI->load->language('reports');
+
 		$today =  date('Y-m-d');
+	$today_last_year = date('Y-m-d', mktime(0,0,0,date("m"),date("d"),date("Y")-1));
 		$yesterday = date('Y-m-d', mktime(0,0,0,date("m"),date("d")-1,date("Y")));
 		$six_days_ago = date('Y-m-d', mktime(0,0,0,date("m"),date("d")-6,date("Y")));
 		$start_of_this_month = date('Y-m-d', mktime(0,0,0,date("m"),1,date("Y")));
 		$end_of_this_month = date('Y-m-d',strtotime('-1 second',strtotime('+1 month',strtotime(date('m').'/01/'.date('Y').' 00:00:00'))));
+	$start_of_this_month_last_year = date('Y-m-d', mktime(0,0,0,date("m"),1,date("Y")-1));
+	$end_of_this_month_last_year = date('Y-m-d',strtotime('-1 second',strtotime('+1 month',strtotime(date('m').'/01/'.(date('Y')-1).' 00:00:00'))));
 		$start_of_last_month = date('Y-m-d', mktime(0,0,0,date("m")-1,1,date("Y")));
 		$end_of_last_month = date('Y-m-d',strtotime('-1 second',strtotime('+1 month',strtotime((date('m') - 1).'/01/'.date('Y').' 00:00:00'))));
 		$start_of_this_year =  date('Y-m-d', mktime(0,0,0,1,1,date("Y")));
@@ -18,13 +22,17 @@
 
 		return array(
 			$today. '/' . $today 								=> $CI->lang->line('reports_today'),
+		$today_last_year . '/' . $today_last_year => $CI->lang->line('reports_today_last_year'),
 			$yesterday. '/' . $yesterday						=> $CI->lang->line('reports_yesterday'),
 			$six_days_ago. '/' . $today 						=> $CI->lang->line('reports_last_7'),
+		$start_of_this_month . '/' . $today => $CI->lang->line('reports_this_month_to_today'),
 			$start_of_this_month . '/' . $end_of_this_month		=> $CI->lang->line('reports_this_month'),
+		$start_of_this_month_last_year . '/' . $today_last_year => $CI->lang->line('reports_this_month_to_today_last_year'),
+		$start_of_this_month_last_year . '/' . $end_of_this_month_last_year	=> $CI->lang->line('reports_this_month_last_year'),
 			$start_of_last_month . '/' . $end_of_last_month		=> $CI->lang->line('reports_last_month'),
 			$start_of_this_year . '/' . $end_of_this_year	 	=> $CI->lang->line('reports_this_year'),
 			$start_of_last_year . '/' . $end_of_last_year		=> $CI->lang->line('reports_last_year'),
-			$start_of_time . '/' . 	$today						=> $CI->lang->line('reports_all_time'),
+		$start_of_time . '/' . 	$today => $CI->lang->line('reports_all_time')
 		);
 }
 
@@ -83,5 +93,31 @@
     while(strlen($c)<6){
         $c .= sprintf("%02X", mt_rand(0, 255));
     }
+
     return $c;
 }
\ No newline at end of file
+
+function show_report_if_allowed($report_prefix, $report_name, $person_id, $permission_id='')
+{
+	$CI =& get_instance();
+	$permission_id = empty($permission_id) ? 'reports_' . $report_name : $permission_id;	
+	if ($CI->Employee->has_grant($permission_id, $person_id))
+	{
+		show_report($report_prefix, $report_name, $permission_id);
+	}
+}
+
+function show_report($report_prefix, $report_name, $lang_key='')
+{
+	$CI =& get_instance();
+	$lang_key = empty($lang_key) ? $report_name : $lang_key;
+	$report_label = $CI->lang->line($lang_key);
+	$report_prefix = empty($report_prefix) ? '' : $report_prefix . '_';
+	// no summary nor detailed reports for receivings
+	if (!empty($report_label) && $report_label != $lang_key .  ' (TBD)')
+	{
+		?>
+			<li><a href="<?php echo site_url('reports/' . $report_prefix . preg_replace('/reports_(.*)/', '$1', $report_name));?>"><?php echo $report_label; ?></a></li>
+		<?php 
+	}
+}
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/helpers/table_helper.php opensourcepos/application/helpers/table_helper.php
--- pos-prod/application/helpers/table_helper.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/helpers/table_helper.php	2016-05-23 15:32:31.901839455 -0700
@@ -1,4 +1,120 @@
 <?php
+
+function get_sales_manage_table($sales, $controller)
+{
+	$CI =& get_instance();
+	$table='<table class="tablesorter" id="sortable_table">';
+
+	$headers = array('&nbsp;',
+	$CI->lang->line('sales_receipt_number'),
+	$CI->lang->line('sales_sale_time'),
+	$CI->lang->line('customers_customer'),
+	$CI->lang->line('sales_amount_tendered'),
+	$CI->lang->line('sales_amount_due'),
+	$CI->lang->line('sales_change_due'),
+	$CI->lang->line('sales_payment'),
+	$CI->lang->line('sales_invoice_number'),
+	'&nbsp');
+
+	$table.='<thead><tr>';
+	foreach($headers as $header)
+	{
+		$table.="<th>$header</th>";
+	}
+	$table.='</tr></thead><tbody>';
+	$table.=get_sales_manage_table_data_rows($sales, $controller);
+	$table.='</tbody></table>';
+
+	return $table;
+}
+
+/*
+ Gets the html data rows for the sales.
+ */
+function get_sales_manage_table_data_rows($sales, $controller)
+{
+	$CI =& get_instance();
+	$table_data_rows = '';
+	$sum_amount_tendered = 0;
+	$sum_amount_due = 0;
+	$sum_change_due = 0;
+
+	foreach($sales as $key=>$sale)
+	{
+		$table_data_rows .= get_sales_manage_sale_data_row($sale, $controller);
+		
+		$sum_amount_tendered += $sale['amount_tendered'];
+		$sum_amount_due += $sale['amount_due'];
+		$sum_change_due += $sale['change_due'];
+	}
+
+	if($table_data_rows == '')
+	{
+		$table_data_rows .= "<tr><td colspan='10'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('sales_no_sales_to_display')."</div></td></tr>";
+	}
+	else
+	{
+		$table_data_rows .= "<tr class='static-last'><td>&nbsp;</td><td>".$CI->lang->line('sales_total')."</td><td>&nbsp;</td><td>&nbsp;</td><td>".to_currency($sum_amount_tendered)."</td><td>".to_currency($sum_amount_due)."</td><td>".to_currency($sum_change_due)."</td><td colspan=\"3\"></td></tr>";
+	}
+
+	return $table_data_rows;
+}
+
+function get_sales_manage_sale_data_row($sale, $controller)
+{
+	$CI =& get_instance();
+	$controller_name = $CI->uri->segment(1);
+	$width = $controller->get_form_width();
+
+	$table_data_row='<tr>';
+	$table_data_row.='<td width="3%"><input class="print_hide" type="checkbox" id="sale_' . $sale['sale_id'] . '" value="' . $sale['sale_id']. '" /></td>';
+	$table_data_row.='<td width="15%">'.'POS ' . $sale['sale_id'] . '</td>';
+	$table_data_row.='<td width="17%">'.date( $CI->config->item('dateformat') . ' ' . $CI->config->item('timeformat'), strtotime($sale['sale_time']) ).'</td>';
+	$table_data_row.='<td width="23%">'.character_limiter( $sale['customer_name'], 25).'</td>';
+	$table_data_row.='<td width="8%">'.to_currency( $sale['amount_tendered'] ).'</td>';
+	$table_data_row.='<td width="8%">'.to_currency( $sale['amount_due'] ).'</td>';
+	$table_data_row.='<td width="8%">'.to_currency( $sale['change_due'] ).'</td>';
+	$table_data_row.='<td width="12%">'.$sale['payment_type'].'</td>';
+	$table_data_row.='<td width="8%">'.$sale['invoice_number'].'</td>';
+	$table_data_row.='<td width="8%" class="print_hide">';
+	$table_data_row.=anchor($controller_name."/edit/" . $sale['sale_id'] . "/width:$width", $CI->lang->line('common_edit'), array('class'=>'thickbox print_hide', 'title'=>$CI->lang->line('common_edit')));
+	$table_data_row.='&nbsp;&nbsp;&nbsp;&nbsp;';
+	$table_data_row.=anchor($controller_name."/receipt/" . $sale['sale_id'], $CI->lang->line('sales_show_receipt'), array('class'=>'print_hide', 'title'=>$CI->lang->line('sales_show_receipt')));
+	$table_data_row.='&nbsp;&nbsp;&nbsp;&nbsp;';
+	$table_data_row.=anchor($controller_name."/invoice/" . $sale['sale_id'], $CI->lang->line('sales_show_invoice'), array('class'=>'print_hide', 'title'=>$CI->lang->line('sales_show_invoice')));
+	$table_data_row.='</td>';
+	$table_data_row.='</tr>';
+
+	return $table_data_row;
+}
+
+/*
+Get the sales payments summary
+*/
+function get_sales_manage_payments_summary($payments, $sales, $controller)
+{
+	$CI =& get_instance();
+	$table='<div id="report_summary">';
+
+	foreach($payments as $key=>$payment)
+	{
+		$amount = $payment['payment_amount'];
+
+		// WARNING: the strong assumption here is that if a change is due it was a cash transaction always
+		// therefore we remove from the total cash amount any change due
+		if( $payment['payment_type'] == $CI->lang->line('sales_cash') )
+		{
+			foreach($sales as $key=>$sale)
+			{
+				$amount -= $sale['change_due'];
+			}
+		}
+		$table.='<div class="summary_row">'.$payment['payment_type'].': '.to_currency( $amount ) . '</div>';
+	}
+	$table.='</div>';
+	return $table;
+}
+
 /*
 Gets the html table to manage people.
 */
@@ -64,11 +181,11 @@
 	return $table_data_row;
 }
 
-function get_detailed_sales_data_row($sale, $controller)
+function get_detailed_data_row($row, $controller)
 {
 	$table_data_row='<tr>';
 	$table_data_row.='<td><a href="#" class="expand">+</a></td>';
-	foreach($sale as $cell)
+	foreach($row as $cell)
 	{
 		$table_data_row.='<td>';
 		$table_data_row.=$cell;
@@ -87,12 +205,13 @@
 	$table='<table class="tablesorter" id="sortable_table">';
 	
 	$headers = array('<input type="checkbox" id="select_all" />',
-	//$CI->lang->line('suppliers_company_name'),
-	//$CI->lang->line('common_last_name'),
-	//$CI->lang->line('common_first_name'),
-	"Name",
+	$CI->lang->line('suppliers_company_name'),
+	$CI->lang->line('suppliers_agency_name'),
+	$CI->lang->line('common_last_name'),
+	$CI->lang->line('common_first_name'),
 	$CI->lang->line('common_email'),
 	$CI->lang->line('common_phone_number'),
+	$CI->lang->line('suppliers_supplier_id'),
 	'&nbsp');
 	
 	$table.='<thead><tr>';
@@ -121,7 +241,7 @@
 	
 	if($suppliers->num_rows()==0)
 	{
-		$table_data_rows.="<tr><td colspan='7'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('common_no_persons_to_display')."</div></tr></tr>";
+		$table_data_rows.="<tr><td colspan='9'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('common_no_persons_to_display')."</div></td></tr>";
 	}
 	
 	return $table_data_rows;
@@ -135,11 +255,13 @@
 
 	$table_data_row='<tr>';
 	$table_data_row.="<td width='5%'><input type='checkbox' id='person_$supplier->person_id' value='".$supplier->person_id."'/></td>";
-	//$table_data_row.='<td width="17%">'.character_limiter($supplier->company_name,13).'</td>';
-	//$table_data_row.='<td width="17%">'.character_limiter($supplier->last_name,13).'</td>';
-	$table_data_row.='<td width="34%">'.character_limiter($supplier->first_name." ".$supplier->last_name,26).'</td>';
+	$table_data_row.='<td width="17%">'.character_limiter($supplier->company_name,13).'</td>';
+	$table_data_row.='<td width="17%">'.character_limiter($supplier->agency_name,13).'</td>';
+	$table_data_row.='<td width="17%">'.character_limiter($supplier->last_name,13).'</td>';
+	$table_data_row.='<td width="17%">'.character_limiter($supplier->first_name,13).'</td>';
 	$table_data_row.='<td width="22%">'.mailto($supplier->email,character_limiter($supplier->email,22)).'</td>';
 	$table_data_row.='<td width="17%">'.character_limiter($supplier->phone_number,13).'</td>';		
+	$table_data_row.='<td width="5%">'.character_limiter($supplier->person_id,5).'</td>';
 	$table_data_row.='<td width="5%">'.anchor($controller_name."/view/$supplier->person_id/width:$width", $CI->lang->line('common_edit'),array('class'=>'thickbox','title'=>$CI->lang->line($controller_name.'_update'))).'</td>';		
 	$table_data_row.='</tr>';
 	
@@ -158,12 +280,14 @@
 	$CI->lang->line('items_item_number'),
 	$CI->lang->line('items_name'),
 	$CI->lang->line('items_category'),
+	$CI->lang->line('suppliers_company_name'),
 	$CI->lang->line('items_cost_price'),
 	$CI->lang->line('items_unit_price'),
 	$CI->lang->line('items_quantity'),
 	$CI->lang->line('items_tax_percents'),
 	'&nbsp;',
-	$CI->lang->line('items_inventory')
+	'&nbsp;',
+	'&nbsp;'	
 	);
 	
 	$table.='<thead><tr>';
@@ -192,7 +317,7 @@
 	
 	if($items->num_rows()==0)
 	{
-		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('items_no_items_to_display')."</div></tr></tr>";
+		$table_data_rows.="<tr><td colspan='12'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('items_no_items_to_display')."</div></td></tr>";
 	}
 	
 	return $table_data_rows;
@@ -212,28 +337,29 @@
 	$width = $controller->get_form_width();
 
     $item_quantity='';
-    $locations_data = $CI->Stock_locations->get_undeleted_all()->result_array();
-    foreach($locations_data as $location)
-    {
-	    if (count($locations_data) > 1) 
-	    {
-        	$item_quantity .= $location['location_name'].': ';
-	    }
-	    $item_quantity .= $CI->Item_quantities->get_item_quantity($item->item_id, $location['location_id'])->quantity . '<br/>';
-    }
     
 	$table_data_row='<tr>';
 	$table_data_row.="<td width='3%'><input type='checkbox' id='item_$item->item_id' value='".$item->item_id."'/></td>";
 	$table_data_row.='<td width="15%">'.$item->item_number.'</td>';
 	$table_data_row.='<td width="20%">'.$item->name.'</td>';
 	$table_data_row.='<td width="14%">'.$item->category.'</td>';
+	$table_data_row.='<td width="14%">'.$item->company_name.'</td>';
 	$table_data_row.='<td width="14%">'.to_currency($item->cost_price).'</td>';
 	$table_data_row.='<td width="14%">'.to_currency($item->unit_price).'</td>';
-    $table_data_row.='<td width="14%">'.$item_quantity.'</td>';
+    $table_data_row.='<td width="14%">'.$item->quantity.'</td>';
 	$table_data_row.='<td width="14%">'.$tax_percents.'</td>';	
+	$image = '';
+	if (!empty($item->pic_id))
+	{
+		$images = glob ("uploads/item_pics/" . $item->pic_id . ".*");
+		if (sizeof($images) > 0)
+		{
+			$image.='<a class="rollover" href="'. base_url($images[0]) .'"><img src="'.site_url('items/pic_thumb/'.$item->pic_id).'"></a>';
+		}
+	}
+	$table_data_row.='<td align="center" width="55px">' . $image . '</td>';
 	$table_data_row.='<td width="5%">'.anchor($controller_name."/view/$item->item_id/width:$width", $CI->lang->line('common_edit'),array('class'=>'thickbox','title'=>$CI->lang->line($controller_name.'_update'))).'</td>';		
 	
-	//Ramel Inventory Tracking
 	$table_data_row.='<td width="10%">'.anchor($controller_name."/inventory/$item->item_id/width:$width", $CI->lang->line('common_inv'),array('class'=>'thickbox','title'=>$CI->lang->line($controller_name.'_count')))./*'</td>';//inventory count	
 	$table_data_row.='<td width="5%">'*/'&nbsp;&nbsp;&nbsp;&nbsp;'.anchor($controller_name."/count_details/$item->item_id/width:$width", $CI->lang->line('common_det'),array('class'=>'thickbox','title'=>$CI->lang->line($controller_name.'_details_count'))).'</td>';//inventory details	
 	
@@ -284,13 +411,12 @@
 	
 	if($giftcards->num_rows()==0)
 	{
-		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('giftcards_no_giftcards_to_display')."</div></tr></tr>";
+		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('giftcards_no_giftcards_to_display')."</div></td></tr>";
 	}
 	
 	return $table_data_rows;
 }
 
-/** GARRISON MODIFIED 4/25/2013 **/
 function get_giftcard_data_row($giftcard,$controller)
 {
 	$CI =& get_instance();
@@ -304,11 +430,10 @@
 	$table_data_row.='<td width="15%">'.$giftcard->giftcard_number.'</td>';
 	$table_data_row.='<td width="20%">'.to_currency($giftcard->value).'</td>';
 	$table_data_row.='<td width="5%">'.anchor($controller_name."/view/$giftcard->giftcard_id/width:$width", $CI->lang->line('common_edit'),array('class'=>'thickbox','title'=>$CI->lang->line($controller_name.'_update'))).'</td>';		
-	
 	$table_data_row.='</tr>';
+
 	return $table_data_row;
 }
-/** END GARRISON MODIFIED **/
 
 /*
 Gets the html table to manage item kits.
@@ -320,8 +444,11 @@
 	$table='<table class="tablesorter" id="sortable_table">';
 	
 	$headers = array('<input type="checkbox" id="select_all" />', 
+	$CI->lang->line('item_kits_kit'),
 	$CI->lang->line('item_kits_name'),
 	$CI->lang->line('item_kits_description'),
+	$CI->lang->line('items_cost_price'),
+	$CI->lang->line('items_unit_price'),
 	'&nbsp', 
 	);
 	
@@ -351,7 +479,7 @@
 	
 	if($item_kits->num_rows()==0)
 	{
-		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('item_kits_no_item_kits_to_display')."</div></tr></tr>";
+		$table_data_rows .= "<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('item_kits_no_item_kits_to_display')."</div></td></tr>";
 	}
 	
 	return $table_data_rows;
@@ -365,11 +493,14 @@
 
 	$table_data_row='<tr>';
 	$table_data_row.="<td width='3%'><input type='checkbox' id='item_kit_$item_kit->item_kit_id' value='".$item_kit->item_kit_id."'/></td>";
+	$table_data_row.='<td width="15%">'.'KIT '.$item_kit->item_kit_id.'</td>';
 	$table_data_row.='<td width="15%">'.$item_kit->name.'</td>';
 	$table_data_row.='<td width="20%">'.character_limiter($item_kit->description, 25).'</td>';
+	$table_data_row.='<td width="15%">'.to_currency($item_kit->total_cost_price).'</td>';
+	$table_data_row.='<td width="15%">'.to_currency($item_kit->total_unit_price).'</td>';
 	$table_data_row.='<td width="5%">'.anchor($controller_name."/view/$item_kit->item_kit_id/width:$width", $CI->lang->line('common_edit'),array('class'=>'thickbox','title'=>$CI->lang->line($controller_name.'_update'))).'</td>';		
-	
 	$table_data_row.='</tr>';
+
 	return $table_data_row;
 }
 
diff -rBwi --ignore-file-name-case -u pos-prod/application/hooks/index.html opensourcepos/application/hooks/index.html
--- pos-prod/application/hooks/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/hooks/index.html	2016-05-23 15:32:31.901839455 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/hooks/load_config.php opensourcepos/application/hooks/load_config.php
--- pos-prod/application/hooks/load_config.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/hooks/load_config.php	2016-05-23 15:32:31.901839455 -0700
@@ -14,16 +14,22 @@
     if ( $CI->config->item( 'language' ) )
     {
         $CI->config->set_item( 'language', $CI->config->item( 'language' ) );
+		// fallback to english if language folder does not exist        
+		$language = $CI->config->item( 'language' );
+        if (!file_exists('./application/language/' . $language)) 
+        {
+        	$language = 'en';
+        }
         
-        $map = directory_map('./application/language/' . $CI->config->item( 'language' ));
-
+        $map = directory_map('./application/language/' . $language);
         foreach($map as $file)
         {
-            if ( substr(strrchr($file,'.'),1) == "php")
+            if ( !is_array($file) && substr(strrchr($file,'.'), 1) == "php")
             {
-                $CI->lang->load( str_replace( '_lang.php', '', $file ) );    
+                $CI->lang->load( str_replace( '_lang.php', '', $file ),  $language);    
             }
         }
+        
     }
     
     //Set timezone from config database
diff -rBwi --ignore-file-name-case -u pos-prod/application/index.html opensourcepos/application/index.html
--- pos-prod/application/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/index.html	2016-05-23 15:32:31.901839455 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in pos-prod/application/language: Azerbaijan
Only in pos-prod/application/language: BahasaIndonesia
Only in opensourcepos/application/language: de-CH
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/common_lang.php opensourcepos/application/language/en/common_lang.php
--- pos-prod/application/language/en/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/common_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,41 +1,57 @@
 <?php
-$lang['common_common'] = 'common';
-$lang['common_submit'] = 'Submit';
-$lang['common_or'] = 'OR';
-$lang['common_powered_by'] = 'Powered by';
-$lang['common_welcome'] = 'Welcome';
-$lang['common_logout'] = 'Logout';
-$lang['common_list_of'] = 'List of';
-$lang['common_first_name'] = 'First Name';
-$lang['common_last_name'] = 'Last Name';
-$lang['common_email'] = 'E-Mail';
-$lang['common_phone_number'] = 'Phone Number';
-$lang['common_address_1'] = 'Address 1';
-$lang['common_address_2'] = 'Address 2';
-$lang['common_city'] = 'City';
-$lang['common_state'] = 'State';
-$lang['common_zip'] = 'Zip';
-$lang['common_country'] = 'Country';
-$lang['common_comments'] = 'Comments';
-$lang['common_edit'] = 'edit';
-$lang['common_search'] = 'Search';
-$lang['common_delete'] = 'Delete';
-$lang['common_remove'] = 'Remove';
-$lang['common_view_recent_sales'] = 'View Recent Sales';
-$lang['common_you_are_using_ospos'] = 'You are using Open Source Point Of Sale Version';
-$lang['common_please_visit_my'] = 'Please visit my';
-$lang['common_website'] = 'website';
-$lang['common_fields_required_message'] = 'Fields in red are required';
-$lang['common_learn_about_project'] = 'to learn the lastest information about the project';
-$lang['common_searched_for'] = 'Searched for';
-$lang['common_first_name_required'] = 'The first name is a required field.';
-$lang['common_last_name_required'] = 'The last name is a required field';
-$lang['common_email_invalid_format'] = 'The e-mail address is not in the proper format';
-$lang['common_confirm_search'] = 'You have selected one or more rows, these will no longer be selected after your search. Are you sure you want to submit this search?';
-$lang['common_no_persons_to_display'] = 'There are no people to display';
-$lang['common_return_policy'] = 'Return Policy';
-$lang['common_price'] = 'Price';
-$lang['common_welcome_message']= 'Welcome to Open Source Point Of Sale, click a module below to get started!';
-$lang['common_inv'] = 'inv';
-$lang['common_det'] = 'details';
-?>
+
+$lang["common_address_1"] = "Address 1";
+$lang["common_address_2"] = "Address 2";
+$lang["common_city"] = "City";
+$lang["common_comments"] = "Comments";
+$lang["common_common"] = "common";
+$lang["common_confirm_search"] = "You have selected one or more rows, these will no longer be selected after your search. Are you sure you want to submit this search?";
+$lang["common_country"] = "Country";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "Delete";
+$lang["common_print"] = "Print";
+$lang["common_det"] = "details";
+$lang["common_edit"] = "edit";
+$lang["common_email"] = "E-Mail";
+$lang["common_email_invalid_format"] = "The e-mail address is not in the proper format";
+$lang["common_fields_required_message"] = "Fields in red are required";
+$lang["common_first_name"] = "First Name";
+$lang["common_first_name_required"] = "The first name is a required field.";
+$lang["common_first_page"] = "First";
+$lang["common_gender"] = "Gender";
+$lang["common_gender_female"] = "F";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "inv";
+$lang["common_last_name"] = "Last Name";
+$lang["common_last_name_required"] = "The last name is a required field";
+$lang["common_last_page"] = "Last";
+$lang["common_learn_about_project"] = "to learn the latest information about the project";
+$lang["common_list_of"] = "List of";
+$lang["common_logout"] = "Logout";
+$lang["common_new"] = "New";
+$lang["common_no_persons_to_display"] = "There are no people to display";
+$lang["common_or"] = "OR";
+$lang["common_phone_number"] = "Phone Number";
+$lang["common_phone_number_required"] = "";
+$lang["common_please_visit_my"] = "Please visit my";
+$lang["common_powered_by"] = "Powered by";
+$lang["common_price"] = "Price";
+$lang["common_remove"] = "Remove";
+$lang["common_return_policy"] = "Return Policy";
+$lang["common_search"] = "Search";
+$lang["common_search_options"] = "Search options";
+$lang["common_searched_for"] = "Searched for";
+$lang["common_state"] = "State";
+$lang["common_submit"] = "Submit";
+$lang["common_view_recent_sales"] = "View Recent Sales";
+$lang["common_website"] = "website";
+$lang["common_welcome"] = "Welcome";
+$lang["common_welcome_message"] = "Welcome to Open Source Point Of Sale, click a module below to get started!";
+$lang["common_you_are_using_ospos"] = "You are using Open Source Point Of Sale Version";
+$lang["common_zip"] = "Zip";
+$lang["common_import"] = "Import";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/config_lang.php opensourcepos/application/language/en/config_lang.php
--- pos-prod/application/language/en/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/config_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,38 +1,122 @@
 <?php
-$lang['config_info'] = 'Store Configuration Information';
-$lang['config_company'] = 'Company Name';
-$lang['config_address'] = 'Company Address';
-$lang['config_phone'] = 'Company Phone';
-$lang['config_website'] = 'Website';
-$lang['config_fax'] = 'Fax';
-$lang['config_default_tax_rate'] = 'Default Tax Rate %';
-$lang['config_default_tax_rate_1'] = 'Tax 1 Rate';
-$lang['config_default_tax_rate_2'] = 'Tax 2 Rate';
-$lang['config_company_required'] = 'Company name is a required field';
-$lang['config_address_required'] = 'Company address is a required field';
-$lang['config_phone_required'] = 'Company phone is a required field';
-$lang['config_default_tax_rate_required'] = 'The default tax rate is a required field';
-$lang['config_default_tax_rate_number'] = 'The default tax rate must be a number';
-$lang['config_company_website_url'] = 'Company website is not a valid URL (http://...)';
-$lang['config_saved_successfully'] = 'Configuration saved successfully';
-$lang['config_saved_unsuccessfully'] = 'Configuration saved unsuccessfully';
-$lang['config_return_policy_required'] = 'Return policy is a required field';
-$lang['config_print_after_sale'] = 'Print receipt after sale';
-$lang['config_language'] = 'Language';
-$lang['config_timezone'] = 'Timezone';
-$lang['config_currency_symbol'] = 'Currency Symbol';
-$lang['config_currency_side'] = 'Right side'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Custom Field 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Custom Field 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Custom Field 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Custom Field 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Custom Field 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Custom Field 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Custom Field 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Custom Field 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Custom Field 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Custom Field 10'; //GARRISON ADDED 4/21/2013
  
-$lang['config_stock_location'] = 'Stock location';
-$lang['config_stock_location_required'] = 'Stock location number is a required field';
-?>
+$lang["config_address"] = "Company Address";
+$lang["config_address_required"] = "Company address is a required field";
+$lang["config_backup_button"] = "Backup";
+$lang["config_backup_database"] = "Backup Database";
+$lang["config_barcode_company"] = "Company Name";
+$lang["config_barcode_configuration"] = "Barcode Configuration";
+$lang["config_barcode_content"] = "Barcode Content";
+$lang["config_barcode_first_row"] = "Row 1";
+$lang["config_barcode_font"] = "Font";
+$lang["config_barcode_height"] = "Height (px)";
+$lang["config_barcode_id"] = "Item Id/Name";
+$lang["config_barcode_info"] = "Barcode Configuration Information";
+$lang["config_barcode_layout"] = "Barcode Layout";
+$lang["config_barcode_name"] = "Name";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Number in row";
+$lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
+$lang["config_barcode_page_width"] = "Display page width";
+$lang["config_barcode_price"] = "Price";
+$lang["config_barcode_quality"] = "Quality (1-100)";
+$lang["config_barcode_second_row"] = "Row 2";
+$lang["config_barcode_third_row"] = "Row 3";
+$lang["config_barcode_type"] = "Barcode Type";
+$lang["config_barcode_width"] = "Width (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "Company Name";
+$lang["config_company_logo"] = "Company Logo";
+$lang["config_company_required"] = "Company name is a required field";
+$lang["config_company_website_url"] = "Company website is not a valid URL (http://...)";
+$lang["config_currency_side"] = "Right side";
+$lang["config_currency_symbol"] = "Currency Symbol";
+$lang["config_custom1"] = "Custom Field 1";
+$lang["config_custom10"] = "Custom Field 10";
+$lang["config_custom2"] = "Custom Field 2";
+$lang["config_custom3"] = "Custom Field 3";
+$lang["config_custom4"] = "Custom Field 4";
+$lang["config_custom5"] = "Custom Field 5";
+$lang["config_custom6"] = "Custom Field 6";
+$lang["config_custom7"] = "Custom Field 7";
+$lang["config_custom8"] = "Custom Field 8";
+$lang["config_custom9"] = "Custom Field 9";
+$lang["config_decimal_point"] = "Decimal Point";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Default Sales Discount %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "Default Tax Rate %";
+$lang["config_default_tax_rate_1"] = "Tax 1 Rate";
+$lang["config_default_tax_rate_2"] = "Tax 2 Rate";
+$lang["config_default_tax_rate_number"] = "The default tax rate must be a number";
+$lang["config_default_tax_rate_required"] = "The default tax rate is a required field";
+$lang["config_fax"] = "Fax";
+$lang["config_general_configuration"] = "General Configuration";
+$lang["config_info"] = "Store Configuration Information";
+$lang["config_invoice_default_comments"] = "Default Invoice Comments";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Invoice Printer";
+$lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
+$lang["config_language"] = "Language";
+$lang["config_lines_per_page"] = "Lines Per Page";
+$lang["config_lines_per_page_number"] = "";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locations";
+$lang["config_location_info"] = "Location Configuration Information";
+$lang["config_logout"] = "Don't you want to make a backup before logging out? Click [OK] to backup, [Cancel] to logout";
+$lang["config_number_format"] = "Number Format";
+$lang["config_phone"] = "Company Phone";
+$lang["config_phone_required"] = "Company phone is a required field";
+$lang["config_print_bottom_margin"] = "Margin Bottom";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Margin Left";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Margin Right";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Show Print Dialog";
+$lang["config_print_top_margin"] = "Margin Top";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Settings";
+$lang["config_receipt_info"] = "Receipt Configuration Information";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Show Taxes";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "Receivings Invoice Format";
+$lang["config_return_policy_required"] = "Return policy is a required field";
+$lang["config_sales_invoice_format"] = "Sales Invoice Format";
+$lang["config_saved_successfully"] = "Configuration saved successfully";
+$lang["config_saved_unsuccessfully"] = "Configuration saved unsuccessfully";
+$lang["config_show_total_discount"] = "Show total discount";
+$lang["config_stock_location"] = "Stock location";
+$lang["config_stock_location_duplicate"] = "Please use an unique location name";
+$lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
+$lang["config_stock_location_required"] = "Stock location number is a required field";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "Tax Included";
+$lang["config_thousands_separator"] = "Thousands Separator";
+$lang["config_timezone"] = "Timezone";
+$lang["config_use_invoice_template"] = "Use invoice template";
+$lang["config_website"] = "Website";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
Only in pos-prod/application/language/en: config_lang.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/customers_lang.php opensourcepos/application/language/en/customers_lang.php
--- pos-prod/application/language/en/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/customers_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new'] = 'New Customer';
-$lang['customers_customer'] = 'Customer';
-$lang['customers_update'] = 'Update Customer';
-$lang['customers_confirm_delete'] = 'Are you sure you want to delete the selected customers?';
-$lang['customers_none_selected'] = 'You have not selected any customers to delete';
-$lang['customers_error_adding_updating'] = 'Error adding/updating customer';
-$lang['customers_successful_adding'] = 'You have successfully added customer';
-$lang['customers_successful_updating'] = 'You have successfully updated customer';
-$lang['customers_successful_deleted'] = 'You have successfully deleted';
-$lang['customers_one_or_multiple'] = 'customer(s)';
-$lang['customers_cannot_be_deleted'] = 'Could not deleted selected customers, one or more of the selected customers has sales.';
-$lang['customers_basic_information'] = 'Customer Information';
-$lang['customers_account_number'] = 'Account #';
-$lang['customers_taxable'] = 'Taxable';
-?>
+
+$lang["customers_account_number"] = "Account #";
+$lang["customers_account_number_duplicate"] = "This account number is already present in the database";
+$lang["customers_basic_information"] = "Customer Information";
+$lang["customers_cannot_be_deleted"] = "Could not deleted selected customers, one or more of the selected customers has sales.";
+$lang["customers_company_name"] = "Company Name";
+$lang["customers_confirm_delete"] = "Are you sure you want to delete the selected customers?";
+$lang["customers_customer"] = "Customer";
+$lang["customers_error_adding_updating"] = "Error adding/updating customer";
+$lang["customers_new"] = "New Customer";
+$lang["customers_none_selected"] = "You have not selected any customers to delete";
+$lang["customers_one_or_multiple"] = "customer(s)";
+$lang["customers_successful_adding"] = "You have successfully added customer";
+$lang["customers_successful_deleted"] = "You have successfully deleted";
+$lang["customers_successful_updating"] = "You have successfully updated customer";
+$lang["customers_taxable"] = "Taxable";
+$lang["customers_update"] = "Update Customer";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/employees_lang.php opensourcepos/application/language/en/employees_lang.php
--- pos-prod/application/language/en/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/employees_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee'] = 'Employee';
-$lang['employees_new'] = 'New Employee';
-$lang['employees_update'] = 'Update Employee';
-$lang['employees_confirm_delete'] = 'Are you sure you want to delete the selected employees?';
-$lang['employees_none_selected'] = 'You have not selected any employees to delete';
-$lang['employees_error_adding_updating'] = 'Error adding/updating employee';
-$lang['employees_successful_adding'] = 'You have successfully added employee';
-$lang['employees_successful_updating'] = 'You have successfully updated employee';
-$lang['employees_successful_deleted'] = 'You have successfully deleted';
-$lang['employees_one_or_multiple'] = 'employee(s)';
-$lang['employees_cannot_be_deleted'] = 'Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
-$lang['employees_username'] = 'Username';
-$lang['employees_password'] = 'Password';
-$lang['employees_repeat_password'] = 'Password Again';
-$lang['employees_username_required'] = 'Username is a required field';
-$lang['employees_username_minlength'] = 'The username must be at least 5 characters';
-$lang['employees_password_required'] = 'Password is required';
-$lang['employees_password_minlength'] = 'Passwords must be at least 8 characters';
-$lang['employees_password_must_match'] = 'Passwords do not match';
-$lang['employees_basic_information'] = 'Employee Basic Information';
-$lang['employees_login_info'] = 'Employee Login Info';
-$lang['employees_permission_info'] = 'Employee Permissions and Access';
-$lang['employees_permission_desc'] = 'Check the boxes below to grant access to modules';
-$lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
-$lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
-?>
+
+$lang["employees_basic_information"] = "Employee Basic Information";
+$lang["employees_cannot_be_deleted"] = "Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)";
+$lang["employees_confirm_delete"] = "Are you sure you want to delete the selected employees?";
+$lang["employees_employee"] = "Employee";
+$lang["employees_error_adding_updating"] = "Error adding/updating employee";
+$lang["employees_error_deleting_demo_admin"] = "You can not delete the demo admin user";
+$lang["employees_error_updating_demo_admin"] = "You can not change the demo admin user";
+$lang["employees_login_info"] = "Employee Login Info";
+$lang["employees_new"] = "New Employee";
+$lang["employees_none_selected"] = "You have not selected any employees to delete";
+$lang["employees_one_or_multiple"] = "employee(s)";
+$lang["employees_password"] = "Password";
+$lang["employees_password_minlength"] = "Passwords must be at least 8 characters";
+$lang["employees_password_must_match"] = "Passwords do not match";
+$lang["employees_password_required"] = "Password is required";
+$lang["employees_permission_desc"] = "Check the boxes below to grant access to modules";
+$lang["employees_permission_info"] = "Employee Permissions and Access";
+$lang["employees_repeat_password"] = "Password Again";
+$lang["employees_successful_adding"] = "You have successfully added employee";
+$lang["employees_successful_deleted"] = "You have successfully deleted";
+$lang["employees_successful_updating"] = "You have successfully updated employee";
+$lang["employees_update"] = "Update Employee";
+$lang["employees_username"] = "Username";
+$lang["employees_username_minlength"] = "The username must be at least 5 characters";
+$lang["employees_username_required"] = "Username is a required field";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/error_lang.php opensourcepos/application/language/en/error_lang.php
--- pos-prod/application/language/en/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/error_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module'] = 'You do not have permission to access the module named';
-$lang['error_unknown'] = 'unknown';
-?>
+
+$lang["error_no_permission_module"] = "You do not have permission to access the module named";
+$lang["error_unknown"] = "unknown";
Only in pos-prod/application/language/en: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/giftcards_lang.php opensourcepos/application/language/en/giftcards_lang.php
--- pos-prod/application/language/en/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/giftcards_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = 'Giftcard Number';
-$lang['giftcards_card_value'] = 'Value';
-$lang['giftcards_basic_information'] = 'Giftcard Information';
-$lang['giftcards_number_required'] = 'Giftcard Number is a required field';
-$lang['giftcards_value_required'] = 'Giftcard Value is a required field';
-$lang['giftcards_number'] = 'Giftcard Number must be a number';
-$lang['giftcards_value'] = 'Giftcard Value must be a number';
-$lang['giftcards_person_id'] = 'Customer';
-$lang['giftcards_retrive_giftcard_info'] = 'Retrieve Giftcard Info';
-$lang['giftcards_description'] = 'Description';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'UPC Database';
-$lang['giftcards_cannot_find_giftcard'] = 'Cannot find any information about giftcard';
-$lang['giftcards_info_provided_by'] = 'Info provided by';
-$lang['giftcards_number_information'] = 'Giftcard Number';
-$lang['giftcards_new'] = 'New Giftcard';
-$lang['giftcards_update'] = 'Update Giftcard';
-$lang['giftcards_giftcard'] = 'Giftcard';
-$lang['giftcards_edit_multiple_giftcards'] = 'Editing Multiple Giftcards';
-$lang['giftcards_category'] = 'Category';
-$lang['giftcards_cost_price'] = 'Cost Price';
-$lang['giftcards_unit_price'] = 'Unit Price';
-$lang['giftcards_tax_1'] = 'Tax 1';
-$lang['giftcards_tax_2'] = 'Tax 2';
-$lang['giftcards_sales_tax_1'] = 'Sales Tax';
-$lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
-$lang['giftcards_tax_percent'] = 'Tax Percent';
-$lang['giftcards_tax_percents'] = 'Tax Percent(s)';
-$lang['giftcards_reorder_level'] = 'Reorder Level';
-$lang['giftcards_quantity'] = 'Quantity';
-$lang['giftcards_no_giftcards_to_display'] = 'No Giftcards to display';
-$lang['giftcards_bulk_edit'] = 'Bulk Edit';
-$lang['giftcards_confirm_delete'] = 'Are you sure you want to delete the selected giftcards?';
-$lang['giftcards_none_selected'] = 'You have not selected any giftcards to edit';
-$lang['giftcards_confirm_bulk_edit'] = 'Are you sure you want to edit all the giftcards selected?';
-$lang['giftcards_successful_bulk_edit'] = 'You have successfully updated the selected giftcards';
-$lang['giftcards_error_updating_multiple'] = 'Error updating giftcards';
-$lang['giftcards_edit_fields_you_want_to_update'] = 'Edit the fields you want to edit for ALL selected giftcards';
-$lang['giftcards_error_adding_updating'] = 'Error adding/updating giftcard';
-$lang['giftcards_successful_adding'] = 'You have successfully added giftcard';
-$lang['giftcards_successful_updating'] = 'You have successfully updated giftcard';
-$lang['giftcards_successful_deleted'] = 'You have successfully deleted';
-$lang['giftcards_one_or_multiple'] = 'giftcard(s)';
-$lang['giftcards_cannot_be_deleted'] = 'Could not deleted selected giftcards, one or more of the selected giftcards has sales.';
-$lang['giftcards_none'] = 'None';
-$lang['giftcards_supplier'] = 'Supplier';
-$lang['giftcards_generate_barcodes'] = 'Generate Barcodes';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'You must select at least 1 giftcard to generate barcodes';
-$lang['giftcards_excel_import_failed'] = 'Excel import failed';
-$lang['giftcards_allow_alt_description'] = 'Allow Alt Description';
-$lang['giftcards_is_serialized'] = 'Giftcard has Serial Number';
-$lang['giftcards_low_inventory_giftcards'] = 'Low Inventory Giftcards';
-$lang['giftcards_serialized_giftcards'] = 'Serialized Giftcards';
-$lang['giftcards_no_description_giftcards'] = 'No Description Giftcards';
-$lang['giftcards_inventory_comments'] = 'Comments';
-$lang['giftcards_count'] = 'Update Inventory';
-$lang['giftcards_details_count'] = 'Inventory Count Details';
-$lang['giftcards_add_minus'] = 'Inventory to add/subtract';
-$lang['giftcards_current_quantity'] = 'Current Quantity';
-$lang['giftcards_quantity_required'] = 'Quantity is a required field. Please Close ( X ) to cancel';
-$lang['giftcards_do_nothing'] = 'Do Nothing';
-$lang['giftcards_change_all_to_serialized'] = 'Change All To Serialized';
-$lang['giftcards_change_all_to_unserialized'] = 'Change All To Unserialized';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Allow Alt Desc For All';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
-$lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
-$lang['giftcards_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
-?>
+
+$lang["giftcards_add_minus"] = "Inventory to add/subtract";
+$lang["giftcards_allow_alt_description"] = "Allow Alt Description";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
+$lang["giftcards_basic_information"] = "Giftcard Information";
+$lang["giftcards_bulk_edit"] = "Bulk Edit";
+$lang["giftcards_cannot_be_deleted"] = "Could not deleted selected giftcards, one or more of the selected giftcards has sales.";
+$lang["giftcards_cannot_find_giftcard"] = "Cannot find any information about giftcard";
+$lang["giftcards_card_value"] = "Value";
+$lang["giftcards_category"] = "Category";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "Allow Alt Desc For All";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "Not Allow Alt Desc For All";
+$lang["giftcards_change_all_to_serialized"] = "Change All To Serialized";
+$lang["giftcards_change_all_to_unserialized"] = "Change All To Unserialized";
+$lang["giftcards_confirm_bulk_edit"] = "Are you sure you want to edit all the giftcards selected?";
+$lang["giftcards_confirm_delete"] = "Are you sure you want to delete the selected giftcards?";
+$lang["giftcards_cost_price"] = "Cost Price";
+$lang["giftcards_count"] = "Update Inventory";
+$lang["giftcards_current_quantity"] = "Current Quantity";
+$lang["giftcards_description"] = "Description";
+$lang["giftcards_details_count"] = "Inventory Count Details";
+$lang["giftcards_do_nothing"] = "Do Nothing";
+$lang["giftcards_edit_fields_you_want_to_update"] = "Edit the fields you want to edit for ALL selected giftcards";
+$lang["giftcards_edit_multiple_giftcards"] = "Editing Multiple Giftcards";
+$lang["giftcards_error_adding_updating"] = "Error adding/updating giftcard";
+$lang["giftcards_error_updating_multiple"] = "Error updating giftcards";
+$lang["giftcards_excel_import_failed"] = "Excel import failed";
+$lang["giftcards_generate_barcodes"] = "Generate Barcodes";
+$lang["giftcards_giftcard"] = "Giftcard";
+$lang["giftcards_giftcard_number"] = "Giftcard Number";
+$lang["giftcards_info_provided_by"] = "Info provided by";
+$lang["giftcards_inventory_comments"] = "Comments";
+$lang["giftcards_is_serialized"] = "Giftcard has Serial Number";
+$lang["giftcards_low_inventory_giftcards"] = "Low Inventory Giftcards";
+$lang["giftcards_manually_editing_of_quantity"] = "Manual Edit of Quantity";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "You must select at least 1 giftcard to generate barcodes";
+$lang["giftcards_new"] = "New Giftcard";
+$lang["giftcards_no_description_giftcards"] = "No Description Giftcards";
+$lang["giftcards_no_giftcards_to_display"] = "No Giftcards to display";
+$lang["giftcards_none"] = "None";
+$lang["giftcards_none_selected"] = "You have not selected any giftcards to edit";
+$lang["giftcards_number"] = "Giftcard Number must be a number";
+$lang["giftcards_number_information"] = "Giftcard Number";
+$lang["giftcards_number_required"] = "Giftcard Number is a required field";
+$lang["giftcards_one_or_multiple"] = "giftcard(s)";
+$lang["giftcards_person_id"] = "Customer";
+$lang["giftcards_quantity"] = "Quantity";
+$lang["giftcards_quantity_required"] = "Quantity is a required field. Please Close ( X ) to cancel";
+$lang["giftcards_reorder_level"] = "Reorder Level";
+$lang["giftcards_retrive_giftcard_info"] = "Retrieve Giftcard Info";
+$lang["giftcards_sales_tax_1"] = "Sales Tax";
+$lang["giftcards_sales_tax_2"] = "Sales Tax 2";
+$lang["giftcards_serialized_giftcards"] = "Serialized Giftcards";
+$lang["giftcards_successful_adding"] = "You have successfully added giftcard";
+$lang["giftcards_successful_bulk_edit"] = "You have successfully updated the selected giftcards";
+$lang["giftcards_successful_deleted"] = "You have successfully deleted";
+$lang["giftcards_successful_updating"] = "You have successfully updated giftcard";
+$lang["giftcards_supplier"] = "Supplier";
+$lang["giftcards_tax_1"] = "Tax 1";
+$lang["giftcards_tax_2"] = "Tax 2";
+$lang["giftcards_tax_percent"] = "Tax Percent";
+$lang["giftcards_tax_percents"] = "Tax Percent(s)";
+$lang["giftcards_unit_price"] = "Unit Price";
+$lang["giftcards_upc_database"] = "UPC Database";
+$lang["giftcards_update"] = "Update Giftcard";
+$lang["giftcards_use_inventory_menu"] = "Use Inv. Menu";
+$lang["giftcards_value"] = "Giftcard Value must be a number";
+$lang["giftcards_value_required"] = "Giftcard Value is a required field";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/index.html opensourcepos/application/language/en/index.html
--- pos-prod/application/language/en/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/index.html	2016-05-23 15:32:31.902839440 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/item_kits_lang.php opensourcepos/application/language/en/item_kits_lang.php
--- pos-prod/application/language/en/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/item_kits_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'Item Kit Name';
-$lang['item_kits_description'] = 'Item Kit Description';
-$lang['item_kits_no_item_kits_to_display'] = 'No item kits to display';
-$lang['item_kits_update'] = 'Update Item Kit';
-$lang['item_kits_new'] = 'New Item Kit';
-$lang['item_kits_none_selected'] = "You have not selected any item kits";
-$lang['item_kits_info'] = 'Item Kit Info';
-$lang['item_kits_successful_adding'] = 'You have successfully added Item Kit';
-$lang['item_kits_successful_updating'] = 'You have successfully updated Item Kit';
-$lang['item_kits_error_adding_updating'] = 'Error adding/updating Item Kit';
-$lang['item_kits_successful_deleted'] = 'You have successfully deleted';
-$lang['item_kits_confirm_delete'] = 'Are you sure you want to delete the selected item kits?';
-$lang['item_kits_one_or_multiple'] = 'Item Kit(s)';
-$lang['item_kits_cannot_be_deleted'] = 'Could not delete item kit(s)';
-$lang['item_kits_add_item'] = 'Add Item';
-$lang['item_kits_items'] = 'Items';
-$lang['item_kits_item'] = 'Item';
-$lang['item_kits_quantity'] = 'Quantity';
-?>
+
+$lang["item_kits_add_item"] = "Add Item";
+$lang["item_kits_cannot_be_deleted"] = "Could not delete item kit(s)";
+$lang["item_kits_confirm_delete"] = "Are you sure you want to delete the selected item kits?";
+$lang["item_kits_description"] = "Item Kit Description";
+$lang["item_kits_error_adding_updating"] = "Error adding/updating Item Kit";
+$lang["item_kits_info"] = "Item Kit Info";
+$lang["item_kits_item"] = "Item";
+$lang["item_kits_items"] = "Items";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "Item Kit Name";
+$lang["item_kits_new"] = "New Item Kit";
+$lang["item_kits_no_item_kits_to_display"] = "No item kits to display";
+$lang["item_kits_none_selected"] = "You have not selected any item kits";
+$lang["item_kits_one_or_multiple"] = "Item Kit(s)";
+$lang["item_kits_quantity"] = "Quantity";
+$lang["item_kits_successful_adding"] = "You have successfully added Item Kit";
+$lang["item_kits_successful_deleted"] = "You have successfully deleted";
+$lang["item_kits_successful_updating"] = "You have successfully updated Item Kit";
+$lang["item_kits_update"] = "Update Item Kit";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/items_lang.php opensourcepos/application/language/en/items_lang.php
--- pos-prod/application/language/en/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/items_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,86 +1,88 @@
 <?php
-$lang['items_item_number']='UPC/EAN/ISBN';
-$lang['items_retrive_item_info']='Retrive Item Info';
-$lang['items_description']='Description';
-$lang['items_amazon']='Amazon';
-$lang['items_upc_database']='UPC Database';
-$lang['items_cannot_find_item']='Cannot find any information about item';
-$lang['items_info_provided_by']='Info provided by';
-$lang['items_basic_information']='Item Information';
-$lang['items_number_information']='Item Number';
-$lang['items_new']='New Item';
-$lang['items_update']='Update Item';
-$lang['items_item']='Item';
-$lang['items_edit_multiple_items']='Editing Multiple Items';
-$lang['items_name']='Item Name';
-$lang['items_category']='Category';
-$lang['items_cost_price']='Cost Price';//GARRISON ADDED 4/21/2013
-$lang['items_unit_price']='Retail Price';//GARRISON ADDED 4/21/2013
-$lang['items_tax_1']='Tax 1';
-$lang['items_tax_2']='Tax 2';
-$lang['items_sales_tax_1'] = 'Sales Tax';
-$lang['items_sales_tax_2'] = 'Sales Tax 2';
-$lang['items_tax_percent']='Tax Percent';
-$lang['items_tax_percents']='Tax Percent(s)';
-$lang['items_reorder_level']='Reorder Level';
-$lang['items_quantity']='Quantity';
-$lang['items_reorder_level']='Reorder Level';
-$lang['items_no_items_to_display']='No Items to display';
-$lang['items_bulk_edit']='Bulk Edit';
-$lang['items_confirm_delete']='Are you sure you want to delete the selected items?';
-$lang['items_none_selected']='You have not selected any items to edit';
-$lang['items_confirm_bulk_edit']='Are you sure you want to edit all the items selected?';
-$lang['items_successful_bulk_edit']='You have successfully updated the selected items';
-$lang['items_error_updating_multiple']='Error updating items';
-$lang['items_edit_fields_you_want_to_update']='Edit the fields you want to edit for ALL selected items';
-$lang['items_error_adding_updating'] = 'Error adding/updating item';
-$lang['items_successful_adding']='You have successfully added item';
-$lang['items_successful_updating']='You have successfully updated item';
-$lang['items_successful_deleted']='You have successfully deleted';
-$lang['items_one_or_multiple']='item(s)';
-$lang['items_cannot_be_deleted']='Could not deleted selected items, one or more of the selected items has sales.';
-$lang['items_name_required']='Item Name is a required field';
-$lang['items_category_required']='Category is a required field';
-$lang['items_buy_price_required']='Purchase price is a required field';		//GARRISON UPDATED 6/3/2013
-$lang['items_unit_price_required']='Retail Price is a required field';		//GARRISON UPDATED 6/3/2013
-$lang['items_cost_price_required']='Cost Price is a required field';	//GARRISON UPDATED 6/3/2013
-$lang['items_tax_percent_required']='Tax Percent is a required field';
-$lang['items_quantity_required']='Quantity is a required field';
-$lang['items_reorder_level_required']='Reorder level is a required field';
-$lang['items_unit_price_number']='Unit price must be a number';
-$lang['items_cost_price_number']='Cost price must be a number';
-$lang['items_quantity_number']='Quantity must be a number';
-$lang['items_reorder_level_number']='Reorder level must be a number';
-$lang['items_none'] = 'None';
-$lang['items_supplier'] = 'Supplier';
-$lang['items_generate_barcodes'] = 'Generate Barcodes';
-$lang['items_must_select_item_for_barcode'] = 'You must select at least 1 item to generate barcodes';
-$lang['items_excel_import_failed'] = 'Excel import failed';
-$lang['items_allow_alt_description'] = 'Allow Alt Description';
-$lang['items_is_serialized'] = 'Item has Serial Number';
-$lang['items_serialized_items'] = 'Serialized Items';
-$lang['items_no_description_items'] = 'No Description Items';
-$lang['items_search_custom_items'] = 'Search Custom Fields';//GARRISON ADDED
-$lang['items_inventory_comments']='Comments';
-$lang['items_count']='Update Inventory';
-$lang['items_details_count']='Inventory Count Details';
-$lang['items_add_minus']='Inventory to add/subtract';
-$lang['items_current_quantity']='Current Quantity';
-$lang['items_quantity_required']='Quantity is a required field. Please Close ( X ) to cancel';
-$lang['items_do_nothing'] = 'Do Nothing';
-$lang['items_change_all_to_serialized'] = 'Change All To Serialized';
-$lang['items_change_all_to_unserialized'] = 'Change All To Unserialized';
-$lang['items_change_all_to_allow_alt_desc'] = ' Allow Alt Desc For All';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
-$lang['items_use_inventory_menu'] = 'Use Inv. Menu';
-$lang['items_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
-$lang['items_inventory'] = 'Inventory';
-$lang['items_location'] = 'Location';
-$lang['items_is_deleted'] = 'Deleted';// Parq 131215
-$lang['items_stock_type_sale'] = 'Sale stock';
-$lang['items_stock_type_warehouse'] = 'Warehouse stock';
-$lang['items_unit_quantity'] = 'Unit quantity';
-$lang['items_related_number'] = 'Related item number';
 
-$lang['items_stock_location']='Stock location';
-?>
+$lang["items_add_minus"] = "Inventory to add/subtract";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "Allow Alt Description";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "Item Information";
+$lang["items_bulk_edit"] = "Bulk Edit";
+$lang["items_buy_price_required"] = "Purchase price is a required field";
+$lang["items_cannot_be_deleted"] = "Could not deleted selected items, one or more of the selected items has sales.";
+$lang["items_cannot_find_item"] = "Cannot find any information about item";
+$lang["items_category"] = "Category";
+$lang["items_category_required"] = "Category is a required field";
+$lang["items_change_all_to_allow_alt_desc"] = " Allow Alt Desc For All";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Not Allow Alt Desc For All";
+$lang["items_change_all_to_serialized"] = "Change All To Serialized";
+$lang["items_change_all_to_unserialized"] = "Change All To Unserialized";
+$lang["items_confirm_bulk_edit"] = "Are you sure you want to edit all the items selected?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "Are you sure you want to delete the selected items?";
+$lang["items_cost_price"] = "Cost Price";
+$lang["items_cost_price_number"] = "Cost price must be a number";
+$lang["items_cost_price_required"] = "Cost Price is a required field";
+$lang["items_count"] = "Update Inventory";
+$lang["items_current_quantity"] = "Current Quantity";
+$lang["items_description"] = "Description";
+$lang["items_details_count"] = "Inventory Count Details";
+$lang["items_do_nothing"] = "Do Nothing";
+$lang["items_edit_fields_you_want_to_update"] = "Edit the fields you want to edit for ALL selected items";
+$lang["items_edit_multiple_items"] = "Editing Multiple Items";
+$lang["items_error_adding_updating"] = "Error adding/updating item";
+$lang["items_error_updating_multiple"] = "Error updating items";
+$lang["items_excel_import_failed"] = "Excel import failed";
+$lang["items_generate_barcodes"] = "Generate Barcodes";
+$lang["items_image"] = "Avatar";
+$lang["items_info_provided_by"] = "Info provided by";
+$lang["items_inventory"] = "Inventory";
+$lang["items_inventory_comments"] = "Comments";
+$lang["items_is_deleted"] = "Deleted";
+$lang["items_is_serialized"] = "Item has Serial Number";
+$lang["items_item"] = "Item";
+$lang["items_item_number"] = "UPC/EAN/ISBN";
+$lang["items_item_number_duplicate"] = "The item number is already present in the database";
+$lang["items_location"] = "Location";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "Out Of Stock Items";
+$lang["items_manually_editing_of_quantity"] = "Manual Edit of Quantity";
+$lang["items_must_select_item_for_barcode"] = "You must select at least 1 item to generate barcodes";
+$lang["items_name"] = "Item Name";
+$lang["items_name_required"] = "Item Name is a required field";
+$lang["items_new"] = "New Item";
+$lang["items_no_description_items"] = "No Description Items";
+$lang["items_no_items_to_display"] = "No Items to display";
+$lang["items_none"] = "None";
+$lang["items_none_selected"] = "You have not selected any items to edit";
+$lang["items_number_information"] = "Item Number";
+$lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
+$lang["items_one_or_multiple"] = "item(s)";
+$lang["items_quantity"] = "Quantity";
+$lang["items_quantity_number"] = "Quantity must be a number";
+$lang["items_quantity_required"] = "Quantity is a required field";
+$lang["items_receiving_quantity"] = "Receiving quantity";
+$lang["items_reorder_level"] = "Reorder Level";
+$lang["items_reorder_level_number"] = "Reorder level must be a number";
+$lang["items_reorder_level_required"] = "Reorder level is a required field";
+$lang["items_retrive_item_info"] = "Retrive Item Info";
+$lang["items_sales_tax_1"] = "Sales Tax";
+$lang["items_sales_tax_2"] = "Sales Tax 2";
+$lang["items_search_custom_items"] = "Search Custom Fields";
+$lang["items_serialized_items"] = "Serialized Items";
+$lang["items_stock_location"] = "Stock location";
+$lang["items_successful_adding"] = "You have successfully added item";
+$lang["items_successful_bulk_edit"] = "You have successfully updated the selected items";
+$lang["items_successful_deleted"] = "You have successfully deleted";
+$lang["items_successful_updating"] = "You have successfully updated item";
+$lang["items_supplier"] = "Supplier";
+$lang["items_tax_1"] = "Tax 1";
+$lang["items_tax_2"] = "Tax 2";
+$lang["items_tax_percent"] = "Tax Percent";
+$lang["items_tax_percent_required"] = "Tax Percent is a required field";
+$lang["items_tax_percents"] = "Tax Percent(s)";
+$lang["items_unit_price"] = "Retail Price";
+$lang["items_unit_price_number"] = "Unit price must be a number";
+$lang["items_unit_price_required"] = "Retail Price is a required field";
+$lang["items_upc_database"] = "UPC Database";
+$lang["items_update"] = "Update Item";
+$lang["items_use_inventory_menu"] = "Use Inv. Menu";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/login_lang.php opensourcepos/application/language/en/login_lang.php
--- pos-prod/application/language/en/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/login_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login']='Login';
-$lang['login_username']='Username';
-$lang['login_password']='Password';
-$lang['login_go']='Go';
-$lang['login_invalid_username_and_password']='Invalid username/password';
-$lang['login_welcome_message']='Welcome to the Open Source Point of Sale System. To continue, please login using your username and password below.';
-?>
+
+$lang["login_go"] = "Go";
+$lang["login_invalid_username_and_password"] = "Invalid username/password";
+$lang["login_login"] = "Login";
+$lang["login_password"] = "Password";
+$lang["login_username"] = "Username";
+$lang["login_welcome_message"] = "Welcome to the Open Source Point of Sale System. To continue, please login using your username and password below.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/module_lang.php opensourcepos/application/language/en/module_lang.php
--- pos-prod/application/language/en/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/module_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home']='Home';
 
-$lang['module_customers']='Customers';
-$lang['module_customers_desc']='Add, Update, Delete, and Search customers';
-
-$lang['module_suppliers']='Suppliers';
-$lang['module_suppliers_desc']='Add, Update, Delete, and Search suppliers';
-
-$lang['module_employees']='Employees';
-$lang['module_employees_desc']='Add, Update, Delete, and Search employees';
-
-$lang['module_sales']='Sales';
-$lang['module_sales_desc']='Process sales and returns';
-
-$lang['module_reports']='Reports';
-$lang['module_reports_desc']='View and generate reports';
-
-$lang['module_items']='Items';
-$lang['module_items_desc']='Add, Update, Delete, and Search items';
-
-$lang['module_config']='Store Config';
-$lang['module_config_desc']='Change the store\'s configuration';
-
-$lang['module_receivings']='Receivings';
-$lang['module_receivings_desc']='Process Purchase orders';
-
-$lang['module_giftcards']='Gift Cards';
-$lang['module_giftcards_desc']='Add, Update, Delete and Search gift cards';
-
-$lang['module_item_kits']='Item Kits';
-$lang['module_item_kits_desc']='Add, Update, Delete and Search Item Kits';
-
-?>
+$lang["module_config"] = "Store Config";
+$lang["module_config_desc"] = "Change the store's configuration";
+$lang["module_customers"] = "Customers";
+$lang["module_customers_desc"] = "Add, Update, Delete, and Search customers";
+$lang["module_employees"] = "Employees";
+$lang["module_employees_desc"] = "Add, Update, Delete, and Search employees";
+$lang["module_giftcards"] = "Gift Cards";
+$lang["module_giftcards_desc"] = "Add, Update, Delete and Search gift cards";
+$lang["module_home"] = "Home";
+$lang["module_item_kits"] = "Item Kits";
+$lang["module_item_kits_desc"] = "Add, Update, Delete and Search Item Kits";
+$lang["module_items"] = "Items";
+$lang["module_items_desc"] = "Add, Update, Delete, and Search items";
+$lang["module_receivings"] = "Receivings";
+$lang["module_receivings_desc"] = "Process Purchase orders";
+$lang["module_reports"] = "Reports";
+$lang["module_reports_desc"] = "View and generate reports";
+$lang["module_sales"] = "Sales";
+$lang["module_sales_desc"] = "Process sales and returns";
+$lang["module_suppliers"] = "Suppliers";
+$lang["module_suppliers_desc"] = "Add, Update, Delete, and Search suppliers";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/receivings_lang.php opensourcepos/application/language/en/receivings_lang.php
--- pos-prod/application/language/en/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/receivings_lang.php	2016-05-23 15:32:31.902839440 -0700
@@ -1,40 +1,51 @@
 <?php
-$lang['recvs_register']='Items Receiving';
-$lang['recvs_mode']='Receiving Mode';
-$lang['recvs_receiving']='Receive';
-$lang['recvs_return']='Return';
-$lang['recvs_total']='Total';
-$lang['recvs_cost']='Cost';
-$lang['recvs_quantity']='Qty.';
-$lang['recvs_discount']='Disc %';
-$lang['recvs_edit']='Edit';
-$lang['recvs_new_supplier'] = 'New Supplier';
-$lang['recvs_supplier'] = 'Supplier';
-$lang['recvs_select_supplier']='Select Supplier (Optional)';
-$lang['recvs_start_typing_supplier_name']='Start Typing supplier\'s name...';
-$lang['recvs_unable_to_add_item']='Unable to add item to receiving';
-$lang['recvs_error_editing_item']='Error editing item';
-$lang['recvs_receipt']='Receivings Receipt';
-$lang['recvs_complete_receiving']='Finish';
-$lang['recvs_confirm_finish_receiving'] = 'Are you sure you want to submit this receiving? This cannot be undone.';
-$lang['recvs_confirm_cancel_receiving'] = 'Are you sure you want to clear this receiving? All items will cleared.';
-$lang['recvs_find_or_scan_item']='Find/Scan Item';
-$lang['recvs_find_or_scan_item_or_receipt']='Find/Scan Item OR Receipt';
-$lang['recvs_id']='Receiving ID';
-$lang['recvs_item_name'] = 'Item Name';
-$lang['receivings_transaction_failed'] = 'Receivings Transactions Failed';
-$lang['recvs_requisition']='Requisition';
-$lang['reqs_quantity'] ='Qty.';
-$lang['reqs_related_item']='Related item';
-$lang['reqs_unit_quantity']='Unit qty.';
-$lang['reqs_unit_quantity_total']='Total qty.';
-$lang['reqs_related_item_quantity']='Related item qty.';
-$lang['reqs_receipt']='Requisition Receipt';
-$lang['reqs_transaction_failed'] = 'Requisition Transactions Failed';
-$lang['reqs_unable_to_add_item']='Unable to add item to requisition';
 
-$lang['recvs_stock_source']='Stock source';
-$lang['recvs_stock_destination']='Stock destination';
-$lang['recvs_stock_locaiton']='Stock location';
-$lang['recvs_error_requisition']='Unable to move inventory from and to the same stock location';
-?>
+$lang["receivings_transaction_failed"] = "Receivings Transactions Failed";
+$lang["recvs_basic_information"] = "Receiving information";
+$lang["recvs_cancel_receiving"] = "Cancel";
+$lang["recvs_cannot_be_deleted"] = "Receiving(s) could not be deleted";
+$lang["recvs_comments"] = "Comments";
+$lang["recvs_complete_receiving"] = "Finish";
+$lang["recvs_confirm_cancel_receiving"] = "Are you sure you want to clear this receiving? All items will cleared.";
+$lang["recvs_confirm_finish_receiving"] = "Are you sure you want to submit this receiving? This cannot be undone.";
+$lang["recvs_cost"] = "Cost";
+$lang["recvs_date"] = "Receiving Date";
+$lang["recvs_date_required"] = "A correct date needs to be filled in";
+$lang["recvs_date_type"] = "Date field is required";
+$lang["recvs_delete_confirmation"] = "Are you sure you want to delete this receiving, this action cannot be undone";
+$lang["recvs_delete_entire_sale"] = "Delete entire sale";
+$lang["recvs_discount"] = "Disc %";
+$lang["recvs_edit"] = "Edit";
+$lang["recvs_edit_sale"] = "Edit Receiving";
+$lang["recvs_employee"] = "Employee";
+$lang["recvs_error_editing_item"] = "Error editing item";
+$lang["recvs_error_requisition"] = "Unable to move inventory from and to the same stock location";
+$lang["recvs_find_or_scan_item"] = "Find/Scan Item";
+$lang["recvs_find_or_scan_item_or_receipt"] = "Find/Scan Item OR Receipt";
+$lang["recvs_id"] = "Receiving ID";
+$lang["recvs_invoice_enable"] = "Create Invoice";
+$lang["recvs_invoice_number"] = "Invoice #";
+$lang["recvs_invoice_number_duplicate"] = "Please enter an unique invoice number";
+$lang["recvs_item_name"] = "Item Name";
+$lang["recvs_mode"] = "Receiving Mode";
+$lang["recvs_new_supplier"] = "New Supplier";
+$lang["recvs_one_or_multiple"] = "receiving(s)";
+$lang["recvs_print_after_sale"] = "Print after sale";
+$lang["recvs_quantity"] = "Qty.";
+$lang["recvs_receipt"] = "Receivings Receipt";
+$lang["recvs_receipt_number"] = "Receiving #";
+$lang["recvs_receiving"] = "Receive";
+$lang["recvs_register"] = "Items Receiving";
+$lang["recvs_requisition"] = "Requisition";
+$lang["recvs_return"] = "Return";
+$lang["recvs_select_supplier"] = "Select Supplier (Optional)";
+$lang["recvs_start_typing_supplier_name"] = "Start Typing supplier's name...";
+$lang["recvs_stock_destination"] = "Stock destination";
+$lang["recvs_stock_locaiton"] = "Stock location";
+$lang["recvs_stock_source"] = "Stock source";
+$lang["recvs_successfully_deleted"] = "You have successfully deleted";
+$lang["recvs_successfully_updated"] = "Receiving successfully updated";
+$lang["recvs_supplier"] = "Supplier";
+$lang["recvs_total"] = "Total";
+$lang["recvs_unable_to_add_item"] = "Unable to add item to receiving";
+$lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/reports_lang.php opensourcepos/application/language/en/reports_lang.php
--- pos-prod/application/language/en/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/reports_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,95 +1,108 @@
 <?php
-$lang['reports_reports'] = 'Reports';
-$lang['reports_report'] = 'Report';
-$lang['reports_welcome_message'] = 'Welcome to the reports panel. Please select a report to view.';
-$lang['reports_sales_summary_report'] = 'Sales Summary Report';
-$lang['reports_categories_summary_report'] = 'Categories Summary Report';
-$lang['reports_customers_summary_report'] = 'Customers Summary Report';
-$lang['reports_suppliers_summary_report'] = 'Suppliers Summary Report';
-$lang['reports_items_summary_report'] = 'Items Summary Report';
-$lang['reports_employees_summary_report'] = 'Employees Summary Report';
-$lang['reports_taxes_summary_report'] = 'Taxes Summary Report';
-$lang['reports_date'] = 'Date';
-$lang['reports_name'] = 'Name';
-$lang['reports_quantity_purchased'] = 'Quantity Purchased';
-$lang['reports_sale_id'] = 'Sale ID';
-$lang['reports_items_purchased'] = 'Items Purchased';
-$lang['reports_sold_by'] = 'Sold By';
-$lang['reports_sold_to'] = 'Sold To';
-$lang['reports_category'] = 'Category';
-$lang['reports_customer'] = 'Customer';
-$lang['reports_employee'] = 'Employee';
-$lang['reports_item'] = 'Item';
-$lang['reports_items'] = 'Items';
-$lang['reports_supplier'] = 'Supplier';
-$lang['reports_employees'] = 'Employees';
-$lang['reports_subtotal'] = 'Subtotal';
-$lang['reports_total'] = 'Total';
-$lang['reports_tax'] = 'Tax';
-$lang['reports_profit'] = 'Profit';
-$lang['reports_report_input'] = 'Report Input';
-$lang['reports_discount'] = 'Discount';
-$lang['reports_type'] = 'Type';
-$lang['reports_discount'] = 'A discount greater than ';
-$lang['reports_date_range'] = 'Date Range';
-$lang['reports_today'] = 'Today';
-$lang['reports_yesterday'] = 'Yesterday';
-$lang['reports_last_7'] = 'Last 7 Days';
-$lang['reports_this_month'] = 'This Month';
-$lang['reports_last_month'] = 'Last Month';
-$lang['reports_this_year'] = 'This Year';
-$lang['reports_last_year'] = 'Last Year';
-$lang['reports_all_time'] = 'All Time';
-$lang['reports_detailed_sales_report'] = 'Detailed Sales Report';
-$lang['reports_comments'] = 'Comments';
-$lang['reports_discount'] = 'Discount';
-$lang['reports_sales']= 'Sale';
-$lang['reports_payment_type'] = 'Payment Type';
-$lang['reports_categories'] = 'Categories';
-$lang['reports_customers'] = 'Customers';
-$lang['reports_suppliers'] = 'Suppliers';
-$lang['reports_items'] = 'Items';
-$lang['reports_employees'] = 'Employees';
-$lang['reports_taxes'] = 'Taxes';
-$lang['reports_customer'] = 'Customer';
-$lang['reports_employee'] = 'Employee';
-$lang['reports_tax_percent'] = 'Tax Percent';
-$lang['reports_quantity_purchased'] = 'Quantity Purchased';
-$lang['reports_serial_number'] = 'Serial #';
-$lang['reports_description'] = 'Description';
-$lang['reports_date'] = 'Date';
-$lang['reports_sales_amount'] = 'Sales amount';
-$lang['reports_revenue'] = 'Revenue';
-$lang['reports_discounts'] = 'Discounts';
-$lang['reports_discounts_summary_report'] = 'Discounts Summary Report';
-$lang['reports_discount_percent'] = 'Discount Percent';
-$lang['reports_count'] = 'Count';
-$lang['reports_summary_reports'] = 'Summary Reports';
-$lang['reports_graphical_reports'] = 'Graphical Reports';
-$lang['reports_detailed_reports'] = 'Detailed Reports';
-$lang['reports_inventory_reports'] = 'Inventory Reports';
-$lang['reports_low_inventory'] = 'Low Inventory';
-$lang['reports_inventory_summary'] = ' Inventory Summary';
-$lang['reports_item_number'] = 'Item Number';
-$lang['reports_reorder_level'] = 'Reorder Level';
-$lang['reports_low_inventory_report'] = 'Low Inventory Report';
-$lang['reports_item_name'] = 'Item Name';
-$lang['reports_inventory_summary_report'] = 'Inventory Summary Report';
-$lang['reports_payment_type'] = 'Payment Type';
-$lang['reports_payments_summary_report'] = 'Payments Summary Report';
-$lang['reports_payments'] = 'Payments';
-$lang['reports_receivings'] = 'Receivings';
-$lang['reports_received_by'] = 'Received By';
-$lang['reports_supplied_by'] = 'Supplied by';
-$lang['reports_items_received'] = 'Items Received';
-$lang['reports_detailed_receivings_report'] = 'Detailed Receivings Report';
-$lang['reports_sale_type'] = 'Sale Type';
-$lang['reports_receiving_type'] = 'Receiving Type';
-$lang['reports_all'] = 'All';
-$lang['reports_returns'] = 'Returns';
-$lang['reports_discount'] = 'Discounts';
-$lang['reports_sales'] = 'Sales';
-$lang['reports_requisitions'] = 'Requisitions';
-$lang['reports_receiving_id'] = 'Receiving ID';
-$lang['reports_stock_location'] = 'Stock location';
-?>
+
+$lang["reports_all"] = "All";
+$lang["reports_all_time"] = "All Time";
+$lang["reports_categories"] = "Categories";
+$lang["reports_categories_summary_report"] = "Categories Summary Report";
+$lang["reports_category"] = "Category";
+$lang["reports_comments"] = "Comments";
+$lang["reports_count"] = "Count";
+$lang["reports_customer"] = "Customer";
+$lang["reports_customers"] = "Customers";
+$lang["reports_customers_summary_report"] = "Customers Summary Report";
+$lang["reports_date"] = "Date";
+$lang["reports_date_range"] = "Date Range";
+$lang["reports_description"] = "Description";
+$lang["reports_detailed_receivings_report"] = "Detailed Receivings Report";
+$lang["reports_detailed_reports"] = "Detailed Reports";
+$lang["reports_detailed_requisition_report"] = "";
+$lang["reports_detailed_sales_report"] = "Detailed Sales Report";
+$lang["reports_discount"] = "Discount";
+$lang["reports_discount_percent"] = "Discount Percent";
+$lang["reports_discounts"] = "Discounts";
+$lang["reports_discounts_summary_report"] = "Discounts Summary Report";
+$lang["reports_employee"] = "Employee";
+$lang["reports_employees"] = "Employees";
+$lang["reports_employees_summary_report"] = "Employees Summary Report";
+$lang["reports_graphical_reports"] = "Graphical Reports";
+$lang["reports_inventory"] = "Inventory";
+$lang["reports_inventory_low"] = "Low Inventory";
+$lang["reports_inventory_low_report"] = "Low Inventory Report";
+$lang["reports_inventory_reports"] = "Inventory Reports";
+$lang["reports_inventory_summary"] = " Inventory Summary";
+$lang["reports_inventory_summary_report"] = "Inventory Summary Report";
+$lang["reports_item"] = "Item";
+$lang["reports_item_name"] = "Item Name";
+$lang["reports_item_number"] = "Item Number";
+$lang["reports_items"] = "Items";
+$lang["reports_items_purchased"] = "Items Purchased";
+$lang["reports_items_received"] = "Items Received";
+$lang["reports_items_summary_report"] = "Items Summary Report";
+$lang["reports_last_7"] = "Last 7 Days";
+$lang["reports_last_month"] = "Last Month";
+$lang["reports_last_year"] = "Last Year";
+$lang["reports_low_inventory"] = "";
+$lang["reports_low_inventory_report"] = "";
+$lang["reports_name"] = "Name";
+$lang["reports_payment_type"] = "Payment Type";
+$lang["reports_payments"] = "Payments";
+$lang["reports_payments_summary_report"] = "Payments Summary Report";
+$lang["reports_profit"] = "Profit";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "Quantity Purchased";
+$lang["reports_received_by"] = "Received By";
+$lang["reports_receiving_id"] = "Receiving ID";
+$lang["reports_receiving_type"] = "Receiving Type";
+$lang["reports_receivings"] = "Receivings";
+$lang["reports_reorder_level"] = "Reorder Level";
+$lang["reports_report"] = "Report";
+$lang["reports_report_input"] = "Report Input";
+$lang["reports_reports"] = "Reports";
+$lang["reports_requisition"] = "";
+$lang["reports_requisition_by"] = "";
+$lang["reports_requisition_id"] = "";
+$lang["reports_requisition_item"] = "";
+$lang["reports_requisition_item_quantity"] = "";
+$lang["reports_requisition_related_item"] = "";
+$lang["reports_requisition_related_item_total_quantity"] = "";
+$lang["reports_requisition_related_item_unit_quantity"] = "";
+$lang["reports_requisitions"] = "Requisitions";
+$lang["reports_returns"] = "Returns";
+$lang["reports_revenue"] = "Revenue";
+$lang["reports_sale_id"] = "Sale ID";
+$lang["reports_sale_type"] = "Sale Type";
+$lang["reports_sales"] = "Sale";
+$lang["reports_sales_amount"] = "Sales amount";
+$lang["reports_sales_summary_report"] = "Sales Summary Report";
+$lang["reports_serial_number"] = "Serial #";
+$lang["reports_sold_by"] = "Sold By";
+$lang["reports_sold_to"] = "Sold To";
+$lang["reports_stock_location"] = "Stock Location";
+$lang["reports_subtotal"] = "Subtotal";
+$lang["reports_summary_reports"] = "Summary Reports";
+$lang["reports_supplied_by"] = "Supplied by";
+$lang["reports_supplier"] = "Supplier";
+$lang["reports_suppliers"] = "Suppliers";
+$lang["reports_suppliers_summary_report"] = "Suppliers Summary Report";
+$lang["reports_tax"] = "Tax";
+$lang["reports_tax_percent"] = "Tax Percent";
+$lang["reports_taxes"] = "Taxes";
+$lang["reports_taxes_summary_report"] = "Taxes Summary Report";
+$lang["reports_this_month"] = "This Month";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "This Year";
+$lang["reports_today"] = "Today";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "Total";
+$lang["reports_type"] = "Type";
+$lang["reports_welcome_message"] = "Welcome to the reports panel. Please select a report to view.";
+$lang["reports_yesterday"] = "Yesterday";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "Cost Price";
+$lang["reports_unit_price"] = "Retail Price";
+$lang["reports_sub_total_value"] = "Sub Total";
+$lang["reports_total_inventory_value"] = "Total Inventory Value";
+$lang["reports_zero_and_less"] = "Zero and less";
+$lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/sales_lang.php opensourcepos/application/language/en/sales_lang.php
--- pos-prod/application/language/en/sales_lang.php	2016-05-05 18:59:56.000000000 -0700
+++ opensourcepos/application/language/en/sales_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,94 +1,117 @@
 <?php
-$lang['sales_giftcard_number']='Gift Card Number';
-$lang['sales_giftcard']='Gift Card';
-$lang['sales_register']='Sales Register';
-$lang['sales_mode']='Register Mode';
-$lang['sales_new_item'] = 'New Item';
-$lang['sales_item_name'] = 'Item Name';
-$lang['sales_item_number'] = 'Item #';
-$lang['sales_new_customer'] = 'New Customer';
-$lang['sales_customer'] = 'Customer';
-$lang['sales_no_items_in_cart']='There are no items in the cart';
-$lang['sales_total']='Total';
-$lang['sales_tax_percent']='Tax %';
-$lang['sales_price']='Price';
-$lang['sales_quantity']='Qty.';
-$lang['sales_discount']='Disc %';
-$lang['sales_edit']='Edit';
-$lang['sales_payment']='Payment Type';
-$lang['sales_edit_item']='Edit Item';
-$lang['sales_find_or_scan_item']='Find/Scan Item';
-$lang['sales_find_or_scan_item_or_receipt']='Find/Scan Item OR Receipt';
-$lang['sales_select_customer']='Select Customer (Optional)';
-$lang['sales_start_typing_item_name']='Start Typing item\'s name or scan barcode...';
-$lang['sales_start_typing_customer_name']='Start Typing customer\'s name...';
-$lang['sales_sub_total']='Sub Total';
-$lang['sales_tax']='Tax';
-$lang['sales_comment']='Comment';
-$lang['sales_unable_to_add_item']='Unable to add item to sale';
-$lang['sales_sale_for_customer']='Customer:';
-$lang['sales_remove_customer']='Remove Customer';
-$lang['sales_error_editing_item']='Error editing item';
-$lang['sales_complete_sale']='Complete Sale';
-$lang['sales_cancel_sale']='Cancel Sale';
-$lang['sales_add_payment']='Add Payment';
-$lang['sales_receipt']='Sales Receipt';
-$lang['sales_id']='Sale ID';
-$lang['sales_return']='Return';
-$lang['sales_confirm_finish_sale'] = 'Are you sure you want to submit this sale? This cannot be undone.';
-$lang['sales_confirm_cancel_sale'] = 'Are you sure you want to clear this sale? All items will cleared.';
-$lang['sales_cash'] = 'Cash';
-$lang['sales_check'] = 'Check';
-$lang['sales_debit'] = 'Debit Card';
-$lang['sales_credit'] = 'Credit Card';
-$lang['sales_giftcard'] = 'Gift Card';
-$lang['sales_oos_pmt'] = 'OOS PMT';
-$lang['sales_house_acct'] = 'House Account';
-$lang['sales_layaway_bal'] = 'Layaway Bal';
-$lang['sales_deposit'] = 'Deposit';
-$lang['sales_amount_tendered'] = 'Amount Tendered';
-$lang['sales_change_due'] = 'Change Due';
-$lang['sales_payment_not_cover_total'] = 'Payment Amount does not cover Total';
-$lang['sales_transaction_failed'] = 'Sales Transaction Failed';
-$lang['sales_must_enter_numeric'] = 'Must enter numeric value for amount tendered';
-$lang['sales_must_enter_numeric_giftcard'] = 'Must enter numeric value for giftcard number';
-$lang['sales_serial'] = 'Serial';
-$lang['sales_description_abbrv'] = 'Desc';
-$lang['sales_item_out_of_stock'] = 'Item is Out of Stock';
-$lang['sales_item_insufficient_of_stock'] = 'Item is Insufficient of Stock';
-$lang['sales_quantity_less_than_zero'] = 'Warning, Desired Quantity is Insufficient. You can still process the sale, but check your inventory';
-$lang['sales_successfully_updated'] = 'Sale successfully updated';
-$lang['sales_unsuccessfully_updated'] = 'Sale unsuccessfully updated';
-$lang['sales_edit_sale'] = 'Edit Sale';
-$lang['sales_employee'] = 'Employee';
-$lang['sales_successfully_deleted'] = 'Sale successfully deleted';
-$lang['sales_unsuccessfully_deleted'] = 'Sale unsuccessfully deleted';
-$lang['sales_delete_entire_sale'] = 'Delete entire sale';
-$lang['sales_delete_confirmation'] = 'Are you sure you want to delete this sale, this action cannot be undone';
-$lang['sales_date'] = 'Sale Date';
-$lang['sales_delete_successful'] = 'You have successfully deleted a sale';
-$lang['sales_delete_unsuccessful'] = 'You have unsuccessfully deleted a sale';
-$lang['sales_suspend_sale'] = 'Suspend Sale';
-$lang['sales_confirm_suspend_sale'] = 'Are you sure you want to suspend this sale?';
-$lang['sales_suspended_sales'] = 'Suspended Sales';
-$lang['sales_suspended_sale_id'] = 'Suspended Sale ID';
-$lang['sales_date'] = 'Date';
-$lang['sales_customer'] = 'Customer';
-$lang['sales_comments'] = 'Comments';
-$lang['sales_unsuspend_and_delete'] = 'Unsuspend and Delete';
-$lang['sales_unsuspend'] = 'Unsuspend';
-$lang['sales_successfully_suspended_sale'] = 'Your sale has been successfully suspended';
-$lang['sales_email_receipt'] = 'E-Mail Receipt';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Discount';
-$lang['sales_sale_time']='Time';
-$lang['sales_payments_total'] = 'Payments Total';
-$lang['sales_amount_due'] = 'Amount Due';
-$lang['sales_payment_type'] = "Type";
-$lang['sales_payment_amount'] = "Amount";
-$lang['sales_basic_information']='Sale information';
 
-$lang['sales_stock_location']='Stock location';
-$lang['sales_sale']='Sale';
-$lang['sales_no_description']='';
-?>
+$lang["sales_add_payment"] = "Add Payment";
+$lang["sales_amount_due"] = "Amount Due";
+$lang["sales_amount_tendered"] = "Amount Tendered";
+$lang["sales_basic_information"] = "Sale information";
+$lang["sales_cancel_sale"] = "Cancel Sale";
+$lang["sales_cash"] = "Cash";
+$lang["sales_change_due"] = "Change Due";
+$lang["sales_check"] = "Check";
+$lang["sales_check_balance"] = "Check remainder";
+$lang["sales_comment"] = "Comment";
+$lang["sales_comments"] = "Comments";
+$lang["sales_complete_sale"] = "Complete Sale";
+$lang["sales_confirm_cancel_sale"] = "Are you sure you want to clear this sale? All items will cleared.";
+$lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
+$lang["sales_confirm_finish_sale"] = "Are you sure you want to submit this sale? This cannot be undone.";
+$lang["sales_confirm_suspend_sale"] = "Are you sure you want to suspend this sale?";
+$lang["sales_credit"] = "Credit Card";
+$lang["sales_customer"] = "Customer";
+$lang["sales_date"] = "Sale Date";
+$lang["sales_date_required"] = "A correct date needs to be filled in";
+$lang["sales_date_type"] = "Date field is required";
+$lang["sales_debit"] = "Debit Card";
+$lang["sales_delete_confirmation"] = "Are you sure you want to delete this sale, this action cannot be undone";
+$lang["sales_delete_entire_sale"] = "Delete entire sale";
+$lang["sales_delete_successful"] = "You have successfully deleted a sale";
+$lang["sales_delete_unsuccessful"] = "You have unsuccessfully deleted a sale";
+$lang["sales_description_abbrv"] = "Desc";
+$lang["sales_discount"] = "Disc %";
+$lang["sales_discount_included"] = "% Discount";
+$lang["sales_discount"] = "Discount";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "Edit";
+$lang["sales_edit_item"] = "Edit Item";
+$lang["sales_edit_sale"] = "Edit Sale";
+$lang["sales_email_receipt"] = "E-Mail Receipt";
+$lang["sales_employee"] = "Employee";
+$lang["sales_error_editing_item"] = "Error editing item";
+$lang["sales_find_or_scan_item"] = "Find/Scan Item";
+$lang["sales_find_or_scan_item_or_receipt"] = "Find/Scan Item OR Receipt";
+$lang["sales_giftcard"] = "Gift Card";
+$lang["sales_giftcard_balance"] = "Giftcard Balance";
+$lang["sales_giftcard_number"] = "Gift Card Number";
+$lang["sales_id"] = "Sale ID";
+$lang["sales_invoice"] = "Invoice";
+$lang["sales_invoice_confirm"] = "This invoice will be sent to";
+$lang["sales_invoice_enable"] = "Create Invoice";
+$lang["sales_invoice_filter"] = "Invoices";
+$lang["sales_cash_filter"] = "Cash";
+$lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
+$lang["sales_invoice_number"] = "Invoice #";
+$lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
+$lang["sales_invoice_sent"] = "Invoice sent to";
+$lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
+$lang["sales_invoice_update"] = "Recount";
+$lang["sales_item_insufficient_of_stock"] = "Item is Insufficient of Stock";
+$lang["sales_item_name"] = "Item Name";
+$lang["sales_item_number"] = "Item #";
+$lang["sales_item_out_of_stock"] = "Item is Out of Stock";
+$lang["sales_mode"] = "Register Mode";
+$lang["sales_must_enter_numeric"] = "Must enter numeric value for amount tendered";
+$lang["sales_must_enter_numeric_giftcard"] = "Must enter numeric value for giftcard number";
+$lang["sales_new_customer"] = "New Customer";
+$lang["sales_new_item"] = "New Item";
+$lang["sales_no_description"] = "None";
+$lang["sales_no_filter"] = "All";
+$lang["sales_no_items_in_cart"] = "There are no items in the cart";
+$lang["sales_no_sales_to_display"] = "No sales to display";
+$lang["sales_one_or_multiple"] = "sale(s)";
+$lang["sales_takings"] = "Takings";
+$lang["sales_payment"] = "Payment Type";
+$lang["sales_payment_amount"] = "Amount";
+$lang["sales_payment_not_cover_total"] = "Payment Amount does not cover Total";
+$lang["sales_payment_type"] = "Type";
+$lang["sales_payments_total"] = "Payments Total";
+$lang["sales_price"] = "Price";
+$lang["sales_print_after_sale"] = "Print after sale";
+$lang["sales_quantity"] = "Qty.";
+$lang["sales_quantity_less_than_zero"] = "Warning, Desired Quantity is Insufficient. You can still process the sale, but check your inventory";
+$lang["sales_quantity_less_than_reorder_level"] = "Warning, Desired Quantity is below reorder level";
+$lang["sales_receipt"] = "Sales Receipt";
+$lang["sales_receipt_number"] = "Sale #";
+$lang["sales_register"] = "Sales Register";
+$lang["sales_remove_customer"] = "Remove Customer";
+$lang["sales_return"] = "Return";
+$lang["sales_sale"] = "Sale";
+$lang["sales_sale_for_customer"] = "Customer:";
+$lang["sales_sale_time"] = "Time";
+$lang["sales_select_customer"] = "Select Customer (Optional)";
+$lang["sales_send_invoice"] = "Send Invoice";
+$lang["sales_serial"] = "Serial";
+$lang["sales_show_invoice"] = "invoice";
+$lang["sales_show_receipt"] = "receipt";
+$lang["sales_start_typing_customer_name"] = "Start Typing customer's name...";
+$lang["sales_start_typing_item_name"] = "Start Typing item's name or scan barcode...";
+$lang["sales_stock_location"] = "Stock location";
+$lang["sales_sub_total"] = "Sub Total";
+$lang["sales_successfully_deleted"] = "You have successfully deleted";
+$lang["sales_successfully_suspended_sale"] = "Your sale has been successfully suspended";
+$lang["sales_successfully_updated"] = "Sale successfully updated";
+$lang["sales_suspend_sale"] = "Suspend Sale";
+$lang["sales_suspended_sale_id"] = "ID";
+$lang["sales_suspended_sales"] = "Suspended Sales";
+$lang["sales_tax"] = "Tax";
+$lang["sales_tax_percent"] = "Tax %";
+$lang["sales_total"] = "Total";
+$lang["sales_total_tax_exclusive"] = "Tax excluded";
+$lang["sales_transaction_failed"] = "Sales Transaction Failed";
+$lang["sales_unable_to_add_item"] = "Unable to add item to sale";
+$lang["sales_unsuccessfully_deleted"] = "Sale(s) could not be deleted";
+$lang["sales_unsuccessfully_updated"] = "Sale unsuccessfully updated";
+$lang["sales_unsuspend"] = "Unsuspend";
+$lang["sales_unsuspend_and_delete"] = "";
+$lang["sales_update"] = "Edit Sale";
+$lang["sales_date_range"] = "Date Range";
+$lang["sales_none_selected"] = "You have not selected any sales to delete";
Only in pos-prod/application/language/en: sales_lang.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/en/suppliers_lang.php opensourcepos/application/language/en/suppliers_lang.php
--- pos-prod/application/language/en/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/en/suppliers_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new'] = 'New Supplier';
-$lang['suppliers_supplier'] = 'Supplier';
-$lang['suppliers_update'] = 'Update Supplier';
-$lang['suppliers_confirm_delete'] = 'Are you sure you want to delete the selected suppliers?';
-$lang['suppliers_none_selected'] = 'You have not selected any suppliers to delete';
-$lang['suppliers_error_adding_updating'] = 'Error adding/updating supplier';
-$lang['suppliers_successful_adding'] = 'You have successfully added supplier';
-$lang['suppliers_successful_updating'] = 'You have successfully updated supplier';
-$lang['suppliers_successful_deleted'] = 'You have successfully deleted';
-$lang['suppliers_one_or_multiple'] = 'supplier(s)';
-$lang['suppliers_cannot_be_deleted'] = 'Could not deleted selected suppliers, one or more of the selected suppliers has sales.';
-$lang['suppliers_basic_information'] = 'Supplier Information';
-$lang['suppliers_account_number'] = 'Account #';
-$lang['suppliers_company_name'] = 'Company Name';
-$lang['suppliers_company_name_required'] = 'Company Name is a required field';
-?>
+
+$lang["suppliers_account_number"] = "Account #";
+$lang["suppliers_basic_information"] = "Supplier Information";
+$lang["suppliers_cannot_be_deleted"] = "Could not deleted selected suppliers, one or more of the selected suppliers has sales.";
+$lang["suppliers_company_name"] = "Company Name";
+$lang["suppliers_company_name_required"] = "Company Name is a required field";
+$lang["suppliers_agency_name"] = "Agency Name";
+$lang["suppliers_confirm_delete"] = "Are you sure you want to delete the selected suppliers?";
+$lang["suppliers_error_adding_updating"] = "Error adding/updating supplier";
+$lang["suppliers_new"] = "New Supplier";
+$lang["suppliers_none_selected"] = "You have not selected any suppliers to delete";
+$lang["suppliers_one_or_multiple"] = "supplier(s)";
+$lang["suppliers_successful_adding"] = "You have successfully added supplier";
+$lang["suppliers_successful_deleted"] = "You have successfully deleted";
+$lang["suppliers_successful_updating"] = "You have successfully updated supplier";
+$lang["suppliers_supplier"] = "Supplier";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "Update Supplier";
Only in pos-prod/application/language: english
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/common_lang.php opensourcepos/application/language/es/common_lang.php
--- pos-prod/application/language/es/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/common_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,41 +1,57 @@
 <?php
-$lang['common_common'] = 'común';
-$lang['common_submit'] = 'Enviar';
-$lang['common_or'] = 'Ó';
-$lang['common_powered_by'] = 'Potenciado por';
-$lang['common_welcome'] = 'Bienvenido(a)';
-$lang['common_logout'] = 'Salir';
-$lang['common_list_of'] = 'Lista de';
-$lang['common_first_name'] = 'Nombre';
-$lang['common_last_name'] = 'Apellidos';
-$lang['common_email'] = 'E-Mail';
-$lang['common_phone_number'] = 'Teléfono';
-$lang['common_address_1'] = 'Dirección 1';
-$lang['common_address_2'] = 'Dirección 2';
-$lang['common_city'] = 'Ciudad';
-$lang['common_state'] = 'Estado';
-$lang['common_zip'] = 'C.P.';
-$lang['common_country'] = 'País';
-$lang['common_comments'] = 'Comentarios';
-$lang['common_edit'] = 'editar';
-$lang['common_search'] = 'Buscar';
-$lang['common_delete'] = 'Borrar';
-$lang['common_remove'] = 'Eliminar';
-$lang['common_view_recent_sales'] = 'Ver Ventas Recientes';
-$lang['common_you_are_using_ospos'] = 'Estás usando Open Source Point Of Sale Versión';
-$lang['common_please_visit_my'] = 'Por favor, visita mi';
-$lang['common_website'] = 'sitio';
-$lang['common_fields_required_message'] = 'Los campos en rojo son requeridos';
-$lang['common_learn_about_project'] = 'para leer la información más reciente acerca del proyecto';
-$lang['common_searched_for'] = 'Buscaste';
-$lang['common_first_name_required'] = 'Nombre es un campo requerido';
-$lang['common_last_name_required'] = 'Apellidos es un campo requerido';
-$lang['common_email_invalid_format'] = 'El e-mail no está en el formato requerido';
-$lang['common_confirm_search'] = 'Has seleccionado una o más filas. Éstas no estarán seleccionadas después de tu búsqueda. ¿Seguro(a) que quieres hacer esta búsqueda?';
-$lang['common_no_persons_to_display'] = 'No hay gente que mostrar';
-$lang['common_return_policy'] = 'Política de Devolución';
-$lang['common_price'] = 'Precio';
-$lang['common_welcome_message']= 'Bienvenido(a) a Open Source Point Of Sale. ¡Haz click en algún módulo debajo, para empezar!';
-$lang['common_inv'] = 'inv';
-$lang['common_det'] = 'detalles';
-?>
+
+$lang["common_address_1"] = "Dirección 1";
+$lang["common_address_2"] = "Dirección 2";
+$lang["common_city"] = "Ciudad";
+$lang["common_comments"] = "Comentarios";
+$lang["common_common"] = "común";
+$lang["common_confirm_search"] = "Has seleccionado una o más filas. Éstas no estarán seleccionadas después de tu búsqueda. ¿Seguro(a) que quieres hacer esta búsqueda?";
+$lang["common_country"] = "País";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "Borrar";
+$lang["common_print"] = "Print";
+$lang["common_det"] = "detalles";
+$lang["common_edit"] = "editar";
+$lang["common_email"] = "E-Mail";
+$lang["common_email_invalid_format"] = "El e-mail no está en el formato requerido";
+$lang["common_fields_required_message"] = "Los campos en rojo son requeridos";
+$lang["common_first_name"] = "Nombre";
+$lang["common_first_name_required"] = "Nombre es un campo requerido";
+$lang["common_first_page"] = "Primera";
+$lang["common_gender"] = "Género";
+$lang["common_gender_female"] = "F";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "inv";
+$lang["common_last_name"] = "Apellidos";
+$lang["common_last_name_required"] = "Apellidos es un campo requerido";
+$lang["common_last_page"] = "�ltima";
+$lang["common_learn_about_project"] = "para leer la información más reciente acerca del proyecto";
+$lang["common_list_of"] = "Lista de";
+$lang["common_logout"] = "Salir";
+$lang["common_new"] = "Nuevo";
+$lang["common_no_persons_to_display"] = "No hay gente que mostrar";
+$lang["common_or"] = "Ó";
+$lang["common_phone_number"] = "Teléfono";
+$lang["common_phone_number_required"] = "";
+$lang["common_please_visit_my"] = "Por favor, visita mi";
+$lang["common_powered_by"] = "Potenciado por";
+$lang["common_price"] = "Precio";
+$lang["common_remove"] = "Eliminar";
+$lang["common_return_policy"] = "Política de Devolución";
+$lang["common_search"] = "Buscar";
+$lang["common_search_options"] = "Opciones de búsqueda";
+$lang["common_searched_for"] = "Buscaste";
+$lang["common_state"] = "Estado";
+$lang["common_submit"] = "Enviar";
+$lang["common_view_recent_sales"] = "Ver Ventas Recientes";
+$lang["common_website"] = "sitio";
+$lang["common_welcome"] = "Bienvenido(a)";
+$lang["common_welcome_message"] = "Bienvenido(a) a Open Source Point Of Sale. ¡Haz click en algún módulo debajo, para empezar!";
+$lang["common_you_are_using_ospos"] = "Estás usando Open Source Point Of Sale Versión";
+$lang["common_zip"] = "Código Postal";
+$lang["common_import"] = "Importar";
+$lang["common_download_import_template"] = "Descargar Plantilla de Importación de Excel (CSV)";
+$lang["common_import_file_path"] = "Ruta del archivo";
+$lang["common_import_excel"] = "Importar Excel";
+$lang["common_import_full_path"] = "Requerida la ruta completa del archivo";
+$lang["common_required"] = "Requerido";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/config_lang.php opensourcepos/application/language/es/config_lang.php
--- pos-prod/application/language/es/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/config_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,36 +1,122 @@
 <?php
-$lang['config_info'] = 'Información del Comercio';
-$lang['config_company'] = 'Nombre del Comercio';
-$lang['config_address'] = 'Dirección del Comercio';
-$lang['config_phone'] = 'Teléfono del Comercio';
-$lang['config_website'] = 'Sitio Web';
-$lang['config_fax'] = 'Fax';
-$lang['config_default_tax_rate'] = '% de Impuestos Predeterminada';
-$lang['config_default_tax_rate_1'] = 'Impuesto 1';
-$lang['config_default_tax_rate_2'] = 'Impuesto 2';
-$lang['config_company_required'] = 'Nombre del Comercio es requerido';
-$lang['config_address_required'] = 'Dirección del Comercio es requerida';
-$lang['config_phone_required'] = 'Teléfono del Comercio es requerido';
-$lang['config_default_tax_rate_required'] = 'El Impuesto Predeterminado es requerido';
-$lang['config_default_tax_rate_number'] = 'El Impuesto Predeterminado debe ser un número';
-$lang['config_company_website_url'] = 'Sitio Web no es una URL estándard (http://...)';
-$lang['config_saved_successfully'] = 'Configuración guardada satisfactoriamente';
-$lang['config_saved_unsuccessfully'] = 'Configuración no guardada';
-$lang['config_return_policy_required'] = 'Política de Devolución es requerida';
-$lang['config_print_after_sale'] = 'Imprimir recibo después de una venta';
-$lang['config_language'] = 'Idioma';
-$lang['config_timezone'] = 'Zona Horaria';
-$lang['config_currency_symbol'] = 'Símbolo de divisa';
-$lang['config_currency_side'] = 'Lado derecho'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Campo Libre 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Campo Libre 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Campo Libre 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Campo Libre 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Campo Libre 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Campo Libre 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Campo Libre 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Campo Libre 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Campo Libre 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Campo Libre 10'; //GARRISON ADDED 4/21/2013
-$lang['config_tax_included'] = 'Impuestos incluidos';
-?>
+
+$lang["config_address"] = "Dirección del Comercio";
+$lang["config_address_required"] = "Dirección del Comercio es requerida";
+$lang["config_backup_button"] = "Respaldo";
+$lang["config_backup_database"] = "Respaldo de Base de Datos";
+$lang["config_barcode_company"] = "Nombre del Comercio";
+$lang["config_barcode_configuration"] = "Configuración de Código de Barras";
+$lang["config_barcode_content"] = "Contenido de Código de Barras";
+$lang["config_barcode_first_row"] = "Fila 1";
+$lang["config_barcode_font"] = "Fuente";
+$lang["config_barcode_height"] = "Alto (px)";
+$lang["config_barcode_id"] = "Id/Nombre de Artículo";
+$lang["config_barcode_info"] = "Información de Configuración de Código de Barras";
+$lang["config_barcode_layout"] = "Presentación de Código de Barras";
+$lang["config_barcode_name"] = "Nombre";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Número en la línea";
+$lang["config_barcode_page_cellspacing"] = "Mostrar espacios de celdas de página";
+$lang["config_barcode_page_width"] = "Mostrar ancho de página";
+$lang["config_barcode_price"] = "Precio";
+$lang["config_barcode_quality"] = "Calidad (1-100)";
+$lang["config_barcode_second_row"] = "Fila 1";
+$lang["config_barcode_third_row"] = "Fila 2";
+$lang["config_barcode_type"] = "Tipo de Código de Barra";
+$lang["config_barcode_width"] = "Ancho (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "Nombre del Comercio";
+$lang["config_company_logo"] = "Logotipo del Comercio";
+$lang["config_company_required"] = "Nombre del Comercio es requerido";
+$lang["config_company_website_url"] = "Sitio Web no es una URL estándar (http://...)";
+$lang["config_currency_side"] = "Lado derecho";
+$lang["config_currency_symbol"] = "Símbolo de moneda";
+$lang["config_custom1"] = "Campo Libre 1";
+$lang["config_custom10"] = "Campo Libre 10";
+$lang["config_custom2"] = "Campo Libre 2";
+$lang["config_custom3"] = "Campo Libre 3";
+$lang["config_custom4"] = "Campo Libre 4";
+$lang["config_custom5"] = "Campo Libre 5";
+$lang["config_custom6"] = "Campo Libre 6";
+$lang["config_custom7"] = "Campo Libre 7";
+$lang["config_custom8"] = "Campo Libre 8";
+$lang["config_custom9"] = "Campo Libre 9";
+$lang["config_decimal_point"] = "Punto Decimal";
+$lang["config_default_barcode_font_size_number"] = "Tamaño de fuente del código de barras debe ser un número";
+$lang["config_default_barcode_font_size_required"] = "Tamaño de fuente del código de barras es requerido";
+$lang["config_default_barcode_height_number"] = "Alto del código de barras debe ser un número";
+$lang["config_default_barcode_height_required"] = "Alto del código de barras es requerido";
+$lang["config_default_barcode_num_in_row_number"] = "Número por fila del código de barras debe ser un número";
+$lang["config_default_barcode_num_in_row_required"] = "Número por fila del código de barras es requerido";
+$lang["config_default_barcode_page_cellspacing_number"] = "Espacios de celdas por página del código de barras debe ser un número";
+$lang["config_default_barcode_page_cellspacing_required"] = "Espacios de celdas por página del código de barras es requerido";
+$lang["config_default_barcode_page_width_number"] = "Ancho de página del código de barras debe ser un número";
+$lang["config_default_barcode_page_width_required"] = "Ancho de página del código de barras es requerido";
+$lang["config_default_barcode_quality_number"] = "Calidad del código de barras debe ser un número";
+$lang["config_default_barcode_quality_required"] = "Calidad del código de barras es requerido";
+$lang["config_default_barcode_width_number"] = "Ancho del código de barras debe ser número";
+$lang["config_default_barcode_width_required"] = "Ancho del código de barras es requerido";
+$lang["config_default_sales_discount"] = "% de Descuento en Ventas predeterminado";
+$lang["config_default_sales_discount_number"] = "Descuento en ventas predeterminado debe ser un número";
+$lang["config_default_sales_discount_required"] = "Descuento en ventas predeterminado es requerido";
+$lang["config_default_tax_rate"] = "% de Impuestos Predeterminado";
+$lang["config_default_tax_rate_1"] = "Impuesto 1";
+$lang["config_default_tax_rate_2"] = "Impuesto 2";
+$lang["config_default_tax_rate_number"] = "El Impuesto Predeterminado debe ser un número";
+$lang["config_default_tax_rate_required"] = "El Impuesto Predeterminado es requerido";
+$lang["config_fax"] = "Fax";
+$lang["config_general_configuration"] = "Configuración General ";
+$lang["config_info"] = "Información del Comercio";
+$lang["config_invoice_default_comments"] = "Comentarios predeterminados en la factura";
+$lang["config_invoice_email_message"] = "Plantilla de Factura por Email";
+$lang["config_invoice_printer"] = "Impresora de Factura";
+$lang["config_jsprintsetup_required"] = "Advertencia!Esta funcionalidad desactivada solo funciona con el addon jsPrintSetup de FireFox instalado. Guardar de todas formas?";
+$lang["config_language"] = "Idioma";
+$lang["config_lines_per_page"] = "Líneas por página";
+$lang["config_lines_per_page_number"] = "Líneas por página debe ser un número";
+$lang["config_lines_per_page_required"] = "Líneas por página es requerido";
+$lang["config_location_configuration"] = "Ubicación de Inventario";
+$lang["config_location_info"] = "Información de Configuración de Ubicación";
+$lang["config_logout"] = "Desea hacer un respaldo antes de salir?";
+$lang["config_number_format"] = "Formato de número";
+$lang["config_phone"] = "Teléfono del Comercio";
+$lang["config_phone_required"] = "Teléfono del Comercio es requerido";
+$lang["config_print_bottom_margin"] = "Margen Inferior";
+$lang["config_print_bottom_margin_number"] = "Margen Inferior debe ser un número";
+$lang["config_print_bottom_margin_required"] = "Margen Inferior es requerido";
+$lang["config_print_footer"] = "Imprimir el pie de página del navegador";
+$lang["config_print_header"] = "Imprimir el encabezado del navegador";
+$lang["config_print_left_margin"] = "Margen Izquierdo";
+$lang["config_print_left_margin_number"] = "Margen Izquierdo debe ser un número";
+$lang["config_print_left_margin_required"] = "Margen Izquierdo es requerido";
+$lang["config_print_right_margin"] = "Margen Derecho";
+$lang["config_print_right_margin_number"] = "Margen Derecho debe ser un número";
+$lang["config_print_right_margin_required"] = "Margen Derecho es requerido";
+$lang["config_print_silently"] = "Mostrar cuadro de Dialogo de impresión";
+$lang["config_print_top_margin"] = "Margen Superior";
+$lang["config_print_top_margin_number"] = "Margen Superior debe ser un número";
+$lang["config_print_top_margin_required"] = "Margen Superior es requerido";
+$lang["config_receipt_configuration"] = "Parámetros de Impresión";
+$lang["config_receipt_info"] = "Información de Configuración de Recibo";
+$lang["config_receipt_printer"] = "Impresora de Ticket";
+$lang["config_receipt_show_taxes"] = "Mostrar impuestos";
+$lang["config_receiving_calculate_average_price"] = "Calc precio promedio (Recepción)";
+$lang["config_recv_invoice_format"] = "Formato de Factura de Recepción";
+$lang["config_return_policy_required"] = "Política de Devolución es requerida";
+$lang["config_sales_invoice_format"] = "Formato de Facturas de Venta";
+$lang["config_saved_successfully"] = "Configuración guardada satisfactoriamente";
+$lang["config_saved_unsuccessfully"] = "Configuración no guardada";
+$lang["config_show_total_discount"] = "Mostrar Descuento Total";
+$lang["config_stock_location"] = "Ubicación de Inventario";
+$lang["config_stock_location_duplicate"] = "Por favor use un nombre de inventario único";
+$lang["config_stock_location_invalid_chars"] = "Nombre de la Ubicación de Inventario no debe contener '_'";
+$lang["config_stock_location_required"] = "Número de Ubicación de Inventario es requerido";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "Impuestos incluidos";
+$lang["config_thousands_separator"] = "Separador de miles";
+$lang["config_timezone"] = "Zona Horaria";
+$lang["config_use_invoice_template"] = "Use plantilla de factura";
+$lang["config_website"] = "Sitio Web";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/customers_lang.php opensourcepos/application/language/es/customers_lang.php
--- pos-prod/application/language/es/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/customers_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new'] = 'Nuevo Cliente';
-$lang['customers_customer'] = 'Cliente';
-$lang['customers_update'] = 'Actualizar Cliente';
-$lang['customers_confirm_delete'] = '¿Estás seguro(a) de que quieres borrar a los clientes seleccionados?';
-$lang['customers_none_selected'] = 'No has selccionado clientes para ser borrados';
-$lang['customers_error_adding_updating'] = 'Error agregando/actualizando cliente';
-$lang['customers_successful_adding'] = 'Has agregado satisfactoriamente el cliente';
-$lang['customers_successful_updating'] = 'No se ha podido agregar el cliente';
-$lang['customers_successful_deleted'] = 'Has borrado satisfactoriamente a';
-$lang['customers_one_or_multiple'] = 'cliente(s)';
-$lang['customers_cannot_be_deleted'] = 'No se pudo borrar los clientes seleccionados. Uno o más de éstos tiene ventas.';
-$lang['customers_basic_information'] = 'Información de Clientes';
-$lang['customers_account_number'] = 'Cuenta #';
-$lang['customers_taxable'] = 'Gravable';
-?>
+
+$lang["customers_account_number"] = "Cuenta #";
+$lang["customers_account_number_duplicate"] = "Este número de cuenta ya esta en la base de datos";
+$lang["customers_basic_information"] = "Información de Clientes";
+$lang["customers_cannot_be_deleted"] = "No se pudo borrar los clientes seleccionados. Uno o más de éstos tiene ventas.";
+$lang["customers_company_name"] = "Nombre del Comercio";
+$lang["customers_confirm_delete"] = "¿Seguro(a) de que quieres borrar a los clientes seleccionados?";
+$lang["customers_customer"] = "Cliente";
+$lang["customers_error_adding_updating"] = "Error agregando/actualizando cliente";
+$lang["customers_new"] = "Nuevo Cliente";
+$lang["customers_none_selected"] = "No has seleccionado clientes para ser borrados";
+$lang["customers_one_or_multiple"] = "cliente(s)";
+$lang["customers_successful_adding"] = "Has agregado satisfactoriamente el cliente";
+$lang["customers_successful_deleted"] = "Has borrado satisfactoriamente a";
+$lang["customers_successful_updating"] = "No se ha podido agregar el cliente";
+$lang["customers_taxable"] = "Gravable";
+$lang["customers_update"] = "Actualizar Cliente";
+$lang["customers_import_items_excel"] = "Importar Clientes desde Excel";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/employees_lang.php opensourcepos/application/language/es/employees_lang.php
--- pos-prod/application/language/es/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/employees_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee'] = 'Empleado';
-$lang['employees_new'] = 'Nuevo Empleado';
-$lang['employees_update'] = 'Actualizar Empleado';
-$lang['employees_confirm_delete'] = '¿Estás seguro(a) que quieres borrar los empleados seleccionados?';
-$lang['employees_none_selected'] = 'No has seleccionado empleados para borrar';
-$lang['employees_error_adding_updating'] = 'Error al agregar/actualizar empleado';
-$lang['employees_successful_adding'] = 'Has agregado el empleado satisfactoriamente';
-$lang['employees_successful_updating'] = 'Has actualizado el empleado satisfactoriamente';
-$lang['employees_successful_deleted'] = 'Has borrado satisfactoriamente a';
-$lang['employees_one_or_multiple'] = 'empleado(s)';
-$lang['employees_cannot_be_deleted'] = 'No se pudieron borrar empleados. Uno o más empleados tiene ventas procesadas o estás tratando de borrarte a tí mismo(a).';
-$lang['employees_username'] = 'Usuario';
-$lang['employees_password'] = 'Contraseña';
-$lang['employees_repeat_password'] = 'Repita Contraseña';
-$lang['employees_username_required'] = 'Usuario es requerido';
-$lang['employees_username_minlength'] = 'El Usuario debe tener, por lo menos, 5 caracteres';
-$lang['employees_password_required'] = 'La Contraseña es requerida';
-$lang['employees_password_minlength'] = 'La contraseña debe tener, por lo menos, 8 caracteres';
-$lang['employees_password_must_match'] = 'Las Contraseñas no coinciden';
-$lang['employees_basic_information'] = 'Información Básica de Empleados';
-$lang['employees_login_info'] = 'Información de Ingreso del Empleado';
-$lang['employees_permission_info'] = 'Permisos y Acceso del Empleado';
-$lang['employees_permission_desc'] = 'Activa las cajas debajo para permitir el acceso a los módulos';
-$lang['employees_error_updating_demo_admin'] = 'No puedes cambiar el usuario admin del demo';
-$lang['employees_error_deleting_demo_admin'] = 'No puedes borrar el usuario admin del demo';
-?>
+
+$lang["employees_basic_information"] = "Información Básica de Empleados";
+$lang["employees_cannot_be_deleted"] = "No se pudieron borrar empleados. Uno o más empleados tiene ventas procesadas o estás tratando de borrarte a tí mismo(a).";
+$lang["employees_confirm_delete"] = "¿Seguro(a) que quieres borrar los empleados seleccionados?";
+$lang["employees_employee"] = "Empleado";
+$lang["employees_error_adding_updating"] = "Error al agregar/actualizar empleado";
+$lang["employees_error_deleting_demo_admin"] = "No puedes borrar el usuario admin del demo";
+$lang["employees_error_updating_demo_admin"] = "No puedes cambiar el usuario admin del demo";
+$lang["employees_login_info"] = "Información de Ingreso del Empleado";
+$lang["employees_new"] = "Nuevo Empleado";
+$lang["employees_none_selected"] = "No has seleccionado empleados para borrar";
+$lang["employees_one_or_multiple"] = "empleado(s)";
+$lang["employees_password"] = "Contraseña";
+$lang["employees_password_minlength"] = "La contraseña debe tener, por lo menos, 8 caracteres";
+$lang["employees_password_must_match"] = "Las Contraseñas no coinciden";
+$lang["employees_password_required"] = "La Contraseña es requerida";
+$lang["employees_permission_desc"] = "Activa las cajas debajo para permitir el acceso a los módulos";
+$lang["employees_permission_info"] = "Permisos y Acceso del Empleado";
+$lang["employees_repeat_password"] = "Repita Contraseña";
+$lang["employees_successful_adding"] = "Has agregado el empleado satisfactoriamente";
+$lang["employees_successful_deleted"] = "Has borrado satisfactoriamente a";
+$lang["employees_successful_updating"] = "Has actualizado el empleado satisfactoriamente";
+$lang["employees_update"] = "Actualizar Empleado";
+$lang["employees_username"] = "Usuario";
+$lang["employees_username_minlength"] = "El Usuario debe tener, por lo menos, 5 caracteres";
+$lang["employees_username_required"] = "Usuario es requerido";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/error_lang.php opensourcepos/application/language/es/error_lang.php
--- pos-prod/application/language/es/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/error_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module'] = 'No tienes permiso para accesar el módulo llamado';
-$lang['error_unknown'] = 'desconocido';
-?>
+
+$lang["error_no_permission_module"] = "No tienes permiso para accesar el módulo llamado";
+$lang["error_unknown"] = "desconocido";
Only in pos-prod/application/language/es: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/giftcards_lang.php opensourcepos/application/language/es/giftcards_lang.php
--- pos-prod/application/language/es/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/giftcards_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = 'Número de Tarjeta de Regalo';
-$lang['giftcards_card_value'] = 'Valor';
-$lang['giftcards_basic_information'] = 'Información de Tarjeta de Regalo';
-$lang['giftcards_number_required'] = 'Número de Tarjeta de Regalo es requerido';
-$lang['giftcards_value_required'] = 'Valor de Tarjeta de Regalo es requerido';
-$lang['giftcards_number'] = 'Número de Tarjeta de Regalo debe ser un número';
-$lang['giftcards_value'] = 'Valor de Tarjeta de Regalo debe ser un número';
-$lang['giftcards_person_id'] = 'Customer';
-$lang['giftcards_retrive_giftcard_info'] = 'Obtener Info de Tarjeta de Regalo';
-$lang['giftcards_description'] = 'Descripción';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'Base de Datos UPC';
-$lang['giftcards_cannot_find_giftcard'] = 'No puedo encontrar información acerca de la tarjeta de regalo';
-$lang['giftcards_info_provided_by'] = 'Info provista por';
-$lang['giftcards_number_information'] = 'Número de Tarjeta de Regalo';
-$lang['giftcards_new'] = 'Nueva Tarjeta de Regalo';
-$lang['giftcards_update'] = 'Actualizar Tarjeta de Regalo';
-$lang['giftcards_giftcard'] = 'Tarjeta de Regalo';
-$lang['giftcards_edit_multiple_giftcards'] = 'Editando Múltiples Tarjetas de Regalo';
-$lang['giftcards_category'] = 'Categoría';
-$lang['giftcards_cost_price'] = 'Precio de Costo';
-$lang['giftcards_unit_price'] = 'Precio Unitario';
-$lang['giftcards_tax_1'] = 'Impuesto 1';
-$lang['giftcards_tax_2'] = 'Impuesto 2';
-$lang['giftcards_sales_tax_1'] = 'Impuesto de Venta 1';
-$lang['giftcards_sales_tax_2'] = 'Impuesto de Venta 2';
-$lang['giftcards_tax_percent'] = 'Porcentaje de Impuesto';
-$lang['giftcards_tax_percents'] = 'Porcentaje de Impuesto(s)';
-$lang['giftcards_reorder_level'] = 'Cantidad Mínima';
-$lang['giftcards_quantity'] = 'Cantidad';
-$lang['giftcards_no_giftcards_to_display'] = 'No hay Tarjetas de Regalo';
-$lang['giftcards_bulk_edit'] = 'Edición Múltiple';
-$lang['giftcards_confirm_delete'] = '¿Estás seguro(a) de querer eliminar las tarjetas de regalo seleccionadas?';
-$lang['giftcards_none_selected'] = 'No has seleccionado tarjetas de regalo para editar';
-$lang['giftcards_confirm_bulk_edit'] = '¿Estás seguro(a) de querer editar las tarjetas de regalo seleccionadas?';
-$lang['giftcards_successful_bulk_edit'] = 'Has actualizado satisfactoriamente las tarjetas de regalo seleccionadas';
-$lang['giftcards_error_updating_multiple'] = 'Error actualizando tarjetas de regalo';
-$lang['giftcards_edit_fields_you_want_to_update'] = 'Edita los campos que quieras actualizar en TODAS las tarjetas de regalo seleccionadas';
-$lang['giftcards_error_adding_updating'] = 'Error agregando/actualizando tarjeta de regalo';
-$lang['giftcards_successful_adding'] = 'Has agregado satisfactoriamente una tarjeta de regalo';
-$lang['giftcards_successful_updating'] = 'Has actualizado satisfactoriamente una tarjeta de regalo';
-$lang['giftcards_successful_deleted'] = 'Has borrado satisfactoriamente';
-$lang['giftcards_one_or_multiple'] = 'tarjeta(s) de regalo';
-$lang['giftcards_cannot_be_deleted'] = 'No se puede borrar las tarjetas seleccionadas. Una o más tiene ventas.';
-$lang['giftcards_none'] = 'Ninguno(a)';
-$lang['giftcards_supplier'] = 'Proveedor';
-$lang['giftcards_generate_barcodes'] = 'Generar Códigos de Barras';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'Debes seleccionar por lo menos 1 tarjeta para generar códigos de barras';
-$lang['giftcards_excel_import_failed'] = 'Falló la exportación a Excel';
-$lang['giftcards_allow_alt_description'] = 'Permitir Descripción Alternativa';
-$lang['giftcards_is_serialized'] = 'La Tarjeta de Regalo tiene Número de Serie';
-$lang['giftcards_low_inventory_giftcards'] = 'Tarjetas con Bajo Inventario';
-$lang['giftcards_serialized_giftcards'] = 'Tarjetas Serializadas';
-$lang['giftcards_no_description_giftcards'] = 'Tarjetas de Regalo sin Descripción';
-$lang['giftcards_inventory_comments'] = 'Comentarios';
-$lang['giftcards_count'] = 'Actualizar Inventario';
-$lang['giftcards_details_count'] = 'Detalles del Levantamiento de Inventario';
-$lang['giftcards_add_minus'] = 'Inventario a agregar/substraer';
-$lang['giftcards_current_quantity'] = 'Cantidad Actual';
-$lang['giftcards_quantity_required'] = 'Cantidad es requerido. Por favor, haz click en ( X ) para cancelar';
-$lang['giftcards_do_nothing'] = 'No hacer nada';
-$lang['giftcards_change_all_to_serialized'] = 'Cambiar Todo A Serializado';
-$lang['giftcards_change_all_to_unserialized'] = 'Cambiar Todo A Deserializado';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Permitir Descripción Alternativa En Todos';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'No Permitir Descripción Alternativa Para Todos';
-$lang['giftcards_use_inventory_menu'] = 'Usar Menú de Inventario';
-$lang['giftcards_manually_editing_of_quantity'] = 'Edición Manual de Cantidad';
-?>
+
+$lang["giftcards_add_minus"] = "Inventario a agregar/substraer";
+$lang["giftcards_allow_alt_description"] = "Permitir Descripción Alternativa";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "El valor excedente de la tarjeta de regalo %1 es de %2!";
+$lang["giftcards_basic_information"] = "Información de Tarjeta de Regalo";
+$lang["giftcards_bulk_edit"] = "Edición Múltiple";
+$lang["giftcards_cannot_be_deleted"] = "No se puede borrar las tarjetas seleccionadas. Una o más tiene ventas.";
+$lang["giftcards_cannot_find_giftcard"] = "No puedo encontrar información acerca de la tarjeta de regalo";
+$lang["giftcards_card_value"] = "Valor";
+$lang["giftcards_category"] = "Categoría";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "Permitir Descripción Alternativa En Todos";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "No Permitir Descripción Alternativa Para Todos";
+$lang["giftcards_change_all_to_serialized"] = "Cambiar Todo A Serializado";
+$lang["giftcards_change_all_to_unserialized"] = "Cambiar Todo A Deserializado";
+$lang["giftcards_confirm_bulk_edit"] = "¿Seguro(a) de querer editar las tarjetas de regalo seleccionadas?";
+$lang["giftcards_confirm_delete"] = "¿Seguro(a) de querer eliminar las tarjetas de regalo seleccionadas?";
+$lang["giftcards_cost_price"] = "Precio de Costo";
+$lang["giftcards_count"] = "Actualizar Inventario";
+$lang["giftcards_current_quantity"] = "Cantidad Actual";
+$lang["giftcards_description"] = "Descripción";
+$lang["giftcards_details_count"] = "Detalles del Levantamiento de Inventario";
+$lang["giftcards_do_nothing"] = "No hacer nada";
+$lang["giftcards_edit_fields_you_want_to_update"] = "Edita los campos que quieras actualizar en TODAS las tarjetas de regalo seleccionadas";
+$lang["giftcards_edit_multiple_giftcards"] = "Editando Múltiples Tarjetas de Regalo";
+$lang["giftcards_error_adding_updating"] = "Error agregando/actualizando tarjeta de regalo";
+$lang["giftcards_error_updating_multiple"] = "Error actualizando tarjetas de regalo";
+$lang["giftcards_excel_import_failed"] = "Falló la exportación a Hoja de Cálculo";
+$lang["giftcards_generate_barcodes"] = "Generar Códigos de Barras";
+$lang["giftcards_giftcard"] = "Tarjeta de Regalo";
+$lang["giftcards_giftcard_number"] = "Número de Tarjeta de Regalo";
+$lang["giftcards_info_provided_by"] = "Info provista por";
+$lang["giftcards_inventory_comments"] = "Comentarios";
+$lang["giftcards_is_serialized"] = "La Tarjeta de Regalo tiene Número de Serie";
+$lang["giftcards_low_inventory_giftcards"] = "Tarjetas con Bajo Inventario";
+$lang["giftcards_manually_editing_of_quantity"] = "Edición Manual de Cantidad";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "Debes seleccionar por lo menos 1 tarjeta para generar códigos de barras";
+$lang["giftcards_new"] = "Nueva Tarjeta de Regalo";
+$lang["giftcards_no_description_giftcards"] = "Tarjetas de Regalo sin Descripción";
+$lang["giftcards_no_giftcards_to_display"] = "No hay Tarjetas de Regalo";
+$lang["giftcards_none"] = "Ninguno(a)";
+$lang["giftcards_none_selected"] = "No has seleccionado tarjetas de regalo para editar";
+$lang["giftcards_number"] = "Número de Tarjeta de Regalo debe ser un número";
+$lang["giftcards_number_information"] = "Número de Tarjeta de Regalo";
+$lang["giftcards_number_required"] = "Número de Tarjeta de Regalo es requerido";
+$lang["giftcards_one_or_multiple"] = "tarjeta(s) de regalo";
+$lang["giftcards_person_id"] = "Cliente";
+$lang["giftcards_quantity"] = "Cantidad";
+$lang["giftcards_quantity_required"] = "Cantidad es requerido. Por favor, haz click en ( X ) para cancelar";
+$lang["giftcards_reorder_level"] = "Cantidad Mínima";
+$lang["giftcards_retrive_giftcard_info"] = "Obtener Info de Tarjeta de Regalo";
+$lang["giftcards_sales_tax_1"] = "Impuesto de Venta 1";
+$lang["giftcards_sales_tax_2"] = "Impuesto de Venta 2";
+$lang["giftcards_serialized_giftcards"] = "Tarjetas Serializadas";
+$lang["giftcards_successful_adding"] = "Has agregado satisfactoriamente una tarjeta de regalo";
+$lang["giftcards_successful_bulk_edit"] = "Has actualizado satisfactoriamente las tarjetas de regalo seleccionadas";
+$lang["giftcards_successful_deleted"] = "Has borrado satisfactoriamente";
+$lang["giftcards_successful_updating"] = "Has actualizado satisfactoriamente una tarjeta de regalo";
+$lang["giftcards_supplier"] = "Proveedor";
+$lang["giftcards_tax_1"] = "Impuesto 1";
+$lang["giftcards_tax_2"] = "Impuesto 2";
+$lang["giftcards_tax_percent"] = "Porcentaje de Impuesto";
+$lang["giftcards_tax_percents"] = "Porcentaje de Impuesto(s)";
+$lang["giftcards_unit_price"] = "Precio Unitario";
+$lang["giftcards_upc_database"] = "Base de Datos UPC";
+$lang["giftcards_update"] = "Actualizar Tarjeta de Regalo";
+$lang["giftcards_use_inventory_menu"] = "Usar Menú de Inventario";
+$lang["giftcards_value"] = "Valor de Tarjeta de Regalo debe ser un número";
+$lang["giftcards_value_required"] = "Valor de Tarjeta de Regalo es requerido";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/index.html opensourcepos/application/language/es/index.html
--- pos-prod/application/language/es/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/index.html	2016-05-23 15:32:31.903839425 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Prohibido</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/item_kits_lang.php opensourcepos/application/language/es/item_kits_lang.php
--- pos-prod/application/language/es/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/item_kits_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'Nombre del Kit de Artículos';
-$lang['item_kits_description'] = 'Descripción del Kit de Artículos';
-$lang['item_kits_no_item_kits_to_display'] = 'No hay kits de artículos para mostrar';
-$lang['item_kits_update'] = 'Actualizar Kit de Artículos';
-$lang['item_kits_new'] = 'Nuevo Kit de Artículos';
-$lang['item_kits_none_selected'] = "No has seleccionado Kits de Artículos";
-$lang['item_kits_info'] = 'Info de Kit de Artículos';
-$lang['item_kits_successful_adding'] = 'Has agregado satisfactoriamente un Kit de Artículos';
-$lang['item_kits_successful_updating'] = 'Has actualizado satisfactoriamente un Kit de Artículos';
-$lang['item_kits_error_adding_updating'] = 'Error agregando/actualizando el Kit de Artículos';
-$lang['item_kits_successful_deleted'] = 'Has borrado satisfactoriamente';
-$lang['item_kits_confirm_delete'] = '¿Estás seguro(a) de querer borrar los kits seleccionados?';
-$lang['item_kits_one_or_multiple'] = 'Kit(s) de Artículos';
-$lang['item_kits_cannot_be_deleted'] = 'No pude borrar el/los Kit(s) de Artículos';
-$lang['item_kits_add_item'] = 'Agregar Artículo';
-$lang['item_kits_items'] = 'Artículos';
-$lang['item_kits_item'] = 'Artículo';
-$lang['item_kits_quantity'] = 'Cantidad';
-?>
+
+$lang["item_kits_add_item"] = "Agregar Artículo";
+$lang["item_kits_cannot_be_deleted"] = "No pude borrar el/los Kit(s) de Artículos";
+$lang["item_kits_confirm_delete"] = "¿Estás seguro(a) de querer borrar los kits seleccionados?";
+$lang["item_kits_description"] = "Descripción del Kit de Artículos";
+$lang["item_kits_error_adding_updating"] = "Error agregando/actualizando el Kit de Artículos";
+$lang["item_kits_info"] = "Info de Kit de Artículos";
+$lang["item_kits_item"] = "Artículo";
+$lang["item_kits_items"] = "Artículos";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "Nombre del Kit de Artículos";
+$lang["item_kits_new"] = "Nuevo Kit de Artículos";
+$lang["item_kits_no_item_kits_to_display"] = "No hay kits de artículos para mostrar";
+$lang["item_kits_none_selected"] = "No has seleccionado Kits de Artículos";
+$lang["item_kits_one_or_multiple"] = "Kit(s) de Artículos";
+$lang["item_kits_quantity"] = "Cantidad";
+$lang["item_kits_successful_adding"] = "Has agregado satisfactoriamente un Kit de Artículos";
+$lang["item_kits_successful_deleted"] = "Has borrado satisfactoriamente";
+$lang["item_kits_successful_updating"] = "Has actualizado satisfactoriamente un Kit de Artículos";
+$lang["item_kits_update"] = "Actualizar Kit de Artículos";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/items_lang.php opensourcepos/application/language/es/items_lang.php
--- pos-prod/application/language/es/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/items_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,81 +1,88 @@
 <?php
-$lang['items_item_number'] = 'UPC/EAN/ISBN';
-$lang['items_retrive_item_info'] = 'Obtener Info de Artículo';
-$lang['items_description'] = 'Descripción';
-$lang['items_amazon'] = 'Amazon';
-$lang['items_upc_database'] = 'Base de datos UPC';
-$lang['items_cannot_find_item'] = 'No puedo encontrar información acerca del artículo';
-$lang['items_info_provided_by'] = 'Info provista por';
-$lang['items_basic_information'] = 'Infomación del Artículo';
-$lang['items_number_information'] = 'Número del Artículo';
-$lang['items_new'] = 'Nuevo Artículo';
-$lang['items_update'] = 'Actualizar Artículo';
-$lang['items_item'] = 'Artículo';
-$lang['items_edit_multiple_items'] = 'Editando Artículos Múltiples';
-$lang['items_name'] = 'Nombre del Artículo';
-$lang['items_category'] = 'Categoría';
-$lang['items_cost_price'] = 'Precio de Compra';
-$lang['items_unit_price'] = 'Precio de Venta';
-$lang['items_tax_1'] = 'Impuesto 1';
-$lang['items_tax_2'] = 'Impuesto 2';
-$lang['items_sales_tax_1'] = 'Impuesto de Ventas 1';
-$lang['items_sales_tax_2'] = 'Impuesto de Ventas 2';
-$lang['items_tax_percent'] = 'Porcentaje de Impuesto';
-$lang['items_tax_percents'] = 'Porcentaje de Impuesto(s)';
-$lang['items_reorder_level'] = 'Cantidad Mínima';
-$lang['items_quantity'] = 'Cantidad en Stock';
-$lang['items_reorder_level'] = 'Stock Mínimo';
-$lang['items_no_items_to_display'] = 'No hay artículos que mostrar';
-$lang['items_bulk_edit'] = 'Edición Múltiple';
-$lang['items_confirm_delete'] = '¿Estás seguro(a) de querer borrar los artículos seleccionados?';
-$lang['items_none_selected'] = 'No has seleccionado artículos para editar';
-$lang['items_confirm_bulk_edit'] = '¿Estás seguro(a) de querer editar los artículos seleccionados?';
-$lang['items_successful_bulk_edit'] = 'Has actualizado satisfactoriamente los artículos seleccionados';
-$lang['items_error_updating_multiple'] = 'Error actualizando artículos';
-$lang['items_edit_fields_you_want_to_update'] = 'Edita los campos que quieras actualizar en TODOS los artículos seleccionados';
-$lang['items_error_adding_updating'] = 'Error agregando/actualizando artículo';
-$lang['items_successful_adding'] = 'Has agregado satisfactoriamente un artículo';
-$lang['items_successful_updating'] = 'Has actualizando satisfactoriamente un artículo';
-$lang['items_successful_deleted'] = 'Has borrado satisfactoriamente';
-$lang['items_one_or_multiple'] = 'articulo(s)';
-$lang['items_cannot_be_deleted'] = 'No se pueden borrar los artículos seleccionados. Uno o más tiene(n) ventas.';
-$lang['items_name_required'] = 'Nombre de Artículo es requerido';
-$lang['items_category_required'] = 'Categoría es requerido';
-$lang['items_buy_price_required'] = 'Precio de Compra es requerido';
-$lang['items_unit_price_required'] = 'Precio de Venta es requerido';
-$lang['items_cost_price_required'] = 'Precio de Compra es requerido';
-$lang['items_tax_percent_required'] = 'Porcentaje de Impuesto es requerido';
-$lang['items_quantity_required'] = 'Cantidad es requerido';
-$lang['items_reorder_level_required'] = 'Cantidad Mínima es requerido';
-$lang['items_unit_price_number'] = 'Precio de Venta debe ser número';
-$lang['items_cost_price_number'] = 'Precio de Compra debe ser número';
-$lang['items_quantity_number'] = 'Cantidad debe ser número';
-$lang['items_reorder_level_number'] = 'Cantidad Mínima debe ser número';
-$lang['items_none'] = 'Ninguno';
-$lang['items_supplier'] = 'Proveedor';
-$lang['items_generate_barcodes'] = 'Generar Códigos de Barras';
-$lang['items_must_select_item_for_barcode'] = 'Debes seleccionar al menos 1 artículo para generar códigos de barras';
-$lang['items_excel_import_failed'] = 'Falló la importación de Excel';
-$lang['items_allow_alt_description'] = 'Permitir Descripción Alternativa';
-$lang['items_is_serialized'] = 'El Artículo tiene Número de Serie';
-$lang['items_low_inventory_items'] = 'Artículos de Inventario Escaso';
-$lang['items_serialized_items'] = 'Artículos Serializados';
-$lang['items_no_description_items'] = 'Artículos sin Descripción';
-$lang['items_search_custom_items'] = 'Buscar en campos personalizados';//GARRISON ADDED
-$lang['items_inventory_comments'] = 'Comentarios';
-$lang['items_count'] = 'Actualizar Inventario';
-$lang['items_details_count'] = 'Detalles de Cuenta de Inventario';
-$lang['items_add_minus'] = 'Inventario a agregar/substraer';
-$lang['items_current_quantity'] = 'Cantidad Actual';
-$lang['items_quantity_required'] = 'Cantidad es un valor requerido. Por favor cierre (X) para cancelar';
-$lang['items_do_nothing'] = 'No Hacer Nada';
-$lang['items_change_all_to_serialized'] = 'Cambiar Todo A Serializado';
-$lang['items_change_all_to_unserialized'] = 'Cambiar Todo A Deserializado';
-$lang['items_change_all_to_allow_alt_desc'] = 'Permitir Descripción Alternativa Para Todos';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Denegar Descripción Alternativa Para Todos';
-$lang['items_use_inventory_menu'] = 'Usar Menú de Inventario';
-$lang['items_manually_editing_of_quantity'] = 'Edición Manual de Cantidad';
-$lang['items_inventory'] = 'Inventario';
-$lang['items_location'] = 'Ubicación';
-$lang['items_is_deleted'] = 'Eliminado';// Parq 131215
-?>
+
+$lang["items_add_minus"] = "Inventario a agregar/substraer";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "Permitir Descripción Alternativa";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "Información del Artículo";
+$lang["items_bulk_edit"] = "Edición Múltiple";
+$lang["items_buy_price_required"] = "Precio de Compra es requerido";
+$lang["items_cannot_be_deleted"] = "No se pueden borrar los artículos seleccionados. Uno o más tiene(n) ventas.";
+$lang["items_cannot_find_item"] = "No puedo encontrar información acerca del artículo";
+$lang["items_category"] = "Categoría";
+$lang["items_category_required"] = "Categoría es requerido";
+$lang["items_change_all_to_allow_alt_desc"] = "Permitir Descripción Alternativa Para Todos";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Denegar Descripción Alternativa Para Todos";
+$lang["items_change_all_to_serialized"] = "Cambiar Todo A Serializado";
+$lang["items_change_all_to_unserialized"] = "Cambiar Todo A Deserializado";
+$lang["items_confirm_bulk_edit"] = "¿Estás seguro(a) de querer editar los artículos seleccionados?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "¿Estás seguro(a) de querer borrar los artículos seleccionados?";
+$lang["items_cost_price"] = "Precio de Compra";
+$lang["items_cost_price_number"] = "Precio de Compra debe ser número";
+$lang["items_cost_price_required"] = "Precio de Compra es requerido";
+$lang["items_count"] = "Actualizar Inventario";
+$lang["items_current_quantity"] = "Cantidad Actual";
+$lang["items_description"] = "Descripción";
+$lang["items_details_count"] = "Detalles de Cuenta de Inventario";
+$lang["items_do_nothing"] = "No Hacer Nada";
+$lang["items_edit_fields_you_want_to_update"] = "Edita los campos que quieras actualizar en TODOS los artículos seleccionados";
+$lang["items_edit_multiple_items"] = "Editando Artículos Múltiples";
+$lang["items_error_adding_updating"] = "Error agregando/actualizando artículo";
+$lang["items_error_updating_multiple"] = "Error actualizando artículos";
+$lang["items_excel_import_failed"] = "Falló la importación de Hoja de Cálculo";
+$lang["items_generate_barcodes"] = "Generar Códigos de Barras";
+$lang["items_image"] = "Avatar";
+$lang["items_info_provided_by"] = "Info provista por";
+$lang["items_inventory"] = "Inventario";
+$lang["items_inventory_comments"] = "Comentarios";
+$lang["items_is_deleted"] = "Eliminado";
+$lang["items_is_serialized"] = "El Artículo tiene Número de Serie";
+$lang["items_item"] = "Artículo";
+$lang["items_item_number"] = "UPC/EAN/ISBN";
+$lang["items_item_number_duplicate"] = "El número de artículo ya esta presente en la base de datos";
+$lang["items_location"] = "Ubicación";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "Artículos de Inventario Escaso";
+$lang["items_manually_editing_of_quantity"] = "Edición Manual de Cantidad";
+$lang["items_must_select_item_for_barcode"] = "Debes seleccionar al menos 1 artículo para generar códigos de barras";
+$lang["items_name"] = "Nombre del Artículo";
+$lang["items_name_required"] = "Nombre de Artículo es requerido";
+$lang["items_new"] = "Nuevo Artículo";
+$lang["items_no_description_items"] = "Artículos sin Descripción";
+$lang["items_no_items_to_display"] = "No hay artículos que mostrar";
+$lang["items_none"] = "Ninguno";
+$lang["items_none_selected"] = "No has seleccionado artículos para editar";
+$lang["items_number_information"] = "Número del Artículo";
+$lang["items_number_required"] = "UPC/EAN/ISBN es requerido";
+$lang["items_one_or_multiple"] = "articulo(s)";
+$lang["items_quantity"] = "Cantidad en Stock";
+$lang["items_quantity_number"] = "Cantidad debe ser número";
+$lang["items_quantity_required"] = "Cantidad es requerido";
+$lang["items_receiving_quantity"] = "Cantidad Recibida";
+$lang["items_reorder_level"] = "Cantidad Mínima";
+$lang["items_reorder_level_number"] = "Cantidad Mínima debe ser número";
+$lang["items_reorder_level_required"] = "Cantidad Mínima es requerido";
+$lang["items_retrive_item_info"] = "Obtener Info de Artículo";
+$lang["items_sales_tax_1"] = "Impuesto de Ventas 1";
+$lang["items_sales_tax_2"] = "Impuesto de Ventas 2";
+$lang["items_search_custom_items"] = "Buscar en campos personalizados";
+$lang["items_serialized_items"] = "Artículos Serializados";
+$lang["items_stock_location"] = "Ubicación de Inventario";
+$lang["items_successful_adding"] = "Has agregado satisfactoriamente un artículo";
+$lang["items_successful_bulk_edit"] = "Has actualizado satisfactoriamente los artículos seleccionados";
+$lang["items_successful_deleted"] = "Has borrado satisfactoriamente";
+$lang["items_successful_updating"] = "Has actualizando satisfactoriamente un artículo";
+$lang["items_supplier"] = "Proveedor";
+$lang["items_tax_1"] = "Impuesto 1";
+$lang["items_tax_2"] = "Impuesto 2";
+$lang["items_tax_percent"] = "Porcentaje de Impuesto";
+$lang["items_tax_percent_required"] = "Porcentaje de Impuesto es requerido";
+$lang["items_tax_percents"] = "Porcentaje de Impuesto(s)";
+$lang["items_unit_price"] = "Precio de Venta";
+$lang["items_unit_price_number"] = "Precio de Venta debe ser número";
+$lang["items_unit_price_required"] = "Precio de Venta es requerido";
+$lang["items_upc_database"] = "Base de datos UPC";
+$lang["items_update"] = "Actualizar Artículo";
+$lang["items_use_inventory_menu"] = "Usar Menú de Inventario";
+$lang["items_import_items_excel"] = "Importar Artículos desde Excel";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/login_lang.php opensourcepos/application/language/es/login_lang.php
--- pos-prod/application/language/es/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/login_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login'] = 'Iniciar Sesión';
-$lang['login_username'] = 'Usuario';
-$lang['login_password'] = 'Contraseña';
-$lang['login_go'] = 'Ir';
-$lang['login_invalid_username_and_password'] = 'Usuario/Contraseña inválidos';
-$lang['login_welcome_message'] = 'Bienvenido(a) al Sistema Open Source Point of Sale. Para continuar, inicia sesión usando tu Usuario y Contraseña.';
-?>
+
+$lang["login_go"] = "Ir";
+$lang["login_invalid_username_and_password"] = "Usuario/Contraseña inválidos";
+$lang["login_login"] = "Iniciar Sesión";
+$lang["login_password"] = "Contraseña";
+$lang["login_username"] = "Usuario";
+$lang["login_welcome_message"] = "Bienvenido(a) al Sistema Open Source Point of Sale. Para continuar, inicia sesión usando tu Usuario y Contraseña.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/module_lang.php opensourcepos/application/language/es/module_lang.php
--- pos-prod/application/language/es/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/module_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home'] = 'Inicio';
 
-$lang['module_customers'] = 'Clientes';
-$lang['module_customers_desc'] = 'Agregar, Actualizar, Borrar y Buscar clientes';
-
-$lang['module_suppliers'] = 'Proveedores';
-$lang['module_suppliers_desc'] = 'Agregar, Actualizar, Borrar y Buscar proveedores';
-
-$lang['module_employees'] = 'Empleados';
-$lang['module_employees_desc'] = 'Agregar, Actualizar, Borrar y Buscar empleados';
-
-$lang['module_sales'] = 'Ventas';
-$lang['module_sales_desc'] = 'Procesar ventas y devoluciones';
-
-$lang['module_reports'] = 'Reportes';
-$lang['module_reports_desc'] = 'Ver y generar reportes';
-
-$lang['module_items'] = 'Artículos';
-$lang['module_items_desc'] = 'Agregar, Actualizar, Borrar y Buscar artículos';
-
-$lang['module_config'] = 'Configuración de la Tienda';
-$lang['module_config_desc'] = 'Cambiar la configuración de la tienda';
-
-$lang['module_receivings'] = 'Recepción';
-$lang['module_receivings_desc'] = 'Procesar órdenes de compra';
-
-$lang['module_giftcards'] = 'Tarjetas de Regalo';
-$lang['module_giftcards_desc'] = 'Agregar, Actualizar, Borrar y Buscar Tarjetas de Regalo';
-
-$lang['module_item_kits'] = 'Kits de Artículos';
-$lang['module_item_kits_desc'] = 'Agregar, Actualizar, Borrar y Buscar Kits de Artículos';
-
-?>
+$lang["module_config"] = "Configuración de la Tienda";
+$lang["module_config_desc"] = "Cambiar la configuración de la tienda";
+$lang["module_customers"] = "Clientes";
+$lang["module_customers_desc"] = "Agregar, Actualizar, Borrar y Buscar clientes";
+$lang["module_employees"] = "Empleados";
+$lang["module_employees_desc"] = "Agregar, Actualizar, Borrar y Buscar empleados";
+$lang["module_giftcards"] = "Tarjetas de Regalo";
+$lang["module_giftcards_desc"] = "Agregar, Actualizar, Borrar y Buscar Tarjetas de Regalo";
+$lang["module_home"] = "Inicio";
+$lang["module_item_kits"] = "Kits de Artículos";
+$lang["module_item_kits_desc"] = "Agregar, Actualizar, Borrar y Buscar Kits de Artículos";
+$lang["module_items"] = "Artículos";
+$lang["module_items_desc"] = "Agregar, Actualizar, Borrar y Buscar artículos";
+$lang["module_receivings"] = "Recepción";
+$lang["module_receivings_desc"] = "Procesar órdenes de compra";
+$lang["module_reports"] = "Reportes";
+$lang["module_reports_desc"] = "Ver y generar reportes";
+$lang["module_sales"] = "Ventas";
+$lang["module_sales_desc"] = "Procesar ventas y devoluciones";
+$lang["module_suppliers"] = "Proveedores";
+$lang["module_suppliers_desc"] = "Agregar, Actualizar, Borrar y Buscar proveedores";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/receivings_lang.php opensourcepos/application/language/es/receivings_lang.php
--- pos-prod/application/language/es/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/receivings_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,26 +1,51 @@
 <?php
-$lang['recvs_register'] = 'Entrada de Artículos';
-$lang['recvs_mode'] = 'Modo de Entradas';
-$lang['recvs_receiving'] = 'Recibir';
-$lang['recvs_return'] = 'Devolver';
-$lang['recvs_total'] = 'Total';
-$lang['recvs_cost'] = 'Costo';
-$lang['recvs_quantity'] = 'Cant.';
-$lang['recvs_discount'] = 'Descuento %';
-$lang['recvs_edit'] = 'Editar';
-$lang['recvs_new_supplier'] = 'Nuevo Proveedor';
-$lang['recvs_supplier'] = 'Proveedor';
-$lang['recvs_select_supplier'] = 'Seleccionar Proveedor (Opcional)';
-$lang['recvs_start_typing_supplier_name'] = 'Empieza a escribir el nombre del proveedor...';
-$lang['recvs_unable_to_add_item'] = 'No se puede agregar el artículo a la entrada';
-$lang['recvs_error_editing_item'] = 'Error al editar artículo';
-$lang['recvs_receipt'] = 'Recibo de Entrada';
-$lang['recvs_complete_receiving'] = 'Terminar';
-$lang['recvs_confirm_finish_receiving'] = '¿Estás seguro(a) de querer procesar esta entrada? Ésto no puede ser deshecho.';
-$lang['recvs_confirm_cancel_receiving'] = '¿Estás seguro(a) de querer limpiar esta entrada? Todos los artículos serán limpiados.';
-$lang['recvs_find_or_scan_item'] = 'Encontrar/Escanear Artículo';
-$lang['recvs_find_or_scan_item_or_receipt'] = 'Encontrar/Escanear Artículo o Entrada';
-$lang['recvs_id'] = 'ID de Entrada';
-$lang['recvs_item_name'] = 'Nombre del Artículo';
-$lang['receivings_transaction_failed'] = 'Las Transacciones de Entrada Fallaron';
-?>
+
+$lang["receivings_transaction_failed"] = "Las Transacciones de Entrada Fallaron";
+$lang["recvs_basic_information"] = "Información de Ingreso";
+$lang["recvs_cancel_receiving"] = "Cancelar";
+$lang["recvs_cannot_be_deleted"] = "Ingreso(s) no pueden borrarse";
+$lang["recvs_comments"] = "Comentarios";
+$lang["recvs_complete_receiving"] = "Terminar";
+$lang["recvs_confirm_cancel_receiving"] = "¿Estás seguro(a) de querer limpiar esta entrada? Todos los artículos serán limpiados.";
+$lang["recvs_confirm_finish_receiving"] = "¿Estás seguro(a) de querer procesar esta entrada? Ésto no puede ser deshecho.";
+$lang["recvs_cost"] = "Costo";
+$lang["recvs_date"] = "Fecha de Recepción";
+$lang["recvs_date_required"] = "Una fecha correcta debe ser ingresada";
+$lang["recvs_date_type"] = "Campo Fecha es requerido";
+$lang["recvs_delete_confirmation"] = "¿Seguro(a) que desea borrar este ingreso? Esta acción no se puede deshacer";
+$lang["recvs_delete_entire_sale"] = "Borrar venta completa";
+$lang["recvs_discount"] = "Descuento %";
+$lang["recvs_edit"] = "Editar";
+$lang["recvs_edit_sale"] = "Editar Recepción";
+$lang["recvs_employee"] = "Empleado";
+$lang["recvs_error_editing_item"] = "Error al editar artículo";
+$lang["recvs_error_requisition"] = "No se puede mover el inventorio desde y hacia la misma ubicación de stock";
+$lang["recvs_find_or_scan_item"] = "Encontrar/Escanear Artículo";
+$lang["recvs_find_or_scan_item_or_receipt"] = "Encontrar/Escanear Artículo o Entrada";
+$lang["recvs_id"] = "ID de Entrada";
+$lang["recvs_invoice_enable"] = "Crear Factura";
+$lang["recvs_invoice_number"] = "Factura #";
+$lang["recvs_invoice_number_duplicate"] = "Por favor ingrese un número de factura único";
+$lang["recvs_item_name"] = "Nombre del Artículo";
+$lang["recvs_mode"] = "Modo de Entradas";
+$lang["recvs_new_supplier"] = "Nuevo Proveedor";
+$lang["recvs_one_or_multiple"] = "Ingreso(s)";
+$lang["recvs_print_after_sale"] = "Imprimir recibo después de una venta";
+$lang["recvs_quantity"] = "Cant.";
+$lang["recvs_receipt"] = "Recibo de Entrada";
+$lang["recvs_receipt_number"] = "Recepción #";
+$lang["recvs_receiving"] = "Recibir";
+$lang["recvs_register"] = "Entrada de Artículos";
+$lang["recvs_requisition"] = "Requisición";
+$lang["recvs_return"] = "Devolver";
+$lang["recvs_select_supplier"] = "Seleccionar Proveedor (Opcional)";
+$lang["recvs_start_typing_supplier_name"] = "Empieza a escribir el nombre del proveedor...";
+$lang["recvs_stock_destination"] = "Inventario de Destino";
+$lang["recvs_stock_locaiton"] = "Ubicación de Inventario";
+$lang["recvs_stock_source"] = "Inventario de Origen";
+$lang["recvs_successfully_deleted"] = "Borro exitosamente";
+$lang["recvs_successfully_updated"] = "Recepción exitosamente actualizada";
+$lang["recvs_supplier"] = "Proveedor";
+$lang["recvs_total"] = "Total";
+$lang["recvs_unable_to_add_item"] = "No se puede agregar el artículo a la entrada";
+$lang["recvs_unsuccessfully_updated"] = "Recepción actualizada sin exito";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/reports_lang.php opensourcepos/application/language/es/reports_lang.php
--- pos-prod/application/language/es/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/reports_lang.php	2016-05-23 15:32:31.903839425 -0700
@@ -1,88 +1,108 @@
 <?php
-$lang['reports_reports'] = 'Reportes';
-$lang['reports_report'] = 'Reporte';
-$lang['reports_welcome_message'] = 'Bienvenido(a) al panel de reportes. Selecciona un reporte para verlo.';
-$lang['reports_sales_summary_report'] = 'Reporte de Resumen de Ventas';
-$lang['reports_categories_summary_report'] = 'Reporte de Resumen de Categorías';
-$lang['reports_customers_summary_report'] = 'Reporte de Resumen de Clientes';
-$lang['reports_suppliers_summary_report'] = 'Reporte de Resumen de Proveedores';
-$lang['reports_items_summary_report'] = 'Reporte de Resumen de Artículos';
-$lang['reports_employees_summary_report'] = 'Reporte de Resumen de Empleados';
-$lang['reports_taxes_summary_report'] = 'Reporte de Resumen de Impuestos';
-$lang['reports_date'] = 'Fecha';
-$lang['reports_name'] = 'Nombre';
-$lang['reports_quantity_purchased'] = 'Cantidad Comprada';
-$lang['reports_sale_id'] = 'ID de Venta';
-$lang['reports_items_purchased'] = 'Artículos Comprados';
-$lang['reports_sold_by'] = 'Vendido Por';
-$lang['reports_sold_to'] = 'Vendido A';
-$lang['reports_category'] = 'Categoría';
-$lang['reports_customer'] = 'Cliente';
-$lang['reports_employee'] = 'Empleado';
-$lang['reports_item'] = 'Artículo';
-$lang['reports_items'] = 'Artículos';
-$lang['reports_supplier'] = 'Proveedor';
-$lang['reports_employees'] = 'Empleados';
-$lang['reports_subtotal'] = 'Subtotal';
-$lang['reports_total'] = 'Total';
-$lang['reports_tax'] = 'Impuesto';
-$lang['reports_profit'] = 'Ganancia';
-$lang['reports_report_input'] = 'Entrada de Reporte';
-$lang['reports_type'] = 'Tipo';
-$lang['reports_date_range'] = 'Rango de Fecha';
-$lang['reports_today'] = 'Hoy';
-$lang['reports_yesterday'] = 'Ayer';
-$lang['reports_last_7'] = 'Últimos 7 Días';
-$lang['reports_this_month'] = 'Este Mes';
-$lang['reports_last_month'] = 'Último Mes';
-$lang['reports_this_year'] = 'Este Año';
-$lang['reports_last_year'] = 'Último Año';
-$lang['reports_all_time'] = 'Todos';
-$lang['reports_detailed_sales_report'] = 'Reporte de Ventas Detallado';
-$lang['reports_comments'] = 'Comentarios';
-$lang['reports_discount'] = 'Descuento';
-$lang['reports_payment_type'] = 'Tipo de Pago';
-$lang['reports_sales'] = 'Ventas';
-$lang['reports_categories'] = 'Categorías';
-$lang['reports_customers'] = 'Clientes';
-$lang['reports_suppliers'] = 'Proveedores';
-$lang['reports_items'] = 'Artículos';
-$lang['reports_employees'] = 'Empleados';
-$lang['reports_taxes'] = 'Impuestos';
-$lang['reports_customer'] = 'Cliente';
-$lang['reports_employee'] = 'Empleado';
-$lang['reports_tax_percent'] = 'Porcentaje de Impuestos';
-$lang['reports_quantity_purchased'] = 'Cantidad Comprada';
-$lang['reports_serial_number'] = 'S/N:';
-$lang['reports_description'] = 'Descripción';
-$lang['reports_date'] = 'Fecha';
-$lang['reports_sales_amount'] = 'Monto de ventas';
-$lang['reports_revenue'] = 'Ingresos';
-$lang['reports_discounts'] = 'Descuentos';
-$lang['reports_discounts_summary_report'] = 'Reporte de Resumen de Descuentos';
-$lang['reports_discount_percent'] = 'Porcentaje de Descuento';
-$lang['reports_count'] = 'Cuenta';
-$lang['reports_summary_reports'] = 'Reportes Resumidos';
-$lang['reports_graphical_reports'] = 'Reportes Gráficos';
-$lang['reports_detailed_reports'] = 'Reportes Detallados';
-$lang['reports_inventory_reports'] = 'Reportes de Inventario';
-$lang['reports_low_inventory'] = 'Inventario Bajo';
-$lang['reports_inventory_summary'] = 'Resumen de Inventario';
-$lang['reports_item_number'] = 'Número de Artículo';
-$lang['reports_reorder_level'] = 'Cantidad Mínima';
-$lang['reports_low_inventory_report'] = 'Reporte de Inventario Bajo';
-$lang['reports_item_name'] = 'Nombre del Artículo';
-$lang['reports_inventory_summary_report'] = 'Reporte de Resumen de Inventario';
-$lang['reports_payment_type'] = 'Tipo de Pago';
-$lang['reports_payments_summary_report'] = 'Reporte de Resumen de Pagos';
-$lang['reports_payments'] = 'Pagos';
-$lang['reports_receivings'] = 'Entradas';
-$lang['reports_received_by'] = 'Recibido por';
-$lang['reports_supplied_by'] = 'Provisto por';
-$lang['reports_items_received'] = 'Artículos Recibidos';
-$lang['reports_detailed_receivings_report'] = 'Reporte Detallado de Entradas';
-$lang['reports_sale_type'] = 'Tipo de Venta';
-$lang['reports_all'] = 'Todo';
-$lang['reports_returns'] = 'Devoluciones';
-$lang['reports_discount'] = 'Descuento mayor que ';
-?>
+
+$lang["reports_all"] = "Todo";
+$lang["reports_all_time"] = "Todos";
+$lang["reports_categories"] = "Categorías";
+$lang["reports_categories_summary_report"] = "Reporte de Resumen de Categorías";
+$lang["reports_category"] = "Categoría";
+$lang["reports_comments"] = "Comentarios";
+$lang["reports_count"] = "Cuenta";
+$lang["reports_customer"] = "Cliente";
+$lang["reports_customers"] = "Clientes";
+$lang["reports_customers_summary_report"] = "Reporte de Resumen de Clientes";
+$lang["reports_date"] = "Fecha";
+$lang["reports_date_range"] = "Rango de Fecha";
+$lang["reports_description"] = "Descripción";
+$lang["reports_detailed_receivings_report"] = "Reporte Detallado de Entradas";
+$lang["reports_detailed_reports"] = "Reportes Detallados";
+$lang["reports_detailed_requisition_report"] = "Reporte Detallado de Requisiciones";
+$lang["reports_detailed_sales_report"] = "Reporte de Ventas Detallado";
+$lang["reports_discount"] = "Descuento";
+$lang["reports_discount_percent"] = "Porcentaje de Descuento";
+$lang["reports_discounts"] = "Descuentos";
+$lang["reports_discounts_summary_report"] = "Reporte de Resumen de Descuentos";
+$lang["reports_employee"] = "Empleado";
+$lang["reports_employees"] = "Empleados";
+$lang["reports_employees_summary_report"] = "Reporte de Resumen de Empleados";
+$lang["reports_graphical_reports"] = "Reportes Gráficos";
+$lang["reports_inventory"] = "Inventario";
+$lang["reports_inventory_low"] = "Inventario Bajo";
+$lang["reports_inventory_low_report"] = "Reporte de Inventario Bajo";
+$lang["reports_inventory_reports"] = "Reportes de Inventario";
+$lang["reports_inventory_summary"] = "Resumen de Inventario";
+$lang["reports_inventory_summary_report"] = "Reporte de Resumen de Inventario";
+$lang["reports_item"] = "Artículo";
+$lang["reports_item_name"] = "Nombre del Artículo";
+$lang["reports_item_number"] = "Número de Artículo";
+$lang["reports_items"] = "Artículos";
+$lang["reports_items_purchased"] = "Artículos Comprados";
+$lang["reports_items_received"] = "Artículos Recibidos";
+$lang["reports_items_summary_report"] = "Reporte de Resumen de Artículos";
+$lang["reports_last_7"] = "Últimos 7 Días";
+$lang["reports_last_month"] = "Último Mes";
+$lang["reports_last_year"] = "Último Año";
+$lang["reports_low_inventory"] = "Inventario Bajo";
+$lang["reports_low_inventory_report"] = "Reporte de Inventario Bajo";
+$lang["reports_name"] = "Nombre";
+$lang["reports_payment_type"] = "Tipo de Pago";
+$lang["reports_payments"] = "Pagos";
+$lang["reports_payments_summary_report"] = "Reporte de Resumen de Pagos";
+$lang["reports_profit"] = "Ganancia";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "Cantidad Comprada";
+$lang["reports_received_by"] = "Recibido por";
+$lang["reports_receiving_id"] = "ID de Recepción";
+$lang["reports_receiving_type"] = "Tipo de Recepción";
+$lang["reports_receivings"] = "Entradas";
+$lang["reports_reorder_level"] = "Cantidad Mínima";
+$lang["reports_report"] = "Reporte";
+$lang["reports_report_input"] = "Entrada de Reporte";
+$lang["reports_reports"] = "Reportes";
+$lang["reports_requisition"] = "Requisición";
+$lang["reports_requisition_by"] = "Requisición por";
+$lang["reports_requisition_id"] = "ID de Requisición";
+$lang["reports_requisition_item"] = "Articulo de Requisición";
+$lang["reports_requisition_item_quantity"] = "Cantidad de Articulo de Requisición";
+$lang["reports_requisition_related_item"] = "Articulo de Requisición relacionado";
+$lang["reports_requisition_related_item_total_quantity"] = "Cantidad Total de Articulo de Requisición";
+$lang["reports_requisition_related_item_unit_quantity"] = "Cantidad Unitaria de Articulo de Requisición";
+$lang["reports_requisitions"] = "Requisiciones";
+$lang["reports_returns"] = "Devoluciones";
+$lang["reports_revenue"] = "Ingresos";
+$lang["reports_sale_id"] = "ID de Venta";
+$lang["reports_sale_type"] = "Tipo de Venta";
+$lang["reports_sales"] = "Ventas";
+$lang["reports_sales_amount"] = "Monto de ventas";
+$lang["reports_sales_summary_report"] = "Reporte de Resumen de Ventas";
+$lang["reports_serial_number"] = "S/N:";
+$lang["reports_sold_by"] = "Vendido Por";
+$lang["reports_sold_to"] = "Vendido A";
+$lang["reports_stock_location"] = "Ubicación de Inventario";
+$lang["reports_subtotal"] = "Subtotal";
+$lang["reports_summary_reports"] = "Reportes Resumidos";
+$lang["reports_supplied_by"] = "Provisto por";
+$lang["reports_supplier"] = "Proveedor";
+$lang["reports_suppliers"] = "Proveedores";
+$lang["reports_suppliers_summary_report"] = "Reporte de Resumen de Proveedores";
+$lang["reports_tax"] = "Impuesto";
+$lang["reports_tax_percent"] = "Porcentaje de Impuestos";
+$lang["reports_taxes"] = "Impuestos";
+$lang["reports_taxes_summary_report"] = "Reporte de Resumen de Impuestos";
+$lang["reports_this_month"] = "Este Mes";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "Este Año";
+$lang["reports_today"] = "Hoy";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "Total";
+$lang["reports_type"] = "Tipo";
+$lang["reports_welcome_message"] = "Bienvenido(a) al panel de reportes. Selecciona un reporte para verlo.";
+$lang["reports_yesterday"] = "Ayer";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "Precio de Compra";
+$lang["reports_unit_price"] = "Precio de Venta";
+$lang["reports_sub_total_value"] = "Subtotal";
+$lang["reports_total_inventory_value"] = "Total Inventory Value";
+$lang["reports_zero_and_less"] = "Zero and less";
+$lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/sales_lang.php opensourcepos/application/language/es/sales_lang.php
--- pos-prod/application/language/es/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/sales_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,86 +1,117 @@
 <?php
-$lang['sales_giftcard_number'] = 'Número de Tarjeta de Regalo';
-$lang['sales_giftcard'] = 'Tarjeta de Regalo';
-$lang['sales_register'] = 'Registro de Ventas';
-$lang['sales_mode'] = 'Modo';
-$lang['sales_new_item'] = 'Artículo Nuevo';
-$lang['sales_item_name'] = 'Nombre del Artículo';
-$lang['sales_item_number'] = 'UPC/EAN/ISBN';
-$lang['sales_new_customer'] = 'Cliente Nuevo';
-$lang['sales_customer'] = 'cliente';
-$lang['sales_no_items_in_cart'] = 'No hay artículos en el carrito';
-$lang['sales_total'] = 'Total';
-$lang['sales_tax_percent'] = '% de Impuesto';
-$lang['sales_price'] = 'Precio';
-$lang['sales_quantity'] = 'Cant.';
-$lang['sales_discount'] = 'Desc %';
-$lang['sales_edit'] = 'Editar';
-$lang['sales_payment'] = 'Tipo de Pago';
-$lang['sales_edit_item'] = 'Editar Artículo';
-$lang['sales_find_or_scan_item'] = 'Encontrar/Escanear Artículo';
-$lang['sales_find_or_scan_item_or_receipt'] = 'Encontrar/Escanear Artículo o Entrada';
-$lang['sales_select_customer'] = 'Seleccionar Cliente (Opcional)';
-$lang['sales_start_typing_item_name'] = 'Empieza a escribir o escanea el código de barras...';
-$lang['sales_start_typing_customer_name'] = 'Empieza a escribir el cliente...';
-$lang['sales_sub_total'] = 'Subtotal';
-$lang['sales_tax'] = 'Impuesto';
-$lang['sales_comment'] = 'Comentario';
-$lang['sales_unable_to_add_item'] = 'No se puede agregar el artículo a la venta';
-$lang['sales_sale_for_customer'] = 'Cliente:';
-$lang['sales_remove_customer'] = 'Borrar Cliente';
-$lang['sales_error_editing_item'] = 'Error editando artículo';
-$lang['sales_complete_sale'] = 'Completar Venta';
-$lang['sales_cancel_sale'] = 'Cancelar Venta';
-$lang['sales_add_payment'] = 'Agregar Pago';
-$lang['sales_receipt'] = 'Recibo de Venta';
-$lang['sales_receipt_number']='POS #';
-$lang['sales_id'] = 'ID de Venta';
-$lang['sales_sale'] = 'Venta';
-$lang['sales_return'] = 'Devolución';
-$lang['sales_confirm_finish_sale'] = '¿Estás seguro(a) de querer procesar esta venta? Ésto no se puede deshacer.';
-$lang['sales_confirm_cancel_sale'] = '¿Estás seguro(a) de querer limpiar esta venta? Todos los artículos serán limpiados.';
-$lang['sales_cash'] = 'Efectivo';
-$lang['sales_check'] = 'Cheque';
-$lang['sales_debit'] = 'Tarjeta de Débito';
-$lang['sales_credit'] = 'Tarjeta de Crédito';
-$lang['sales_giftcard'] = 'Gift Card';
-$lang['sales_amount_tendered'] = 'Cantidad Recibida';
-$lang['sales_change_due'] = 'Cambio';
-$lang['sales_payment_not_cover_total'] = 'La Cantidad Recibida no cubre el pago total';
-$lang['sales_transaction_failed'] = 'La transacción de venta falló';
-$lang['sales_must_enter_numeric'] = 'Cantidad Recibida debe ser número';
-$lang['sales_must_enter_numeric_giftcard'] = 'Número de Tarjeta de Regalo debe ser número';
-$lang['sales_serial'] = 'Serial';
-$lang['sales_description_abbrv'] = 'Desc';
-$lang['sales_item_out_of_stock'] = 'El artículo está agotado';
-$lang['sales_item_insufficient_of_stock'] = 'Hay un número insuficiente de Artículos en existencia';
-$lang['sales_quantity_less_than_zero'] = 'Advertencia. La cantidad deseada es insuficiente. Puedes procesar la venta pero verifica el inventario.';
-$lang['sales_successfully_updated'] = 'La venta ha sido actualizada satisfactoriamente';
-$lang['sales_unsuccessfully_updated'] = 'Ha fallado la actualización de la venta';
-$lang['sales_edit_sale'] = 'Editar Venta';
-$lang['sales_employee'] = 'Empleado';
-$lang['sales_successfully_deleted'] = 'La Venta ha sido borrada satisfactoriamente';
-$lang['sales_unsuccessfully_deleted'] = 'Ha fallado la eliminación de la Venta';
-$lang['sales_delete_entire_sale'] = 'Borrar la venta completa';
-$lang['sales_delete_confirmation'] = '¿Estás seguro(a) de querer borrar esta venta? Esta acción no se puede deshacer.';
-$lang['sales_delete_successful'] = 'Has borrado satisfactoriamente una venta';
-$lang['sales_delete_unsuccessful'] = 'No he podido borrar la venta satisfactoriamente';
-$lang['sales_suspend_sale'] = 'Suspender Venta';
-$lang['sales_confirm_suspend_sale'] = '¿Estás seguro(a) de querer suspender esta venta?';
-$lang['sales_suspended_sales'] = 'Ventas Suspendidas';
-$lang['sales_suspended_sale_id'] = 'ID de Venta Suspendida';
-$lang['sales_date'] = 'Fecha';
-$lang['sales_comments'] = 'Comentarios';
-$lang['sales_unsuspend_and_delete'] = 'Retomar y Borrar';
-$lang['sales_unsuspend'] = 'Retomar';
-$lang['sales_successfully_suspended_sale'] = 'La venta ha sido suspendida satisfactoriamente';
-$lang['sales_email_receipt'] = 'Enviar Ticket';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Descuento';
-$lang['sales_sale_time']='Hora';
-$lang['sales_payments_total'] = 'Pagado';
-$lang['sales_amount_due'] = 'Debe';
-$lang['sales_payment_type'] = "Tipo";
-$lang['sales_payment_amount'] = "Cantidad";
-$lang['sales_basic_information'] = "información sobre las entradas";
-?>
+
+$lang["sales_add_payment"] = "Agregar Pago";
+$lang["sales_amount_due"] = "Debe";
+$lang["sales_amount_tendered"] = "Cantidad Recibida";
+$lang["sales_basic_information"] = "información sobre las entradas";
+$lang["sales_cancel_sale"] = "Cancelar Venta";
+$lang["sales_cash"] = "Efectivo";
+$lang["sales_change_due"] = "Cambio";
+$lang["sales_check"] = "Cheque";
+$lang["sales_check_balance"] = "Balance de Cheque";
+$lang["sales_comment"] = "Comentario";
+$lang["sales_comments"] = "Comentarios";
+$lang["sales_complete_sale"] = "Completar Venta";
+$lang["sales_confirm_cancel_sale"] = "¿Seguro(a) de querer limpiar esta venta? Todos los artículos serán limpiados.";
+$lang["sales_confirm_delete"] = "¿Seguro(a) de querer borrar las ventas seleccionadas?";
+$lang["sales_confirm_finish_sale"] = "¿Seguro(a) de querer procesar esta venta? Ésto no se puede deshacer.";
+$lang["sales_confirm_suspend_sale"] = "¿Seguro(a) de querer suspender esta venta?";
+$lang["sales_credit"] = "Tarjeta de Crédito";
+$lang["sales_customer"] = "cliente";
+$lang["sales_date"] = "Fecha";
+$lang["sales_date_required"] = "Una fecha correcta de ser ingresada";
+$lang["sales_date_type"] = "Campo de Fecha es requerido";
+$lang["sales_debit"] = "Tarjeta de Débito";
+$lang["sales_delete_confirmation"] = "¿Seguro(a) de querer borrar esta venta? Esta acción no se puede deshacer.";
+$lang["sales_delete_entire_sale"] = "Borrar la venta completa";
+$lang["sales_delete_successful"] = "Has borrado satisfactoriamente una venta";
+$lang["sales_delete_unsuccessful"] = "No he podido borrar la venta satisfactoriamente";
+$lang["sales_description_abbrv"] = "Desc";
+$lang["sales_discount"] = "% Descuento";
+$lang["sales_discount_included"] = "% Descuento";
+$lang["sales_discount"] = "Descuento";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "Editar";
+$lang["sales_edit_item"] = "Editar Artículo";
+$lang["sales_edit_sale"] = "Editar Venta";
+$lang["sales_email_receipt"] = "Enviar Ticket";
+$lang["sales_employee"] = "Empleado";
+$lang["sales_error_editing_item"] = "Error editando artículo";
+$lang["sales_find_or_scan_item"] = "Encontrar/Escanear Artículo";
+$lang["sales_find_or_scan_item_or_receipt"] = "Encontrar/Escanear Artículo o Entrada";
+$lang["sales_giftcard"] = "Tarjeta de Regalo";
+$lang["sales_giftcard_balance"] = "Balance de Tarjeta de Regalo";
+$lang["sales_giftcard_number"] = "Número de Tarjeta de Regalo";
+$lang["sales_id"] = "ID de Venta";
+$lang["sales_invoice"] = "tarjeta de Crédito";
+$lang["sales_invoice_confirm"] = "Esta factura sera enviada a";
+$lang["sales_invoice_enable"] = "Crear factura";
+$lang["sales_invoice_filter"] = "Facturas";
+$lang["sales_cash_filter"] = "Efectivo";
+$lang["sales_invoice_no_email"] = "Este cliente no tiene un email válido";
+$lang["sales_invoice_number"] = "Factura #";
+$lang["sales_invoice_number_duplicate"] = "Por favor ingrese un número de factura único";
+$lang["sales_invoice_sent"] = "Factura enviada a";
+$lang["sales_invoice_unsent"] = "Fallo el envio de la factura a";
+$lang["sales_invoice_update"] = "Actualizar";
+$lang["sales_item_insufficient_of_stock"] = "Hay un número insuficiente de Artículos en existencia";
+$lang["sales_item_name"] = "Nombre del Artículo";
+$lang["sales_item_number"] = "UPC/EAN/ISBN";
+$lang["sales_item_out_of_stock"] = "El artículo está agotado";
+$lang["sales_mode"] = "Modo";
+$lang["sales_must_enter_numeric"] = "Cantidad Recibida debe ser número";
+$lang["sales_must_enter_numeric_giftcard"] = "Número de Tarjeta de Regalo debe ser número";
+$lang["sales_new_customer"] = "Cliente Nuevo";
+$lang["sales_new_item"] = "Artículo Nuevo";
+$lang["sales_no_description"] = "Ninguno";
+$lang["sales_no_filter"] = "Todos";
+$lang["sales_no_items_in_cart"] = "No hay artículos en el carrito";
+$lang["sales_no_sales_to_display"] = "No hay ventas que mostrar";
+$lang["sales_one_or_multiple"] = "venta(s)";
+$lang["sales_takings"] = "Resumen";
+$lang["sales_payment"] = "Tipo de Pago";
+$lang["sales_payment_amount"] = "Cantidad";
+$lang["sales_payment_not_cover_total"] = "La Cantidad Recibida no cubre el pago total";
+$lang["sales_payment_type"] = "Tipo";
+$lang["sales_payments_total"] = "Pagado";
+$lang["sales_price"] = "Precio";
+$lang["sales_print_after_sale"] = "Imprimir recibo después de una venta";
+$lang["sales_quantity"] = "Cant.";
+$lang["sales_quantity_less_than_zero"] = "Advertencia. La cantidad deseada es insuficiente. Puedes procesar la venta pero verifica el inventario.";
+$lang["sales_quantity_less_than_reorder_level"] = "Advertencia. La cantidad deseada es insuficiente";
+$lang["sales_receipt"] = "Recibo de Venta";
+$lang["sales_receipt_number"] = "POS #";
+$lang["sales_register"] = "Registro de Ventas";
+$lang["sales_remove_customer"] = "Borrar Cliente";
+$lang["sales_return"] = "Devolución";
+$lang["sales_sale"] = "Venta";
+$lang["sales_sale_for_customer"] = "Cliente:";
+$lang["sales_sale_time"] = "Hora";
+$lang["sales_select_customer"] = "Seleccionar Cliente (Opcional)";
+$lang["sales_send_invoice"] = "Enviar Factura";
+$lang["sales_serial"] = "Serial";
+$lang["sales_show_invoice"] = "factura";
+$lang["sales_show_receipt"] = "recibo";
+$lang["sales_start_typing_customer_name"] = "Empieza a escribir el cliente...";
+$lang["sales_start_typing_item_name"] = "Empieza a escribir o escanea el código de barras...";
+$lang["sales_stock_location"] = "Inventario";
+$lang["sales_sub_total"] = "Subtotal";
+$lang["sales_successfully_deleted"] = "La Venta ha sido borrada satisfactoriamente";
+$lang["sales_successfully_suspended_sale"] = "La venta ha sido suspendida satisfactoriamente";
+$lang["sales_successfully_updated"] = "La venta ha sido actualizada satisfactoriamente";
+$lang["sales_suspend_sale"] = "Suspender Venta";
+$lang["sales_suspended_sale_id"] = "ID de Venta Suspendida";
+$lang["sales_suspended_sales"] = "Ventas Suspendidas";
+$lang["sales_tax"] = "Impuesto";
+$lang["sales_tax_percent"] = "% de Impuesto";
+$lang["sales_total"] = "Total";
+$lang["sales_total_tax_exclusive"] = "No incluye impuestos";
+$lang["sales_transaction_failed"] = "La transacción de venta falló";
+$lang["sales_unable_to_add_item"] = "No se puede agregar el artículo a la venta";
+$lang["sales_unsuccessfully_deleted"] = "Ha fallado la eliminación de la Venta";
+$lang["sales_unsuccessfully_updated"] = "Ha fallado la actualización de la venta";
+$lang["sales_unsuspend"] = "Retomar";
+$lang["sales_unsuspend_and_delete"] = "Retomar y Borrar";
+$lang["sales_update"] = "Editar Venta";
+$lang["sales_date_range"] = "Rango de Fecha";
+$lang["sales_none_selected"] = "No has seleccionado venta para editar";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/es/suppliers_lang.php opensourcepos/application/language/es/suppliers_lang.php
--- pos-prod/application/language/es/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/es/suppliers_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new'] = 'Nuevo Proveedor';
-$lang['suppliers_supplier'] = 'Proveedor';
-$lang['suppliers_update'] = 'Actualizar Proveedor';
-$lang['suppliers_confirm_delete'] = 'Estás seguro(a) de querer borrar los proveedores seleccionados?';
-$lang['suppliers_none_selected'] = 'No has seleccionado proveedores para borrar';
-$lang['suppliers_error_adding_updating'] = 'Error agregando/actualizando proveedor';
-$lang['suppliers_successful_adding'] = 'Has agregado el proveedor satisfactoriamente';
-$lang['suppliers_successful_updating'] = 'Has actualizado el proveedor satisfactoriamente';
-$lang['suppliers_successful_deleted'] = 'Has borrado satisfactoriamente a';
-$lang['suppliers_one_or_multiple'] = 'proveedor(es)';
-$lang['suppliers_cannot_be_deleted'] = 'No se pudo borrar los proveedores seleccionados. Uno o más de los seleccionados tiene ventas.';
-$lang['suppliers_basic_information'] = 'Información de Proveedores';
-$lang['suppliers_account_number'] = 'Cuenta #';
-$lang['suppliers_company_name'] = 'Nombre de la Compañía';
-$lang['suppliers_company_name_required'] = 'Nombre de la Compañía es requerido';
-?>
+
+$lang["suppliers_account_number"] = "Cuenta #";
+$lang["suppliers_basic_information"] = "Información de Proveedores";
+$lang["suppliers_cannot_be_deleted"] = "No se pudo borrar los proveedores seleccionados. Uno o más de los seleccionados tiene ventas.";
+$lang["suppliers_company_name"] = "Nombre de la Compañía";
+$lang["suppliers_company_name_required"] = "Nombre de la Compañía es requerido";
+$lang["suppliers_agency_name"] = "Nombre de la Agency";
+$lang["suppliers_confirm_delete"] = "¿Seguro(a) de querer borrar los proveedores seleccionados?";
+$lang["suppliers_error_adding_updating"] = "Error agregando/actualizando proveedor";
+$lang["suppliers_new"] = "Nuevo Proveedor";
+$lang["suppliers_none_selected"] = "No has seleccionado proveedores para borrar";
+$lang["suppliers_one_or_multiple"] = "proveedor(es)";
+$lang["suppliers_successful_adding"] = "Has agregado el proveedor satisfactoriamente";
+$lang["suppliers_successful_deleted"] = "Has borrado satisfactoriamente a";
+$lang["suppliers_successful_updating"] = "Has actualizado el proveedor satisfactoriamente";
+$lang["suppliers_supplier"] = "Proveedor";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "Actualizar Proveedor";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/common_lang.php opensourcepos/application/language/fr/common_lang.php
--- pos-prod/application/language/fr/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/common_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,42 +1,57 @@
 <?php
-$lang['common_common'] = 'commun';
-$lang['common_submit'] = 'Envoyer';
-$lang['common_or'] = 'OU';
-$lang['common_powered_by'] = 'Animé par';
-$lang['common_welcome'] = 'Bienvenue';
-$lang['common_logout'] = 'Déconnexion';
-$lang['common_list_of'] = 'Liste de';
-$lang['common_first_name'] = 'Prénom';
-$lang['common_last_name'] = 'Nom';
-$lang['common_email'] = 'E-Mail';
-$lang['common_phone_number'] = 'Téléphone';
-$lang['common_address_1'] = 'Addresse 1';
-$lang['common_address_2'] = 'Addresse 2';
-$lang['common_city'] = 'Ville';
-$lang['common_state'] = 'État';
-$lang['common_zip'] = 'Zip';
-$lang['common_country'] = 'Pays';
-$lang['common_comments'] = 'Commentaires';
-$lang['common_edit'] = 'éditer';
-$lang['common_search'] = 'Recherche';
-$lang['common_delete'] = 'Effacer';
-$lang['common_remove'] = 'Enlever';
-$lang['common_view_recent_sales'] = 'Voir Ventes Récentes';
-$lang['common_you_are_using_ospos'] = 'Vous utilisez Open Source Point Of Sale Version';
-$lang['common_please_visit_my'] = 'SVP visitez le';
-$lang['common_website'] = 'site-web';
-$lang['common_fields_required_message'] = 'Les champs en rouge sont requis';
-$lang['common_learn_about_project'] = 'pour les dernières informations sur le projet';
-$lang['common_searched_for'] = 'Recherché';
-$lang['common_first_name_required'] = 'Le prénom est requis.';
-$lang['common_last_name_required'] = 'Le nom est requis';
-$lang['common_email_invalid_format'] = 'Le format de l\'adresse électronique est incorrect';
-$lang['common_confirm_search'] = 'Vous avez sélectionné une ou plusieurs ligne(s). Elles ne seront plus selectionnées apres cette recherche. Voulez-vous lancer cette recherche?';
-$lang['common_no_persons_to_display'] = 'Il n\'y a personne à afficher';
-$lang['common_return_policy'] = 'Politique de Reprise';
-$lang['common_price'] = 'Prix';
-$lang['common_welcome_message']= 'Bienvenue à Open Source Point Of Sale, choisissez un module ci-dessous!';
-$lang['common_inv'] = 'inv';
-$lang['common_det'] = 'détails';
-$lang['common_phone_number_required'] = 'Le numéro de téléphone est requis.';//Added by Harry-Wonder 22/05/2014
-?>
+
+$lang["common_address_1"] = "Addresse 1";
+$lang["common_address_2"] = "Addresse 2";
+$lang["common_city"] = "Ville";
+$lang["common_comments"] = "Commentaires";
+$lang["common_common"] = "commun";
+$lang["common_confirm_search"] = "Vous avez sélectionné une ou plusieurs ligne(s). Elles ne seront plus selectionnées apres cette recherche. Voulez-vous lancer cette recherche?";
+$lang["common_country"] = "Pays";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "Effacer";
+$lang["common_print"] = "Imprimer";
+$lang["common_det"] = "détails";
+$lang["common_edit"] = "éditer";
+$lang["common_email"] = "E-Mail";
+$lang["common_email_invalid_format"] = "Le format de l\'adresse électronique est incorrect";
+$lang["common_fields_required_message"] = "Les champs en rouge sont requis";
+$lang["common_first_name"] = "Prénom";
+$lang["common_first_name_required"] = "Le prénom est requis.";
+$lang["common_first_page"] = "First";
+$lang["common_gender"] = "Gender";
+$lang["common_gender_female"] = "F";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "inv";
+$lang["common_last_name"] = "Nom";
+$lang["common_last_name_required"] = "Le nom est requis";
+$lang["common_last_page"] = "Last";
+$lang["common_learn_about_project"] = "pour les dernières informations sur le projet";
+$lang["common_list_of"] = "Liste de";
+$lang["common_logout"] = "Déconnexion";
+$lang["common_new"] = "New";
+$lang["common_no_persons_to_display"] = "Il n\'y a personne à afficher";
+$lang["common_or"] = "OU";
+$lang["common_phone_number"] = "Téléphone";
+$lang["common_phone_number_required"] = "Le numéro de téléphone est requis.";
+$lang["common_please_visit_my"] = "SVP visitez le";
+$lang["common_powered_by"] = "Animé par";
+$lang["common_price"] = "Prix";
+$lang["common_remove"] = "Enlever";
+$lang["common_return_policy"] = "Politique de Reprise";
+$lang["common_search"] = "Recherche";
+$lang["common_search_options"] = "Search options";
+$lang["common_searched_for"] = "Recherché";
+$lang["common_state"] = "État";
+$lang["common_submit"] = "Envoyer";
+$lang["common_view_recent_sales"] = "Voir Ventes Récentes";
+$lang["common_website"] = "site-web";
+$lang["common_welcome"] = "Bienvenue";
+$lang["common_welcome_message"] = "Bienvenue à Open Source Point Of Sale, choisissez un module ci-dessous!";
+$lang["common_you_are_using_ospos"] = "Vous utilisez Open Source Point Of Sale Version";
+$lang["common_zip"] = "Zip";
+$lang["common_import"] = "Import";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/config_lang.php opensourcepos/application/language/fr/config_lang.php
--- pos-prod/application/language/fr/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/config_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,35 +1,122 @@
 <?php
-$lang['config_info'] = 'Çonfiguration de l\'Entreprise';
-$lang['config_company'] = 'Nome de l\'Entreprise';
-$lang['config_address'] = 'Addresse';
-$lang['config_phone'] = 'Téléphone';
-$lang['config_website'] = 'Site-web';
-$lang['config_fax'] = 'Fax';
-$lang['config_default_tax_rate'] = 'Taux d\'Imposition par Défaut';
-$lang['config_default_tax_rate_1'] = 'Taux d\'Imposition 1';
-$lang['config_default_tax_rate_2'] = 'Taux d\'Imposition 2';
-$lang['config_company_required'] = 'Le nom d\'entreprise est requis';
-$lang['config_address_required'] = 'L\'adresse est requise';
-$lang['config_phone_required'] = 'Le numéro de téléphone est requis';
-$lang['config_default_tax_rate_required'] = 'Le taux d\'imposition par défaut est requis';
-$lang['config_default_tax_rate_number'] = 'Le taux d\'imposition doit etre un nombre';
-$lang['config_company_website_url'] = 'Le site web de l\'entreprise n\'est pas une URL valide (http://...)';
-$lang['config_saved_successfully'] = 'Configuration sauvegardée';
-$lang['config_saved_unsuccessfully'] = 'Échec de sauvegarde de configuration';
-$lang['config_return_policy_required'] = 'Le Message est un champ requis';
-$lang['config_print_after_sale'] = 'Imprimer un recu après vente';
-$lang['config_language'] = 'Langue';
-$lang['config_timezone'] = 'Fuseau Horaire';
-$lang['config_currency_symbol'] = 'Symbole Monétaire';
-$lang['config_currency_side'] = 'Symbole à droite'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Champ Personnalisé 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Champ Personnalisé 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Champ Personnalisé 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Champ Personnalisé 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Champ Personnalisé 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Champ Personnalisé 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Champ Personnalisé 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Champ Personnalisé 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Champ Personnalisé 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Champ Personnalisé 10'; //GARRISON ADDED 4/21/2013
-?>
+
+$lang["config_address"] = "Addresse";
+$lang["config_address_required"] = "L\'adresse est requise";
+$lang["config_backup_button"] = "Backup";
+$lang["config_backup_database"] = "Backup Database";
+$lang["config_barcode_company"] = "Nome de l\'Entreprise";
+$lang["config_barcode_configuration"] = "Barcode Configuration";
+$lang["config_barcode_content"] = "Barcode Content";
+$lang["config_barcode_first_row"] = "Row 2";
+$lang["config_barcode_font"] = "Font";
+$lang["config_barcode_height"] = "Height (px)";
+$lang["config_barcode_id"] = "Item Id/Name";
+$lang["config_barcode_info"] = "Barcode Configuration Information";
+$lang["config_barcode_layout"] = "Barcode Layout";
+$lang["config_barcode_name"] = "Name";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Number in row";
+$lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
+$lang["config_barcode_page_width"] = "Display page width";
+$lang["config_barcode_price"] = "Price";
+$lang["config_barcode_quality"] = "Quality (1-100)";
+$lang["config_barcode_second_row"] = "Row 3";
+$lang["config_barcode_third_row"] = "Row 4";
+$lang["config_barcode_type"] = "Barcode Type";
+$lang["config_barcode_width"] = "Width (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "Nome de l\'Entreprise";
+$lang["config_company_logo"] = "Company Logo";
+$lang["config_company_required"] = "Le nom d\'entreprise est requis";
+$lang["config_company_website_url"] = "Le site web de l\'entreprise n\'est pas une URL valide (http://...)";
+$lang["config_currency_side"] = "Symbole à droite";
+$lang["config_currency_symbol"] = "Symbole Monétaire";
+$lang["config_custom1"] = "Champ Personnalisé 1";
+$lang["config_custom10"] = "Champ Personnalisé 10";
+$lang["config_custom2"] = "Champ Personnalisé 2";
+$lang["config_custom3"] = "Champ Personnalisé 3";
+$lang["config_custom4"] = "Champ Personnalisé 4";
+$lang["config_custom5"] = "Champ Personnalisé 5";
+$lang["config_custom6"] = "Champ Personnalisé 6";
+$lang["config_custom7"] = "Champ Personnalisé 7";
+$lang["config_custom8"] = "Champ Personnalisé 8";
+$lang["config_custom9"] = "Champ Personnalisé 9";
+$lang["config_decimal_point"] = " Decimal Point";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Default Sales Discount %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "Taux d\'Imposition par Défaut";
+$lang["config_default_tax_rate_1"] = "Taux d\'Imposition 1";
+$lang["config_default_tax_rate_2"] = "Taux d\'Imposition 2";
+$lang["config_default_tax_rate_number"] = "Le taux d\'imposition doit etre un nombre";
+$lang["config_default_tax_rate_required"] = "Le taux d\'imposition par défaut est requis";
+$lang["config_fax"] = "Fax";
+$lang["config_general_configuration"] = "General Configuration";
+$lang["config_info"] = "Çonfiguration de l\'Entreprise";
+$lang["config_invoice_default_comments"] = "Default Invoice Comments";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Invoice Printer";
+$lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
+$lang["config_language"] = "Langue";
+$lang["config_lines_per_page"] = "Lines Per Page";
+$lang["config_lines_per_page_number"] = "The lines per page must be a number";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locations";
+$lang["config_location_info"] = "Location Configuration Information";
+$lang["config_logout"] = "Don't you want to make a backup before logging out?";
+$lang["config_number_format"] = "Number Format";
+$lang["config_phone"] = "Téléphone";
+$lang["config_phone_required"] = "Le numéro de téléphone est requis";
+$lang["config_print_bottom_margin"] = "Margin Bottom";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Margin Left";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Margin Right";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Show Print Dialog";
+$lang["config_print_top_margin"] = "Margin Top";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Settings";
+$lang["config_receipt_info"] = "Receipt Configuration Information";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Show Taxes";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "Receivings Invoice Format";
+$lang["config_return_policy_required"] = "Le Message est un champ requis";
+$lang["config_sales_invoice_format"] = "Sales Invoice Format";
+$lang["config_saved_successfully"] = "Configuration sauvegardée";
+$lang["config_saved_unsuccessfully"] = "Échec de sauvegarde de configuration";
+$lang["config_show_total_discount"] = "Show total discount";
+$lang["config_stock_location"] = "Stock location";
+$lang["config_stock_location_duplicate"] = "Please use an unique location name";
+$lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
+$lang["config_stock_location_required"] = "Stock location number is a required field";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "Tax Included";
+$lang["config_thousands_separator"] = "Thousands Separator";
+$lang["config_timezone"] = "Fuseau Horaire";
+$lang["config_use_invoice_template"] = "Use invoice template";
+$lang["config_website"] = "Site-web";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/customers_lang.php opensourcepos/application/language/fr/customers_lang.php
--- pos-prod/application/language/fr/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/customers_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new'] = 'Nouveau Client';
-$lang['customers_customer'] = 'Client';
-$lang['customers_update'] = 'Éditer Client';
-$lang['customers_confirm_delete'] = 'Etes vous sûr(e) de vouloir supprimer ces clients?';
-$lang['customers_none_selected'] = 'Vous n\\\'avez pas sélectionné de client à supprimer';
-$lang['customers_error_adding_updating'] = 'Érreur lors de l\'ajout/suppression de client';
-$lang['customers_successful_adding'] = 'Vous avez ajouté un nouveau client';
-$lang['customers_successful_updating'] = 'Édition client réussie';
-$lang['customers_successful_deleted'] = 'Suppréssion réussie';
-$lang['customers_one_or_multiple'] = 'client(s)';
-$lang['customers_cannot_be_deleted'] = 'Impossible de supprimer. Un ou plusiers client(s) sélectionné(s) ont des ventes.';
-$lang['customers_basic_information'] = 'Informations Client';
-$lang['customers_account_number'] = '# Compte';
-$lang['customers_taxable'] = 'Imposable';
-?>
+
+$lang["customers_account_number"] = "# Compte";
+$lang["customers_account_number_duplicate"] = "This account number is already present in the database";
+$lang["customers_basic_information"] = "Informations Client";
+$lang["customers_cannot_be_deleted"] = "Impossible de supprimer. Un ou plusiers client(s) sélectionné(s) ont des ventes.";
+$lang["customers_company_name"] = "Company Name";
+$lang["customers_confirm_delete"] = "Etes vous sûr(e) de vouloir supprimer ces clients?";
+$lang["customers_customer"] = "Client";
+$lang["customers_error_adding_updating"] = "Érreur lors de l\'ajout/suppression de client";
+$lang["customers_new"] = "Nouveau Client";
+$lang["customers_none_selected"] = "Vous n\\\'avez pas sélectionné de client à supprimer";
+$lang["customers_one_or_multiple"] = "client(s)";
+$lang["customers_successful_adding"] = "Vous avez ajouté un nouveau client";
+$lang["customers_successful_deleted"] = "Suppréssion réussie";
+$lang["customers_successful_updating"] = "Édition client réussie";
+$lang["customers_taxable"] = "Imposable";
+$lang["customers_update"] = "Éditer Client";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/employees_lang.php opensourcepos/application/language/fr/employees_lang.php
--- pos-prod/application/language/fr/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/employees_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee'] = 'Employé';
-$lang['employees_new'] = 'Nouvel Employé';
-$lang['employees_update'] = 'Éditer Employé';
-$lang['employees_confirm_delete'] = 'Voulez-vous supprimer ces employés?';
-$lang['employees_none_selected'] = 'Aucun employé sélectionné pour la suppression';
-$lang['employees_error_adding_updating'] = 'Erreur d\'ajout/édition d\'employé';
-$lang['employees_successful_adding'] = 'Employé ajouté';
-$lang['employees_successful_updating'] = 'Édition d\'employé réussie';
-$lang['employees_successful_deleted'] = 'Suppréssion d\'employé réussie';
-$lang['employees_one_or_multiple'] = 'employé(s)';
-$lang['employees_cannot_be_deleted'] = 'Impossible de supprimer. Un ou plusieurs des employés à éffectué une vente, ou alors vous essayez de vous supprimer vous-meme :)';
-$lang['employees_username'] = 'Nom d\'utilisateur';
-$lang['employees_password'] = 'Mot de passe';
-$lang['employees_repeat_password'] = 'Re-saisissez le mot de passe';
-$lang['employees_username_required'] = 'Le Nom d\'utilisateur est requis';
-$lang['employees_username_minlength'] = 'Le Nom d\'utilisateur doit etre long d\'au moins 5 caractères';
-$lang['employees_password_required'] = 'Le Mot de passe est requis';
-$lang['employees_password_minlength'] = 'Le Mot de passe doit etre long d\'au moins 8 caractères';
-$lang['employees_password_must_match'] = 'Mots de passe non corcordants';
-$lang['employees_basic_information'] = 'Fiche Employé';
-$lang['employees_login_info'] = 'Détails de Connexion Employé';
-$lang['employees_permission_info'] = 'Droits d\'Accès Employé';
-$lang['employees_permission_desc'] = 'Cochez les cases cis-dessous pour autoriser l\'accès aux modules';
-$lang['employees_error_updating_demo_admin'] = 'Vous ne pouvez pas modifier l\'utilisateur de démonstration admin';
-$lang['employees_error_deleting_demo_admin'] = 'Vous ne pouvez pas effacer l\'utilisateur de démonstration admin';
-?>
+
+$lang["employees_basic_information"] = "Fiche Employé";
+$lang["employees_cannot_be_deleted"] = "Impossible de supprimer. Un ou plusieurs des employés à éffectué une vente, ou alors vous essayez de vous supprimer vous-meme :)";
+$lang["employees_confirm_delete"] = "Voulez-vous supprimer ces employés?";
+$lang["employees_employee"] = "Employé";
+$lang["employees_error_adding_updating"] = "Erreur d\'ajout/édition d\'employé";
+$lang["employees_error_deleting_demo_admin"] = "Vous ne pouvez pas effacer l\'utilisateur de démonstration admin";
+$lang["employees_error_updating_demo_admin"] = "Vous ne pouvez pas modifier l\'utilisateur de démonstration admin";
+$lang["employees_login_info"] = "Détails de Connexion Employé";
+$lang["employees_new"] = "Nouvel Employé";
+$lang["employees_none_selected"] = "Aucun employé sélectionné pour la suppression";
+$lang["employees_one_or_multiple"] = "employé(s)";
+$lang["employees_password"] = "Mot de passe";
+$lang["employees_password_minlength"] = "Le Mot de passe doit etre long d\'au moins 8 caractères";
+$lang["employees_password_must_match"] = "Mots de passe non corcordants";
+$lang["employees_password_required"] = "Le Mot de passe est requis";
+$lang["employees_permission_desc"] = "Cochez les cases cis-dessous pour autoriser l\'accès aux modules";
+$lang["employees_permission_info"] = "Droits d\'Accès Employé";
+$lang["employees_repeat_password"] = "Re-saisissez le mot de passe";
+$lang["employees_successful_adding"] = "Employé ajouté";
+$lang["employees_successful_deleted"] = "Suppréssion d\'employé réussie";
+$lang["employees_successful_updating"] = "Édition d\'employé réussie";
+$lang["employees_update"] = "Éditer Employé";
+$lang["employees_username"] = "Nom d\'utilisateur";
+$lang["employees_username_minlength"] = "Le Nom d\'utilisateur doit etre long d\'au moins 5 caractères";
+$lang["employees_username_required"] = "Le Nom d\'utilisateur est requis";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/error_lang.php opensourcepos/application/language/fr/error_lang.php
--- pos-prod/application/language/fr/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/error_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module'] = 'Vous n\'avez pas d\'autorisation d\'accès pour le module';
-$lang['error_unknown'] = 'inconnu';
-?>
+
+$lang["error_no_permission_module"] = "Vous n\'avez pas d\'autorisation d\'accès pour le module";
+$lang["error_unknown"] = "inconnu";
Only in pos-prod/application/language/fr: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/giftcards_lang.php opensourcepos/application/language/fr/giftcards_lang.php
--- pos-prod/application/language/fr/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/giftcards_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = 'Numéro de Carte';
-$lang['giftcards_card_value'] = 'Valeur';
-$lang['giftcards_basic_information'] = 'Détails de la Carte';
-$lang['giftcards_number_required'] = 'Le Numéro est requis';
-$lang['giftcards_value_required'] = 'La Valeur est requise';
-$lang['giftcards_number'] = 'Le numéro de la carte doit etre un nombre';
-$lang['giftcards_value'] = 'La valeur de la carte doit etre un nombre';
-$lang['giftcards_person_id'] = 'Client';
-$lang['giftcards_retrive_giftcard_info'] = 'Obtenir des détails de la Carte';
-$lang['giftcards_description'] = 'Description';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'Base de Données UPC';
-$lang['giftcards_cannot_find_giftcard'] = 'Aucune information sur la carte';
-$lang['giftcards_info_provided_by'] = 'Information fournie par';
-$lang['giftcards_number_information'] = 'Numéro de Carte';
-$lang['giftcards_new'] = 'Nouvelle Carte';
-$lang['giftcards_update'] = 'Éditer Carte';
-$lang['giftcards_giftcard'] = 'Carte Cadeau';
-$lang['giftcards_edit_multiple_giftcards'] = 'Édition Multiple de Cartes';
-$lang['giftcards_category'] = 'Catégorie';
-$lang['giftcards_cost_price'] = 'Cout';
-$lang['giftcards_unit_price'] = 'Prix Unitaire';
-$lang['giftcards_tax_1'] = 'Tax 1';
-$lang['giftcards_tax_2'] = 'Tax 2';
-$lang['giftcards_sales_tax_1'] = 'Sales Tax';
-$lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
-$lang['giftcards_tax_percent'] = 'Taux d\'imposition';
-$lang['giftcards_tax_percents'] = 'Pourcentage d\'imposition';
-$lang['giftcards_reorder_level'] = 'Seuil de Réapprovisionnement';
-$lang['giftcards_quantity'] = 'Quantité';
-$lang['giftcards_no_giftcards_to_display'] = 'Aucune carte à afficher';
-$lang['giftcards_bulk_edit'] = 'Édition en groupe';
-$lang['giftcards_confirm_delete'] = 'Etes vous sûr(e) de vouloir supprimer ces cates?';
-$lang['giftcards_none_selected'] = 'Vous n\\\'avez sélectionné aucune carte à éditer';
-$lang['giftcards_confirm_bulk_edit'] = 'Etes vous sûr(e) de vouloir éditer toutes les cartes sélectionnés?';
-$lang['giftcards_successful_bulk_edit'] = 'Les cartes ont étés édités';
-$lang['giftcards_error_updating_multiple'] = 'Érreur lors de l\'édition des cartes';
-$lang['giftcards_edit_fields_you_want_to_update'] = 'Modifier les chaps que vous voulez éditer pour TOUTES les cartes';
-$lang['giftcards_error_adding_updating'] = 'Érreur d\'ajout/édition de cartes';
-$lang['giftcards_successful_adding'] = 'Vous avez ajouté une carte cadeau bonus';
-$lang['giftcards_successful_updating'] = 'Édition réussie';
-$lang['giftcards_successful_deleted'] = 'Suppréssion réussie';
-$lang['giftcards_one_or_multiple'] = 'carte(s)';
-$lang['giftcards_cannot_be_deleted'] = 'Impossible de supprimer. Une ou plusieurs carte(s) ont des ventes.';
-$lang['giftcards_none'] = 'Aucun';
-$lang['giftcards_supplier'] = 'Fournisseur';
-$lang['giftcards_generate_barcodes'] = 'Générer des Codes-barre';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'Vous devez sélectionner au moins une carte pour générer des codes-barre';
-$lang['giftcards_excel_import_failed'] = 'Échec de l\'import';
-$lang['giftcards_allow_alt_description'] = 'Autorisér Description Alt';
-$lang['giftcards_is_serialized'] = 'Carte cadeau avec Numéro de Série';
-$lang['giftcards_low_inventory_giftcards'] = 'Cartes Stock Faible';
-$lang['giftcards_serialized_giftcards'] = 'Cartes Cadeau Serialisés';
-$lang['giftcards_no_description_giftcards'] = 'Cartes Sans Description';
-$lang['giftcards_inventory_comments'] = 'Commentaires';
-$lang['giftcards_count'] = 'Mise à Jour Inventaire';
-$lang['giftcards_details_count'] = 'Détails d\'inventaire';
-$lang['giftcards_add_minus'] = 'Ajout/Soustraction à l\'inventaire';
-$lang['giftcards_current_quantity'] = 'Quantité Restante';
-$lang['giftcards_quantity_required'] = 'La quantité est requise. Veuillez Fermer ( X ) pour annuler';
-$lang['giftcards_do_nothing'] = 'Ne rien faire';
-$lang['giftcards_change_all_to_serialized'] = 'Tout Sérialiser';
-$lang['giftcards_change_all_to_unserialized'] = 'Tout Désérialiser';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Autoriser Desc Alt Pour Tous';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Interdire Desc Alt Pour Tous';
-$lang['giftcards_use_inventory_menu'] = 'Utiliser Menu Inv.';
-$lang['giftcards_manually_editing_of_quantity'] = 'Modification Manuelle de Quantité';
-?>
+
+$lang["giftcards_add_minus"] = "Ajout/Soustraction à l\'inventaire";
+$lang["giftcards_allow_alt_description"] = "Autorisér Description Alt";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
+$lang["giftcards_basic_information"] = "Détails de la Carte";
+$lang["giftcards_bulk_edit"] = "Édition en groupe";
+$lang["giftcards_cannot_be_deleted"] = "Impossible de supprimer. Une ou plusieurs carte(s) ont des ventes.";
+$lang["giftcards_cannot_find_giftcard"] = "Aucune information sur la carte";
+$lang["giftcards_card_value"] = "Valeur";
+$lang["giftcards_category"] = "Catégorie";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "Autoriser Desc Alt Pour Tous";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "Interdire Desc Alt Pour Tous";
+$lang["giftcards_change_all_to_serialized"] = "Tout Sérialiser";
+$lang["giftcards_change_all_to_unserialized"] = "Tout Désérialiser";
+$lang["giftcards_confirm_bulk_edit"] = "Etes vous sûr(e) de vouloir éditer toutes les cartes sélectionnés?";
+$lang["giftcards_confirm_delete"] = "Etes vous sûr(e) de vouloir supprimer ces cates?";
+$lang["giftcards_cost_price"] = "Cout";
+$lang["giftcards_count"] = "Mise à Jour Inventaire";
+$lang["giftcards_current_quantity"] = "Quantité Restante";
+$lang["giftcards_description"] = "Description";
+$lang["giftcards_details_count"] = "Détails d\'inventaire";
+$lang["giftcards_do_nothing"] = "Ne rien faire";
+$lang["giftcards_edit_fields_you_want_to_update"] = "Modifier les chaps que vous voulez éditer pour TOUTES les cartes";
+$lang["giftcards_edit_multiple_giftcards"] = "Édition Multiple de Cartes";
+$lang["giftcards_error_adding_updating"] = "Érreur d\'ajout/édition de cartes";
+$lang["giftcards_error_updating_multiple"] = "Érreur lors de l\'édition des cartes";
+$lang["giftcards_excel_import_failed"] = "Échec de l\'import";
+$lang["giftcards_generate_barcodes"] = "Générer des Codes-barre";
+$lang["giftcards_giftcard"] = "Carte Cadeau";
+$lang["giftcards_giftcard_number"] = "Numéro de Carte";
+$lang["giftcards_info_provided_by"] = "Information fournie par";
+$lang["giftcards_inventory_comments"] = "Commentaires";
+$lang["giftcards_is_serialized"] = "Carte cadeau avec Numéro de Série";
+$lang["giftcards_low_inventory_giftcards"] = "Cartes Stock Faible";
+$lang["giftcards_manually_editing_of_quantity"] = "Modification Manuelle de Quantité";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "Vous devez sélectionner au moins une carte pour générer des codes-barre";
+$lang["giftcards_new"] = "Nouvelle Carte";
+$lang["giftcards_no_description_giftcards"] = "Cartes Sans Description";
+$lang["giftcards_no_giftcards_to_display"] = "Aucune carte à afficher";
+$lang["giftcards_none"] = "Aucun";
+$lang["giftcards_none_selected"] = "Vous n\\\'avez sélectionné aucune carte à éditer";
+$lang["giftcards_number"] = "Le numéro de la carte doit etre un nombre";
+$lang["giftcards_number_information"] = "Numéro de Carte";
+$lang["giftcards_number_required"] = "Le Numéro est requis";
+$lang["giftcards_one_or_multiple"] = "carte(s)";
+$lang["giftcards_person_id"] = "Client";
+$lang["giftcards_quantity"] = "Quantité";
+$lang["giftcards_quantity_required"] = "La quantité est requise. Veuillez Fermer ( X ) pour annuler";
+$lang["giftcards_reorder_level"] = "Seuil de Réapprovisionnement";
+$lang["giftcards_retrive_giftcard_info"] = "Obtenir des détails de la Carte";
+$lang["giftcards_sales_tax_1"] = "Sales Tax";
+$lang["giftcards_sales_tax_2"] = "Sales Tax 2";
+$lang["giftcards_serialized_giftcards"] = "Cartes Cadeau Serialisés";
+$lang["giftcards_successful_adding"] = "Vous avez ajouté une carte cadeau bonus";
+$lang["giftcards_successful_bulk_edit"] = "Les cartes ont étés édités";
+$lang["giftcards_successful_deleted"] = "Suppréssion réussie";
+$lang["giftcards_successful_updating"] = "Édition réussie";
+$lang["giftcards_supplier"] = "Fournisseur";
+$lang["giftcards_tax_1"] = "Tax 1";
+$lang["giftcards_tax_2"] = "Tax 2";
+$lang["giftcards_tax_percent"] = "Taux d\'imposition";
+$lang["giftcards_tax_percents"] = "Pourcentage d\'imposition";
+$lang["giftcards_unit_price"] = "Prix Unitaire";
+$lang["giftcards_upc_database"] = "Base de Données UPC";
+$lang["giftcards_update"] = "Éditer Carte";
+$lang["giftcards_use_inventory_menu"] = "Utiliser Menu Inv.";
+$lang["giftcards_value"] = "La valeur de la carte doit etre un nombre";
+$lang["giftcards_value_required"] = "La Valeur est requise";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/index.html opensourcepos/application/language/fr/index.html
--- pos-prod/application/language/fr/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/index.html	2016-05-23 15:32:31.904839410 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Interdit</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/item_kits_lang.php opensourcepos/application/language/fr/item_kits_lang.php
--- pos-prod/application/language/fr/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/item_kits_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'Nom du Kit';
-$lang['item_kits_description'] = 'Description du Kit';
-$lang['item_kits_no_item_kits_to_display'] = 'Aucun kit à afficher';
-$lang['item_kits_update'] = 'Éditer Kit';
-$lang['item_kits_new'] = 'Nouveau Kit';
-$lang['item_kits_none_selected'] = 'Vous n\\\'avez sélectionné aucun kit';
-$lang['item_kits_info'] = 'Détails du Kit';
-$lang['item_kits_successful_adding'] = 'Vous avez ajouté un Kit';
-$lang['item_kits_successful_updating'] = 'Vous avez édité un Kit';
-$lang['item_kits_error_adding_updating'] = 'Érreur d\'ajout/édition de Kit';
-$lang['item_kits_successful_deleted'] = 'Suppréssion réussie';
-$lang['item_kits_confirm_delete'] = 'Ètes vous sûr(e) de vouloir supprimer le(s) Kits sélectionnés?';
-$lang['item_kits_one_or_multiple'] = 'Kit(s)';
-$lang['item_kits_cannot_be_deleted'] = 'Impossible de supprimer';
-$lang['item_kits_add_item'] = 'Ajouter Item';
-$lang['item_kits_items'] = 'Items';
-$lang['item_kits_item'] = 'Item';
-$lang['item_kits_quantity'] = 'Quantité';
-?>
+
+$lang["item_kits_add_item"] = "Ajouter Item";
+$lang["item_kits_cannot_be_deleted"] = "Impossible de supprimer";
+$lang["item_kits_confirm_delete"] = "Ètes vous sûr(e) de vouloir supprimer le(s) Kits sélectionnés?";
+$lang["item_kits_description"] = "Description du Kit";
+$lang["item_kits_error_adding_updating"] = "Érreur d\'ajout/édition de Kit";
+$lang["item_kits_info"] = "Détails du Kit";
+$lang["item_kits_item"] = "Item";
+$lang["item_kits_items"] = "Items";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "Nom du Kit";
+$lang["item_kits_new"] = "Nouveau Kit";
+$lang["item_kits_no_item_kits_to_display"] = "Aucun kit à afficher";
+$lang["item_kits_none_selected"] = "Vous n\\\'avez sélectionné aucun kit";
+$lang["item_kits_one_or_multiple"] = "Kit(s)";
+$lang["item_kits_quantity"] = "Quantité";
+$lang["item_kits_successful_adding"] = "Vous avez ajouté un Kit";
+$lang["item_kits_successful_deleted"] = "Suppréssion réussie";
+$lang["item_kits_successful_updating"] = "Vous avez édité un Kit";
+$lang["item_kits_update"] = "Éditer Kit";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/items_lang.php opensourcepos/application/language/fr/items_lang.php
--- pos-prod/application/language/fr/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/items_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,81 +1,88 @@
 <?php
-$lang['items_item_number'] = 'UPC/EAN/ISBN';
-$lang['items_retrive_item_info'] = 'Récupérer Informations';
-$lang['items_description'] = 'Description';
-$lang['items_amazon'] = 'Amazon';
-$lang['items_upc_database'] = 'Base de Données UPC';
-$lang['items_cannot_find_item'] = 'Impossible de récu[érer des informations';
-$lang['items_info_provided_by'] = 'Infos fournies by';
-$lang['items_basic_information'] = 'Informations sur l\'Item';
-$lang['items_number_information'] = 'Numbéro d\'Item';
-$lang['items_new'] = 'Nouvel Item';
-$lang['items_update'] = 'Éditer Item';
-$lang['items_item'] = 'Item';
-$lang['items_edit_multiple_items'] = 'Édition Multiple d\'Items';
-$lang['items_name'] = 'Nom';
-$lang['items_category'] = 'Categorie';
-$lang['items_cost_price'] = 'Prix de Gros';//GARRISON ADDED 4/21/2013
-$lang['items_unit_price'] = 'Prix au Détail';//GARRISON ADDED 4/21/2013
-$lang['items_tax_1'] = 'Taxe 1';
-$lang['items_tax_2'] = 'Taxe 2';
-$lang['items_sales_tax_1'] = 'Taxe Vente';
-$lang['items_sales_tax_2'] = 'Taxe Vente 2';
-$lang['items_tax_percent'] = 'Pourcentage d\'imposition';
-$lang['items_tax_percents'] = 'Pourcents(s) de taxes';
-$lang['items_reorder_level'] = 'Niveau de Réapprovisionnement';
-$lang['items_quantity'] = 'Quantité';
-$lang['items_reorder_level'] = 'Niveau de Réapprovisionnement';
-$lang['items_no_items_to_display'] = 'Aucun Items à afficher';
-$lang['items_bulk_edit'] = 'Édition en groupe';
-$lang['items_confirm_delete'] = 'Etes vous sûre de vouloir supprimer la sélection?';
-$lang['items_none_selected'] = 'Vous n\\\'avez sélectionné aucun élément';
-$lang['items_confirm_bulk_edit'] = 'Etes vous sûre de vouloir éditer toute la sélection?';
-$lang['items_successful_bulk_edit'] = 'Édition réussie';
-$lang['items_error_updating_multiple'] = 'Erreur d\'édition';
-$lang['items_edit_fields_you_want_to_update'] = 'Modifiez les champs que vous voulez éditer pour TOUS les items sélectionnés';
-$lang['items_error_adding_updating'] = 'Erreur d\'ajout/éditionn';
-$lang['items_successful_adding'] = 'Ajout enregistré';
-$lang['items_successful_updating'] = 'Édition enregistrée';
-$lang['items_successful_deleted'] = 'Suppréssion réussie';
-$lang['items_one_or_multiple'] = 'item(s)';
-$lang['items_cannot_be_deleted'] = 'Impossible de supprimer. Un ou plusiers des items sélectionnés a des ventes.';
-$lang['items_name_required'] = 'Le Nom est requis';
-$lang['items_category_required'] = 'La Catégorie est requise';
-$lang['items_buy_price_required'] = 'Le Prix d\'achat est requis';		//GARRISON UPDATED 6/3/2013
-$lang['items_unit_price_required'] = 'Le Prix de revente est requis';		//GARRISON UPDATED 6/3/2013
-$lang['items_cost_price_required'] = 'Le Prix de gros est requis';	//GARRISON UPDATED 6/3/2013
-$lang['items_tax_percent_required'] = 'Le Pourcentage d\'imposition est requis';
-$lang['items_quantity_required'] = 'La Quantité est requise';
-$lang['items_reorder_level_required'] = 'Le Niveaux de Réapprovisionnement est requis';
-$lang['items_unit_price_number'] = 'Le Prix unitaire doit etre un nombre';
-$lang['items_cost_price_number'] = 'Le Prix d\'achat doit etre un nombre';
-$lang['items_quantity_number'] = 'La Quantité doit etre un nombre';
-$lang['items_reorder_level_number'] = 'Le Niveaux de Réapprovisionnement doit etre un nombre';
-$lang['items_none'] = 'Aucun';
-$lang['items_supplier'] = 'Fournisseur';
-$lang['items_generate_barcodes'] = 'Générer des Coddes-barre';
-$lang['items_must_select_item_for_barcode'] = 'Vous devez sélectionner au moins un item';
-$lang['items_excel_import_failed'] = 'Echec Import d\'Excel';
-$lang['items_allow_alt_description'] = 'Autoriser Description Alt';
-$lang['items_is_serialized'] = 'Item a un Numéro de Série';
-$lang['items_low_inventory_items'] = 'Items à Stock Faible';
-$lang['items_serialized_items'] = 'Items Serialisés';
-$lang['items_no_description_items'] = 'Items sans Description';
-$lang['items_search_custom_items'] = 'Rechercher dans les Champs Choisis';//GARRISON ADDED
-$lang['items_inventory_comments'] = 'Commentaires';
-$lang['items_count'] = 'Mise à jour Inventaire';
-$lang['items_details_count'] = 'Détais Inventaire';
-$lang['items_add_minus'] = 'Ajoujer/Soustraire à l\'Inventaire';
-$lang['items_current_quantity'] = 'Quantité Actuelle';
-$lang['items_quantity_required'] = 'La Quantité est requise. Veuillez Fermer ( X ) pour annuler';
-$lang['items_do_nothing'] = 'Ne rien faire';
-$lang['items_change_all_to_serialized'] = 'Tout Sérialiser';
-$lang['items_change_all_to_unserialized'] = 'Tout désérialiser';
-$lang['items_change_all_to_allow_alt_desc'] = ' Autoriser Desc Alt Pour Tous';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Interdire Desc Alt Pour Tous';
-$lang['items_use_inventory_menu'] = 'Utiliser Menu Inv.';
-$lang['items_manually_editing_of_quantity'] = 'Édition Manuelle de Quantité';
-$lang['items_inventory'] = 'Inventaire';
-$lang['items_location'] = 'Location';
-$lang['items_is_deleted'] = 'Supprimé';// Parq 131215
-?>
+
+$lang["items_add_minus"] = "Ajoujer/Soustraire à l\'Inventaire";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "Autoriser Description Alt";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "Informations sur l\'Item";
+$lang["items_bulk_edit"] = "Édition en groupe";
+$lang["items_buy_price_required"] = "Le Prix d\'achat est requis";
+$lang["items_cannot_be_deleted"] = "Impossible de supprimer. Un ou plusiers des items sélectionnés a des ventes.";
+$lang["items_cannot_find_item"] = "Impossible de récu[érer des informations";
+$lang["items_category"] = "Categorie";
+$lang["items_category_required"] = "La Catégorie est requise";
+$lang["items_change_all_to_allow_alt_desc"] = " Autoriser Desc Alt Pour Tous";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Interdire Desc Alt Pour Tous";
+$lang["items_change_all_to_serialized"] = "Tout Sérialiser";
+$lang["items_change_all_to_unserialized"] = "Tout désérialiser";
+$lang["items_confirm_bulk_edit"] = "Etes vous sûre de vouloir éditer toute la sélection?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "Etes vous sûre de vouloir supprimer la sélection?";
+$lang["items_cost_price"] = "Prix de Gros";
+$lang["items_cost_price_number"] = "Le Prix d\'achat doit etre un nombre";
+$lang["items_cost_price_required"] = "Le Prix de gros est requis";
+$lang["items_count"] = "Mise à jour Inventaire";
+$lang["items_current_quantity"] = "Quantité Actuelle";
+$lang["items_description"] = "Description";
+$lang["items_details_count"] = "Détais Inventaire";
+$lang["items_do_nothing"] = "Ne rien faire";
+$lang["items_edit_fields_you_want_to_update"] = "Modifiez les champs que vous voulez éditer pour TOUS les items sélectionnés";
+$lang["items_edit_multiple_items"] = "Édition Multiple d\'Items";
+$lang["items_error_adding_updating"] = "Erreur d\'ajout/éditionn";
+$lang["items_error_updating_multiple"] = "Erreur d\'édition";
+$lang["items_excel_import_failed"] = "Echec Import d\'Excel";
+$lang["items_generate_barcodes"] = "Générer des Coddes-barre";
+$lang["items_image"] = "Avatar";
+$lang["items_info_provided_by"] = "Infos fournies by";
+$lang["items_inventory"] = "Inventaire";
+$lang["items_inventory_comments"] = "Commentaires";
+$lang["items_is_deleted"] = "Supprimé";
+$lang["items_is_serialized"] = "Item a un Numéro de Série";
+$lang["items_item"] = "Item";
+$lang["items_item_number"] = "UPC/EAN/ISBN";
+$lang["items_item_number_duplicate"] = "The item number is already present in the database";
+$lang["items_location"] = "Location";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "Items à Stock Faible";
+$lang["items_manually_editing_of_quantity"] = "Édition Manuelle de Quantité";
+$lang["items_must_select_item_for_barcode"] = "Vous devez sélectionner au moins un item";
+$lang["items_name"] = "Nom";
+$lang["items_name_required"] = "Le Nom est requis";
+$lang["items_new"] = "Nouvel Item";
+$lang["items_no_description_items"] = "Items sans Description";
+$lang["items_no_items_to_display"] = "Aucun Items à afficher";
+$lang["items_none"] = "Aucun";
+$lang["items_none_selected"] = "Vous n\\\'avez sélectionné aucun élément";
+$lang["items_number_information"] = "Numbéro d\'Item";
+$lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
+$lang["items_one_or_multiple"] = "item(s)";
+$lang["items_quantity"] = "Quantité";
+$lang["items_quantity_number"] = "La Quantité doit etre un nombre";
+$lang["items_quantity_required"] = "La Quantité est requise";
+$lang["items_receiving_quantity"] = "Receiving quantity";
+$lang["items_reorder_level"] = "Niveau de Réapprovisionnement";
+$lang["items_reorder_level_number"] = "Le Niveaux de Réapprovisionnement doit etre un nombre";
+$lang["items_reorder_level_required"] = "Le Niveaux de Réapprovisionnement est requis";
+$lang["items_retrive_item_info"] = "Récupérer Informations";
+$lang["items_sales_tax_1"] = "Taxe Vente";
+$lang["items_sales_tax_2"] = "Taxe Vente 2";
+$lang["items_search_custom_items"] = "Rechercher dans les Champs Choisis";
+$lang["items_serialized_items"] = "Items Serialisés";
+$lang["items_stock_location"] = "Stock location";
+$lang["items_successful_adding"] = "Ajout enregistré";
+$lang["items_successful_bulk_edit"] = "Édition réussie";
+$lang["items_successful_deleted"] = "Suppréssion réussie";
+$lang["items_successful_updating"] = "Édition enregistrée";
+$lang["items_supplier"] = "Fournisseur";
+$lang["items_tax_1"] = "Taxe 1";
+$lang["items_tax_2"] = "Taxe 2";
+$lang["items_tax_percent"] = "Pourcentage d\'imposition";
+$lang["items_tax_percent_required"] = "Le Pourcentage d\'imposition est requis";
+$lang["items_tax_percents"] = "Pourcents(s) de taxes";
+$lang["items_unit_price"] = "Prix au Détail";
+$lang["items_unit_price_number"] = "Le Prix unitaire doit etre un nombre";
+$lang["items_unit_price_required"] = "Le Prix de revente est requis";
+$lang["items_upc_database"] = "Base de Données UPC";
+$lang["items_update"] = "Éditer Item";
+$lang["items_use_inventory_menu"] = "Utiliser Menu Inv.";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/login_lang.php opensourcepos/application/language/fr/login_lang.php
--- pos-prod/application/language/fr/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/login_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login']='Login';
-$lang['login_username']='Nom d\'utilisateur';
-$lang['login_password']='Mot de passe';
-$lang['login_go']='Lancer';
-$lang['login_invalid_username_and_password']='Entrée invalide';
-$lang['login_welcome_message']='Bienvenue au Système Open Source Point of Sale. Pour continuer, veuiller entrer votre nom d\'utilisateur et votre mot de passe ci-dessous.';
-?>
+
+$lang["login_go"] = "Lancer";
+$lang["login_invalid_username_and_password"] = "Entrée invalide";
+$lang["login_login"] = "Login";
+$lang["login_password"] = "Mot de passe";
+$lang["login_username"] = "Nom d\'utilisateur";
+$lang["login_welcome_message"] = "Bienvenue au Système Open Source Point of Sale. Pour continuer, veuiller entrer votre nom d\'utilisateur et votre mot de passe ci-dessous.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/module_lang.php opensourcepos/application/language/fr/module_lang.php
--- pos-prod/application/language/fr/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/module_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home']='Accueil';
 
-$lang['module_customers']='Clients';
-$lang['module_customers_desc']='Ajouter, Éditer, Supprimer, et Chercher des clients';
-
-$lang['module_suppliers']='Fournisseurs';
-$lang['module_suppliers_desc']='Ajouter, Éditer, Supprimer, et Chercher des fournisseurs';
-
-$lang['module_employees']='Employés';
-$lang['module_employees_desc']='Ajouter, Éditer, Supprimer, et Chercher des employés';
-
-$lang['module_sales']='Ventes';
-$lang['module_sales_desc']='Ventes et chiffre d\'affaire';
-
-$lang['module_reports']='Rapports';
-$lang['module_reports_desc']='Visualiser et générer des rapports';
-
-$lang['module_items']='Items vendus';
-$lang['module_items_desc']='Ajouter, Éditer, Supprimer, et Chercher des items en vente';
-
-$lang['module_config']='Paramètres';
-$lang['module_config_desc']='Paramètres de la boutique';
-
-$lang['module_receivings']='Entrées Stock';
-$lang['module_receivings_desc']='Gérer les ordres d\'achat';
-
-$lang['module_giftcards']='Cartes Cadeau';
-$lang['module_giftcards_desc']='Ajouter, Éditer, Supprimer, et Chercher des cartes cadeau';
-
-$lang['module_item_kits']='Items vendus en Kits';
-$lang['module_item_kits_desc']='Ajouter, Éditer, Supprimer, et Chercher des items vendus en kits';
-
-?>
+$lang["module_config"] = "Paramètres";
+$lang["module_config_desc"] = "Paramètres de la boutique";
+$lang["module_customers"] = "Clients";
+$lang["module_customers_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des clients";
+$lang["module_employees"] = "Employés";
+$lang["module_employees_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des employés";
+$lang["module_giftcards"] = "Cartes Cadeau";
+$lang["module_giftcards_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des cartes cadeau";
+$lang["module_home"] = "Accueil";
+$lang["module_item_kits"] = "Items vendus en Kits";
+$lang["module_item_kits_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des items vendus en kits";
+$lang["module_items"] = "Items vendus";
+$lang["module_items_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des items en vente";
+$lang["module_receivings"] = "Entrées Stock";
+$lang["module_receivings_desc"] = "Gérer les ordres d\'achat";
+$lang["module_reports"] = "Rapports";
+$lang["module_reports_desc"] = "Visualiser et générer des rapports";
+$lang["module_sales"] = "Ventes";
+$lang["module_sales_desc"] = "Ventes et chiffre d\'affaire";
+$lang["module_suppliers"] = "Fournisseurs";
+$lang["module_suppliers_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des fournisseurs";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/receivings_lang.php opensourcepos/application/language/fr/receivings_lang.php
--- pos-prod/application/language/fr/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/receivings_lang.php	2016-05-23 15:32:31.904839410 -0700
@@ -1,26 +1,51 @@
 <?php
-$lang['recvs_register'] = 'Items Receiving';
-$lang['recvs_mode'] = 'Receiving Mode';
-$lang['recvs_receiving'] = 'Receive';
-$lang['recvs_return'] = 'Return';
-$lang['recvs_total'] = 'Total';
-$lang['recvs_cost'] = 'Cout';
-$lang['recvs_quantity'] = 'Qté.';
-$lang['recvs_discount'] = 'Remise %';
-$lang['recvs_edit'] = 'Éditer';
-$lang['recvs_new_supplier'] = 'Nouveau Fournisseur';
-$lang['recvs_supplier'] = 'Fournisseur';
-$lang['recvs_select_supplier'] = 'Choisir Fournisseur (Facultatif)';
-$lang['recvs_start_typing_supplier_name'] = 'Commencez à saisir le nom du fournisseur...';
-$lang['recvs_unable_to_add_item'] = 'Impossible d\'ajouter l\'item aux arrivages';
-$lang['recvs_error_editing_item'] = 'Erreur d\'édition';
-$lang['recvs_receipt'] = 'Recu des Arrivages';
-$lang['recvs_complete_receiving'] = 'Fin';
-$lang['recvs_confirm_finish_receiving'] = 'Etes vous sûr(e) de vouloir valider cet arrivage (Irréversible)?';
-$lang['recvs_confirm_cancel_receiving'] = 'Etes vous sûr(e) de vouloir annuler cet arrivage?';
-$lang['recvs_find_or_scan_item'] = 'Chercher/Scanner Élément';
-$lang['recvs_find_or_scan_item_or_receipt'] = 'Chercher Elément OU Recu';
-$lang['recvs_id'] = 'ID Arrivage';
-$lang['recvs_item_name'] = 'Nom d\'Élément';
-$lang['receivings_transaction_failed'] = 'Échec d\'opération d\'arrivage';
-?>
+
+$lang["receivings_transaction_failed"] = "Échec d'opération d'arrivage";
+$lang["recvs_basic_information"] = "";
+$lang["recvs_cancel_receiving"] = "";
+$lang["recvs_cannot_be_deleted"] = "";
+$lang["recvs_comments"] = "";
+$lang["recvs_complete_receiving"] = "Fin";
+$lang["recvs_confirm_cancel_receiving"] = "Etes vous sûr(e) de vouloir annuler cet arrivage?";
+$lang["recvs_confirm_finish_receiving"] = "Etes vous sûr(e) de vouloir valider cet arrivage (Irréversible)?";
+$lang["recvs_cost"] = "Cout";
+$lang["recvs_date"] = "";
+$lang["recvs_date_required"] = "";
+$lang["recvs_date_type"] = "";
+$lang["recvs_delete_confirmation"] = "";
+$lang["recvs_delete_entire_sale"] = "Delete entire sale";
+$lang["recvs_discount"] = "Remise %";
+$lang["recvs_edit"] = "Éditer";
+$lang["recvs_edit_sale"] = "Edit Receiving";
+$lang["recvs_employee"] = "Employee";
+$lang["recvs_error_editing_item"] = "Erreur d'édition";
+$lang["recvs_error_requisition"] = "";
+$lang["recvs_find_or_scan_item"] = "Chercher/Scanner Élément";
+$lang["recvs_find_or_scan_item_or_receipt"] = "Chercher Elément OU Recu";
+$lang["recvs_id"] = "ID Arrivage";
+$lang["recvs_invoice_enable"] = "Create Invoice";
+$lang["recvs_invoice_number"] = "";
+$lang["recvs_invoice_number_duplicate"] = "";
+$lang["recvs_item_name"] = "Nom d'Élément";
+$lang["recvs_mode"] = "Receiving Mode";
+$lang["recvs_new_supplier"] = "Nouveau Fournisseur";
+$lang["recvs_one_or_multiple"] = "";
+$lang["recvs_print_after_sale"] = "Imprimer un recu après vente";
+$lang["recvs_quantity"] = "Qté.";
+$lang["recvs_receipt"] = "Recu des Arrivages";
+$lang["recvs_receipt_number"] = "";
+$lang["recvs_receiving"] = "Receive";
+$lang["recvs_register"] = "Items Receiving";
+$lang["recvs_requisition"] = "";
+$lang["recvs_return"] = "Return";
+$lang["recvs_select_supplier"] = "Choisir Fournisseur (Facultatif)";
+$lang["recvs_start_typing_supplier_name"] = "Commencez à saisir le nom du fournisseur...";
+$lang["recvs_stock_destination"] = "Stock destination";
+$lang["recvs_stock_locaiton"] = "Stock location";
+$lang["recvs_stock_source"] = "Stock source";
+$lang["recvs_successfully_deleted"] = "You have successfully deleted";
+$lang["recvs_successfully_updated"] = "Receiving successfully updated";
+$lang["recvs_supplier"] = "Fournisseur";
+$lang["recvs_total"] = "Total";
+$lang["recvs_unable_to_add_item"] = "Impossible d'ajouter l'item aux arrivages";
+$lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/reports_lang.php opensourcepos/application/language/fr/reports_lang.php
--- pos-prod/application/language/fr/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/reports_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,90 +1,108 @@
 <?php
-$lang['reports_reports'] = 'Rapports';
-$lang['reports_report'] = 'Rapport';
-$lang['reports_welcome_message'] = 'Bienvenue à la page des rapports. Veuillez sélectionner un rapport à visualiser.';
-$lang['reports_sales_summary_report'] = 'Rapport: Résumé des Ventes';
-$lang['reports_categories_summary_report'] = 'Rapport: Résumé des Catégories';
-$lang['reports_customers_summary_report'] = 'Rapport: Résumé Clientelle';
-$lang['reports_suppliers_summary_report'] = 'Rapport: Résumé Fournisseurs';
-$lang['reports_items_summary_report'] = 'Rapport: Résumé Items';
-$lang['reports_employees_summary_report'] = 'Rapport: Résumé Employés';
-$lang['reports_taxes_summary_report'] = 'Rapport: Résumé Taxes';
-$lang['reports_date'] = 'Date';
-$lang['reports_name'] = 'Nom';
-$lang['reports_quantity_purchased'] = 'Quantité Achetée';
-$lang['reports_sale_id'] = 'ID Vente';
-$lang['reports_items_purchased'] = 'Éléments Achetés';
-$lang['reports_sold_by'] = 'Vendu par';
-$lang['reports_sold_to'] = 'Vendu à';
-$lang['reports_category'] = 'Catégorie';
-$lang['reports_customer'] = 'Client';
-$lang['reports_employee'] = 'Employé';
-$lang['reports_item'] = 'Item';
-$lang['reports_items'] = 'Items';
-$lang['reports_supplier'] = 'Fournisseur';
-$lang['reports_employees'] = 'Employés';
-$lang['reports_subtotal'] = 'Sous-total';
-$lang['reports_total'] = 'Total';
-$lang['reports_tax'] = 'Taxe';
-$lang['reports_profit'] = 'Bénéfice';
-$lang['reports_report_input'] = 'Rapport Entrées';
-$lang['reports_discount'] = 'Remise';
-$lang['reports_type'] = 'Type';
-$lang['reports_discount'] = 'Une remise supérieure à ';
-$lang['reports_date_range'] = 'Plage de dates';
-$lang['reports_today'] = 'Aujourd\'hui';
-$lang['reports_yesterday'] = 'Hier';
-$lang['reports_last_7'] = 'Ces 7 derniers jours';
-$lang['reports_this_month'] = 'Ce mois';
-$lang['reports_last_month'] = 'Le mois dernier';
-$lang['reports_this_year'] = 'Cette Année';
-$lang['reports_last_year'] = 'L\'année passée';
-$lang['reports_all_time'] = 'Depuis le début';
-$lang['reports_detailed_sales_report'] = 'Rapport de Ventes Détaillé';
-$lang['reports_comments'] = 'Commentaires';
-$lang['reports_discount'] = 'Remise';
-$lang['reports_payment_type'] = 'Type Paiement';
-$lang['reports_sales'] = 'Ventes';
-$lang['reports_categories'] = 'Catégories';
-$lang['reports_customers'] = 'Clients';
-$lang['reports_suppliers'] = 'Fournisseurs';
-$lang['reports_items'] = 'Items';
-$lang['reports_employees'] = 'Employés';
-$lang['reports_taxes'] = 'Taxes';
-$lang['reports_customer'] = 'Client';
-$lang['reports_employee'] = 'Employé';
-$lang['reports_tax_percent'] = 'Pourcentage d\'imposition';
-$lang['reports_quantity_purchased'] = 'Quantité Achetée';
-$lang['reports_serial_number'] = '# Série';
-$lang['reports_description'] = 'Description';
-$lang['reports_date'] = 'Date';
-$lang['reports_sales_amount'] = 'Somme de ventes';
-$lang['reports_revenue'] = 'Revenu';
-$lang['reports_discounts'] = 'Remises';
-$lang['reports_discounts_summary_report'] = 'Rapport: Résumé des Remises';
-$lang['reports_discount_percent'] = 'Pourcentage Remises';
-$lang['reports_count'] = 'Décompte';
-$lang['reports_summary_reports'] = 'Rapports de Résumés';
-$lang['reports_graphical_reports'] = 'Rapports Graphiques';
-$lang['reports_detailed_reports'] = 'Rapports Détaillés';
-$lang['reports_inventory_reports'] = 'Rapports d\'Inventaire';
-$lang['reports_low_inventory'] = 'Niveau d\'Inventaire Bas';
-$lang['reports_inventory_summary'] = ' Résumé d\'Inventaire';
-$lang['reports_item_number'] = 'Numéro d\'Item';
-$lang['reports_reorder_level'] = 'Seuil de Réapprovisionnement';
-$lang['reports_low_inventory_report'] = 'Rapport de Niveau d\'Inventaire Bas';
-$lang['reports_item_name'] = 'Nom d\'Item';
-$lang['reports_inventory_summary_report'] = 'Rapport: Résumé d\'Inventaire';
-$lang['reports_payment_type'] = 'Type Paiement';
-$lang['reports_payments_summary_report'] = 'Rapport: Résumé des Paiements';
-$lang['reports_payments'] = 'Paiements';
-$lang['reports_receivings'] = 'Arrivages';
-$lang['reports_received_by'] = 'Recu par';
-$lang['reports_supplied_by'] = 'Fournit par';
-$lang['reports_items_received'] = 'Éléments Arrivés';
-$lang['reports_detailed_receivings_report'] = 'Rapport d\'Arrivages Détaillé';
-$lang['reports_sale_type'] = 'Type Vente';
-$lang['reports_all'] = 'Tous';
-$lang['reports_returns'] = 'Reprises';
-$lang['reports_discount'] = 'Remises';
-?>
+
+$lang["reports_all"] = "Tous";
+$lang["reports_all_time"] = "Depuis le début";
+$lang["reports_categories"] = "Catégories";
+$lang["reports_categories_summary_report"] = "Rapport: Résumé des Catégories";
+$lang["reports_category"] = "Catégorie";
+$lang["reports_comments"] = "Commentaires";
+$lang["reports_count"] = "Décompte";
+$lang["reports_customer"] = "Client";
+$lang["reports_customers"] = "Clients";
+$lang["reports_customers_summary_report"] = "Rapport: Résumé Clientelle";
+$lang["reports_date"] = "Date";
+$lang["reports_date_range"] = "Plage de dates";
+$lang["reports_description"] = "Description";
+$lang["reports_detailed_receivings_report"] = "Rapport d\'Arrivages Détaillé";
+$lang["reports_detailed_reports"] = "Rapports Détaillés";
+$lang["reports_detailed_requisition_report"] = "";
+$lang["reports_detailed_sales_report"] = "Rapport de Ventes Détaillé";
+$lang["reports_discount"] = "Remise";
+$lang["reports_discount_percent"] = "Pourcentage Remises";
+$lang["reports_discounts"] = "Remises";
+$lang["reports_discounts_summary_report"] = "Rapport: Résumé des Remises";
+$lang["reports_employee"] = "Employé";
+$lang["reports_employees"] = "Employés";
+$lang["reports_employees_summary_report"] = "Rapport: Résumé Employés";
+$lang["reports_graphical_reports"] = "Rapports Graphiques";
+$lang["reports_inventory"] = "";
+$lang["reports_inventory_low"] = "Niveau d\'Inventaire Bas";
+$lang["reports_inventory_low_report"] = "Rapport de Niveau d\'Inventaire Bas";
+$lang["reports_inventory_reports"] = "Rapports d\'Inventaire";
+$lang["reports_inventory_summary"] = " Résumé d\'Inventaire";
+$lang["reports_inventory_summary_report"] = "Rapport: Résumé d\'Inventaire";
+$lang["reports_item"] = "Item";
+$lang["reports_item_name"] = "Nom d\'Item";
+$lang["reports_item_number"] = "Numéro d\'Item";
+$lang["reports_items"] = "Items";
+$lang["reports_items_purchased"] = "Éléments Achetés";
+$lang["reports_items_received"] = "Éléments Arrivés";
+$lang["reports_items_summary_report"] = "Rapport: Résumé Items";
+$lang["reports_last_7"] = "Ces 7 derniers jours";
+$lang["reports_last_month"] = "Le mois dernier";
+$lang["reports_last_year"] = "L\'année passée";
+$lang["reports_low_inventory"] = "";
+$lang["reports_low_inventory_report"] = "";
+$lang["reports_name"] = "Nom";
+$lang["reports_payment_type"] = "Type Paiement";
+$lang["reports_payments"] = "Paiements";
+$lang["reports_payments_summary_report"] = "Rapport: Résumé des Paiements";
+$lang["reports_profit"] = "Bénéfice";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "Quantité Achetée";
+$lang["reports_received_by"] = "Recu par";
+$lang["reports_receiving_id"] = "";
+$lang["reports_receiving_type"] = "";
+$lang["reports_receivings"] = "Arrivages";
+$lang["reports_reorder_level"] = "Seuil de Réapprovisionnement";
+$lang["reports_report"] = "Rapport";
+$lang["reports_report_input"] = "Rapport Entrées";
+$lang["reports_reports"] = "Rapports";
+$lang["reports_requisition"] = "";
+$lang["reports_requisition_by"] = "";
+$lang["reports_requisition_id"] = "";
+$lang["reports_requisition_item"] = "";
+$lang["reports_requisition_item_quantity"] = "";
+$lang["reports_requisition_related_item"] = "";
+$lang["reports_requisition_related_item_total_quantity"] = "";
+$lang["reports_requisition_related_item_unit_quantity"] = "";
+$lang["reports_requisitions"] = "";
+$lang["reports_returns"] = "Reprises";
+$lang["reports_revenue"] = "Revenu";
+$lang["reports_sale_id"] = "ID Vente";
+$lang["reports_sale_type"] = "Type Vente";
+$lang["reports_sales"] = "Ventes";
+$lang["reports_sales_amount"] = "Somme de ventes";
+$lang["reports_sales_summary_report"] = "Rapport: Résumé des Ventes";
+$lang["reports_serial_number"] = "# Série";
+$lang["reports_sold_by"] = "Vendu par";
+$lang["reports_sold_to"] = "Vendu à";
+$lang["reports_stock_location"] = "";
+$lang["reports_subtotal"] = "Sous-total";
+$lang["reports_summary_reports"] = "Rapports de Résumés";
+$lang["reports_supplied_by"] = "Fournit par";
+$lang["reports_supplier"] = "Fournisseur";
+$lang["reports_suppliers"] = "Fournisseurs";
+$lang["reports_suppliers_summary_report"] = "Rapport: Résumé Fournisseurs";
+$lang["reports_tax"] = "Taxe";
+$lang["reports_tax_percent"] = "Pourcentage d\'imposition";
+$lang["reports_taxes"] = "Taxes";
+$lang["reports_taxes_summary_report"] = "Rapport: Résumé Taxes";
+$lang["reports_this_month"] = "Ce mois";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "Cette Année";
+$lang["reports_today"] = "Aujourd\'hui";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "Total";
+$lang["reports_type"] = "Type";
+$lang["reports_welcome_message"] = "Bienvenue à la page des rapports. Veuillez sélectionner un rapport à visualiser.";
+$lang["reports_yesterday"] = "Hier";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "Prix de Gros";
+$lang["reports_unit_price"] = "Prix au Détail";
+$lang["reports_sub_total_value"] = "Sous-Total";
+$lang["reports_total_inventory_value"] = "Total Inventory Value";
+$lang["reports_zero_and_less"] = "Zero and less";
+$lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/sales_lang.php opensourcepos/application/language/fr/sales_lang.php
--- pos-prod/application/language/fr/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/sales_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,87 +1,117 @@
 <?php
-$lang['sales_giftcard_number'] = 'Numéro de Carte cadeau';
-$lang['sales_giftcard'] = 'Carte Cadeau';
-$lang['sales_register'] = 'Registre des Ventes';
-$lang['sales_mode'] = 'Mode d\'Enregistrement';
-$lang['sales_new_item'] = 'Nouvel Élément';
-$lang['sales_item_name'] = 'Nom';
-$lang['sales_item_number'] = '# Item';
-$lang['sales_new_customer'] = 'Nouveau Client';
-$lang['sales_customer'] = 'Client';
-$lang['sales_no_items_in_cart'] = 'Il n\'y a rien dans votre panier';
-$lang['sales_total'] = 'Total';
-$lang['sales_tax_percent'] = '% Taxe';
-$lang['sales_price'] = 'Prix';
-$lang['sales_quantity'] = 'Qté.';
-$lang['sales_discount'] = '% Remise';
-$lang['sales_edit'] = 'Éditer';
-$lang['sales_payment'] = 'Type Paiement';
-$lang['sales_edit_item'] = 'Éditer Item';
-$lang['sales_find_or_scan_item'] = 'Trouver/Scanner Item';
-$lang['sales_find_or_scan_item_or_receipt'] = 'Trouver/Scanner Item OU Recu';
-$lang['sales_select_customer'] = 'Choisir Client (Facultatif)';
-$lang['sales_start_typing_item_name'] = 'Commencez à saisir le nom de l\'item ou scannez le code-barre...';
-$lang['sales_start_typing_customer_name'] = 'Commencez à saisir le nom du client...';
-$lang['sales_sub_total'] = 'Sous-Total';
-$lang['sales_tax'] = 'Taxe';
-$lang['sales_comment'] = 'Commentaire';
-$lang['sales_unable_to_add_item'] = 'Erreur d\'ajout à la vente';
-$lang['sales_sale_for_customer'] = 'Client:';
-$lang['sales_remove_customer'] = 'Enlever Client';
-$lang['sales_error_editing_item'] = 'Érreur lors de l\'édition';
-$lang['sales_complete_sale'] = 'Finaliser la Vente';
-$lang['sales_cancel_sale'] = 'Annuler la Vente';
-$lang['sales_add_payment'] = 'Ajouter Paiement';
-$lang['sales_receipt'] = 'Recu de Ventes';
-$lang['sales_receipt_number']='# Caisse';
-$lang['sales_id'] = 'ID Vente';
-$lang['sales_sale'] = 'Vente';
-$lang['sales_return'] = 'Reprise';
-$lang['sales_confirm_finish_sale'] = 'Etes vous sûr(e) de vouloir enregistrer cette vente? Cette opération est irréversible.';
-$lang['sales_confirm_cancel_sale'] = 'Etes vous sûr(e) de vouloir annuler cette vente?';
-$lang['sales_cash'] = 'Cash';
-$lang['sales_check'] = 'Cheque';
-$lang['sales_debit'] = 'Carte Débit';
-$lang['sales_credit'] = 'Carte de Crédit';
-$lang['sales_giftcard'] = 'Carte Cadeau';
-$lang['sales_amount_tendered'] = 'Somme';
-$lang['sales_change_due'] = 'Reste';
-$lang['sales_payment_not_cover_total'] = 'Le Paiement ne couvre pas le Total';
-$lang['sales_transaction_failed'] = 'Échec de Transaction de vente';
-$lang['sales_must_enter_numeric'] = 'Veuillez entrer une valeur numérique pour la somme';
-$lang['sales_must_enter_numeric_giftcard'] = 'Veuillez entrer une valeur numérique pour le numéro de carte';
-$lang['sales_serial'] = 'Serie';
-$lang['sales_description_abbrv'] = 'Desc';
-$lang['sales_item_out_of_stock'] = 'Stock épuisé';
-$lang['sales_item_insufficient_of_stock'] = 'Stock top faible';
-$lang['sales_quantity_less_than_zero'] = 'Avertissement, Quantité Demandée Insuffisante. Vous pouvez accomplir la ventre, mais veuillez vérifier votre inventaire';
-$lang['sales_successfully_updated'] = 'Vente éditée';
-$lang['sales_unsuccessfully_updated'] = 'Échec d\'édition';
-$lang['sales_edit_sale'] = 'Éditer Vente';
-$lang['sales_employee'] = 'Employé';
-$lang['sales_successfully_deleted'] = 'Vente supprimée';
-$lang['sales_unsuccessfully_deleted'] = 'Échec de suppression';
-$lang['sales_delete_entire_sale'] = 'Supprimer Vente';
-$lang['sales_delete_confirmation'] = 'Etes vous sûr(e) de vouloir supprimer cette vente? Cette opération est irréversible.';
-$lang['sales_date'] = 'Date de Vente';
-$lang['sales_delete_successful'] = 'Suppréssion réussie';
-$lang['sales_delete_unsuccessful'] = 'Échec de suppression';
-$lang['sales_suspend_sale'] = 'Suspendre la Vente';
-$lang['sales_confirm_suspend_sale'] = 'Etes vous sûr(e) de vouloir suspendre cette vente?';
-$lang['sales_suspended_sales'] = 'Ventes Suspendues';
-$lang['sales_suspended_sale_id'] = 'ID';
-$lang['sales_date'] = 'Date';
-$lang['sales_comments'] = 'Commentaires';
-$lang['sales_unsuspend_and_delete'] = '';
-$lang['sales_unsuspend'] = 'Débloquer';
-$lang['sales_successfully_suspended_sale'] = 'Vente suspendue';
-$lang['sales_email_receipt'] = 'Recu par E-Mail';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Remise';
-$lang['sales_sale_time']='Time';
-$lang['sales_payments_total'] = 'Total Paiments';
-$lang['sales_amount_due'] = 'Somme Due';
-$lang['sales_payment_type'] = "Type";
-$lang['sales_payment_amount'] = "Somme";
-$lang['sales_basic_information']='Information de Vente';
-?>
+
+$lang["sales_add_payment"] = "Ajouter Paiement";
+$lang["sales_amount_due"] = "Somme Due";
+$lang["sales_amount_tendered"] = "Somme";
+$lang["sales_basic_information"] = "Information de Vente";
+$lang["sales_cancel_sale"] = "Annuler la Vente";
+$lang["sales_cash"] = "Cash";
+$lang["sales_change_due"] = "Reste";
+$lang["sales_check"] = "Cheque";
+$lang["sales_check_balance"] = "Check remainder";
+$lang["sales_comment"] = "Commentaire";
+$lang["sales_comments"] = "Commentaires";
+$lang["sales_complete_sale"] = "Finaliser la Vente";
+$lang["sales_confirm_cancel_sale"] = "Etes vous sûr(e) de vouloir annuler cette vente?";
+$lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
+$lang["sales_confirm_finish_sale"] = "Etes vous sûr(e) de vouloir enregistrer cette vente? Cette opération est irréversible.";
+$lang["sales_confirm_suspend_sale"] = "Etes vous sûr(e) de vouloir suspendre cette vente?";
+$lang["sales_credit"] = "Carte de Crédit";
+$lang["sales_customer"] = "Client";
+$lang["sales_date"] = "Date de Vente";
+$lang["sales_date_required"] = "A correct date needs to be filled in";
+$lang["sales_date_type"] = "Date field is required";
+$lang["sales_debit"] = "Carte Débit";
+$lang["sales_delete_confirmation"] = "Etes vous sûr(e) de vouloir supprimer cette vente? Cette opération est irréversible.";
+$lang["sales_delete_entire_sale"] = "Supprimer Vente";
+$lang["sales_delete_successful"] = "Suppréssion réussie";
+$lang["sales_delete_unsuccessful"] = "Échec de suppression";
+$lang["sales_description_abbrv"] = "Desc";
+$lang["sales_discount"] = "% Remise";
+$lang["sales_discount_included"] = "% Discount";
+$lang["sales_discount"] = "Discount";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "Éditer";
+$lang["sales_edit_item"] = "Éditer Item";
+$lang["sales_edit_sale"] = "Éditer Vente";
+$lang["sales_email_receipt"] = "Recu par E-Mail";
+$lang["sales_employee"] = "Employé";
+$lang["sales_error_editing_item"] = "Érreur lors de l\'édition";
+$lang["sales_find_or_scan_item"] = "Trouver/Scanner Item";
+$lang["sales_find_or_scan_item_or_receipt"] = "Trouver/Scanner Item OU Recu";
+$lang["sales_giftcard"] = "Carte Cadeau";
+$lang["sales_giftcard_balance"] = "Giftcard Balance";
+$lang["sales_giftcard_number"] = "Numéro de Carte cadeau";
+$lang["sales_id"] = "ID Vente";
+$lang["sales_invoice"] = "Invoice";
+$lang["sales_invoice_confirm"] = "This invoice will be sent to";
+$lang["sales_invoice_enable"] = "Create Invoice";
+$lang["sales_invoice_filter"] = "Invoices";
+$lang["sales_cash_filter"] = "Cash";
+$lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
+$lang["sales_invoice_number"] = "Invoice #";
+$lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
+$lang["sales_invoice_sent"] = "Invoice sent to";
+$lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
+$lang["sales_invoice_update"] = "Recount";
+$lang["sales_item_insufficient_of_stock"] = "Stock top faible";
+$lang["sales_item_name"] = "Nom";
+$lang["sales_item_number"] = "# Item";
+$lang["sales_item_out_of_stock"] = "Stock épuisé";
+$lang["sales_mode"] = "Mode d\'Enregistrement";
+$lang["sales_must_enter_numeric"] = "Veuillez entrer une valeur numérique pour la somme";
+$lang["sales_must_enter_numeric_giftcard"] = "Veuillez entrer une valeur numérique pour le numéro de carte";
+$lang["sales_new_customer"] = "Nouveau Client";
+$lang["sales_new_item"] = "Nouvel Élément";
+$lang["sales_no_description"] = "None";
+$lang["sales_no_filter"] = "All";
+$lang["sales_no_items_in_cart"] = "Il n\'y a rien dans votre panier";
+$lang["sales_no_sales_to_display"] = "No sales to display";
+$lang["sales_one_or_multiple"] = "";
+$lang["sales_takings"] = "Takings";
+$lang["sales_payment"] = "Type Paiement";
+$lang["sales_payment_amount"] = "Somme";
+$lang["sales_payment_not_cover_total"] = "Le Paiement ne couvre pas le Total";
+$lang["sales_payment_type"] = "Type";
+$lang["sales_payments_total"] = "Total Paiments";
+$lang["sales_price"] = "Prix";
+$lang["sales_print_after_sale"] = "Imprimer un recu après vente";
+$lang["sales_quantity"] = "Qté.";
+$lang["sales_quantity_less_than_zero"] = "Avertissement, Quantité Demandée Insuffisante. Vous pouvez accomplir la ventre, mais veuillez vérifier votre inventaire";
+$lang["sales_quantity_less_than_reorder_level"] = "Avertissement, Quantité Demandée Insuffisante";
+$lang["sales_receipt"] = "Recu de Ventes";
+$lang["sales_receipt_number"] = "# Caisse";
+$lang["sales_register"] = "Registre des Ventes";
+$lang["sales_remove_customer"] = "Enlever Client";
+$lang["sales_return"] = "Reprise";
+$lang["sales_sale"] = "Vente";
+$lang["sales_sale_for_customer"] = "Client:";
+$lang["sales_sale_time"] = "Time";
+$lang["sales_select_customer"] = "Choisir Client (Facultatif)";
+$lang["sales_send_invoice"] = "Send Invoice";
+$lang["sales_serial"] = "Serie";
+$lang["sales_show_invoice"] = "invoice";
+$lang["sales_show_receipt"] = "receipt";
+$lang["sales_start_typing_customer_name"] = "Commencez à saisir le nom du client...";
+$lang["sales_start_typing_item_name"] = "Commencez à saisir le nom de l\'item ou scannez le code-barre...";
+$lang["sales_stock_location"] = "";
+$lang["sales_sub_total"] = "Sous-Total";
+$lang["sales_successfully_deleted"] = "Vente supprimée";
+$lang["sales_successfully_suspended_sale"] = "Vente suspendue";
+$lang["sales_successfully_updated"] = "Vente éditée";
+$lang["sales_suspend_sale"] = "Suspendre la Vente";
+$lang["sales_suspended_sale_id"] = "ID";
+$lang["sales_suspended_sales"] = "Ventes Suspendues";
+$lang["sales_tax"] = "Taxe";
+$lang["sales_tax_percent"] = "% Taxe";
+$lang["sales_total"] = "Total";
+$lang["sales_total_tax_exclusive"] = "Tax excluded";
+$lang["sales_transaction_failed"] = "Échec de Transaction de vente";
+$lang["sales_unable_to_add_item"] = "Erreur d\'ajout à la vente";
+$lang["sales_unsuccessfully_deleted"] = "Échec de suppression";
+$lang["sales_unsuccessfully_updated"] = "Échec d\'édition";
+$lang["sales_unsuspend"] = "Débloquer";
+$lang["sales_unsuspend_and_delete"] = "";
+$lang["sales_update"] = "Edit Sale";
+$lang["sales_date_range"] = "Plage de dates";
+$lang["sales_none_selected"] = "Vous n\\\'avez sélectionné aucun élément";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/fr/suppliers_lang.php opensourcepos/application/language/fr/suppliers_lang.php
--- pos-prod/application/language/fr/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/fr/suppliers_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new'] = 'Nouveau Fournisseur';
-$lang['suppliers_supplier'] = 'Fournisseur';
-$lang['suppliers_update'] = 'Éditer Fournisseur';
-$lang['suppliers_confirm_delete'] = 'Etes vous sûr(e) de vouloir supprimer ce(s) fournisseur(s)?';
-$lang['suppliers_none_selected'] = 'Vous n\\\'avez pas sélectionné de fournisseur à supprimer';
-$lang['suppliers_error_adding_updating'] = 'Error lors de l\'ajout/suppression de fournisseur';
-$lang['suppliers_successful_adding'] = 'Fournisseur ajouté avec succès';
-$lang['suppliers_successful_updating'] = 'Fournisseur édité avec succès';
-$lang['suppliers_successful_deleted'] = 'Suppression réussie';
-$lang['suppliers_one_or_multiple'] = 'fournisseur(s)';
-$lang['suppliers_cannot_be_deleted'] = 'Impossible de supprimer le(s) fournisseur(s) sélectionné(s). Un ou plusieurs ont des ventes.';
-$lang['suppliers_basic_information'] = 'Informations fournisseur';
-$lang['suppliers_account_number'] = '# Compte';
-$lang['suppliers_company_name'] = 'Nom d\'Entreprise';
-$lang['suppliers_company_name_required'] = 'Le Nom d\'Entreprise est un champ requis';
-?>
+
+$lang["suppliers_account_number"] = "# Compte";
+$lang["suppliers_basic_information"] = "Informations fournisseur";
+$lang["suppliers_cannot_be_deleted"] = "Impossible de supprimer le(s) fournisseur(s) sélectionné(s). Un ou plusieurs ont des ventes.";
+$lang["suppliers_company_name"] = "Nom d\'Entreprise";
+$lang["suppliers_company_name_required"] = "Le Nom d\'Entreprise est un champ requis";
+$lang["suppliers_agency_name"] = "Nom d\'Agence";
+$lang["suppliers_confirm_delete"] = "Etes vous sûr(e) de vouloir supprimer ce(s) fournisseur(s)?";
+$lang["suppliers_error_adding_updating"] = "Error lors de l\'ajout/suppression de fournisseur";
+$lang["suppliers_new"] = "Nouveau Fournisseur";
+$lang["suppliers_none_selected"] = "Vous n\\\'avez pas sélectionné de fournisseur à supprimer";
+$lang["suppliers_one_or_multiple"] = "fournisseur(s)";
+$lang["suppliers_successful_adding"] = "Fournisseur ajouté avec succès";
+$lang["suppliers_successful_deleted"] = "Suppression réussie";
+$lang["suppliers_successful_updating"] = "Fournisseur édité avec succès";
+$lang["suppliers_supplier"] = "Fournisseur";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "Éditer Fournisseur";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/common_lang.php opensourcepos/application/language/id/common_lang.php
--- pos-prod/application/language/id/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/common_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,41 +1,57 @@
 <?php
-$lang['common_common'] = 'Biasa';
-$lang['common_submit'] = 'Kirim';
-$lang['common_or'] = 'ATAU';
-$lang['common_powered_by'] = 'Diberdayakan oleh';
-$lang['common_welcome'] = 'Selamat Datang';
-$lang['common_logout'] = 'Keluar';
-$lang['common_list_of'] = 'Daftar';
-$lang['common_first_name'] = 'Nama Depan';
-$lang['common_last_name'] = 'Nama Belakang';
-$lang['common_email'] = 'E-Mail';
-$lang['common_phone_number'] = 'Telepon';
-$lang['common_address_1'] = 'Alamat 1';
-$lang['common_address_2'] = 'Alamat 2';
-$lang['common_city'] = 'Kota';
-$lang['common_state'] = 'Provinsi';
-$lang['common_zip'] = 'Kode POS';
-$lang['common_country'] = 'Negara';
-$lang['common_comments'] = 'Catatan';
-$lang['common_edit'] = 'Ubah';
-$lang['common_search'] = 'Cari';
-$lang['common_delete'] = 'Hapus';
-$lang['common_remove'] = 'Hapus';
-$lang['common_view_recent_sales'] = 'Lihat Penjualan Terkini';
-$lang['common_you_are_using_ospos'] = 'Anda menggunakan Open Source Point Of Sale Versi';
-$lang['common_please_visit_my'] = 'Silahkan kunjungi';
-$lang['common_website'] = 'Situs';
-$lang['common_fields_required_message'] = 'Bagian yang ditandai warna merah wajib diisi';
-$lang['common_learn_about_project'] = 'Untuk belajar informasi terbaru tentang proyek ini';
-$lang['common_searched_for'] = 'Mencari untuk';
-$lang['common_first_name_required'] = 'Nama depan wajib diisi.';
-$lang['common_last_name_required'] = 'Nama belakang wajib diisi.';
-$lang['common_email_invalid_format'] = 'Format alamat e-mail tidak benar';
-$lang['common_confirm_search'] = 'Anda telah memilih satu atau lebih baris, ini tidak akan lagi dipilih setelah pencarian Anda. Apakah Anda yakin ingin mengirimkan pencarian ini?';
-$lang['common_no_persons_to_display'] = 'Tidak ada orang untuk ditampilkan';
-$lang['common_return_policy'] = 'Kebijakan Retur';
-$lang['common_price'] = 'Harga';
-$lang['common_welcome_message']= 'Selamat Datang, klik modul di bawah ini untuk memulai';
-$lang['common_inv'] = 'Inv';
-$lang['common_det'] = 'Detail';
-?>
+
+$lang["common_address_1"] = "Alamat 1";
+$lang["common_address_2"] = "Alamat 2";
+$lang["common_city"] = "Kota";
+$lang["common_comments"] = "Catatan";
+$lang["common_common"] = "Biasa";
+$lang["common_confirm_search"] = "Anda telah memilih satu atau lebih baris, ini tidak akan lagi dipilih setelah pencarian Anda. Apakah Anda yakin ingin mengirimkan pencarian ini?";
+$lang["common_country"] = "Negara";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "Hapus";
+$lang["common_print"] = "Print";
+$lang["common_det"] = "Detail";
+$lang["common_edit"] = "Ubah";
+$lang["common_email"] = "E-Mail";
+$lang["common_email_invalid_format"] = "Format alamat e-mail tidak benar";
+$lang["common_fields_required_message"] = "Bagian yang ditandai warna merah wajib diisi";
+$lang["common_first_name"] = "Nama Depan";
+$lang["common_first_name_required"] = "Nama depan wajib diisi.";
+$lang["common_first_page"] = "First";
+$lang["common_gender"] = "Gender";
+$lang["common_gender_female"] = "V";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "Persediaan";
+$lang["common_last_name"] = "Nama Belakang";
+$lang["common_last_name_required"] = "Nama belakang wajib diisi.";
+$lang["common_last_page"] = "Last";
+$lang["common_learn_about_project"] = "Untuk belajar informasi terbaru tentang proyek ini";
+$lang["common_list_of"] = "Daftar";
+$lang["common_logout"] = "Keluar";
+$lang["common_new"] = "New";
+$lang["common_no_persons_to_display"] = "Tidak ada orang untuk ditampilkan";
+$lang["common_or"] = "ATAU";
+$lang["common_phone_number"] = "Telepon";
+$lang["common_phone_number_required"] = "Nomer Telepon Wajib Diisi";
+$lang["common_please_visit_my"] = "Silahkan kunjungi";
+$lang["common_powered_by"] = "Diberdayakan oleh";
+$lang["common_price"] = "Harga";
+$lang["common_remove"] = "Hapus";
+$lang["common_return_policy"] = "Kebijakan Retur";
+$lang["common_search"] = "Cari";
+$lang["common_search_options"] = "Search options";
+$lang["common_searched_for"] = "Mencari untuk";
+$lang["common_state"] = "Provinsi";
+$lang["common_submit"] = "Kirim";
+$lang["common_view_recent_sales"] = "Lihat Penjualan Terkini";
+$lang["common_website"] = "Situs";
+$lang["common_welcome"] = "Selamat Datang";
+$lang["common_welcome_message"] = "Selamat Datang, klik modul di bawah ini untuk memulai";
+$lang["common_you_are_using_ospos"] = "Anda menggunakan Open Source Point Of Sale Versi";
+$lang["common_zip"] = "Kode POS";
+$lang["common_import"] = "Import";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/config_lang.php opensourcepos/application/language/id/config_lang.php
--- pos-prod/application/language/id/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/config_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,36 +1,122 @@
 <?php
-$lang['config_info'] = 'Informasi Konfigurasi Toko';
-$lang['config_company'] = 'Nama Perusahaan';
-$lang['config_address'] = 'Alamat Perusahaan';
-$lang['config_phone'] = 'Telepon Perusahaan';
-$lang['config_website'] = 'Situs Perusahaan';
-$lang['config_fax'] = 'Fax';
-$lang['config_default_tax_rate'] = 'Tarif Pajak Biasa%';
-$lang['config_default_tax_rate_1'] = 'Tarif Pajak 1';
-$lang['config_default_tax_rate_2'] = 'Tarif Pajak 2';
-$lang['config_company_required'] = 'Nama Perusahaan wajib diisi';
-$lang['config_address_required'] = 'Alamat Perusahaan wajib diisi';
-$lang['config_phone_required'] = 'Telepon Perusahaan wajib diisi';
-$lang['config_default_tax_rate_required'] = 'Tarif Pajak Biasa wajib diisi';
-$lang['config_default_tax_rate_number'] = 'Tarif Pajak Biasa harus angka';
-$lang['config_company_website_url'] = 'Situs Perusahaan bukan URL yang benar(http://...)';
-$lang['config_saved_successfully'] = 'Konfigurasi berhasil disimpan';
-$lang['config_saved_unsuccessfully'] = 'Konfigurasi tidak berhasil disimpan';
-$lang['config_return_policy_required'] = 'Kebijakan retur wajib diisi';
-$lang['config_print_after_sale'] = 'Cetak Faktur setelah penjualan';
-$lang['config_language'] = 'Bahasa';
-$lang['config_timezone'] = 'Zona Waktu';
-$lang['config_currency_symbol'] = 'Simbol Mata Uang';
-$lang['config_currency_side'] = 'Sisi Kanan'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Custom Field 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Custom Field 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Custom Field 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Custom Field 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Custom Field 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Custom Field 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Custom Field 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Custom Field 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Custom Field 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Custom Field 10'; //GARRISON ADDED 4/21/2013
-$lang['config_tax_included'] = 'Dikenakan Pajak';
-?>
+
+$lang["config_address"] = "Alamat Perusahaan";
+$lang["config_address_required"] = "Alamat Perusahaan wajib diisi";
+$lang["config_backup_button"] = "Backup";
+$lang["config_backup_database"] = "Backup Database";
+$lang["config_barcode_company"] = "Nama Perusahaan";
+$lang["config_barcode_configuration"] = "Barcode Configuration";
+$lang["config_barcode_content"] = "Barcode Content";
+$lang["config_barcode_first_row"] = "Row 7";
+$lang["config_barcode_font"] = "Font";
+$lang["config_barcode_height"] = "Height (px)";
+$lang["config_barcode_id"] = "Item Id/Name";
+$lang["config_barcode_info"] = "Barcode Configuration Information";
+$lang["config_barcode_layout"] = "Barcode Layout";
+$lang["config_barcode_name"] = "Name";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Number in row";
+$lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
+$lang["config_barcode_page_width"] = "Display page width";
+$lang["config_barcode_price"] = "Price";
+$lang["config_barcode_quality"] = "Quality (1-100)";
+$lang["config_barcode_second_row"] = "Row 8";
+$lang["config_barcode_third_row"] = "Row 9";
+$lang["config_barcode_type"] = "Barcode Type";
+$lang["config_barcode_width"] = "Width (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "Nama Perusahaan";
+$lang["config_company_logo"] = "Company Logo";
+$lang["config_company_required"] = "Nama Perusahaan wajib diisi";
+$lang["config_company_website_url"] = "Situs Perusahaan bukan URL yang benar(http://...)";
+$lang["config_currency_side"] = "Sisi Kanan";
+$lang["config_currency_symbol"] = "Simbol Mata Uang";
+$lang["config_custom1"] = "Custom Field 1";
+$lang["config_custom10"] = "Custom Field 10";
+$lang["config_custom2"] = "Custom Field 2";
+$lang["config_custom3"] = "Custom Field 3";
+$lang["config_custom4"] = "Custom Field 4";
+$lang["config_custom5"] = "Custom Field 5";
+$lang["config_custom6"] = "Custom Field 6";
+$lang["config_custom7"] = "Custom Field 7";
+$lang["config_custom8"] = "Custom Field 8";
+$lang["config_custom9"] = "Custom Field 9";
+$lang["config_decimal_point"] = "Titik Desimal";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Default Sales Discount %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "Tarif Pajak Biasa%";
+$lang["config_default_tax_rate_1"] = "Tarif Pajak 1";
+$lang["config_default_tax_rate_2"] = "Tarif Pajak 2";
+$lang["config_default_tax_rate_number"] = "Tarif Pajak Biasa harus angka";
+$lang["config_default_tax_rate_required"] = "Tarif Pajak Biasa wajib diisi";
+$lang["config_fax"] = "Fax";
+$lang["config_general_configuration"] = "General Configuration";
+$lang["config_info"] = "Informasi Konfigurasi Toko";
+$lang["config_invoice_default_comments"] = "Default Invoice Comments";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Invoice Printer";
+$lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
+$lang["config_language"] = "Bahasa";
+$lang["config_lines_per_page"] = "Lines Per Page";
+$lang["config_lines_per_page_number"] = "The lines per page must be a number";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locations";
+$lang["config_location_info"] = "Location Configuration Information";
+$lang["config_logout"] = "Don't you want to make a backup before logging out?";
+$lang["config_number_format"] = "Format Nomor";
+$lang["config_phone"] = "Telepon Perusahaan";
+$lang["config_phone_required"] = "Telepon Perusahaan wajib diisi";
+$lang["config_print_bottom_margin"] = "Margin Bottom";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Margin Left";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Margin Right";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Show Print Dialog";
+$lang["config_print_top_margin"] = "Margin Top";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Settings";
+$lang["config_receipt_info"] = "Receipt Configuration Information";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Show Taxes";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "Format Nota";
+$lang["config_return_policy_required"] = "Kebijakan retur wajib diisi";
+$lang["config_sales_invoice_format"] = "Format Nota";
+$lang["config_saved_successfully"] = "Konfigurasi berhasil disimpan";
+$lang["config_saved_unsuccessfully"] = "Konfigurasi tidak berhasil disimpan";
+$lang["config_show_total_discount"] = "Show total discount";
+$lang["config_stock_location"] = "Lokasi Stock";
+$lang["config_stock_location_duplicate"] = "Please use an unique location name";
+$lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
+$lang["config_stock_location_required"] = "Stock location number is a required field";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "Dikenakan Pajak";
+$lang["config_thousands_separator"] = "Pemisah Ribuan";
+$lang["config_timezone"] = "Zona Waktu";
+$lang["config_use_invoice_template"] = "Use invoice template";
+$lang["config_website"] = "Situs Perusahaan";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/customers_lang.php opensourcepos/application/language/id/customers_lang.php
--- pos-prod/application/language/id/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/customers_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new'] = 'Pelanggan Baru';
-$lang['customers_customer'] = 'Pelanggan';
-$lang['customers_update'] = 'Ubah Pelanggan';
-$lang['customers_confirm_delete'] = 'Apakah Anda yakin ingin menghapus pelanggan yang dipilih?';
-$lang['customers_none_selected'] = 'Anda belum memilih pelanggan untuk dihapus';
-$lang['customers_error_adding_updating'] = 'Menambah / Memperbarui Pelanggan Salah';
-$lang['customers_successful_adding'] = 'Anda telah berhasil menambah pelanggan';
-$lang['customers_successful_updating'] = 'Anda telah berhasil memperbarui pelanggan';
-$lang['customers_successful_deleted'] = 'Anda telah berhasil menghapus pelanggan';
-$lang['customers_one_or_multiple'] = 'pelanggan';
-$lang['customers_cannot_be_deleted'] = 'pelanggan terpilih tidak bisa dihapus; satu atau lebih dari pelanggan yang dipilih memiliki penjualan.';
-$lang['customers_basic_information'] = 'Informasi Pelanggan';
-$lang['customers_account_number'] = 'No.Pelanggan';
-$lang['customers_taxable'] = 'Dapat dikenakan pajak';
-?>
+
+$lang["customers_account_number"] = "No.Pelanggan";
+$lang["customers_account_number_duplicate"] = "This account number is already present in the database";
+$lang["customers_basic_information"] = "Informasi Pelanggan";
+$lang["customers_cannot_be_deleted"] = "pelanggan terpilih tidak bisa dihapus. satu atau lebih dari pelanggan yang dipilih memiliki penjualan.";
+$lang["customers_company_name"] = "Company Name";
+$lang["customers_confirm_delete"] = "Apakah Anda yakin ingin menghapus pelanggan yang dipilih?";
+$lang["customers_customer"] = "Pelanggan";
+$lang["customers_error_adding_updating"] = "Menambah / Memperbarui Pelanggan Salah";
+$lang["customers_new"] = "Pelanggan Baru";
+$lang["customers_none_selected"] = "Anda belum memilih pelanggan untuk dihapus";
+$lang["customers_one_or_multiple"] = "pelanggan";
+$lang["customers_successful_adding"] = "Anda telah berhasil menambah pelanggan";
+$lang["customers_successful_deleted"] = "Anda telah berhasil menghapus pelanggan";
+$lang["customers_successful_updating"] = "Anda telah berhasil memperbarui pelanggan";
+$lang["customers_taxable"] = "Dapat dikenakan pajak";
+$lang["customers_update"] = "Ubah Pelanggan";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/employees_lang.php opensourcepos/application/language/id/employees_lang.php
--- pos-prod/application/language/id/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/employees_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee'] = 'Karyawan';
-$lang['employees_new'] = 'Karyawan Baru';
-$lang['employees_update'] = 'Ubah Karyawan';
-$lang['employees_confirm_delete'] = 'Apakah Anda yakin ingin menghapus karyawan yang dipilih?';
-$lang['employees_none_selected'] = 'Anda belum memilih karyawan untuk menghapus';
-$lang['employees_error_adding_updating'] = 'Kesalahan menambah / memperbarui karyawan';
-$lang['employees_successful_adding'] = 'Anda telah berhasil menambahkan karyawan';
-$lang['employees_successful_updating'] = 'Anda telah berhasil memperbarui karyawan';
-$lang['employees_successful_deleted'] = 'Anda telah berhasil menghapus';
-$lang['employees_one_or_multiple'] = 'Karyawan';
-$lang['employees_cannot_be_deleted'] = 'Karyawan terpilih tidak bisa dihapus; satu atau lebih dari para pekerja telah memproses penjualan atau Anda mencoba untuk menghapus diri Anda sendiri:)';
-$lang['employees_username'] = 'Nama Pengguna';
-$lang['employees_password'] = 'Kata Sandi';
-$lang['employees_repeat_password'] = 'Ulang Kata Sandi';
-$lang['employees_username_required'] = 'Nama Pengguna wajib diisi';
-$lang['employees_username_minlength'] = 'Nama Pengguna minimal 5 huruf';
-$lang['employees_password_required'] = 'Kata Sandi wajib diisi';
-$lang['employees_password_minlength'] = 'Kata Sandi minimal 8 huruf/angka';
-$lang['employees_password_must_match'] = 'Kata Sandi tidak cocok';
-$lang['employees_basic_information'] = 'Informasi Karyawan';
-$lang['employees_login_info'] = 'Info Login Karyawan';
-$lang['employees_permission_info'] = 'Hak Akses Karyawan';
-$lang['employees_permission_desc'] = 'Tandai kotak di bawah ini untuk memberikan akses ke Modul';
-$lang['employees_error_updating_demo_admin'] = 'Anda tidak dapat merubah Demo admin user';
-$lang['employees_error_deleting_demo_admin'] = 'Anda tidak dapat menghapus Demo admin user';
-?>
+
+$lang["employees_basic_information"] = "Informasi Karyawan";
+$lang["employees_cannot_be_deleted"] = "Karyawan terpilih tidak bisa dihapus; satu atau lebih dari para pekerja telah memproses penjualan atau Anda mencoba untuk menghapus diri Anda sendiri:)";
+$lang["employees_confirm_delete"] = "Apakah Anda yakin ingin menghapus karyawan yang dipilih?";
+$lang["employees_employee"] = "Karyawan";
+$lang["employees_error_adding_updating"] = "Kesalahan menambah / memperbarui karyawan";
+$lang["employees_error_deleting_demo_admin"] = "Anda tidak dapat menghapus Demo admin user";
+$lang["employees_error_updating_demo_admin"] = "Anda tidak dapat merubah Demo admin user";
+$lang["employees_login_info"] = "Info Login Karyawan";
+$lang["employees_new"] = "Karyawan Baru";
+$lang["employees_none_selected"] = "Anda belum memilih karyawan untuk menghapus";
+$lang["employees_one_or_multiple"] = "Karyawan";
+$lang["employees_password"] = "Kata Sandi";
+$lang["employees_password_minlength"] = "Kata Sandi minimal 8 huruf/angka";
+$lang["employees_password_must_match"] = "Kata Sandi tidak cocok";
+$lang["employees_password_required"] = "Kata Sandi wajib diisi";
+$lang["employees_permission_desc"] = "Tandai kotak di bawah ini untuk memberikan akses ke Modul";
+$lang["employees_permission_info"] = "Hak Akses Karyawan";
+$lang["employees_repeat_password"] = "Ulang Kata Sandi";
+$lang["employees_successful_adding"] = "Anda telah berhasil menambahkan karyawan";
+$lang["employees_successful_deleted"] = "Anda telah berhasil menghapus";
+$lang["employees_successful_updating"] = "Anda telah berhasil memperbarui karyawan";
+$lang["employees_update"] = "Ubah Karyawan";
+$lang["employees_username"] = "Nama Pengguna";
+$lang["employees_username_minlength"] = "Nama Pengguna minimal 5 huruf";
+$lang["employees_username_required"] = "Nama Pengguna wajib diisi";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/error_lang.php opensourcepos/application/language/id/error_lang.php
--- pos-prod/application/language/id/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/error_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module'] = 'Anda tidak memiliki izin untuk mengakses modul ini';
-$lang['error_unknown'] = 'tidak dikenal';
-?>
+
+$lang["error_no_permission_module"] = "Anda tidak memiliki izin untuk mengakses modul ini";
+$lang["error_unknown"] = "tidak dikenal";
Only in pos-prod/application/language/id: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/giftcards_lang.php opensourcepos/application/language/id/giftcards_lang.php
--- pos-prod/application/language/id/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/giftcards_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = 'Nomor GiftCard';
-$lang['giftcards_card_value'] = 'Nilai';
-$lang['giftcards_basic_information'] = 'Informasi GiftCard';
-$lang['giftcards_number_required'] = 'Nomor GiftCard wajib diisi';
-$lang['giftcards_value_required'] = 'Nilai GiftCard wajib diisi';
-$lang['giftcards_number'] = 'Nomor GiftCard harus angka';
-$lang['giftcards_value'] = 'Nilai GiftCard harus angka';
-$lang['giftcards_person_id'] = 'Nomor Pelanggan';
-$lang['giftcards_retrive_giftcard_info'] = 'Informasi GiftCard';
-$lang['giftcards_description'] = 'Deskripsi';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'Database UPC';
-$lang['giftcards_cannot_find_giftcard'] = 'Informasi GiftCard tidak ditemukan';
-$lang['giftcards_info_provided_by'] = 'Informasi disediakan oleh';
-$lang['giftcards_number_information'] = 'Nomor GiftCard';
-$lang['giftcards_new'] = 'GiftCard Baru';
-$lang['giftcards_update'] = 'Ubah GiftCard';
-$lang['giftcards_giftcard'] = 'GiftCard';
-$lang['giftcards_edit_multiple_giftcards'] = 'Ubah beberapa GiftCard';
-$lang['giftcards_category'] = 'Kategori';
-$lang['giftcards_cost_price'] = 'Harga Pokok';
-$lang['giftcards_unit_price'] = 'Harga Jual';
-$lang['giftcards_tax_1'] = 'Pajak 1';
-$lang['giftcards_tax_2'] = 'Pajak 2';
-$lang['giftcards_sales_tax_1'] = 'Pajak Penjualan';
-$lang['giftcards_sales_tax_2'] = 'Pajak Penjualan';
-$lang['giftcards_tax_percent'] = 'Persen Pajak';
-$lang['giftcards_tax_percents'] = 'Persentase Pajak';
-$lang['giftcards_reorder_level'] = 'Level Pesan Ulang';
-$lang['giftcards_quantity'] = 'Jumlah';
-$lang['giftcards_no_giftcards_to_display'] = 'Tidak ada GiftCard yang ditampilkan';
-$lang['giftcards_bulk_edit'] = 'Ubah Massal';
-$lang['giftcards_confirm_delete'] = 'Apakah anda yakin ingin menghapus GiftCard yang dipilih?';
-$lang['giftcards_none_selected'] = 'Anda belum memilih GiftCard untuk diubah';
-$lang['giftcards_confirm_bulk_edit'] = 'Apakah Anda yakin ingin merubah semua GiftCard yang dipilih?';
-$lang['giftcards_successful_bulk_edit'] = 'Anda telah berhasil memperbarui GiftCard yang dipilih';
-$lang['giftcards_error_updating_multiple'] = 'Kesalahan memperbarui GiftCard';
-$lang['giftcards_edit_fields_you_want_to_update'] = 'Ubah bagian yang ingin Anda edit untuk SEMUA GiftCard yang dipilih';
-$lang['giftcards_error_adding_updating'] = 'Kesalahan ketika menambahkan/memperbaharui GiftCard';
-$lang['giftcards_successful_adding'] = 'GiftCard telah berhasil ditambahkan';
-$lang['giftcards_successful_updating'] = 'GiftCard telah berhasil diperbarui';
-$lang['giftcards_successful_deleted'] = 'GiftCard telah berhasil dihapus';
-$lang['giftcards_one_or_multiple'] = 'GiftCard';
-$lang['giftcards_cannot_be_deleted'] = 'Tidak dapat menghapus GiftCard terpilih, Satu atau lebih GiftCard yang dipilih memiliki Penjualan.';
-$lang['giftcards_none'] = 'Tidak Ada';
-$lang['giftcards_supplier'] = 'Supplier';
-$lang['giftcards_generate_barcodes'] = 'Buat Barcode';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'Anda harus memilih minimal 1 GiftCard untuk membuat Barcode';
-$lang['giftcards_excel_import_failed'] = 'Impor dari Excel import tidak berhasil';
-$lang['giftcards_allow_alt_description'] = 'Deskripsi Alternatif dimungkinkan';
-$lang['giftcards_is_serialized'] = 'GiftCard Memiliki Nomor Serial';
-$lang['giftcards_low_inventory_giftcards'] = 'GiftCard Inventori Rendah';
-$lang['giftcards_serialized_giftcards'] = 'Serial GiftCard';
-$lang['giftcards_no_description_giftcards'] = 'Tidak ada Deskripsi Gift Card';
-$lang['giftcards_inventory_comments'] = 'Keterangan';
-$lang['giftcards_count'] = 'Mutasi/Penyesuaian Inventori';
-$lang['giftcards_details_count'] = 'Jumlah Detail Inventori';
-$lang['giftcards_add_minus'] = 'Penyesuaian Inventori TAMBAH / KURANG (-)';
-$lang['giftcards_current_quantity'] = 'Jumlah saat ini';
-$lang['giftcards_quantity_required'] = 'Jumlah wajib diisi. Silahkan tutup ( X ) untuk batal';
-$lang['giftcards_do_nothing'] = 'Tidak ada Perubahan';
-$lang['giftcards_change_all_to_serialized'] = 'Ubah semua menggunakan nomor serial';
-$lang['giftcards_change_all_to_unserialized'] = 'Ubah semua tanpa nomor serial';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Diijinkan Deskripsi Alternatif Untuk Semua';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Tidak Diijinkan Deskripsi Alternatif Untuk Semua';
-$lang['giftcards_use_inventory_menu'] = 'Gunakan Inv. Menu';
-$lang['giftcards_manually_editing_of_quantity'] = 'Perubahan jumlah Stok secara manual';
-?>
+
+$lang["giftcards_add_minus"] = "Penyesuaian Inventori TAMBAH / KURANG (-)";
+$lang["giftcards_allow_alt_description"] = "Deskripsi Alternatif dimungkinkan";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
+$lang["giftcards_basic_information"] = "Informasi GiftCard";
+$lang["giftcards_bulk_edit"] = "Ubah Massal";
+$lang["giftcards_cannot_be_deleted"] = "Tidak dapat menghapus GiftCard terpilih, Satu atau lebih GiftCard yang dipilih memiliki Penjualan.";
+$lang["giftcards_cannot_find_giftcard"] = "Informasi GiftCard tidak ditemukan";
+$lang["giftcards_card_value"] = "Nilai";
+$lang["giftcards_category"] = "Kategori";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "Diijinkan Deskripsi Alternatif Untuk Semua";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "Tidak Diijinkan Deskripsi Alternatif Untuk Semua";
+$lang["giftcards_change_all_to_serialized"] = "Ubah semua menggunakan nomor serial";
+$lang["giftcards_change_all_to_unserialized"] = "Ubah semua tanpa nomor serial";
+$lang["giftcards_confirm_bulk_edit"] = "Apakah Anda yakin ingin merubah semua GiftCard yang dipilih?";
+$lang["giftcards_confirm_delete"] = "Apakah anda yakin ingin menghapus GiftCard yang dipilih?";
+$lang["giftcards_cost_price"] = "Harga Pokok";
+$lang["giftcards_count"] = "Mutasi/Penyesuaian Inventori";
+$lang["giftcards_current_quantity"] = "Jumlah saat ini";
+$lang["giftcards_description"] = "Deskripsi";
+$lang["giftcards_details_count"] = "Jumlah Detail Inventori";
+$lang["giftcards_do_nothing"] = "Tidak ada Perubahan";
+$lang["giftcards_edit_fields_you_want_to_update"] = "Ubah bagian yang ingin Anda edit untuk SEMUA GiftCard yang dipilih";
+$lang["giftcards_edit_multiple_giftcards"] = "Ubah beberapa GiftCard";
+$lang["giftcards_error_adding_updating"] = "Kesalahan ketika menambahkan/memperbaharui GiftCard";
+$lang["giftcards_error_updating_multiple"] = "Kesalahan memperbarui GiftCard";
+$lang["giftcards_excel_import_failed"] = "Impor dari Excel import tidak berhasil";
+$lang["giftcards_generate_barcodes"] = "Buat Barcode";
+$lang["giftcards_giftcard"] = "GiftCard";
+$lang["giftcards_giftcard_number"] = "Nomor GiftCard";
+$lang["giftcards_info_provided_by"] = "Informasi disediakan oleh";
+$lang["giftcards_inventory_comments"] = "Keterangan";
+$lang["giftcards_is_serialized"] = "GiftCard Memiliki Nomor Serial";
+$lang["giftcards_low_inventory_giftcards"] = "GiftCard Inventori Rendah";
+$lang["giftcards_manually_editing_of_quantity"] = "Perubahan jumlah Stok secara manual";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "Anda harus memilih minimal 1 GiftCard untuk membuat Barcode";
+$lang["giftcards_new"] = "GiftCard Baru";
+$lang["giftcards_no_description_giftcards"] = "Tidak ada Deskripsi Gift Card";
+$lang["giftcards_no_giftcards_to_display"] = "Tidak ada GiftCard yang ditampilkan";
+$lang["giftcards_none"] = "Tidak Ada";
+$lang["giftcards_none_selected"] = "Anda belum memilih GiftCard untuk diubah";
+$lang["giftcards_number"] = "Nomor GiftCard harus angka";
+$lang["giftcards_number_information"] = "Nomor GiftCard";
+$lang["giftcards_number_required"] = "Nomor GiftCard wajib diisi";
+$lang["giftcards_one_or_multiple"] = "GiftCard";
+$lang["giftcards_person_id"] = "Nomor Pelanggan";
+$lang["giftcards_quantity"] = "Jumlah";
+$lang["giftcards_quantity_required"] = "Jumlah wajib diisi. Silahkan tutup ( X ) untuk batal";
+$lang["giftcards_reorder_level"] = "Level Pesan Ulang";
+$lang["giftcards_retrive_giftcard_info"] = "Informasi GiftCard";
+$lang["giftcards_sales_tax_1"] = "Pajak Penjualan";
+$lang["giftcards_sales_tax_2"] = "Pajak Penjualan";
+$lang["giftcards_serialized_giftcards"] = "Serial GiftCard";
+$lang["giftcards_successful_adding"] = "GiftCard telah berhasil ditambahkan";
+$lang["giftcards_successful_bulk_edit"] = "Anda telah berhasil memperbarui GiftCard yang dipilih";
+$lang["giftcards_successful_deleted"] = "GiftCard telah berhasil dihapus";
+$lang["giftcards_successful_updating"] = "GiftCard telah berhasil diperbarui";
+$lang["giftcards_supplier"] = "Supplier";
+$lang["giftcards_tax_1"] = "Pajak 1";
+$lang["giftcards_tax_2"] = "Pajak 2";
+$lang["giftcards_tax_percent"] = "Persen Pajak";
+$lang["giftcards_tax_percents"] = "Persentase Pajak";
+$lang["giftcards_unit_price"] = "Harga Jual";
+$lang["giftcards_upc_database"] = "Database UPC";
+$lang["giftcards_update"] = "Ubah GiftCard";
+$lang["giftcards_use_inventory_menu"] = "Gunakan Inv. Menu";
+$lang["giftcards_value"] = "Nilai GiftCard harus angka";
+$lang["giftcards_value_required"] = "Nilai GiftCard wajib diisi";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/index.html opensourcepos/application/language/id/index.html
--- pos-prod/application/language/id/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/index.html	2016-05-23 15:32:31.905839395 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Dilarang</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/item_kits_lang.php opensourcepos/application/language/id/item_kits_lang.php
--- pos-prod/application/language/id/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/item_kits_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'Nama Item Paket';
-$lang['item_kits_description'] = 'Deskripsi Item Paket';
-$lang['item_kits_no_item_kits_to_display'] = 'Tidak ada Item Paket yang ditampilkan';
-$lang['item_kits_update'] = 'Ubah Item Paket';
-$lang['item_kits_new'] = 'Item Paket Baru';
-$lang['item_kits_none_selected'] = "Anda belum memilih satupun Item Paket";
-$lang['item_kits_info'] = 'Item Paket Info';
-$lang['item_kits_successful_adding'] = 'Item Paket Baru berhasil ditambahkan';
-$lang['item_kits_successful_updating'] = 'Item Paket berhasil dirubah';
-$lang['item_kits_error_adding_updating'] = 'Tambah/Ubah Item Paket tidak berhasil';
-$lang['item_kits_successful_deleted'] = 'Item Paket berhasil dihapus';
-$lang['item_kits_confirm_delete'] = 'Apakah Anda yakin ingin menghapus Item Paket dipilih?';
-$lang['item_kits_one_or_multiple'] = 'Item Paket';
-$lang['item_kits_cannot_be_deleted'] = 'Item Paket tidak dapat dihapus';
-$lang['item_kits_add_item'] = 'Tambah Item Barang';
-$lang['item_kits_items'] = 'Item Barang';
-$lang['item_kits_item'] = 'Item Barang';
-$lang['item_kits_quantity'] = 'Jumlah';
-?>
+
+$lang["item_kits_add_item"] = "Tambah Item Barang";
+$lang["item_kits_cannot_be_deleted"] = "Item Paket tidak dapat dihapus";
+$lang["item_kits_confirm_delete"] = "Apakah Anda yakin ingin menghapus Item Paket dipilih?";
+$lang["item_kits_description"] = "Deskripsi Item Paket";
+$lang["item_kits_error_adding_updating"] = "Tambah/Ubah Item Paket tidak berhasil";
+$lang["item_kits_info"] = "Item Paket Info";
+$lang["item_kits_item"] = "Item Barang";
+$lang["item_kits_items"] = "Item Barang";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "Nama Item Paket";
+$lang["item_kits_new"] = "Item Paket Baru";
+$lang["item_kits_no_item_kits_to_display"] = "Tidak ada Item Paket yang ditampilkan";
+$lang["item_kits_none_selected"] = "Anda belum memilih satupun Item Paket";
+$lang["item_kits_one_or_multiple"] = "Item Paket";
+$lang["item_kits_quantity"] = "Jumlah";
+$lang["item_kits_successful_adding"] = "Item Paket Baru berhasil ditambahkan";
+$lang["item_kits_successful_deleted"] = "Item Paket berhasil dihapus";
+$lang["item_kits_successful_updating"] = "Item Paket berhasil dirubah";
+$lang["item_kits_update"] = "Ubah Item Paket";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/items_lang.php opensourcepos/application/language/id/items_lang.php
--- pos-prod/application/language/id/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/items_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,81 +1,88 @@
 <?php
-$lang['items_item_number'] = 'UPC/EAN/ISBN';
-$lang['items_retrive_item_info'] = 'Dapatkan Info Item Barang';
-$lang['items_description'] = 'Deskripsi';
-$lang['items_amazon'] = 'Amazon';
-$lang['items_upc_database'] = 'Database UPC';
-$lang['items_cannot_find_item'] = 'Tidak dapat menemukan informasi apapun tentang item';
-$lang['items_info_provided_by'] = 'Info disediakan oleh';
-$lang['items_basic_information'] = 'Informasi Item';
-$lang['items_number_information'] = 'Nomor Barang';
-$lang['items_new'] = 'Buat Item Baru';
-$lang['items_update'] = 'Ubah';
-$lang['items_item'] = 'Item';
-$lang['items_edit_multiple_items'] = 'Ubah Beberapa Item';
-$lang['items_name'] = 'Nama Barang';
-$lang['items_category'] = 'Kategori';
-$lang['items_cost_price'] = 'Harga Pokok';
-$lang['items_unit_price'] = 'Harga Jual';
-$lang['items_tax_1'] = 'Pajak 1';
-$lang['items_tax_2'] = 'Pajak 2';
-$lang['items_sales_tax_1'] = 'Pajak Penjualan1';
-$lang['items_sales_tax_2'] = 'Pajak Penjualan2';
-$lang['items_tax_percent'] = 'Tarif Pajak';
-$lang['items_tax_percents'] = 'Tarif Pajak';
-$lang['items_reorder_level'] = 'Batas pesan ulang';
-$lang['items_quantity'] = 'Jumlah';
-$lang['items_reorder_level'] = 'Batas pesan ulang';
-$lang['items_no_items_to_display'] = 'Tidak ada item untuk ditampilkan';
-$lang['items_bulk_edit'] = 'Ubah Massal';
-$lang['items_confirm_delete'] = 'Apakah Anda yakin ingin menghapus item yang dipilih?';
-$lang['items_none_selected'] = 'Anda belum memilih item untuk diubah';
-$lang['items_confirm_bulk_edit'] = 'Apakah Anda yakin ingin merubah semua item yang dipilih?';
-$lang['items_successful_bulk_edit'] = 'Anda telah berhasil memperbarui item yang dipilih';
-$lang['items_error_updating_multiple'] = 'Kesalahan ketika memperbarui item';
-$lang['items_edit_fields_you_want_to_update'] = 'Ubah bagian yang ingin Anda edit untuk SEMUA Item yang dipilih';
-$lang['items_error_adding_updating'] = 'Kesalahan ketika menambahkan/memperbarui item';
-$lang['items_successful_adding'] = 'Item Barang telah berhasil ditambahkan';
-$lang['items_successful_updating'] = 'Item Barang telah berhasil diperbarui';
-$lang['items_successful_deleted'] = 'Item Barang telah berhasil dihapus';
-$lang['items_one_or_multiple'] = 'Item Barang';
-$lang['items_cannot_be_deleted'] = 'Tidak dapat menghapus item terpilih, satu atau lebih item yang dipilih memiliki penjualan.';
-$lang['items_name_required'] = 'Nama item wajib diisi';
-$lang['items_category_required'] = 'Kategori wajib diisi';
-$lang['items_buy_price_required'] = 'Harga Beli wajib diisi';
-$lang['items_unit_price_required'] = 'Harga Jual wajib diisi';
-$lang['items_cost_price_required'] = 'Biaya Item wajib diisi';
-$lang['items_tax_percent_required'] = 'Tarif Pajak wajib diisi';
-$lang['items_quantity_required'] = 'Jumlah wajib diisi';
-$lang['items_reorder_level_required'] = 'Batas pesan ulang wajib diisi';
-$lang['items_unit_price_number'] = 'Harga satuan harus angka';
-$lang['items_cost_price_number'] = 'Biaya Item harus angka';
-$lang['items_quantity_number'] = 'Jumlah harus angka';
-$lang['items_reorder_level_number'] = 'Batas pesan ulang harus angka';
-$lang['items_none'] = 'Tidak Ada';
-$lang['items_supplier'] = 'Pemasok';
-$lang['items_generate_barcodes'] = 'Buat Barcode';
-$lang['items_must_select_item_for_barcode'] = 'Anda harus memilih minimal 1 item untuk membuat barcode';
-$lang['items_excel_import_failed'] = 'Impor dari Excel tidak berhasil dilakukan';
-$lang['items_allow_alt_description'] = 'Deskripsi Alternatif dimungkinkan';
-$lang['items_is_serialized'] = 'Item Memiliki Nomor Serial';
-$lang['items_low_inventory_items'] = 'Item Inventori Rendah';
-$lang['items_serialized_items'] = 'Serial Item';
-$lang['items_no_description_items'] = 'Produk/Item tidak ada deskripsi';
-$lang['items_search_custom_items'] = 'Cari secara manual';//GARRISON ADDED
-$lang['items_inventory_comments'] = 'Keterangan';
-$lang['items_count'] = 'Mutasi/Penyesuaian Inventori';
-$lang['items_details_count'] = 'Jumlah Detail Inventori';
-$lang['items_add_minus'] = 'Penyesuaian Inventori TAMBAH / KURANG (-)';
-$lang['items_current_quantity'] = 'Jumlah Saat ini';
-$lang['items_quantity_required'] = 'Jumlah wajib diisi. Silahkan tutup ( X ) untuk batal';
-$lang['items_do_nothing'] = 'Tidak ada Perubahan';
-$lang['items_change_all_to_serialized'] = 'Ubah semua menggunakan nomor serial';
-$lang['items_change_all_to_unserialized'] = 'Ubah semua tanpa nomor serial';
-$lang['items_change_all_to_allow_alt_desc'] = ' Diijinkan Deskripsi alternatif untuk semua';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Tidak Diijinkan Deskripsi alternatif untuk semua';
-$lang['items_use_inventory_menu'] = 'Gunakan Inv. Menu';
-$lang['items_manually_editing_of_quantity'] = 'Perubahan jumlah Stok secara manual';
-$lang['items_inventory'] = 'Inventori';
-$lang['items_location'] = 'Lokasi Barang';
-$lang['items_is_deleted'] = 'Item dihapus';// Parq 131215
-?>
+
+$lang["items_add_minus"] = "Penyesuaian Inventori TAMBAH / KURANG (-)";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "Deskripsi Alternatif dimungkinkan";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "Informasi Item";
+$lang["items_bulk_edit"] = "Ubah Massal";
+$lang["items_buy_price_required"] = "Harga Beli wajib diisi";
+$lang["items_cannot_be_deleted"] = "Tidak dapat menghapus item terpilih, satu atau lebih item yang dipilih memiliki penjualan.";
+$lang["items_cannot_find_item"] = "Tidak dapat menemukan informasi apapun tentang item";
+$lang["items_category"] = "Kategori";
+$lang["items_category_required"] = "Kategori wajib diisi";
+$lang["items_change_all_to_allow_alt_desc"] = " Diijinkan Deskripsi alternatif untuk semua";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Tidak Diijinkan Deskripsi alternatif untuk semua";
+$lang["items_change_all_to_serialized"] = "Ubah semua menggunakan nomor serial";
+$lang["items_change_all_to_unserialized"] = "Ubah semua tanpa nomor serial";
+$lang["items_confirm_bulk_edit"] = "Apakah Anda yakin ingin merubah semua item yang dipilih?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "Apakah Anda yakin ingin menghapus item yang dipilih?";
+$lang["items_cost_price"] = "Harga Pokok";
+$lang["items_cost_price_number"] = "Biaya Item harus angka";
+$lang["items_cost_price_required"] = "Biaya Item wajib diisi";
+$lang["items_count"] = "Mutasi/Penyesuaian Inventori";
+$lang["items_current_quantity"] = "Jumlah Saat ini";
+$lang["items_description"] = "Deskripsi";
+$lang["items_details_count"] = "Jumlah Detail Inventori";
+$lang["items_do_nothing"] = "Tidak ada Perubahan";
+$lang["items_edit_fields_you_want_to_update"] = "Ubah bagian yang ingin Anda edit untuk SEMUA Item yang dipilih";
+$lang["items_edit_multiple_items"] = "Ubah Beberapa Item";
+$lang["items_error_adding_updating"] = "Kesalahan ketika menambahkan/memperbarui item";
+$lang["items_error_updating_multiple"] = "Kesalahan ketika memperbarui item";
+$lang["items_excel_import_failed"] = "Impor dari Excel tidak berhasil dilakukan";
+$lang["items_generate_barcodes"] = "Buat Barcode";
+$lang["items_image"] = "Avatar";
+$lang["items_info_provided_by"] = "Info disediakan oleh";
+$lang["items_inventory"] = "Inventori";
+$lang["items_inventory_comments"] = "Keterangan";
+$lang["items_is_deleted"] = "Item dihapus";
+$lang["items_is_serialized"] = "Item Memiliki Nomor Serial";
+$lang["items_item"] = "Item";
+$lang["items_item_number"] = "Kode Barang";
+$lang["items_item_number_duplicate"] = "The item number is already present in the database";
+$lang["items_location"] = "Lokasi Barang";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "Daftar Stock Rendah";
+$lang["items_manually_editing_of_quantity"] = "Perubahan jumlah Stok secara manual";
+$lang["items_must_select_item_for_barcode"] = "Anda harus memilih minimal 1 item untuk membuat barcode";
+$lang["items_name"] = "Nama Barang";
+$lang["items_name_required"] = "Nama item wajib diisi";
+$lang["items_new"] = "Buat Item Baru";
+$lang["items_no_description_items"] = "Produk/Item tidak ada deskripsi";
+$lang["items_no_items_to_display"] = "Tidak ada item untuk ditampilkan";
+$lang["items_none"] = "Tidak Ada";
+$lang["items_none_selected"] = "Anda belum memilih item untuk diubah";
+$lang["items_number_information"] = "Nomor Barang";
+$lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
+$lang["items_one_or_multiple"] = "Item Barang";
+$lang["items_quantity"] = "Jumlah";
+$lang["items_quantity_number"] = "Jumlah harus angka";
+$lang["items_quantity_required"] = "Jumlah wajib diisi";
+$lang["items_receiving_quantity"] = "Receiving quantity";
+$lang["items_reorder_level"] = "Batas pesan ulang";
+$lang["items_reorder_level_number"] = "Batas pesan ulang harus angka";
+$lang["items_reorder_level_required"] = "Batas pesan ulang wajib diisi";
+$lang["items_retrive_item_info"] = "Dapatkan Info Item Barang";
+$lang["items_sales_tax_1"] = "Pajak Penjualan1";
+$lang["items_sales_tax_2"] = "Pajak Penjualan2";
+$lang["items_search_custom_items"] = "Cari secara manual";
+$lang["items_serialized_items"] = "Serial Item";
+$lang["items_stock_location"] = "Stock location";
+$lang["items_successful_adding"] = "Item Barang telah berhasil ditambahkan";
+$lang["items_successful_bulk_edit"] = "Anda telah berhasil memperbarui item yang dipilih";
+$lang["items_successful_deleted"] = "Item Barang telah berhasil dihapus";
+$lang["items_successful_updating"] = "Item Barang telah berhasil diperbarui";
+$lang["items_supplier"] = "Pemasok";
+$lang["items_tax_1"] = "Pajak 1";
+$lang["items_tax_2"] = "Pajak 2";
+$lang["items_tax_percent"] = "Tarif Pajak";
+$lang["items_tax_percent_required"] = "Tarif Pajak wajib diisi";
+$lang["items_tax_percents"] = "Tarif Pajak";
+$lang["items_unit_price"] = "Harga Jual";
+$lang["items_unit_price_number"] = "Harga satuan harus angka";
+$lang["items_unit_price_required"] = "Harga Jual wajib diisi";
+$lang["items_upc_database"] = "Database UPC";
+$lang["items_update"] = "Ubah";
+$lang["items_use_inventory_menu"] = "Gunakan Inv. Menu";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/login_lang.php opensourcepos/application/language/id/login_lang.php
--- pos-prod/application/language/id/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/login_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login'] = 'Masuk';
-$lang['login_username'] = 'Nama Anda';
-$lang['login_password'] = 'Kata kunci';
-$lang['login_go'] = 'Lanjutkan';
-$lang['login_invalid_username_and_password'] = 'Nama Pengguna/Kata Kunci Salah';
-$lang['login_welcome_message'] = 'SELAMAT DATANG. Silahkan login untuk masuk aplikasi, Isikan Nama Pengguna dan Kata Kunci Anda di bawah ini.';
-?>
+
+$lang["login_go"] = "Lanjutkan";
+$lang["login_invalid_username_and_password"] = "Nama Pengguna/Kata Kunci Salah";
+$lang["login_login"] = "Masuk";
+$lang["login_password"] = "Kata kunci";
+$lang["login_username"] = "Nama Anda";
+$lang["login_welcome_message"] = "SELAMAT DATANG. Silahkan login untuk masuk aplikasi, Isikan Nama Pengguna dan Kata Kunci Anda di bawah ini.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/module_lang.php opensourcepos/application/language/id/module_lang.php
--- pos-prod/application/language/id/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/module_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home'] = 'Beranda';
 
-$lang['module_customers'] = 'Pelanggan';
-$lang['module_customers_desc'] = 'Tambah, Rubah, Hapus, dan Cari Pelanggan ';
-
-$lang['module_suppliers'] = 'Pemasok';
-$lang['module_suppliers_desc'] = 'Tambah, Rubah, Hapus, dan Cari Pemasok';
-
-$lang['module_employees'] = 'Karyawan';
-$lang['module_employees_desc'] = 'Tambah, Rubah, Hapus, dan Cari Karyawan';
-
-$lang['module_sales'] = 'Penjualan';
-$lang['module_sales_desc'] = 'Proses Penjualan dan Retur';
-
-$lang['module_reports'] = 'Laporan';
-$lang['module_reports_desc'] = 'Lihat dan Cetak Laporan';
-
-$lang['module_items'] = 'Item Barang';
-$lang['module_items_desc'] = 'Tambah, Rubah, Hapus, dan Cari Item Barang';
-
-$lang['module_config'] = 'Konfigurasi';
-$lang['module_config_desc'] = 'Ubah Konfigurasi Toko';
-
-$lang['module_receivings'] = 'Penerimaan';
-$lang['module_receivings_desc'] = 'Proses Order Penerimaan Barang Masuk';
-
-$lang['module_giftcards'] = 'Gift Card';
-$lang['module_giftcards_desc'] = 'Tambah, Rubah, Hapus dan Cari Gift Card';
-
-$lang['module_item_kits'] = 'Item Paket';
-$lang['module_item_kits_desc'] = 'Tambah, Rubah, Hapus dan Cari Item Paket';
-
-?>
+$lang["module_config"] = "Konfigurasi";
+$lang["module_config_desc"] = "Ubah Konfigurasi Toko";
+$lang["module_customers"] = "Pelanggan";
+$lang["module_customers_desc"] = "Tambah, Rubah, Hapus, dan Cari Pelanggan ";
+$lang["module_employees"] = "Karyawan";
+$lang["module_employees_desc"] = "Tambah, Rubah, Hapus, dan Cari Karyawan";
+$lang["module_giftcards"] = "Gift Card";
+$lang["module_giftcards_desc"] = "Tambah, Rubah, Hapus dan Cari Gift Card";
+$lang["module_home"] = "Beranda";
+$lang["module_item_kits"] = "Item Paket";
+$lang["module_item_kits_desc"] = "Tambah, Rubah, Hapus dan Cari Item Paket";
+$lang["module_items"] = "Item Barang";
+$lang["module_items_desc"] = "Tambah, Rubah, Hapus, dan Cari Item Barang";
+$lang["module_receivings"] = "Penerimaan";
+$lang["module_receivings_desc"] = "Proses Order Penerimaan Barang Masuk";
+$lang["module_reports"] = "Laporan";
+$lang["module_reports_desc"] = "Lihat dan Cetak Laporan";
+$lang["module_sales"] = "Penjualan";
+$lang["module_sales_desc"] = "Proses Penjualan dan Retur";
+$lang["module_suppliers"] = "Pemasok";
+$lang["module_suppliers_desc"] = "Tambah, Rubah, Hapus, dan Cari Pemasok";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/receivings_lang.php opensourcepos/application/language/id/receivings_lang.php
--- pos-prod/application/language/id/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/receivings_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,26 +1,51 @@
 <?php
-$lang['recvs_register'] = 'Penerimaan Barang Masuk';
-$lang['recvs_mode'] = 'Jenis Penerimaan';
-$lang['recvs_receiving'] = 'Barang Masuk';
-$lang['recvs_return'] = 'Retur';
-$lang['recvs_total'] = 'Total';
-$lang['recvs_cost'] = 'Harga';
-$lang['recvs_quantity'] = 'Jumlah';
-$lang['recvs_discount'] = 'Diskon %';
-$lang['recvs_edit'] = 'Ubah';
-$lang['recvs_new_supplier'] = 'Pemasok Baru';
-$lang['recvs_supplier'] = 'Pemasok';
-$lang['recvs_select_supplier'] = 'Pilih Pemasok (Opsional)';
-$lang['recvs_start_typing_supplier_name'] = 'Ketik nama pemasok ...';
-$lang['recvs_unable_to_add_item'] = 'Item tidak dapat ditambahkan ke penerimaan barang masuk';
-$lang['recvs_error_editing_item'] = 'Pengubahan Item Salah';
-$lang['recvs_receipt'] = 'Faktur Penerimaan';
-$lang['recvs_complete_receiving'] = 'Selesai';
-$lang['recvs_confirm_finish_receiving'] = 'Apakah anda yakin untuk memproses Penerimaan Barang masuk ini? Proses ini tidak dapat dibatalkan.';
-$lang['recvs_confirm_cancel_receiving'] = 'Apakah anda yakin untuk menghapus Penerimaan Barang masuk ini? Semua item Akan dihapus.';
-$lang['recvs_find_or_scan_item'] = 'Cari/Scan Item';
-$lang['recvs_find_or_scan_item_or_receipt'] = 'Cari/Scan Item ATAU Faktur';
-$lang['recvs_id'] = 'ID Penerimaan';
-$lang['recvs_item_name'] = 'Nama Item';
-$lang['receivings_transaction_failed'] = 'Transaksi Penerimaan Salah';
-?>
+
+$lang["receivings_transaction_failed"] = "Transaksi Penerimaan Salah";
+$lang["recvs_basic_information"] = "Informasi Penerimaan Barang";
+$lang["recvs_cancel_receiving"] = "Batal";
+$lang["recvs_cannot_be_deleted"] = "Tidak bisa dihapus";
+$lang["recvs_comments"] = "Keterangan";
+$lang["recvs_complete_receiving"] = "Selesai";
+$lang["recvs_confirm_cancel_receiving"] = "Apakah anda yakin untuk menghapus Penerimaan Barang masuk ini? Semua item Akan dihapus.";
+$lang["recvs_confirm_finish_receiving"] = "Apakah anda yakin untuk memproses Penerimaan Barang masuk ini? Proses ini tidak dapat dibatalkan.";
+$lang["recvs_cost"] = "Harga";
+$lang["recvs_date"] = "Tanggal";
+$lang["recvs_date_required"] = "Tanngalnya harus diisi";
+$lang["recvs_date_type"] = "Model Tanggal";
+$lang["recvs_delete_confirmation"] = "Konfirmasi Hapus";
+$lang["recvs_delete_entire_sale"] = "Hapus Semua Penjualan";
+$lang["recvs_discount"] = "Diskon %";
+$lang["recvs_edit"] = "Ubah";
+$lang["recvs_edit_sale"] = "Ubah Penerimaan";
+$lang["recvs_employee"] = "Karyawan";
+$lang["recvs_error_editing_item"] = "Pengubahan Item Salah";
+$lang["recvs_error_requisition"] = "Kesalahan Daftar Permintaan";
+$lang["recvs_find_or_scan_item"] = "Cari/Scan Item";
+$lang["recvs_find_or_scan_item_or_receipt"] = "Cari/Scan Item ATAU Faktur";
+$lang["recvs_id"] = "ID Penerimaan";
+$lang["recvs_invoice_enable"] = "Create Invoice";
+$lang["recvs_invoice_number"] = "Nomer Nota";
+$lang["recvs_invoice_number_duplicate"] = "Nomer Nota Double";
+$lang["recvs_item_name"] = "Nama Item";
+$lang["recvs_mode"] = "Jenis Penerimaan";
+$lang["recvs_new_supplier"] = "Pemasok Baru";
+$lang["recvs_one_or_multiple"] = "Satu Atau Double";
+$lang["recvs_print_after_sale"] = "Cetak Faktur setelah penjualan";
+$lang["recvs_quantity"] = "Jumlah";
+$lang["recvs_receipt"] = "Faktur Penerimaan";
+$lang["recvs_receipt_number"] = "No. Faktur Penerimaan";
+$lang["recvs_receiving"] = "Barang Masuk";
+$lang["recvs_register"] = "Penerimaan Barang Masuk";
+$lang["recvs_requisition"] = "Mutasi Antar Gudang";
+$lang["recvs_return"] = "Retur";
+$lang["recvs_select_supplier"] = "Pilih Pemasok (Opsional)";
+$lang["recvs_start_typing_supplier_name"] = "Ketik nama pemasok ...";
+$lang["recvs_stock_destination"] = "Tujuan Stok";
+$lang["recvs_stock_locaiton"] = "Lokasi Stok";
+$lang["recvs_stock_source"] = "Asal Stok";
+$lang["recvs_successfully_deleted"] = "Berhasil Dihapus";
+$lang["recvs_successfully_updated"] = "Berhasil Diperbaharui";
+$lang["recvs_supplier"] = "Pemasok";
+$lang["recvs_total"] = "Total";
+$lang["recvs_unable_to_add_item"] = "Item tidak dapat ditambahkan ke penerimaan barang masuk";
+$lang["recvs_unsuccessfully_updated"] = "Tidak Berhasil Diperbaharui";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/reports_lang.php opensourcepos/application/language/id/reports_lang.php
--- pos-prod/application/language/id/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/reports_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,88 +1,108 @@
 <?php
-$lang['reports_reports'] = 'Lihat dan Cetak Laporan';
-$lang['reports_report'] = 'Laporan';
-$lang['reports_welcome_message'] = 'Selamat Datang ke panel laporan. Silakan pilih laporan untuk melihat/cetak.';
-$lang['reports_sales_summary_report'] = 'Laporan Ringkasan Penjualan';
-$lang['reports_categories_summary_report'] = 'Laporan Ringkasan Kategori';
-$lang['reports_customers_summary_report'] = 'Laporan Ringkasan Pelanggan';
-$lang['reports_suppliers_summary_report'] = 'Laporan Ringkasan Pemasok';
-$lang['reports_items_summary_report'] = 'Laporan Ringkasan Produk/Item';
-$lang['reports_employees_summary_report'] = 'Laporan Ringkasan Karyawan';
-$lang['reports_taxes_summary_report'] = 'Laporan Ringkasan Pajak';
-$lang['reports_date'] = 'Tanggal';
-$lang['reports_name'] = 'Nama';
-$lang['reports_quantity_purchased'] = 'Jumlah Dibeli';
-$lang['reports_sale_id'] = 'ID Penjualan ';
-$lang['reports_items_purchased'] = 'Produk Dibeli';
-$lang['reports_sold_by'] = 'Dijual Oleh';
-$lang['reports_sold_to'] = 'Dijual Kepada';
-$lang['reports_category'] = 'Kategori';
-$lang['reports_customer'] = 'Pelanggan';
-$lang['reports_employee'] = 'Karyawan';
-$lang['reports_item'] = 'Produk/Item';
-$lang['reports_items'] = 'Produk/Item';
-$lang['reports_supplier'] = 'Pemasok';
-$lang['reports_employees'] = 'Karyawan';
-$lang['reports_subtotal'] = 'SubTotal';
-$lang['reports_total'] = 'Total';
-$lang['reports_tax'] = 'Pajak';
-$lang['reports_profit'] = 'Keuntungan/Laba';
-$lang['reports_report_input'] = 'Input data Laporan';
-$lang['reports_type'] = 'Tipe';
-$lang['reports_date_range'] = 'Rentang Tanggal';
-$lang['reports_today'] = 'Hari ini';
-$lang['reports_yesterday'] = 'Kemarin';
-$lang['reports_last_7'] = '7 Hari Terakhir';
-$lang['reports_this_month'] = 'Bulan ini';
-$lang['reports_last_month'] = 'Bulan lalu';
-$lang['reports_this_year'] = 'Tahun ini';
-$lang['reports_last_year'] = 'Tahun lalu';
-$lang['reports_all_time'] = 'Semua Waktu';
-$lang['reports_detailed_sales_report'] = 'Laporan Perincian Penjualan';
-$lang['reports_comments'] = 'Catatan';
-$lang['reports_discount'] = 'Diskon';
-$lang['reports_payment_type'] = 'Tipe Pembayaran';
-$lang['reports_sales'] = 'Penjualan';
-$lang['reports_categories'] = 'Kategori';
-$lang['reports_customers'] = 'Pelanggan';
-$lang['reports_suppliers'] = 'Pemasok';
-$lang['reports_items'] = 'Produk/Item';
-$lang['reports_employees'] = 'Karyawan';
-$lang['reports_taxes'] = 'Pajak';
-$lang['reports_customer'] = 'Pelanggan';
-$lang['reports_employee'] = 'Karyawan';
-$lang['reports_tax_percent'] = 'Persentase Pajak';
-$lang['reports_quantity_purchased'] = 'Jumlah Penjualan';
-$lang['reports_serial_number'] = 'Serial #';
-$lang['reports_description'] = 'Deskripsi';
-$lang['reports_date'] = 'Tanggal';
-$lang['reports_sales_amount'] = 'Jumlah Penjualan';
-$lang['reports_revenue'] = 'Pendapatan';
-$lang['reports_discounts'] = 'Diskon';
-$lang['reports_discounts_summary_report'] = 'Laporan Ringkasan Diskon';
-$lang['reports_discount_percent'] = 'Persen Diskon';
-$lang['reports_count'] = 'Jumlah';
-$lang['reports_summary_reports'] = 'Ringkasan Laporan';
-$lang['reports_graphical_reports'] = 'Laporan Dalam Bentuk Grafis';
-$lang['reports_detailed_reports'] = 'Perincian Laporan';
-$lang['reports_inventory_reports'] = 'Laporan Inventori';
-$lang['reports_low_inventory'] = 'Laporan Inventori Rendah';
-$lang['reports_inventory_summary'] = 'Laporan Ringkasan Inventori';
-$lang['reports_item_number'] = 'Nomor Barang';
-$lang['reports_reorder_level'] = 'Level Pesan Ulang';
-$lang['reports_low_inventory_report'] = 'Laporan Inventori Rendah';
-$lang['reports_item_name'] = 'Nama Barang';
-$lang['reports_inventory_summary_report'] = 'Laporan Ringkasan Inventori';
-$lang['reports_payment_type'] = 'Jenis Pembayaran';
-$lang['reports_payments_summary_report'] = 'Laporan Ringkasan Pembayaran';
-$lang['reports_payments'] = 'Pembayaran';
-$lang['reports_receivings'] = 'Barang Masuk';
-$lang['reports_received_by'] = 'Diterima Oleh';
-$lang['reports_supplied_by'] = 'Pemasok';
-$lang['reports_items_received'] = 'Barang Masuk';
-$lang['reports_detailed_receivings_report'] = 'Laporan Detail Barang Masuk';
-$lang['reports_sale_type'] = 'Jenis Penjualan';
-$lang['reports_all'] = 'Semua';
-$lang['reports_returns'] = 'Retur';
-$lang['reports_discount'] = 'Diskon diatas dari';
-?>
+
+$lang["reports_all"] = "Semua";
+$lang["reports_all_time"] = "Semua Waktu";
+$lang["reports_categories"] = "Kategori";
+$lang["reports_categories_summary_report"] = "Laporan Ringkasan Kategori";
+$lang["reports_category"] = "Kategori";
+$lang["reports_comments"] = "Catatan";
+$lang["reports_count"] = "Jumlah";
+$lang["reports_customer"] = "Pelanggan";
+$lang["reports_customers"] = "Pelanggan";
+$lang["reports_customers_summary_report"] = "Laporan Ringkasan Pelanggan";
+$lang["reports_date"] = "Tanggal";
+$lang["reports_date_range"] = "Rentang Tanggal";
+$lang["reports_description"] = "Deskripsi";
+$lang["reports_detailed_receivings_report"] = "Laporan Detail Barang Masuk";
+$lang["reports_detailed_reports"] = "Perincian Laporan";
+$lang["reports_detailed_requisition_report"] = "Rincian Daftar Laporan Permintaan";
+$lang["reports_detailed_sales_report"] = "Laporan Perincian Penjualan";
+$lang["reports_discount"] = "Diskon";
+$lang["reports_discount_percent"] = "Persen Diskon";
+$lang["reports_discounts"] = "Diskon";
+$lang["reports_discounts_summary_report"] = "Laporan Ringkasan Diskon";
+$lang["reports_employee"] = "Karyawan";
+$lang["reports_employees"] = "Karyawan";
+$lang["reports_employees_summary_report"] = "Laporan Ringkasan Karyawan";
+$lang["reports_graphical_reports"] = "Laporan Dalam Bentuk Grafis";
+$lang["reports_inventory"] = "Laporan Persediaan";
+$lang["reports_inventory_low"] = "Laporan Persediaan Rendah";
+$lang["reports_inventory_low_report"] = "Laporan Persediaan Rendah";
+$lang["reports_inventory_reports"] = "Laporan Persediaan";
+$lang["reports_inventory_summary"] = "Laporan Ringkasan Persediaan";
+$lang["reports_inventory_summary_report"] = "Laporan Ringkasan Persediaan";
+$lang["reports_item"] = "Produk/Item";
+$lang["reports_item_name"] = "Nama Barang";
+$lang["reports_item_number"] = "Nomor Barang";
+$lang["reports_items"] = "Produk/Item";
+$lang["reports_items_purchased"] = "Produk Dibeli";
+$lang["reports_items_received"] = "Barang Masuk";
+$lang["reports_items_summary_report"] = "Laporan Ringkasan Produk/Item";
+$lang["reports_last_7"] = "7 Hari Terakhir";
+$lang["reports_last_month"] = "Bulan lalu";
+$lang["reports_last_year"] = "Tahun lalu";
+$lang["reports_low_inventory"] = "Kurang Persediaan";
+$lang["reports_low_inventory_report"] = "Laporan Persediaan Kurang";
+$lang["reports_name"] = "Nama";
+$lang["reports_payment_type"] = "Tipe Pembayaran";
+$lang["reports_payments"] = "Pembayaran";
+$lang["reports_payments_summary_report"] = "Laporan Ringkasan Pembayaran";
+$lang["reports_profit"] = "Keuntungan/Laba";
+$lang["reports_cost"] = "";
+$lang["reports_quantity_purchased"] = "Jumlah Dibeli";
+$lang["reports_received_by"] = "Diterima Oleh";
+$lang["reports_receiving_id"] = "Id Penerima";
+$lang["reports_receiving_type"] = "Type Diterima";
+$lang["reports_receivings"] = "Barang Masuk";
+$lang["reports_reorder_level"] = "Level Pesan Ulang";
+$lang["reports_report"] = "Laporan";
+$lang["reports_report_input"] = "Input data Laporan";
+$lang["reports_reports"] = "Lihat dan Cetak Laporan";
+$lang["reports_requisition"] = "Daftar Permintaan";
+$lang["reports_requisition_by"] = "Daftar Permintaan Oleh";
+$lang["reports_requisition_id"] = "Identitas Peminta";
+$lang["reports_requisition_item"] = "Jenis Permintaan";
+$lang["reports_requisition_item_quantity"] = "Jumlah Permintaan";
+$lang["reports_requisition_related_item"] = "";
+$lang["reports_requisition_related_item_total_quantity"] = "Jumlah Item Barang";
+$lang["reports_requisition_related_item_unit_quantity"] = "Unit Item Barang";
+$lang["reports_requisitions"] = "Laporan Permintaan";
+$lang["reports_returns"] = "Retur";
+$lang["reports_revenue"] = "Pendapatan";
+$lang["reports_sale_id"] = "ID Penjualan ";
+$lang["reports_sale_type"] = "Jenis Penjualan";
+$lang["reports_sales"] = "Penjualan";
+$lang["reports_sales_amount"] = "Jumlah Penjualan";
+$lang["reports_sales_summary_report"] = "Laporan Ringkasan Penjualan";
+$lang["reports_serial_number"] = "Serial #";
+$lang["reports_sold_by"] = "Dijual Oleh";
+$lang["reports_sold_to"] = "Dijual Kepada";
+$lang["reports_stock_location"] = "Lokasi Stock";
+$lang["reports_subtotal"] = "SubTotal";
+$lang["reports_summary_reports"] = "Ringkasan Laporan";
+$lang["reports_supplied_by"] = "Pemasok";
+$lang["reports_supplier"] = "Pemasok";
+$lang["reports_suppliers"] = "Pemasok";
+$lang["reports_suppliers_summary_report"] = "Laporan Ringkasan Pemasok";
+$lang["reports_tax"] = "Pajak";
+$lang["reports_tax_percent"] = "Persentase Pajak";
+$lang["reports_taxes"] = "Pajak";
+$lang["reports_taxes_summary_report"] = "Laporan Ringkasan Pajak";
+$lang["reports_this_month"] = "Bulan ini";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "Tahun ini";
+$lang["reports_today"] = "Hari ini";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "Total";
+$lang["reports_type"] = "Tipe";
+$lang["reports_welcome_message"] = "Selamat Datang ke panel laporan. Silakan pilih laporan untuk melihat/cetak.";
+$lang["reports_yesterday"] = "Kemarin";
+$lang["reports_item_count"] = "";
+$lang["reports_cost_price"] = "Harga Pokok";
+$lang["reports_unit_price"] = "Harga Jual";
+$lang["reports_sub_total_value"] = "Sub Total";
+$lang["reports_total_inventory_value"] = "Total Nilai Persediaan";
+$lang["reports_zero_and_less"] = "Stok habis dan minus";
+$lang["reports_more_than_zero"] = "Stok belum habis";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/sales_lang.php opensourcepos/application/language/id/sales_lang.php
--- pos-prod/application/language/id/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/sales_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,86 +1,117 @@
 <?php
-$lang['sales_giftcard_number'] = 'Nomor Gift Card';
-$lang['sales_giftcard'] = 'Gift Card';
-$lang['sales_register'] = 'Transaksi Penjualan';
-$lang['sales_mode'] = 'Jenis Transaksi';
-$lang['sales_new_item'] = 'Item Baru';
-$lang['sales_item_name'] = 'Nama Item ';
-$lang['sales_item_number'] = 'Item #';
-$lang['sales_new_customer'] = 'Pelanggan Baru';
-$lang['sales_customer'] = 'Pelanggan';
-$lang['sales_no_items_in_cart'] = 'Tidak ada Item dalam Keranjang Belanja';
-$lang['sales_total'] = 'Total';
-$lang['sales_tax_percent'] = 'Pajak %';
-$lang['sales_price'] = 'Harga';
-$lang['sales_quantity'] = 'Jumlah.';
-$lang['sales_discount'] = 'Diskon %';
-$lang['sales_edit'] = 'Ubah';
-$lang['sales_payment'] = 'Type Pembayaran';
-$lang['sales_edit_item'] = 'Ubah Item';
-$lang['sales_find_or_scan_item'] = 'Cari/Scan Item';
-$lang['sales_find_or_scan_item_or_receipt'] = 'Cari/Scan Item ATAU Faktur';
-$lang['sales_select_customer'] = 'Pilih Pelanggan (Opsional)';
-$lang['sales_start_typing_item_name'] = 'Ketik Nama Barang atau Scan Barcode...';
-$lang['sales_start_typing_customer_name'] = 'Ketik Nama Pelanggan...';
-$lang['sales_sub_total'] = 'Sub Total';
-$lang['sales_tax'] = 'Pajak';
-$lang['sales_comment'] = 'Catatan';
-$lang['sales_unable_to_add_item'] = 'Tidak dapat menambahkan item dengan penjualan';
-$lang['sales_sale_for_customer'] = 'Pelanggan:';
-$lang['sales_remove_customer'] = 'Hapus Pelanggan';
-$lang['sales_error_editing_item'] = 'mengubah item salah';
-$lang['sales_complete_sale'] = 'Entri penjualan';
-$lang['sales_cancel_sale'] = 'Batal Jual';
-$lang['sales_add_payment'] = 'TERIMA';
-$lang['sales_receipt'] = 'Faktur Penjualan';
-$lang['sales_receipt_number']='POS #';
-$lang['sales_id'] = 'ID Penjualan';
-$lang['sales_sale'] = 'Penjualan';
-$lang['sales_return'] = 'Retur';
-$lang['sales_confirm_finish_sale'] = 'Anda yakin ingin melakukan transaksi penjualan ini?  Proses tidak dapat dibatalkan.';
-$lang['sales_confirm_cancel_sale'] = 'Anda yakin ingin membatalkan transaksi penjualan ini?  Semua item akan dihapus.';
-$lang['sales_cash'] = 'Tunai';
-$lang['sales_check'] = 'Cek';
-$lang['sales_debit'] = 'Kartu Debit';
-$lang['sales_credit'] = 'Kartu Credit';
-$lang['sales_giftcard'] = 'Gift Card';
-$lang['sales_amount_tendered'] = 'Nilai Pembayaran';
-$lang['sales_change_due'] = 'Kembalian Uang';
-$lang['sales_payment_not_cover_total'] = 'Jumlah pembayaran tidak mencakup Total';
-$lang['sales_transaction_failed'] = 'Transaksi Penjualan Salah';
-$lang['sales_must_enter_numeric'] = 'Nilai yang dimasukkan harus angka numerik';
-$lang['sales_must_enter_numeric_giftcard'] = 'Nomor Gift Card harus angka numerik';
-$lang['sales_serial'] = 'Serial';
-$lang['sales_description_abbrv'] = 'Deskripsi';
-$lang['sales_item_out_of_stock'] = 'Item tidak ada stok';
-$lang['sales_item_insufficient_of_stock'] = 'Stok Item tidak mencukupi';
-$lang['sales_quantity_less_than_zero'] = 'Peringatan!... Stok Inventori Kosong. Proses penjualan masih dapat dilanjutkan, Periksa Inventori.';
-$lang['sales_successfully_updated'] = 'Penjualan berhasil diperbarui';
-$lang['sales_unsuccessfully_updated'] = 'Penjualan tidak berhasil diperbarui';
-$lang['sales_edit_sale'] = 'Ubah Penjualan';
-$lang['sales_employee'] = 'Karyawan';
-$lang['sales_successfully_deleted'] = 'Transaksi Penjualan berhasil dihapus';
-$lang['sales_unsuccessfully_deleted'] = 'Transaksi Penjualan tidak berhasil dihapus';
-$lang['sales_delete_entire_sale'] = 'Hapus Transaksi Penjualan';
-$lang['sales_delete_confirmation'] = 'Apakah anda yakin ingin menghapus transaksi penjualan ini, Pilihan ini tidak dapat dibatalkan';
-$lang['sales_delete_successful'] = 'Transaksi Penjualan berhasil dihapus';
-$lang['sales_delete_unsuccessful'] = 'Transaksi Penjualan tidak berhasil dihapus';
-$lang['sales_suspend_sale'] = 'Tangguhkan';
-$lang['sales_confirm_suspend_sale'] = 'Apakah anda yakin akan menangguhkan penjualan ini?';
-$lang['sales_suspended_sales'] = 'Penangguhan';
-$lang['sales_suspended_sale_id'] = 'ID Penjualan ditangguhkan';
-$lang['sales_date'] = 'Tanggal';
-$lang['sales_comments'] = 'Keterangan';
-$lang['sales_unsuspend_and_delete'] = 'Batalkan dan hapus penangguhan';
-$lang['sales_unsuspend'] = 'Batal Penangguhan';
-$lang['sales_successfully_suspended_sale'] = 'Penjualan anda telah berhasil ditangguhkan';
-$lang['sales_email_receipt'] = 'e-Mail Faktur';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Diskon';
-$lang['sales_sale_time']='Waktu';
-$lang['sales_payments_total'] = 'Total Pembayaran';
-$lang['sales_amount_due'] = 'Kembalian Uang';
-$lang['sales_payment_type'] = "Type";
-$lang['sales_payment_amount'] = "Amount";
-$lang['sales_basic_information'] = "Sale information";
-?>
+
+$lang["sales_add_payment"] = "TERIMA";
+$lang["sales_amount_due"] = "Kembalian Uang";
+$lang["sales_amount_tendered"] = "Nilai Pembayaran";
+$lang["sales_basic_information"] = "Sale information";
+$lang["sales_cancel_sale"] = "Batal Jual";
+$lang["sales_cash"] = "Tunai";
+$lang["sales_change_due"] = "Kembalian Uang";
+$lang["sales_check"] = "Cek";
+$lang["sales_check_balance"] = "Check remainder";
+$lang["sales_comment"] = "Catatan";
+$lang["sales_comments"] = "Keterangan";
+$lang["sales_complete_sale"] = "Entri penjualan";
+$lang["sales_confirm_cancel_sale"] = "Anda yakin ingin membatalkan transaksi penjualan ini?  Semua item akan dihapus.";
+$lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
+$lang["sales_confirm_finish_sale"] = "Anda yakin ingin melakukan transaksi penjualan ini?  Proses tidak dapat dibatalkan.";
+$lang["sales_confirm_suspend_sale"] = "Apakah anda yakin akan menangguhkan penjualan ini?";
+$lang["sales_credit"] = "Kartu Credit";
+$lang["sales_customer"] = "Pelanggan";
+$lang["sales_date"] = "Tanggal";
+$lang["sales_date_required"] = "Permintaan Data";
+$lang["sales_date_type"] = "Jenis Data";
+$lang["sales_debit"] = "Kartu Debit";
+$lang["sales_delete_confirmation"] = "Apakah anda yakin ingin menghapus transaksi penjualan ini, Pilihan ini tidak dapat dibatalkan";
+$lang["sales_delete_entire_sale"] = "Hapus Transaksi Penjualan";
+$lang["sales_delete_successful"] = "Transaksi Penjualan berhasil dihapus";
+$lang["sales_delete_unsuccessful"] = "Transaksi Penjualan tidak berhasil dihapus";
+$lang["sales_description_abbrv"] = "Deskripsi";
+$lang["sales_discount"] = "Diskon %";
+$lang["sales_discount_included"] = "% Discount";
+$lang["sales_discount"] = "Discount";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "Ubah";
+$lang["sales_edit_item"] = "Ubah Item";
+$lang["sales_edit_sale"] = "Ubah Penjualan";
+$lang["sales_email_receipt"] = "e-Mail Faktur";
+$lang["sales_employee"] = "Karyawan";
+$lang["sales_error_editing_item"] = "mengubah item salah";
+$lang["sales_find_or_scan_item"] = "Cari/Scan Item";
+$lang["sales_find_or_scan_item_or_receipt"] = "Cari/Scan Item ATAU Faktur";
+$lang["sales_giftcard"] = "Gift Card";
+$lang["sales_giftcard_balance"] = "Giftcard Balance";
+$lang["sales_giftcard_number"] = "Nomor Gift Card";
+$lang["sales_id"] = "ID Penjualan";
+$lang["sales_invoice"] = "Invoice";
+$lang["sales_invoice_confirm"] = "This invoice will be sent to";
+$lang["sales_invoice_enable"] = "Create Invoice";
+$lang["sales_invoice_filter"] = "Invoices";
+$lang["sales_cash_filter"] = "Cash";
+$lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
+$lang["sales_invoice_number"] = "Nomor Nota";
+$lang["sales_invoice_number_duplicate"] = "Nomor Nota Double";
+$lang["sales_invoice_sent"] = "Invoice sent to";
+$lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
+$lang["sales_invoice_update"] = "Recount";
+$lang["sales_item_insufficient_of_stock"] = "Stok Item tidak mencukupi";
+$lang["sales_item_name"] = "Nama Item ";
+$lang["sales_item_number"] = "Item #";
+$lang["sales_item_out_of_stock"] = "Item tidak ada stok";
+$lang["sales_mode"] = "Jenis Transaksi";
+$lang["sales_must_enter_numeric"] = "Nilai yang dimasukkan harus angka numerik";
+$lang["sales_must_enter_numeric_giftcard"] = "Nomor Gift Card harus angka numerik";
+$lang["sales_new_customer"] = "Pelanggan Baru";
+$lang["sales_new_item"] = "Item Baru";
+$lang["sales_no_description"] = "None";
+$lang["sales_no_filter"] = "All";
+$lang["sales_no_items_in_cart"] = "Tidak ada Item dalam Keranjang Belanja";
+$lang["sales_no_sales_to_display"] = "No sales to display";
+$lang["sales_one_or_multiple"] = "";
+$lang["sales_takings"] = "Takings";
+$lang["sales_payment"] = "Type Pembayaran";
+$lang["sales_payment_amount"] = "Amount";
+$lang["sales_payment_not_cover_total"] = "Jumlah pembayaran tidak mencakup Total";
+$lang["sales_payment_type"] = "Type";
+$lang["sales_payments_total"] = "Total Pembayaran";
+$lang["sales_price"] = "Harga";
+$lang["sales_print_after_sale"] = "Cetak Faktur setelah penjualan";
+$lang["sales_quantity"] = "Jumlah.";
+$lang["sales_quantity_less_than_zero"] = "Peringatan!... Stok Inventori Kosong. Proses penjualan masih dapat dilanjutkan, Periksa Inventori.";
+$lang["sales_quantity_less_than_reorder_level"] = "Peringatan!... Stok Inventori Kosong.";
+$lang["sales_receipt"] = "Faktur Penjualan";
+$lang["sales_receipt_number"] = "POS #";
+$lang["sales_register"] = "Transaksi Penjualan";
+$lang["sales_remove_customer"] = "Hapus Pelanggan";
+$lang["sales_return"] = "Retur";
+$lang["sales_sale"] = "Penjualan";
+$lang["sales_sale_for_customer"] = "Pelanggan:";
+$lang["sales_sale_time"] = "Waktu";
+$lang["sales_select_customer"] = "Pilih Pelanggan (Opsional)";
+$lang["sales_send_invoice"] = "Send Invoice";
+$lang["sales_serial"] = "Serial";
+$lang["sales_show_invoice"] = "invoice";
+$lang["sales_show_receipt"] = "receipt";
+$lang["sales_start_typing_customer_name"] = "Ketik Nama Pelanggan...";
+$lang["sales_start_typing_item_name"] = "Ketik Nama Barang atau Scan Barcode...";
+$lang["sales_stock_location"] = "Lokasi Stock";
+$lang["sales_sub_total"] = "Sub Total";
+$lang["sales_successfully_deleted"] = "Transaksi Penjualan berhasil dihapus";
+$lang["sales_successfully_suspended_sale"] = "Penjualan anda telah berhasil ditangguhkan";
+$lang["sales_successfully_updated"] = "Penjualan berhasil diperbarui";
+$lang["sales_suspend_sale"] = "Tangguhkan";
+$lang["sales_suspended_sale_id"] = "ID Penjualan ditangguhkan";
+$lang["sales_suspended_sales"] = "Penangguhan";
+$lang["sales_tax"] = "Pajak";
+$lang["sales_tax_percent"] = "Pajak %";
+$lang["sales_total"] = "Total";
+$lang["sales_total_tax_exclusive"] = "Tax excluded";
+$lang["sales_transaction_failed"] = "Transaksi Penjualan Salah";
+$lang["sales_unable_to_add_item"] = "Tidak dapat menambahkan item dengan penjualan";
+$lang["sales_unsuccessfully_deleted"] = "Transaksi Penjualan tidak berhasil dihapus";
+$lang["sales_unsuccessfully_updated"] = "Penjualan tidak berhasil diperbarui";
+$lang["sales_unsuspend"] = "Batal Penangguhan";
+$lang["sales_unsuspend_and_delete"] = "Batalkan dan hapus penangguhan";
+$lang["sales_update"] = "Edit Sale";
+$lang["sales_date_range"] = "Rentang Tanggal";
+$lang["sales_none_selected"] = "Anda belum memilih item untuk diubah";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/id/suppliers_lang.php opensourcepos/application/language/id/suppliers_lang.php
--- pos-prod/application/language/id/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/id/suppliers_lang.php	2016-05-23 15:32:31.905839395 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new'] = 'Pemasok Baru';
-$lang['suppliers_supplier'] = 'Pemasok';
-$lang['suppliers_update'] = 'Ubah data Pemasok';
-$lang['suppliers_confirm_delete'] = 'Apakah Anda yakin ingin menghapus pemasok yang dipilih?';
-$lang['suppliers_none_selected'] = 'Anda belum memilih pemasok untuk dihapus';
-$lang['suppliers_error_adding_updating'] = 'Kesalahan Menambah / memperbarui data pemasok';
-$lang['suppliers_successful_adding'] = 'Anda telah berhasil menambahkan data pemasok';
-$lang['suppliers_successful_updating'] = 'Anda telah berhasil memperbarui data pemasok';
-$lang['suppliers_successful_deleted'] = 'Anda telah berhasil menghapus data pemasok';
-$lang['suppliers_one_or_multiple'] = 'Pemasok';
-$lang['suppliers_cannot_be_deleted'] = 'Tidak bisa dihapus pemasok yang dipilih, satu atau lebih dari pemasok yang dipilih memiliki penjualan.';
-$lang['suppliers_basic_information'] = 'Informasi Pemasok ';
-$lang['suppliers_account_number'] = 'Nomor Akun Pemasok';
-$lang['suppliers_company_name'] = 'Nama Perusahaan';
-$lang['suppliers_company_name_required'] = 'Nama Perusahaan wajib diisi';
-?>
+
+$lang["suppliers_account_number"] = "Nomor Akun Pemasok";
+$lang["suppliers_basic_information"] = "Informasi Pemasok ";
+$lang["suppliers_cannot_be_deleted"] = "Tidak bisa dihapus pemasok yang dipilih, satu atau lebih dari pemasok yang dipilih memiliki penjualan.";
+$lang["suppliers_company_name"] = "Nama Perusahaan";
+$lang["suppliers_company_name_required"] = "Nama Perusahaan wajib diisi";
+$lang["suppliers_agency_name"] = "Nama";
+$lang["suppliers_confirm_delete"] = "Apakah Anda yakin ingin menghapus pemasok yang dipilih?";
+$lang["suppliers_error_adding_updating"] = "Kesalahan Menambah / memperbarui data pemasok";
+$lang["suppliers_new"] = "Pemasok Baru";
+$lang["suppliers_none_selected"] = "Anda belum memilih pemasok untuk dihapus";
+$lang["suppliers_one_or_multiple"] = "Pemasok";
+$lang["suppliers_successful_adding"] = "Anda telah berhasil menambahkan data pemasok";
+$lang["suppliers_successful_deleted"] = "Anda telah berhasil menghapus data pemasok";
+$lang["suppliers_successful_updating"] = "Anda telah berhasil memperbarui data pemasok";
+$lang["suppliers_supplier"] = "Pemasok";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "Ubah data Pemasok";
Only in opensourcepos/application/language: index.html
Only in pos-prod/application/language: indonesia
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/common_lang.php opensourcepos/application/language/nl-BE/common_lang.php
--- pos-prod/application/language/nl-BE/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/common_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,41 +1,57 @@
 <?php
-$lang['common_common']='algemeen';
-$lang['common_submit']='Verzend';
-$lang['common_or']='Of';
-$lang['common_powered_by']='Powered by';
-$lang['common_welcome']='Welkom';
-$lang['common_logout']='Logout';
-$lang['common_list_of']='Lijst van';
-$lang['common_first_name']='Voornaam';
-$lang['common_last_name']='Achternaam';
-$lang['common_email']='Email';
-$lang['common_phone_number']='Telefoon';
-$lang['common_address_1']='Adres 1';
-$lang['common_address_2']='Adres 2';
-$lang['common_city']='Stad';
-$lang['common_state']='Provincie';
-$lang['common_zip']='Postcode';
-$lang['common_country']='Land';
-$lang['common_comments']='Commentaar';
-$lang['common_edit']='bewerk';
-$lang['common_search']='Zoek';
-$lang['common_delete']='Verwijder';
-$lang['common_remove']='Verwijder';
-$lang['common_view_recent_sales']='Bekijk recente verkoop';
-$lang['common_you_are_using_ospos']='You are using Open Source Point Of Sale Version';
-$lang['common_please_visit_my']='Bezoek mijn';
-$lang['common_website']='website';
-$lang['common_fields_required_message']='Velden met een * moeten ingevuld worden';
-$lang['common_learn_about_project']='om de laatste informatie te verkrijgen over het project';
-$lang['common_searched_for']='Gezocht op';
-$lang['common_first_name_required']='De voornaam moet ingevuld worden.';
-$lang['common_last_name_required']='De achternaam moet ingevuld worden.';
-$lang['common_email_invalid_format']='Je moet een geldig email adres invullen.';
-$lang['common_confirm_search']='U hebt een of meerdere rijen geselecteerd, deze zullen niet langer geselecteerd zijn na de zoekopdracht. Bent u zeker dat u wil verdergaan?';
-$lang['common_no_persons_to_display']='Er werden geen personen gevonden';
-$lang['common_return_policy']='Retourvoorwaarden';
-$lang['common_price']='Prijs';
-$lang['common_welcome_message']= 'Welkom in PHP Point Of Sale, klik beneden een module aan om te beginnen!';
-$lang['common_inv']='stock';
-$lang['common_det']='details';
-?>
+
+$lang["common_address_1"] = "Adres 1";
+$lang["common_address_2"] = "Adres 2";
+$lang["common_city"] = "Stad";
+$lang["common_comments"] = "Commentaar";
+$lang["common_common"] = "algemeen";
+$lang["common_confirm_search"] = "U hebt een of meerdere rijen geselecteerd, deze zullen niet langer geselecteerd zijn na de zoekopdracht. Bent u zeker dat u wil verdergaan?";
+$lang["common_country"] = "Land";
+$lang["common_date"] = "Datum";
+$lang["common_delete"] = "Verwijder";
+$lang["common_print"] = "Print";
+$lang["common_det"] = "details";
+$lang["common_edit"] = "bewerk";
+$lang["common_email"] = "Email";
+$lang["common_email_invalid_format"] = "Je moet een geldig email adres invullen.";
+$lang["common_fields_required_message"] = "Velden met een * moeten ingevuld worden";
+$lang["common_first_name"] = "Voornaam";
+$lang["common_first_name_required"] = "De voornaam moet ingevuld worden.";
+$lang["common_first_page"] = "Eerste";
+$lang["common_gender"] = "Geslacht";
+$lang["common_gender_female"] = "V";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "stock";
+$lang["common_last_name"] = "Achternaam";
+$lang["common_last_name_required"] = "De achternaam moet ingevuld worden.";
+$lang["common_last_page"] = "Laatste";
+$lang["common_learn_about_project"] = "om de laatste informatie te verkrijgen over het project";
+$lang["common_list_of"] = "Lijst van";
+$lang["common_logout"] = "Logout";
+$lang["common_new"] = "Nieuw";
+$lang["common_no_persons_to_display"] = "Er werden geen personen gevonden";
+$lang["common_or"] = "Of";
+$lang["common_phone_number"] = "Telefoon";
+$lang["common_phone_number_required"] = "";
+$lang["common_please_visit_my"] = "Bezoek mijn";
+$lang["common_powered_by"] = "Powered by";
+$lang["common_price"] = "Prijs";
+$lang["common_remove"] = "Verwijder";
+$lang["common_return_policy"] = "Retourvoorwaarden";
+$lang["common_search"] = "Zoek";
+$lang["common_search_options"] = "Zoek criteria";
+$lang["common_searched_for"] = "Gezocht op";
+$lang["common_state"] = "Provincie";
+$lang["common_submit"] = "Verzend";
+$lang["common_view_recent_sales"] = "Bekijk recente verkoop";
+$lang["common_website"] = "website";
+$lang["common_welcome"] = "Welkom";
+$lang["common_welcome_message"] = "Welkom in PHP Point Of Sale, klik beneden een module aan om te beginnen!";
+$lang["common_you_are_using_ospos"] = "You are using Open Source Point Of Sale Version";
+$lang["common_zip"] = "Postcode";
+$lang["common_import"] = "Import";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/config_lang.php opensourcepos/application/language/nl-BE/config_lang.php
--- pos-prod/application/language/nl-BE/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/config_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,36 +1,122 @@
 <?php
-$lang['config_info'] = 'Configuratie Informatie';
-$lang['config_company'] = 'Bedrijfsnaam';
-$lang['config_address'] = 'Adres';
-$lang['config_phone'] = 'Telefoon';
-$lang['config_website'] = 'Website';
-$lang['config_fax'] = 'Fax';
-$lang['config_default_tax_rate'] = 'Standaard VAT %';
-$lang['config_default_tax_rate_1'] = 'VAT 1 %';
-$lang['config_default_tax_rate_2'] = 'VAT 2 %';
-$lang['config_company_required'] = 'De bedrijfsnaam moet ingevuld worden';
-$lang['config_address_required'] = 'Het adres van het bedrijf moet ingevuld worden';
-$lang['config_phone_required'] = 'De telefoonnummer van het bedrijf moet ingevuld worden';
-$lang['config_default_tax_rate_required'] = 'Het percentage VAT moet ingevuld worden';
-$lang['config_default_tax_rate_number'] = 'Het percentage VAT moet een nummer zijn';
-$lang['config_company_website_url'] = 'De website van het bedrijf is geen geldige URL (http://...)';
-$lang['config_saved_successfully'] = 'Configuratie werd bewaard';
-$lang['config_saved_unsuccessfully'] = 'Configuratie kon niet worden bewaard';
-$lang['config_return_policy_required'] = 'De retourvoorwaarden moeten ingevuld worden';
-$lang['config_print_after_sale'] = 'Druk ticket na verkoop';
-$lang['config_language'] = 'Taal';
-$lang['config_timezone'] = 'Tijdzone';
-$lang['config_currency_symbol'] = 'Valuta';
-$lang['config_currency_side'] = 'Rechterkant'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Custom Veld 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Custom Veld 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Custom Veld 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Custom Veld 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Custom Veld 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Custom Veld 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Custom Veld 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Custom Veld 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Custom Veld 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Custom Veld 10'; //GARRISON ADDED 4/21/2013
-$lang['config_tax_included'] = 'VAT Ingebgrepen';
-?>
+
+$lang["config_address"] = "Adres";
+$lang["config_address_required"] = "Het adres van het bedrijf moet ingevuld worden";
+$lang["config_backup_button"] = "Backup";
+$lang["config_backup_database"] = "Backup Database";
+$lang["config_barcode_company"] = "Bedrijfsnaam";
+$lang["config_barcode_configuration"] = "Barcode Configuratie";
+$lang["config_barcode_content"] = "Inhoud Barcode";
+$lang["config_barcode_first_row"] = "Rij 1";
+$lang["config_barcode_font"] = "Lettertype";
+$lang["config_barcode_height"] = "Hoogte (px)";
+$lang["config_barcode_id"] = "Product id/naam";
+$lang["config_barcode_info"] = "Barcode instellingen";
+$lang["config_barcode_layout"] = "Barcode Layout";
+$lang["config_barcode_name"] = "Productnaam";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Aantal per rij";
+$lang["config_barcode_page_cellspacing"] = "Toon cellspatiëring";
+$lang["config_barcode_page_width"] = "Toon paginabreedte";
+$lang["config_barcode_price"] = "Prijs";
+$lang["config_barcode_quality"] = "Kwaliteit (1-100)";
+$lang["config_barcode_second_row"] = "Rij 2";
+$lang["config_barcode_third_row"] = "Rij 3";
+$lang["config_barcode_type"] = "Barcode Type";
+$lang["config_barcode_width"] = "Breedte (px)";
+$lang["config_barcode_generate_if_empty"] = "Genereer indien leeg";
+$lang["config_company"] = "Bedrijfsnaam";
+$lang["config_company_logo"] = "Logo";
+$lang["config_company_required"] = "De bedrijfsnaam moet ingevuld worden";
+$lang["config_company_website_url"] = "De website van het bedrijf is geen geldige URL (http://...)";
+$lang["config_currency_side"] = "Rechterkant";
+$lang["config_currency_symbol"] = "Valuta";
+$lang["config_custom1"] = "Custom Veld 1";
+$lang["config_custom10"] = "Custom Veld 10";
+$lang["config_custom2"] = "Custom Veld 2";
+$lang["config_custom3"] = "Custom Veld 3";
+$lang["config_custom4"] = "Custom Veld 4";
+$lang["config_custom5"] = "Custom Veld 5";
+$lang["config_custom6"] = "Custom Veld 6";
+$lang["config_custom7"] = "Custom Veld 7";
+$lang["config_custom8"] = "Custom Veld 8";
+$lang["config_custom9"] = "Custom Veld 9";
+$lang["config_decimal_point"] = "Decimal Point";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Standaard Korting %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "Standaard VAT %";
+$lang["config_default_tax_rate_1"] = "VAT 1 %";
+$lang["config_default_tax_rate_2"] = "VAT 2 %";
+$lang["config_default_tax_rate_number"] = "Het percentage VAT moet een nummer zijn";
+$lang["config_default_tax_rate_required"] = "Het percentage VAT moet ingevuld worden";
+$lang["config_fax"] = "Fax";
+$lang["config_general_configuration"] = "Algemene Instellingen";
+$lang["config_info"] = "Systeeminstellingen";
+$lang["config_invoice_default_comments"] = "Factuur Mededeling";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Factuur Printer";
+$lang["config_jsprintsetup_required"] = "Opgelet! De uitgeschakelde functionaliteit werkt enkel met de jsPrintSetup addon in Firefox.";
+$lang["config_language"] = "Taal";
+$lang["config_lines_per_page"] = "Lijnen Per Pagina";
+$lang["config_lines_per_page_number"] = "The lines per page must be a number";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locaties";
+$lang["config_location_info"] = "Instellingen Locatie";
+$lang["config_logout"] = "Wilt u een backup maken alvorens uit te loggen?";
+$lang["config_number_format"] = "Number Format";
+$lang["config_phone"] = "Telefoon";
+$lang["config_phone_required"] = "De telefoonnummer van het bedrijf moet ingevuld worden";
+$lang["config_print_bottom_margin"] = "Marge Beneden";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Marge Links";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Marge Rechts";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Toon Printvenster";
+$lang["config_print_top_margin"] = "Marge Boven";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Instellingen";
+$lang["config_receipt_info"] = "Ticket Instellingen";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Toon VAT";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "Formattering Order #";
+$lang["config_return_policy_required"] = "De retourvoorwaarden moeten ingevuld worden";
+$lang["config_sales_invoice_format"] = "Formattering Aankoop #";
+$lang["config_saved_successfully"] = "Configuratie werd bewaard";
+$lang["config_saved_unsuccessfully"] = "Configuratie kon niet worden bewaard";
+$lang["config_show_total_discount"] = "Toon Totale Korting";
+$lang["config_stock_location"] = "Stock locatie";
+$lang["config_stock_location_duplicate"] = "Vul een unieke naam in";
+$lang["config_stock_location_invalid_chars"] = "De bedrijfsnaam moet ingevuld worden";
+$lang["config_stock_location_required"] = "Naam van de stock locatie is een verplicht veld";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "VAT Inbegrepen";
+$lang["config_thousands_separator"] = "Thousands Separator";
+$lang["config_timezone"] = "Tijdzone";
+$lang["config_use_invoice_template"] = "Gebruik template voor facturen";
+$lang["config_website"] = "Website";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/customers_lang.php opensourcepos/application/language/nl-BE/customers_lang.php
--- pos-prod/application/language/nl-BE/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/customers_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new']='Nieuwe Klant';
-$lang['customers_customer']='Klant';
-$lang['customers_update']='Bewerk Klant';
-$lang['customers_confirm_delete']='Bent u zeker dat u de geselecteerde klanten wil verwijderen?';
-$lang['customers_none_selected']='U hebt geen klanten geselecteerd';
-$lang['customers_error_adding_updating'] = 'Fout bij het toevoegen/bewerken van een klant';
-$lang['customers_successful_adding']='Klant succesvol aangemaakt';
-$lang['customers_successful_updating']='Wijzigingen klantgegevens bewaard voor ';
-$lang['customers_successful_deleted']='Er werd(en)';
-$lang['customers_one_or_multiple']='klant(en) verwijderd';
-$lang['customers_cannot_be_deleted']='De geselecteerde klanten konden niet worden verwijderd. Eén of meerdere klanten hebben verkoopsgegevens in de database zitten.';
-$lang['customers_basic_information']='Klantgegevens';
-$lang['customers_account_number']='Btwnummer';
-$lang['customers_taxable']='Belastbaar';
-?>
+
+$lang["customers_account_number"] = "Btwnummer";
+$lang["customers_account_number_duplicate"] = "Deze VAT nummer is reeds aanwezig in de database";
+$lang["customers_basic_information"] = "Klantgegevens";
+$lang["customers_cannot_be_deleted"] = "De geselecteerde klanten konden niet worden verwijderd. Eén of meerdere klanten hebben verkoopsgegevens in de database zitten.";
+$lang["customers_company_name"] = "Bedrijfsnaam";
+$lang["customers_confirm_delete"] = "Bent u zeker dat u de geselecteerde klanten wil verwijderen?";
+$lang["customers_customer"] = "Klant";
+$lang["customers_error_adding_updating"] = "Fout bij het toevoegen/bewerken van een klant";
+$lang["customers_new"] = "Nieuwe Klant";
+$lang["customers_none_selected"] = "U hebt geen klanten geselecteerd";
+$lang["customers_one_or_multiple"] = "klant(en) verwijderd";
+$lang["customers_successful_adding"] = "Klant succesvol aangemaakt";
+$lang["customers_successful_deleted"] = "Er werd(en)";
+$lang["customers_successful_updating"] = "Wijzigingen klantgegevens bewaard voor ";
+$lang["customers_taxable"] = "Belastbaar";
+$lang["customers_update"] = "Bewerk Klant";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/employees_lang.php opensourcepos/application/language/nl-BE/employees_lang.php
--- pos-prod/application/language/nl-BE/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/employees_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee']='Werknemer';
-$lang['employees_new']='N. Werknemer';
-$lang['employees_update']='Update Werknemer';
-$lang['employees_confirm_delete']='Bent u zeker dat u de geselecteerde werknemers wil verwijderen?';
-$lang['employees_none_selected']='U hebt geen werknemers geselecteerd';
-$lang['employees_error_adding_updating'] = 'Error adding/updating employee';
-$lang['employees_successful_adding']='You have successfully added employee';
-$lang['employees_successful_updating']='You have successfully updated employee';
-$lang['employees_successful_deleted']='Er werd(en)';
-$lang['employees_one_or_multiple']='werknemer(s) verwijderd';
-$lang['employees_cannot_be_deleted']='Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
-$lang['employees_username']='Gebruikersnaam';
-$lang['employees_password']='Paswoord';
-$lang['employees_repeat_password']='Herhaal Paswoord';
-$lang['employees_username_required']='Gebruikersnaam moet ingevuld worden';
-$lang['employees_username_minlength']='Gebruikersnaam moet minstens 5 characters lang zijn';
-$lang['employees_password_required']='Paswoord moet ingevuld worden';
-$lang['employees_password_minlength']='Paswoord moet minstens 8 characters lang zijn';
-$lang['employees_password_must_match']='Paswoorden komen niet overeen';
-$lang['employees_basic_information']='Employee Basic Information';
-$lang['employees_login_info']='Employee Login Info';
-$lang['employees_permission_info']='Employee Permissions and Access';
-$lang['employees_permission_desc']='Check the boxes below to grant access to modules';
-$lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
-$lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
-?>
+
+$lang["employees_basic_information"] = "Employee Basic Information";
+$lang["employees_cannot_be_deleted"] = "Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)";
+$lang["employees_confirm_delete"] = "Bent u zeker dat u de geselecteerde werknemers wil verwijderen?";
+$lang["employees_employee"] = "Werknemer";
+$lang["employees_error_adding_updating"] = "Error adding/updating employee";
+$lang["employees_error_deleting_demo_admin"] = "You can not delete the demo admin user";
+$lang["employees_error_updating_demo_admin"] = "You can not change the demo admin user";
+$lang["employees_login_info"] = "Employee Login Info";
+$lang["employees_new"] = "N. Werknemer";
+$lang["employees_none_selected"] = "U hebt geen werknemers geselecteerd";
+$lang["employees_one_or_multiple"] = "werknemer(s) verwijderd";
+$lang["employees_password"] = "Paswoord";
+$lang["employees_password_minlength"] = "Paswoord moet minstens 8 characters lang zijn";
+$lang["employees_password_must_match"] = "Paswoorden komen niet overeen";
+$lang["employees_password_required"] = "Paswoord moet ingevuld worden";
+$lang["employees_permission_desc"] = "Check the boxes below to grant access to modules";
+$lang["employees_permission_info"] = "Employee Permissions and Access";
+$lang["employees_repeat_password"] = "Herhaal Paswoord";
+$lang["employees_successful_adding"] = "You have successfully added employee";
+$lang["employees_successful_deleted"] = "Er werd(en)";
+$lang["employees_successful_updating"] = "You have successfully updated employee";
+$lang["employees_update"] = "Update Werknemer";
+$lang["employees_username"] = "Gebruikersnaam";
+$lang["employees_username_minlength"] = "Gebruikersnaam moet minstens 5 characters lang zijn";
+$lang["employees_username_required"] = "Gebruikersnaam moet ingevuld worden";
+$lang["employees_subpermission_required"] = "Selecteer minstens één permissie voor elke module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/error_lang.php opensourcepos/application/language/nl-BE/error_lang.php
--- pos-prod/application/language/nl-BE/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/error_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module']='U hebt geen toegang tot de module genaamd ';
-$lang['error_unknown']='onbekend';
-?>
+
+$lang["error_no_permission_module"] = "U hebt geen toegang tot de module genaamd ";
+$lang["error_unknown"] = "onbekend";
Only in pos-prod/application/language/nl-BE: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/giftcards_lang.php opensourcepos/application/language/nl-BE/giftcards_lang.php
--- pos-prod/application/language/nl-BE/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/giftcards_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = 'Cadeaubon Nummer';
-$lang['giftcards_card_value'] = 'Waarde';
-$lang['giftcards_basic_information'] = 'Cadeaubon Info';
-$lang['giftcards_number_required'] = 'Cadeaubon Nummer is een verplicht veld';
-$lang['giftcards_value_required'] = 'Cadeaubon Waarde is een verplicht veld';
-$lang['giftcards_number'] = 'Cadeaubon Nummer moet een getal zijn';
-$lang['giftcards_value'] = 'Cadeaubon Waarde moet een getal zijn';
-$lang['giftcards_person_id'] = 'Klant';
-$lang['giftcards_retrive_giftcard_info'] = 'Haal Info Op';
-$lang['giftcards_description'] = 'Omschrijving';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'UPC Database';
-$lang['giftcards_cannot_find_giftcard'] = 'Kan geen cadeaubon niet vinden';
-$lang['giftcards_info_provided_by'] = 'Info afgeleverd door';
-$lang['giftcards_number_information'] = 'Cadeaubon Nummer';
-$lang['giftcards_new'] = 'N. Cadeaubon';
-$lang['giftcards_update'] = 'Bewaar Cadeaubon';
-$lang['giftcards_giftcard'] = 'Cadeaubon';
-$lang['giftcards_edit_multiple_giftcards'] = 'Bewerk meedere cadeaubons';
-$lang['giftcards_category'] = 'Categorie';
-$lang['giftcards_cost_price'] = 'Aankoopprijs';
-$lang['giftcards_unit_price'] = 'Verkoopsprijs';
-$lang['giftcards_tax_1'] = 'VAT';
-$lang['giftcards_tax_2'] = 'VAT 2';
-$lang['giftcards_sales_tax_1'] = 'VAT';
-$lang['giftcards_sales_tax_2'] = 'VAT 2';
-$lang['giftcards_tax_percent'] = 'VAT %';
-$lang['giftcards_tax_percents'] = 'VAT Percentages';
-$lang['giftcards_reorder_level'] = 'Reorder Level';
-$lang['giftcards_quantity'] = 'In stock';
-$lang['giftcards_no_giftcards_to_display'] = 'Er werden geen cadeaubons gevonden';
-$lang['giftcards_bulk_edit'] = 'Bewerk Selectie';
-$lang['giftcards_confirm_delete'] = 'Bent u zeker dat u de geselecteerde cadeaubons wil verwijderen?';
-$lang['giftcards_none_selected'] = 'U hebt geen cadeaubons geselecteerd';
-$lang['giftcards_confirm_bulk_edit'] = 'Bent u zeker dat u de geselecteerde cadeaubons wil aanpassen?';
-$lang['giftcards_successful_bulk_edit'] = 'Cadeaubons werden succesvol bewaard';
-$lang['giftcards_error_updating_multiple'] = 'Fout bij het bewaren van cadeaubons';
-$lang['giftcards_edit_fields_you_want_to_update'] = 'Bewerk de velden die u wil aanpassen voor ALLE geselecteerde cadeaubons';
-$lang['giftcards_error_adding_updating'] = 'Fout bij het bewaren van cadeaubons';
-$lang['giftcards_successful_adding'] = 'Cadeaubon succesvol toegevoegd';
-$lang['giftcards_successful_updating'] = 'Wijzigingen bewaard voor';
-$lang['giftcards_successful_deleted'] = 'Er werd(en)';
-$lang['giftcards_one_or_multiple'] = 'cadeaubon(s) verwijderd';
-$lang['giftcards_cannot_be_deleted'] = 'De cadeaubons konden niet worden verwijderd.';
-$lang['giftcards_none'] = 'Geen';
-$lang['giftcards_supplier'] = 'Leverancier';
-$lang['giftcards_generate_barcodes'] = 'Genereer Barcodes';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'U moet tenminste 1 cadeuabon selecteren om een barcode te genereren';
-$lang['giftcards_excel_import_failed'] = 'Excel import mislukt';
-$lang['giftcards_allow_alt_description'] = 'Aanpasbare omschrijving';
-$lang['giftcards_is_serialized'] = 'Optelbaar';
-$lang['giftcards_low_inventory_giftcards'] = 'Cadeaubons niet in stock';
-$lang['giftcards_serialized_giftcards'] = 'Optelbare cadeaubons';
-$lang['giftcards_no_description_giftcards'] = 'Cadeaubons zonder omschrijving';
-$lang['giftcards_inventory_comments'] = 'Commentaar';
-$lang['giftcards_count'] = 'Update Stock';
-$lang['giftcards_details_count'] = 'Stockgegevens';
-$lang['giftcards_add_minus'] = 'Corrigatie hoeveelheid';
-$lang['giftcards_current_quantity'] = 'Huidige hoeveelheid';
-$lang['giftcards_quantity_required'] = 'Hoeveelheid moet ingevuld worden. Druk Sluit ( X ) om te annuleren';
-$lang['giftcards_do_nothing'] = 'Doe niets';
-$lang['giftcards_change_all_to_serialized'] = 'Genummerd';
-$lang['giftcards_change_all_to_unserialized'] = 'Niet genummerd';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Aanpasb. omschrijvingen';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Vast omschrijvingen';
-$lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
-$lang['giftcards_manually_editing_of_quantity'] = 'Manuele aanpassing hoeveelheid';
-?>
+
+$lang["giftcards_add_minus"] = "Corrigatie hoeveelheid";
+$lang["giftcards_allow_alt_description"] = "Aanpasbare omschrijving";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Resterende waarde cadeaubon %1 is %2!";
+$lang["giftcards_basic_information"] = "Cadeaubon Info";
+$lang["giftcards_bulk_edit"] = "Bewerk Selectie";
+$lang["giftcards_cannot_be_deleted"] = "De cadeaubons konden niet worden verwijderd.";
+$lang["giftcards_cannot_find_giftcard"] = "Kan geen cadeaubon niet vinden";
+$lang["giftcards_card_value"] = "Waarde";
+$lang["giftcards_category"] = "Categorie";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "Aanpasb. omschrijvingen";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "Vast omschrijvingen";
+$lang["giftcards_change_all_to_serialized"] = "Genummerd";
+$lang["giftcards_change_all_to_unserialized"] = "Niet genummerd";
+$lang["giftcards_confirm_bulk_edit"] = "Bent u zeker dat u de geselecteerde cadeaubons wil aanpassen?";
+$lang["giftcards_confirm_delete"] = "Bent u zeker dat u de geselecteerde cadeaubons wil verwijderen?";
+$lang["giftcards_cost_price"] = "Aankoopprijs";
+$lang["giftcards_count"] = "Update Stock";
+$lang["giftcards_current_quantity"] = "Huidige hoeveelheid";
+$lang["giftcards_description"] = "Omschrijving";
+$lang["giftcards_details_count"] = "Stockgegevens";
+$lang["giftcards_do_nothing"] = "Doe niets";
+$lang["giftcards_edit_fields_you_want_to_update"] = "Bewerk de velden die u wil aanpassen voor ALLE geselecteerde cadeaubons";
+$lang["giftcards_edit_multiple_giftcards"] = "Bewerk meedere cadeaubons";
+$lang["giftcards_error_adding_updating"] = "Fout bij het bewaren van cadeaubons";
+$lang["giftcards_error_updating_multiple"] = "Fout bij het bewaren van cadeaubons";
+$lang["giftcards_excel_import_failed"] = "Excel import mislukt";
+$lang["giftcards_generate_barcodes"] = "Genereer Barcodes";
+$lang["giftcards_giftcard"] = "Cadeaubon";
+$lang["giftcards_giftcard_number"] = "Cadeaubon Nummer";
+$lang["giftcards_info_provided_by"] = "Info afgeleverd door";
+$lang["giftcards_inventory_comments"] = "Commentaar";
+$lang["giftcards_is_serialized"] = "Optelbaar";
+$lang["giftcards_low_inventory_giftcards"] = "Cadeaubons niet in stock";
+$lang["giftcards_manually_editing_of_quantity"] = "Manuele aanpassing hoeveelheid";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "U moet tenminste 1 cadeuabon selecteren om een barcode te genereren";
+$lang["giftcards_new"] = "N. Cadeaubon";
+$lang["giftcards_no_description_giftcards"] = "Cadeaubons zonder omschrijving";
+$lang["giftcards_no_giftcards_to_display"] = "Er werden geen cadeaubons gevonden";
+$lang["giftcards_none"] = "Geen";
+$lang["giftcards_none_selected"] = "U hebt geen cadeaubons geselecteerd";
+$lang["giftcards_number"] = "Cadeaubon Nummer moet een getal zijn";
+$lang["giftcards_number_information"] = "Cadeaubon Nummer";
+$lang["giftcards_number_required"] = "Cadeaubon Nummer is een verplicht veld";
+$lang["giftcards_one_or_multiple"] = "cadeaubon(s) verwijderd";
+$lang["giftcards_person_id"] = "Klant";
+$lang["giftcards_quantity"] = "In stock";
+$lang["giftcards_quantity_required"] = "Hoeveelheid moet ingevuld worden. Druk Sluit ( X ) om te annuleren";
+$lang["giftcards_reorder_level"] = "Reorder Level";
+$lang["giftcards_retrive_giftcard_info"] = "Haal Info Op";
+$lang["giftcards_sales_tax_1"] = "VAT";
+$lang["giftcards_sales_tax_2"] = "VAT 2";
+$lang["giftcards_serialized_giftcards"] = "Optelbare cadeaubons";
+$lang["giftcards_successful_adding"] = "Cadeaubon succesvol toegevoegd";
+$lang["giftcards_successful_bulk_edit"] = "Cadeaubons werden succesvol bewaard";
+$lang["giftcards_successful_deleted"] = "Er werd(en)";
+$lang["giftcards_successful_updating"] = "Wijzigingen bewaard voor";
+$lang["giftcards_supplier"] = "Leverancier";
+$lang["giftcards_tax_1"] = "VAT";
+$lang["giftcards_tax_2"] = "VAT 2";
+$lang["giftcards_tax_percent"] = "VAT %";
+$lang["giftcards_tax_percents"] = "VAT Percentages";
+$lang["giftcards_unit_price"] = "Verkoopsprijs";
+$lang["giftcards_upc_database"] = "UPC Database";
+$lang["giftcards_update"] = "Bewaar Cadeaubon";
+$lang["giftcards_use_inventory_menu"] = "Use Inv. Menu";
+$lang["giftcards_value"] = "Cadeaubon Waarde moet een getal zijn";
+$lang["giftcards_value_required"] = "Cadeaubon Waarde is een verplicht veld";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/index.html opensourcepos/application/language/nl-BE/index.html
--- pos-prod/application/language/nl-BE/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/index.html	2016-05-23 15:32:31.906839380 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/item_kits_lang.php opensourcepos/application/language/nl-BE/item_kits_lang.php
--- pos-prod/application/language/nl-BE/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/item_kits_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'Naam';
-$lang['item_kits_description'] = 'Omschrijving';
-$lang['item_kits_no_item_kits_to_display'] = 'Geen sets gevonden';
-$lang['item_kits_update'] = 'Bewaar Set';
-$lang['item_kits_new'] = 'Nieuwe Set';
-$lang['item_kits_none_selected'] = "U hebt geen sets geselecteerd";
-$lang['item_kits_info'] = 'Product Set Info';
-$lang['item_kits_successful_adding'] = 'Product set succesvol toegevoegd';
-$lang['item_kits_successful_updating'] = 'Wijzigingen product set bewaard';
-$lang['item_kits_error_adding_updating'] = 'Fout bij het toevoegen/aanpassen van een set';
-$lang['item_kits_successful_deleted'] = 'Er werd(en)';
-$lang['item_kits_confirm_delete'] = 'Bent u zeker dat u de geselecteerde sets wil verwijderen?';
-$lang['item_kits_one_or_multiple'] = 'Product set(s) verwijderd';
-$lang['item_kits_cannot_be_deleted'] = 'De sets konden niet worden verwijderd';
-$lang['item_kits_add_item'] = 'Nieuw Product';
-$lang['item_kits_items'] = 'Producten';
-$lang['item_kits_item'] = 'Product';
-$lang['item_kits_quantity'] = 'In stock';
-?>
+
+$lang["item_kits_add_item"] = "Nieuw Product";
+$lang["item_kits_cannot_be_deleted"] = "De sets konden niet worden verwijderd";
+$lang["item_kits_confirm_delete"] = "Bent u zeker dat u de geselecteerde sets wil verwijderen?";
+$lang["item_kits_description"] = "Omschrijving";
+$lang["item_kits_error_adding_updating"] = "Fout bij het toevoegen/aanpassen van een set";
+$lang["item_kits_info"] = "Product Set Info";
+$lang["item_kits_item"] = "Product";
+$lang["item_kits_items"] = "Producten";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "Naam";
+$lang["item_kits_new"] = "Nieuwe Set";
+$lang["item_kits_no_item_kits_to_display"] = "Geen sets gevonden";
+$lang["item_kits_none_selected"] = "U hebt geen sets geselecteerd";
+$lang["item_kits_one_or_multiple"] = "Product set(s) verwijderd";
+$lang["item_kits_quantity"] = "In stock";
+$lang["item_kits_successful_adding"] = "Product set succesvol toegevoegd";
+$lang["item_kits_successful_deleted"] = "Er werd(en)";
+$lang["item_kits_successful_updating"] = "Wijzigingen product set bewaard";
+$lang["item_kits_update"] = "Bewaar Set";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/items_lang.php opensourcepos/application/language/nl-BE/items_lang.php
--- pos-prod/application/language/nl-BE/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/items_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,81 +1,88 @@
 <?php
-$lang['items_item_number'] = 'UPC/EAN/ISBN';
-$lang['items_retrive_item_info'] = 'Haal productinformatie op';
-$lang['items_description'] = 'Omschrijving';
-$lang['items_amazon'] = 'Amazon';
-$lang['items_upc_database'] = 'UPC Database';
-$lang['items_cannot_find_item'] = 'Er werd geen informatie gevonden omtrent product';
-$lang['items_info_provided_by'] = 'Info provided by';
-$lang['items_basic_information'] = 'Productinformatie';
-$lang['items_number_information'] = 'Productnummer';
-$lang['items_new'] = 'Nieuw Product';
-$lang['items_update'] = 'Bewerk Product';
-$lang['items_item'] = 'Product';
-$lang['items_edit_multiple_items'] = 'Meerdere Producten Bewerken';
-$lang['items_name'] = 'Productnaam';
-$lang['items_category'] = 'Categorie';
-$lang['items_cost_price'] = 'Aankoopprijs';
-$lang['items_unit_price'] = 'Verkoopprijs';
-$lang['items_tax_1'] = 'VAT';
-$lang['items_tax_2'] = 'VAT 2';
-$lang['items_sales_tax_1'] = 'VAT';
-$lang['items_sales_tax_2'] = 'VAT 2';
-$lang['items_tax_percent'] = 'VAT %';
-$lang['items_tax_percents'] = 'VAT';
-$lang['items_reorder_level'] = 'Reorder Level';
-$lang['items_quantity'] = 'Stock';
-$lang['items_reorder_level'] = 'Reorder Level';
-$lang['items_no_items_to_display'] = 'Er werden geen producten gevonden';
-$lang['items_bulk_edit'] = 'Bewerk Selectie';
-$lang['items_confirm_delete'] = 'Bent u zeker dat u de geselecteerde producten wil verwijderen?';
-$lang['items_none_selected'] = 'U hebt geen producten geselecteerd';
-$lang['items_confirm_bulk_edit'] = 'Bent u zeker dat u de geselecteerde producten wil aanpassen?';
-$lang['items_successful_bulk_edit'] = 'Producten werden succesvol bewaard';
-$lang['items_error_updating_multiple'] = 'Fout bij het bewaren van producten';
-$lang['items_edit_fields_you_want_to_update'] = 'Bewerk de velden aan die u wil aanpassen voor ALLE geselecteerde producten';
-$lang['items_error_adding_updating'] = 'Fout bij het toevoegen/aanpassen van een product';
-$lang['items_successful_adding'] = 'Product succesvol toegevoegd';
-$lang['items_successful_updating'] = 'Wijzigingen bewaard voor';
-$lang['items_successful_deleted'] = 'Er werd(en)';
-$lang['items_one_or_multiple'] = 'product(en) verwijderd';
-$lang['items_cannot_be_deleted'] = 'De geselecteerde producten konden niet worden verwijderd.';
-$lang['items_name_required'] = 'Productnaam moet ingevuld worden';
-$lang['items_category_required'] = 'Categorie moet ingevuld worden';
-$lang['items_buy_price_required'] = 'Buy price is a required field';
-$lang['items_unit_price_required'] = 'Verkoopprijs moet ingevuld worden';
-$lang['items_cost_price_required'] = 'Aankoopprijs moet ingevuld worden';
-$lang['items_tax_percent_required'] = 'Taxpercentage moet ingevuld worden';
-$lang['items_quantity_required'] = 'Hoeveelheid moet ingevuld worden';
-$lang['items_reorder_level_required'] = 'Reorder level moet ingevuld worden';
-$lang['items_unit_price_number'] = 'Verkoopprijs moet een cijfer zijn';
-$lang['items_cost_price_number'] = 'Kostprijs moet een cijfer zijn';
-$lang['items_quantity_number'] = 'Hoeveelheid moet een cijfer zijn';
-$lang['items_reorder_level_number'] = 'Reorder level moet een cijfer zijn';
-$lang['items_none'] = 'Geen';
-$lang['items_supplier'] = 'Leverancier';
-$lang['items_generate_barcodes'] = 'Genereer Barcodes';
-$lang['items_must_select_item_for_barcode'] = 'U moet ten minste 1 product selecteren om een barcode te genereren';
-$lang['items_excel_import_failed'] = 'Excel import mislukt';
-$lang['items_allow_alt_description'] = 'Aanpasbare omschrijving';
-$lang['items_is_serialized'] = 'Optelbaar';
-$lang['items_low_inventory_items'] = 'Producten niet in stock';
-$lang['items_serialized_items'] = 'Optelbare producten';
-$lang['items_no_description_items'] = 'Producten zonder omschrijving';
-$lang['items_search_custom_items'] = 'Doorzoek Tags';//GARRISON ADDED
-$lang['items_inventory_comments'] = 'Commentaar';
-$lang['items_count'] = 'Update Stock';
-$lang['items_details_count'] = 'Stockgegevens';
-$lang['items_add_minus'] = 'Corrigatie hoeveelheid';
-$lang['items_current_quantity'] = 'Huidige hoeveelheid';
-$lang['items_quantity_required'] = 'Hoeveelheid moet ingevuld worden. Druk sluit ( X ) om te annuleren';
-$lang['items_do_nothing'] = 'Doe Niets';
-$lang['items_change_all_to_serialized'] = 'Genummerd';
-$lang['items_change_all_to_unserialized'] = 'Niet genummerd';
-$lang['items_change_all_to_allow_alt_desc'] = 'Aanpasb. omschrijvingen';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Vaste omschrijvingen';
-$lang['items_use_inventory_menu'] = 'Use Inv. Menu';
-$lang['items_manually_editing_of_quantity'] = 'Manuele aanpassing hoeveelheid';
-$lang['items_inventory'] = 'Stock';
-$lang['items_location'] = 'Locatie';
-$lang['items_is_deleted'] = 'Verwijderd';// Parq 131215
-?>
+
+$lang["items_add_minus"] = "Corrigatie hoeveelheid";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "Aanpasbare omschrijving";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "Productinformatie";
+$lang["items_bulk_edit"] = "Bewerk Selectie";
+$lang["items_buy_price_required"] = "Buy price is a required field";
+$lang["items_cannot_be_deleted"] = "De geselecteerde producten konden niet worden verwijderd.";
+$lang["items_cannot_find_item"] = "Er werd geen informatie gevonden omtrent product";
+$lang["items_category"] = "Categorie";
+$lang["items_category_required"] = "Categorie moet ingevuld worden";
+$lang["items_change_all_to_allow_alt_desc"] = "Aanpasb. omschrijvingen";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Vaste omschrijvingen";
+$lang["items_change_all_to_serialized"] = "Genummerd";
+$lang["items_change_all_to_unserialized"] = "Niet genummerd";
+$lang["items_confirm_bulk_edit"] = "Bent u zeker dat u de geselecteerde producten wil aanpassen?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "Alle taxgegevens zullen overschreven worden!";
+$lang["items_confirm_delete"] = "Bent u zeker dat u de geselecteerde producten wil verwijderen?";
+$lang["items_cost_price"] = "Aankoopprijs";
+$lang["items_cost_price_number"] = "Kostprijs moet een cijfer zijn";
+$lang["items_cost_price_required"] = "Aankoopprijs moet ingevuld worden";
+$lang["items_count"] = "Update Stock";
+$lang["items_current_quantity"] = "Huidige hoeveelheid";
+$lang["items_description"] = "Omschrijving";
+$lang["items_details_count"] = "Stockgegevens";
+$lang["items_do_nothing"] = "Doe Niets";
+$lang["items_edit_fields_you_want_to_update"] = "Bewerk de velden aan die u wil aanpassen voor ALLE geselecteerde producten";
+$lang["items_edit_multiple_items"] = "Meerdere Producten Bewerken";
+$lang["items_error_adding_updating"] = "Fout bij het toevoegen/aanpassen van een product";
+$lang["items_error_updating_multiple"] = "Fout bij het bewaren van producten";
+$lang["items_excel_import_failed"] = "Excel import mislukt";
+$lang["items_generate_barcodes"] = "Genereer Barcodes";
+$lang["items_image"] = "Afbeelding";
+$lang["items_info_provided_by"] = "Info provided by";
+$lang["items_inventory"] = "Stock";
+$lang["items_inventory_comments"] = "Commentaar";
+$lang["items_is_deleted"] = "Verwijderd";
+$lang["items_is_serialized"] = "Optelbaar";
+$lang["items_item"] = "Product";
+$lang["items_item_number"] = "UPC/EAN/ISBN";
+$lang["items_item_number_duplicate"] = "De barcode nummer is reeds aanwezig in de database";
+$lang["items_location"] = "Locatie";
+$lang["items_empty_upc_items"] = "Zonder barcode";
+$lang["items_low_inventory_items"] = "Niet in stock";
+$lang["items_manually_editing_of_quantity"] = "Manuele aanpassing hoeveelheid";
+$lang["items_must_select_item_for_barcode"] = "U moet ten minste 1 product selecteren om een barcode te genereren";
+$lang["items_name"] = "Productnaam";
+$lang["items_name_required"] = "Productnaam moet ingevuld worden";
+$lang["items_new"] = "Nieuw Product";
+$lang["items_no_description_items"] = "Producten zonder omschrijving";
+$lang["items_no_items_to_display"] = "Er werden geen producten gevonden";
+$lang["items_none"] = "Geen";
+$lang["items_none_selected"] = "U hebt geen producten geselecteerd";
+$lang["items_number_information"] = "Productnummer";
+$lang["items_number_required"] = "UPC/EAN/ISBN moet ingevuld worden";
+$lang["items_one_or_multiple"] = "product(en) verwijderd";
+$lang["items_quantity"] = "Stock";
+$lang["items_quantity_number"] = "Hoeveelheid moet een cijfer zijn";
+$lang["items_quantity_required"] = "Hoeveelheid moet ingevuld worden";
+$lang["items_receiving_quantity"] = "Aantal per lijn";
+$lang["items_reorder_level"] = "Reorder Level";
+$lang["items_reorder_level_number"] = "Reorder level moet een cijfer zijn";
+$lang["items_reorder_level_required"] = "Reorder level moet ingevuld worden";
+$lang["items_retrive_item_info"] = "Haal productinformatie op";
+$lang["items_sales_tax_1"] = "VAT";
+$lang["items_sales_tax_2"] = "VAT 2";
+$lang["items_search_custom_items"] = "Doorzoek Tags";
+$lang["items_serialized_items"] = "Serialized Items";
+$lang["items_stock_location"] = "Stock locatie";
+$lang["items_successful_adding"] = "Product succesvol toegevoegd";
+$lang["items_successful_bulk_edit"] = "Producten werden succesvol bewaard";
+$lang["items_successful_deleted"] = "Er werd(en)";
+$lang["items_successful_updating"] = "Wijzigingen bewaard voor";
+$lang["items_supplier"] = "Leverancier";
+$lang["items_tax_1"] = "VAT";
+$lang["items_tax_2"] = "VAT 2";
+$lang["items_tax_percent"] = "VAT %";
+$lang["items_tax_percent_required"] = "Taxpercentage moet ingevuld worden";
+$lang["items_tax_percents"] = "VAT";
+$lang["items_unit_price"] = "Verkoopprijs";
+$lang["items_unit_price_number"] = "Verkoopprijs moet een cijfer zijn";
+$lang["items_unit_price_required"] = "Verkoopprijs moet ingevuld worden";
+$lang["items_upc_database"] = "UPC Database";
+$lang["items_update"] = "Bewerk Product";
+$lang["items_use_inventory_menu"] = "Use Inv. Menu";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/login_lang.php opensourcepos/application/language/nl-BE/login_lang.php
--- pos-prod/application/language/nl-BE/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/login_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login'] = 'Login';
-$lang['login_username'] = 'Gebruiker';
-$lang['login_password'] = 'Paswoord';
-$lang['login_go'] = 'Verstuur';
-$lang['login_invalid_username_and_password'] = 'Ongeldige gebruiker/paswoord';
-$lang['login_welcome_message'] = 'Welkom in deze module. Voer gebruikersnaam en paswoord in om verder te gaan.';
-?>
+
+$lang["login_go"] = "Verstuur";
+$lang["login_invalid_username_and_password"] = "Ongeldige gebruiker/paswoord";
+$lang["login_login"] = "Login";
+$lang["login_password"] = "Paswoord";
+$lang["login_username"] = "Gebruiker";
+$lang["login_welcome_message"] = "Welkom in deze module. Voer gebruikersnaam en paswoord in om verder te gaan.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/module_lang.php opensourcepos/application/language/nl-BE/module_lang.php
--- pos-prod/application/language/nl-BE/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/module_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home'] = 'Home';
 
-$lang['module_customers'] = 'Klanten';
-$lang['module_customers_desc'] = 'Zoek, bewerk, verwijder en voeg klanten toe';
-
-$lang['module_suppliers'] = 'Leveranciers';
-$lang['module_suppliers_desc'] = 'Zoek, bewerk, verwijder en voeg leveranciers toe';
-
-$lang['module_employees'] = 'Werknemers';
-$lang['module_employees_desc'] = 'Zoek, bewerk, verwijder en voeg werknemers toe';
-
-$lang['module_sales'] = 'Kassa';
-$lang['module_sales_desc'] = 'Verwerk aankopen en retours';
-
-$lang['module_reports'] = 'Rapporten';
-$lang['module_reports_desc'] = 'Toon en genereer rapporten';
-
-$lang['module_items'] = 'Producten';
-$lang['module_items_desc'] = 'Zoek, bewerk, verwijder en voeg producten toe';
-
-$lang['module_config'] = 'Configuratie';
-$lang['module_config_desc'] = 'Globale configuratie aanpassen';
-
-$lang['module_receivings'] = 'Orders';
-$lang['module_receivings_desc'] = 'Verwerk binnenkomende orders';
-
-$lang['module_giftcards'] = 'Cadeaubons';
-$lang['module_giftcards_desc'] = 'Zoek, bewerk, verwijder en voeg cadeaubons toe';
-
-$lang['module_item_kits'] = 'Productsets';
-$lang['module_item_kits_desc'] = 'Zoek, bewerk, verwijder en voeg productsets toe';
-
-?>
+$lang["module_config"] = "Configuratie";
+$lang["module_config_desc"] = "Globale configuratie aanpassen";
+$lang["module_customers"] = "Klanten";
+$lang["module_customers_desc"] = "Zoek, bewerk, verwijder en voeg klanten toe";
+$lang["module_employees"] = "Werknemers";
+$lang["module_employees_desc"] = "Zoek, bewerk, verwijder en voeg werknemers toe";
+$lang["module_giftcards"] = "Cadeaubons";
+$lang["module_giftcards_desc"] = "Zoek, bewerk, verwijder en voeg cadeaubons toe";
+$lang["module_home"] = "Home";
+$lang["module_item_kits"] = "Productsets";
+$lang["module_item_kits_desc"] = "Zoek, bewerk, verwijder en voeg productsets toe";
+$lang["module_items"] = "Producten";
+$lang["module_items_desc"] = "Zoek, bewerk, verwijder en voeg producten toe";
+$lang["module_receivings"] = "Orders";
+$lang["module_receivings_desc"] = "Verwerk binnenkomende orders";
+$lang["module_reports"] = "Rapporten";
+$lang["module_reports_desc"] = "Toon en genereer rapporten";
+$lang["module_sales"] = "Kassa";
+$lang["module_sales_desc"] = "Verwerk aankopen en retours";
+$lang["module_suppliers"] = "Leveranciers";
+$lang["module_suppliers_desc"] = "Zoek, bewerk, verwijder en voeg leveranciers toe";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/receivings_lang.php opensourcepos/application/language/nl-BE/receivings_lang.php
--- pos-prod/application/language/nl-BE/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/receivings_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,26 +1,51 @@
 <?php
-$lang['recvs_register'] = 'Orders';
-$lang['recvs_mode'] = 'Order type';
-$lang['recvs_receiving'] = 'Inkoop';
-$lang['recvs_return'] = 'Teruggave';
-$lang['recvs_total'] = 'Totaal';
-$lang['recvs_cost'] = 'Kost';
-$lang['recvs_quantity'] = 'Aantal';
-$lang['recvs_discount'] = 'Korting %';
-$lang['recvs_edit'] = 'Bewerk';
-$lang['recvs_new_supplier'] = 'N. Leverancier';
-$lang['recvs_supplier'] = 'Leverancier';
-$lang['recvs_select_supplier'] = 'Selecteer Leverancier (Optioneel)';
-$lang['recvs_start_typing_supplier_name'] = 'Typ naam leverancier..';
-$lang['recvs_unable_to_add_item'] = 'Onmogelijk om product aan order toe te voegen';
-$lang['recvs_error_editing_item'] = 'Fout bij het bewerken product';
-$lang['recvs_receipt'] = 'Ontvangstbewijs';
-$lang['recvs_complete_receiving'] = 'Bevestig';
-$lang['recvs_confirm_finish_receiving'] = 'Bent u zeker dat u dit order wil ingeven? Dit kan niet ongedaan gemaakt worden.';
-$lang['recvs_confirm_cancel_receiving'] = 'Bent u zeker dat u dit order wil wissen?';
-$lang['recvs_find_or_scan_item'] = 'Zoek/Scan Product';
-$lang['recvs_find_or_scan_item_or_receipt'] = 'Zoek/Scan Product OF Tickets';
-$lang['recvs_id'] = 'Ordernummer';
-$lang['recvs_item_name'] = 'Productnaam';
-$lang['receivings_transaction_failed'] = 'Order transactie mislukt';
-?>
+
+$lang["receivings_transaction_failed"] = "Order transactie mislukt";
+$lang["recvs_basic_information"] = "Order informatie";
+$lang["recvs_cancel_receiving"] = "Annuleer";
+$lang["recvs_cannot_be_deleted"] = "Order(s) konden niet verwijderd worden";
+$lang["recvs_comments"] = "Commentaar";
+$lang["recvs_complete_receiving"] = "Bevestig";
+$lang["recvs_confirm_cancel_receiving"] = "Bent u zeker dat u dit order wil wissen?";
+$lang["recvs_confirm_finish_receiving"] = "Bent u zeker dat u dit order wil ingeven? Dit kan niet ongedaan gemaakt worden.";
+$lang["recvs_cost"] = "Kost";
+$lang["recvs_date"] = "Order Datum";
+$lang["recvs_date_required"] = "Er moet een correcte datum ingevuld worden";
+$lang["recvs_date_type"] = "Datum is vereist";
+$lang["recvs_delete_confirmation"] = "Bent u zeker dat u dit order wil verwijderen? Dit kan niet ongedaan gemaakt worden.";
+$lang["recvs_delete_entire_sale"] = "Verwijder";
+$lang["recvs_discount"] = "Korting %";
+$lang["recvs_edit"] = "Bewerk";
+$lang["recvs_edit_sale"] = "Bewerk";
+$lang["recvs_employee"] = "Werknemer";
+$lang["recvs_error_editing_item"] = "Fout tijdens updaten product";
+$lang["recvs_error_requisition"] = "Kon de stock transfer niet vervolledigen";
+$lang["recvs_find_or_scan_item"] = "Zoek/Scan Product";
+$lang["recvs_find_or_scan_item_or_receipt"] = "Zoek/Scan Product OF Tickets";
+$lang["recvs_id"] = "Ordernummer";
+$lang["recvs_invoice_enable"] = "Maak Factuur";
+$lang["recvs_invoice_number"] = "Factuur #";
+$lang["recvs_invoice_number_duplicate"] = "Gelieve een uniek factuurnummer in te voeren";
+$lang["recvs_item_name"] = "Productnaam";
+$lang["recvs_mode"] = "Order type";
+$lang["recvs_new_supplier"] = "N. Leverancier";
+$lang["recvs_one_or_multiple"] = "order(s)";
+$lang["recvs_print_after_sale"] = "Print Ticket";
+$lang["recvs_quantity"] = "Aantal";
+$lang["recvs_receipt"] = "Ontvangstbewijs";
+$lang["recvs_receipt_number"] = "Order #";
+$lang["recvs_receiving"] = "Inkoop";
+$lang["recvs_register"] = "Orders";
+$lang["recvs_requisition"] = "Transfer";
+$lang["recvs_return"] = "Teruggave";
+$lang["recvs_select_supplier"] = "Selecteer Leverancier (Optioneel)";
+$lang["recvs_start_typing_supplier_name"] = "Typ naam leverancier..";
+$lang["recvs_stock_destination"] = "Stock bestemming";
+$lang["recvs_stock_locaiton"] = "Stock locatie";
+$lang["recvs_stock_source"] = "Stock bron";
+$lang["recvs_successfully_deleted"] = "Er werd(en)";
+$lang["recvs_successfully_updated"] = "Order werd geupdatet";
+$lang["recvs_supplier"] = "Leverancier";
+$lang["recvs_total"] = "Totaal";
+$lang["recvs_unable_to_add_item"] = "Onmogelijk om product aan order toe te voegen";
+$lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/reports_lang.php opensourcepos/application/language/nl-BE/reports_lang.php
--- pos-prod/application/language/nl-BE/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/reports_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,88 +1,108 @@
 <?php
-$lang['reports_reports'] = 'Rapporten';
-$lang['reports_report'] = 'Rapport';
-$lang['reports_welcome_message'] = 'Welkom bij de rapporten. Selecteer hier een rapport.';
-$lang['reports_sales_summary_report'] = 'Overzicht Verkoop';
-$lang['reports_categories_summary_report'] = 'Rapport Overzicht Categorieën';
-$lang['reports_customers_summary_report'] = 'Rapport Overzicht Klanten';
-$lang['reports_suppliers_summary_report'] = 'Rapport Overzicht Leveranciers';
-$lang['reports_items_summary_report'] = 'Rapport Overzicht Producten';
-$lang['reports_employees_summary_report'] = 'Rapport Overzicht Werknemers';
-$lang['reports_taxes_summary_report'] = 'Rapport Overzicht Belastingen';
-$lang['reports_date'] = 'Datum';
-$lang['reports_name'] = 'Naam';
-$lang['reports_quantity_purchased'] = 'Aangekochte Hoeveelheid';
-$lang['reports_sale_id'] = 'Ticket°';
-$lang['reports_items_purchased'] = 'Hoeveelheid';
-$lang['reports_sold_by'] = 'Werknemer';
-$lang['reports_sold_to'] = 'Klant';
-$lang['reports_category'] = 'Categorie';
-$lang['reports_customer'] = 'Klant';
-$lang['reports_employee'] = 'Werknemer';
-$lang['reports_item'] = 'Product';
-$lang['reports_items'] = 'Producten';
-$lang['reports_supplier'] = 'Leverancier';
-$lang['reports_employees'] = 'Werknemrs';
-$lang['reports_subtotal'] = 'Subtotaal';
-$lang['reports_total'] = 'Totaal';
-$lang['reports_tax'] = 'VAT';
-$lang['reports_profit'] = 'Winst';
-$lang['reports_report_input'] = 'Input Rapport';
-$lang['reports_type'] = 'Type';
-$lang['reports_date_range'] = 'Periode';
-$lang['reports_today'] = 'Vandaag';
-$lang['reports_yesterday'] = 'Gisteren';
-$lang['reports_last_7'] = 'Vorige 7 Dagen';
-$lang['reports_this_month'] = 'Deze Maand';
-$lang['reports_last_month'] = 'Vorige Maand';
-$lang['reports_this_year'] = 'Dit Jaar';
-$lang['reports_last_year'] = 'Vorig Jaar';
-$lang['reports_all_time'] = 'Alle';
-$lang['reports_detailed_sales_report'] = 'Gedetailleerd Rapport Verkoop';
-$lang['reports_comments'] = 'Commentaar';
-$lang['reports_discount'] = 'Korting';
-$lang['reports_payment_type'] = 'Betaald';
-$lang['reports_sales'] = 'Verkoop';
-$lang['reports_categories'] = 'Categorieën';
-$lang['reports_customers'] = 'Klanten';
-$lang['reports_suppliers'] = 'Leveranciers';
-$lang['reports_items'] = 'Producten';
-$lang['reports_employees'] = 'Werknemers';
-$lang['reports_taxes'] = 'Belastingen';
-$lang['reports_customer'] = 'Klant';
-$lang['reports_employee'] = 'Werknemer';
-$lang['reports_tax_percent'] = 'VAT Percentage';
-$lang['reports_quantity_purchased'] = 'Hoeveelheid';
-$lang['reports_serial_number'] = 'Nummer';
-$lang['reports_description'] = 'Omschrijving';
-$lang['reports_date'] = 'Datum';
-$lang['reports_sales_amount'] = 'Sales amount';
-$lang['reports_revenue'] = 'Inkomsten';
-$lang['reports_discounts'] = 'Kortingen';
-$lang['reports_discounts_summary_report'] = 'Overzicht Kortingen';
-$lang['reports_discount_percent'] = 'Kortingspercentage';
-$lang['reports_count'] = 'Aantal';
-$lang['reports_summary_reports'] = 'Overzicht Rapporten';
-$lang['reports_graphical_reports'] = 'Grafische Rapporten';
-$lang['reports_detailed_reports'] = 'Gedetailleerde Rapporten';
-$lang['reports_inventory_reports'] = 'Rapporten Bevoorrading';
-$lang['reports_low_inventory'] = 'Herbevoorrading';
-$lang['reports_inventory_summary'] = 'Overzicht Vooraad';
-$lang['reports_item_number'] = 'Productnummer';
-$lang['reports_reorder_level'] = 'Reorder Level';
-$lang['reports_low_inventory_report'] = 'Rapport Herbevoorrading';
-$lang['reports_item_name'] = 'Product Naam';
-$lang['reports_inventory_summary_report'] = 'Rapport Overzicht Vooraad';
-$lang['reports_payment_type'] = 'Payment Type';
-$lang['reports_payments_summary_report'] = 'Overzicht Betalingen';
-$lang['reports_payments'] = 'Betalingen';
-$lang['reports_sale_type'] = 'Type';
-$lang['reports_receivings'] = 'Orders';
-$lang['reports_received_by'] = 'Ontvangen door';
-$lang['reports_supplied_by'] = 'Geleverd door';
-$lang['reports_items_received'] = 'Items Ontvangen';
-$lang['reports_detailed_receivings_report'] = 'Gedetailleerd Raport Orders';
-$lang['reports_all'] = 'Alle';
-$lang['reports_returns'] = 'Retour';
-$lang['reports_discount'] = 'Kortingen';
-?>
+
+$lang["reports_all"] = "Alle";
+$lang["reports_all_time"] = "Alle";
+$lang["reports_categories"] = "Categorieën";
+$lang["reports_categories_summary_report"] = "Rapport Overzicht Categorieën";
+$lang["reports_category"] = "Categorie";
+$lang["reports_comments"] = "Commentaar";
+$lang["reports_count"] = "Aantal";
+$lang["reports_customer"] = "Klant";
+$lang["reports_customers"] = "Klanten";
+$lang["reports_customers_summary_report"] = "Rapport Overzicht Klanten";
+$lang["reports_date"] = "Datum";
+$lang["reports_date_range"] = "Periode";
+$lang["reports_description"] = "Omschrijving";
+$lang["reports_detailed_receivings_report"] = "Gedetailleerd Raport Orders";
+$lang["reports_detailed_reports"] = "Gedetailleerde Rapporten";
+$lang["reports_detailed_requisition_report"] = "";
+$lang["reports_detailed_sales_report"] = "Gedetailleerd Rapport Verkoop";
+$lang["reports_discount"] = "Korting";
+$lang["reports_discount_percent"] = "Kortingspercentage";
+$lang["reports_discounts"] = "Kortingen";
+$lang["reports_discounts_summary_report"] = "Overzicht Kortingen";
+$lang["reports_employee"] = "Werknemer";
+$lang["reports_employees"] = "Werknemrs";
+$lang["reports_employees_summary_report"] = "Rapport Overzicht Werknemers";
+$lang["reports_graphical_reports"] = "Grafische Rapporten";
+$lang["reports_inventory"] = "";
+$lang["reports_inventory_low"] = "Herbevoorrading";
+$lang["reports_inventory_low_report"] = "Rapport Herbevoorrading";
+$lang["reports_inventory_reports"] = "Rapporten Bevoorrading";
+$lang["reports_inventory_summary"] = "Overzicht Vooraad";
+$lang["reports_inventory_summary_report"] = "Rapport Overzicht Vooraad";
+$lang["reports_item"] = "Product";
+$lang["reports_item_name"] = "Product Naam";
+$lang["reports_item_number"] = "Productnummer";
+$lang["reports_items"] = "Producten";
+$lang["reports_items_purchased"] = "Hoeveelheid";
+$lang["reports_items_received"] = "Items Ontvangen";
+$lang["reports_items_summary_report"] = "Rapport Overzicht Producten";
+$lang["reports_last_7"] = "Vorige 7 Dagen";
+$lang["reports_last_month"] = "Vorige Maand";
+$lang["reports_last_year"] = "Vorig Jaar";
+$lang["reports_low_inventory"] = "";
+$lang["reports_low_inventory_report"] = "";
+$lang["reports_name"] = "Naam";
+$lang["reports_payment_type"] = "Betaald";
+$lang["reports_payments"] = "Betalingen";
+$lang["reports_payments_summary_report"] = "Overzicht Betalingen";
+$lang["reports_profit"] = "Winst";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "Aangekochte Hoeveelheid";
+$lang["reports_received_by"] = "Ontvangen door";
+$lang["reports_receiving_id"] = "";
+$lang["reports_receiving_type"] = "";
+$lang["reports_receivings"] = "Orders";
+$lang["reports_reorder_level"] = "Reorder Level";
+$lang["reports_report"] = "Rapport";
+$lang["reports_report_input"] = "Input Rapport";
+$lang["reports_reports"] = "Rapporten";
+$lang["reports_requisition"] = "";
+$lang["reports_requisition_by"] = "";
+$lang["reports_requisition_id"] = "";
+$lang["reports_requisition_item"] = "";
+$lang["reports_requisition_item_quantity"] = "";
+$lang["reports_requisition_related_item"] = "";
+$lang["reports_requisition_related_item_total_quantity"] = "";
+$lang["reports_requisition_related_item_unit_quantity"] = "";
+$lang["reports_requisitions"] = "";
+$lang["reports_returns"] = "Retour";
+$lang["reports_revenue"] = "Inkomsten";
+$lang["reports_sale_id"] = "Ticket°";
+$lang["reports_sale_type"] = "Type";
+$lang["reports_sales"] = "Verkoop";
+$lang["reports_sales_amount"] = "Sales amount";
+$lang["reports_sales_summary_report"] = "Overzicht Verkoop";
+$lang["reports_serial_number"] = "Nummer";
+$lang["reports_sold_by"] = "Werknemer";
+$lang["reports_sold_to"] = "Klant";
+$lang["reports_stock_location"] = "Stock Locatie";
+$lang["reports_subtotal"] = "Subtotaal";
+$lang["reports_summary_reports"] = "Overzicht Rapporten";
+$lang["reports_supplied_by"] = "Geleverd door";
+$lang["reports_supplier"] = "Leverancier";
+$lang["reports_suppliers"] = "Leveranciers";
+$lang["reports_suppliers_summary_report"] = "Rapport Overzicht Leveranciers";
+$lang["reports_tax"] = "VAT";
+$lang["reports_tax_percent"] = "VAT Percentage";
+$lang["reports_taxes"] = "Belastingen";
+$lang["reports_taxes_summary_report"] = "Rapport Overzicht Belastingen";
+$lang["reports_this_month"] = "Deze Maand";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "Dit Jaar";
+$lang["reports_today"] = "Vandaag";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "Totaal";
+$lang["reports_type"] = "Type";
+$lang["reports_welcome_message"] = "Welkom bij de rapporten. Selecteer hier een rapport.";
+$lang["reports_yesterday"] = "Gisteren";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "Aankoopprijs";
+$lang["reports_unit_price"] = "Verkoopprijs";
+$lang["reports_sub_total_value"] = "Subtotaal";
+$lang["reports_total_inventory_value"] = "Totale waarde stock";
+$lang["reports_zero_and_less"] = "Nul en minder";
+$lang["reports_more_than_zero"] = "Meer dan nul";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/sales_lang.php opensourcepos/application/language/nl-BE/sales_lang.php
--- pos-prod/application/language/nl-BE/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/sales_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,87 +1,117 @@
 <?php
-$lang['sales_giftcard_number']='Cadeaubon nummer';
-$lang['sales_giftcard']='Cadeaubon';
-$lang['sales_register']='Kassa';
-$lang['sales_mode']='Type Registratie';
-$lang['sales_new_item'] = 'Nieuw Product';
-$lang['sales_item_name'] = 'Naam';
-$lang['sales_item_number'] = 'Product #';
-$lang['sales_new_customer'] = 'Nieuwe klant';
-$lang['sales_customer'] = 'Klant';
-$lang['sales_no_items_in_cart']='Er zijn geen aankopen geselecteerd';
-$lang['sales_total']='Totaal';
-$lang['sales_tax_percent']='VAT %';
-$lang['sales_price']='Ecxl. VAT';
-$lang['sales_quantity']='Aantal';
-$lang['sales_discount']='%';
-$lang['sales_edit']='Bewerk';
-$lang['sales_payment']='Betaalmethode';
-$lang['sales_edit_item']='Bewaar';
-$lang['sales_find_or_scan_item']='Zoek/Scan Product';
-$lang['sales_find_or_scan_item_or_receipt']='Zoek/Scan Product of Ticket';
-$lang['sales_select_customer']='Selecteer Klant (Optioneel)';
-$lang['sales_start_typing_item_name']='Typ naam product of barcode...';
-$lang['sales_start_typing_customer_name']='Typ naam klant...';
-$lang['sales_sub_total']='Subtotaal excl. VAT';
-$lang['sales_tax']='VAT';
-$lang['sales_comment']='Commentaar';
-$lang['sales_unable_to_add_item']='Onmogelijk om product toe te voegen';
-$lang['sales_sale_for_customer']='Klant:';
-$lang['sales_remove_customer']='Verwijder Klant';
-$lang['sales_error_editing_item']='Fout bij bewerken';
-$lang['sales_complete_sale']='Bevestig';
-$lang['sales_cancel_sale']='Annuleer';
-$lang['sales_add_payment']='Betaal';
-$lang['sales_receipt']='Ticket #';
-$lang['sales_receipt_number']='Ticket #';
-$lang['sales_id']='Nummer Verkoop ';
-$lang['sales_sale']='Verkoop';
-$lang['sales_return']='Retour';
-$lang['sales_confirm_finish_sale'] = 'Bent u zeker dat u deze aankoop wil invoeren? Dit kan niet ongedaan gemaakt worden.';
-$lang['sales_confirm_cancel_sale'] = 'Bent u zeker dat u deze aankoop wil verwijderen?';
-$lang['sales_cash'] = 'Contant';
-$lang['sales_check'] = 'Waardebon';
-$lang['sales_debit'] = 'Bancontact';
-$lang['sales_credit'] = 'Kredietkaart';
-$lang['sales_giftcard'] = 'Cadeaubon';
-$lang['sales_amount_tendered'] = 'Ontvangen bedrag';
-$lang['sales_change_due'] = 'Wisselgeld terug';
-$lang['sales_payment_not_cover_total'] = 'Betaalde hoeveelheid is onvoldoende';
-$lang['sales_transaction_failed'] = 'Transactie mislukt';
-$lang['sales_must_enter_numeric'] = 'Het ontvangen bedrag moet een numerieke waarde zijn';
-$lang['sales_must_enter_numeric_giftcard'] = 'Er moet een geldige code worden ingevuld voor de cadeaubon';
-$lang['sales_serial'] = 'Nummer';
-$lang['sales_description_abbrv'] = 'Omschr.';
-$lang['sales_item_out_of_stock'] = 'Product is niet meer in voorraad';
-$lang['sales_item_insufficient_of_stockfi'] = 'Product is niet meer in voorraad';
-$lang['sales_quantity_less_than_zero'] = 'Waarschuwing, de gewenste hoeveelheid is onvoldoende. U kunt deze aankoop verwerken, maar kijk toch even de voorraad na.';
-$lang['sales_successfully_updated']='Wijzigingen bewaard voor ticket';
-$lang['sales_unsuccessfully_updated']='Fout bij het bewaren van ticket';
-$lang['sales_edit_sale']='Bewerk Ticket';
-$lang['sales_employee']='Werknemer';
-$lang['sales_delete_successful']='De geselecteerde aanko(o)p(en) werden verwijderd';
-$lang['sales_delete_unsuccessful']='De geselecteerde aankopen konden niet worden verwijderd.';
-$lang['sales_delete_entire_sale']='Verwijder';
-$lang['sales_delete_confirmation']='Bent u zeker dat u deze aankoop wil verwijderen?';
-$lang['sales_date']='Datum';
-$lang['sales_delete_successful'] = 'U hebt een aankoop verwijderd';
-$lang['sales_delete_unsuccessful'] = 'U kan deze aankoop niet verwijderen';
-$lang['sales_suspend_sale'] = 'Bewaar aankoop';
-$lang['sales_confirm_suspend_sale'] = 'Bent u zeker dat u deze aankoop wil bewaren?';
-$lang['sales_suspended_sales'] = 'Bewaarde Aankopen';
-$lang['sales_suspended_sale_id'] = 'ID';
-$lang['sales_date'] = 'Date';
-$lang['sales_comments'] = 'Commentaar';
-$lang['sales_unsuspend_and_delete'] = '';
-$lang['sales_unsuspend'] = 'Hervat';
-$lang['sales_successfully_suspended_sale'] = 'Uw aankoop werd met sucess bewaard';
-$lang['sales_email_receipt'] = 'E-Mail Ticket';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Korting';
-$lang['sales_sale_time']='Datum';
-$lang['sales_payments_total'] = 'Betaald bedrag';
-$lang['sales_amount_due'] = 'Te betalen';
-$lang['sales_payment_type'] = "Type";
-$lang['sales_payment_amount'] = "Bedrag";
-$lang['sales_basic_information']='Ticket informatie';
-?>
+
+$lang["sales_add_payment"] = "Betaal";
+$lang["sales_amount_due"] = "Te betalen";
+$lang["sales_amount_tendered"] = "Ontvangen bedrag";
+$lang["sales_basic_information"] = "Ticket informatie";
+$lang["sales_cancel_sale"] = "Annuleer";
+$lang["sales_cash"] = "Contant";
+$lang["sales_change_due"] = "Wisselgeld terug";
+$lang["sales_check"] = "Waardebon";
+$lang["sales_check_balance"] = "Waardebon terug";
+$lang["sales_comment"] = "Commentaar";
+$lang["sales_comments"] = "Commentaar";
+$lang["sales_complete_sale"] = "Bevestig";
+$lang["sales_confirm_cancel_sale"] = "Bent u zeker dat u deze aankoop wil verwijderen?";
+$lang["sales_confirm_delete"] = "Bent u zeker dat u de geselecteerde aankopen wil verwijderen?";
+$lang["sales_confirm_finish_sale"] = "Bent u zeker dat u deze aankoop wil invoeren? Dit kan niet ongedaan gemaakt worden.";
+$lang["sales_confirm_suspend_sale"] = "Bent u zeker dat u deze aankoop wil bewaren?";
+$lang["sales_credit"] = "Kredietkaart";
+$lang["sales_customer"] = "Klant";
+$lang["sales_date"] = "Datum";
+$lang["sales_date_required"] = "Gelieve een correcte datum in te vullen";
+$lang["sales_date_type"] = "Er moet een correcte datum ingevuld worden";
+$lang["sales_debit"] = "Bancontact";
+$lang["sales_delete_confirmation"] = "Bent u zeker dat u deze aankoop wil verwijderen?";
+$lang["sales_delete_entire_sale"] = "Verwijder";
+$lang["sales_delete_successful"] = "De geselecteerde aanko(o)p(en) werden verwijderd";
+$lang["sales_delete_unsuccessful"] = "De geselecteerde aankopen konden niet worden verwijderd.";
+$lang["sales_description_abbrv"] = "Omschr.";
+$lang["sales_discount"] = "%";
+$lang["sales_discount_included"] = "% Korting";
+$lang["sales_discount"] = "Korting";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "Bewerk";
+$lang["sales_edit_item"] = "Bewaar";
+$lang["sales_edit_sale"] = "Bewerk Ticket";
+$lang["sales_email_receipt"] = "E-Mail Ticket";
+$lang["sales_employee"] = "Werknemer";
+$lang["sales_error_editing_item"] = "Fout bij bewerken";
+$lang["sales_find_or_scan_item"] = "Zoek/Scan Product";
+$lang["sales_find_or_scan_item_or_receipt"] = "Zoek/Scan Product of Ticket";
+$lang["sales_giftcard"] = "Cadeaubon";
+$lang["sales_giftcard_balance"] = "Cadeaubon Resterend";
+$lang["sales_giftcard_number"] = "Cadeaubon nummer";
+$lang["sales_id"] = "Nummer Verkoop ";
+$lang["sales_invoice"] = "Factuur";
+$lang["sales_invoice_confirm"] = "Deze factuur zal verstuurd worden naar";
+$lang["sales_invoice_enable"] = "Maak Factuur";
+$lang["sales_invoice_filter"] = "Facturen";
+$lang["sales_cash_filter"] = "Contant";
+$lang["sales_invoice_no_email"] = "Er werd geen email adres gevonden voor deze klant";
+$lang["sales_invoice_number"] = "Factuur #";
+$lang["sales_invoice_number_duplicate"] = "Vul een unieke nummer in";
+$lang["sales_invoice_sent"] = "Factuur verstuurd naar";
+$lang["sales_invoice_unsent"] = "Fout bij het versturen van factuur naar";
+$lang["sales_invoice_update"] = "Hernummer";
+$lang["sales_item_insufficient_of_stock"] = "Product is niet meer in voorraad";
+$lang["sales_item_name"] = "Naam";
+$lang["sales_item_number"] = "Product #";
+$lang["sales_item_out_of_stock"] = "Product is niet meer in voorraad";
+$lang["sales_mode"] = "Type Registratie";
+$lang["sales_must_enter_numeric"] = "Het ontvangen bedrag moet een numerieke waarde zijn";
+$lang["sales_must_enter_numeric_giftcard"] = "Er moet een geldige code worden ingevuld voor de cadeaubon";
+$lang["sales_new_customer"] = "Nieuwe klant";
+$lang["sales_new_item"] = "Nieuw Product";
+$lang["sales_no_description"] = "Geen";
+$lang["sales_no_filter"] = "Alle";
+$lang["sales_no_items_in_cart"] = "Er zijn geen aankopen geselecteerd";
+$lang["sales_no_sales_to_display"] = "Er werden geen aankopen gevonden";
+$lang["sales_one_or_multiple"] = "aankopen verwijderd";
+$lang["sales_takings"] = "Overzicht";
+$lang["sales_payment"] = "Betaalmethode";
+$lang["sales_payment_amount"] = "Bedrag";
+$lang["sales_payment_not_cover_total"] = "Betaalde hoeveelheid is onvoldoende";
+$lang["sales_payment_type"] = "Type";
+$lang["sales_payments_total"] = "Betaald bedrag";
+$lang["sales_price"] = "Prijs";
+$lang["sales_print_after_sale"] = "Print Ticket";
+$lang["sales_quantity"] = "Aantal";
+$lang["sales_quantity_less_than_zero"] = "Waarschuwing, de gewenste hoeveelheid is onvoldoende. U kunt deze aankoop verwerken, maar kijk toch even de voorraad na.";
+$lang["sales_quantity_less_than_reorder_level"] = "Waarschuwing, de gewenste hoeveelheid stock is overgeschreden.";
+$lang["sales_receipt"] = "Ticket #";
+$lang["sales_receipt_number"] = "Ticket #";
+$lang["sales_register"] = "Kassa";
+$lang["sales_remove_customer"] = "Verwijder Klant";
+$lang["sales_return"] = "Retour";
+$lang["sales_sale"] = "Verkoop";
+$lang["sales_sale_for_customer"] = "Klant:";
+$lang["sales_sale_time"] = "Datum";
+$lang["sales_select_customer"] = "Selecteer Klant (Optioneel)";
+$lang["sales_send_invoice"] = "Vestuur Factuur";
+$lang["sales_serial"] = "Nummer";
+$lang["sales_show_invoice"] = "factuur";
+$lang["sales_show_receipt"] = "ticket";
+$lang["sales_start_typing_customer_name"] = "Typ naam klant...";
+$lang["sales_start_typing_item_name"] = "Typ naam product of barcode...";
+$lang["sales_stock_location"] = "Stock locatie";
+$lang["sales_sub_total"] = "Subtotaal";
+$lang["sales_successfully_deleted"] = "Uw aankoop werd verwijded";
+$lang["sales_successfully_suspended_sale"] = "Uw aankoop werd met sucess bewaard";
+$lang["sales_successfully_updated"] = "Wijzigingen bewaard voor ticket";
+$lang["sales_suspend_sale"] = "Bewaar aankoop";
+$lang["sales_suspended_sale_id"] = "ID";
+$lang["sales_suspended_sales"] = "Bewaarde Aankopen";
+$lang["sales_tax"] = "VAT";
+$lang["sales_tax_percent"] = "VAT %";
+$lang["sales_total"] = "Totaal";
+$lang["sales_total_tax_exclusive"] = "Totaal";
+$lang["sales_transaction_failed"] = "Transactie mislukt";
+$lang["sales_unable_to_add_item"] = "Onmogelijk om product toe te voegen";
+$lang["sales_unsuccessfully_deleted"] = "De aankoop kon niet verwijderd worden";
+$lang["sales_unsuccessfully_updated"] = "Fout bij het bewaren van ticket";
+$lang["sales_unsuspend"] = "Hervat";
+$lang["sales_unsuspend_and_delete"] = "";
+$lang["sales_update"] = "Bewerk Ticket";
+$lang["sales_date_range"] = "Periode";
+$lang["sales_none_selected"] = "U hebt geen aankopen geselecteerd";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/nl-BE/suppliers_lang.php opensourcepos/application/language/nl-BE/suppliers_lang.php
--- pos-prod/application/language/nl-BE/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/nl-BE/suppliers_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new']='N. Leverancier';
-$lang['suppliers_supplier']='Leverancier';
-$lang['suppliers_update']='Bewerk Leverancier';
-$lang['suppliers_confirm_delete']='Bent u zeker dat u de geselecteerde leveranciers wil verwijderen?';
-$lang['suppliers_none_selected']='U hebt geen leveranciers geselecteerd';
-$lang['suppliers_error_adding_updating'] = 'Fout bij het toevoegen/aanpassen van een leverancier';
-$lang['suppliers_successful_adding']='Leverancier succesvol toegevoegd';
-$lang['suppliers_successful_updating']='Wijzigingen leveranciersgegevens bewaard';
-$lang['suppliers_successful_deleted']='Er werd(en)';
-$lang['suppliers_one_or_multiple']='leverancier(s) verwijderd';
-$lang['suppliers_cannot_be_deleted']='De geselecteeerde leveranciers konden niet worden verwijderd. Eén of meerdere leveranciers hebben ordergegevens in de database zitten.';
-$lang['suppliers_basic_information']='Informatie Leverancier';
-$lang['suppliers_account_number']='Btw nummer';
-$lang['suppliers_company_name']='Bedrijfsnaam';
-$lang['suppliers_company_name_required'] = 'Bedrijfsnaam moet ingevuld worden';
-?>
+
+$lang["suppliers_account_number"] = "Btw nummer";
+$lang["suppliers_basic_information"] = "Informatie Leverancier";
+$lang["suppliers_cannot_be_deleted"] = "De geselecteeerde leveranciers konden niet worden verwijderd. Eén of meerdere leveranciers hebben ordergegevens in de database zitten.";
+$lang["suppliers_company_name"] = "Leverancier";
+$lang["suppliers_company_name_required"] = "Bedrijfsnaam moet ingevuld worden";
+$lang["suppliers_agency_name"] = "Agencynaam";
+$lang["suppliers_confirm_delete"] = "Bent u zeker dat u de geselecteerde leveranciers wil verwijderen?";
+$lang["suppliers_error_adding_updating"] = "Fout bij het toevoegen/aanpassen van een leverancier";
+$lang["suppliers_new"] = "N. Leverancier";
+$lang["suppliers_none_selected"] = "U hebt geen leveranciers geselecteerd";
+$lang["suppliers_one_or_multiple"] = "leverancier(s) verwijderd";
+$lang["suppliers_successful_adding"] = "Leverancier succesvol toegevoegd";
+$lang["suppliers_successful_deleted"] = "Er werd(en)";
+$lang["suppliers_successful_updating"] = "Wijzigingen leveranciersgegevens bewaard";
+$lang["suppliers_supplier"] = "Leverancier";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "Bewerk Leverancier";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/common_lang.php opensourcepos/application/language/ru/common_lang.php
--- pos-prod/application/language/ru/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/common_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,41 +1,57 @@
 <?php
-$lang['common_common'] = 'общественно';
-$lang['common_submit'] = 'Подавать';
-$lang['common_or'] = 'ИЛИ';
-$lang['common_powered_by'] = 'самоходные из';
-$lang['common_welcome'] = 'Добро пожаловать';
-$lang['common_logout'] = 'Выход';
-$lang['common_list_of'] = 'Список';
-$lang['common_first_name'] = 'Имя';
-$lang['common_last_name'] = 'Фамилия';
-$lang['common_email'] = 'Электронная почта';
-$lang['common_phone_number'] = 'Номер телефона';
-$lang['common_address_1'] = 'Адрес 1';
-$lang['common_address_2'] = 'Адрес 2';
-$lang['common_city'] = 'Город';
-$lang['common_state'] = 'Штат';
-$lang['common_zip'] = 'Почтовый индекс';
-$lang['common_country'] = 'Страна';
-$lang['common_comments'] = 'Комментарии';
-$lang['common_edit'] = 'редактировать';
-$lang['common_search'] = 'Пойск';
-$lang['common_delete'] = 'Удалить';
-$lang['common_remove'] = 'Снимать';
-$lang['common_view_recent_sales'] = 'Посмотреть Недавние Продажи';
-$lang['common_you_are_using_ospos'] = 'Вы использоваете Open Source Point Of Sale Версия';
-$lang['common_please_visit_my'] = 'пожалуйста, посетите';
-$lang['common_website'] = 'веб-сайт';
-$lang['common_fields_required_message'] = 'Красные пробела обязательно';
-$lang['common_learn_about_project'] = ', чтобы узнать самую последнюю информацию о проекте';
-$lang['common_searched_for'] = 'Искали за';
-$lang['common_first_name_required'] = 'Имя обязательный пробел';
-$lang['common_last_name_required'] = 'Фамилия обязательный пробел';
-$lang['common_email_invalid_format'] = 'Это электронная почта не в нужный формат';
-$lang['common_confirm_search'] = 'Вы выбрали одну или несколько строк, это больше не будет быть выбрано после поиска. Вы уверены, что хотите, чтобы представить этот поиск?';
-$lang['common_no_persons_to_display'] = 'Там нет людей, чтобы отобразить';
-$lang['common_return_policy'] = 'Возвратний полис';
-$lang['common_price'] = 'Цена';
-$lang['common_welcome_message']= 'Добро пожаловать в Open Source Point Of Sale, нажмите модуля ниже, чтобы начать!';
-$lang['common_inv'] = 'инв';
-$lang['common_det'] = 'детали';
-?>
+
+$lang["common_address_1"] = "Адрес 1";
+$lang["common_address_2"] = "Адрес 2";
+$lang["common_city"] = "Город";
+$lang["common_comments"] = "Комментарии";
+$lang["common_common"] = "общественно";
+$lang["common_confirm_search"] = "Вы выбрали одну или несколько строк, это больше не будет быть выбрано после поиска. Вы уверены, что хотите, чтобы представить этот поиск?";
+$lang["common_country"] = "Страна";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "Удалить";
+$lang["common_print"] = "Print";
+$lang["common_det"] = "детали";
+$lang["common_edit"] = "редактировать";
+$lang["common_email"] = "Электронная почта";
+$lang["common_email_invalid_format"] = "Это электронная почта не в нужный формат";
+$lang["common_fields_required_message"] = "Красные пробела обязательно";
+$lang["common_first_name"] = "Имя";
+$lang["common_first_name_required"] = "Имя обязательный пробел";
+$lang["common_first_page"] = "First";
+$lang["common_gender"] = "Gender";
+$lang["common_gender_female"] = "V";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "инв";
+$lang["common_last_name"] = "Фамилия";
+$lang["common_last_name_required"] = "Фамилия обязательный пробел";
+$lang["common_last_page"] = "Last";
+$lang["common_learn_about_project"] = ", чтобы узнать самую последнюю информацию о проекте";
+$lang["common_list_of"] = "Список";
+$lang["common_logout"] = "Выход";
+$lang["common_new"] = "New";
+$lang["common_no_persons_to_display"] = "Там нет людей, чтобы отобразить";
+$lang["common_or"] = "ИЛИ";
+$lang["common_phone_number"] = "Номер телефона";
+$lang["common_phone_number_required"] = "";
+$lang["common_please_visit_my"] = "пожалуйста, посетите";
+$lang["common_powered_by"] = "самоходные из";
+$lang["common_price"] = "Цена";
+$lang["common_remove"] = "Снимать";
+$lang["common_return_policy"] = "Возвратний полис";
+$lang["common_search"] = "Пойск";
+$lang["common_search_options"] = "Search options";
+$lang["common_searched_for"] = "Искали за";
+$lang["common_state"] = "Штат";
+$lang["common_submit"] = "Подавать";
+$lang["common_view_recent_sales"] = "Посмотреть Недавние Продажи";
+$lang["common_website"] = "веб-сайт";
+$lang["common_welcome"] = "Добро пожаловать";
+$lang["common_welcome_message"] = "Добро пожаловать в Open Source Point Of Sale, нажмите модуля ниже, чтобы начать!";
+$lang["common_you_are_using_ospos"] = "Вы использоваете Open Source Point Of Sale Версия";
+$lang["common_zip"] = "Почтовый индекс";
+$lang["common_import"] = "Import";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/config_lang.php opensourcepos/application/language/ru/config_lang.php
--- pos-prod/application/language/ru/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/config_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,36 +1,122 @@
 <?php
-$lang['config_info'] = 'информация о магазин конфигурация';
-$lang['config_company'] = 'Название Компании';
-$lang['config_address'] = 'Адрес Компании';
-$lang['config_phone'] = 'Телефон Компании';
-$lang['config_website'] = 'Веб-сайт';
-$lang['config_fax'] = 'Факс';
-$lang['config_default_tax_rate'] = 'Обычный ставка налога %';
-$lang['config_default_tax_rate_1'] = 'ставка налога 1';
-$lang['config_default_tax_rate_2'] = 'ставка налога 2';
-$lang['config_company_required'] = 'Имя Компании обязательный пробел';
-$lang['config_address_required'] = 'Адрес Компании обязательный пробел';
-$lang['config_phone_required'] = 'Телефон Компании обязательный пробел';
-$lang['config_default_tax_rate_required'] = 'Обычный ставка налога обязательный пробел';
-$lang['config_default_tax_rate_number'] = 'Обычный ставка налога должен быть цифра';
-$lang['config_company_website_url'] = 'Веб-сайт Компании не является допустимым URL (http://...)';
-$lang['config_saved_successfully'] = 'Конфигурация успешно сохранена';
-$lang['config_saved_unsuccessfully'] = 'Конфигурация сохраненная безуспешно';
-$lang['config_return_policy_required'] = 'Возвратний полис обязательный пробел';
-$lang['config_print_after_sale'] = 'Распечатать квитанцию ​​после продажи';
-$lang['config_language'] = 'Язик';
-$lang['config_timezone'] = 'Часовой пояс';
-$lang['config_currency_symbol'] = 'Символ валюты';
-$lang['config_currency_side'] = 'Правая сторона'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Изготовленный пробел 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Изготовленный пробел 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Изготовленный пробел 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Изготовленный пробел 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Изготовленный пробел 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Изготовленный пробел 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Изготовленный пробел 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Изготовленный пробел 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Изготовленный пробел 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Изготовленный пробел 10'; //GARRISON ADDED 4/21/2013
-$lang['config_tax_included'] = 'Tax Included';
-?>
+
+$lang["config_address"] = "Адрес Компании";
+$lang["config_address_required"] = "Адрес Компании обязательный пробел";
+$lang["config_backup_button"] = "Backup";
+$lang["config_backup_database"] = "Backup Database";
+$lang["config_barcode_company"] = "Название Компании";
+$lang["config_barcode_configuration"] = "Barcode Configuration";
+$lang["config_barcode_content"] = "Barcode Content";
+$lang["config_barcode_first_row"] = "Row 4";
+$lang["config_barcode_font"] = "Font";
+$lang["config_barcode_height"] = "Height (px)";
+$lang["config_barcode_id"] = "Item Id/Name";
+$lang["config_barcode_info"] = "Barcode Configuration Information";
+$lang["config_barcode_layout"] = "Barcode Layout";
+$lang["config_barcode_name"] = "Name";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Number in row";
+$lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
+$lang["config_barcode_page_width"] = "Display page width";
+$lang["config_barcode_price"] = "Price";
+$lang["config_barcode_quality"] = "Quality (1-100)";
+$lang["config_barcode_second_row"] = "Row 5";
+$lang["config_barcode_third_row"] = "Row 6";
+$lang["config_barcode_type"] = "Barcode Type";
+$lang["config_barcode_width"] = "Width (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "Название Компании";
+$lang["config_company_logo"] = "Company Logo";
+$lang["config_company_required"] = "Имя Компании обязательный пробел";
+$lang["config_company_website_url"] = "Веб-сайт Компании не является допустимым URL (http://...)";
+$lang["config_currency_side"] = "Правая сторона";
+$lang["config_currency_symbol"] = "Символ валюты";
+$lang["config_custom1"] = "Изготовленный пробел 1";
+$lang["config_custom10"] = "Изготовленный пробел 10";
+$lang["config_custom2"] = "Изготовленный пробел 2";
+$lang["config_custom3"] = "Изготовленный пробел 3";
+$lang["config_custom4"] = "Изготовленный пробел 4";
+$lang["config_custom5"] = "Изготовленный пробел 5";
+$lang["config_custom6"] = "Изготовленный пробел 6";
+$lang["config_custom7"] = "Изготовленный пробел 7";
+$lang["config_custom8"] = "Изготовленный пробел 8";
+$lang["config_custom9"] = "Изготовленный пробел 9";
+$lang["config_decimal_point"] = " Decimal Point";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Default Sales Discount %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "Обычный ставка налога %";
+$lang["config_default_tax_rate_1"] = "ставка налога 1";
+$lang["config_default_tax_rate_2"] = "ставка налога 2";
+$lang["config_default_tax_rate_number"] = "Обычный ставка налога должен быть цифра";
+$lang["config_default_tax_rate_required"] = "Обычный ставка налога обязательный пробел";
+$lang["config_fax"] = "Факс";
+$lang["config_general_configuration"] = "General Configuration";
+$lang["config_info"] = "информация о магазин конфигурация";
+$lang["config_invoice_default_comments"] = "Default Invoice Comments";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Invoice Printer";
+$lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
+$lang["config_language"] = "Язик";
+$lang["config_lines_per_page"] = "Lines Per Page";
+$lang["config_lines_per_page_number"] = "The lines per page must be a number";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locations";
+$lang["config_location_info"] = "Location Configuration Information";
+$lang["config_logout"] = "Don't you want to make a backup before logging out?";
+$lang["config_number_format"] = "Number Format";
+$lang["config_phone"] = "Телефон Компании";
+$lang["config_phone_required"] = "Телефон Компании обязательный пробел";
+$lang["config_print_bottom_margin"] = "Margin Bottom";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Margin Left";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Margin Right";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Show Print Dialog";
+$lang["config_print_top_margin"] = "Margin Top";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Settings";
+$lang["config_receipt_info"] = "Receipt Configuration Information";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Show Taxes";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "Receivings Invoice Format";
+$lang["config_return_policy_required"] = "Возвратний полис обязательный пробел";
+$lang["config_sales_invoice_format"] = "Sales Invoice Format";
+$lang["config_saved_successfully"] = "Конфигурация успешно сохранена";
+$lang["config_saved_unsuccessfully"] = "Конфигурация сохраненная безуспешно";
+$lang["config_show_total_discount"] = "Show total discount";
+$lang["config_stock_location"] = "Stock location";
+$lang["config_stock_location_duplicate"] = "Please use an unique location name";
+$lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
+$lang["config_stock_location_required"] = "Stock location number is a required field";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "Tax Included";
+$lang["config_thousands_separator"] = "Thousands Separator";
+$lang["config_timezone"] = "Часовой пояс";
+$lang["config_use_invoice_template"] = "Use invoice template";
+$lang["config_website"] = "Веб-сайт";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/customers_lang.php opensourcepos/application/language/ru/customers_lang.php
--- pos-prod/application/language/ru/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/customers_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new'] = 'Новый Клиент';
-$lang['customers_customer'] = 'Клиент';
-$lang['customers_update'] = 'Обновлять Клиент';
-$lang['customers_confirm_delete'] = 'Вы уверены, что хотите удалить выбранных клиентов?';
-$lang['customers_none_selected'] = 'Вы не выбрали ни клиентов, чтобы удалить.';
-$lang['customers_error_adding_updating'] = 'Ошибка при добавлении/обновлении клиента';
-$lang['customers_successful_adding'] = 'Вы успешно добавили клиентов';
-$lang['customers_successful_updating'] = 'Вы успешно обновили клиент';
-$lang['customers_successful_deleted'] = 'Вы успешно удалили';
-$lang['customers_one_or_multiple'] = 'клиент(ов)';
-$lang['customers_cannot_be_deleted'] = 'Невозможно удалить выбранных клиентов, один или более из них имеет продаж.';
-$lang['customers_basic_information'] = 'Информация о клиенте';
-$lang['customers_account_number'] = 'Номер счота';
-$lang['customers_taxable'] = 'облагаемый';
-?>
+
+$lang["customers_account_number"] = "Номер счота";
+$lang["customers_account_number_duplicate"] = "This account number is already present in the database";
+$lang["customers_basic_information"] = "Информация о клиенте";
+$lang["customers_cannot_be_deleted"] = "Невозможно удалить выбранных клиентов, один или более из них имеет продаж.";
+$lang["customers_company_name"] = "Company Name";
+$lang["customers_confirm_delete"] = "Вы уверены, что хотите удалить выбранных клиентов?";
+$lang["customers_customer"] = "Клиент";
+$lang["customers_error_adding_updating"] = "Ошибка при добавлении/обновлении клиента";
+$lang["customers_new"] = "Новый Клиент";
+$lang["customers_none_selected"] = "Вы не выбрали ни клиентов, чтобы удалить.";
+$lang["customers_one_or_multiple"] = "клиент(ов)";
+$lang["customers_successful_adding"] = "Вы успешно добавили клиентов";
+$lang["customers_successful_deleted"] = "Вы успешно удалили";
+$lang["customers_successful_updating"] = "Вы успешно обновили клиент";
+$lang["customers_taxable"] = "облагаемый";
+$lang["customers_update"] = "Обновлять Клиент";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/employees_lang.php opensourcepos/application/language/ru/employees_lang.php
--- pos-prod/application/language/ru/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/employees_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee'] = 'Сотрудник';
-$lang['employees_new'] = 'Новый Сотрудник';
-$lang['employees_update'] = 'Обновлять Сотрудник';
-$lang['employees_confirm_delete'] = 'Вы уверены, что хотите удалить выбранную сотрудников?';
-$lang['employees_none_selected'] = 'Вы не выбрали ни сотрудников для удаления';
-$lang['employees_error_adding_updating'] = 'Ошибка при добавлении/обновлении сотрудника';
-$lang['employees_successful_adding'] = 'Вы успешно добавили сотрудника';
-$lang['employees_successful_updating'] = 'Вы успешно обновили сотрудника';
-$lang['employees_successful_deleted'] = 'Вы успешно удалили';
-$lang['employees_one_or_multiple'] = 'сотрудник(ов)';
-$lang['employees_cannot_be_deleted'] = 'Не возможно удалить выбранный сотрудников, одного или более работников обработал продаж или вы пытаетесь удалить себя';
-$lang['employees_username'] = 'Имя пользователя';
-$lang['employees_password'] = 'Пароль';
-$lang['employees_repeat_password'] = 'Повторяете пароль';
-$lang['employees_username_required'] = 'Имя пользователи обязательный пробел';
-$lang['employees_username_minlength'] = 'Имя пользователя должна быть не менее 5 символов';
-$lang['employees_password_required'] = 'Пароль обязательно';
-$lang['employees_password_minlength'] = 'Пароль должен быть не менее 8 символов';
-$lang['employees_password_must_match'] = 'Пароли не совпадают';
-$lang['employees_basic_information'] = 'Сотрудник Базовая Информация';
-$lang['employees_login_info'] = 'Информация для сотрудников Входа';
-$lang['employees_permission_info'] = 'Сотрудник разрешениями и правами доступа';
-$lang['employees_permission_desc'] = 'Отметьте флажками ниже, чтобы предоставить доступ к модулям';
-$lang['employees_error_updating_demo_admin'] = 'Вы не можете изменить пользователь демонстрация аккаунт';
-$lang['employees_error_deleting_demo_admin'] = 'Вы не можете удалить пользователь демонстрация аккаунт';
-?>
+
+$lang["employees_basic_information"] = "Сотрудник Базовая Информация";
+$lang["employees_cannot_be_deleted"] = "Не возможно удалить выбранный сотрудников, одного или более работников обработал продаж или вы пытаетесь удалить себя";
+$lang["employees_confirm_delete"] = "Вы уверены, что хотите удалить выбранную сотрудников?";
+$lang["employees_employee"] = "Сотрудник";
+$lang["employees_error_adding_updating"] = "Ошибка при добавлении/обновлении сотрудника";
+$lang["employees_error_deleting_demo_admin"] = "Вы не можете удалить пользователь демонстрация аккаунт";
+$lang["employees_error_updating_demo_admin"] = "Вы не можете изменить пользователь демонстрация аккаунт";
+$lang["employees_login_info"] = "Информация для сотрудников Входа";
+$lang["employees_new"] = "Новый Сотрудник";
+$lang["employees_none_selected"] = "Вы не выбрали ни сотрудников для удаления";
+$lang["employees_one_or_multiple"] = "сотрудник(ов)";
+$lang["employees_password"] = "Пароль";
+$lang["employees_password_minlength"] = "Пароль должен быть не менее 8 символов";
+$lang["employees_password_must_match"] = "Пароли не совпадают";
+$lang["employees_password_required"] = "Пароль обязательно";
+$lang["employees_permission_desc"] = "Отметьте флажками ниже, чтобы предоставить доступ к модулям";
+$lang["employees_permission_info"] = "Сотрудник разрешениями и правами доступа";
+$lang["employees_repeat_password"] = "Повторяете пароль";
+$lang["employees_successful_adding"] = "Вы успешно добавили сотрудника";
+$lang["employees_successful_deleted"] = "Вы успешно удалили";
+$lang["employees_successful_updating"] = "Вы успешно обновили сотрудника";
+$lang["employees_update"] = "Обновлять Сотрудник";
+$lang["employees_username"] = "Имя пользователя";
+$lang["employees_username_minlength"] = "Имя пользователя должна быть не менее 5 символов";
+$lang["employees_username_required"] = "Имя пользователи обязательный пробел";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/error_lang.php opensourcepos/application/language/ru/error_lang.php
--- pos-prod/application/language/ru/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/error_lang.php	2016-05-23 15:32:31.906839380 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module'] = 'У вас нет разрешения на доступ к модуля называется';
-$lang['error_unknown'] = 'неизвестный';
-?>
+
+$lang["error_no_permission_module"] = "У вас нет разрешения на доступ к модуля называется";
+$lang["error_unknown"] = "неизвестный";
Only in pos-prod/application/language/ru: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/giftcards_lang.php opensourcepos/application/language/ru/giftcards_lang.php
--- pos-prod/application/language/ru/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/giftcards_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = 'Номер Подарочную карту';
-$lang['giftcards_card_value'] = 'стоимость';
-$lang['giftcards_basic_information'] = 'информация Подарочную карту';
-$lang['giftcards_number_required'] = 'Номер Подарочную карту обязательный пробел';
-$lang['giftcards_value_required'] = 'стоимость Подарочную карту обязательный пробел';
-$lang['giftcards_number'] = 'Номер Подарочную карту должна быть цифрая';
-$lang['giftcards_value'] = 'стоимость Подарочную карту должна быть цифрая';
-$lang['giftcards_person_id'] = 'Клиент';
-$lang['giftcards_retrive_giftcard_info'] = 'находить и подавать информация Подарочную карту';
-$lang['giftcards_description'] = 'Описание';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'UPC база данных';
-$lang['giftcards_cannot_find_giftcard'] = 'Не можете найти любую информацию о Подарочную карту';
-$lang['giftcards_info_provided_by'] = 'Информация предоставлена';
-$lang['giftcards_number_information'] = 'Номер Подарочную карту';
-$lang['giftcards_new'] = 'Новая Подарочная карта';
-$lang['giftcards_update'] = 'Обновлять Подарочная карта';
-$lang['giftcards_giftcard'] = 'Подарочная карта';
-$lang['giftcards_edit_multiple_giftcards'] = 'Редактирование нескольких Подарочные карты';
-$lang['giftcards_category'] = 'категория';
-$lang['giftcards_cost_price'] = 'Оптовая Цена';
-$lang['giftcards_unit_price'] = 'Розничная Цена';
-$lang['giftcards_tax_1'] = 'Налог 1';
-$lang['giftcards_tax_2'] = 'Налог 2';
-$lang['giftcards_sales_tax_1'] = 'Налог с продаж';
-$lang['giftcards_sales_tax_2'] = 'Налог с продаж 2';
-$lang['giftcards_tax_percent'] = 'процент налога';
-$lang['giftcards_tax_percents'] = 'процент налога';
-$lang['giftcards_reorder_level'] = 'минимальный уровень для перезаказ';
-$lang['giftcards_quantity'] = 'Количество';
-$lang['giftcards_no_giftcards_to_display'] = 'Нет Подарочные карты для отображения';
-$lang['giftcards_bulk_edit'] = 'Массовое изменение';
-$lang['giftcards_confirm_delete'] = 'Вы уверены, что хотите удалить выбранную Подарочные карты?';
-$lang['giftcards_none_selected'] = 'Вы не выбрали ни Подарочные карты для редактирования';
-$lang['giftcards_confirm_bulk_edit'] = 'Вы уверены, что хотите редактировать все выбранные Подарочные карты?';
-$lang['giftcards_successful_bulk_edit'] = 'Вы успешно обновили выбранной Подарочные карты';
-$lang['giftcards_error_updating_multiple'] = 'Ошибка при обновлении Подарочные карты';
-$lang['giftcards_edit_fields_you_want_to_update'] = 'Отредактируйте поля вы хотите изменить для всех выбранных Подарочные карты';
-$lang['giftcards_error_adding_updating'] = 'Ошибка при добавлении/обновлении подарочную карту';
-$lang['giftcards_successful_adding'] = 'Вы успешно добавили подарочную карту';
-$lang['giftcards_successful_updating'] = 'Вы успешно обновили подарочную карту';
-$lang['giftcards_successful_deleted'] = 'Вы успешно удален';
-$lang['giftcards_one_or_multiple'] = 'подарочную карту';
-$lang['giftcards_cannot_be_deleted'] = 'Не удалось удалить выбранные подарочные карты, одну или несколько из выбранных подарочные карты имеет продаж.';
-$lang['giftcards_none'] = 'Ни один';
-$lang['giftcards_supplier'] = 'Поставщик';
-$lang['giftcards_generate_barcodes'] = 'Создание штрих-кодов';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'Вы должны выбрать хотя бы 1 подарочная карта для создания штрих-кодов';
-$lang['giftcards_excel_import_failed'] = 'Ошибка импорта Excel';
-$lang['giftcards_allow_alt_description'] = 'Разрешить альтернативные Описание';
-$lang['giftcards_is_serialized'] = 'Подарочная карта имеет серийный номер';
-$lang['giftcards_low_inventory_giftcards'] = 'Низкий Подарочные карты инвентаризации';
-$lang['giftcards_serialized_giftcards'] = 'Сериализованные Подарочные карты';
-$lang['giftcards_no_description_giftcards'] = 'Нет Описание Подарочные карты';
-$lang['giftcards_inventory_comments'] = 'Комментарии';
-$lang['giftcards_count'] = 'Обновление перечня';
-$lang['giftcards_details_count'] = 'Подробная инвентаризация';
-$lang['giftcards_add_minus'] = 'Инвентарь для сложения/вычитания';
-$lang['giftcards_current_quantity'] = 'Токовые';
-$lang['giftcards_quantity_required'] = 'Количество является обязательным полем. Пожалуйста, закройте (X), чтобы отменить';
-$lang['giftcards_do_nothing'] = 'Ничего не делать';
-$lang['giftcards_change_all_to_serialized'] = 'Заменить все в сериализованную';
-$lang['giftcards_change_all_to_unserialized'] = 'Чтобы изменить все десериализуются';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Разрешить альтернативные Описание Для всех';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Не позволяйте Альтернативные Описание Для всех';
-$lang['giftcards_use_inventory_menu'] = 'Используйте меню инвентаря';
-$lang['giftcards_manually_editing_of_quantity'] = 'Руководство Изменить количество';
-?>
+
+$lang["giftcards_add_minus"] = "Инвентарь для сложения/вычитания";
+$lang["giftcards_allow_alt_description"] = "Разрешить альтернативные Описание";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
+$lang["giftcards_basic_information"] = "информация Подарочную карту";
+$lang["giftcards_bulk_edit"] = "Массовое изменение";
+$lang["giftcards_cannot_be_deleted"] = "Не удалось удалить выбранные подарочные карты, одну или несколько из выбранных подарочные карты имеет продаж.";
+$lang["giftcards_cannot_find_giftcard"] = "Не можете найти любую информацию о Подарочную карту";
+$lang["giftcards_card_value"] = "стоимость";
+$lang["giftcards_category"] = "категория";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "Разрешить альтернативные Описание Для всех";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "Не позволяйте Альтернативные Описание Для всех";
+$lang["giftcards_change_all_to_serialized"] = "Заменить все в сериализованную";
+$lang["giftcards_change_all_to_unserialized"] = "Чтобы изменить все десериализуются";
+$lang["giftcards_confirm_bulk_edit"] = "Вы уверены, что хотите редактировать все выбранные Подарочные карты?";
+$lang["giftcards_confirm_delete"] = "Вы уверены, что хотите удалить выбранную Подарочные карты?";
+$lang["giftcards_cost_price"] = "Оптовая Цена";
+$lang["giftcards_count"] = "Обновление перечня";
+$lang["giftcards_current_quantity"] = "Токовые";
+$lang["giftcards_description"] = "Описание";
+$lang["giftcards_details_count"] = "Подробная инвентаризация";
+$lang["giftcards_do_nothing"] = "Ничего не делать";
+$lang["giftcards_edit_fields_you_want_to_update"] = "Отредактируйте поля вы хотите изменить для всех выбранных Подарочные карты";
+$lang["giftcards_edit_multiple_giftcards"] = "Редактирование нескольких Подарочные карты";
+$lang["giftcards_error_adding_updating"] = "Ошибка при добавлении/обновлении подарочную карту";
+$lang["giftcards_error_updating_multiple"] = "Ошибка при обновлении Подарочные карты";
+$lang["giftcards_excel_import_failed"] = "Ошибка импорта Excel";
+$lang["giftcards_generate_barcodes"] = "Создание штрих-кодов";
+$lang["giftcards_giftcard"] = "Подарочная карта";
+$lang["giftcards_giftcard_number"] = "Номер Подарочную карту";
+$lang["giftcards_info_provided_by"] = "Информация предоставлена";
+$lang["giftcards_inventory_comments"] = "Комментарии";
+$lang["giftcards_is_serialized"] = "Подарочная карта имеет серийный номер";
+$lang["giftcards_low_inventory_giftcards"] = "Низкий Подарочные карты инвентаризации";
+$lang["giftcards_manually_editing_of_quantity"] = "Руководство Изменить количество";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "Вы должны выбрать хотя бы 1 подарочная карта для создания штрих-кодов";
+$lang["giftcards_new"] = "Новая Подарочная карта";
+$lang["giftcards_no_description_giftcards"] = "Нет Описание Подарочные карты";
+$lang["giftcards_no_giftcards_to_display"] = "Нет Подарочные карты для отображения";
+$lang["giftcards_none"] = "Ни один";
+$lang["giftcards_none_selected"] = "Вы не выбрали ни Подарочные карты для редактирования";
+$lang["giftcards_number"] = "Номер Подарочную карту должна быть цифрая";
+$lang["giftcards_number_information"] = "Номер Подарочную карту";
+$lang["giftcards_number_required"] = "Номер Подарочную карту обязательный пробел";
+$lang["giftcards_one_or_multiple"] = "подарочную карту";
+$lang["giftcards_person_id"] = "Клиент";
+$lang["giftcards_quantity"] = "Количество";
+$lang["giftcards_quantity_required"] = "Количество является обязательным полем. Пожалуйста, закройте (X), чтобы отменить";
+$lang["giftcards_reorder_level"] = "минимальный уровень для перезаказ";
+$lang["giftcards_retrive_giftcard_info"] = "находить и подавать информация Подарочную карту";
+$lang["giftcards_sales_tax_1"] = "Налог с продаж";
+$lang["giftcards_sales_tax_2"] = "Налог с продаж 2";
+$lang["giftcards_serialized_giftcards"] = "Сериализованные Подарочные карты";
+$lang["giftcards_successful_adding"] = "Вы успешно добавили подарочную карту";
+$lang["giftcards_successful_bulk_edit"] = "Вы успешно обновили выбранной Подарочные карты";
+$lang["giftcards_successful_deleted"] = "Вы успешно удален";
+$lang["giftcards_successful_updating"] = "Вы успешно обновили подарочную карту";
+$lang["giftcards_supplier"] = "Поставщик";
+$lang["giftcards_tax_1"] = "Налог 1";
+$lang["giftcards_tax_2"] = "Налог 2";
+$lang["giftcards_tax_percent"] = "процент налога";
+$lang["giftcards_tax_percents"] = "процент налога";
+$lang["giftcards_unit_price"] = "Розничная Цена";
+$lang["giftcards_upc_database"] = "UPC база данных";
+$lang["giftcards_update"] = "Обновлять Подарочная карта";
+$lang["giftcards_use_inventory_menu"] = "Используйте меню инвентаря";
+$lang["giftcards_value"] = "стоимость Подарочную карту должна быть цифрая";
+$lang["giftcards_value_required"] = "стоимость Подарочную карту обязательный пробел";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/index.html opensourcepos/application/language/ru/index.html
--- pos-prod/application/language/ru/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/index.html	2016-05-23 15:32:31.907839365 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/item_kits_lang.php opensourcepos/application/language/ru/item_kits_lang.php
--- pos-prod/application/language/ru/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/item_kits_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'Наименование товара комплект';
-$lang['item_kits_description'] = 'Описание товара Комплект';
-$lang['item_kits_no_item_kits_to_display'] = 'Нет товара комплекты для отображения';
-$lang['item_kits_update'] = 'Обновить товар комплекта';
-$lang['item_kits_new'] = 'Новый товар комплект';
-$lang['item_kits_none_selected'] = "Вы не выбрали ни одной товар комплекты";
-$lang['item_kits_info'] = 'Информация о товаре комплекта';
-$lang['item_kits_successful_adding'] = 'Вы успешно добавлен товар комплекта';
-$lang['item_kits_successful_updating'] = 'Вы успешно обновленного товар комплекта';
-$lang['item_kits_error_adding_updating'] = 'Ошибка при добавлении/обновлении товара комплекта';
-$lang['item_kits_successful_deleted'] = 'Вы успешно удален';
-$lang['item_kits_confirm_delete'] = 'Вы уверены, что хотите удалить выбранные товар? комплекты';
-$lang['item_kits_one_or_multiple'] = 'Товара комплект (ы)';
-$lang['item_kits_cannot_be_deleted'] = 'Не могу удалить Товара комплект (ы)';
-$lang['item_kits_add_item'] = 'Добавить товар';
-$lang['item_kits_items'] = 'товары';
-$lang['item_kits_item'] = 'товар';
-$lang['item_kits_quantity'] = 'количество';
-?>
+
+$lang["item_kits_add_item"] = "Добавить товар";
+$lang["item_kits_cannot_be_deleted"] = "Не могу удалить Товара комплект (ы)";
+$lang["item_kits_confirm_delete"] = "Вы уверены, что хотите удалить выбранные товар? комплекты";
+$lang["item_kits_description"] = "Описание товара Комплект";
+$lang["item_kits_error_adding_updating"] = "Ошибка при добавлении/обновлении товара комплекта";
+$lang["item_kits_info"] = "Информация о товаре комплекта";
+$lang["item_kits_item"] = "товар";
+$lang["item_kits_items"] = "товары";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "Наименование товара комплект";
+$lang["item_kits_new"] = "Новый товар комплект";
+$lang["item_kits_no_item_kits_to_display"] = "Нет товара комплекты для отображения";
+$lang["item_kits_none_selected"] = "Вы не выбрали ни одной товар комплекты";
+$lang["item_kits_one_or_multiple"] = "Товара комплект (ы)";
+$lang["item_kits_quantity"] = "количество";
+$lang["item_kits_successful_adding"] = "Вы успешно добавлен товар комплекта";
+$lang["item_kits_successful_deleted"] = "Вы успешно удален";
+$lang["item_kits_successful_updating"] = "Вы успешно обновленного товар комплекта";
+$lang["item_kits_update"] = "Обновить товар комплекта";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/items_lang.php opensourcepos/application/language/ru/items_lang.php
--- pos-prod/application/language/ru/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/items_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,81 +1,88 @@
 <?php
-$lang['items_item_number'] = 'UPC/EAN/ISBN';
-$lang['items_retrive_item_info'] = 'Получить Детальная информация';
-$lang['items_description'] = 'Описание';
-$lang['items_amazon'] = 'Amazon';
-$lang['items_upc_database'] = 'UPC база данных';
-$lang['items_cannot_find_item'] = 'не могу найти любую информацию о товаре';
-$lang['items_info_provided_by'] = 'Информация, представленная';
-$lang['items_basic_information'] = 'информацию о товаре';
-$lang['items_number_information'] = 'Номер Товара';
-$lang['items_new'] = 'Новый Товар';
-$lang['items_update'] = 'Обновить Товар';
-$lang['items_item'] = 'Товар';
-$lang['items_edit_multiple_items'] = 'Редактирование нескольких товаров';
-$lang['items_name'] = 'название товара';
-$lang['items_category'] = 'Категория';
-$lang['items_cost_price'] = 'Оптовая Цена';//GARRISON ADDED 4/21/2013
-$lang['items_unit_price'] = 'Розничная Цена';//GARRISON ADDED 4/21/2013
-$lang['items_tax_1'] = 'Налог 1';
-$lang['items_tax_2'] = 'Налог 2';
-$lang['items_sales_tax_1'] = 'Налог на покупку';
-$lang['items_sales_tax_2'] = 'Налог на покупку 2';
-$lang['items_tax_percent'] = 'процент налога';
-$lang['items_tax_percents'] = 'процент налога(и)';
-$lang['items_reorder_level'] = 'Минимальный уровень перед заказом';
-$lang['items_quantity'] = 'Количество';
-$lang['items_reorder_level'] = 'Минимальный уровень перед заказом';
-$lang['items_no_items_to_display'] = 'Нет товаров для отображения';
-$lang['items_bulk_edit'] = 'Массовое изменение';
-$lang['items_confirm_delete'] = 'Вы уверены, что хотите удалить выбранные товари?';
-$lang['items_none_selected'] = 'Вы не выбрали ни одной товари для редактирования';
-$lang['items_confirm_bulk_edit'] = 'Вы уверены, что хотите редактировать все товари выбраны?';
-$lang['items_successful_bulk_edit'] = 'Вы успешно обновили выбранных товаров';
-$lang['items_error_updating_multiple'] = 'Ошибка при обновлении товаров';
-$lang['items_edit_fields_you_want_to_update'] = 'Отредактируйте пробела вы хотите изменить для всех выбранных товаров';
-$lang['items_error_adding_updating'] = 'Ошибка при добавлении/обновлении товара';
-$lang['items_successful_adding'] = 'Вы успешно добавлен товар';
-$lang['items_successful_updating'] = 'Вы успешно обновленного товара';
-$lang['items_successful_deleted'] = 'Вы успешно удалили';
-$lang['items_one_or_multiple'] = 'товар(а)';
-$lang['items_cannot_be_deleted'] = 'Невозможно удалить выбранные товари, один или более из выбранных товаров имеет продаж.';
-$lang['items_name_required'] = 'Название товара обязательное пробелья';
-$lang['items_category_required'] = 'Категория обязательное пробелья';
-$lang['items_buy_price_required'] = 'Цена покупки обязательное пробелья';
-$lang['items_unit_price_required'] = 'Розничная цена обязательное пробелья';
-$lang['items_cost_price_required'] = 'Оптовая цена обязательное пробелья';
-$lang['items_tax_percent_required'] = 'Процент Налоги обязательное пробелья';
-$lang['items_quantity_required'] = 'Количество обязательное пробелья';
-$lang['items_reorder_level_required'] = 'Минимальный уровень перед заказом обязательное пробелья';
-$lang['items_unit_price_number'] = 'Розничная Цена должно быть число';
-$lang['items_cost_price_number'] = 'Оптовая цена должно быть число';
-$lang['items_quantity_number'] = 'Количество должно быть число';
-$lang['items_reorder_level_number'] = 'Минимальный уровень перед заказом должно быть число';
-$lang['items_none'] = 'Ничего';
-$lang['items_supplier'] = 'Поставщик';
-$lang['items_generate_barcodes'] = 'Создайте штрих-кодов';
-$lang['items_must_select_item_for_barcode'] = 'Вы должны выбрать хотя бы 1 товар для создания штрих-кодов';
-$lang['items_excel_import_failed'] = 'Ошибка импорта Excel';
-$lang['items_allow_alt_description'] = 'Разрешить альтернативные описания';
-$lang['items_is_serialized'] = 'Товар имеет серийный номер';
-$lang['items_low_inventory_items'] = 'Низкий инвентаризации товары';
-$lang['items_serialized_items'] = 'Сериализованные товары';
-$lang['items_no_description_items'] = 'без Описание товары';
-$lang['items_search_custom_items'] = 'Искать в дополнительных товарях';//GARRISON ADDED
-$lang['items_inventory_comments'] = 'Комментарии';
-$lang['items_count'] = 'Обновление инвентории';
-$lang['items_details_count'] = 'детали инвентаризацего количество';
-$lang['items_add_minus'] = 'Инвентарь для сложения/вычитания';
-$lang['items_current_quantity'] = 'Количество Сейчас';
-$lang['items_quantity_required'] = 'Количество обязательное пробелья. Пожалуйста, закройте (X), чтобы отменить';
-$lang['items_do_nothing'] = 'Ничего не делать';
-$lang['items_change_all_to_serialized'] = 'Изменить все в сериализованную';
-$lang['items_change_all_to_unserialized'] = 'Изменить все в несериализованную';
-$lang['items_change_all_to_allow_alt_desc'] = 'Разрешить альтернативные Описание для всех';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Не разрешить альтернативные Описание для всех';
-$lang['items_use_inventory_menu'] = 'Используйте меню инвентаря';
-$lang['items_manually_editing_of_quantity'] = 'Руководство Изменить количество';
-$lang['items_inventory'] = 'инвентаризация';
-$lang['items_location'] = 'место';
-$lang['items_is_deleted'] = 'Deleted';// Parq 131215
-?>
+
+$lang["items_add_minus"] = "Инвентарь для сложения/вычитания";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "Разрешить альтернативные описания";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "информацию о товаре";
+$lang["items_bulk_edit"] = "Массовое изменение";
+$lang["items_buy_price_required"] = "Цена покупки обязательное пробелья";
+$lang["items_cannot_be_deleted"] = "Невозможно удалить выбранные товари, один или более из выбранных товаров имеет продаж.";
+$lang["items_cannot_find_item"] = "не могу найти любую информацию о товаре";
+$lang["items_category"] = "Категория";
+$lang["items_category_required"] = "Категория обязательное пробелья";
+$lang["items_change_all_to_allow_alt_desc"] = "Разрешить альтернативные Описание для всех";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Не разрешить альтернативные Описание для всех";
+$lang["items_change_all_to_serialized"] = "Изменить все в сериализованную";
+$lang["items_change_all_to_unserialized"] = "Изменить все в несериализованную";
+$lang["items_confirm_bulk_edit"] = "Вы уверены, что хотите редактировать все товари выбраны?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "Вы уверены, что хотите удалить выбранные товари?";
+$lang["items_cost_price"] = "Оптовая Цена";
+$lang["items_cost_price_number"] = "Оптовая цена должно быть число";
+$lang["items_cost_price_required"] = "Оптовая цена обязательное пробелья";
+$lang["items_count"] = "Обновление инвентории";
+$lang["items_current_quantity"] = "Количество Сейчас";
+$lang["items_description"] = "Описание";
+$lang["items_details_count"] = "детали инвентаризацего количество";
+$lang["items_do_nothing"] = "Ничего не делать";
+$lang["items_edit_fields_you_want_to_update"] = "Отредактируйте пробела вы хотите изменить для всех выбранных товаров";
+$lang["items_edit_multiple_items"] = "Редактирование нескольких товаров";
+$lang["items_error_adding_updating"] = "Ошибка при добавлении/обновлении товара";
+$lang["items_error_updating_multiple"] = "Ошибка при обновлении товаров";
+$lang["items_excel_import_failed"] = "Ошибка импорта Excel";
+$lang["items_generate_barcodes"] = "Создайте штрих-кодов";
+$lang["items_image"] = "Avatar";
+$lang["items_info_provided_by"] = "Информация, представленная";
+$lang["items_inventory"] = "инвентаризация";
+$lang["items_inventory_comments"] = "Комментарии";
+$lang["items_is_deleted"] = "Deleted";
+$lang["items_is_serialized"] = "Товар имеет серийный номер";
+$lang["items_item"] = "Товар";
+$lang["items_item_number"] = "UPC/EAN/ISBN";
+$lang["items_item_number_duplicate"] = "The item number is already present in the database";
+$lang["items_location"] = "место";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "Низкий инвентаризации товары";
+$lang["items_manually_editing_of_quantity"] = "Руководство Изменить количество";
+$lang["items_must_select_item_for_barcode"] = "Вы должны выбрать хотя бы 1 товар для создания штрих-кодов";
+$lang["items_name"] = "название товара";
+$lang["items_name_required"] = "Название товара обязательное пробелья";
+$lang["items_new"] = "Новый Товар";
+$lang["items_no_description_items"] = "без Описание товары";
+$lang["items_no_items_to_display"] = "Нет товаров для отображения";
+$lang["items_none"] = "Ничего";
+$lang["items_none_selected"] = "Вы не выбрали ни одной товари для редактирования";
+$lang["items_number_information"] = "Номер Товара";
+$lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
+$lang["items_one_or_multiple"] = "товар(а)";
+$lang["items_quantity"] = "Количество";
+$lang["items_quantity_number"] = "Количество должно быть число";
+$lang["items_quantity_required"] = "Количество обязательное пробелья";
+$lang["items_receiving_quantity"] = "Receiving quantity";
+$lang["items_reorder_level"] = "Минимальный уровень перед заказом";
+$lang["items_reorder_level_number"] = "Минимальный уровень перед заказом должно быть число";
+$lang["items_reorder_level_required"] = "Минимальный уровень перед заказом обязательное пробелья";
+$lang["items_retrive_item_info"] = "Получить Детальная информация";
+$lang["items_sales_tax_1"] = "Налог на покупку";
+$lang["items_sales_tax_2"] = "Налог на покупку 2";
+$lang["items_search_custom_items"] = "Искать в дополнительных товарях";
+$lang["items_serialized_items"] = "Сериализованные товары";
+$lang["items_stock_location"] = "Stock location";
+$lang["items_successful_adding"] = "Вы успешно добавлен товар";
+$lang["items_successful_bulk_edit"] = "Вы успешно обновили выбранных товаров";
+$lang["items_successful_deleted"] = "Вы успешно удалили";
+$lang["items_successful_updating"] = "Вы успешно обновленного товара";
+$lang["items_supplier"] = "Поставщик";
+$lang["items_tax_1"] = "Налог 1";
+$lang["items_tax_2"] = "Налог 2";
+$lang["items_tax_percent"] = "процент налога";
+$lang["items_tax_percent_required"] = "Процент Налоги обязательное пробелья";
+$lang["items_tax_percents"] = "процент налога(и)";
+$lang["items_unit_price"] = "Розничная Цена";
+$lang["items_unit_price_number"] = "Розничная Цена должно быть число";
+$lang["items_unit_price_required"] = "Розничная цена обязательное пробелья";
+$lang["items_upc_database"] = "UPC база данных";
+$lang["items_update"] = "Обновить Товар";
+$lang["items_use_inventory_menu"] = "Используйте меню инвентаря";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/login_lang.php opensourcepos/application/language/ru/login_lang.php
--- pos-prod/application/language/ru/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/login_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login'] = 'Вход';
-$lang['login_username'] = 'Имя';
-$lang['login_password'] = 'Пароль';
-$lang['login_go'] = 'ходите';
-$lang['login_invalid_username_and_password'] = 'Неправелная Имя/Пароль';
-$lang['login_welcome_message'] = 'Добро пожаловать в Open Source Point of Sale. Чтобы продолжить, пожалуйста войдите на сайт, используя имя и пароль.';
-?>
+
+$lang["login_go"] = "ходите";
+$lang["login_invalid_username_and_password"] = "Неправелная Имя/Пароль";
+$lang["login_login"] = "Вход";
+$lang["login_password"] = "Пароль";
+$lang["login_username"] = "Имя";
+$lang["login_welcome_message"] = "Добро пожаловать в Open Source Point of Sale. Чтобы продолжить, пожалуйста войдите на сайт, используя имя и пароль.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/module_lang.php opensourcepos/application/language/ru/module_lang.php
--- pos-prod/application/language/ru/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/module_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home'] = 'Дома';
 
-$lang['module_customers'] = 'Клиенты';
-$lang['module_customers_desc'] = 'Добавление, обновление, удаление и поиск клиентов';
-
-$lang['module_suppliers'] = 'Поставщики';
-$lang['module_suppliers_desc'] = 'Добавление, обновление, удаление и поиск suppliers';
-
-$lang['module_employees'] = 'Сотрудники';
-$lang['module_employees_desc'] = 'Добавление, обновление, удаление и поиск сотрудники';
-
-$lang['module_sales'] = 'Продажа';
-$lang['module_sales_desc'] = 'Процесс продажи и возвращается';
-
-$lang['module_reports'] = 'Отчеты';
-$lang['module_reports_desc'] = 'Просмотр и создание отчетов';
-
-$lang['module_items'] = 'Товары';
-$lang['module_items_desc'] = 'Добавление, обновление, удаление и поиск товары';
-
-$lang['module_config'] = 'Конфигурацию магазина';
-$lang['module_config_desc'] = 'Изменить конфигурацию магазина';
-
-$lang['module_receivings'] = 'получении';
-$lang['module_receivings_desc'] = 'Процесс покупки заказов';
-
-$lang['module_giftcards'] = 'Подарочные карты';
-$lang['module_giftcards_desc'] = 'Добавление, обновление, удаление и поиск подарочные карты';
-
-$lang['module_item_kits'] = 'товара комплекти';
-$lang['module_item_kits_desc'] = 'Добавление, обновление, удаление и поиск товара комплекти';
-
-?>
+$lang["module_config"] = "Конфигурацию магазина";
+$lang["module_config_desc"] = "Изменить конфигурацию магазина";
+$lang["module_customers"] = "Клиенты";
+$lang["module_customers_desc"] = "Добавление, обновление, удаление и поиск клиентов";
+$lang["module_employees"] = "Сотрудники";
+$lang["module_employees_desc"] = "Добавление, обновление, удаление и поиск сотрудники";
+$lang["module_giftcards"] = "Подарочные карты";
+$lang["module_giftcards_desc"] = "Добавление, обновление, удаление и поиск подарочные карты";
+$lang["module_home"] = "Дома";
+$lang["module_item_kits"] = "товара комплекти";
+$lang["module_item_kits_desc"] = "Добавление, обновление, удаление и поиск товара комплекти";
+$lang["module_items"] = "Товары";
+$lang["module_items_desc"] = "Добавление, обновление, удаление и поиск товары";
+$lang["module_receivings"] = "получении";
+$lang["module_receivings_desc"] = "Процесс покупки заказов";
+$lang["module_reports"] = "Отчеты";
+$lang["module_reports_desc"] = "Просмотр и создание отчетов";
+$lang["module_sales"] = "Продажа";
+$lang["module_sales_desc"] = "Процесс продажи и возвращается";
+$lang["module_suppliers"] = "Поставщики";
+$lang["module_suppliers_desc"] = "Добавление, обновление, удаление и поиск suppliers";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/receivings_lang.php opensourcepos/application/language/ru/receivings_lang.php
--- pos-prod/application/language/ru/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/receivings_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,26 +1,51 @@
 <?php
-$lang['recvs_register'] = 'Получение товаров';
-$lang['recvs_mode'] = 'получая режим';
-$lang['recvs_receiving'] = 'получать';
-$lang['recvs_return'] = 'возвращать';
-$lang['recvs_total'] = 'сумма';
-$lang['recvs_cost'] = 'стоимость';
-$lang['recvs_quantity'] = 'Кол-во.';
-$lang['recvs_discount'] = 'Скидка %';
-$lang['recvs_edit'] = 'редактировать';
-$lang['recvs_new_supplier'] = 'Новый поставщик';
-$lang['recvs_supplier'] = 'поставщик';
-$lang['recvs_select_supplier'] = 'Выберите поставщика (необязательно)';
-$lang['recvs_start_typing_supplier_name'] = 'Начните вводить название поставщика...';
-$lang['recvs_unable_to_add_item'] = 'Невозможно добавить товар на получение';
-$lang['recvs_error_editing_item'] = 'Ошибка редактирования товар';
-$lang['recvs_receipt'] = 'квитанция о получении';
-$lang['recvs_complete_receiving'] = 'заканчивать';
-$lang['recvs_confirm_finish_receiving'] = 'Вы уверены, что хотите представить это получение? Это не может быть отменено.';
-$lang['recvs_confirm_cancel_receiving'] = 'Вы уверены, что хотите удалить это получение? Все детали будут очищены.';
-$lang['recvs_find_or_scan_item'] = 'Найти/Сканировать товар';
-$lang['recvs_find_or_scan_item_or_receipt'] = 'Найти/Сканировать товар ИЛИ квитанция';
-$lang['recvs_id'] = 'получение ID';
-$lang['recvs_item_name'] = 'Название товара';
-$lang['receivings_transaction_failed'] = 'Ошибка Получение транзакции';
-?>
+
+$lang["receivings_transaction_failed"] = "Ошибка Получение транзакции";
+$lang["recvs_basic_information"] = "";
+$lang["recvs_cancel_receiving"] = "";
+$lang["recvs_cannot_be_deleted"] = "";
+$lang["recvs_comments"] = "";
+$lang["recvs_complete_receiving"] = "заканчивать";
+$lang["recvs_confirm_cancel_receiving"] = "Вы уверены, что хотите удалить это получение? Все детали будут очищены.";
+$lang["recvs_confirm_finish_receiving"] = "Вы уверены, что хотите представить это получение? Это не может быть отменено.";
+$lang["recvs_cost"] = "стоимость";
+$lang["recvs_date"] = "";
+$lang["recvs_date_required"] = "";
+$lang["recvs_date_type"] = "";
+$lang["recvs_delete_confirmation"] = "";
+$lang["recvs_delete_entire_sale"] = "Delete entire sale";
+$lang["recvs_discount"] = "Скидка %";
+$lang["recvs_edit"] = "редактировать";
+$lang["recvs_edit_sale"] = "Edit Receiving";
+$lang["recvs_employee"] = "Employee";
+$lang["recvs_error_editing_item"] = "Ошибка редактирования товар";
+$lang["recvs_error_requisition"] = "";
+$lang["recvs_find_or_scan_item"] = "Найти/Сканировать товар";
+$lang["recvs_find_or_scan_item_or_receipt"] = "Найти/Сканировать товар ИЛИ квитанция";
+$lang["recvs_id"] = "получение ID";
+$lang["recvs_invoice_enable"] = "Create Invoice";
+$lang["recvs_invoice_number"] = "";
+$lang["recvs_invoice_number_duplicate"] = "";
+$lang["recvs_item_name"] = "Название товара";
+$lang["recvs_mode"] = "получая режим";
+$lang["recvs_new_supplier"] = "Новый поставщик";
+$lang["recvs_one_or_multiple"] = "";
+$lang["recvs_print_after_sale"] = "Распечатать квитанцию ​​после продажи";
+$lang["recvs_quantity"] = "Кол-во.";
+$lang["recvs_receipt"] = "квитанция о получении";
+$lang["recvs_receipt_number"] = "";
+$lang["recvs_receiving"] = "получать";
+$lang["recvs_register"] = "Получение товаров";
+$lang["recvs_requisition"] = "";
+$lang["recvs_return"] = "возвращать";
+$lang["recvs_select_supplier"] = "Выберите поставщика (необязательно)";
+$lang["recvs_start_typing_supplier_name"] = "Начните вводить название поставщика...";
+$lang["recvs_stock_destination"] = "Stock destination";
+$lang["recvs_stock_locaiton"] = "Stock location";
+$lang["recvs_stock_source"] = "Stock source";
+$lang["recvs_successfully_deleted"] = "You have successfully deleted";
+$lang["recvs_successfully_updated"] = "Receiving successfully updated";
+$lang["recvs_supplier"] = "поставщик";
+$lang["recvs_total"] = "сумма";
+$lang["recvs_unable_to_add_item"] = "Невозможно добавить товар на получение";
+$lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/reports_lang.php opensourcepos/application/language/ru/reports_lang.php
--- pos-prod/application/language/ru/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/reports_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,88 +1,108 @@
 <?php
-$lang['reports_reports'] = 'Отчеты';
-$lang['reports_report'] = 'Отчет';
-$lang['reports_welcome_message'] = 'Добро пожаловать в панель отчетов. Пожалуйста, выберите отчет для просмотра.';
-$lang['reports_sales_summary_report'] = 'Продажи Сводный отчет';
-$lang['reports_categories_summary_report'] = 'Сводный отчет Категории';
-$lang['reports_customers_summary_report'] = 'Сводный отчет клиентов';
-$lang['reports_suppliers_summary_report'] = 'Сводный отчет Поставщики';
-$lang['reports_items_summary_report'] = 'Сводный отчет товары';
-$lang['reports_employees_summary_report'] = 'Сводный отчет Сотрудники';
-$lang['reports_taxes_summary_report'] = 'Сводный отчет налоги';
-$lang['reports_date'] = 'число';
-$lang['reports_name'] = 'название';
-$lang['reports_quantity_purchased'] = 'купенный количество';
-$lang['reports_sale_id'] = 'ID Продажа';
-$lang['reports_items_purchased'] = 'купенный товары';
-$lang['reports_sold_by'] = 'Продавал через';
-$lang['reports_sold_to'] = 'Продано к';
-$lang['reports_category'] = 'категория';
-$lang['reports_customer'] = 'клиент';
-$lang['reports_employee'] = 'Сотрудник';
-$lang['reports_item'] = 'товар';
-$lang['reports_items'] = 'товары';
-$lang['reports_supplier'] = 'Поставщик';
-$lang['reports_employees'] = 'Сотрудники';
-$lang['reports_subtotal'] = 'Промежуточная сумма';
-$lang['reports_total'] = 'сумма';
-$lang['reports_tax'] = 'налог';
-$lang['reports_profit'] = 'прибыль';
-$lang['reports_report_input'] = 'отчет входного';
-$lang['reports_type'] = 'тип';
-$lang['reports_date_range'] = 'размах числа';
-$lang['reports_today'] = 'сегодня';
-$lang['reports_yesterday'] = 'вчера';
-$lang['reports_last_7'] = 'Последние 7 дней';
-$lang['reports_this_month'] = 'В этом месяце';
-$lang['reports_last_month'] = 'Последний месяц';
-$lang['reports_this_year'] = 'В этом году'; 
-$lang['reports_last_year'] = 'в прошлом году';
-$lang['reports_all_time'] = 'за все время';
-$lang['reports_detailed_sales_report'] = 'Подробный отчет о продажах';
-$lang['reports_comments'] = 'Комментарии';
-$lang['reports_discount'] = 'скидка';
-$lang['reports_payment_type'] = 'Вид оплаты';
-$lang['reports_sales'] = 'Продажа'; 
-$lang['reports_categories'] = 'Категории';
-$lang['reports_customers'] = 'Клиенты';
-$lang['reports_suppliers'] = 'Поставщики';
-$lang['reports_items'] = 'Товары';
-$lang['reports_employees'] = 'Сотрудники';
-$lang['reports_taxes'] = 'Налоги';
-$lang['reports_customer'] = 'Клиент';
-$lang['reports_employee'] = 'Сотрудник';
-$lang['reports_tax_percent'] = 'процент налога';
-$lang['reports_quantity_purchased'] = 'покупенно количества';
-$lang['reports_serial_number'] = 'серийный номер';
-$lang['reports_description'] = 'описание';
-$lang['reports_date'] = 'число';
-$lang['reports_sales_amount'] = 'сумма продаж';
-$lang['reports_revenue'] = 'доход';
-$lang['reports_discounts'] = 'Скидки';
-$lang['reports_discounts_summary_report'] = 'Скидки Сводный отчет';
-$lang['reports_discount_percent'] = 'процентную скидку';
-$lang['reports_count'] = 'подсчет';
-$lang['reports_summary_reports'] = 'Сводные отчеты';
-$lang['reports_graphical_reports'] = 'графических отчетов';
-$lang['reports_detailed_reports'] = 'Подробные отчеты';
-$lang['reports_inventory_reports'] = 'Инвентаризация Отчеты';
-$lang['reports_low_inventory'] = 'Низкий инвентаризации';
-$lang['reports_inventory_summary'] = ' Сводка инвентаризации';
-$lang['reports_item_number'] = 'Номер Товара';
-$lang['reports_reorder_level'] = 'минимальный уровень';
-$lang['reports_low_inventory_report'] = 'отчет Низкии инвентаризации';
-$lang['reports_item_name'] = 'Название товара';
-$lang['reports_inventory_summary_report'] = 'Отчет Сводка инвентаризации';
-$lang['reports_payment_type'] = 'Вид оплаты';
-$lang['reports_payments_summary_report'] = 'Платежей Сводный отчет';
-$lang['reports_payments'] = 'Оплаты';
-$lang['reports_receivings'] = 'Получении';
-$lang['reports_received_by'] = 'получило за';
-$lang['reports_supplied_by'] = 'Поставлял за';
-$lang['reports_items_received'] = 'полученные Товары';
-$lang['reports_detailed_receivings_report'] = 'Детальный отчет о поступлениях';
-$lang['reports_sale_type'] = 'Вид Продажи';
-$lang['reports_all'] = 'все';
-$lang['reports_returns'] = 'Возвраты';
-$lang['reports_discount'] = 'A discount greater than ';
-?>
+
+$lang["reports_all"] = "все";
+$lang["reports_all_time"] = "за все время";
+$lang["reports_categories"] = "Категории";
+$lang["reports_categories_summary_report"] = "Сводный отчет Категории";
+$lang["reports_category"] = "категория";
+$lang["reports_comments"] = "Комментарии";
+$lang["reports_count"] = "подсчет";
+$lang["reports_customer"] = "клиент";
+$lang["reports_customers"] = "Клиенты";
+$lang["reports_customers_summary_report"] = "Сводный отчет клиентов";
+$lang["reports_date"] = "число";
+$lang["reports_date_range"] = "размах числа";
+$lang["reports_description"] = "описание";
+$lang["reports_detailed_receivings_report"] = "Детальный отчет о поступлениях";
+$lang["reports_detailed_reports"] = "Подробные отчеты";
+$lang["reports_detailed_requisition_report"] = "";
+$lang["reports_detailed_sales_report"] = "Подробный отчет о продажах";
+$lang["reports_discount"] = "скидка";
+$lang["reports_discount_percent"] = "процентную скидку";
+$lang["reports_discounts"] = "Скидки";
+$lang["reports_discounts_summary_report"] = "Скидки Сводный отчет";
+$lang["reports_employee"] = "Сотрудник";
+$lang["reports_employees"] = "Сотрудники";
+$lang["reports_employees_summary_report"] = "Сводный отчет Сотрудники";
+$lang["reports_graphical_reports"] = "графических отчетов";
+$lang["reports_inventory"] = "";
+$lang["reports_inventory_low"] = "Низкий инвентаризации";
+$lang["reports_inventory_low_report"] = "отчет Низкии инвентаризации";
+$lang["reports_inventory_reports"] = "Инвентаризация Отчеты";
+$lang["reports_inventory_summary"] = " Сводка инвентаризации";
+$lang["reports_inventory_summary_report"] = "Отчет Сводка инвентаризации";
+$lang["reports_item"] = "товар";
+$lang["reports_item_name"] = "Название товара";
+$lang["reports_item_number"] = "Номер Товара";
+$lang["reports_items"] = "товары";
+$lang["reports_items_purchased"] = "купенный товары";
+$lang["reports_items_received"] = "полученные Товары";
+$lang["reports_items_summary_report"] = "Сводный отчет товары";
+$lang["reports_last_7"] = "Последние 7 дней";
+$lang["reports_last_month"] = "Последний месяц";
+$lang["reports_last_year"] = "в прошлом году";
+$lang["reports_low_inventory"] = "";
+$lang["reports_low_inventory_report"] = "";
+$lang["reports_name"] = "название";
+$lang["reports_payment_type"] = "Вид оплаты";
+$lang["reports_payments"] = "Оплаты";
+$lang["reports_payments_summary_report"] = "Платежей Сводный отчет";
+$lang["reports_profit"] = "прибыль";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "купенный количество";
+$lang["reports_received_by"] = "получило за";
+$lang["reports_receiving_id"] = "";
+$lang["reports_receiving_type"] = "";
+$lang["reports_receivings"] = "Получении";
+$lang["reports_reorder_level"] = "минимальный уровень";
+$lang["reports_report"] = "Отчет";
+$lang["reports_report_input"] = "отчет входного";
+$lang["reports_reports"] = "Отчеты";
+$lang["reports_requisition"] = "";
+$lang["reports_requisition_by"] = "";
+$lang["reports_requisition_id"] = "";
+$lang["reports_requisition_item"] = "";
+$lang["reports_requisition_item_quantity"] = "";
+$lang["reports_requisition_related_item"] = "";
+$lang["reports_requisition_related_item_total_quantity"] = "";
+$lang["reports_requisition_related_item_unit_quantity"] = "";
+$lang["reports_requisitions"] = "";
+$lang["reports_returns"] = "Возвраты";
+$lang["reports_revenue"] = "доход";
+$lang["reports_sale_id"] = "ID Продажа";
+$lang["reports_sale_type"] = "Вид Продажи";
+$lang["reports_sales"] = "Продажа";
+$lang["reports_sales_amount"] = "сумма продаж";
+$lang["reports_sales_summary_report"] = "Продажи Сводный отчет";
+$lang["reports_serial_number"] = "серийный номер";
+$lang["reports_sold_by"] = "Продавал через";
+$lang["reports_sold_to"] = "Продано к";
+$lang["reports_stock_location"] = "";
+$lang["reports_subtotal"] = "Промежуточная сумма";
+$lang["reports_summary_reports"] = "Сводные отчеты";
+$lang["reports_supplied_by"] = "Поставлял за";
+$lang["reports_supplier"] = "Поставщик";
+$lang["reports_suppliers"] = "Поставщики";
+$lang["reports_suppliers_summary_report"] = "Сводный отчет Поставщики";
+$lang["reports_tax"] = "налог";
+$lang["reports_tax_percent"] = "процент налога";
+$lang["reports_taxes"] = "Налоги";
+$lang["reports_taxes_summary_report"] = "Сводный отчет налоги";
+$lang["reports_this_month"] = "В этом месяце";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "В этом году";
+$lang["reports_today"] = "сегодня";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "сумма";
+$lang["reports_type"] = "тип";
+$lang["reports_welcome_message"] = "Добро пожаловать в панель отчетов. Пожалуйста, выберите отчет для просмотра.";
+$lang["reports_yesterday"] = "вчера";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "Оптовая Цена";
+$lang["reports_unit_price"] = "Розничная Цена";
+$lang["reports_sub_total_value"] = "промежуточный итог";
+$lang["reports_total_inventory_value"] = "Total Inventory Value";
+$lang["reports_zero_and_less"] = "Zero and less";
+$lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/sales_lang.php opensourcepos/application/language/ru/sales_lang.php
--- pos-prod/application/language/ru/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/sales_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,86 +1,117 @@
 <?php
-$lang['sales_giftcard_number'] = 'Номер подарочных карт';
-$lang['sales_giftcard'] = 'Подарочная карта';
-$lang['sales_register'] = 'Продажи журнала';
-$lang['sales_mode'] = 'режим журнала';
-$lang['sales_new_item'] = 'Новый Товар';
-$lang['sales_item_name'] = 'Название товара';
-$lang['sales_item_number'] = 'Номер товара';
-$lang['sales_new_customer'] = 'Новый клиент';
-$lang['sales_customer'] = 'клиент';
-$lang['sales_no_items_in_cart'] = 'Там нет товаров в корзине';
-$lang['sales_total'] = 'сумма';
-$lang['sales_tax_percent'] = 'Налоговые %';
-$lang['sales_price'] = 'цена';
-$lang['sales_quantity'] = 'Кол-во.';
-$lang['sales_discount'] = 'скидка %';
-$lang['sales_edit'] = 'редактировать';
-$lang['sales_payment'] = 'Вид оплаты';
-$lang['sales_edit_item'] = 'Редактировать Товар';
-$lang['sales_find_or_scan_item'] = 'Найти/Сканировать Товара';
-$lang['sales_find_or_scan_item_or_receipt'] = 'Найти/Сканировать Товара ИЛИ Квитанция';
-$lang['sales_select_customer'] = 'Выберите клиента (необязательно)';
-$lang['sales_start_typing_item_name'] = 'Начните печатать название товара или сканировайте штрих-кода...';
-$lang['sales_start_typing_customer_name'] = 'Начните печатать название клиента...';
-$lang['sales_sub_total'] = 'промежуточный итог';
-$lang['sales_tax'] = 'налог';
-$lang['sales_comment'] = 'комментировать';
-$lang['sales_unable_to_add_item'] = 'Невозможно добавить товар продажи';
-$lang['sales_sale_for_customer'] = 'Клиент:';
-$lang['sales_remove_customer'] = 'Удалите клиентов';
-$lang['sales_error_editing_item'] = 'Ошибка редактирования товара';
-$lang['sales_complete_sale'] = 'Завершить продажу';
-$lang['sales_cancel_sale'] = 'Отменить продажу';
-$lang['sales_add_payment'] = 'Добавить оплаты';
-$lang['sales_receipt'] = 'товарный чек';
-$lang['sales_receipt_number']='POS #';
-$lang['sales_id'] = 'Номер Продажы';
-$lang['sales_sale'] = 'Продажа';
-$lang['sales_return'] = 'возвращать';
-$lang['sales_confirm_finish_sale'] = 'Вы уверены, что хотите заверщить эту продажу? Не может быть отменено.';
-$lang['sales_confirm_cancel_sale'] = 'Вы уверены, что хотите удалить эту продажу? Все детали будут очищены.';
-$lang['sales_cash'] = 'наличные деньги';
-$lang['sales_check'] = 'банковский чек';
-$lang['sales_debit'] = 'Дебетовая карта';
-$lang['sales_credit'] = 'кредитная карта';
-$lang['sales_giftcard'] = 'Подарочная карта';
-$lang['sales_amount_tendered'] = 'предложенная сумма';
-$lang['sales_change_due'] = 'сдача должное';
-$lang['sales_payment_not_cover_total'] = 'оплачиваемая сумма недостаточно';
-$lang['sales_transaction_failed'] = 'Транзакция не удалось';
-$lang['sales_must_enter_numeric'] = 'числовое значение необходимое для предложенная сумма';
-$lang['sales_must_enter_numeric_giftcard'] = 'числовое значение необходимое для число подарочную карту';
-$lang['sales_serial'] = 'серийный номер';
-$lang['sales_description_abbrv'] = 'описание';
-$lang['sales_item_out_of_stock'] = 'Товар распродано';
-$lang['sales_item_insufficient_of_stock'] = 'Товар недостаточно на складе';
-$lang['sales_quantity_less_than_zero'] = 'Внимание Желаемое количество является недостаточным. Вы все еще можете обрабатывать продажи, но проверить ваш инвентарь';
-$lang['sales_successfully_updated'] = 'Продажа успешно обновлен';
-$lang['sales_unsuccessfully_updated'] = 'Продажа безуспешно обновлен';
-$lang['sales_edit_sale'] = 'Редактировать продажи';
-$lang['sales_employee'] = 'сотрудник';
-$lang['sales_successfully_deleted'] = 'продажи успешно удален';
-$lang['sales_unsuccessfully_deleted'] = 'продажи безуспешно удален';
-$lang['sales_delete_entire_sale'] = 'Удалить всего продажи';
-$lang['sales_delete_confirmation'] = 'Вы уверены, что хотите удалить эту продажу, это действие не может быть отменено';
-$lang['sales_delete_successful'] = 'Вы успешно удален продаже';
-$lang['sales_delete_unsuccessful'] = 'Вы безуспешно удален продаже';
-$lang['sales_suspend_sale'] = 'Приостановить продажи';
-$lang['sales_confirm_suspend_sale'] = 'Вы уверены, что хотите приостановить эту продажу?';
-$lang['sales_suspended_sales'] = 'приостановила продажи';
-$lang['sales_suspended_sale_id'] = 'приостановила продажи ID';
-$lang['sales_date'] = 'Число';
-$lang['sales_comments'] = 'Комментарии';
-$lang['sales_unsuspend_and_delete'] = 'Разблокировать и удалить';
-$lang['sales_unsuspend'] = 'Разблокировать';
-$lang['sales_successfully_suspended_sale'] = 'Ваши продажи успешно приостановлена';
-$lang['sales_email_receipt'] = 'послать квитанция по E-Mail';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Discount';
-$lang['sales_sale_time']='Time';
-$lang['sales_payments_total'] = 'Payments Total';
-$lang['sales_amount_due'] = 'Amount Due';
-$lang['sales_payment_type'] = "тип";
-$lang['sales_payment_amount'] = "количество";
-$lang['sales_basic_information'] = "информацию о билетах";
-?>
+
+$lang["sales_add_payment"] = "Добавить оплаты";
+$lang["sales_amount_due"] = "Amount Due";
+$lang["sales_amount_tendered"] = "предложенная сумма";
+$lang["sales_basic_information"] = "информацию о билетах";
+$lang["sales_cancel_sale"] = "Отменить продажу";
+$lang["sales_cash"] = "наличные деньги";
+$lang["sales_change_due"] = "сдача должное";
+$lang["sales_check"] = "банковский чек";
+$lang["sales_check_balance"] = "Check remainder";
+$lang["sales_comment"] = "комментировать";
+$lang["sales_comments"] = "Комментарии";
+$lang["sales_complete_sale"] = "Завершить продажу";
+$lang["sales_confirm_cancel_sale"] = "Вы уверены, что хотите удалить эту продажу? Все детали будут очищены.";
+$lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
+$lang["sales_confirm_finish_sale"] = "Вы уверены, что хотите заверщить эту продажу? Не может быть отменено.";
+$lang["sales_confirm_suspend_sale"] = "Вы уверены, что хотите приостановить эту продажу?";
+$lang["sales_credit"] = "кредитная карта";
+$lang["sales_customer"] = "клиент";
+$lang["sales_date"] = "Число";
+$lang["sales_date_required"] = "A correct date needs to be filled in";
+$lang["sales_date_type"] = "Date field is required";
+$lang["sales_debit"] = "Дебетовая карта";
+$lang["sales_delete_confirmation"] = "Вы уверены, что хотите удалить эту продажу, это действие не может быть отменено";
+$lang["sales_delete_entire_sale"] = "Удалить всего продажи";
+$lang["sales_delete_successful"] = "Вы успешно удален продаже";
+$lang["sales_delete_unsuccessful"] = "Вы безуспешно удален продаже";
+$lang["sales_description_abbrv"] = "описание";
+$lang["sales_discount"] = "скидка %";
+$lang["sales_discount_included"] = "% Discount";
+$lang["sales_discount"] = "Discount";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "редактировать";
+$lang["sales_edit_item"] = "Редактировать Товар";
+$lang["sales_edit_sale"] = "Редактировать продажи";
+$lang["sales_email_receipt"] = "послать квитанция по E-Mail";
+$lang["sales_employee"] = "сотрудник";
+$lang["sales_error_editing_item"] = "Ошибка редактирования товара";
+$lang["sales_find_or_scan_item"] = "Найти/Сканировать Товара";
+$lang["sales_find_or_scan_item_or_receipt"] = "Найти/Сканировать Товара ИЛИ Квитанция";
+$lang["sales_giftcard"] = "Подарочная карта";
+$lang["sales_giftcard_balance"] = "Giftcard Balance";
+$lang["sales_giftcard_number"] = "Номер подарочных карт";
+$lang["sales_id"] = "Номер Продажы";
+$lang["sales_invoice"] = "Invoice";
+$lang["sales_invoice_confirm"] = "This invoice will be sent to";
+$lang["sales_invoice_enable"] = "Create Invoice";
+$lang["sales_invoice_filter"] = "Invoices";
+$lang["sales_cash_filter"] = "Cash";
+$lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
+$lang["sales_invoice_number"] = "Invoice #";
+$lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
+$lang["sales_invoice_sent"] = "Invoice sent to";
+$lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
+$lang["sales_invoice_update"] = "Recount";
+$lang["sales_item_insufficient_of_stock"] = "Товар недостаточно на складе";
+$lang["sales_item_name"] = "Название товара";
+$lang["sales_item_number"] = "Номер товара";
+$lang["sales_item_out_of_stock"] = "Товар распродано";
+$lang["sales_mode"] = "режим журнала";
+$lang["sales_must_enter_numeric"] = "числовое значение необходимое для предложенная сумма";
+$lang["sales_must_enter_numeric_giftcard"] = "числовое значение необходимое для число подарочную карту";
+$lang["sales_new_customer"] = "Новый клиент";
+$lang["sales_new_item"] = "Новый Товар";
+$lang["sales_no_description"] = "None";
+$lang["sales_no_filter"] = "All";
+$lang["sales_no_items_in_cart"] = "Там нет товаров в корзине";
+$lang["sales_no_sales_to_display"] = "No sales to display";
+$lang["sales_one_or_multiple"] = "";
+$lang["sales_takings"] = "Takings";
+$lang["sales_payment"] = "Вид оплаты";
+$lang["sales_payment_amount"] = "количество";
+$lang["sales_payment_not_cover_total"] = "оплачиваемая сумма недостаточно";
+$lang["sales_payment_type"] = "тип";
+$lang["sales_payments_total"] = "Payments Total";
+$lang["sales_price"] = "цена";
+$lang["sales_print_after_sale"] = "Распечатать квитанцию ​​после продажи";
+$lang["sales_quantity"] = "Кол-во.";
+$lang["sales_quantity_less_than_zero"] = "Внимание Желаемое количество является недостаточным. Вы все еще можете обрабатывать продажи, но проверить ваш инвентарь";
+$lang["sales_quantity_less_than_reorder_level"] = "Внимание Желаемое количество является недостаточным.";
+$lang["sales_receipt"] = "товарный чек";
+$lang["sales_receipt_number"] = "POS #";
+$lang["sales_register"] = "Продажи журнала";
+$lang["sales_remove_customer"] = "Удалите клиентов";
+$lang["sales_return"] = "возвращать";
+$lang["sales_sale"] = "Продажа";
+$lang["sales_sale_for_customer"] = "Клиент:";
+$lang["sales_sale_time"] = "Time";
+$lang["sales_select_customer"] = "Выберите клиента (необязательно)";
+$lang["sales_send_invoice"] = "Send Invoice";
+$lang["sales_serial"] = "серийный номер";
+$lang["sales_show_invoice"] = "invoice";
+$lang["sales_show_receipt"] = "receipt";
+$lang["sales_start_typing_customer_name"] = "Начните печатать название клиента...";
+$lang["sales_start_typing_item_name"] = "Начните печатать название товара или сканировайте штрих-кода...";
+$lang["sales_stock_location"] = "";
+$lang["sales_sub_total"] = "промежуточный итог";
+$lang["sales_successfully_deleted"] = "продажи успешно удален";
+$lang["sales_successfully_suspended_sale"] = "Ваши продажи успешно приостановлена";
+$lang["sales_successfully_updated"] = "Продажа успешно обновлен";
+$lang["sales_suspend_sale"] = "Приостановить продажи";
+$lang["sales_suspended_sale_id"] = "приостановила продажи ID";
+$lang["sales_suspended_sales"] = "приостановила продажи";
+$lang["sales_tax"] = "налог";
+$lang["sales_tax_percent"] = "Налоговые %";
+$lang["sales_total"] = "сумма";
+$lang["sales_total_tax_exclusive"] = "Tax excluded";
+$lang["sales_transaction_failed"] = "Транзакция не удалось";
+$lang["sales_unable_to_add_item"] = "Невозможно добавить товар продажи";
+$lang["sales_unsuccessfully_deleted"] = "продажи безуспешно удален";
+$lang["sales_unsuccessfully_updated"] = "Продажа безуспешно обновлен";
+$lang["sales_unsuspend"] = "Разблокировать";
+$lang["sales_unsuspend_and_delete"] = "Разблокировать и удалить";
+$lang["sales_update"] = "Edit Sale";
+$lang["sales_date_range"] = "размах числа";
+$lang["sales_none_selected"] = "Вы не выбрали ни одной товари для редактирования";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/ru/suppliers_lang.php opensourcepos/application/language/ru/suppliers_lang.php
--- pos-prod/application/language/ru/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/ru/suppliers_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new'] = 'Новый поставщик';
-$lang['suppliers_supplier'] = 'поставщик';
-$lang['suppliers_update'] = 'Обновить поставщика';
-$lang['suppliers_confirm_delete'] = 'Вы уверены, что хотите удалить выбранных поставщиков?';
-$lang['suppliers_none_selected'] = 'Вы не выбрали ни поставщики удалить';
-$lang['suppliers_error_adding_updating'] = 'Ошибка при добавлении/обновлении поставщиком';
-$lang['suppliers_successful_adding'] = 'Вы успешно добавили поставщиком';
-$lang['suppliers_successful_updating'] = 'Вы успешно обновляли поставщиком';
-$lang['suppliers_successful_deleted'] = 'Вы успешно удален';
-$lang['suppliers_one_or_multiple'] = 'поставщик (а)';
-$lang['suppliers_cannot_be_deleted'] = 'Не удалось удалить выбранные поставщиков, один или более из выбранных поставщиков имеет продаж.';
-$lang['suppliers_basic_information'] = 'Информация о поставщике';
-$lang['suppliers_account_number'] = '№ счета';
-$lang['suppliers_company_name'] = 'Название компании';
-$lang['suppliers_company_name_required'] = 'Название компании является обязательным полем';
-?>
+
+$lang["suppliers_account_number"] = "№ счета";
+$lang["suppliers_basic_information"] = "Информация о поставщике";
+$lang["suppliers_cannot_be_deleted"] = "Не удалось удалить выбранные поставщиков, один или более из выбранных поставщиков имеет продаж.";
+$lang["suppliers_company_name"] = "Название компании";
+$lang["suppliers_company_name_required"] = "Название компании является обязательным полем";
+$lang["suppliers_agency_name"] = " ";
+$lang["suppliers_confirm_delete"] = "Вы уверены, что хотите удалить выбранных поставщиков?";
+$lang["suppliers_error_adding_updating"] = "Ошибка при добавлении/обновлении поставщиком";
+$lang["suppliers_new"] = "Новый поставщик";
+$lang["suppliers_none_selected"] = "Вы не выбрали ни поставщики удалить";
+$lang["suppliers_one_or_multiple"] = "поставщик (а)";
+$lang["suppliers_successful_adding"] = "Вы успешно добавили поставщиком";
+$lang["suppliers_successful_deleted"] = "Вы успешно удален";
+$lang["suppliers_successful_updating"] = "Вы успешно обновляли поставщиком";
+$lang["suppliers_supplier"] = "поставщик";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "Обновить поставщика";
Only in pos-prod/application/language: Russian
Only in pos-prod/application/language: Spanish
Only in pos-prod/application/language: spanish
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/common_lang.php opensourcepos/application/language/th/common_lang.php
--- pos-prod/application/language/th/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/common_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,82 +1,57 @@
 <?php
-$lang['common_common']='ธรรมดา';
-$lang['common_submit']='ยอมรับ';
-$lang['common_or']='หรือ';
-$lang['common_powered_by']='สนับสนุนโดย';
-$lang['common_welcome']='ยินดีต้อนรับ';
-$lang['common_logout']='ลงชื่อออก';
-$lang['common_list_of']='รายชื่อ';
-$lang['common_first_name']='ชื่อ';
-$lang['common_last_name']='นามสกุล';
-$lang['common_email']='E-Mail';
-$lang['common_phone_number']='โทรศัพท์';
-$lang['common_address_1']='ที่อยู่ที่ 1';
-$lang['common_address_2']='ที่อยู่ที่ 2';
-$lang['common_city']='เมือง';
-$lang['common_state']='ประเทศ';
-$lang['common_zip']='Zip';
-$lang['common_country']='ประเทศ';
-$lang['common_comments']='หมายเหตุ';
-$lang['common_edit']='แก้ไข';
-$lang['common_search']='ค้นหา';
-$lang['common_delete']='ลบ';
-$lang['common_remove']='ลบ';
-$lang['common_view_recent_sales']='สำรวจการขายเมื่อเร็วๆนี้';
-$lang['common_you_are_using_ospos']='คุณกำลังใช้ Point of Sales รุ่น';
-$lang['common_please_visit_my']='เยี่ยมชมที่';
-$lang['common_website']='website';
-$lang['common_fields_required_message']='ช่องสีแดงต้องกรอก';
-$lang['common_learn_about_project']='to learn the lastest information about the project';
-$lang['common_searched_for']='ค้นหาสำหรับ';
-$lang['common_first_name_required']='ชื่อต้องกรอก';
-$lang['common_last_name_required']='นามสกุลต้องกรอก';
-$lang['common_email_invalid_format']='e-mail address ไม่เหมาะสม';
-$lang['common_confirm_search']='คุณเลือกมากกว่าหนึ่งแถว, สิ่งที่คุณเลือกจะถูกยกเลิกหลังการค้นหา. แน่ใจหรือไม่ที่จะค้นหา?';
-$lang['common_no_persons_to_display']='ไม่พบข้อมูลตัวบุคคล';
-$lang['common_return_policy']='กฏการคืน';
-$lang['common_price']='ราคา';
-$lang['common_welcome_message']= 'ยินดีต้อนรับเข้าสู่โปรแกรมขายหน้าร้านขั้นเทบ!';
-$lang['common_inv']='ยอด';
-$lang['common_det']='สรุป';
-?>
-<?php
-$lang['common_common']='ธรรมดา';
-$lang['common_submit']='ยอมรับ';
-$lang['common_or']='หรือ';
-$lang['common_powered_by']='สนับสนุนโดย';
-$lang['common_welcome']='ยินดีต้อนรับ';
-$lang['common_logout']='ลงชื่อออก';
-$lang['common_list_of']='รายชื่อ';
-$lang['common_first_name']='ชื่อ';
-$lang['common_last_name']='นามสกุล';
-$lang['common_email']='E-Mail';
-$lang['common_phone_number']='โทรศัพท์';
-$lang['common_address_1']='ที่อยู่ที่ 1';
-$lang['common_address_2']='ที่อยู่ที่ 2';
-$lang['common_city']='เมือง';
-$lang['common_state']='ประเทศ';
-$lang['common_zip']='Zip';
-$lang['common_country']='ประเทศ';
-$lang['common_comments']='หมายเหตุ';
-$lang['common_edit']='แก้ไข';
-$lang['common_search']='ค้นหา';
-$lang['common_delete']='ลบ';
-$lang['common_remove']='ลบ';
-$lang['common_view_recent_sales']='สำรวจการขายเมื่อเร็วๆนี้';
-$lang['common_you_are_using_ospos']='คุณกำลังใช้ Point of Sales รุ่น';
-$lang['common_please_visit_my']='เยี่ยมชมที่';
-$lang['common_website']='website';
-$lang['common_fields_required_message']='ช่องสีแดงต้องกรอก';
-$lang['common_learn_about_project']='to learn the lastest information about the project';
-$lang['common_searched_for']='ค้นหาสำหรับ';
-$lang['common_first_name_required']='ชื่อต้องกรอก';
-$lang['common_last_name_required']='นามสกุลต้องกรอก';
-$lang['common_email_invalid_format']='e-mail address ไม่เหมาะสม';
-$lang['common_confirm_search']='คุณเลือกมากกว่าหนึ่งแถว, สิ่งที่คุณเลือกจะถูกยกเลิกหลังการค้นหา. แน่ใจหรือไม่ที่จะค้นหา?';
-$lang['common_no_persons_to_display']='ไม่พบข้อมูลตัวบุคคล';
-$lang['common_return_policy']='กฏการคืน';
-$lang['common_price']='ราคา';
-$lang['common_welcome_message']= 'ยินดีต้อนรับเข้าสู่โปรแกรมขายหน้าร้านขั้นเทบ!';
-$lang['common_inv']='ยอด';
-$lang['common_det']='สรุป';
-?>
\ No newline at end of file
+
+$lang["common_address_1"] = "ที่อยู่";
+$lang["common_address_2"] = "ที่อยู่ (เพิ่มเติม)";
+$lang["common_city"] = "อำเภอ";
+$lang["common_comments"] = "หมายเหตุ";
+$lang["common_common"] = "ธรรมดา";
+$lang["common_confirm_search"] = "คุณเลือกมากกว่าหนึ่งแถว, สิ่งที่คุณเลือกจะถูกยกเลิกหลังการค้นหา. แน่ใจหรือไม่ที่จะค้นหา?";
+$lang["common_country"] = "ประเทศ";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "ลบ";
+$lang["common_print"] = "พิมพ์";
+$lang["common_det"] = "สรุป";
+$lang["common_edit"] = "แก้ไข";
+$lang["common_email"] = "E-Mail";
+$lang["common_email_invalid_format"] = "e-mail address ไม่ถูกต้อง";
+$lang["common_fields_required_message"] = "ช่องสีแดงต้องกรอก";
+$lang["common_first_name"] = "ชื่อ";
+$lang["common_first_name_required"] = "ชื่อต้องกรอก";
+$lang["common_first_page"] = "อันดับแรก";
+$lang["common_gender"] = "เพศ";
+$lang["common_gender_female"] = "หญิง";
+$lang["common_gender_male"] = "ชาย";
+$lang["common_inv"] = "ยอด";
+$lang["common_last_name"] = "นามสกุล";
+$lang["common_last_name_required"] = "นามสกุลต้องกรอก";
+$lang["common_last_page"] = "Last";
+$lang["common_learn_about_project"] = "เพื่อศึกษาข้อมูลล่าสุดของโครงการ";
+$lang["common_list_of"] = "รายการ";
+$lang["common_logout"] = "ออกจากระบบ";
+$lang["common_new"] = "New";
+$lang["common_no_persons_to_display"] = "ไม่พบข้อมูลตัวบุคคล";
+$lang["common_or"] = "หรือ";
+$lang["common_phone_number"] = "โทรศัพท์";
+$lang["common_phone_number_required"] = "ต้องกรอกเบอร์โทร";
+$lang["common_please_visit_my"] = "เยี่ยมชมที่";
+$lang["common_powered_by"] = "จัดทำโดย";
+$lang["common_price"] = "ราคา";
+$lang["common_remove"] = "ลบ";
+$lang["common_return_policy"] = "นโยบายคืนสินค้า";
+$lang["common_search"] = "ค้นหา";
+$lang["common_search_options"] = "Search options";
+$lang["common_searched_for"] = "ค้นหาสำหรับ";
+$lang["common_state"] = "จังหวัด";
+$lang["common_submit"] = "ส่งข้อมูล";
+$lang["common_view_recent_sales"] = "การขายล่าสุด";
+$lang["common_website"] = "website";
+$lang["common_welcome"] = "ยินดีต้อนรับ";
+$lang["common_welcome_message"] = "Opensource Point of sale. กรุณาเลือกคำสั่งเมนูด้านล่าง ";
+$lang["common_you_are_using_ospos"] = "คุณกำลังใช้ Opensource Point of Sales รุ่น";
+$lang["common_zip"] = "รหัสไปรษณีย์";
+$lang["common_import"] = "นำเข้า";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "ต้องกรอก";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/config_lang.php opensourcepos/application/language/th/config_lang.php
--- pos-prod/application/language/th/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/config_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,72 +1,122 @@
 <?php
-$lang['config_info']='องค์ประกอบร้านค้า';
-$lang['config_company']='ชื่อร้านค้า';
-$lang['config_address']='ที่อยู่';
-$lang['config_phone']='เบอร์โทรศัพท์';
-$lang['config_website']='เว็บไซต์';
-$lang['config_fax']='แฟ็ก';
-$lang['config_default_tax_rate']='อัตตราภาษีเริ่มต้น %';
-$lang['config_default_tax_rate_1']='อัตตราภาษี 1';
-$lang['config_default_tax_rate_2']='อัตตราภาษี 2';
-$lang['config_company_required']='ชื่อร้านค้าต้องกรอก';
-$lang['config_address_required']='ที่อยู่ต้องกรอก';
-$lang['config_phone_required']='เบอร์โทรต้องกรอก';
-$lang['config_default_tax_rate_required']='อัตตราภาษีเริ่มต้นต้องกรอก';
-$lang['config_default_tax_rate_number']='อัตตราภาษีเริ่มต้นต้องเป็นตัวเลข';
-$lang['config_company_website_url']='เว็บไซต์ร้านค้าไม่ถูกต้อง';
-$lang['config_saved_successfully']='องค์ประกอบร้านค้าบันทึกเรียบร้อย';
-$lang['config_saved_unsuccessfully']='องค์ประกอบร้านค้าบันทึกล้มเหลว';
-$lang['config_return_policy_required']='กฎการคืนของต้องกรอก';
-$lang['config_print_after_sale']='ปริ๊นบิลหลังการขาย';
-$lang['config_language'] = 'ภาษา';
-$lang['config_timezone'] = 'Timezone';
-$lang['config_currency_symbol'] = 'ลัญลักษณ์ค่าเงิน';
-$lang['config_currency_side'] = 'ด้านขวา'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'พื้นที่เพิ่มเติม 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'พื้นที่เพิ่มเติม 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'พื้นที่เพิ่มเติม 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'พื้นที่เพิ่มเติม 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'พื้นที่เพิ่มเติม 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'พื้นที่เพิ่มเติม 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'พื้นที่เพิ่มเติม 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'พื้นที่เพิ่มเติม 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'พื้นที่เพิ่มเติม 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'พื้นที่เพิ่มเติม 10'; //GARRISON ADDED 4/21/2013
 
-?>
-<?php
-$lang['config_info']='องค์ประกอบร้านค้า';
-$lang['config_company']='ชื่อร้านค้า';
-$lang['config_address']='ที่อยู่';
-$lang['config_phone']='เบอร์โทรศัพท์';
-$lang['config_website']='เว็บไซต์';
-$lang['config_fax']='แฟ็ก';
-$lang['config_default_tax_rate']='อัตตราภาษีเริ่มต้น %';
-$lang['config_default_tax_rate_1']='อัตตราภาษี 1';
-$lang['config_default_tax_rate_2']='อัตตราภาษี 2';
-$lang['config_company_required']='ชื่อร้านค้าต้องกรอก';
-$lang['config_address_required']='ที่อยู่ต้องกรอก';
-$lang['config_phone_required']='เบอร์โทรต้องกรอก';
-$lang['config_default_tax_rate_required']='อัตตราภาษีเริ่มต้นต้องกรอก';
-$lang['config_default_tax_rate_number']='อัตตราภาษีเริ่มต้นต้องเป็นตัวเลข';
-$lang['config_company_website_url']='เว็บไซต์ร้านค้าไม่ถูกต้อง';
-$lang['config_saved_successfully']='องค์ประกอบร้านค้าบันทึกเรียบร้อย';
-$lang['config_saved_unsuccessfully']='องค์ประกอบร้านค้าบันทึกล้มเหลว';
-$lang['config_return_policy_required']='กฎการคืนของต้องกรอก';
-$lang['config_print_after_sale']='ปริ๊นบิลหลังการขาย';
-$lang['config_language'] = 'ภาษา';
-$lang['config_timezone'] = 'Timezone';
-$lang['config_currency_symbol'] = 'ลัญลักษณ์ค่าเงิน';
-$lang['config_currency_side'] = 'ด้านขวา'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'พื้นที่เพิ่มเติม 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'พื้นที่เพิ่มเติม 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'พื้นที่เพิ่มเติม 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'พื้นที่เพิ่มเติม 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'พื้นที่เพิ่มเติม 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'พื้นที่เพิ่มเติม 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'พื้นที่เพิ่มเติม 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'พื้นที่เพิ่มเติม 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'พื้นที่เพิ่มเติม 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'พื้นที่เพิ่มเติม 10'; //GARRISON ADDED 4/21/2013
-
-?>
\ No newline at end of file
+$lang["config_address"] = "ที่อยู่";
+$lang["config_address_required"] = "ที่อยู่ต้องกรอก";
+$lang["config_backup_button"] = "สำรองข้อมูล";
+$lang["config_backup_database"] = "สำรองฐานข้อมูล";
+$lang["config_barcode_company"] = "ชื่อร้านค้า";
+$lang["config_barcode_configuration"] = "ตั้งค่าระบบบาร์โค้ด";
+$lang["config_barcode_content"] = "รหัสที่พิมพ์";
+$lang["config_barcode_first_row"] = "แถว 1";
+$lang["config_barcode_font"] = "แบบอักษร";
+$lang["config_barcode_height"] = "สูง (px)";
+$lang["config_barcode_id"] = "รหัสสินค้า/ชื่อสินค้า";
+$lang["config_barcode_info"] = "ตั้งค่าบาร์โค้ด";
+$lang["config_barcode_layout"] = "โครงร่างการพิมพ์";
+$lang["config_barcode_name"] = "สินค้า";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "จำนวนดวงใน 1 แถว";
+$lang["config_barcode_page_cellspacing"] = "ระยะห่างต่อดวง";
+$lang["config_barcode_page_width"] = "ความกว้างในหน้า";
+$lang["config_barcode_price"] = "ราคา";
+$lang["config_barcode_quality"] = "คุณภาพ (1-100)";
+$lang["config_barcode_second_row"] = "แถว 2";
+$lang["config_barcode_third_row"] = "แถว 3";
+$lang["config_barcode_type"] = "ประเภทบาร์โค้ด";
+$lang["config_barcode_width"] = "กว้าง (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "ชื่อร้านค้า";
+$lang["config_company_logo"] = "ภาพโลโก้";
+$lang["config_company_required"] = "ชื่อร้านค้าต้องกรอก";
+$lang["config_company_website_url"] = "เว็บไซต์ร้านค้าไม่ถูกต้อง";
+$lang["config_currency_side"] = "ด้านขวา";
+$lang["config_currency_symbol"] = "สัญลักษณ์ค่าเงิน";
+$lang["config_custom1"] = "พื้นที่เพิ่มเติม 1";
+$lang["config_custom10"] = "พื้นที่เพิ่มเติม 10";
+$lang["config_custom2"] = "พื้นที่เพิ่มเติม 2";
+$lang["config_custom3"] = "พื้นที่เพิ่มเติม 3";
+$lang["config_custom4"] = "พื้นที่เพิ่มเติม 4";
+$lang["config_custom5"] = "พื้นที่เพิ่มเติม 5";
+$lang["config_custom6"] = "พื้นที่เพิ่มเติม 6";
+$lang["config_custom7"] = "พื้นที่เพิ่มเติม 7";
+$lang["config_custom8"] = "พื้นที่เพิ่มเติม 8";
+$lang["config_custom9"] = "พื้นที่เพิ่มเติม 9";
+$lang["config_decimal_point"] = "จุดทศนิยม";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Default Sales Discount %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "อัตราภาษีเริ่มต้น %";
+$lang["config_default_tax_rate_1"] = "อัตราภาษี 1";
+$lang["config_default_tax_rate_2"] = "อัตราภาษี 2";
+$lang["config_default_tax_rate_number"] = "อัตราภาษีเริ่มต้นต้องเป็นตัวเลข";
+$lang["config_default_tax_rate_required"] = "อัตราภาษีเริ่มต้นต้องกรอก";
+$lang["config_fax"] = "แฟ็กซ์";
+$lang["config_general_configuration"] = "ตั้งค่าทั่วไป";
+$lang["config_info"] = "ข้อมูลร้านค้า";
+$lang["config_invoice_default_comments"] = "Default Invoice Comments";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Invoice Printer";
+$lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
+$lang["config_language"] = "ภาษา";
+$lang["config_lines_per_page"] = "Lines Per Page";
+$lang["config_lines_per_page_number"] = "The lines per page must be a number";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locations";
+$lang["config_location_info"] = "Location Configuration Information";
+$lang["config_logout"] = "Don't you want to make a backup before logging out?";
+$lang["config_number_format"] = "รูปแบบตัวเลข";
+$lang["config_phone"] = "เบอร์โทรศัพท์";
+$lang["config_phone_required"] = "เบอร์โทรต้องกรอก";
+$lang["config_print_bottom_margin"] = "Margin Bottom";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Margin Left";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Margin Right";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Show Print Dialog";
+$lang["config_print_top_margin"] = "Margin Top";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Settings";
+$lang["config_receipt_info"] = "Receipt Configuration Information";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Show Taxes";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "ใบส่งของ";
+$lang["config_return_policy_required"] = "ต้องกรอกเงื่อนไขการคืนสินค้า";
+$lang["config_sales_invoice_format"] = "รหัสใบเสร็จ";
+$lang["config_saved_successfully"] = "บันทึกข้อมูลร้านค้าเรียบร้อยแล้ว";
+$lang["config_saved_unsuccessfully"] = "บันทึกข้อมูลร้านค้าไม่สำเร็จ";
+$lang["config_show_total_discount"] = "Show total discount";
+$lang["config_stock_location"] = "สถานที่เก็บ";
+$lang["config_stock_location_duplicate"] = "";
+$lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
+$lang["config_stock_location_required"] = "จำเป็นต้องระบุสถานที่เก็บ";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "รวมภาษีแล้ว";
+$lang["config_thousands_separator"] = "ตัวคั่นหลักพัน";
+$lang["config_timezone"] = "โซนเวลา";
+$lang["config_use_invoice_template"] = "Use invoice template";
+$lang["config_website"] = "เว็บไซต์";
+$lang["config_locale_configuration"] = "ตั้งค่าภาษา";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "รูปแบบวันเวลา";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/customers_lang.php opensourcepos/application/language/th/customers_lang.php
--- pos-prod/application/language/th/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/customers_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,32 +1,19 @@
 <?php
-$lang['customers_new']='ลูกค้าใหม่'; 
-$lang['customers_customer']='ลูกค้า';  
-$lang['customers_update']='แก้ไขข้อมูลลูกค้า'; 
-$lang['customers_confirm_delete']='ยืนยันลบข้อมูลลูกค้า?'; 
-$lang['customers_none_selected']='คุณยังไม่ได้ทำการเลือกลูกค้า'; 
-$lang['customers_error_adding_updating'] = 'แก้ไขข้อมูลลูกค้าผิดพลาด'; 
-$lang['customers_successful_adding']='คุณได้ทำการเพิ่มลูกค้าเรียบร้อยแล้ว'; 
-$lang['customers_successful_updating']='คุณได้ทำการแก้ไขข้อมูลลูกค้าเรียบร้อยแล้ว'; 
-$lang['customers_successful_deleted']='คุณได้ทำการลบข้อมูลเรียบร้อยแล้ว'; 
-$lang['customers_one_or_multiple']='ลูกค้า'; 
-$lang['customers_cannot_be_deleted']='ไม่สามารลบลูกค้าที่ถูกเลือก, ลูกค้าที่ถูกเลือกถูขายไปแล้ว.';
-$lang['customers_basic_information']='ข้อมูลลูกค้า';
-$lang['customers_account_number']='บัญชี #';
-$lang['customers_taxable']='ต้องเสียภาษี';
-?>
-<?php
-$lang['customers_new']='ลูกค้าใหม่'; 
-$lang['customers_customer']='ลูกค้า';  
-$lang['customers_update']='แก้ไขข้อมูลลูกค้า'; 
-$lang['customers_confirm_delete']='ยืนยันลบข้อมูลลูกค้า?'; 
-$lang['customers_none_selected']='คุณยังไม่ได้ทำการเลือกลูกค้า'; 
-$lang['customers_error_adding_updating'] = 'แก้ไขข้อมูลลูกค้าผิดพลาด'; 
-$lang['customers_successful_adding']='คุณได้ทำการเพิ่มลูกค้าเรียบร้อยแล้ว'; 
-$lang['customers_successful_updating']='คุณได้ทำการแก้ไขข้อมูลลูกค้าเรียบร้อยแล้ว'; 
-$lang['customers_successful_deleted']='คุณได้ทำการลบข้อมูลเรียบร้อยแล้ว'; 
-$lang['customers_one_or_multiple']='ลูกค้า'; 
-$lang['customers_cannot_be_deleted']='ไม่สามารลบลูกค้าที่ถูกเลือก, ลูกค้าที่ถูกเลือกถูขายไปแล้ว.';
-$lang['customers_basic_information']='ข้อมูลลูกค้า';
-$lang['customers_account_number']='บัญชี #';
-$lang['customers_taxable']='ต้องเสียภาษี';
-?>
+
+$lang["customers_account_number"] = "บัญชี #";
+$lang["customers_account_number_duplicate"] = "This account number is already present in the database";
+$lang["customers_basic_information"] = "ข้อมูลลูกค้า";
+$lang["customers_cannot_be_deleted"] = "ไม่สามารลบลูกค้าที่ถูกเลือก, ลูกค้าที่ถูกเลือกถูขายไปแล้ว.";
+$lang["customers_company_name"] = "Company Name";
+$lang["customers_confirm_delete"] = "ยืนยันลบข้อมูลลูกค้า?";
+$lang["customers_customer"] = "ลูกค้า";
+$lang["customers_error_adding_updating"] = "แก้ไขข้อมูลลูกค้าผิดพลาด";
+$lang["customers_new"] = "ลูกค้าใหม่";
+$lang["customers_none_selected"] = "คุณยังไม่ได้ทำการเลือกลูกค้า";
+$lang["customers_one_or_multiple"] = "ลูกค้า";
+$lang["customers_successful_adding"] = "คุณได้ทำการเพิ่มลูกค้าเรียบร้อยแล้ว";
+$lang["customers_successful_deleted"] = "คุณได้ทำการลบข้อมูลเรียบร้อยแล้ว";
+$lang["customers_successful_updating"] = "คุณได้ทำการแก้ไขข้อมูลลูกค้าเรียบร้อยแล้ว";
+$lang["customers_taxable"] = "ต้องเสียภาษี";
+$lang["customers_update"] = "แก้ไขข้อมูลลูกค้า";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/employees_lang.php opensourcepos/application/language/th/employees_lang.php
--- pos-prod/application/language/th/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/employees_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,54 +1,28 @@
 <?php
-$lang['employees_employee']='Employee';
-$lang['employees_new']='New Employee';
-$lang['employees_update']='Update Employee';
-$lang['employees_confirm_delete']='Are you sure you want to delete the selected employees?';
-$lang['employees_none_selected']='You have not selected any employees to delete';
-$lang['employees_error_adding_updating'] = 'Error adding/updating employee';
-$lang['employees_successful_adding']='You have successfully added employee';
-$lang['employees_successful_updating']='You have successfully updated employee';
-$lang['employees_successful_deleted']='You have successfully deleted';
-$lang['employees_one_or_multiple']='employee(s)';
-$lang['employees_cannot_be_deleted']='Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
-$lang['employees_username']='Username';
-$lang['employees_password']='Password';
-$lang['employees_repeat_password']='Password Again';
-$lang['employees_username_required']='Username is a required field';
-$lang['employees_username_minlength']='The username must be at least 5 characters';
-$lang['employees_password_required']='Password is required';
-$lang['employees_password_minlength']='Passwords must be at least 8 characters';
-$lang['employees_password_must_match']='Passwords do not match';
-$lang['employees_basic_information']='Employee Basic Information';
-$lang['employees_login_info']='Employee Login Info';
-$lang['employees_permission_info']='Employee Permissions and Access';
-$lang['employees_permission_desc']='Check the boxes below to grant access to modules';
-$lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
-$lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
-?>
-<?php
-$lang['employees_employee']='Employee';
-$lang['employees_new']='New Employee';
-$lang['employees_update']='Update Employee';
-$lang['employees_confirm_delete']='Are you sure you want to delete the selected employees?';
-$lang['employees_none_selected']='You have not selected any employees to delete';
-$lang['employees_error_adding_updating'] = 'Error adding/updating employee';
-$lang['employees_successful_adding']='You have successfully added employee';
-$lang['employees_successful_updating']='You have successfully updated employee';
-$lang['employees_successful_deleted']='You have successfully deleted';
-$lang['employees_one_or_multiple']='employee(s)';
-$lang['employees_cannot_be_deleted']='Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
-$lang['employees_username']='Username';
-$lang['employees_password']='Password';
-$lang['employees_repeat_password']='Password Again';
-$lang['employees_username_required']='Username is a required field';
-$lang['employees_username_minlength']='The username must be at least 5 characters';
-$lang['employees_password_required']='Password is required';
-$lang['employees_password_minlength']='Passwords must be at least 8 characters';
-$lang['employees_password_must_match']='Passwords do not match';
-$lang['employees_basic_information']='Employee Basic Information';
-$lang['employees_login_info']='Employee Login Info';
-$lang['employees_permission_info']='Employee Permissions and Access';
-$lang['employees_permission_desc']='Check the boxes below to grant access to modules';
-$lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
-$lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
-?>
+
+$lang["employees_basic_information"] = "ข้อมูลพื้นฐานของพนักงาน";
+$lang["employees_cannot_be_deleted"] = "ไม่สามารถลบข้อมูลพนักงานที่กำลังปฏิบัติงานอยู่ได้";
+$lang["employees_confirm_delete"] = "ยืนยันการลบข้อมูลพนักงาน";
+$lang["employees_employee"] = "พนักงาน";
+$lang["employees_error_adding_updating"] = "การปรับปรุงข้อมูลผิดพลาด";
+$lang["employees_error_deleting_demo_admin"] = "You can not delete the demo admin user";
+$lang["employees_error_updating_demo_admin"] = "You can not change the demo admin user";
+$lang["employees_login_info"] = "Employee Login Info";
+$lang["employees_new"] = "เพิ่มพนักงาน";
+$lang["employees_none_selected"] = "โปรดเลือกพนักงาน";
+$lang["employees_one_or_multiple"] = "พนักงาน";
+$lang["employees_password"] = "Password";
+$lang["employees_password_minlength"] = "รหัสผ่านต้องยาวเกิน 8 อักษร";
+$lang["employees_password_must_match"] = "รหัสผ่านไม่ตรงกัน";
+$lang["employees_password_required"] = "ต้องกรอกรหัสผ่าน";
+$lang["employees_permission_desc"] = "Check the boxes below to grant access to modules";
+$lang["employees_permission_info"] = "Employee Permissions and Access";
+$lang["employees_repeat_password"] = "Password Again";
+$lang["employees_successful_adding"] = "เพิ่มข้อมูลพนักงานเรียบร้อยแล้ว";
+$lang["employees_successful_deleted"] = "ลบข้อมูลสำเร็จ";
+$lang["employees_successful_updating"] = "ปรับปรุงข้อมูลพนักงานเรียบร้อยแล้ว";
+$lang["employees_update"] = "แก้ไขข้อมูลพนักงาน";
+$lang["employees_username"] = "Username";
+$lang["employees_username_minlength"] = "ชื่อผู้ใช้งานต้องยาวเกิน 5 อักษร";
+$lang["employees_username_required"] = "จำเป็นต้องกรอกชื่อผู้ใช้งาน";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/error_lang.php opensourcepos/application/language/th/error_lang.php
--- pos-prod/application/language/th/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/error_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,8 +1,4 @@
 <?php
-$lang['error_no_permission_module']='You do not have permission to access the module named';
-$lang['error_unknown']='unknown';
-?>
-<?php
-$lang['error_no_permission_module']='You do not have permission to access the module named';
-$lang['error_unknown']='unknown';
-?>
+
+$lang["error_no_permission_module"] = "You do not have permission to access the module named";
+$lang["error_unknown"] = "unknown";
Only in opensourcepos/application/language/th: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/giftcards_lang.php opensourcepos/application/language/th/giftcards_lang.php
--- pos-prod/application/language/th/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/giftcards_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,140 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number']='Giftcard Number';
-$lang['giftcards_card_value']='Value';
-$lang['giftcards_basic_information']='Giftcard Information';
-$lang['giftcards_number_required']='Giftcard Number is a required field';
-$lang['giftcards_value_required']='Giftcard Value is a required field';
-$lang['giftcards_number']='Giftcard Number must be a number';
-$lang['giftcards_value']='Giftcard Value must be a number';
-$lang['giftcards_person_id']='Customer';
 
-$lang['giftcards_retrive_giftcard_info']='Retrieve Giftcard Info';
-$lang['giftcards_description']='Description';
-$lang['giftcards_amazon']='Amazon';
-$lang['giftcards_upc_database']='UPC Database';
-$lang['giftcards_cannot_find_giftcard']='Cannot find any information about giftcard';
-$lang['giftcards_info_provided_by']='Info provided by';
-$lang['giftcards_number_information']='Giftcard Number';
-$lang['giftcards_new']='New Giftcard';
-$lang['giftcards_update']='Update Giftcard';
-$lang['giftcards_giftcard']='Giftcard';
-$lang['giftcards_edit_multiple_giftcards']='Editing Multiple Giftcards';
-$lang['giftcards_category']='Category';
-$lang['giftcards_cost_price']='Cost Price';
-$lang['giftcards_unit_price']='Unit Price';
-$lang['giftcards_tax_1']='Tax 1';
-$lang['giftcards_tax_2']='Tax 2';
-$lang['giftcards_sales_tax_1'] = 'Sales Tax';
-$lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
-$lang['giftcards_tax_percent']='Tax Percent';
-$lang['giftcards_tax_percents']='Tax Percent(s)';
-$lang['giftcards_reorder_level']='Reorder Level';
-$lang['giftcards_quantity']='Quantity';
-$lang['giftcards_no_giftcards_to_display']='No Giftcards to display';
-$lang['giftcards_bulk_edit']='Bulk Edit';
-$lang['giftcards_confirm_delete']='Are you sure you want to delete the selected giftcards?';
-$lang['giftcards_none_selected']='You have not selected any giftcards to edit';
-$lang['giftcards_confirm_bulk_edit']='Are you sure you want to edit all the giftcards selected?';
-$lang['giftcards_successful_bulk_edit']='You have successfully updated the selected giftcards';
-$lang['giftcards_error_updating_multiple']='Error updating giftcards';
-$lang['giftcards_edit_fields_you_want_to_update']='Edit the fields you want to edit for ALL selected giftcards';
-$lang['giftcards_error_adding_updating'] = 'Error adding/updating giftcard';
-$lang['giftcards_successful_adding']='You have successfully added giftcard';
-$lang['giftcards_successful_updating']='You have successfully updated giftcard';
-$lang['giftcards_successful_deleted']='You have successfully deleted';
-$lang['giftcards_one_or_multiple']='giftcard(s)';
-$lang['giftcards_cannot_be_deleted']='Could not deleted selected giftcards, one or more of the selected giftcards has sales.';
-$lang['giftcards_none'] = 'None';
-$lang['giftcards_supplier'] = 'Supplier';
-$lang['giftcards_generate_barcodes'] = 'Generate Barcodes';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'You must select at least 1 giftcard to generate barcodes';
-$lang['giftcards_excel_import_failed'] = 'Excel import failed';
-$lang['giftcards_allow_alt_desciption'] = 'Allow Alt Description';
-$lang['giftcards_is_serialized'] = 'Giftcard has Serial Number';
-$lang['giftcards_low_inventory_giftcards'] = 'Low Inventory Giftcards';
-$lang['giftcards_serialized_giftcards'] = 'Serialized Giftcards';
-$lang['giftcards_no_description_giftcards'] = 'No Description Giftcards';
-$lang['giftcards_inventory_comments']='Comments';
-$lang['giftcards_count']='Update Inventory';
-$lang['giftcards_details_count']='Inventory Count Details';
-$lang['giftcards_add_minus']='Inventory to add/subtract';
-$lang['giftcards_current_quantity']='Current Quantity';
-$lang['giftcards_quantity_required']='Quantity is a required field. Please Close ( X ) to cancel';
-$lang['giftcards_do_nothing'] = 'Do Nothing';
-$lang['giftcards_change_all_to_serialized'] = 'Change All To Serialized';
-$lang['giftcards_change_all_to_unserialized'] = 'Change All To Unserialized';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Allow Alt Desc For All';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
-$lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
-$lang['giftcards_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
-?>
-<?php
-$lang['giftcards_giftcard_number']='Giftcard Number';
-$lang['giftcards_card_value']='Value';
-$lang['giftcards_basic_information']='Giftcard Information';
-$lang['giftcards_number_required']='Giftcard Number is a required field';
-$lang['giftcards_value_required']='Giftcard Value is a required field';
-$lang['giftcards_number']='Giftcard Number must be a number';
-$lang['giftcards_value']='Giftcard Value must be a number';
-$lang['giftcards_person_id']='Customer';
-
-$lang['giftcards_retrive_giftcard_info']='Retrieve Giftcard Info';
-$lang['giftcards_description']='Description';
-$lang['giftcards_amazon']='Amazon';
-$lang['giftcards_upc_database']='UPC Database';
-$lang['giftcards_cannot_find_giftcard']='Cannot find any information about giftcard';
-$lang['giftcards_info_provided_by']='Info provided by';
-$lang['giftcards_number_information']='Giftcard Number';
-$lang['giftcards_new']='New Giftcard';
-$lang['giftcards_update']='Update Giftcard';
-$lang['giftcards_giftcard']='Giftcard';
-$lang['giftcards_edit_multiple_giftcards']='Editing Multiple Giftcards';
-$lang['giftcards_category']='Category';
-$lang['giftcards_cost_price']='Cost Price';
-$lang['giftcards_unit_price']='Unit Price';
-$lang['giftcards_tax_1']='Tax 1';
-$lang['giftcards_tax_2']='Tax 2';
-$lang['giftcards_sales_tax_1'] = 'Sales Tax';
-$lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
-$lang['giftcards_tax_percent']='Tax Percent';
-$lang['giftcards_tax_percents']='Tax Percent(s)';
-$lang['giftcards_reorder_level']='Reorder Level';
-$lang['giftcards_quantity']='Quantity';
-$lang['giftcards_no_giftcards_to_display']='No Giftcards to display';
-$lang['giftcards_bulk_edit']='Bulk Edit';
-$lang['giftcards_confirm_delete']='Are you sure you want to delete the selected giftcards?';
-$lang['giftcards_none_selected']='You have not selected any giftcards to edit';
-$lang['giftcards_confirm_bulk_edit']='Are you sure you want to edit all the giftcards selected?';
-$lang['giftcards_successful_bulk_edit']='You have successfully updated the selected giftcards';
-$lang['giftcards_error_updating_multiple']='Error updating giftcards';
-$lang['giftcards_edit_fields_you_want_to_update']='Edit the fields you want to edit for ALL selected giftcards';
-$lang['giftcards_error_adding_updating'] = 'Error adding/updating giftcard';
-$lang['giftcards_successful_adding']='You have successfully added giftcard';
-$lang['giftcards_successful_updating']='You have successfully updated giftcard';
-$lang['giftcards_successful_deleted']='You have successfully deleted';
-$lang['giftcards_one_or_multiple']='giftcard(s)';
-$lang['giftcards_cannot_be_deleted']='Could not deleted selected giftcards, one or more of the selected giftcards has sales.';
-$lang['giftcards_none'] = 'None';
-$lang['giftcards_supplier'] = 'Supplier';
-$lang['giftcards_generate_barcodes'] = 'Generate Barcodes';
-$lang['giftcards_must_select_giftcard_for_barcode'] = 'You must select at least 1 giftcard to generate barcodes';
-$lang['giftcards_excel_import_failed'] = 'Excel import failed';
-$lang['giftcards_allow_alt_desciption'] = 'Allow Alt Description';
-$lang['giftcards_is_serialized'] = 'Giftcard has Serial Number';
-$lang['giftcards_low_inventory_giftcards'] = 'Low Inventory Giftcards';
-$lang['giftcards_serialized_giftcards'] = 'Serialized Giftcards';
-$lang['giftcards_no_description_giftcards'] = 'No Description Giftcards';
-$lang['giftcards_inventory_comments']='Comments';
-$lang['giftcards_count']='Update Inventory';
-$lang['giftcards_details_count']='Inventory Count Details';
-$lang['giftcards_add_minus']='Inventory to add/subtract';
-$lang['giftcards_current_quantity']='Current Quantity';
-$lang['giftcards_quantity_required']='Quantity is a required field. Please Close ( X ) to cancel';
-$lang['giftcards_do_nothing'] = 'Do Nothing';
-$lang['giftcards_change_all_to_serialized'] = 'Change All To Serialized';
-$lang['giftcards_change_all_to_unserialized'] = 'Change All To Unserialized';
-$lang['giftcards_change_all_to_allow_alt_desc'] = 'Allow Alt Desc For All';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
-$lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
-$lang['giftcards_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
-?>
+$lang["giftcards_add_minus"] = "Inventory to add/subtract";
+$lang["giftcards_allow_alt_description"] = "";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
+$lang["giftcards_basic_information"] = "ข้อมูลบัตรกำนัล";
+$lang["giftcards_bulk_edit"] = "Bulk Edit";
+$lang["giftcards_cannot_be_deleted"] = "Could not deleted selected giftcards, one or more of the selected giftcards has sales.";
+$lang["giftcards_cannot_find_giftcard"] = "Cannot find any information about giftcard";
+$lang["giftcards_card_value"] = "มูลค่า";
+$lang["giftcards_category"] = "";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "";
+$lang["giftcards_change_all_to_serialized"] = "Change All To Serialized";
+$lang["giftcards_change_all_to_unserialized"] = "";
+$lang["giftcards_confirm_bulk_edit"] = "";
+$lang["giftcards_confirm_delete"] = "Are you sure you want to delete the selected giftcards?";
+$lang["giftcards_cost_price"] = "ต้นทุน";
+$lang["giftcards_count"] = "Update Inventory";
+$lang["giftcards_current_quantity"] = "Current Quantity";
+$lang["giftcards_description"] = "Description";
+$lang["giftcards_details_count"] = "Inventory Count Details";
+$lang["giftcards_do_nothing"] = "";
+$lang["giftcards_edit_fields_you_want_to_update"] = "";
+$lang["giftcards_edit_multiple_giftcards"] = "แก้ไขบัตรกำนัลหลายใบ";
+$lang["giftcards_error_adding_updating"] = "Error adding/updating giftcard";
+$lang["giftcards_error_updating_multiple"] = "Error updating giftcards";
+$lang["giftcards_excel_import_failed"] = "Excel import failed";
+$lang["giftcards_generate_barcodes"] = "Generate Barcodes";
+$lang["giftcards_giftcard"] = "บัตรกำนัล";
+$lang["giftcards_giftcard_number"] = "เลขบัตรกำนัล";
+$lang["giftcards_info_provided_by"] = "Info provided by";
+$lang["giftcards_inventory_comments"] = "Comments";
+$lang["giftcards_is_serialized"] = "Giftcard has Serial Number";
+$lang["giftcards_low_inventory_giftcards"] = "Low Inventory Giftcards";
+$lang["giftcards_manually_editing_of_quantity"] = "Manual Edit of Quantity";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "You must select at least 1 giftcard to generate barcodes";
+$lang["giftcards_new"] = "เพิ่มบัตรกำนัล";
+$lang["giftcards_no_description_giftcards"] = "No Description Giftcards";
+$lang["giftcards_no_giftcards_to_display"] = "No Giftcards to display";
+$lang["giftcards_none"] = "";
+$lang["giftcards_none_selected"] = "You have not selected any giftcards to edit";
+$lang["giftcards_number"] = "เลขบัตรกำนัลต้องเป็นตัวเลขเท่านั้น";
+$lang["giftcards_number_information"] = "";
+$lang["giftcards_number_required"] = "ต้องกรอกเลขบัตรกำนัล";
+$lang["giftcards_one_or_multiple"] = "giftcard(s)";
+$lang["giftcards_person_id"] = "เจ้าของบัตร";
+$lang["giftcards_quantity"] = "ปริมาณ";
+$lang["giftcards_quantity_required"] = "Quantity is a required field. Please Close ( X ) to cancel";
+$lang["giftcards_reorder_level"] = "ยอดขั้นต่ำ";
+$lang["giftcards_retrive_giftcard_info"] = "Retrieve Giftcard Info";
+$lang["giftcards_sales_tax_1"] = "Sales Tax";
+$lang["giftcards_sales_tax_2"] = "";
+$lang["giftcards_serialized_giftcards"] = "Serialized Giftcards";
+$lang["giftcards_successful_adding"] = "You have successfully added giftcard";
+$lang["giftcards_successful_bulk_edit"] = "You have successfully updated the selected giftcards";
+$lang["giftcards_successful_deleted"] = "You have successfully deleted";
+$lang["giftcards_successful_updating"] = "You have successfully updated giftcard";
+$lang["giftcards_supplier"] = "Supplier";
+$lang["giftcards_tax_1"] = "Tax 1";
+$lang["giftcards_tax_2"] = "Tax 2";
+$lang["giftcards_tax_percent"] = "Tax Percent";
+$lang["giftcards_tax_percents"] = "";
+$lang["giftcards_unit_price"] = "ราคาปลีก";
+$lang["giftcards_upc_database"] = "";
+$lang["giftcards_update"] = "ปรับข้อมูลบัตรกำนัล";
+$lang["giftcards_use_inventory_menu"] = "";
+$lang["giftcards_value"] = "มูลค่าบัตรกำนัลต้องเป็นตัวเลขเท่านั้น";
+$lang["giftcards_value_required"] = "ต้องกรอกมูลค่าบัตรกำนัล";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/index.html opensourcepos/application/language/th/index.html
--- pos-prod/application/language/th/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/index.html	2016-05-23 15:32:31.907839365 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
@@ -8,13 +9,4 @@
 
 </body>
 </html>
-<html>
-<head>
-	<title>403 Forbidden</title>
-</head>
-<body>
 
-<p>Directory access is forbidden.</p>
-
-</body>
-</html>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/item_kits_lang.php opensourcepos/application/language/th/item_kits_lang.php
--- pos-prod/application/language/th/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/item_kits_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,40 +1,21 @@
 <?php
-$lang['item_kits_name'] = 'ชื่อสินค้าหมู่';
-$lang['item_kits_description'] = 'แนะนำสินค้าหมู่';
-$lang['item_kits_no_item_kits_to_display'] = 'ไม่มีสินค้าแสดง';
-$lang['item_kits_update'] = 'ปรับปรุงสินค้าหมู่';
-$lang['item_kits_new'] = 'สร้างสินค้าหมู่';
-$lang['item_kits_none_selected'] = "คุณยังไม่ใด้เลือกสินค้าหมู่";
-$lang['item_kits_info'] = 'ข้อมูลสินค้าหมู่';
-$lang['item_kits_successful_adding'] = 'เพิ่มสินค้าหมู่สำเร็จ';
-$lang['item_kits_successful_updating'] = 'ปรับปรุงสินค้าหมู่สำเร็จ';
-$lang['item_kits_error_adding_updating'] = 'เพิ่ม/ปรับปรุงสินค้าหมู่ล้มเหลว';
-$lang['item_kits_successful_deleted'] = 'ลบสำเร็จ';
-$lang['item_kits_confirm_delete'] = 'แน่ใจหรือไม่ที่จะลบสินค้าหมู่ที่ถูกเลือก?';
-$lang['item_kits_one_or_multiple'] = 'สินค้าหมู่';
-$lang['item_kits_cannot_be_deleted'] = 'ไม่สามารถลบได้';
-$lang['item_kits_add_item'] = 'เหิ่มสินคัา';
-$lang['item_kits_items'] = 'สินค้า';
-$lang['item_kits_item'] = 'สินค้า';
-$lang['item_kits_quantity'] = 'จำนวน';
-?>
-<?php
-$lang['item_kits_name'] = 'ชื่อสินค้าหมู่';
-$lang['item_kits_description'] = 'แนะนำสินค้าหมู่';
-$lang['item_kits_no_item_kits_to_display'] = 'ไม่มีสินค้าแสดง';
-$lang['item_kits_update'] = 'ปรับปรุงสินค้าหมู่';
-$lang['item_kits_new'] = 'สร้างสินค้าหมู่';
-$lang['item_kits_none_selected'] = "คุณยังไม่ใด้เลือกสินค้าหมู่";
-$lang['item_kits_info'] = 'ข้อมูลสินค้าหมู่';
-$lang['item_kits_successful_adding'] = 'เพิ่มสินค้าหมู่สำเร็จ';
-$lang['item_kits_successful_updating'] = 'ปรับปรุงสินค้าหมู่สำเร็จ';
-$lang['item_kits_error_adding_updating'] = 'เพิ่ม/ปรับปรุงสินค้าหมู่ล้มเหลว';
-$lang['item_kits_successful_deleted'] = 'ลบสำเร็จ';
-$lang['item_kits_confirm_delete'] = 'แน่ใจหรือไม่ที่จะลบสินค้าหมู่ที่ถูกเลือก?';
-$lang['item_kits_one_or_multiple'] = 'สินค้าหมู่';
-$lang['item_kits_cannot_be_deleted'] = 'ไม่สามารถลบได้';
-$lang['item_kits_add_item'] = 'เหิ่มสินคัา';
-$lang['item_kits_items'] = 'สินค้า';
-$lang['item_kits_item'] = 'สินค้า';
-$lang['item_kits_quantity'] = 'จำนวน';
-?>
+
+$lang["item_kits_add_item"] = "เหิ่มสินคัา";
+$lang["item_kits_cannot_be_deleted"] = "ไม่สามารถลบได้";
+$lang["item_kits_confirm_delete"] = "แน่ใจหรือไม่ที่จะลบสินค้าหมู่ที่ถูกเลือก?";
+$lang["item_kits_description"] = "แนะนำสินค้าหมู่";
+$lang["item_kits_error_adding_updating"] = "เพิ่ม/ปรับปรุงสินค้าหมู่ล้มเหลว";
+$lang["item_kits_info"] = "ข้อมูลสินค้าหมู่";
+$lang["item_kits_item"] = "สินค้า";
+$lang["item_kits_items"] = "สินค้า";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "ชื่อสินค้าหมู่";
+$lang["item_kits_new"] = "สร้างสินค้าหมู่";
+$lang["item_kits_no_item_kits_to_display"] = "ไม่มีสินค้าแสดง";
+$lang["item_kits_none_selected"] = "คุณยังไม่ใด้เลือกสินค้าหมู่";
+$lang["item_kits_one_or_multiple"] = "สินค้าหมู่";
+$lang["item_kits_quantity"] = "จำนวน";
+$lang["item_kits_successful_adding"] = "เพิ่มสินค้าหมู่สำเร็จ";
+$lang["item_kits_successful_deleted"] = "ลบสำเร็จ";
+$lang["item_kits_successful_updating"] = "ปรับปรุงสินค้าหมู่สำเร็จ";
+$lang["item_kits_update"] = "ปรับปรุงสินค้าหมู่";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/items_lang.php opensourcepos/application/language/th/items_lang.php
--- pos-prod/application/language/th/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/items_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,85 +1,88 @@
 <?php
-$lang['items_item_number']='โค๊ด';
-$lang['items_retrive_item_info']='รับข้อมูลสินค้า';
-$lang['items_description']='รายละเอียด';
-$lang['items_amazon']='Amazon';
-$lang['items_upc_database']='UPC ฐานข้อมูล';
-$lang['items_cannot_find_item']='ไม่พบข้อมูลของสินค้า';
-$lang['items_info_provided_by']='จัดเตรียมข้อมูลโดย';
-$lang['items_basic_information']='ข้อมูลสินค้ส';
-$lang['items_number_information']='หมายเลขสินค้า';
-$lang['items_new']='สินค้าใหม่';
-$lang['items_update']='ปรับแต่งสินค้า';
-$lang['items_item']='สินค้า';
-$lang['items_edit_multiple_items']='แก้ใขสินค้าต่างๆ';
-$lang['items_name']='ชื่อสินค้า';
-$lang['items_category']='หมวดหมู่';
-$lang['items_cost_price']='ราคาทุน';//GARRISON ADDED 4/21/2013
-$lang['items_unit_price']='ราคาขาย';//GARRISON ADDED 4/21/2013
-$lang['items_tax_1']='ภาษี 1';
-$lang['items_tax_2']='ภาษี 2';
-$lang['items_sales_tax_1'] = 'ถาษีขาย';
-$lang['items_sales_tax_2'] = 'ภาษีขาย 2';
-$lang['items_tax_percent']='ภาษี(%)';
-$lang['items_tax_percents']='ภาษี(%)';
-$lang['items_reorder_level']='ระดับการสั่งใหม่';
-$lang['items_quantity']='จำนวน';
-$lang['items_reorder_level']='ระดับการสั่งใหม่';
-$lang['items_no_items_to_display']='ไม่มีสินค้าแสดง';
-$lang['items_bulk_edit']='แก้ไขความจุ';
-$lang['items_confirm_delete']='แน่ใจหรือไม่ที่จะลบสินค้าที่ถูกเลือก?';
-$lang['items_none_selected']='กรุณาเลือสินค้าที่ต้องการแก้ไข';
-$lang['items_confirm_bulk_edit']='แน่ใจหรือไม่ที่จะแก้ใขสินค้าทั้งหมดที่คุณเลือก?';
-$lang['items_successful_bulk_edit']='ปรับแต่งสินค้าสำเร็จ';
-$lang['items_error_updating_multiple']='ปรับแต่งสินค้าล้มเหลว';
-$lang['items_edit_fields_you_want_to_update']='แก้ไขสินค้าทุกชนิดที่คุณเลือก';
-$lang['items_error_adding_updating'] = 'เพิ่ม/ปรับแต่ง สินค้าล้มเหลว';
-$lang['items_successful_adding']='เพิ่มสินค้าสำเร็จ';
-$lang['items_successful_updating']='ปรับแต่งสินค้าสำเร็จ';
-$lang['items_successful_deleted']='ลบสินค้าสำเร็จ';
-$lang['items_one_or_multiple']='สินค้า(s)';
-$lang['items_cannot_be_deleted']='ไมม่สามารถลบสินค้าที่เลือก, สินค้าที่เลือกถูกขายไปแล้ว.';
-$lang['items_name_required']='ชื่อสินค้าต้องกรอก';
-$lang['items_category_required']='หมวดหมู่สินค้าต้องกรอก';
-$lang['items_buy_price_required']='ราคาซื้อขายต้องกรอก';		//GARRISON UPDATED 6/3/2013
-$lang['items_unit_price_required']='ราคาต่อหน่วยต้องกรอก';		//GARRISON UPDATED 6/3/2013
-$lang['items_cost_price_required']='ราคาทุนต้องกรอก';	//GARRISON UPDATED 6/3/2013
-$lang['items_tax_percent_required']='เปอร์เซ็นต์ต้องกรอก';
-$lang['items_quantity_required']='จำนวนต้องกรอก';
-$lang['items_reorder_level_required']='ระดับการสั่งไหม่ต้องกรอก';
-$lang['items_unit_price_number']='ราคาต่อหน่วยต้องเป็นตัวเลข';
-$lang['items_cost_price_number']='ราคาทุนต้องเป็นตัวเลข';
-$lang['items_quantity_number']='จำนวนต้องเป็นตัวเลข';
-$lang['items_reorder_level_number']='ระดับการสั่งใหม่ต้องเป็นตัวเลข';
-$lang['items_none'] = 'ว่างเปล่า';
-$lang['items_supplier'] = 'ผู้ผลิต';
-$lang['items_generate_barcodes'] = 'สร้างบาร์โค๊ด';
-$lang['items_must_select_item_for_barcode'] = 'คุต้องเลือกสินค้าอย่างน้อยหนึ่งอย่างเพื่อจะสร้างบาร์โค๊ด';
-$lang['items_excel_import_failed'] = 'นำเข้าข้อมูล Excel ล้มเหลว';
-$lang['items_allow_alt_desciption'] = 'Allow Alt Description';
-$lang['items_is_serialized'] = 'สินค้ามีซีเรียวนัมเบอร์';
-$lang['items_low_inventory_items'] = 'สินค้าคงเหลือน้อย';
-$lang['items_serialized_items'] = 'รหัสสินค้า';
-$lang['items_no_description_items'] = 'สินค้าที่ไม่มีคำอธิบายหรือวิธีการใช้';
-$lang['items_search_custom_items'] = 'Search Custom Fields';//GARRISON ADDED
-$lang['items_inventory_comments']='คำอธิบาย';
-$lang['items_count']='แก้ไขจำนวนสินค้าคงคลัง';
-$lang['items_details_count']='รายละเอียดจำนวนสินค้าคงคลัง';
-$lang['items_add_minus']='เพิ่ม/ลบ จำนวนสินค้าคงคลัง';
-$lang['items_current_quantity']='ปริมาณสินค้าคงคลัง';
-$lang['items_quantity_required']='จำนวนต้องกรอก. กรุณาปิดเพื่อยกเลิก';
-$lang['items_do_nothing'] = 'ไม่ต้องทำอะไร';
-$lang['items_change_all_to_serialized'] = 'เปลี่ยนแปลงรหัสสินค้าทั้งหมด';
-$lang['items_change_all_to_unserialized'] = 'ลบรหัสสินค้าทั้งหมด';
-$lang['items_change_all_to_allow_alt_desc'] = ' Allow Alt Desc For All';
-$lang['items_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
-$lang['items_use_inventory_menu'] = 'ใช้สินค้าคงเหลือเมนู';
-$lang['items_manually_editing_of_quantity'] = 'แก้ไขจำนวน';
-$lang['items_inventory'] = 'สินค้าคงเหลือ';
-$lang['items_location'] = 'ที่ตั้ง';
-$lang['items_unit_quantity'] = 'จำนวนหน่วย';
-$lang['items_related_number'] = 'สินค้าที่เกี่ยวข้อง';
 
-$lang['items_stock_type_warehouse'] = 'สินค้าหลังร้าน';
-$lang['items_stock_type'] = 'ชนิดของสินค้า';
-?>
+$lang["items_add_minus"] = "เพิ่ม/ลบ จำนวนสินค้าคงคลัง";
+$lang["items_allow_alt_desciption"] = "Allow Alt Description";
+$lang["items_allow_alt_description"] = "แสดงข้อมูลเพิ่มเติม";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "ข้อมูลสินค้า";
+$lang["items_bulk_edit"] = "แก้ไขความจุ";
+$lang["items_buy_price_required"] = "ราคาซื้อขายต้องกรอก";
+$lang["items_cannot_be_deleted"] = "ไม่สามารถลบสินค้าที่เลือก, สินค้าที่เลือกถูกขายไปแล้ว.";
+$lang["items_cannot_find_item"] = "ไม่พบข้อมูลของสินค้า";
+$lang["items_category"] = "หมวดหมู่";
+$lang["items_category_required"] = "หมวดหมู่สินค้าต้องกรอก";
+$lang["items_change_all_to_allow_alt_desc"] = " Allow Alt Desc For All";
+$lang["items_change_all_to_not_allow_allow_desc"] = "Not Allow Alt Desc For All";
+$lang["items_change_all_to_serialized"] = "เปลี่ยนแปลงรหัสสินค้าทั้งหมด";
+$lang["items_change_all_to_unserialized"] = "ลบรหัสสินค้าทั้งหมด";
+$lang["items_confirm_bulk_edit"] = "แน่ใจหรือไม่ที่จะแก้ใขสินค้าทั้งหมดที่คุณเลือก?";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "โปรดยืนยันการลบสินค้าที่ถูกเลือก?";
+$lang["items_cost_price"] = "ราคาทุน";
+$lang["items_cost_price_number"] = "ราคาทุนต้องเป็นตัวเลข";
+$lang["items_cost_price_required"] = "ราคาทุนต้องกรอก";
+$lang["items_count"] = "แก้ไขจำนวนสินค้าคงคลัง";
+$lang["items_current_quantity"] = "ปริมาณสินค้าคงคลัง";
+$lang["items_description"] = "รายละเอียด";
+$lang["items_details_count"] = "รายละเอียดจำนวนสินค้าคงคลัง";
+$lang["items_do_nothing"] = "ไม่ต้องทำอะไร";
+$lang["items_edit_fields_you_want_to_update"] = "แก้ไขสินค้าทุกชนิดที่คุณเลือก";
+$lang["items_edit_multiple_items"] = "แก้ใขสินค้าต่างๆ";
+$lang["items_error_adding_updating"] = "เพิ่ม/ปรับแต่ง สินค้าล้มเหลว";
+$lang["items_error_updating_multiple"] = "ปรับแต่งสินค้าล้มเหลว";
+$lang["items_excel_import_failed"] = "นำเข้าข้อมูล Excel ล้มเหลว";
+$lang["items_generate_barcodes"] = "พิมพ์บาร์โค๊ด";
+$lang["items_image"] = "รูป";
+$lang["items_info_provided_by"] = "จัดเตรียมข้อมูลโดย";
+$lang["items_inventory"] = "สินค้าคงเหลือ";
+$lang["items_inventory_comments"] = "คำอธิบาย";
+$lang["items_is_deleted"] = "ถูกลบแล้ว";
+$lang["items_is_serialized"] = "สินค้ามีซีเรียลนัมเบอร์";
+$lang["items_item"] = "สินค้า";
+$lang["items_item_number"] = "โค๊ด";
+$lang["items_item_number_duplicate"] = "The item number is already present in the database";
+$lang["items_location"] = "ที่ตั้ง";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "สินค้าคงเหลือน้อย";
+$lang["items_manually_editing_of_quantity"] = "แก้ไขจำนวน";
+$lang["items_must_select_item_for_barcode"] = "คุต้องเลือกสินค้าอย่างน้อยหนึ่งอย่างเพื่อจะสร้างบาร์โค๊ด";
+$lang["items_name"] = "ชื่อสินค้า";
+$lang["items_name_required"] = "ชื่อสินค้าต้องกรอก";
+$lang["items_new"] = "เพิ่มรายการสินค้า";
+$lang["items_no_description_items"] = "สินค้าที่ไม่มีคำอธิบายหรือวิธีการใช้";
+$lang["items_no_items_to_display"] = "ไม่มีสินค้าแสดง";
+$lang["items_none"] = "ว่างเปล่า";
+$lang["items_none_selected"] = "กรุณาเลือสินค้าที่ต้องการแก้ไข";
+$lang["items_number_information"] = "หมายเลขสินค้า";
+$lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
+$lang["items_one_or_multiple"] = "สินค้า(s)";
+$lang["items_quantity"] = "จำนวน";
+$lang["items_quantity_number"] = "จำนวนต้องเป็นตัวเลข";
+$lang["items_quantity_required"] = "จำนวนต้องกรอก";
+$lang["items_receiving_quantity"] = "ยอดรับมา";
+$lang["items_reorder_level"] = "ระดับการสั่งใหม่";
+$lang["items_reorder_level_number"] = "ระดับการสั่งใหม่ต้องเป็นตัวเลข";
+$lang["items_reorder_level_required"] = "ระดับการสั่งไหม่ต้องกรอก";
+$lang["items_retrive_item_info"] = "รับข้อมูลสินค้า";
+$lang["items_sales_tax_1"] = "ถาษีขาย";
+$lang["items_sales_tax_2"] = "ภาษีขาย 2";
+$lang["items_search_custom_items"] = "ค้นหาในฟิลด์เสริม";
+$lang["items_serialized_items"] = "รหัสสินค้า";
+$lang["items_stock_location"] = "ที่เก็บ";
+$lang["items_successful_adding"] = "เพิ่มสินค้าสำเร็จ";
+$lang["items_successful_bulk_edit"] = "ปรับแต่งสินค้าสำเร็จ";
+$lang["items_successful_deleted"] = "ลบสินค้าสำเร็จ";
+$lang["items_successful_updating"] = "ปรับแต่งสินค้าสำเร็จ";
+$lang["items_supplier"] = "ผู้ผลิต";
+$lang["items_tax_1"] = "ภาษี 1";
+$lang["items_tax_2"] = "ภาษี 2";
+$lang["items_tax_percent"] = "ภาษี(%)";
+$lang["items_tax_percent_required"] = "เปอร์เซ็นต์ต้องกรอก";
+$lang["items_tax_percents"] = "ภาษี(%)";
+$lang["items_unit_price"] = "ราคาขาย";
+$lang["items_unit_price_number"] = "ราคาต่อหน่วยต้องเป็นตัวเลข";
+$lang["items_unit_price_required"] = "ราคาต่อหน่วยต้องกรอก";
+$lang["items_upc_database"] = "UPC ฐานข้อมูล";
+$lang["items_update"] = "ปรับแต่งสินค้า";
+$lang["items_use_inventory_menu"] = "ใช้เมนูสินค้าคงเหลือ";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/login_lang.php opensourcepos/application/language/th/login_lang.php
--- pos-prod/application/language/th/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/login_lang.php	2016-05-23 15:32:31.907839365 -0700
@@ -1,16 +1,8 @@
 <?php
-$lang['login_login']='ลงชื่อเข้าใช้';
-$lang['login_username']='ชื่อผู้ใช้';
-$lang['login_password']='รหัสผ่าน';
-$lang['login_go']='GOOOO';
-$lang['login_invalid_username_and_password']='ชื่อผู้ใช้/รหัส ไม่ถูกต้อง';
-$lang['login_welcome_message']='ยินดีต้องรับสู่ระบบ Open Source Point of Sale. เพื่อที่จะไปต่อ, กรุณาเข้าสู่ระบบโดยใส่ ชื่อผู้ใช้ และ รหัสผ่านที่อยู่ด้านล่าง.';
-?>
-<?php
-$lang['login_login']='ลงชื่อเข้าใช้';
-$lang['login_username']='ชื่อผู้ใช้';
-$lang['login_password']='รหัสผ่าน';
-$lang['login_go']='GOOOO';
-$lang['login_invalid_username_and_password']='ชื่อผู้ใช้/รหัส ไม่ถูกต้อง';
-$lang['login_welcome_message']='ยินดีต้องรับสู่ระบบ Open Source Point of Sale. เพื่อที่จะไปต่อ, กรุณาเข้าสู่ระบบโดยใส่ ชื่อผู้ใช้ และ รหัสผ่านที่อยู่ด้านล่าง.';
-?>
+
+$lang["login_go"] = "GOOOO";
+$lang["login_invalid_username_and_password"] = "ชื่อผู้ใช้/รหัส ไม่ถูกต้อง";
+$lang["login_login"] = "ลงชื่อเข้าใช้";
+$lang["login_password"] = "รหัสผ่าน";
+$lang["login_username"] = "ชื่อผู้ใช้";
+$lang["login_welcome_message"] = "ยินดีต้องรับสู่ระบบ Open Source Point of Sale. เพื่อที่จะไปต่อ, กรุณาเข้าสู่ระบบโดยใส่ ชื่อผู้ใช้ และ รหัสผ่านที่อยู่ด้านล่าง.";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/module_lang.php opensourcepos/application/language/th/module_lang.php
--- pos-prod/application/language/th/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/module_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,68 +1,23 @@
 <?php
-$lang['module_home']='Home';
 
-$lang['module_customers']='ลูกค้า';
-$lang['module_customers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ลูกค้า';
-
-$lang['module_suppliers']='ผู้ผลิต';
-$lang['module_suppliers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ผู้ผลิต';
-
-$lang['module_employees']='พนักงาน';
-$lang['module_employees_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา พนักงาน';
-
-$lang['module_sales']='งานขาย';
-$lang['module_sales_desc']='งานขาย และ รับคืน';
-
-$lang['module_reports']='รายงาน';
-$lang['module_reports_desc']='สร้างและตรวจสอบรายงาน';
-
-$lang['module_items']='สินค้า';
-$lang['module_items_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้า';
-
-$lang['module_config']='ปรับแต่งร้านค้า';
-$lang['module_config_desc']='ปรับแต่งร้านค้า';
-
-$lang['module_receivings']='สินค้าเข้า';
-$lang['module_receivings_desc']='สินค้าเข้า';
-
-$lang['module_giftcards']='กิ๊บการ์ด';
-$lang['module_giftcards_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา กิ๊บการ์ด';
-
-$lang['module_item_kits']='สินค้าหมู่';
-$lang['module_item_kits_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้าหมู่';
-
-?>
-<?php
-$lang['module_home']='Home';
-
-$lang['module_customers']='ลูกค้า';
-$lang['module_customers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ลูกค้า';
-
-$lang['module_suppliers']='ผู้ผลิต';
-$lang['module_suppliers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ผู้ผลิต';
-
-$lang['module_employees']='พนักงาน';
-$lang['module_employees_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา พนักงาน';
-
-$lang['module_sales']='งานขาย';
-$lang['module_sales_desc']='งานขาย และ รับคืน';
-
-$lang['module_reports']='รายงาน';
-$lang['module_reports_desc']='สร้างและตรวจสอบรายงาน';
-
-$lang['module_items']='สินค้า';
-$lang['module_items_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้า';
-
-$lang['module_config']='ปรับแต่งร้านค้า';
-$lang['module_config_desc']='ปรับแต่งร้านค้า';
-
-$lang['module_receivings']='สินค้าเข้า';
-$lang['module_receivings_desc']='สินค้าเข้า';
-
-$lang['module_giftcards']='กิ๊บการ์ด';
-$lang['module_giftcards_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา กิ๊บการ์ด';
-
-$lang['module_item_kits']='สินค้าหมู่';
-$lang['module_item_kits_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้าหมู่';
-
-?>
+$lang["module_config"] = "ตั้งค่า";
+$lang["module_config_desc"] = "ปรับแต่งร้านค้า";
+$lang["module_customers"] = "ลูกค้า";
+$lang["module_customers_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา ลูกค้า";
+$lang["module_employees"] = "พนักงาน";
+$lang["module_employees_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา พนักงาน";
+$lang["module_giftcards"] = "บัตรกำนัล";
+$lang["module_giftcards_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา บัตรกำนัล";
+$lang["module_home"] = "Home";
+$lang["module_item_kits"] = "สินค้าหมู่";
+$lang["module_item_kits_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้าหมู่";
+$lang["module_items"] = "สินค้า";
+$lang["module_items_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้า";
+$lang["module_receivings"] = "สินค้าเข้า";
+$lang["module_receivings_desc"] = "สินค้าเข้า";
+$lang["module_reports"] = "รายงาน";
+$lang["module_reports_desc"] = "สร้างและตรวจสอบรายงาน";
+$lang["module_sales"] = "งานขาย";
+$lang["module_sales_desc"] = "งานขาย และ รับคืน";
+$lang["module_suppliers"] = "ผู้ผลิต";
+$lang["module_suppliers_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา ผู้ผลิต";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/receivings_lang.php opensourcepos/application/language/th/receivings_lang.php
--- pos-prod/application/language/th/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/receivings_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,72 +1,51 @@
 <?php
-$lang['recvs_register']='รับสินค้า';
-$lang['recvs_mode']='วิธีการรับสินค้า';
-$lang['recvs_receiving']='รับ';
-$lang['recvs_return']='คืน';
-$lang['recvs_requisition']='เบิกสินค้า';
-$lang['recvs_total']='รวม';
-$lang['recvs_cost']='ราคา';
-$lang['recvs_quantity']='จำนวน.';
-$lang['recvs_discount']='ส่วนลด %';
-$lang['recvs_edit']='แก้ไข';
-$lang['recvs_new_supplier'] = 'ผู้ผลิตรายใหม่';
-$lang['recvs_supplier'] = 'ผู้ผลิต';
-$lang['recvs_select_supplier']='เลือกผู้ผลิต (ทางเลือก)';
-$lang['recvs_start_typing_supplier_name']='เริ่มต้นพิมพ์ชื่อผู้ผลิต...';
-$lang['recvs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
-$lang['recvs_error_editing_item']='แก้ไขสินค้าล้มเหลว';
-$lang['recvs_receipt']='บิลสินค้าเข้า';
-$lang['recvs_complete_receiving']='เสร็จสิ้น';
-$lang['recvs_confirm_finish_receiving'] = 'แน่ใจหรือไม่ที่จะส่งรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
-$lang['recvs_confirm_cancel_receiving'] = 'แน่ใจหรือไม่ที่จะล้างรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
-$lang['recvs_find_or_scan_item']='ค้นหาสินค้า';
-$lang['recvs_find_or_scan_item_or_receipt']='ค้นหาสินค้าหรือบิล';
-$lang['recvs_id']='รายการสินค้าเข้า ID';
-$lang['recvs_item_name'] = 'ชื่อสินคัา';
-$lang['receivings_transaction_failed'] = 'ดำเนินการรับสินค้าล้มเหลว';
 
-$lang['reqs_quantity'] ='จำนวน';
-$lang['reqs_related_item']='สินค้าที่เกี่ยวข้อง';
-$lang['reqs_unit_quantity']='จำนวนหน่วย';
-$lang['reqs_unit_quantity_total']='จำนวนรวม';
-$lang['reqs_related_item_quantity']='จำนวนสินค้าที่เกี่ยวข้อง';
-$lang['reqs_receipt']='บิลเบิกสินค้า';
-$lang['reqs_transaction_failed'] = 'เบิกสินค้าล้มเหลว';
-$lang['reqs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
-?>
-<?php
-$lang['recvs_register']='รับสินค้า';
-$lang['recvs_mode']='วิธีการรับสินค้า';
-$lang['recvs_receiving']='รับ';
-$lang['recvs_return']='คืน';
-$lang['recvs_requisition']='เบิกสินค้า';
-$lang['recvs_total']='รวม';
-$lang['recvs_cost']='ราคา';
-$lang['recvs_quantity']='จำนวน.';
-$lang['recvs_discount']='ส่วนลด %';
-$lang['recvs_edit']='แก้ไข';
-$lang['recvs_new_supplier'] = 'ผู้ผลิตรายใหม่';
-$lang['recvs_supplier'] = 'ผู้ผลิต';
-$lang['recvs_select_supplier']='เลือกผู้ผลิต (ทางเลือก)';
-$lang['recvs_start_typing_supplier_name']='เริ่มต้นพิมพ์ชื่อผู้ผลิต...';
-$lang['recvs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
-$lang['recvs_error_editing_item']='แก้ไขสินค้าล้มเหลว';
-$lang['recvs_receipt']='บิลสินค้าเข้า';
-$lang['recvs_complete_receiving']='เสร็จสิ้น';
-$lang['recvs_confirm_finish_receiving'] = 'แน่ใจหรือไม่ที่จะส่งรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
-$lang['recvs_confirm_cancel_receiving'] = 'แน่ใจหรือไม่ที่จะล้างรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
-$lang['recvs_find_or_scan_item']='ค้นหาสินค้า';
-$lang['recvs_find_or_scan_item_or_receipt']='ค้นหาสินค้าหรือบิล';
-$lang['recvs_id']='รายการสินค้าเข้า ID';
-$lang['recvs_item_name'] = 'ชื่อสินคัา';
-$lang['receivings_transaction_failed'] = 'ดำเนินการรับสินค้าล้มเหลว';
-
-$lang['reqs_quantity'] ='จำนวน';
-$lang['reqs_related_item']='สินค้าที่เกี่ยวข้อง';
-$lang['reqs_unit_quantity']='จำนวนหน่วย';
-$lang['reqs_unit_quantity_total']='จำนวนรวม';
-$lang['reqs_related_item_quantity']='จำนวนสินค้าที่เกี่ยวข้อง';
-$lang['reqs_receipt']='บิลเบิกสินค้า';
-$lang['reqs_transaction_failed'] = 'เบิกสินค้าล้มเหลว';
-$lang['reqs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
-?>
+$lang["receivings_transaction_failed"] = "";
+$lang["recvs_basic_information"] = "";
+$lang["recvs_cancel_receiving"] = "";
+$lang["recvs_cannot_be_deleted"] = "";
+$lang["recvs_comments"] = "";
+$lang["recvs_complete_receiving"] = "";
+$lang["recvs_confirm_cancel_receiving"] = "";
+$lang["recvs_confirm_finish_receiving"] = "";
+$lang["recvs_cost"] = "";
+$lang["recvs_date"] = "";
+$lang["recvs_date_required"] = "";
+$lang["recvs_date_type"] = "";
+$lang["recvs_delete_confirmation"] = "";
+$lang["recvs_delete_entire_sale"] = "";
+$lang["recvs_discount"] = "ส่วนลด %";
+$lang["recvs_edit"] = "แก้ไข";
+$lang["recvs_edit_sale"] = "Edit Receiving";
+$lang["recvs_employee"] = "Employee";
+$lang["recvs_error_editing_item"] = "แก้ไขสินค้าล้มเหลว";
+$lang["recvs_error_requisition"] = "";
+$lang["recvs_find_or_scan_item"] = "ค้นหาสินค้า";
+$lang["recvs_find_or_scan_item_or_receipt"] = "ค้นหาสินค้าหรือบิล";
+$lang["recvs_id"] = "รายการสินค้าเข้า ID";
+$lang["recvs_invoice_enable"] = "Create Invoice";
+$lang["recvs_invoice_number"] = "";
+$lang["recvs_invoice_number_duplicate"] = "";
+$lang["recvs_item_name"] = "ชื่อสินคัา";
+$lang["recvs_mode"] = "ประเภทธุรกรรม";
+$lang["recvs_new_supplier"] = "ผู้ผลิตรายใหม่";
+$lang["recvs_one_or_multiple"] = "";
+$lang["recvs_print_after_sale"] = "พิมพ์บิลหลังการขาย";
+$lang["recvs_quantity"] = "จำนวน.";
+$lang["recvs_receipt"] = "บิลสินค้าเข้า";
+$lang["recvs_receipt_number"] = "";
+$lang["recvs_receiving"] = "รับสินค้า";
+$lang["recvs_register"] = "รับสินค้า";
+$lang["recvs_requisition"] = "เบิกสินค้า";
+$lang["recvs_return"] = "คืนสินค้า";
+$lang["recvs_select_supplier"] = "เลือกผู้ผลิต (ทางเลือก)";
+$lang["recvs_start_typing_supplier_name"] = "เริ่มต้นพิมพ์ชื่อผู้ผลิต...";
+$lang["recvs_stock_destination"] = "Stock destination";
+$lang["recvs_stock_locaiton"] = "Stock location";
+$lang["recvs_stock_source"] = "Stock source";
+$lang["recvs_successfully_deleted"] = "You have successfully deleted";
+$lang["recvs_successfully_updated"] = "Receiving successfully updated";
+$lang["recvs_supplier"] = "ผู้ผลิต";
+$lang["recvs_total"] = "รวม";
+$lang["recvs_unable_to_add_item"] = "ไม่สามารถเพิ่มสินค้าได้";
+$lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/reports_lang.php opensourcepos/application/language/th/reports_lang.php
--- pos-prod/application/language/th/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/reports_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,200 +1,108 @@
 <?php
-$lang['reports_reports'] = 'รายงาน';
-$lang['reports_report'] = 'รายงาน';
-$lang['reports_welcome_message'] = 'ยินดีต้อนรับเข้าสู่รายงาน. โปรดเลือกชนิดของรายงาน.';
-$lang['reports_sales_summary_report'] = 'รายงานสรุปการขาย';
-$lang['reports_categories_summary_report'] = 'รายงานสรุปหมวดหมู่';
-$lang['reports_customers_summary_report'] = 'รายงานสรุปลูกค้า';
-$lang['reports_suppliers_summary_report'] = 'รายงานสรุปผู้ผลิต';
-$lang['reports_items_summary_report'] = 'รายงานสรุปสินค้า';
-$lang['reports_employees_summary_report'] = 'รายงานสรุปพนักงาน';
-$lang['reports_taxes_summary_report'] = 'รายงานสรุปภาษี';
-$lang['reports_date'] = 'วันที่';
-$lang['reports_name'] = 'ชื่อ';
-$lang['reports_quantity_purchased'] = 'จำนวนการช์้อ';
-$lang['reports_sale_id'] = 'IDขาย';
-$lang['reports_items_purchased'] = 'สินค้าที่ถูกซื้อ';
-$lang['reports_sold_by'] = 'ขายโดย';
-$lang['reports_sold_to'] = 'ขายไปที่';
-$lang['reports_category'] = 'หมวดหมู่';
-$lang['reports_customer'] = 'ลูกค้า';
-$lang['reports_employee'] = 'พนักงาน';
-$lang['reports_item'] = 'สินค้า';
-$lang['reports_items'] = 'สินค้า';
-$lang['reports_supplier'] = 'ผู้ผลิต';
-$lang['reports_employees'] = 'พนักงาน';
-$lang['reports_subtotal'] = 'ยอดรวมรอง';
-$lang['reports_total'] = 'ยอดรวม';
-$lang['reports_tax'] = 'ภาษี';
-$lang['reports_profit'] = 'กำไร';
-$lang['reports_report_input'] = 'ข้อมูลรายงาน';
-$lang['reports_type'] = 'ชนิด';
-$lang['reports_date_range'] = 'ระหว่างวันที่';
-$lang['reports_today'] = 'วันนี้';
-$lang['reports_yesterday'] = 'เมื่อวานนี้';
-$lang['reports_last_7'] = '7 วันสุดท้าย';
-$lang['reports_this_month'] = 'เดือนนี้';
-$lang['reports_last_month'] = 'เดือนที่แล้ว';
-$lang['reports_this_year'] = 'ปีนี้';
-$lang['reports_last_year'] = 'ปีที่แล้ว';
-$lang['reports_all_time'] = 'เวลาทั้งหมด';
-$lang['reports_detailed_sales_report'] = 'รายงายงานขาย';
-$lang['reports_comments'] = 'หมายเหตุ';
-$lang['reports_discount'] = 'ส่วนลด';
-$lang['reports_payment_type'] = 'ชนิดของการจ่าย';
-$lang['reports_sales'] = 'ขาย';
-$lang['reports_categories'] = 'หมวดหมู่';
-$lang['reports_customers'] = 'ลูกค้า';
-$lang['reports_suppliers'] = 'ผู้ผลิต';
-$lang['reports_items'] = 'สินค้า';
-$lang['reports_employees'] = 'พนักงาน';
-$lang['reports_taxes'] = 'ภาษี';
-$lang['reports_customer'] = 'ลูกค้า';
-$lang['reports_employee'] = 'พนักงาน';
-$lang['reports_tax_percent'] = 'เปอร์เซ็นภาษี';
-$lang['reports_quantity_purchased'] = 'จำนวนซื้อ';
-$lang['reports_serial_number'] = 'Serial #';
-$lang['reports_description'] = 'คำอธิบาย';
-$lang['reports_date'] = 'วันที่';
-$lang['reports_sales_amount'] = 'จำนวนขาย';
-$lang['reports_revenue'] = 'รายรับ';
-$lang['reports_discounts'] = 'ส่วนลด';
-$lang['reports_discounts_summary_report'] = 'รายงานสรุปส่วนลด';
-$lang['reports_discount_percent'] = 'เปอร์เซ็นต์ส่วนลด';
-$lang['reports_count'] = 'นับ';
-$lang['reports_summary_reports'] = 'สรุปรายงาน';
-$lang['reports_graphical_reports'] = 'รายงายแบบกราฟ';
-$lang['reports_detailed_reports'] = 'รายละเอียดรายงาน';
-$lang['reports_inventory_reports'] = 'รายงานสินค้าคงเหลือ';
-$lang['reports_low_inventory'] = 'สินค้าเหลือน้อย';
-$lang['reports_inventory_summary'] = ' รายงานสินค้าคงเหลือ';
-$lang['reports_item_number'] = 'เลขสินค้า';
-$lang['reports_reorder_level'] = 'ระดับการสั่งใหม่';
-$lang['reports_low_inventory_report'] = 'รายงานสินค้าที่เหลือน้อย';
-$lang['reports_item_name'] = 'ชื่อสินค้า';
-$lang['reports_inventory_summary_report'] = 'รายงานสรุปสินค้าคงเหลือ';
-$lang['reports_payment_type'] = 'ชนิดการจ่าย';
-$lang['reports_payments_summary_report'] = 'รายงานสรุปการจ่าย';
-$lang['reports_payments'] = 'รายจ่าย';
-$lang['reports_receivings'] = 'รับสินค้า';
-$lang['reports_received_by'] = 'รับโดย';
-$lang['reports_supplied_by'] = 'ผบิตโดย';
-$lang['reports_items_received'] = 'สินค้าเข้า';
-$lang['reports_detailed_receivings_report'] = 'รายงานรายละเอียกการรับของ';
-$lang['reports_sale_type'] = 'ชนิดของการขาย';
-$lang['reports_all'] = 'ทั้งหมด';
-$lang['reports_returns'] = 'คืน';
 
-$lang['reports_receiving_type'] = 'รูปแบบการรับสินค้า';
-$lang['reports_requisition'] = 'เบิกสินค้า';
-$lang['reports_receiving_id'] = 'IDรับสินค้า';
-$lang['reports_requisition_id'] = 'IDเบิกสินค้า';
-$lang['reports_requisition_by'] = 'ผู้เบิกสินค้า';
-$lang['reports_requisition_item'] = 'ชื่อสินค้า';
-$lang['reports_requisition_item_quantity'] = 'จำนวนเบิก';
-$lang['reports_requisition_related_item'] = 'สินค้าย่อย';
-$lang['reports_requisition_related_item_unit_quantity'] = 'จำนวนสินค้าย่ิอย';
-$lang['reports_requisition_related_item_total_quantity'] = 'จำนวนรวมสินค้าย่อย';
-$lang['reports_detailed_requisition_report'] = 'รายงานรายละเอียดการเบิกของ';
-
-?>
-<?php
-$lang['reports_reports'] = 'รายงาน';
-$lang['reports_report'] = 'รายงาน';
-$lang['reports_welcome_message'] = 'ยินดีต้อนรับเข้าสู่รายงาน. โปรดเลือกชนิดของรายงาน.';
-$lang['reports_sales_summary_report'] = 'รายงานสรุปการขาย';
-$lang['reports_categories_summary_report'] = 'รายงานสรุปหมวดหมู่';
-$lang['reports_customers_summary_report'] = 'รายงานสรุปลูกค้า';
-$lang['reports_suppliers_summary_report'] = 'รายงานสรุปผู้ผลิต';
-$lang['reports_items_summary_report'] = 'รายงานสรุปสินค้า';
-$lang['reports_employees_summary_report'] = 'รายงานสรุปพนักงาน';
-$lang['reports_taxes_summary_report'] = 'รายงานสรุปภาษี';
-$lang['reports_date'] = 'วันที่';
-$lang['reports_name'] = 'ชื่อ';
-$lang['reports_quantity_purchased'] = 'จำนวนการช์้อ';
-$lang['reports_sale_id'] = 'IDขาย';
-$lang['reports_items_purchased'] = 'สินค้าที่ถูกซื้อ';
-$lang['reports_sold_by'] = 'ขายโดย';
-$lang['reports_sold_to'] = 'ขายไปที่';
-$lang['reports_category'] = 'หมวดหมู่';
-$lang['reports_customer'] = 'ลูกค้า';
-$lang['reports_employee'] = 'พนักงาน';
-$lang['reports_item'] = 'สินค้า';
-$lang['reports_items'] = 'สินค้า';
-$lang['reports_supplier'] = 'ผู้ผลิต';
-$lang['reports_employees'] = 'พนักงาน';
-$lang['reports_subtotal'] = 'ยอดรวมรอง';
-$lang['reports_total'] = 'ยอดรวม';
-$lang['reports_tax'] = 'ภาษี';
-$lang['reports_profit'] = 'กำไร';
-$lang['reports_report_input'] = 'ข้อมูลรายงาน';
-$lang['reports_type'] = 'ชนิด';
-$lang['reports_date_range'] = 'ระหว่างวันที่';
-$lang['reports_today'] = 'วันนี้';
-$lang['reports_yesterday'] = 'เมื่อวานนี้';
-$lang['reports_last_7'] = '7 วันสุดท้าย';
-$lang['reports_this_month'] = 'เดือนนี้';
-$lang['reports_last_month'] = 'เดือนที่แล้ว';
-$lang['reports_this_year'] = 'ปีนี้';
-$lang['reports_last_year'] = 'ปีที่แล้ว';
-$lang['reports_all_time'] = 'เวลาทั้งหมด';
-$lang['reports_detailed_sales_report'] = 'รายงายงานขาย';
-$lang['reports_comments'] = 'หมายเหตุ';
-$lang['reports_discount'] = 'ส่วนลด';
-$lang['reports_payment_type'] = 'ชนิดของการจ่าย';
-$lang['reports_sales'] = 'ขาย';
-$lang['reports_categories'] = 'หมวดหมู่';
-$lang['reports_customers'] = 'ลูกค้า';
-$lang['reports_suppliers'] = 'ผู้ผลิต';
-$lang['reports_items'] = 'สินค้า';
-$lang['reports_employees'] = 'พนักงาน';
-$lang['reports_taxes'] = 'ภาษี';
-$lang['reports_customer'] = 'ลูกค้า';
-$lang['reports_employee'] = 'พนักงาน';
-$lang['reports_tax_percent'] = 'เปอร์เซ็นภาษี';
-$lang['reports_quantity_purchased'] = 'จำนวนซื้อ';
-$lang['reports_serial_number'] = 'Serial #';
-$lang['reports_description'] = 'คำอธิบาย';
-$lang['reports_date'] = 'วันที่';
-$lang['reports_sales_amount'] = 'จำนวนขาย';
-$lang['reports_revenue'] = 'รายรับ';
-$lang['reports_discounts'] = 'ส่วนลด';
-$lang['reports_discounts_summary_report'] = 'รายงานสรุปส่วนลด';
-$lang['reports_discount_percent'] = 'เปอร์เซ็นต์ส่วนลด';
-$lang['reports_count'] = 'นับ';
-$lang['reports_summary_reports'] = 'สรุปรายงาน';
-$lang['reports_graphical_reports'] = 'รายงายแบบกราฟ';
-$lang['reports_detailed_reports'] = 'รายละเอียดรายงาน';
-$lang['reports_inventory_reports'] = 'รายงานสินค้าคงเหลือ';
-$lang['reports_low_inventory'] = 'สินค้าเหลือน้อย';
-$lang['reports_inventory_summary'] = ' รายงานสินค้าคงเหลือ';
-$lang['reports_item_number'] = 'เลขสินค้า';
-$lang['reports_reorder_level'] = 'ระดับการสั่งใหม่';
-$lang['reports_low_inventory_report'] = 'รายงานสินค้าที่เหลือน้อย';
-$lang['reports_item_name'] = 'ชื่อสินค้า';
-$lang['reports_inventory_summary_report'] = 'รายงานสรุปสินค้าคงเหลือ';
-$lang['reports_payment_type'] = 'ชนิดการจ่าย';
-$lang['reports_payments_summary_report'] = 'รายงานสรุปการจ่าย';
-$lang['reports_payments'] = 'รายจ่าย';
-$lang['reports_receivings'] = 'รับสินค้า';
-$lang['reports_received_by'] = 'รับโดย';
-$lang['reports_supplied_by'] = 'ผบิตโดย';
-$lang['reports_items_received'] = 'สินค้าเข้า';
-$lang['reports_detailed_receivings_report'] = 'รายงานรายละเอียกการรับของ';
-$lang['reports_sale_type'] = 'ชนิดของการขาย';
-$lang['reports_all'] = 'ทั้งหมด';
-$lang['reports_returns'] = 'คืน';
-
-$lang['reports_receiving_type'] = 'รูปแบบการรับสินค้า';
-$lang['reports_requisition'] = 'เบิกสินค้า';
-$lang['reports_receiving_id'] = 'IDรับสินค้า';
-$lang['reports_requisition_id'] = 'IDเบิกสินค้า';
-$lang['reports_requisition_by'] = 'ผู้เบิกสินค้า';
-$lang['reports_requisition_item'] = 'ชื่อสินค้า';
-$lang['reports_requisition_item_quantity'] = 'จำนวนเบิก';
-$lang['reports_requisition_related_item'] = 'สินค้าย่อย';
-$lang['reports_requisition_related_item_unit_quantity'] = 'จำนวนสินค้าย่ิอย';
-$lang['reports_requisition_related_item_total_quantity'] = 'จำนวนรวมสินค้าย่อย';
-$lang['reports_detailed_requisition_report'] = 'รายงานรายละเอียดการเบิกของ';
-
-?>
+$lang["reports_all"] = "ทั้งหมด";
+$lang["reports_all_time"] = "เวลาทั้งหมด";
+$lang["reports_categories"] = "หมวดหมู่";
+$lang["reports_categories_summary_report"] = "รายงานสรุปหมวดหมู่";
+$lang["reports_category"] = "หมวดหมู่";
+$lang["reports_comments"] = "หมายเหตุ";
+$lang["reports_count"] = "นับ";
+$lang["reports_customer"] = "ลูกค้า";
+$lang["reports_customers"] = "ลูกค้า";
+$lang["reports_customers_summary_report"] = "รายงานสรุปลูกค้า";
+$lang["reports_date"] = "วันที่";
+$lang["reports_date_range"] = "ระหว่างวันที่";
+$lang["reports_description"] = "คำอธิบาย";
+$lang["reports_detailed_receivings_report"] = "รายงานรายละเอียกการรับของ";
+$lang["reports_detailed_reports"] = "รายละเอียดรายงาน";
+$lang["reports_detailed_requisition_report"] = "รายงานรายละเอียดการเบิกของ";
+$lang["reports_detailed_sales_report"] = "รายงายงานขาย";
+$lang["reports_discount"] = "ส่วนลด";
+$lang["reports_discount_percent"] = "เปอร์เซ็นต์ส่วนลด";
+$lang["reports_discounts"] = "ส่วนลด";
+$lang["reports_discounts_summary_report"] = "รายงานสรุปส่วนลด";
+$lang["reports_employee"] = "พนักงาน";
+$lang["reports_employees"] = "พนักงาน";
+$lang["reports_employees_summary_report"] = "รายงานสรุปพนักงาน";
+$lang["reports_graphical_reports"] = "รายงายแบบกราฟ";
+$lang["reports_inventory"] = "";
+$lang["reports_inventory_low"] = "สินค้าเหลือน้อย";
+$lang["reports_inventory_low_report"] = "รายงานสินค้าที่เหลือน้อย";
+$lang["reports_inventory_reports"] = "รายงานสินค้าคงเหลือ";
+$lang["reports_inventory_summary"] = " รายงานสินค้าคงเหลือ";
+$lang["reports_inventory_summary_report"] = "รายงานสรุปสินค้าคงเหลือ";
+$lang["reports_item"] = "สินค้า";
+$lang["reports_item_name"] = "ชื่อสินค้า";
+$lang["reports_item_number"] = "เลขสินค้า";
+$lang["reports_items"] = "สินค้า";
+$lang["reports_items_purchased"] = "สินค้าที่ถูกซื้อ";
+$lang["reports_items_received"] = "สินค้าเข้า";
+$lang["reports_items_summary_report"] = "รายงานสรุปสินค้า";
+$lang["reports_last_7"] = "7 วันสุดท้าย";
+$lang["reports_last_month"] = "เดือนที่แล้ว";
+$lang["reports_last_year"] = "ปีที่แล้ว";
+$lang["reports_low_inventory"] = "";
+$lang["reports_low_inventory_report"] = "";
+$lang["reports_name"] = "ชื่อ";
+$lang["reports_payment_type"] = "ชนิดของการจ่าย";
+$lang["reports_payments"] = "รายจ่าย";
+$lang["reports_payments_summary_report"] = "รายงานสรุปการจ่าย";
+$lang["reports_profit"] = "กำไร";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "จำนวนการช์้อ";
+$lang["reports_received_by"] = "รับโดย";
+$lang["reports_receiving_id"] = "IDรับสินค้า";
+$lang["reports_receiving_type"] = "รูปแบบการรับสินค้า";
+$lang["reports_receivings"] = "รับสินค้า";
+$lang["reports_reorder_level"] = "ระดับการสั่งใหม่";
+$lang["reports_report"] = "รายงาน";
+$lang["reports_report_input"] = "ข้อมูลรายงาน";
+$lang["reports_reports"] = "รายงาน";
+$lang["reports_requisition"] = "เบิกสินค้า";
+$lang["reports_requisition_by"] = "ผู้เบิกสินค้า";
+$lang["reports_requisition_id"] = "IDเบิกสินค้า";
+$lang["reports_requisition_item"] = "ชื่อสินค้า";
+$lang["reports_requisition_item_quantity"] = "จำนวนเบิก";
+$lang["reports_requisition_related_item"] = "สินค้าย่อย";
+$lang["reports_requisition_related_item_total_quantity"] = "จำนวนรวมสินค้าย่อย";
+$lang["reports_requisition_related_item_unit_quantity"] = "จำนวนสินค้าย่ิอย";
+$lang["reports_requisitions"] = "";
+$lang["reports_returns"] = "คืน";
+$lang["reports_revenue"] = "รายรับ";
+$lang["reports_sale_id"] = "IDขาย";
+$lang["reports_sale_type"] = "ชนิดของการขาย";
+$lang["reports_sales"] = "ขาย";
+$lang["reports_sales_amount"] = "จำนวนขาย";
+$lang["reports_sales_summary_report"] = "รายงานสรุปการขาย";
+$lang["reports_serial_number"] = "Serial #";
+$lang["reports_sold_by"] = "ขายโดย";
+$lang["reports_sold_to"] = "ขายไปที่";
+$lang["reports_stock_location"] = "";
+$lang["reports_subtotal"] = "ยอดรวมรอง";
+$lang["reports_summary_reports"] = "สรุปรายงาน";
+$lang["reports_supplied_by"] = "ผบิตโดย";
+$lang["reports_supplier"] = "ผู้ผลิต";
+$lang["reports_suppliers"] = "ผู้ผลิต";
+$lang["reports_suppliers_summary_report"] = "รายงานสรุปผู้ผลิต";
+$lang["reports_tax"] = "ภาษี";
+$lang["reports_tax_percent"] = "เปอร์เซ็นภาษี";
+$lang["reports_taxes"] = "ภาษี";
+$lang["reports_taxes_summary_report"] = "รายงานสรุปภาษี";
+$lang["reports_this_month"] = "เดือนนี้";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "ปีนี้";
+$lang["reports_today"] = "วันนี้";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "ยอดรวม";
+$lang["reports_type"] = "ชนิด";
+$lang["reports_welcome_message"] = "ยินดีต้อนรับเข้าสู่รายงาน. โปรดเลือกชนิดของรายงาน.";
+$lang["reports_yesterday"] = "เมื่อวานนี้";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "ราคาทุน";
+$lang["reports_unit_price"] = "ราคาขาย";
+$lang["reports_sub_total_value"] = "ยอดรวมหักภาษี ";
+$lang["reports_total_inventory_value"] = "Total Inventory Value";
+$lang["reports_zero_and_less"] = "Zero and less";
+$lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/sales_lang.php opensourcepos/application/language/th/sales_lang.php
--- pos-prod/application/language/th/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/sales_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,156 +1,117 @@
 <?php
-$lang['sales_giftcard_number']='เลขที่ Gift Card';
-$lang['sales_giftcard']='Gift Card';
-$lang['sales_register']='ลงทะเบียนขาย';
-$lang['sales_mode']='รูปแบบการลงทะเบียน';
-$lang['sales_new_item'] = 'สินค้าใหม่';
-$lang['sales_item_name'] = 'ชื่อสินค้า';
-$lang['sales_item_number'] = 'สินค้า #';
-$lang['sales_new_customer'] = 'ลูกค้าใหม่';
-$lang['sales_customer'] = 'ลูกค้า';
-$lang['sales_no_items_in_cart']='ไม่พบสินค้าในตระกร้า';
-$lang['sales_total']='ยอดรวม';
-$lang['sales_tax_percent']='ภาษี %';
-$lang['sales_price']='ราคา';
-$lang['sales_quantity']='จำนวน';
-$lang['sales_discount']='ส่วนลด %';
-$lang['sales_edit']='แก้ไข';
-$lang['sales_payment']='รูปแบบชำระเงิน';
-$lang['sales_edit_item']='แก้ไขสินค้า';
-$lang['sales_find_or_scan_item']='ค้นหาสินค้า';
-$lang['sales_find_or_scan_item_or_receipt']='ค้นหาสินค้า หรือ บิล';
-$lang['sales_select_customer']='เลือกลูกค้า (Optional)';
-$lang['sales_start_typing_item_name']='เริ่มต้นพิมพ์ชื่อสินค้า หรือ สแกนบาร์โค๊ด...';
-$lang['sales_start_typing_customer_name']='เริ่มต้นพิมพ์ชื่อลูกค้า...';
-$lang['sales_sub_total']='ยอดรวมหักภาษี ';
-$lang['sales_tax']='ภาษี';
-$lang['sales_comment']='หมายเหตุ';
-$lang['sales_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
-$lang['sales_sale_for_customer']='ลูกค้า:';
-$lang['sales_remove_customer']='ลบลูกค้า';
-$lang['sales_error_editing_item']='แก้ไขสินค้าล้มเหลว';
-$lang['sales_complete_sale']='สำเร็จการขาย';
-$lang['sales_cancel_sale']='ยกเลิกการขาย';
-$lang['sales_add_payment']='เพิ่มบิล';
-$lang['sales_receipt']='บิลขาย';
-$lang['sales_id']='เลขที่ขาย';
-$lang['sales_return']='คืน';
-$lang['sales_confirm_finish_sale'] = 'แน่ใจหรือไม่ที่จะสำเร็จการขาย? ไม่สามารถย้อนกลับได้.';
-$lang['sales_confirm_cancel_sale'] = 'แน่ใจหรือไม่ที่จะล้างรายการขาย? สินค้าทุกอย่างจะถูกลบจากบอร์ด.';
-$lang['sales_cash'] = 'เงินสด';
-$lang['sales_check'] = 'เช็ก';
-$lang['sales_debit'] = 'เดบิทการ์ด';
-$lang['sales_credit'] = 'เครดิทการ์ด';
-$lang['sales_giftcard'] = 'กิ๊ฟการ์ด';
-$lang['sales_amount_tendered'] = 'จำนวนประมูล';
-$lang['sales_change_due'] = 'เงินทอน';
-$lang['sales_payment_not_cover_total'] = ' ปริมาณการจ่ายที่ไม่เพียงพอกะยอดรวม';
-$lang['sales_transaction_failed'] = 'การดำเนินการขายล้มเหลว';
-$lang['sales_must_enter_numeric'] = 'จำนวนที่ถุกประมูลต้องใส่ข้อมุลที่เปนตัวเลข';
-$lang['sales_must_enter_numeric_giftcard'] = 'กิ๊ฟการ์ด ต้องใส่ตัวเลขเท่านั้น';
-$lang['sales_serial'] = 'Serial';
-$lang['sales_description_abbrv'] = 'Desc';
-$lang['sales_item_out_of_stock'] = 'สินค้าจำหน่ายหมด';
-$lang['sales_item_insufficient_of_stock'] = 'จำนวนสินค้าไม่เพียงพอ';
-$lang['sales_quantity_less_than_zero'] = 'คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง';
-$lang['sales_successfully_updated'] = 'อัพเดทการขายสมบูรณ์';
-$lang['sales_unsuccessfully_updated'] = 'อัพเดทการขายไม่สมบูรณ์';
-$lang['sales_edit_sale'] = 'แก้ไขการขาย';
-$lang['sales_employee'] = 'พนักงาน';
-$lang['sales_successfully_deleted'] = 'ลบการขายสมยูรณ์';
-$lang['sales_unsuccessfully_deleted'] = 'ลบการขายไม่สมยูรณ์';
-$lang['sales_delete_entire_sale'] = 'ลบการขายทั้งหมด';
-$lang['sales_delete_confirmation'] = 'แน่ใจหรือไม่ที่จะลบรายการขายนี้, ลบแล้วไม่สามารถเรียกกลับคืนใด้';
-$lang['sales_date'] = 'วันที่ขาย';
-$lang['sales_delete_successful'] = 'คุณลบการขายสำเร็จ';
-$lang['sales_delete_unsuccessful'] = 'คุณลบการขายไม่สำเร็จ';
-$lang['sales_suspend_sale'] = 'ระงับการขายชั่วคราว';
-$lang['sales_confirm_suspend_sale'] = 'แน่ใจหรือไม่ที่จะระงับการขาย?';
-$lang['sales_suspended_sales'] = 'การขายที่ถูกระงับ';
-$lang['sales_suspended_sale_id'] = 'รหัสการขายที่ถูกระงับ';
-$lang['sales_date'] = 'วันที่';
-$lang['sales_customer'] = 'ลูกค้า';
-$lang['sales_comments'] = 'หมายเหตุ';
-$lang['sales_unsuspend_and_delete'] = 'ยกเลิกการระงับ และ ลบ';
-$lang['sales_unsuspend'] = 'ยกเลิกการระงับ';
-$lang['sales_successfully_suspended_sale'] = 'การขายของคุณถูกระงับเรียบร้อย';
-$lang['sales_email_receipt'] = 'อีเมลบิล';
-?>
-<?php
-$lang['sales_giftcard_number']='เลขที่ Gift Card';
-$lang['sales_giftcard']='Gift Card';
-$lang['sales_register']='ลงทะเบียนขาย';
-$lang['sales_mode']='รูปแบบการลงทะเบียน';
-$lang['sales_new_item'] = 'สินค้าใหม่';
-$lang['sales_item_name'] = 'ชื่อสินค้า';
-$lang['sales_item_number'] = 'สินค้า #';
-$lang['sales_new_customer'] = 'ลูกค้าใหม่';
-$lang['sales_customer'] = 'ลูกค้า';
-$lang['sales_no_items_in_cart']='ไม่พบสินค้าในตระกร้า';
-$lang['sales_total']='ยอดรวม';
-$lang['sales_tax_percent']='ภาษี %';
-$lang['sales_price']='ราคา';
-$lang['sales_quantity']='จำนวน';
-$lang['sales_discount']='ส่วนลด %';
-$lang['sales_edit']='แก้ไข';
-$lang['sales_payment']='รูปแบบชำระเงิน';
-$lang['sales_edit_item']='แก้ไขสินค้า';
-$lang['sales_find_or_scan_item']='ค้นหาสินค้า';
-$lang['sales_find_or_scan_item_or_receipt']='ค้นหาสินค้า หรือ บิล';
-$lang['sales_select_customer']='เลือกลูกค้า (Optional)';
-$lang['sales_start_typing_item_name']='เริ่มต้นพิมพ์ชื่อสินค้า หรือ สแกนบาร์โค๊ด...';
-$lang['sales_start_typing_customer_name']='เริ่มต้นพิมพ์ชื่อลูกค้า...';
-$lang['sales_sub_total']='ยอดรวมหักภาษี ';
-$lang['sales_tax']='ภาษี';
-$lang['sales_comment']='หมายเหตุ';
-$lang['sales_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
-$lang['sales_sale_for_customer']='ลูกค้า:';
-$lang['sales_remove_customer']='ลบลูกค้า';
-$lang['sales_error_editing_item']='แก้ไขสินค้าล้มเหลว';
-$lang['sales_complete_sale']='สำเร็จการขาย';
-$lang['sales_cancel_sale']='ยกเลิกการขาย';
-$lang['sales_add_payment']='เพิ่มบิล';
-$lang['sales_receipt']='บิลขาย';
-$lang['sales_id']='เลขที่ขาย';
-$lang['sales_return']='คืน';
-$lang['sales_confirm_finish_sale'] = 'แน่ใจหรือไม่ที่จะสำเร็จการขาย? ไม่สามารถย้อนกลับได้.';
-$lang['sales_confirm_cancel_sale'] = 'แน่ใจหรือไม่ที่จะล้างรายการขาย? สินค้าทุกอย่างจะถูกลบจากบอร์ด.';
-$lang['sales_cash'] = 'เงินสด';
-$lang['sales_check'] = 'เช็ก';
-$lang['sales_debit'] = 'เดบิทการ์ด';
-$lang['sales_credit'] = 'เครดิทการ์ด';
-$lang['sales_giftcard'] = 'กิ๊ฟการ์ด';
-$lang['sales_amount_tendered'] = 'จำนวนประมูล';
-$lang['sales_change_due'] = 'เงินทอน';
-$lang['sales_payment_not_cover_total'] = ' ปริมาณการจ่ายที่ไม่เพียงพอกะยอดรวม';
-$lang['sales_transaction_failed'] = 'การดำเนินการขายล้มเหลว';
-$lang['sales_must_enter_numeric'] = 'จำนวนที่ถุกประมูลต้องใส่ข้อมุลที่เปนตัวเลข';
-$lang['sales_must_enter_numeric_giftcard'] = 'กิ๊ฟการ์ด ต้องใส่ตัวเลขเท่านั้น';
-$lang['sales_serial'] = 'Serial';
-$lang['sales_description_abbrv'] = 'Desc';
-$lang['sales_item_out_of_stock'] = 'สินค้าจำหน่ายหมด';
-$lang['sales_item_insufficient_of_stock'] = 'จำนวนสินค้าไม่เพียงพอ';
-$lang['sales_quantity_less_than_zero'] = 'คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง';
-$lang['sales_successfully_updated'] = 'อัพเดทการขายสมบูรณ์';
-$lang['sales_unsuccessfully_updated'] = 'อัพเดทการขายไม่สมบูรณ์';
-$lang['sales_edit_sale'] = 'แก้ไขการขาย';
-$lang['sales_employee'] = 'พนักงาน';
-$lang['sales_successfully_deleted'] = 'ลบการขายสมยูรณ์';
-$lang['sales_unsuccessfully_deleted'] = 'ลบการขายไม่สมยูรณ์';
-$lang['sales_delete_entire_sale'] = 'ลบการขายทั้งหมด';
-$lang['sales_delete_confirmation'] = 'แน่ใจหรือไม่ที่จะลบรายการขายนี้, ลบแล้วไม่สามารถเรียกกลับคืนใด้';
-$lang['sales_date'] = 'วันที่ขาย';
-$lang['sales_delete_successful'] = 'คุณลบการขายสำเร็จ';
-$lang['sales_delete_unsuccessful'] = 'คุณลบการขายไม่สำเร็จ';
-$lang['sales_suspend_sale'] = 'ระงับการขายชั่วคราว';
-$lang['sales_confirm_suspend_sale'] = 'แน่ใจหรือไม่ที่จะระงับการขาย?';
-$lang['sales_suspended_sales'] = 'การขายที่ถูกระงับ';
-$lang['sales_suspended_sale_id'] = 'รหัสการขายที่ถูกระงับ';
-$lang['sales_date'] = 'วันที่';
-$lang['sales_customer'] = 'ลูกค้า';
-$lang['sales_comments'] = 'หมายเหตุ';
-$lang['sales_unsuspend_and_delete'] = 'ยกเลิกการระงับ และ ลบ';
-$lang['sales_unsuspend'] = 'ยกเลิกการระงับ';
-$lang['sales_successfully_suspended_sale'] = 'การขายของคุณถูกระงับเรียบร้อย';
-$lang['sales_email_receipt'] = 'อีเมลบิล';
-?>
+
+$lang["sales_add_payment"] = "เพิ่มบิล";
+$lang["sales_amount_due"] = "ยอดต้องชำระ";
+$lang["sales_amount_tendered"] = "ชำระเข้ามา";
+$lang["sales_basic_information"] = "";
+$lang["sales_cancel_sale"] = "ยกเลิกการขาย";
+$lang["sales_cash"] = "เงินสด";
+$lang["sales_change_due"] = "เงินทอน";
+$lang["sales_check"] = "เช็ค";
+$lang["sales_check_balance"] = "Check remainder";
+$lang["sales_comment"] = "หมายเหตุ";
+$lang["sales_comments"] = "หมายเหตุ";
+$lang["sales_complete_sale"] = "จบการขาย";
+$lang["sales_confirm_cancel_sale"] = "แน่ใจหรือไม่ที่จะล้างรายการขาย? สินค้าทุกอย่างจะถูกลบจากบอร์ด.";
+$lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
+$lang["sales_confirm_finish_sale"] = "แน่ใจหรือไม่ที่จะสำเร็จการขาย? ไม่สามารถย้อนกลับได้.";
+$lang["sales_confirm_suspend_sale"] = "แน่ใจหรือไม่ที่จะระงับการขาย?";
+$lang["sales_credit"] = "เครดิตการ์ด";
+$lang["sales_customer"] = "ลูกค้า";
+$lang["sales_date"] = "วันที่ขาย";
+$lang["sales_date_required"] = "A correct date needs to be filled in";
+$lang["sales_date_type"] = "Date field is required";
+$lang["sales_debit"] = "เดบิตการ์ด";
+$lang["sales_delete_confirmation"] = "แน่ใจหรือไม่ที่จะลบรายการขายนี้, ลบแล้วไม่สามารถเรียกกลับคืนใด้";
+$lang["sales_delete_entire_sale"] = "ลบการขายทั้งหมด";
+$lang["sales_delete_successful"] = "คุณลบการขายสำเร็จ";
+$lang["sales_delete_unsuccessful"] = "คุณลบการขายไม่สำเร็จ";
+$lang["sales_description_abbrv"] = "Desc";
+$lang["sales_discount"] = "ส่วนลด %";
+$lang["sales_discount_included"] = "% Discount";
+$lang["sales_discount"] = "ส่วนลด";
+$lang["sales_discount_short"] = "";
+$lang["sales_edit"] = "แก้ไข";
+$lang["sales_edit_item"] = "แก้ไขสินค้า";
+$lang["sales_edit_sale"] = "แก้ไขการขาย";
+$lang["sales_email_receipt"] = "อีเมลบิล";
+$lang["sales_employee"] = "พนักงาน";
+$lang["sales_error_editing_item"] = "แก้ไขสินค้าล้มเหลว";
+$lang["sales_find_or_scan_item"] = "ค้นหาสินค้า";
+$lang["sales_find_or_scan_item_or_receipt"] = "ค้นหาสินค้า หรือ บิล";
+$lang["sales_giftcard"] = "Gift Card";
+$lang["sales_giftcard_balance"] = "Giftcard Balance";
+$lang["sales_giftcard_number"] = "เลขที่ Gift Card";
+$lang["sales_id"] = "เลขที่ขาย";
+$lang["sales_invoice"] = "ใบแจ้งหนี้";
+$lang["sales_invoice_confirm"] = "This invoice will be sent to";
+$lang["sales_invoice_enable"] = "ออกใบแจ้งหนี้";
+$lang["sales_invoice_filter"] = "ใบแจ้งหนี้";
+$lang["sales_cash_filter"] = "เงินสด";
+$lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
+$lang["sales_invoice_number"] = "เลขใบแจ้งหนี้";
+$lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
+$lang["sales_invoice_sent"] = "Invoice sent to";
+$lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
+$lang["sales_invoice_update"] = "คำนวณใหม่";
+$lang["sales_item_insufficient_of_stock"] = "จำนวนสินค้าไม่เพียงพอ";
+$lang["sales_item_name"] = "ชื่อสินค้า";
+$lang["sales_item_number"] = "สินค้า #";
+$lang["sales_item_out_of_stock"] = "สินค้าจำหน่ายหมด";
+$lang["sales_mode"] = "รูปแบบการลงทะเบียน";
+$lang["sales_must_enter_numeric"] = "จำนวนที่ถุกประมูลต้องใส่ข้อมุลที่เปนตัวเลข";
+$lang["sales_must_enter_numeric_giftcard"] = "กิ๊ฟการ์ด ต้องใส่ตัวเลขเท่านั้น";
+$lang["sales_new_customer"] = "ลูกค้าใหม่";
+$lang["sales_new_item"] = "สินค้าใหม่";
+$lang["sales_no_description"] = "None";
+$lang["sales_no_filter"] = "All";
+$lang["sales_no_items_in_cart"] = "ไม่พบสินค้าในตระกร้า";
+$lang["sales_no_sales_to_display"] = "No sales to display";
+$lang["sales_one_or_multiple"] = "";
+$lang["sales_takings"] = "ประวัติ";
+$lang["sales_payment"] = "รูปแบบชำระเงิน";
+$lang["sales_payment_amount"] = "";
+$lang["sales_payment_not_cover_total"] = " ปริมาณการจ่ายที่ไม่เพียงพอกะยอดรวม";
+$lang["sales_payment_type"] = "ชำระโดย";
+$lang["sales_payments_total"] = "ยอดชำระแล้ว";
+$lang["sales_price"] = "ราคา";
+$lang["sales_print_after_sale"] = "พิมพ์บิลหลังการขาย";
+$lang["sales_quantity"] = "จำนวน";
+$lang["sales_quantity_less_than_zero"] = "คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง";
+$lang["sales_quantity_less_than_reorder_level"] = "คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง";
+$lang["sales_receipt"] = "บิลขาย";
+$lang["sales_receipt_number"] = "จุดขาย#";
+$lang["sales_register"] = "ลงทะเบียนขาย";
+$lang["sales_remove_customer"] = "ลบลูกค้า";
+$lang["sales_return"] = "คืน";
+$lang["sales_sale"] = "ขาย";
+$lang["sales_sale_for_customer"] = "ลูกค้า:";
+$lang["sales_sale_time"] = "เวลา";
+$lang["sales_select_customer"] = "เลือกลูกค้า (Optional)";
+$lang["sales_send_invoice"] = "ส่งใบแจ้งหนี้";
+$lang["sales_serial"] = "Serial";
+$lang["sales_show_invoice"] = "ใบแจ้งหนี้";
+$lang["sales_show_receipt"] = "ใบเสร็จ";
+$lang["sales_start_typing_customer_name"] = "เริ่มต้นพิมพ์ชื่อลูกค้า...";
+$lang["sales_start_typing_item_name"] = "เริ่มต้นพิมพ์ชื่อสินค้า หรือ สแกนบาร์โค๊ด...";
+$lang["sales_stock_location"] = "ที่เก็บ";
+$lang["sales_sub_total"] = "ยอดรวมหักภาษี ";
+$lang["sales_successfully_deleted"] = "ลบการขายสมยูรณ์";
+$lang["sales_successfully_suspended_sale"] = "การขายของคุณถูกระงับเรียบร้อย";
+$lang["sales_successfully_updated"] = "อัพเดทการขายสมบูรณ์";
+$lang["sales_suspend_sale"] = "พักรายการ";
+$lang["sales_suspended_sale_id"] = "รหัสการขายที่ถูกพัก";
+$lang["sales_suspended_sales"] = "การขายที่พักไว้";
+$lang["sales_tax"] = "ภาษี";
+$lang["sales_tax_percent"] = "ภาษี %";
+$lang["sales_total"] = "ยอดรวม";
+$lang["sales_total_tax_exclusive"] = "Tax excluded";
+$lang["sales_transaction_failed"] = "การดำเนินการขายล้มเหลว";
+$lang["sales_unable_to_add_item"] = "";
+$lang["sales_unsuccessfully_deleted"] = "ลบการขายไม่สำเร็จ";
+$lang["sales_unsuccessfully_updated"] = "อัพเดทการขายไม่สมบูรณ์";
+$lang["sales_unsuspend"] = "ยกเลิกการระงับ";
+$lang["sales_unsuspend_and_delete"] = "ยกเลิกการระงับ และ ลบ";
+$lang["sales_update"] = "แก้ไขการขาย";
+$lang["sales_date_range"] = "ระหว่างวันที่";
+$lang["sales_none_selected"] = "กรุณาเลือสินค้าที่ต้องการแก้ไข";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/th/suppliers_lang.php opensourcepos/application/language/th/suppliers_lang.php
--- pos-prod/application/language/th/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/th/suppliers_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,34 +1,19 @@
 <?php
-$lang['suppliers_new']='ผู้ผลิตรายใหม่';
-$lang['suppliers_supplier']='ผู้ผลิต';
-$lang['suppliers_update']='ปรับปรุงผู้ผลิต';
-$lang['suppliers_confirm_delete']='แน่ใจหรือไม่ที่จะลบผู้ผลิตที่ถููกเลือก?';
-$lang['suppliers_none_selected']='คุณยังไม่ได้เฃือกผู้ผลิตที่ต้องการลบ';
-$lang['suppliers_error_adding_updating'] = 'เพิ่ม/แก้ไข ผู้ผลิต ล้มเหลว';
-$lang['suppliers_successful_adding']='เพิ่มผู้ผลิตสำเร็จ';
-$lang['suppliers_successful_updating']='ปรับปรุงผู้ผลิตสำเร็จ';
-$lang['suppliers_successful_deleted']='ลบสำเร็จ';
-$lang['suppliers_one_or_multiple']='ผู้ผลิต';
-$lang['suppliers_cannot_be_deleted']='ลบผู้ผลิตที่ถูกเลือกไม่ได้, one or more of the selected suppliers has sales.';
-$lang['suppliers_basic_information']='ข้อมูลผู้ผลิต';
-$lang['suppliers_account_number']='บัญชี #';
-$lang['suppliers_company_name']='ชื่อบริษัท';
-$lang['suppliers_company_name_required'] = 'ชื่อบริษัทต้องกรอก';
-?>
-<?php
-$lang['suppliers_new']='ผู้ผลิตรายใหม่';
-$lang['suppliers_supplier']='ผู้ผลิต';
-$lang['suppliers_update']='ปรับปรุงผู้ผลิต';
-$lang['suppliers_confirm_delete']='แน่ใจหรือไม่ที่จะลบผู้ผลิตที่ถููกเลือก?';
-$lang['suppliers_none_selected']='คุณยังไม่ได้เฃือกผู้ผลิตที่ต้องการลบ';
-$lang['suppliers_error_adding_updating'] = 'เพิ่ม/แก้ไข ผู้ผลิต ล้มเหลว';
-$lang['suppliers_successful_adding']='เพิ่มผู้ผลิตสำเร็จ';
-$lang['suppliers_successful_updating']='ปรับปรุงผู้ผลิตสำเร็จ';
-$lang['suppliers_successful_deleted']='ลบสำเร็จ';
-$lang['suppliers_one_or_multiple']='ผู้ผลิต';
-$lang['suppliers_cannot_be_deleted']='ลบผู้ผลิตที่ถูกเลือกไม่ได้, one or more of the selected suppliers has sales.';
-$lang['suppliers_basic_information']='ข้อมูลผู้ผลิต';
-$lang['suppliers_account_number']='บัญชี #';
-$lang['suppliers_company_name']='ชื่อบริษัท';
-$lang['suppliers_company_name_required'] = 'ชื่อบริษัทต้องกรอก';
-?>
+
+$lang["suppliers_account_number"] = "บัญชี #";
+$lang["suppliers_basic_information"] = "ข้อมูลผู้ผลิต";
+$lang["suppliers_cannot_be_deleted"] = "ลบผู้ผลิตที่ถูกเลือกไม่ได้, one or more of the selected suppliers has sales.";
+$lang["suppliers_company_name"] = "ชื่อบริษัท";
+$lang["suppliers_company_name_required"] = "ชื่อบริษัทต้องกรอก";
+$lang["suppliers_agency_name"] = " ";
+$lang["suppliers_confirm_delete"] = "แน่ใจหรือไม่ที่จะลบผู้ผลิตที่ถููกเลือก?";
+$lang["suppliers_error_adding_updating"] = "เพิ่ม/แก้ไข ผู้ผลิต ล้มเหลว";
+$lang["suppliers_new"] = "ผู้ผลิตรายใหม่";
+$lang["suppliers_none_selected"] = "คุณยังไม่ได้เฃือกผู้ผลิตที่ต้องการลบ";
+$lang["suppliers_one_or_multiple"] = "ผู้ผลิต";
+$lang["suppliers_successful_adding"] = "เพิ่มผู้ผลิตสำเร็จ";
+$lang["suppliers_successful_deleted"] = "ลบสำเร็จ";
+$lang["suppliers_successful_updating"] = "ปรับปรุงผู้ผลิตสำเร็จ";
+$lang["suppliers_supplier"] = "ผู้ผลิต";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "ปรับปรุงผู้ผลิต";
Only in opensourcepos/application/language: tr
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/common_lang.php opensourcepos/application/language/zh/common_lang.php
--- pos-prod/application/language/zh/common_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/common_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,41 +1,57 @@
 <?php
-$lang['common_common'] = '一般';
-$lang['common_submit'] = '送出';
-$lang['common_or'] = '或';
-$lang['common_powered_by'] = 'Powered by';
-$lang['common_welcome'] = '歡迎';
-$lang['common_logout'] = '登出';
-$lang['common_list_of'] = '列表';
-$lang['common_first_name'] = '名';
-$lang['common_last_name'] = '姓';
-$lang['common_email'] = 'E-Mail';
-$lang['common_phone_number'] = '電話';
-$lang['common_address_1'] = '地址 1';
-$lang['common_address_2'] = '地址 2';
-$lang['common_city'] = '城市';
-$lang['common_state'] = '州';
-$lang['common_zip'] = '郵遞區號';
-$lang['common_country'] = '國家';
-$lang['common_comments'] = '評論';
-$lang['common_edit'] = '編輯';
-$lang['common_search'] = '搜尋';
-$lang['common_delete'] = '刪除';
-$lang['common_remove'] = '移除';
-$lang['common_view_recent_sales'] = '最新的消售資訊';
-$lang['common_you_are_using_ospos'] = '您正在使用 Open Source Point of Sale 版本';
-$lang['common_please_visit_my'] = '請造訪';
-$lang['common_website'] = '網站';
-$lang['common_fields_required_message'] = '紅色欄位為必填';
-$lang['common_learn_about_project'] = '了解系統開展進度';
-$lang['common_searched_for'] = '查找';
-$lang['common_first_name_required'] = '名為必填';
-$lang['common_last_name_required'] = '姓氏為必填';
-$lang['common_email_invalid_format'] = 'E-mail格式錯誤';
-$lang['common_confirm_search'] = '您已經選擇一行或多行，在搜索後這些紀錄將不能再被選取。您確定要提交這個搜索？';
-$lang['common_no_persons_to_display'] = '沒有使用者資料可以顯示';
-$lang['common_return_policy'] = '退貨政策';
-$lang['common_price'] = '價值';
-$lang['common_welcome_message']= '歡迎使用Open Source Point of Sale，請點擊下面的模組以開始使用！';
-$lang['common_inv'] = '庫存';
-$lang['common_det'] = '更多';
-?>
+
+$lang["common_address_1"] = "地址 1";
+$lang["common_address_2"] = "地址 2";
+$lang["common_city"] = "城市";
+$lang["common_comments"] = "評論";
+$lang["common_common"] = "一般";
+$lang["common_confirm_search"] = "您已經選擇一行或多行，在搜索後這些紀錄將不能再被選取。您確定要提交這個搜索？";
+$lang["common_country"] = "國家";
+$lang["common_date"] = "Date";
+$lang["common_delete"] = "刪除";
+$lang["common_print"] = "Print";
+$lang["common_det"] = "更多";
+$lang["common_edit"] = "編輯";
+$lang["common_email"] = "E-Mail";
+$lang["common_email_invalid_format"] = "E-mail格式錯誤";
+$lang["common_fields_required_message"] = "紅色欄位為必填";
+$lang["common_first_name"] = "名";
+$lang["common_first_name_required"] = "名為必填";
+$lang["common_first_page"] = "First";
+$lang["common_gender"] = "Gender";
+$lang["common_gender_female"] = "V";
+$lang["common_gender_male"] = "M";
+$lang["common_inv"] = "庫存";
+$lang["common_last_name"] = "姓";
+$lang["common_last_name_required"] = "姓氏為必填";
+$lang["common_last_page"] = "Last";
+$lang["common_learn_about_project"] = "了解系統開展進度";
+$lang["common_list_of"] = "列表";
+$lang["common_logout"] = "登出";
+$lang["common_new"] = "New";
+$lang["common_no_persons_to_display"] = "沒有使用者資料可以顯示";
+$lang["common_or"] = "或";
+$lang["common_phone_number"] = "電話";
+$lang["common_phone_number_required"] = "";
+$lang["common_please_visit_my"] = "請造訪";
+$lang["common_powered_by"] = "Powered by";
+$lang["common_price"] = "價值";
+$lang["common_remove"] = "移除";
+$lang["common_return_policy"] = "退貨政策";
+$lang["common_search"] = "搜尋";
+$lang["common_search_options"] = "Search options";
+$lang["common_searched_for"] = "查找";
+$lang["common_state"] = "州";
+$lang["common_submit"] = "送出";
+$lang["common_view_recent_sales"] = "最新的消售資訊";
+$lang["common_website"] = "網站";
+$lang["common_welcome"] = "歡迎";
+$lang["common_welcome_message"] = "歡迎使用Open Source Point of Sale，請點擊下面的模組以開始使用！";
+$lang["common_you_are_using_ospos"] = "您正在使用 Open Source Point of Sale 版本";
+$lang["common_zip"] = "郵遞區號";
+$lang["common_import"] = "Import";
+$lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
+$lang["common_import_file_path"] = "file path";
+$lang["common_import_excel"] = "Excel Import";
+$lang["common_import_full_path"] = "Full path to excel file required";
+$lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/config_lang.php opensourcepos/application/language/zh/config_lang.php
--- pos-prod/application/language/zh/config_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/config_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,36 +1,122 @@
 <?php
-$lang['config_info'] = '儲存組態';
-$lang['config_company'] = '公司名稱';
-$lang['config_address'] = '公司地址';
-$lang['config_phone'] = '電話';
-$lang['config_website'] = '網站';
-$lang['config_fax'] = '傳真';
-$lang['config_default_tax_rate'] = '預設稅率 %';
-$lang['config_default_tax_rate_1'] = '稅率 1';
-$lang['config_default_tax_rate_2'] = '稅率 2';
-$lang['config_company_required'] = '公司名稱為必填';
-$lang['config_address_required'] = '公司地址為必填';
-$lang['config_phone_required'] = '公司電話為必填';
-$lang['config_default_tax_rate_required'] = '預設稅率為必填';
-$lang['config_default_tax_rate_number'] = '預設稅率必需為數字';
-$lang['config_company_website_url'] = '公司網址格式錯誤 (http://...)';
-$lang['config_saved_successfully'] = '組態設置儲存成功';
-$lang['config_saved_unsuccessfully'] = '組態設置儲存失敗';
-$lang['config_return_policy_required'] = '退換貨政策為必填';
-$lang['config_print_after_sale'] = '出貨時打印收據';
-$lang['config_language'] = '語言';
-$lang['config_timezone'] = '時區';
-$lang['config_currency_symbol'] = '貨幣符號';
-$lang['config_currency_side'] = 'Right side'; //GARRISON ADDED 4/20/2013
-$lang['config_custom1'] = 'Custom Field 1'; //GARRISON ADDED 4/21/2013
-$lang['config_custom2'] = 'Custom Field 2'; //GARRISON ADDED 4/21/2013
-$lang['config_custom3'] = 'Custom Field 3'; //GARRISON ADDED 4/21/2013
-$lang['config_custom4'] = 'Custom Field 4'; //GARRISON ADDED 4/21/2013
-$lang['config_custom5'] = 'Custom Field 5'; //GARRISON ADDED 4/21/2013
-$lang['config_custom6'] = 'Custom Field 6'; //GARRISON ADDED 4/21/2013
-$lang['config_custom7'] = 'Custom Field 7'; //GARRISON ADDED 4/21/2013
-$lang['config_custom8'] = 'Custom Field 8'; //GARRISON ADDED 4/21/2013
-$lang['config_custom9'] = 'Custom Field 9'; //GARRISON ADDED 4/21/2013
-$lang['config_custom10'] = 'Custom Field 10'; //GARRISON ADDED 4/21/2013
-$lang['config_tax_included'] = 'Tax Included';
-?>
+
+$lang["config_address"] = "公司地址";
+$lang["config_address_required"] = "公司地址為必填";
+$lang["config_backup_button"] = "Backup";
+$lang["config_backup_database"] = "Backup Database";
+$lang["config_barcode_company"] = "公司名稱";
+$lang["config_barcode_configuration"] = "Barcode Configuration";
+$lang["config_barcode_content"] = "Barcode Content";
+$lang["config_barcode_first_row"] = "Row 3";
+$lang["config_barcode_font"] = "Font";
+$lang["config_barcode_height"] = "Height (px)";
+$lang["config_barcode_id"] = "Item Id/Name";
+$lang["config_barcode_info"] = "Barcode Configuration Information";
+$lang["config_barcode_layout"] = "Barcode Layout";
+$lang["config_barcode_name"] = "Name";
+$lang["config_barcode_number"] = "UPC/EAN/ISBN";
+$lang["config_barcode_number_in_row"] = "Number in row";
+$lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
+$lang["config_barcode_page_width"] = "Display page width";
+$lang["config_barcode_price"] = "Price";
+$lang["config_barcode_quality"] = "Quality (1-100)";
+$lang["config_barcode_second_row"] = "Row 4";
+$lang["config_barcode_third_row"] = "Row 5";
+$lang["config_barcode_type"] = "Barcode Type";
+$lang["config_barcode_width"] = "Width (px)";
+$lang["config_barcode_generate_if_empty"] = "Generate if empty";
+$lang["config_company"] = "公司名稱";
+$lang["config_company_logo"] = "Company Logo";
+$lang["config_company_required"] = "公司名稱為必填";
+$lang["config_company_website_url"] = "公司網址格式錯誤 (http://...)";
+$lang["config_currency_side"] = "Right side";
+$lang["config_currency_symbol"] = "貨幣符號";
+$lang["config_custom1"] = "Custom Field 1";
+$lang["config_custom10"] = "Custom Field 10";
+$lang["config_custom2"] = "Custom Field 2";
+$lang["config_custom3"] = "Custom Field 3";
+$lang["config_custom4"] = "Custom Field 4";
+$lang["config_custom5"] = "Custom Field 5";
+$lang["config_custom6"] = "Custom Field 6";
+$lang["config_custom7"] = "Custom Field 7";
+$lang["config_custom8"] = "Custom Field 8";
+$lang["config_custom9"] = "Custom Field 9";
+$lang["config_decimal_point"] = "Decimal Point";
+$lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
+$lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
+$lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
+$lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
+$lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
+$lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
+$lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
+$lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
+$lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
+$lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
+$lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
+$lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
+$lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
+$lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
+$lang["config_default_sales_discount"] = "Default Sales Discount %";
+$lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
+$lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
+$lang["config_default_tax_rate"] = "預設稅率 %";
+$lang["config_default_tax_rate_1"] = "稅率 1";
+$lang["config_default_tax_rate_2"] = "稅率 2";
+$lang["config_default_tax_rate_number"] = "預設稅率必需為數字";
+$lang["config_default_tax_rate_required"] = "預設稅率為必填";
+$lang["config_fax"] = "傳真";
+$lang["config_general_configuration"] = "General Configuration";
+$lang["config_info"] = "儲存組態";
+$lang["config_invoice_default_comments"] = "Default Invoice Comments";
+$lang["config_invoice_email_message"] = "Invoice Email Template";
+$lang["config_invoice_printer"] = "Invoice Printer";
+$lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
+$lang["config_language"] = "語言";
+$lang["config_lines_per_page"] = "Lines Per Page";
+$lang["config_lines_per_page_number"] = "The lines per page must be a number";
+$lang["config_lines_per_page_required"] = "The lines per page is a required field";
+$lang["config_location_configuration"] = "Stock Locations";
+$lang["config_location_info"] = "Location Configuration Information";
+$lang["config_logout"] = "Don't you want to make a backup before logging out?";
+$lang["config_number_format"] = "Number Format";
+$lang["config_phone"] = "電話";
+$lang["config_phone_required"] = "公司電話為必填";
+$lang["config_print_bottom_margin"] = "Margin Bottom";
+$lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
+$lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
+$lang["config_print_footer"] = "Print Browser Footer";
+$lang["config_print_header"] = "Print Browser Header";
+$lang["config_print_left_margin"] = "Margin Left";
+$lang["config_print_left_margin_number"] = "The default left margin must be a number";
+$lang["config_print_left_margin_required"] = "The default left margin is a required field";
+$lang["config_print_right_margin"] = "Margin Right";
+$lang["config_print_right_margin_number"] = "The default right margin must be a number";
+$lang["config_print_right_margin_required"] = "The default right margin is a required field";
+$lang["config_print_silently"] = "Show Print Dialog";
+$lang["config_print_top_margin"] = "Margin Top";
+$lang["config_print_top_margin_number"] = "The default top margin must be a number";
+$lang["config_print_top_margin_required"] = "The default top margin is a required field";
+$lang["config_receipt_configuration"] = "Print Settings";
+$lang["config_receipt_info"] = "Receipt Configuration Information";
+$lang["config_receipt_printer"] = "Ticket Printer";
+$lang["config_receipt_show_taxes"] = "Show Taxes";
+$lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
+$lang["config_recv_invoice_format"] = "Receivings Invoice Format";
+$lang["config_return_policy_required"] = "退換貨政策為必填";
+$lang["config_sales_invoice_format"] = "Sales Invoice Format";
+$lang["config_saved_successfully"] = "組態設置儲存成功";
+$lang["config_saved_unsuccessfully"] = "組態設置儲存失敗";
+$lang["config_show_total_discount"] = "Show total discount";
+$lang["config_stock_location"] = "Stock location";
+$lang["config_stock_location_duplicate"] = "Please use an unique location name";
+$lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
+$lang["config_stock_location_required"] = "Stock location number is a required field";
+$lang["config_takings_printer"] = "Takings Printer";
+$lang["config_tax_included"] = "Tax Included";
+$lang["config_thousands_separator"] = "Thousands Separator";
+$lang["config_timezone"] = "時區";
+$lang["config_use_invoice_template"] = "Use invoice template";
+$lang["config_website"] = "網站";
+$lang["config_locale_configuration"] = "Localisation Configuration";
+$lang["config_locale_info"] = "Localisation Configuration Information";
+$lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/customers_lang.php opensourcepos/application/language/zh/customers_lang.php
--- pos-prod/application/language/zh/customers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/customers_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,16 +1,19 @@
 <?php
-$lang['customers_new'] = '新客戶';
-$lang['customers_customer'] = '客戶';
-$lang['customers_update'] = '更新客戶';
-$lang['customers_confirm_delete'] = '你確定要刪除選定的客戶？';
-$lang['customers_none_selected'] = '您還沒有選擇任何客戶進行刪除';
-$lang['customers_error_adding_updating'] = '添加/更新客戶錯誤';
-$lang['customers_successful_adding'] = '成功新增顧客';
-$lang['customers_successful_updating'] = '成功更新顧客';
-$lang['customers_successful_deleted'] = '成功刪除';
-$lang['customers_one_or_multiple'] = '客戶';
-$lang['customers_cannot_be_deleted'] = '無法刪除選定的客戶，選定的客戶存有銷售紀錄。';
-$lang['customers_basic_information'] = '客戶資訊';
-$lang['customers_account_number'] = '帳號 #';
-$lang['customers_taxable'] = '應課稅';
-?>
+
+$lang["customers_account_number"] = "帳號 #";
+$lang["customers_account_number_duplicate"] = "This account number is already present in the database";
+$lang["customers_basic_information"] = "客戶資訊";
+$lang["customers_cannot_be_deleted"] = "無法刪除選定的客戶，選定的客戶存有銷售紀錄。";
+$lang["customers_company_name"] = "Company Name";
+$lang["customers_confirm_delete"] = "你確定要刪除選定的客戶？";
+$lang["customers_customer"] = "客戶";
+$lang["customers_error_adding_updating"] = "添加/更新客戶錯誤";
+$lang["customers_new"] = "新客戶";
+$lang["customers_none_selected"] = "您還沒有選擇任何客戶進行刪除";
+$lang["customers_one_or_multiple"] = "客戶";
+$lang["customers_successful_adding"] = "成功新增顧客";
+$lang["customers_successful_deleted"] = "成功刪除";
+$lang["customers_successful_updating"] = "成功更新顧客";
+$lang["customers_taxable"] = "應課稅";
+$lang["customers_update"] = "更新客戶";
+$lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/employees_lang.php opensourcepos/application/language/zh/employees_lang.php
--- pos-prod/application/language/zh/employees_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/employees_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,27 +1,28 @@
 <?php
-$lang['employees_employee'] = '員工';
-$lang['employees_new'] = '新員工';
-$lang['employees_update'] = '更新員工';
-$lang['employees_confirm_delete'] = '你確定要刪除所選的員工嗎？';
-$lang['employees_none_selected'] = '您還沒有選擇任何員工進行刪除';
-$lang['employees_error_adding_updating'] = '添加/更新員工錯誤';
-$lang['employees_successful_adding'] = '新增員工資料成功';
-$lang['employees_successful_updating'] = '成功更新員工資料';
-$lang['employees_successful_deleted'] = '成功刪除員工資料';
-$lang['employees_one_or_multiple'] = '員工';
-$lang['employees_cannot_be_deleted'] = '無法刪除選定的僱員，選定的員工中已有銷售紀錄或你正在試圖刪除自己 :)';
-$lang['employees_username'] = '帳號';
-$lang['employees_password'] = '密碼';
-$lang['employees_repeat_password'] = '確認密碼';
-$lang['employees_username_required'] = '帳號為必填';
-$lang['employees_username_minlength'] = '帳號必需為五個字元以上';
-$lang['employees_password_required'] = '請輸入密碼';
-$lang['employees_password_minlength'] = '密碼需為八個字元以上';
-$lang['employees_password_must_match'] = '密碼與確認密碼不一致';
-$lang['employees_basic_information'] = '員工基本資料';
-$lang['employees_login_info'] = '員工登錄資料';
-$lang['employees_permission_info'] = '員工權限';
-$lang['employees_permission_desc'] = '勾選後授予使用該模組功能';
-$lang['employees_error_updating_demo_admin'] = '您不能更改admin用戶';
-$lang['employees_error_deleting_demo_admin'] = '您不能刪除admin用戶';
-?>
+
+$lang["employees_basic_information"] = "員工基本資料";
+$lang["employees_cannot_be_deleted"] = "無法刪除選定的僱員，選定的員工中已有銷售紀錄或你正在試圖刪除自己 :)";
+$lang["employees_confirm_delete"] = "你確定要刪除所選的員工嗎？";
+$lang["employees_employee"] = "員工";
+$lang["employees_error_adding_updating"] = "添加/更新員工錯誤";
+$lang["employees_error_deleting_demo_admin"] = "您不能刪除admin用戶";
+$lang["employees_error_updating_demo_admin"] = "您不能更改admin用戶";
+$lang["employees_login_info"] = "員工登錄資料";
+$lang["employees_new"] = "新員工";
+$lang["employees_none_selected"] = "您還沒有選擇任何員工進行刪除";
+$lang["employees_one_or_multiple"] = "員工";
+$lang["employees_password"] = "密碼";
+$lang["employees_password_minlength"] = "密碼需為八個字元以上";
+$lang["employees_password_must_match"] = "密碼與確認密碼不一致";
+$lang["employees_password_required"] = "請輸入密碼";
+$lang["employees_permission_desc"] = "勾選後授予使用該模組功能";
+$lang["employees_permission_info"] = "員工權限";
+$lang["employees_repeat_password"] = "確認密碼";
+$lang["employees_successful_adding"] = "新增員工資料成功";
+$lang["employees_successful_deleted"] = "成功刪除員工資料";
+$lang["employees_successful_updating"] = "成功更新員工資料";
+$lang["employees_update"] = "更新員工";
+$lang["employees_username"] = "帳號";
+$lang["employees_username_minlength"] = "帳號必需為五個字元以上";
+$lang["employees_username_required"] = "帳號為必填";
+$lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/error_lang.php opensourcepos/application/language/zh/error_lang.php
--- pos-prod/application/language/zh/error_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/error_lang.php	2016-05-23 15:32:31.908839350 -0700
@@ -1,4 +1,4 @@
 <?php
-$lang['error_no_permission_module'] = '您沒有權限使用模組：';
-$lang['error_unknown'] = '未知';
-?>
+
+$lang["error_no_permission_module"] = "您沒有權限使用模組：";
+$lang["error_unknown"] = "未知";
Only in pos-prod/application/language/zh: form_validation_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/giftcards_lang.php opensourcepos/application/language/zh/giftcards_lang.php
--- pos-prod/application/language/zh/giftcards_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/giftcards_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,69 +1,70 @@
 <?php
-$lang['giftcards_giftcard_number'] = '禮金券編號';
-$lang['giftcards_card_value'] = '金額';
-$lang['giftcards_basic_information'] = '禮金券資訊';
-$lang['giftcards_number_required'] = '請輸入禮金券編號';
-$lang['giftcards_value_required'] = '請輸入禮金券金額';
-$lang['giftcards_number'] = '禮金券編號需為數字';
-$lang['giftcards_value'] = '禮金券金額需為數字';
-$lang['giftcards_person_id'] = 'Customer';
-$lang['giftcards_retrive_giftcard_info'] = '檢索禮金券訊息';
-$lang['giftcards_description'] = '描述';
-$lang['giftcards_amazon'] = 'Amazon';
-$lang['giftcards_upc_database'] = 'UPC Database';
-$lang['giftcards_cannot_find_giftcard'] = '找不到禮金券的訊息';
-$lang['giftcards_info_provided_by'] = '提供信息的來源';
-$lang['giftcards_number_information'] = '禮金券編號';
-$lang['giftcards_new'] = '新建禮金券';
-$lang['giftcards_update'] = '更新禮金券';
-$lang['giftcards_giftcard'] = '禮金券';
-$lang['giftcards_edit_multiple_giftcards'] = '多重編輯';
-$lang['giftcards_category'] = '類別';
-$lang['giftcards_cost_price'] = '成本價格';
-$lang['giftcards_unit_price'] = '單位價格';
-$lang['giftcards_tax_1'] = '稅額 1';
-$lang['giftcards_tax_2'] = '稅額 2';
-$lang['giftcards_sales_tax_1'] = '銷售稅額 1';
-$lang['giftcards_sales_tax_2'] = '銷售稅額 2';
-$lang['giftcards_tax_percent'] = '稅率';
-$lang['giftcards_tax_percents'] = '稅率 Percent(s)';
-$lang['giftcards_reorder_level'] = '補貨點';
-$lang['giftcards_quantity'] = '數量';
-$lang['giftcards_no_giftcards_to_display'] = '沒有禮金券可以顯示';
-$lang['giftcards_bulk_edit'] = '批量編輯';
-$lang['giftcards_confirm_delete'] = '你確定你要刪除選定的禮金券?';
-$lang['giftcards_none_selected'] = '您還沒有選擇任何禮金券進行編輯';
-$lang['giftcards_confirm_bulk_edit'] = '您確定您要編輯的所有選擇的禮金券嗎？';
-$lang['giftcards_successful_bulk_edit'] = '您已成功更新選定的禮品卡';
-$lang['giftcards_error_updating_multiple'] = '禮金券更新錯誤';
-$lang['giftcards_edit_fields_you_want_to_update'] = '編輯所有選定的禮金券中你想要編輯的資料';
-$lang['giftcards_error_adding_updating'] = '新增/更新禮金券錯誤';
-$lang['giftcards_successful_adding'] = '新增禮金券成功';
-$lang['giftcards_successful_updating'] = '成功更新禮金券';
-$lang['giftcards_successful_deleted'] = '成功刪除禮金券';
-$lang['giftcards_one_or_multiple'] = '禮金券';
-$lang['giftcards_cannot_be_deleted'] = '無法刪除選定的禮金券，一個或多個所選擇的禮金券已經使用。';
-$lang['giftcards_none'] = '無';
-$lang['giftcards_supplier'] = '供應商';
-$lang['giftcards_generate_barcodes'] = '產生條碼';
-$lang['giftcards_must_select_giftcard_for_barcode'] = '您必須選擇至少一個禮金券才能生成條形碼';
-$lang['giftcards_excel_import_failed'] = 'Excel匯入失敗';
-$lang['giftcards_allow_alt_description'] = '允許使用ALT描述';
-$lang['giftcards_is_serialized'] = '禮金券序號';
-$lang['giftcards_low_inventory_giftcards'] = '禮金券庫存過低';
-$lang['giftcards_serialized_giftcards'] = '排序禮金券';
-$lang['giftcards_no_description_giftcards'] = '沒有描述的禮金券';
-$lang['giftcards_inventory_comments'] = '評論';
-$lang['giftcards_count'] = '更新庫存';
-$lang['giftcards_details_count'] = '庫存盤點詳情';
-$lang['giftcards_add_minus'] = '加/減庫存';
-$lang['giftcards_current_quantity'] = '當前數量';
-$lang['giftcards_quantity_required'] = '數量是必填字段。請按關閉（X）來取消';
-$lang['giftcards_do_nothing'] = '不做任何修改';
-$lang['giftcards_change_all_to_serialized'] = '全部更改序號至序列化';
-$lang['giftcards_change_all_to_unserialized'] = '全部更改序號至非序列化';
-$lang['giftcards_change_all_to_allow_alt_desc'] = '充許全部ALT倒序';
-$lang['giftcards_change_all_to_not_allow_allow_desc'] = '不允許全部ALT倒序';
-$lang['giftcards_use_inventory_menu'] = '使用庫存清單';
-$lang['giftcards_manually_editing_of_quantity'] = '手動編輯數量';
-?>
+
+$lang["giftcards_add_minus"] = "加/減庫存";
+$lang["giftcards_allow_alt_description"] = "允許使用ALT描述";
+$lang["giftcards_amazon"] = "Amazon";
+$lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
+$lang["giftcards_basic_information"] = "禮金券資訊";
+$lang["giftcards_bulk_edit"] = "批量編輯";
+$lang["giftcards_cannot_be_deleted"] = "無法刪除選定的禮金券，一個或多個所選擇的禮金券已經使用。";
+$lang["giftcards_cannot_find_giftcard"] = "找不到禮金券的訊息";
+$lang["giftcards_card_value"] = "金額";
+$lang["giftcards_category"] = "類別";
+$lang["giftcards_change_all_to_allow_alt_desc"] = "充許全部ALT倒序";
+$lang["giftcards_change_all_to_not_allow_allow_desc"] = "不允許全部ALT倒序";
+$lang["giftcards_change_all_to_serialized"] = "全部更改序號至序列化";
+$lang["giftcards_change_all_to_unserialized"] = "全部更改序號至非序列化";
+$lang["giftcards_confirm_bulk_edit"] = "您確定您要編輯的所有選擇的禮金券嗎？";
+$lang["giftcards_confirm_delete"] = "你確定你要刪除選定的禮金券?";
+$lang["giftcards_cost_price"] = "成本價格";
+$lang["giftcards_count"] = "更新庫存";
+$lang["giftcards_current_quantity"] = "當前數量";
+$lang["giftcards_description"] = "描述";
+$lang["giftcards_details_count"] = "庫存盤點詳情";
+$lang["giftcards_do_nothing"] = "不做任何修改";
+$lang["giftcards_edit_fields_you_want_to_update"] = "編輯所有選定的禮金券中你想要編輯的資料";
+$lang["giftcards_edit_multiple_giftcards"] = "多重編輯";
+$lang["giftcards_error_adding_updating"] = "新增/更新禮金券錯誤";
+$lang["giftcards_error_updating_multiple"] = "禮金券更新錯誤";
+$lang["giftcards_excel_import_failed"] = "Excel匯入失敗";
+$lang["giftcards_generate_barcodes"] = "產生條碼";
+$lang["giftcards_giftcard"] = "禮金券";
+$lang["giftcards_giftcard_number"] = "禮金券編號";
+$lang["giftcards_info_provided_by"] = "提供信息的來源";
+$lang["giftcards_inventory_comments"] = "評論";
+$lang["giftcards_is_serialized"] = "禮金券序號";
+$lang["giftcards_low_inventory_giftcards"] = "禮金券庫存過低";
+$lang["giftcards_manually_editing_of_quantity"] = "手動編輯數量";
+$lang["giftcards_must_select_giftcard_for_barcode"] = "您必須選擇至少一個禮金券才能生成條形碼";
+$lang["giftcards_new"] = "新建禮金券";
+$lang["giftcards_no_description_giftcards"] = "沒有描述的禮金券";
+$lang["giftcards_no_giftcards_to_display"] = "沒有禮金券可以顯示";
+$lang["giftcards_none"] = "無";
+$lang["giftcards_none_selected"] = "您還沒有選擇任何禮金券進行編輯";
+$lang["giftcards_number"] = "禮金券編號需為數字";
+$lang["giftcards_number_information"] = "禮金券編號";
+$lang["giftcards_number_required"] = "請輸入禮金券編號";
+$lang["giftcards_one_or_multiple"] = "禮金券";
+$lang["giftcards_person_id"] = "Customer";
+$lang["giftcards_quantity"] = "數量";
+$lang["giftcards_quantity_required"] = "數量是必填字段。請按關閉（X）來取消";
+$lang["giftcards_reorder_level"] = "補貨點";
+$lang["giftcards_retrive_giftcard_info"] = "檢索禮金券訊息";
+$lang["giftcards_sales_tax_1"] = "銷售稅額 1";
+$lang["giftcards_sales_tax_2"] = "銷售稅額 2";
+$lang["giftcards_serialized_giftcards"] = "排序禮金券";
+$lang["giftcards_successful_adding"] = "新增禮金券成功";
+$lang["giftcards_successful_bulk_edit"] = "您已成功更新選定的禮品卡";
+$lang["giftcards_successful_deleted"] = "成功刪除禮金券";
+$lang["giftcards_successful_updating"] = "成功更新禮金券";
+$lang["giftcards_supplier"] = "供應商";
+$lang["giftcards_tax_1"] = "稅額 1";
+$lang["giftcards_tax_2"] = "稅額 2";
+$lang["giftcards_tax_percent"] = "稅率";
+$lang["giftcards_tax_percents"] = "稅率 Percent(s)";
+$lang["giftcards_unit_price"] = "單位價格";
+$lang["giftcards_upc_database"] = "UPC Database";
+$lang["giftcards_update"] = "更新禮金券";
+$lang["giftcards_use_inventory_menu"] = "使用庫存清單";
+$lang["giftcards_value"] = "禮金券金額需為數字";
+$lang["giftcards_value_required"] = "請輸入禮金券金額";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/index.html opensourcepos/application/language/zh/index.html
--- pos-prod/application/language/zh/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/index.html	2016-05-23 15:32:31.909839335 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/item_kits_lang.php opensourcepos/application/language/zh/item_kits_lang.php
--- pos-prod/application/language/zh/item_kits_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/item_kits_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,20 +1,21 @@
 <?php
-$lang['item_kits_name'] = '產品套件';
-$lang['item_kits_description'] = '產品套件描述';
-$lang['item_kits_no_item_kits_to_display'] = '沒有產品套件';
-$lang['item_kits_update'] = '更新產品套件';
-$lang['item_kits_new'] = '新增產品套件';
-$lang['item_kits_none_selected'] = "沒有選擇任何產品套件";
-$lang['item_kits_info'] = '產品套件資料';
-$lang['item_kits_successful_adding'] = '新增產品套件成功';
-$lang['item_kits_successful_updating'] = '更新產品套件成功';
-$lang['item_kits_error_adding_updating'] = '新增/更新產品套件錯誤';
-$lang['item_kits_successful_deleted'] = '刪除成功';
-$lang['item_kits_confirm_delete'] = '你確定你要刪除選取的產品套件嗎？';
-$lang['item_kits_one_or_multiple'] = '產品套件';
-$lang['item_kits_cannot_be_deleted'] = '無法刪除產品套件';
-$lang['item_kits_add_item'] = '新增套件';
-$lang['item_kits_items'] = '產品';
-$lang['item_kits_item'] = '產品';
-$lang['item_kits_quantity'] = '數量';
-?>
+
+$lang["item_kits_add_item"] = "新增套件";
+$lang["item_kits_cannot_be_deleted"] = "無法刪除產品套件";
+$lang["item_kits_confirm_delete"] = "你確定你要刪除選取的產品套件嗎？";
+$lang["item_kits_description"] = "產品套件描述";
+$lang["item_kits_error_adding_updating"] = "新增/更新產品套件錯誤";
+$lang["item_kits_info"] = "產品套件資料";
+$lang["item_kits_item"] = "產品";
+$lang["item_kits_items"] = "產品";
+$lang["item_kits_kit"] = "Kit Id";
+$lang["item_kits_name"] = "產品套件";
+$lang["item_kits_new"] = "新增產品套件";
+$lang["item_kits_no_item_kits_to_display"] = "沒有產品套件";
+$lang["item_kits_none_selected"] = "沒有選擇任何產品套件";
+$lang["item_kits_one_or_multiple"] = "產品套件";
+$lang["item_kits_quantity"] = "數量";
+$lang["item_kits_successful_adding"] = "新增產品套件成功";
+$lang["item_kits_successful_deleted"] = "刪除成功";
+$lang["item_kits_successful_updating"] = "更新產品套件成功";
+$lang["item_kits_update"] = "更新產品套件";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/items_lang.php opensourcepos/application/language/zh/items_lang.php
--- pos-prod/application/language/zh/items_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/items_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,81 +1,88 @@
 <?php
-$lang['items_item_number'] = 'UPC/EAN/ISBN';
-$lang['items_retrive_item_info'] = '檢索產品訊息';
-$lang['items_description'] = '描述';
-$lang['items_amazon'] = 'Amazon';
-$lang['items_upc_database'] = 'UPC Database';
-$lang['items_cannot_find_item'] = '無法找到任何有關的產品';
-$lang['items_info_provided_by'] = '訊息提供者';
-$lang['items_basic_information'] = '產品訊息';
-$lang['items_number_information'] = '產品編號';
-$lang['items_new'] = '新增產品';
-$lang['items_update'] = '更新產品';
-$lang['items_item'] = '產品';
-$lang['items_edit_multiple_items'] = '編輯多項產品';
-$lang['items_name'] = '產品名稱';
-$lang['items_category'] = '類別';
-$lang['items_cost_price'] = '成本價';
-$lang['items_unit_price'] = '單價';
-$lang['items_tax_1'] = '稅額 1';
-$lang['items_tax_2'] = '稅額 2';
-$lang['items_sales_tax_1'] = '營業稅';
-$lang['items_sales_tax_2'] = '營業稅 2';
-$lang['items_tax_percent'] = '稅率';
-$lang['items_tax_percents'] = '稅率 %';
-$lang['items_reorder_level'] = '補貨點';
-$lang['items_quantity'] = '數量';
-$lang['items_reorder_level'] = '補貨點';
-$lang['items_no_items_to_display'] = '沒有產品可以顯示';
-$lang['items_bulk_edit'] = '批次編輯';
-$lang['items_confirm_delete'] = '你確定你要刪除選定的產品嗎？';
-$lang['items_none_selected'] = '您還沒有選擇任何產品進行編輯';
-$lang['items_confirm_bulk_edit'] = '您確定您要編輯的所有選定的產品嗎？';
-$lang['items_successful_bulk_edit'] = '您已成功更新所選產品';
-$lang['items_error_updating_multiple'] = '更新產品錯誤';
-$lang['items_edit_fields_you_want_to_update'] = '編輯您選定產品的所有欄位';
-$lang['items_error_adding_updating'] = '新增/更新產品錯誤';
-$lang['items_successful_adding'] = '已成功新增產品';
-$lang['items_successful_updating'] = '已成功更新產品';
-$lang['items_successful_deleted'] = '刪除成功';
-$lang['items_one_or_multiple'] = '產品';
-$lang['items_cannot_be_deleted'] = '無法刪除選定產品，所選產品中的一個或多個有銷售紀綠。';
-$lang['items_name_required'] = '產品名稱為必填';
-$lang['items_category_required'] = '類別為必填欄位';
-$lang['items_buy_price_required'] = '進貨價為必填欄位';
-$lang['items_unit_price_required'] = '單價為必填欄位';
-$lang['items_cost_price_required'] = '成本價為必填攔位';
-$lang['items_tax_percent_required'] = '稅率為必填欄位';
-$lang['items_quantity_required'] = '數量為必填欄位';
-$lang['items_reorder_level_required'] = '補貨點為必填欄位';
-$lang['items_unit_price_number'] = '單價必需是數值';
-$lang['items_cost_price_number'] = '成本價必需是數值';
-$lang['items_quantity_number'] = '數量必需是數值';
-$lang['items_reorder_level_number'] = '補貨點必需是數值';
-$lang['items_none'] = '無';
-$lang['items_supplier'] = '供貨商';
-$lang['items_generate_barcodes'] = '產生條碼';
-$lang['items_must_select_item_for_barcode'] = '您必須至少選擇一個產品生才能產生條碼';
-$lang['items_excel_import_failed'] = 'Excel匯入失敗';
-$lang['items_allow_alt_description'] = '允許ALT描述';
-$lang['items_is_serialized'] = '產品有序號';
-$lang['items_low_inventory_items'] = '低庫存產品';
-$lang['items_serialized_items'] = '序列化產品';
-$lang['items_no_description_items'] = '產品沒有說明';
-$lang['items_search_custom_items'] = 'Search Custom Fields';//GARRISON ADDED
-$lang['items_inventory_comments'] = '評論';
-$lang['items_count'] = '更新庫存';
-$lang['items_details_count'] = '庫存盤點詳情';
-$lang['items_add_minus'] = '增/減庫存';
-$lang['items_current_quantity'] = '當前數量';
-$lang['items_quantity_required'] = '數量是必填欄位。請關閉（X）來取消';
-$lang['items_do_nothing'] = '沒有執行任何修改';
-$lang['items_change_all_to_serialized'] = '全部更改序號至序列化';
-$lang['items_change_all_to_unserialized'] = '全部更改序號至非序列化';
-$lang['items_change_all_to_allow_alt_desc'] = ' 充許全部ALT倒序';
-$lang['items_change_all_to_not_allow_allow_desc'] = '不允許全部ALT倒序';
-$lang['items_use_inventory_menu'] = '使用庫存清單';
-$lang['items_manually_editing_of_quantity'] = '手動編輯數量';
-$lang['items_inventory'] = '庫存';
-$lang['items_location'] = '位置';
-$lang['items_is_deleted'] = 'Deleted';// Parq 131215
-?>
+
+$lang["items_add_minus"] = "增/減庫存";
+$lang["items_allow_alt_desciption"] = "";
+$lang["items_allow_alt_description"] = "允許ALT描述";
+$lang["items_amazon"] = "Amazon";
+$lang["items_basic_information"] = "產品訊息";
+$lang["items_bulk_edit"] = "批次編輯";
+$lang["items_buy_price_required"] = "進貨價為必填欄位";
+$lang["items_cannot_be_deleted"] = "無法刪除選定產品，所選產品中的一個或多個有銷售紀綠。";
+$lang["items_cannot_find_item"] = "無法找到任何有關的產品";
+$lang["items_category"] = "類別";
+$lang["items_category_required"] = "類別為必填欄位";
+$lang["items_change_all_to_allow_alt_desc"] = " 充許全部ALT倒序";
+$lang["items_change_all_to_not_allow_allow_desc"] = "不允許全部ALT倒序";
+$lang["items_change_all_to_serialized"] = "全部更改序號至序列化";
+$lang["items_change_all_to_unserialized"] = "全部更改序號至非序列化";
+$lang["items_confirm_bulk_edit"] = "您確定您要編輯的所有選定的產品嗎？";
+$lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
+$lang["items_confirm_delete"] = "你確定你要刪除選定的產品嗎？";
+$lang["items_cost_price"] = "成本價";
+$lang["items_cost_price_number"] = "成本價必需是數值";
+$lang["items_cost_price_required"] = "成本價為必填攔位";
+$lang["items_count"] = "更新庫存";
+$lang["items_current_quantity"] = "當前數量";
+$lang["items_description"] = "描述";
+$lang["items_details_count"] = "庫存盤點詳情";
+$lang["items_do_nothing"] = "沒有執行任何修改";
+$lang["items_edit_fields_you_want_to_update"] = "編輯您選定產品的所有欄位";
+$lang["items_edit_multiple_items"] = "編輯多項產品";
+$lang["items_error_adding_updating"] = "新增/更新產品錯誤";
+$lang["items_error_updating_multiple"] = "更新產品錯誤";
+$lang["items_excel_import_failed"] = "Excel匯入失敗";
+$lang["items_generate_barcodes"] = "產生條碼";
+$lang["items_image"] = "Avatar";
+$lang["items_info_provided_by"] = "訊息提供者";
+$lang["items_inventory"] = "庫存";
+$lang["items_inventory_comments"] = "評論";
+$lang["items_is_deleted"] = "Deleted";
+$lang["items_is_serialized"] = "產品有序號";
+$lang["items_item"] = "產品";
+$lang["items_item_number"] = "UPC/EAN/ISBN";
+$lang["items_item_number_duplicate"] = "The item number is already present in the database";
+$lang["items_location"] = "位置";
+$lang["items_empty_upc_items"] = "Empty UPC Items";
+$lang["items_low_inventory_items"] = "低庫存產品";
+$lang["items_manually_editing_of_quantity"] = "手動編輯數量";
+$lang["items_must_select_item_for_barcode"] = "您必須至少選擇一個產品生才能產生條碼";
+$lang["items_name"] = "產品名稱";
+$lang["items_name_required"] = "產品名稱為必填";
+$lang["items_new"] = "新增產品";
+$lang["items_no_description_items"] = "產品沒有說明";
+$lang["items_no_items_to_display"] = "沒有產品可以顯示";
+$lang["items_none"] = "無";
+$lang["items_none_selected"] = "您還沒有選擇任何產品進行編輯";
+$lang["items_number_information"] = "產品編號";
+$lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
+$lang["items_one_or_multiple"] = "產品";
+$lang["items_quantity"] = "數量";
+$lang["items_quantity_number"] = "數量必需是數值";
+$lang["items_quantity_required"] = "數量為必填欄位";
+$lang["items_receiving_quantity"] = "Receiving quantity";
+$lang["items_reorder_level"] = "補貨點";
+$lang["items_reorder_level_number"] = "補貨點必需是數值";
+$lang["items_reorder_level_required"] = "補貨點為必填欄位";
+$lang["items_retrive_item_info"] = "檢索產品訊息";
+$lang["items_sales_tax_1"] = "營業稅";
+$lang["items_sales_tax_2"] = "營業稅 2";
+$lang["items_search_custom_items"] = "Search Custom Fields";
+$lang["items_serialized_items"] = "序列化產品";
+$lang["items_stock_location"] = "Stock location";
+$lang["items_successful_adding"] = "已成功新增產品";
+$lang["items_successful_bulk_edit"] = "您已成功更新所選產品";
+$lang["items_successful_deleted"] = "刪除成功";
+$lang["items_successful_updating"] = "已成功更新產品";
+$lang["items_supplier"] = "供貨商";
+$lang["items_tax_1"] = "稅額 1";
+$lang["items_tax_2"] = "稅額 2";
+$lang["items_tax_percent"] = "稅率";
+$lang["items_tax_percent_required"] = "稅率為必填欄位";
+$lang["items_tax_percents"] = "稅率 %";
+$lang["items_unit_price"] = "單價";
+$lang["items_unit_price_number"] = "單價必需是數值";
+$lang["items_unit_price_required"] = "單價為必填欄位";
+$lang["items_upc_database"] = "UPC Database";
+$lang["items_update"] = "更新產品";
+$lang["items_use_inventory_menu"] = "使用庫存清單";
+$lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/login_lang.php opensourcepos/application/language/zh/login_lang.php
--- pos-prod/application/language/zh/login_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/login_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,8 +1,8 @@
 <?php
-$lang['login_login'] = '登入';
-$lang['login_username'] = '帳號';
-$lang['login_password'] = '密碼';
-$lang['login_go'] = '登入';
-$lang['login_invalid_username_and_password'] = '錯誤的帳號或密碼';
-$lang['login_welcome_message'] = '歡迎使用Master6進銷存。若要繼續，請使用您的帳號和密碼登錄。';
-?>
+
+$lang["login_go"] = "登入";
+$lang["login_invalid_username_and_password"] = "錯誤的帳號或密碼";
+$lang["login_login"] = "登入";
+$lang["login_password"] = "密碼";
+$lang["login_username"] = "帳號";
+$lang["login_welcome_message"] = "歡迎使用Master6進銷存。若要繼續，請使用您的帳號和密碼登錄。";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/module_lang.php opensourcepos/application/language/zh/module_lang.php
--- pos-prod/application/language/zh/module_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/module_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,34 +1,23 @@
 <?php
-$lang['module_home'] = '首頁';
 
-$lang['module_customers'] = '客戶';
-$lang['module_customers_desc'] = '添加，更新，刪除，搜索客戶';
-
-$lang['module_suppliers'] = '供應商';
-$lang['module_suppliers_desc'] = '添加，更新，刪除，搜索供應商';
-
-$lang['module_employees'] = '員工';
-$lang['module_employees_desc'] = '添加，更新，刪除，搜索員工';
-
-$lang['module_sales'] = '出貨';
-$lang['module_sales_desc'] = '出貨與退貨';
-
-$lang['module_reports'] = '報表';
-$lang['module_reports_desc'] = '檢視與產生報表';
-
-$lang['module_items'] = '產品';
-$lang['module_items_desc'] = '添加，更新，刪除，搜索產品';
-
-$lang['module_config'] = '系統配置';
-$lang['module_config_desc'] = '修改系統配置';
-
-$lang['module_receivings'] = '進貨';
-$lang['module_receivings_desc'] = '採購訂單流程';
-
-$lang['module_giftcards'] = '禮金券';
-$lang['module_giftcards_desc'] = '添加，更新，刪除，搜索禮金券';
-
-$lang['module_item_kits'] = '產品套件';
-$lang['module_item_kits_desc'] = '添加，更新，刪除，搜索產品套件';
-
-?>
+$lang["module_config"] = "系統配置";
+$lang["module_config_desc"] = "修改系統配置";
+$lang["module_customers"] = "客戶";
+$lang["module_customers_desc"] = "添加，更新，刪除，搜索客戶";
+$lang["module_employees"] = "員工";
+$lang["module_employees_desc"] = "添加，更新，刪除，搜索員工";
+$lang["module_giftcards"] = "禮金券";
+$lang["module_giftcards_desc"] = "添加，更新，刪除，搜索禮金券";
+$lang["module_home"] = "首頁";
+$lang["module_item_kits"] = "產品套件";
+$lang["module_item_kits_desc"] = "添加，更新，刪除，搜索產品套件";
+$lang["module_items"] = "產品";
+$lang["module_items_desc"] = "添加，更新，刪除，搜索產品";
+$lang["module_receivings"] = "進貨";
+$lang["module_receivings_desc"] = "採購訂單流程";
+$lang["module_reports"] = "報表";
+$lang["module_reports_desc"] = "檢視與產生報表";
+$lang["module_sales"] = "出貨";
+$lang["module_sales_desc"] = "出貨與退貨";
+$lang["module_suppliers"] = "供應商";
+$lang["module_suppliers_desc"] = "添加，更新，刪除，搜索供應商";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/receivings_lang.php opensourcepos/application/language/zh/receivings_lang.php
--- pos-prod/application/language/zh/receivings_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/receivings_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,26 +1,51 @@
 <?php
-$lang['recvs_register'] = '產品進貨';
-$lang['recvs_mode'] = '進貨模式';
-$lang['recvs_receiving'] = '收貨';
-$lang['recvs_return'] = '退貨';
-$lang['recvs_total'] = '總數量';
-$lang['recvs_cost'] = '成本';
-$lang['recvs_quantity'] = '數量.';
-$lang['recvs_discount'] = '折古 %';
-$lang['recvs_edit'] = '編輯';
-$lang['recvs_new_supplier'] = '新供應商';
-$lang['recvs_supplier'] = '供應商';
-$lang['recvs_select_supplier'] = '選擇供應商 (Optional)';
-$lang['recvs_start_typing_supplier_name'] = '開始輸入供應商名稱...';
-$lang['recvs_unable_to_add_item'] = '無法新增進貨資料';
-$lang['recvs_error_editing_item'] = '產品編輯錯誤';
-$lang['recvs_receipt'] = '收貨憑證';
-$lang['recvs_complete_receiving'] = '完成';
-$lang['recvs_confirm_finish_receiving'] = '您確定要提交此進貨資料嗎？一旦送出將不能撤消。';
-$lang['recvs_confirm_cancel_receiving'] = '您確定要刪除此進貨資料嗎？本資料中所有的產品資料也將會被清空。';
-$lang['recvs_find_or_scan_item'] = '查找 / 掃描產品';
-$lang['recvs_find_or_scan_item_or_receipt'] = '查找 / 掃描產品或收據';
-$lang['recvs_id'] = '進貨編號';
-$lang['recvs_item_name'] = '產品名稱';
-$lang['receivings_transaction_failed'] = '進貨交易失敗';
-?>
+
+$lang["receivings_transaction_failed"] = "進貨交易失敗";
+$lang["recvs_basic_information"] = "";
+$lang["recvs_cancel_receiving"] = "";
+$lang["recvs_cannot_be_deleted"] = "";
+$lang["recvs_comments"] = "";
+$lang["recvs_complete_receiving"] = "完成";
+$lang["recvs_confirm_cancel_receiving"] = "您確定要刪除此進貨資料嗎？本資料中所有的產品資料也將會被清空。";
+$lang["recvs_confirm_finish_receiving"] = "您確定要提交此進貨資料嗎？一旦送出將不能撤消。";
+$lang["recvs_cost"] = "成本";
+$lang["recvs_date"] = "";
+$lang["recvs_date_required"] = "";
+$lang["recvs_date_type"] = "";
+$lang["recvs_delete_confirmation"] = "";
+$lang["recvs_delete_entire_sale"] = "Delete entire sale";
+$lang["recvs_discount"] = "折古 %";
+$lang["recvs_edit"] = "編輯";
+$lang["recvs_edit_sale"] = "Edit Receiving";
+$lang["recvs_employee"] = "Employee";
+$lang["recvs_error_editing_item"] = "產品編輯錯誤";
+$lang["recvs_error_requisition"] = "";
+$lang["recvs_find_or_scan_item"] = "查找 / 掃描產品";
+$lang["recvs_find_or_scan_item_or_receipt"] = "查找 / 掃描產品或收據";
+$lang["recvs_id"] = "進貨編號";
+$lang["recvs_invoice_enable"] = "Create Invoice";
+$lang["recvs_invoice_number"] = "";
+$lang["recvs_invoice_number_duplicate"] = "";
+$lang["recvs_item_name"] = "產品名稱";
+$lang["recvs_mode"] = "進貨模式";
+$lang["recvs_new_supplier"] = "新供應商";
+$lang["recvs_one_or_multiple"] = "";
+$lang["recvs_print_after_sale"] = "出貨時打印收據";
+$lang["recvs_quantity"] = "數量.";
+$lang["recvs_receipt"] = "收貨憑證";
+$lang["recvs_receipt_number"] = "";
+$lang["recvs_receiving"] = "收貨";
+$lang["recvs_register"] = "產品進貨";
+$lang["recvs_requisition"] = "";
+$lang["recvs_return"] = "退貨";
+$lang["recvs_select_supplier"] = "選擇供應商 (Optional)";
+$lang["recvs_start_typing_supplier_name"] = "開始輸入供應商名稱...";
+$lang["recvs_stock_destination"] = "Stock destination";
+$lang["recvs_stock_locaiton"] = "Stock location";
+$lang["recvs_stock_source"] = "Stock source";
+$lang["recvs_successfully_deleted"] = "You have successfully deleted";
+$lang["recvs_successfully_updated"] = "Receiving successfully updated";
+$lang["recvs_supplier"] = "供應商";
+$lang["recvs_total"] = "總數量";
+$lang["recvs_unable_to_add_item"] = "無法新增進貨資料";
+$lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/reports_lang.php opensourcepos/application/language/zh/reports_lang.php
--- pos-prod/application/language/zh/reports_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/reports_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,88 +1,108 @@
 <?php
-$lang['reports_reports'] = '報表';
-$lang['reports_report'] = '報表';
-$lang['reports_welcome_message'] = '歡迎使用報表系統。請選擇要查看的報表。';
-$lang['reports_sales_summary_report'] = '銷售摘要報告';
-$lang['reports_categories_summary_report'] = '分類摘要報告';
-$lang['reports_customers_summary_report'] = '客戶摘要報告';
-$lang['reports_suppliers_summary_report'] = '供應商摘要報告';
-$lang['reports_items_summary_report'] = '產品摘要報告';
-$lang['reports_employees_summary_report'] = '員工摘要報告';
-$lang['reports_taxes_summary_report'] = '稅金摘要報告';
-$lang['reports_date'] = '日期';
-$lang['reports_name'] = '名稱';
-$lang['reports_quantity_purchased'] = '銷售金額';
-$lang['reports_sale_id'] = '銷售編號';
-$lang['reports_items_purchased'] = '銷售產品';
-$lang['reports_sold_by'] = '銷售人';
-$lang['reports_sold_to'] = '購買人';
-$lang['reports_category'] = '類別';
-$lang['reports_customer'] = '客戶';
-$lang['reports_employee'] = '員工';
-$lang['reports_item'] = '產品';
-$lang['reports_items'] = '產品';
-$lang['reports_supplier'] = '供應商';
-$lang['reports_employees'] = '員工';
-$lang['reports_subtotal'] = '小計';
-$lang['reports_total'] = '總計';
-$lang['reports_tax'] = '稅額';
-$lang['reports_profit'] = '利潤';
-$lang['reports_report_input'] = '輸入報表';
-$lang['reports_type'] = '類型';
-$lang['reports_date_range'] = '日期範圍';
-$lang['reports_today'] = '今天';
-$lang['reports_yesterday'] = '昨天';
-$lang['reports_last_7'] = '過去七天';
-$lang['reports_this_month'] = '這個月';
-$lang['reports_last_month'] = '上個月';
-$lang['reports_this_year'] = '今年';
-$lang['reports_last_year'] = '去年';
-$lang['reports_all_time'] = '全部';
-$lang['reports_detailed_sales_report'] = '詳細銷售報表';
-$lang['reports_comments'] = '評論';
-$lang['reports_discount'] = '折扣';
-$lang['reports_payment_type'] = '付款方式';
-$lang['reports_sales'] = '銷售';
-$lang['reports_categories'] = '類別';
-$lang['reports_customers'] = '客戶';
-$lang['reports_suppliers'] = '供應商';
-$lang['reports_items'] = '產品';
-$lang['reports_employees'] = '員工';
-$lang['reports_taxes'] = '稅額';
-$lang['reports_customer'] = '客戶';
-$lang['reports_employee'] = '員工';
-$lang['reports_tax_percent'] = '稅率';
-$lang['reports_quantity_purchased'] = '購買數量';
-$lang['reports_serial_number'] = '序號 #';
-$lang['reports_description'] = '描述';
-$lang['reports_date'] = '日期';
-$lang['reports_sales_amount'] = '總銷售額';
-$lang['reports_revenue'] = '收入';
-$lang['reports_discounts'] = '折扣';
-$lang['reports_discounts_summary_report'] = '折扣摘要報告';
-$lang['reports_discount_percent'] = '折扣率';
-$lang['reports_count'] = '計';
-$lang['reports_summary_reports'] = '摘要報表';
-$lang['reports_graphical_reports'] = '圖表';
-$lang['reports_detailed_reports'] = '詳細報表';
-$lang['reports_inventory_reports'] = '庫存報告';
-$lang['reports_low_inventory'] = '低庫存';
-$lang['reports_inventory_summary'] = ' 庫存摘要';
-$lang['reports_item_number'] = '產品數量';
-$lang['reports_reorder_level'] = '補貨點';
-$lang['reports_low_inventory_report'] = '低庫存報告';
-$lang['reports_item_name'] = '產品名稱';
-$lang['reports_inventory_summary_report'] = '庫存報告摘要';
-$lang['reports_payment_type'] = '付款模式';
-$lang['reports_payments_summary_report'] = '收入報告摘要';
-$lang['reports_payments'] = '付款';
-$lang['reports_receivings'] = '應付款';
-$lang['reports_received_by'] = '收款人';
-$lang['reports_supplied_by'] = '付款人';
-$lang['reports_items_received'] = '進貨產品';
-$lang['reports_detailed_receivings_report'] = '詳細的進貨報告';
-$lang['reports_sale_type'] = '銷售類型';
-$lang['reports_all'] = '全部';
-$lang['reports_returns'] = '返回';
-$lang['reports_discount'] = 'A discount greater than ';
-?>
+
+$lang["reports_all"] = "全部";
+$lang["reports_all_time"] = "全部";
+$lang["reports_categories"] = "類別";
+$lang["reports_categories_summary_report"] = "分類摘要報告";
+$lang["reports_category"] = "類別";
+$lang["reports_comments"] = "評論";
+$lang["reports_count"] = "計";
+$lang["reports_customer"] = "客戶";
+$lang["reports_customers"] = "客戶";
+$lang["reports_customers_summary_report"] = "客戶摘要報告";
+$lang["reports_date"] = "日期";
+$lang["reports_date_range"] = "日期範圍";
+$lang["reports_description"] = "描述";
+$lang["reports_detailed_receivings_report"] = "詳細的進貨報告";
+$lang["reports_detailed_reports"] = "詳細報表";
+$lang["reports_detailed_requisition_report"] = "";
+$lang["reports_detailed_sales_report"] = "詳細銷售報表";
+$lang["reports_discount"] = "折扣";
+$lang["reports_discount_percent"] = "折扣率";
+$lang["reports_discounts"] = "折扣";
+$lang["reports_discounts_summary_report"] = "折扣摘要報告";
+$lang["reports_employee"] = "員工";
+$lang["reports_employees"] = "員工";
+$lang["reports_employees_summary_report"] = "員工摘要報告";
+$lang["reports_graphical_reports"] = "圖表";
+$lang["reports_inventory"] = "";
+$lang["reports_inventory_low"] = "低庫存";
+$lang["reports_inventory_low_report"] = "低庫存報告";
+$lang["reports_inventory_reports"] = "庫存報告";
+$lang["reports_inventory_summary"] = " 庫存摘要";
+$lang["reports_inventory_summary_report"] = "庫存報告摘要";
+$lang["reports_item"] = "產品";
+$lang["reports_item_name"] = "產品名稱";
+$lang["reports_item_number"] = "產品數量";
+$lang["reports_items"] = "產品";
+$lang["reports_items_purchased"] = "銷售產品";
+$lang["reports_items_received"] = "進貨產品";
+$lang["reports_items_summary_report"] = "產品摘要報告";
+$lang["reports_last_7"] = "過去七天";
+$lang["reports_last_month"] = "上個月";
+$lang["reports_last_year"] = "去年";
+$lang["reports_low_inventory"] = "";
+$lang["reports_low_inventory_report"] = "";
+$lang["reports_name"] = "名稱";
+$lang["reports_payment_type"] = "付款方式";
+$lang["reports_payments"] = "付款";
+$lang["reports_payments_summary_report"] = "收入報告摘要";
+$lang["reports_profit"] = "利潤";
+$lang["reports_cost"] = "Cost";
+$lang["reports_quantity_purchased"] = "銷售金額";
+$lang["reports_received_by"] = "收款人";
+$lang["reports_receiving_id"] = "";
+$lang["reports_receiving_type"] = "";
+$lang["reports_receivings"] = "應付款";
+$lang["reports_reorder_level"] = "補貨點";
+$lang["reports_report"] = "報表";
+$lang["reports_report_input"] = "輸入報表";
+$lang["reports_reports"] = "報表";
+$lang["reports_requisition"] = "";
+$lang["reports_requisition_by"] = "";
+$lang["reports_requisition_id"] = "";
+$lang["reports_requisition_item"] = "";
+$lang["reports_requisition_item_quantity"] = "";
+$lang["reports_requisition_related_item"] = "";
+$lang["reports_requisition_related_item_total_quantity"] = "";
+$lang["reports_requisition_related_item_unit_quantity"] = "";
+$lang["reports_requisitions"] = "";
+$lang["reports_returns"] = "返回";
+$lang["reports_revenue"] = "收入";
+$lang["reports_sale_id"] = "銷售編號";
+$lang["reports_sale_type"] = "銷售類型";
+$lang["reports_sales"] = "銷售";
+$lang["reports_sales_amount"] = "總銷售額";
+$lang["reports_sales_summary_report"] = "銷售摘要報告";
+$lang["reports_serial_number"] = "序號 #";
+$lang["reports_sold_by"] = "銷售人";
+$lang["reports_sold_to"] = "購買人";
+$lang["reports_stock_location"] = "";
+$lang["reports_subtotal"] = "小計";
+$lang["reports_summary_reports"] = "摘要報表";
+$lang["reports_supplied_by"] = "付款人";
+$lang["reports_supplier"] = "供應商";
+$lang["reports_suppliers"] = "供應商";
+$lang["reports_suppliers_summary_report"] = "供應商摘要報告";
+$lang["reports_tax"] = "稅額";
+$lang["reports_tax_percent"] = "稅率";
+$lang["reports_taxes"] = "稅額";
+$lang["reports_taxes_summary_report"] = "稅金摘要報告";
+$lang["reports_this_month"] = "這個月";
+$lang["reports_this_month_last_year"] = "This Month Last Year";
+$lang["reports_this_month_to_today"] = "This Month To Today";
+$lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
+$lang["reports_this_year"] = "今年";
+$lang["reports_today"] = "今天";
+$lang["reports_today_last_year"] = "Today Last Year";
+$lang["reports_total"] = "總計";
+$lang["reports_type"] = "類型";
+$lang["reports_welcome_message"] = "歡迎使用報表系統。請選擇要查看的報表。";
+$lang["reports_yesterday"] = "昨天";
+$lang["reports_item_count"] = "Filter Item Count";
+$lang["reports_cost_price"] = "成本價";
+$lang["reports_unit_price"] = "單價";
+$lang["reports_sub_total_value"] = "小計";
+$lang["reports_total_inventory_value"] = "Total Inventory Value";
+$lang["reports_zero_and_less"] = "Zero and less";
+$lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/sales_lang.php opensourcepos/application/language/zh/sales_lang.php
--- pos-prod/application/language/zh/sales_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/sales_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,86 +1,117 @@
 <?php
-$lang['sales_giftcard_number'] = '禮金券編號';
-$lang['sales_giftcard'] = '禮金券';
-$lang['sales_register'] = '銷售登記';
-$lang['sales_mode'] = '登記模式';
-$lang['sales_new_item'] = '新增產品';
-$lang['sales_item_name'] = '產品名稱';
-$lang['sales_item_number'] = '產品 #';
-$lang['sales_new_customer'] = '新客戶';
-$lang['sales_customer'] = '客戶';
-$lang['sales_no_items_in_cart'] = '購物車中沒有任何產品';
-$lang['sales_total'] = '總計';
-$lang['sales_tax_percent'] = '稅率 %';
-$lang['sales_price'] = '價格';
-$lang['sales_quantity'] = '數量.';
-$lang['sales_discount'] = '折扣 %';
-$lang['sales_edit'] = '編輯';
-$lang['sales_payment'] = '付款方式';
-$lang['sales_edit_item'] = '編輯產品';
-$lang['sales_find_or_scan_item'] = '查找/掃描商品';
-$lang['sales_find_or_scan_item_or_receipt'] = '查找/掃描產品或收貨單';
-$lang['sales_select_customer'] = '選擇客戶 (Optional)';
-$lang['sales_start_typing_item_name'] = '開始輸入產品名或掃描條碼...';
-$lang['sales_start_typing_customer_name'] = '開始輸入客戶的名字';
-$lang['sales_sub_total'] = '小計';
-$lang['sales_tax'] = '稅額';
-$lang['sales_comment'] = '評論';
-$lang['sales_unable_to_add_item'] = '無法增加出售產品';
-$lang['sales_sale_for_customer'] = '客戶:';
-$lang['sales_remove_customer'] = '移除客戶';
-$lang['sales_error_editing_item'] = '編輯產品錯誤';
-$lang['sales_complete_sale'] = '完成銷售';
-$lang['sales_cancel_sale'] = '取消銷售';
-$lang['sales_add_payment'] = '新增付款';
-$lang['sales_receipt'] = '銷貨單';
-$lang['sales_receipt_number']='POS #';
-$lang['sales_id'] = '銷售編號';
-$lang['sales_sale'] = '銷售';
-$lang['sales_return'] = '退貨';
-$lang['sales_confirm_finish_sale'] = '你確定要提交銷售單？此動作不能撤消。';
-$lang['sales_confirm_cancel_sale'] = '你確定要清除此筆銷售單？本單內的所有產品將被清除。';
-$lang['sales_cash'] = '現金';
-$lang['sales_check'] = '支票';
-$lang['sales_debit'] = '簽帳卡';
-$lang['sales_credit'] = '信用卡';
-$lang['sales_giftcard'] = '禮金券';
-$lang['sales_amount_tendered'] = '已收帳款';
-$lang['sales_change_due'] = '更改到期日';
-$lang['sales_payment_not_cover_total'] = '付款金額不足';
-$lang['sales_transaction_failed'] = '銷售交易失敗';
-$lang['sales_must_enter_numeric'] = '已收帳款必須輸入數值';
-$lang['sales_must_enter_numeric_giftcard'] = '禮金券編號必須輸入數值';
-$lang['sales_serial'] = '序號';
-$lang['sales_description_abbrv'] = '倒序';
-$lang['sales_item_out_of_stock'] = '產品缺貨';
-$lang['sales_item_insufficient_of_stock'] = '產品庫存不足';
-$lang['sales_quantity_less_than_zero'] = '警告！產品的庫存數量是不足的。您仍然可以處理銷售，但檢查您的庫存';
-$lang['sales_successfully_updated'] = '銷售資料成功更新';
-$lang['sales_unsuccessfully_updated'] = '銷售資料更新失敗';
-$lang['sales_edit_sale'] = '編輯銷售資料';
-$lang['sales_employee'] = '員工';
-$lang['sales_successfully_deleted'] = '銷售資料成功刪除';
-$lang['sales_unsuccessfully_deleted'] = '銷售資料刪除失敗';
-$lang['sales_delete_entire_sale'] = '刪除全部銷售資料';
-$lang['sales_delete_confirmation'] = '你確定要刪除此銷售資料，這個動作不能撤消';
-$lang['sales_delete_successful'] = '您已成功刪除銷售資料';
-$lang['sales_delete_unsuccessful'] = '銷售資料刪除失敗';
-$lang['sales_suspend_sale'] = '暫停銷售';
-$lang['sales_confirm_suspend_sale'] = '你確定要暫停銷售？';
-$lang['sales_suspended_sales'] = '已暫停銷售';
-$lang['sales_suspended_sale_id'] = '暫停銷售編號';
-$lang['sales_date'] = '日期';
-$lang['sales_comments'] = '評論';
-$lang['sales_unsuspend_and_delete'] = '取消暫停銷售並刪除';
-$lang['sales_unsuspend'] = '取消暫停銷售';
-$lang['sales_successfully_suspended_sale'] = '本銷售資料已經成功暫停';
-$lang['sales_email_receipt'] = 'E-Mail 銷售單';
-$lang['sales_discount_short']='%';
-$lang["sales_discount_included"]='% Discount';
-$lang['sales_sale_time']='Time';
-$lang['sales_payments_total'] = 'Payments Total';
-$lang['sales_amount_due'] = 'Amount Due';
-$lang['sales_payment_type'] = "Type";
-$lang['sales_payment_amount'] = "Amount";
-$lang['sales_basic_information']='Sale information';
-?>
+
+$lang["sales_add_payment"] = "新增付款";
+$lang["sales_amount_due"] = "Amount Due";
+$lang["sales_amount_tendered"] = "已收帳款";
+$lang["sales_basic_information"] = "Sale information";
+$lang["sales_cancel_sale"] = "取消銷售";
+$lang["sales_cash"] = "現金";
+$lang["sales_change_due"] = "更改到期日";
+$lang["sales_check"] = "支票";
+$lang["sales_check_balance"] = "Check remainder";
+$lang["sales_comment"] = "評論";
+$lang["sales_comments"] = "評論";
+$lang["sales_complete_sale"] = "完成銷售";
+$lang["sales_confirm_cancel_sale"] = "你確定要清除此筆銷售單？本單內的所有產品將被清除。";
+$lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
+$lang["sales_confirm_finish_sale"] = "你確定要提交銷售單？此動作不能撤消。";
+$lang["sales_confirm_suspend_sale"] = "你確定要暫停銷售？";
+$lang["sales_credit"] = "信用卡";
+$lang["sales_customer"] = "客戶";
+$lang["sales_date"] = "日期";
+$lang["sales_date_required"] = "A correct date needs to be filled in";
+$lang["sales_date_type"] = "Date field is required";
+$lang["sales_debit"] = "簽帳卡";
+$lang["sales_delete_confirmation"] = "你確定要刪除此銷售資料，這個動作不能撤消";
+$lang["sales_delete_entire_sale"] = "刪除全部銷售資料";
+$lang["sales_delete_successful"] = "您已成功刪除銷售資料";
+$lang["sales_delete_unsuccessful"] = "銷售資料刪除失敗";
+$lang["sales_description_abbrv"] = "倒序";
+$lang["sales_discount"] = "折扣 %";
+$lang["sales_discount_included"] = "% Discount";
+$lang["sales_discount"] = "Discount";
+$lang["sales_discount_short"] = "%";
+$lang["sales_edit"] = "編輯";
+$lang["sales_edit_item"] = "編輯產品";
+$lang["sales_edit_sale"] = "編輯銷售資料";
+$lang["sales_email_receipt"] = "E-Mail 銷售單";
+$lang["sales_employee"] = "員工";
+$lang["sales_error_editing_item"] = "編輯產品錯誤";
+$lang["sales_find_or_scan_item"] = "查找/掃描商品";
+$lang["sales_find_or_scan_item_or_receipt"] = "查找/掃描產品或收貨單";
+$lang["sales_giftcard"] = "禮金券";
+$lang["sales_giftcard_balance"] = "Giftcard Balance";
+$lang["sales_giftcard_number"] = "禮金券編號";
+$lang["sales_id"] = "銷售編號";
+$lang["sales_invoice"] = "Invoice";
+$lang["sales_invoice_confirm"] = "This invoice will be sent to";
+$lang["sales_invoice_enable"] = "Create Invoice";
+$lang["sales_invoice_filter"] = "Invoices";
+$lang["sales_cash_filter"] = "Cash";
+$lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
+$lang["sales_invoice_number"] = "Invoice #";
+$lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
+$lang["sales_invoice_sent"] = "Invoice sent to";
+$lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
+$lang["sales_invoice_update"] = "Recount";
+$lang["sales_item_insufficient_of_stock"] = "產品庫存不足";
+$lang["sales_item_name"] = "產品名稱";
+$lang["sales_item_number"] = "產品 #";
+$lang["sales_item_out_of_stock"] = "產品缺貨";
+$lang["sales_mode"] = "登記模式";
+$lang["sales_must_enter_numeric"] = "已收帳款必須輸入數值";
+$lang["sales_must_enter_numeric_giftcard"] = "禮金券編號必須輸入數值";
+$lang["sales_new_customer"] = "新客戶";
+$lang["sales_new_item"] = "新增產品";
+$lang["sales_no_description"] = "None";
+$lang["sales_no_filter"] = "All";
+$lang["sales_no_items_in_cart"] = "購物車中沒有任何產品";
+$lang["sales_no_sales_to_display"] = "No sales to display";
+$lang["sales_one_or_multiple"] = "";
+$lang["sales_takings"] = "Takings";
+$lang["sales_payment"] = "付款方式";
+$lang["sales_payment_amount"] = "Amount";
+$lang["sales_payment_not_cover_total"] = "付款金額不足";
+$lang["sales_payment_type"] = "Type";
+$lang["sales_payments_total"] = "Payments Total";
+$lang["sales_price"] = "價格";
+$lang["sales_print_after_sale"] = "出貨時打印收據";
+$lang["sales_quantity"] = "數量.";
+$lang["sales_quantity_less_than_zero"] = "警告！產品的庫存數量是不足的。您仍然可以處理銷售，但檢查您的庫存";
+$lang["sales_quantity_less_than_reorder_level"] = "警告！產品的庫存數量是不足的。您仍然可以處理銷售，但檢查您的庫存";
+$lang["sales_receipt"] = "銷貨單";
+$lang["sales_receipt_number"] = "POS #";
+$lang["sales_register"] = "銷售登記";
+$lang["sales_remove_customer"] = "移除客戶";
+$lang["sales_return"] = "退貨";
+$lang["sales_sale"] = "銷售";
+$lang["sales_sale_for_customer"] = "客戶:";
+$lang["sales_sale_time"] = "Time";
+$lang["sales_select_customer"] = "選擇客戶 (Optional)";
+$lang["sales_send_invoice"] = "Send Invoice";
+$lang["sales_serial"] = "序號";
+$lang["sales_show_invoice"] = "invoice";
+$lang["sales_show_receipt"] = "receipt";
+$lang["sales_start_typing_customer_name"] = "開始輸入客戶的名字";
+$lang["sales_start_typing_item_name"] = "開始輸入產品名或掃描條碼...";
+$lang["sales_stock_location"] = "";
+$lang["sales_sub_total"] = "小計";
+$lang["sales_successfully_deleted"] = "銷售資料成功刪除";
+$lang["sales_successfully_suspended_sale"] = "本銷售資料已經成功暫停";
+$lang["sales_successfully_updated"] = "銷售資料成功更新";
+$lang["sales_suspend_sale"] = "暫停銷售";
+$lang["sales_suspended_sale_id"] = "暫停銷售編號";
+$lang["sales_suspended_sales"] = "已暫停銷售";
+$lang["sales_tax"] = "稅額";
+$lang["sales_tax_percent"] = "稅率 %";
+$lang["sales_total"] = "總計";
+$lang["sales_total_tax_exclusive"] = "Tax excluded";
+$lang["sales_transaction_failed"] = "銷售交易失敗";
+$lang["sales_unable_to_add_item"] = "無法增加出售產品";
+$lang["sales_unsuccessfully_deleted"] = "銷售資料刪除失敗";
+$lang["sales_unsuccessfully_updated"] = "銷售資料更新失敗";
+$lang["sales_unsuspend"] = "取消暫停銷售";
+$lang["sales_unsuspend_and_delete"] = "取消暫停銷售並刪除";
+$lang["sales_update"] = "Edit Sale";
+$lang["sales_date_range"] = "日期範圍";
+$lang["sales_none_selected"] = "您還沒有選擇任何產品進行編輯";
diff -rBwi --ignore-file-name-case -u pos-prod/application/language/zh/suppliers_lang.php opensourcepos/application/language/zh/suppliers_lang.php
--- pos-prod/application/language/zh/suppliers_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/language/zh/suppliers_lang.php	2016-05-23 15:32:31.909839335 -0700
@@ -1,17 +1,19 @@
 <?php
-$lang['suppliers_new'] = '新增供應商';
-$lang['suppliers_supplier'] = '供應商';
-$lang['suppliers_update'] = '更新供應商';
-$lang['suppliers_confirm_delete'] = '你確定要刪除選定的供應商嗎？';
-$lang['suppliers_none_selected'] = '您還沒有選擇任何供應商進行刪除';
-$lang['suppliers_error_adding_updating'] = '新增/更新供應商錯誤';
-$lang['suppliers_successful_adding'] = '您已成功新增供應商';
-$lang['suppliers_successful_updating'] = '您已成功更新供應商';
-$lang['suppliers_successful_deleted'] = '您已成功刪除供應商';
-$lang['suppliers_one_or_multiple'] = '供應商';
-$lang['suppliers_cannot_be_deleted'] = '無法刪除所選擇的供應商，選定的供應商中至少有一家已有銷售紀錄。';
-$lang['suppliers_basic_information'] = '供應商資料';
-$lang['suppliers_account_number'] = '帳號 #';
-$lang['suppliers_company_name'] = '公司名稱';
-$lang['suppliers_company_name_required'] = '公司名稱是必填欄位';
-?>
+
+$lang["suppliers_account_number"] = "帳號 #";
+$lang["suppliers_basic_information"] = "供應商資料";
+$lang["suppliers_cannot_be_deleted"] = "無法刪除所選擇的供應商，選定的供應商中至少有一家已有銷售紀錄。";
+$lang["suppliers_company_name"] = "公司名稱";
+$lang["suppliers_company_name_required"] = "公司名稱是必填欄位";
+$lang["suppliers_agency_name"] = " ";
+$lang["suppliers_confirm_delete"] = "你確定要刪除選定的供應商嗎？";
+$lang["suppliers_error_adding_updating"] = "新增/更新供應商錯誤";
+$lang["suppliers_new"] = "新增供應商";
+$lang["suppliers_none_selected"] = "您還沒有選擇任何供應商進行刪除";
+$lang["suppliers_one_or_multiple"] = "供應商";
+$lang["suppliers_successful_adding"] = "您已成功新增供應商";
+$lang["suppliers_successful_deleted"] = "您已成功刪除供應商";
+$lang["suppliers_successful_updating"] = "您已成功更新供應商";
+$lang["suppliers_supplier"] = "供應商";
+$lang["suppliers_supplier_id"] = "Id";
+$lang["suppliers_update"] = "更新供應商";
Only in opensourcepos/application/libraries: Barcode_lib.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/libraries/index.html opensourcepos/application/libraries/index.html
--- pos-prod/application/libraries/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/libraries/index.html	2016-05-23 15:32:31.909839335 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in opensourcepos/application/libraries: Item_lib.php
Only in pos-prod/application/libraries: MY_Language.php
Only in pos-prod/application/libraries/ofc-library: ofc_upload_image.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/libraries/Receiving_lib.php opensourcepos/application/libraries/Receiving_lib.php
--- pos-prod/application/libraries/Receiving_lib.php	2014-10-08 21:43:10.000000000 -0700
+++ opensourcepos/application/libraries/Receiving_lib.php	2016-05-23 15:32:31.909839335 -0700
@@ -51,13 +52,70 @@
     {
         if(!$this->CI->session->userdata('recv_stock_source'))
         {
-             $stock_locations = $this->CI->Stock_locations->get_undeleted_all()->result_array();
-             $location_name = $stock_locations[0]['location_id'];
-             $this->set_stock_source($location_name);
+             $location_id = $this->CI->Stock_location->get_default_location_id();
+             $this->set_stock_source($location_id);
         }
         return $this->CI->session->userdata('recv_stock_source');
     }
 
+    function get_comment()
+    {
+        // avoid returning a null that results in a 0 in the comment if nothing is set/available
+        $comment = $this->CI->session->userdata('comment');
+        return empty($comment) ? '' : $comment;
+    }
+    
+    function set_comment($comment)
+    {
+        $this->CI->session->set_userdata('comment', $comment);
+    }
+    
+    function clear_comment()
+    {
+        $this->CI->session->unset_userdata('comment');
+    }
+   
+    function get_invoice_number()
+    {
+        return $this->CI->session->userdata('recv_invoice_number');
+    }
+    
+    function set_invoice_number($invoice_number, $keep_custom = FALSE)
+    {
+        $current_invoice_number = $this->CI->session->userdata('recv_invoice_number');
+        if (!$keep_custom || empty($current_invoice_number))
+        {
+            $this->CI->session->set_userdata('recv_invoice_number', $invoice_number);
+        }
+    }
+    
+    function clear_invoice_number()
+    {
+        $this->CI->session->unset_userdata('recv_invoice_number');
+    }
+    
+    function is_invoice_number_enabled()
+    {
+        return $this->CI->session->userdata('recv_invoice_number_enabled') == 'true' ||
+        $this->CI->session->userdata('recv_invoice_number_enabled') == '1';
+    }
+    
+    function set_invoice_number_enabled($invoice_number_enabled)
+    {
+        return $this->CI->session->set_userdata('recv_invoice_number_enabled', $invoice_number_enabled);
+    }
+    
+    function is_print_after_sale()
+    {
+        return $this->CI->session->userdata('recv_print_after_sale') == 'true' ||
+        $this->CI->session->userdata('recv_print_after_sale') == '1';
+    }
+    
+    function set_print_after_sale($print_after_sale)
+    {
+        return $this->CI->session->set_userdata('recv_print_after_sale', $print_after_sale);
+    }
+    
     function set_stock_source($stock_source)
     {
         $this->CI->session->set_userdata('recv_stock_source',$stock_source);
@@ -72,9 +130,8 @@
     {
         if(!$this->CI->session->userdata('recv_stock_destination'))
         {
-             $stock_locations = $this->CI->Stock_locations->get_undeleted_all()->result_array();
-             $location_name = $stock_locations[0]['location_id'];
-             $this->set_stock_destination($location_name);
+            $location_id = $this->CI->Stock_location->get_default_location_id();
+            $this->set_stock_destination($location_id);
         }
         return $this->CI->session->userdata('recv_stock_destination');
     }
@@ -89,7 +146,7 @@
     	$this->CI->session->unset_userdata('recv_stock_destination');
     }
     
-	function add_item($item_id,$quantity=1,$item_location,$discount=0,$price=null,$description=null,$serialnumber=null)
+    function add_item($item_id,$quantity=1,$item_location=null,$discount=0,$price=null,$description=null,$serialnumber=null,$receiving_quantity=null)
 	{
 		//make sure item exists in database.
 		if(!$this->CI->Item->exists($item_id))
@@ -134,13 +191,14 @@
 		}
 
 		$insertkey=$maxkey+1;
-                $item_info=$this->CI->Item->get_info($item_id);
+        $item_info=$this->CI->Item->get_info($item_id,$item_location);
                 //array records are identified by $insertkey and item_id is just another field.
+        $price=$price!=null ? $price: $item_info->cost_price;
                 $item = array(($insertkey)=>
                 array(
                         'item_id'=>$item_id,
                         'item_location'=>$item_location,
-                        'stock_name'=>$this->CI->Stock_locations->get_location_name($item_location),
+            'stock_name'=>$this->CI->Stock_location->get_location_name($item_location),
                         'line'=>$insertkey,
                         'name'=>$item_info->name,
                         'description'=>$description!=null ? $description: $item_info->description,
@@ -149,10 +207,10 @@
                         'is_serialized'=>$item_info->is_serialized,
                         'quantity'=>$quantity,
              'discount'=>$discount,
-                        'in_stock'=>$this->CI->Item_quantities->get_item_quantity($item_id, $item_location)->quantity,
-                        //'price'=>$price!=null ? $price: $item_info->cost_price,
-						'price'=>$price!=null ? $price: $this->CI->Item->get_info($item_id)->cost_price,
-			'unit_price' => $this->CI->Item->get_info($item_id)->unit_price
+            'in_stock'=>$this->CI->Item_quantity->get_item_quantity($item_id, $item_location)->quantity,
+            'price'=>$price,
+            'receiving_quantity'=>$receiving_quantity!=null ? $receiving_quantity : $item_info->receiving_quantity,
+            'total'=>$this->get_item_total($quantity, $price, $discount)
                         )
 		);
 
@@ -177,11 +235,13 @@
 		$items = $this->get_cart();
 		if(isset($items[$line]))
 		{
-			$items[$line]['description'] = $description;
-			$items[$line]['serialnumber'] = $serialnumber;
-			$items[$line]['quantity'] = $quantity;
-			$items[$line]['discount'] = $discount;
-			$items[$line]['price'] = $price;
+            $line = &$items[$line];
+            $line['description'] = $description;
+            $line['serialnumber'] = $serialnumber;
+            $line['quantity'] = $quantity;
+            $line['discount'] = $discount;
+            $line['price'] = $price;
+            $line['total'] = $this->get_item_total($quantity, $price, $discount); 
 			$this->set_cart($items);
 		}
 
@@ -197,6 +257,10 @@
 		{
 			return $this->CI->Receiving->exists($pieces[1]);
 		}
+        else 
+        {
+            return $this->CI->Receiving->get_receiving_by_invoice_number($receipt_receiving_id)->num_rows() > 0;
+        }
 
 		return false;
 	}
@@ -218,14 +282,23 @@
 	{
 		//POS #
 		$pieces = explode(' ',$receipt_receiving_id);
+        if ($pieces[0] == "RECV")
+        {
 		$receiving_id = $pieces[1];
+        } 
+        else 
+        {
+            $receiving = $this->CI->Receiving->get_receiving_by_invoice_number($receipt_receiving_id)->row();
+            $receiving_id = $receiving->receiving_id;
+        }
 
 		$this->empty_cart();
 		$this->delete_supplier();
+        $this->clear_comment();
 
 		foreach($this->CI->Receiving->get_receiving_items($receiving_id)->result() as $row)
 		{
-			$this->add_item($row->item_id,-$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber);
+            $this->add_item($row->item_id,-$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber,$row->receiving_quantity);
 		}
 		$this->set_supplier($this->CI->Receiving->get_supplier($receiving_id)->person_id);
 	}
@@ -249,23 +322,11 @@
 
 		foreach($this->CI->Receiving->get_receiving_items($receiving_id)->result() as $row)
 		{
-			$this->add_item($row->item_id,$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber);
+            $this->add_item($row->item_id,$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber,$row->receiving_quantity);
 		}
 		$this->set_supplier($this->CI->Receiving->get_supplier($receiving_id)->person_id);
-
-	}
-	
-	function copy_entire_requisition($requisition_id,$item_location)
-	{
-		$this->empty_cart();
-		$this->delete_supplier();
-	
-		foreach($this->CI->Receiving->get_requisition_items($requisition_id)->result() as $row)
-		{
-			$this->add_item_unit($row->item_id,$row->requisition_quantity,$item_location,$row->description);
-		}
-		$this->set_supplier($this->CI->Receiving->get_supplier($requisition_id)->person_id);
-	
+        $receiving_info=$this->CI->Receiving->get_info($receiving_id);
+        //$this->set_invoice_number($receiving_info->row()->invoice_number);
 	}
 
 	function delete_item($line)
@@ -295,6 +356,16 @@
 		$this->clear_mode();
 		$this->empty_cart();
 		$this->delete_supplier();
+        $this->clear_comment();
+        $this->clear_invoice_number();
+    }
+    
+    function get_item_total($quantity, $price, $discount_percentage)
+    {
+        $total = bcmul($quantity, $price, PRECISION);
+        $discount_fraction = bcdiv($discount_percentage, 100, PRECISION);
+        $discount_amount =  bcmul($total, $discount_fraction, PRECISION);
+        return bcsub($total, $discount_amount, PRECISION);
 	}
 
 	function get_total()
@@ -302,7 +373,7 @@
 		$total = 0;
 		foreach($this->get_cart() as $item)
 		{
-            $total+=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100);
+            $total = bcadd($total, $this->get_item_total($item['quantity'], $item['price'], $item['discount']), PRECISION);
 		}
 		
 		return $total;
Only in pos-prod/application/libraries: Receiving_lib.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/libraries/Sale_lib.php opensourcepos/application/libraries/Sale_lib.php
--- pos-prod/application/libraries/Sale_lib.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/libraries/Sale_lib.php	2016-05-23 15:32:31.909839335 -0700
@@ -21,7 +22,7 @@
 		$this->CI->session->set_userdata('cart',$cart_data);
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function get_payments()
 	{
 		if( !$this->CI->session->userdata( 'payments' ) )
@@ -30,7 +31,7 @@
 		return $this->CI->session->userdata('payments');
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function set_payments($payments_data)
 	{
 		$this->CI->session->set_userdata('payments',$payments_data);
@@ -38,7 +39,9 @@
 	
 	function get_comment() 
 	{
-		return $this->CI->session->userdata('comment');
+		// avoid returning a null that results in a 0 in the comment if nothing is set/available
+		$comment = $this->CI->session->userdata('comment');
+    	return empty($comment) ? '' : $comment;
 	}
 
 	function set_comment($comment) 
@@ -51,6 +54,48 @@
 		$this->CI->session->unset_userdata('comment');
 	}
 	
+	function get_invoice_number()
+	{
+		return $this->CI->session->userdata('sales_invoice_number');
+	}
+	
+	function set_invoice_number($invoice_number, $keep_custom = FALSE)
+	{
+		$current_invoice_number = $this->CI->session->userdata('sales_invoice_number');
+		if (!$keep_custom || empty($current_invoice_number))
+		{
+			$this->CI->session->set_userdata('sales_invoice_number', $invoice_number);
+		}
+
+	}
+	
+	function clear_invoice_number()
+	{
+		$this->CI->session->unset_userdata('sales_invoice_number');
+	}
+	
+	function is_invoice_number_enabled() 
+	{
+		return $this->CI->session->userdata('sales_invoice_number_enabled') == 'true' ||
+			$this->CI->session->userdata('sales_invoice_number_enabled') == '1';
+	}
+	
+	function set_invoice_number_enabled($invoice_number_enabled)
+	{
+		return $this->CI->session->set_userdata('sales_invoice_number_enabled', $invoice_number_enabled);
+	}
+	
+	function is_print_after_sale() 
+	{
+		return $this->CI->session->userdata('sales_print_after_sale') == 'true' ||
+			$this->CI->session->userdata('sales_print_after_sale') == '1';
+	}
+	
+	function set_print_after_sale($print_after_sale)
+	{
+		return $this->CI->session->set_userdata('sales_print_after_sale', $print_after_sale);
+	}
+	
 	function get_email_receipt() 
 	{
 		return $this->CI->session->userdata('email_receipt');
@@ -69,6 +114,14 @@
 	function add_payment($payment_id,$payment_amount)
 	{
 		$payments=$this->get_payments();
+		if( isset( $payments[$payment_id] ) )
+		{
+			//payment_method already exists, add to payment_amount
+			$payments[$payment_id]['payment_amount'] = bcadd($payments[$payment_id]['payment_amount'], $payment_amount, PRECISION);
+		}
+		else
+		{
+			//add to existing array
 		$payment = array($payment_id=>
 		array(
 			'payment_type'=>$payment_id,
@@ -76,14 +129,6 @@
 			)
 		);
 
-		//payment_method already exists, add to payment_amount
-		if(isset($payments[$payment_id]))
-		{
-			$payments[$payment_id]['payment_amount']+=$payment_amount;
-		}
-		else
-		{
-			//add to existing array
 			$payments+=$payment;
 		}
 
@@ -92,7 +137,7 @@
 
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function edit_payment($payment_id,$payment_amount)
 	{
 		$payments = $this->get_payments();
@@ -100,13 +145,13 @@
 		{
 			$payments[$payment_id]['payment_type'] = $payment_id;
 			$payments[$payment_id]['payment_amount'] = $payment_amount;
-			$this->set_payments($payment_id);
+			$this->set_payments($payments);
 		}
 
 		return false;
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function delete_payment( $payment_id )
 	{
 		$payments = $this->get_payments();
@@ -114,30 +159,30 @@
 		$this->set_payments( $payments );
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function empty_payments()
 	{
 		$this->CI->session->unset_userdata('payments');
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function get_payments_total()
 	{
 		$subtotal = 0;
 		foreach($this->get_payments() as $payments)
 		{
-		    $subtotal+=$payments['payment_amount'];
+		    $subtotal = bcadd($payments['payment_amount'], $subtotal, PRECISION);
 		}
 		return to_currency_no_money($subtotal);
 	}
 
-	//Alain Multiple Payments
+	// Multiple Payments
 	function get_amount_due()
 	{
 		$amount_due=0;
 		$payment_total = $this->get_payments_total();
 		$sales_total=$this->get_total();
-		$amount_due=to_currency_no_money($sales_total - $payment_total);
+		$amount_due=to_currency_no_money(bcsub($sales_total, $payment_total, PRECISION));
 		return $amount_due;
 	}
 
@@ -171,9 +216,8 @@
     {
         if(!$this->CI->session->userdata('sale_location'))
         {
-             $stock_locations = $this->CI->Stock_locations->get_undeleted_all()->result_array();
-             $location_name = $stock_locations[0]['location_id'];
-             $this->set_sale_location($location_name);
+             $location_id = $this->CI->Stock_location->get_default_location_id();
+             $this->set_sale_location($location_id);
         }
         return $this->CI->session->userdata('sale_location');
     }
@@ -188,6 +232,21 @@
     	$this->CI->session->unset_userdata('sale_location');
     }
     
+    function set_giftcard_remainder($value)
+    {
+    	$this->CI->session->set_userdata('giftcard_remainder',$value);
+    }
+    
+    function get_giftcard_remainder()
+    {
+    	return $this->CI->session->userdata('giftcard_remainder');
+    }
+    
+    function clear_giftcard_remainder()
+    {
+    	$this->CI->session->unset_userdata('giftcard_remainder');
+    }
+    
 	function add_item($item_id,$quantity=1,$item_location,$discount=0,$price=null,$description=null,$serialnumber=null)
 	{
 		//make sure item exists	     
@@ -196,7 +255,7 @@
             return false;
         }
 
-		//Alain Serialization and Description
+		// Serialization and Description
 
 		//Get all items in the cart so far...
 		$items = $this->get_cart();
@@ -210,7 +269,7 @@
         $itemalreadyinsale=FALSE;        //We did not find the item yet.
 		$insertkey=0;                    //Key to use for new entry.
 		$updatekey=0;                    //Key to use to update(quantity)
-
+        $item_info=$this->CI->Item->get_info($item_id,$item_location);
 		foreach ($items as $item)
 		{
             //We primed the loop so maxkey is 0 the first time.
@@ -225,17 +284,26 @@
 			{
 				$itemalreadyinsale=TRUE;
 				$updatekey=$item['line'];
+                if (!$item_info->is_serialized)
+                {
+                    $quantity += $items[$updatekey]['quantity'];
+                }
 			}
 		}
 
 		$insertkey=$maxkey+1;
-		$item_info=$this->CI->Item->get_info($item_id);
 		//array/cart records are identified by $insertkey and item_id is just another field.
+		$price=$price!=null?$price:$item_info->unit_price;
+		$total=$this->get_item_total($quantity, $price, $discount);
+        $discounted_total=$this->get_item_total($quantity, $price, $discount, TRUE);
+		//Item already exists and is not serialized, add to quantity
+		if(!$itemalreadyinsale || $item_info->is_serialized)
+		{
 		$item = array(($insertkey)=>
 		array(
 			'item_id'=>$item_id,
 			'item_location'=>$item_location,
-			'stock_name'=>$this->CI->Stock_locations->get_location_name($item_location),
+                    'stock_name'=>$this->CI->Stock_location->get_location_name($item_location),
 			'line'=>$insertkey,
 			'name'=>$item_info->name,
 			'item_number'=>$item_info->item_number,
@@ -245,20 +313,21 @@
 			'is_serialized'=>$item_info->is_serialized,
 			'quantity'=>$quantity,
             'discount'=>$discount,
-			'in_stock'=>$this->CI->Item_quantities->get_item_quantity($item_id, $item_location)->quantity,
-			'price'=>$price!=null ? $price: $item_info->unit_price
+                    'in_stock'=>$this->CI->Item_quantity->get_item_quantity($item_id, $item_location)->quantity,
+                    'price'=>$price,
+                    'total'=>$total,
+                    'discounted_total'=>$discounted_total,
 			)
 		);
-
-		//Item already exists and is not serialized, add to quantity
-		if($itemalreadyinsale && ($item_info->is_serialized ==0) )
-		{
-			$items[$updatekey]['quantity']+=$quantity;
+			//add to existing array
+			$items+=$item;
 		}
 		else
 		{
-			//add to existing array
-			$items+=$item;
+            $line = &$items[$updatekey];
+            $line['quantity'] = $quantity;
+            $line['total'] = $total;
+            $line['discounted_total'] = $discounted_total;
 		}
 
 		$this->set_cart($items);
@@ -274,16 +343,19 @@
             return false;
         }
 
-		
+		$item_info = $this->CI->Item->get_info($item_id);
 		//$item = $this->CI->Item->get_info($item_id);
-		$item_quantity = $this->CI->Item_quantities->get_item_quantity($item_id,$item_location)->quantity; 
-		$quanity_added = $this->get_quantity_already_added($item_id,$item_location);
+		$item_quantity = $this->CI->Item_quantity->get_item_quantity($item_id,$item_location)->quantity;
+		$quantity_added = $this->get_quantity_already_added($item_id,$item_location);
 		
-		if ($item_quantity - $quanity_added < 0)
+		if ($item_quantity - $quantity_added < 0)
 		{
-			return true;
+			return $this->CI->lang->line('sales_quantity_less_than_zero');
+		}
+		else if ($item_quantity - $quantity_added < $item_info->reorder_level)
+		{
+			return $this->CI->lang->line('sales_quantity_less_than_reorder_level');
 		}
-		
 		return false;
 	}
 	
@@ -322,27 +394,38 @@
 		$items = $this->get_cart();
 		if(isset($items[$line]))
 		{
-			$items[$line]['description'] = $description;
-			$items[$line]['serialnumber'] = $serialnumber;
-			$items[$line]['quantity'] = $quantity;
-			$items[$line]['discount'] = $discount;
-			$items[$line]['price'] = $price;
+			$line = &$items[$line];
+			$line['description'] = $description;
+			$line['serialnumber'] = $serialnumber;
+			$line['quantity'] = $quantity;
+			$line['discount'] = $discount;
+			$line['price'] = $price;
+			$line['total'] = $this->get_item_total($quantity, $price, $discount);
+			$line['discounted_total'] = $this->get_item_total($quantity, $price, $discount, TRUE);
 			$this->set_cart($items);
 		}
 
 		return false;
 	}
 
-	function is_valid_receipt($receipt_sale_id)
+	function is_valid_receipt(&$receipt_sale_id)
 	{
 		//POS #
 		$pieces = explode(' ',$receipt_sale_id);
 
-		if(count($pieces)==2)
+		if(count($pieces)==2 && strtolower($pieces[0]) == 'pos')
 		{
 			return $this->CI->Sale->exists($pieces[1]);
 		}
-
+		else 
+		{
+			$sale_info = $this->CI->Sale->get_sale_by_invoice_number($receipt_sale_id);
+			if ($sale_info->num_rows() > 0)
+			{
+				$receipt_sale_id = 'POS ' . $sale_info->row()->sale_id;
+				return true;
+			}
+		}
 		return false;
 	}
 	
@@ -417,8 +499,10 @@
 		{
 			$this->add_payment($row->payment_type,$row->payment_amount);
 		}
-		$this->set_customer($this->CI->Sale_suspended->get_customer($sale_id)->person_id);
-		$this->set_comment($this->CI->Sale_suspended->get_comment($sale_id));
+		$suspended_sale_info=$this->CI->Sale_suspended->get_info($sale_id)->row();
+		$this->set_customer($suspended_sale_info->person_id);
+		$this->set_comment($suspended_sale_info->comment);
+		$this->set_invoice_number($suspended_sale_info->invoice_number);
 	}
 
 	function delete_item($line)
@@ -449,17 +533,25 @@
 		$this->empty_cart();
 		$this->clear_comment();
 		$this->clear_email_receipt();
+		$this->clear_invoice_number();
+		$this->clear_giftcard_remainder();
 		$this->empty_payments();
 		$this->remove_customer();
 	}
 
-	function get_taxes()
+	function is_customer_taxable()
 	{
 		$customer_id = $this->get_customer();
 		$customer = $this->CI->Customer->get_info($customer_id);
 
 		//Do not charge sales tax if we have a customer that is not taxable
-		if (!$customer->taxable and $customer_id!=-1)
+		return $customer->taxable or $customer_id==-1;
+	}
+
+	function get_taxes()
+	{
+		//Do not charge sales tax if we have a customer that is not taxable
+		if (!$this->is_customer_taxable())
 		{
 		   return array();
 		}
@@ -472,41 +564,113 @@
 			foreach($tax_info as $tax)
 			{
 				$name = $tax['percent'].'% ' . $tax['name'];
-				$tax_amount=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100)*(($tax['percent'])/100);
-
+				$tax_percentage = $tax['percent'];
+				$tax_amount = $this->get_item_tax($item['quantity'], $item['price'], $item['discount'], $tax_percentage);
 
 				if (!isset($taxes[$name]))
 				{
 					$taxes[$name] = 0;
 				}
-				$taxes[$name] += $tax_amount;
+				$taxes[$name] = bcadd($taxes[$name], $tax_amount, PRECISION);
 			}
 		}
 
 		return $taxes;
 	}
 
-	function get_subtotal()
+	function get_discount()
 	{
-		$subtotal = 0;
-		foreach($this->get_cart() as $item)
+		$discount = 0;
+		foreach($this->get_cart() as $line=>$item)
 		{
-		    $subtotal+=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100);
+			if ($item['discount'] > 0)
+			{
+				$item_discount = $this->get_item_discount($item['quantity'], $item['price'], $item['discount']);
+				$discount = bcadd($discount, $item_discount, PRECISION); 
+			}
 		}
+		return $discount;
+	}
+
+	function get_subtotal($include_discount=FALSE, $exclude_tax=FALSE)
+	{
+		$subtotal = $this->calculate_subtotal($include_discount, $exclude_tax);		
 		return to_currency_no_money($subtotal);
 	}
 
-	function get_total()
+	function get_item_total_tax_exclusive($item_id, $quantity, $price, $discount_percentage, $include_discount=FALSE) 
+	{
+		$tax_info = $this->CI->Item_taxes->get_info($item_id);
+		$item_price = $this->get_item_total($quantity, $price, $discount_percentage, $include_discount);
+		// only additive tax here
+		foreach($tax_info as $tax)
+		{
+			$tax_percentage = $tax['percent'];
+			$item_price = bcsub($item_price, $this->get_item_tax($quantity, $price, $discount_percentage, $tax_percentage), PRECISION);
+		}
+		
+		return $item_price;
+	}
+	
+	function get_item_total($quantity, $price, $discount_percentage, $include_discount=FALSE)  
+	{
+		$total = bcmul($quantity, $price, PRECISION);
+		if ($include_discount)
+		{
+			$discount_amount = $this->get_item_discount($quantity, $price, $discount_percentage);
+			return bcsub($total, $discount_amount, PRECISION);
+		}
+		return $total;
+	}
+	
+	function get_item_discount($quantity, $price, $discount_percentage)
+	{
+		$total = bcmul($quantity, $price, PRECISION);
+		$discount_fraction = bcdiv($discount_percentage, 100, PRECISION);
+		return bcmul($total, $discount_fraction, PRECISION);
+	}
+	
+	function get_item_tax($quantity, $price, $discount_percentage, $tax_percentage) 
+	{
+		$price = $this->get_item_total($quantity, $price, $discount_percentage, TRUE);
+
+		if ($this->CI->config->config['tax_included'])
 	{
-		$total = 0;
+			$tax_fraction = bcadd(100, $tax_percentage, PRECISION);
+			$tax_fraction = bcdiv($tax_fraction, 100, PRECISION);
+			$price_tax_excl = bcdiv($price, $tax_fraction, PRECISION);
+			return bcsub($price, $price_tax_excl, PRECISION);
+		}
+		$tax_fraction = bcdiv($tax_percentage, 100, PRECISION);
+		return bcmul($price, $tax_fraction, PRECISION);
+	}
+
+	function calculate_subtotal($include_discount=FALSE, $exclude_tax=FALSE) 
+	{
+		$subtotal = 0;
 		foreach($this->get_cart() as $item)
 		{
-            $total+=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100);
+			if ($exclude_tax && $this->CI->config->config['tax_included'])
+			{
+				$subtotal = bcadd($subtotal, $this->get_item_total_tax_exclusive($item['item_id'], $item['quantity'], $item['price'], $item['discount'], $include_discount), PRECISION);
+			}
+			else 
+			{
+				$subtotal = bcadd($subtotal, $this->get_item_total($item['quantity'], $item['price'], $item['discount'], $include_discount), PRECISION);
+			}
+		}
+		return $subtotal;
 		}
 
+	function get_total()
+	{
+		$total = $this->calculate_subtotal(TRUE);		
+		if (!$this->CI->config->config['tax_included'])
+		{
 		foreach($this->get_taxes() as $tax)
 		{
-			$total+=$tax;
+				$total = bcadd($total, $tax, PRECISION);
+			}
 		}
 
 		return to_currency_no_money($total);
diff -rBwi --ignore-file-name-case -u pos-prod/application/logs/index.html opensourcepos/application/logs/index.html
--- pos-prod/application/logs/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/logs/index.html	2016-05-23 15:32:31.911839305 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/customer.php opensourcepos/application/models/Customer.php
--- pos-prod/application/models/customer.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Customer.php	2016-05-23 15:32:31.911839305 -0700
@@ -14,25 +14,38 @@
 		return ($query->num_rows()==1);
 	}
 	
+	function account_number_exists($account_number,$person_id='')
+	{
+		$this->db->from('customers');
+		$this->db->where('account_number', $account_number);
+		if (!empty($person_id))
+		{
+			$this->db->where('person_id !=', $person_id);
+		}
+		$query=$this->db->get();
+		return ($query->num_rows()==1);
+	}	
+	
+	function get_total_rows()
+	{
+		$this->db->from('customers');
+		$this->db->where('deleted',0);
+		return $this->db->count_all_results();
+	}
+	
 	/*
 	Returns all the customers
 	*/
-	function get_all($limit=10000, $offset=0)
+	function get_all($rows = 0, $limit_from = 0)
 	{
 		$this->db->from('customers');
 		$this->db->join('people','customers.person_id=people.person_id');			
 		$this->db->where('deleted',0);
 		$this->db->order_by("last_name", "asc");
-		$this->db->limit($limit);
-		$this->db->offset($offset);
-		return $this->db->get();		
+		if ($rows > 0) {
+			$this->db->limit($rows, $limit_from);
 	}
-	
-	function count_all()
-	{
-		$this->db->from('customers');
-		$this->db->where('deleted',0);
-		return $this->db->count_all_results();
+		return $this->db->get();		
 	}
 	
 	/*
@@ -82,7 +95,7 @@
 	/*
 	Inserts or updates a customer
 	*/
-	function save(&$person_data, &$customer_data,$customer_id=false)
+	function save_customer(&$person_data, &$customer_data,$customer_id=false)
 	{
 		$success=false;
 		//Run these queries as a transaction, we want to make sure we do all or nothing
@@ -223,10 +236,24 @@
 		return $suggestions;
 
 	}
+	
+	function get_found_rows($search)
+	{
+		$this->db->from('customers');
+		$this->db->join('people','customers.person_id=people.person_id');
+		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		last_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		email LIKE '%".$this->db->escape_like_str($search)."%' or
+		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or
+		account_number LIKE '%".$this->db->escape_like_str($search)."%' or
+		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
+		return $this->db->get()->num_rows();
+	}
+	
 	/*
 	Preform a search on customers
 	*/
-	function search($search)
+	function search($search, $rows = 0, $limit_from = 0)
 	{
 		$this->db->from('customers');
 		$this->db->join('people','customers.person_id=people.person_id');		
@@ -237,7 +264,9 @@
 		account_number LIKE '%".$this->db->escape_like_str($search)."%' or 
 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");		
 		$this->db->order_by("last_name", "asc");
-		
+		if ($rows > 0) {
+			$this->db->limit($rows, $limit_from);
+		}
 		return $this->db->get();	
 	}
 
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/employee.php opensourcepos/application/models/Employee.php
--- pos-prod/application/models/employee.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Employee.php	2016-05-23 15:32:31.911839305 -0700
@@ -14,6 +14,12 @@
 		return ($query->num_rows()==1);
 	}	
 	
+	function get_total_rows()
+	{
+		$this->db->from('employees');
+		$this->db->where('deleted',0);
+		return $this->db->count_all_results();
+	}
 	/*
 	Returns all the employees
 	*/
@@ -28,13 +34,6 @@
 		return $this->db->get();		
 	}
 	
-	function count_all()
-	{
-		$this->db->from('employees');
-		$this->db->where('deleted',0);
-		return $this->db->count_all_results();
-	}
-	
 	/*
 	Gets information about a particular employee
 	*/
@@ -82,7 +81,7 @@
 	/*
 	Inserts or updates an employee
 	*/
-	function save(&$person_data, &$employee_data,&$permission_data,$employee_id=false)
+	function save_employee(&$person_data, &$employee_data,&$grants_data,$employee_id=false)
 	{
 		$success=false;
 		
@@ -105,17 +104,17 @@
 			//We have either inserted or updated a new employee, now lets set permissions. 
 			if($success)
 			{
-				//First lets clear out any permissions the employee currently has.
-				$success=$this->db->delete('permissions', array('person_id' => $employee_id));
+				//First lets clear out any grants the employee currently has.
+				$success=$this->db->delete('grants', array('person_id' => $employee_id));
 				
-				//Now insert the new permissions
+				//Now insert the new grants
 				if($success)
 				{
-					foreach($permission_data as $allowed_module)
+					foreach($grants_data as $permission_id)
 					{
-						$success = $this->db->insert('permissions',
+						$success = $this->db->insert('grants',
 						array(
-						'module_id'=>$allowed_module,
+						'permission_id'=>$permission_id,
 						'person_id'=>$employee_id));
 					}
 				}
@@ -142,7 +141,7 @@
 		$this->db->trans_start();
 		
 		//Delete permissions
-		if($this->db->delete('permissions', array('person_id' => $employee_id)))
+		if($this->db->delete('grants', array('person_id' => $employee_id)))
 		{	
 			$this->db->where('person_id', $employee_id);
 			$success = $this->db->update('employees', array('deleted' => 1));
@@ -167,7 +166,7 @@
 
 		$this->db->where_in('person_id',$employee_ids);
 		//Delete permissions
-		if ($this->db->delete('permissions'))
+		if ($this->db->delete('grants'))
 		{
 			//delete from employee table
 			$this->db->where_in('person_id',$employee_ids);
@@ -240,10 +239,23 @@
 	
 	}
 	
+	function get_found_rows($search)
+	{
+		$this->db->from('employees');
+		$this->db->join('people','employees.person_id=people.person_id');
+		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		last_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		email LIKE '%".$this->db->escape_like_str($search)."%' or
+		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or
+		username LIKE '%".$this->db->escape_like_str($search)."%' or
+		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
+		return $this->db->get()->num_rows();
+	}
+	
 	/*
 	Preform a search on employees
 	*/
-	function search($search)
+	function search($search, $rows = 0, $limit_from = 0)
 	{
 		$this->db->from('employees');
 		$this->db->join('people','employees.person_id=people.person_id');		
@@ -254,7 +266,9 @@
 		username LIKE '%".$this->db->escape_like_str($search)."%' or 
 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");		
 		$this->db->order_by("last_name", "asc");
-		
+		if ($rows > 0) {
+			$this->db->limit($rows, $limit_from);
+		}
 		return $this->db->get();	
 	}
 	
@@ -304,21 +318,50 @@
 	}
 	
 	/*
-	Determins whether the employee specified employee has access the specific module.
+	 * Determines whether the employee has access to at least one submodule
 	*/
-	function has_permission($module_id,$person_id)
+	function has_module_grant($permission_id,$person_id)
+	{
+		$this->db->from('grants');
+		$this->db->like('permission_id', $permission_id, 'after');
+		$this->db->where('person_id',$person_id);
+		$result = $this->db->get();
+		$result_count = $result->num_rows();
+		if ($result_count != 1)
+		{
+			return $result_count != 0;
+		}
+		return $this->has_subpermissions($permission_id);
+	}
+	
+	function has_subpermissions($permission_id)
+	{
+		$this->db->from('permissions');
+		$this->db->like('permission_id', $permission_id.'_', 'after');
+		$result = $this->db->get();
+		return $result->num_rows() == 0;
+	}
+	
+	/*
+	Determines whether the employee specified employee has access the specific module.
+	*/
+	function has_grant($permission_id,$person_id)
 	{
 		//if no module_id is null, allow access
-		if($module_id==null)
+		if($permission_id==null)
 		{
 			return true;
 		}
 		
-		$query = $this->db->get_where('permissions', array('person_id' => $person_id,'module_id'=>$module_id), 1);
-		return $query->num_rows() == 1;
-		
+		$query = $this->db->get_where('grants', array('person_id'=>$person_id,'permission_id'=>$permission_id), 1);
+		return ($query->num_rows() == 1); 
+	}
 		
-		return false;
+	function get_employee_grants($person_id)
+	{
+		$this->db->from('grants');
+		$this->db->where('person_id',$person_id);
+		return $this->db->get()->result_array();
 	}
 
 }
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/giftcard.php opensourcepos/application/models/Giftcard.php
--- pos-prod/application/models/giftcard.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Giftcard.php	2016-05-23 15:32:31.911839305 -0700
@@ -9,22 +9,38 @@
 		$this->db->from('giftcards');
 		$this->db->where('giftcard_id',$giftcard_id);
 		$this->db->where('deleted',0);
-		$query = $this->db->get();
 
-		return ($query->num_rows()==1);
+		return ($this->db->get()->num_rows()==1);
+	}
+	
+	function get_max_number()
+	{
+		$this->db->select_max('giftcard_number');
+		$query = $this->db->get('giftcards');
+
+		return $query->row();
+	}
+	
+	function get_total_rows()
+	{
+		return $this->db->count_all('giftcards');
 	}
 
 	/*
 	Returns all the giftcards
 	*/
-	function get_all($limit=10000, $offset=0)
+	function get_all($rows=0, $limit_from=0)
 	{
 		$this->db->from('giftcards');
-		$this->db->join('people','people.person_id=giftcards.person_id');//GARRISON ADDED 4/25/2013
+		$this->db->join('people', 'people.person_id=giftcards.person_id', 'left');
 		$this->db->where('deleted',0);
-		$this->db->order_by("giftcard_number", "asc");
-		$this->db->limit($limit);
-		$this->db->offset($offset);
+		$this->db->order_by('giftcard_number');
+
+		if ($rows > 0)
+		{
+			$this->db->limit($rows, $limit_from);
+		}
+
 		return $this->db->get();
 	}
 	
@@ -41,6 +58,7 @@
 	function get_info($giftcard_id)
 	{
 		$this->db->from('giftcards');
+		$this->db->join('people', 'people.person_id=giftcards.person_id', 'left');
 		$this->db->where('giftcard_id',$giftcard_id);
 		$this->db->where('deleted',0);
 		
@@ -94,7 +112,8 @@
 		$this->db->from('giftcards');
 		$this->db->where_in('giftcard_id',$giftcard_ids);
 		$this->db->where('deleted',0);
-		$this->db->order_by("giftcard_number", "asc");
+		$this->db->order_by('giftcard_number', 'asc');
+
 		return $this->db->get();
 	}
 
@@ -154,7 +179,7 @@
 		$this->db->from('giftcards');
 		$this->db->like('giftcard_number', $search);
 		$this->db->where('deleted',0);
-		$this->db->order_by("giftcard_number", "asc");
+		$this->db->order_by('giftcard_number', 'asc');
 		$by_number = $this->db->get();
 		
 		foreach($by_number->result() as $row)
@@ -162,21 +187,19 @@
 			$suggestions[]=$row->giftcard_number;
 		}
 
-/** GARRISON MODIFIED 4/24/2013 **/
  		$this->db->from('customers');
-		$this->db->join('people','customers.person_id=people.person_id');
-		$this->db->like("first_name",$this->db->escape_like_str($search));
-		$this->db->or_like("last_name",$this->db->escape_like_str($search)); 
-		$this->db->or_like("CONCAT(`first_name`,' ',`last_name`)",$this->db->escape_like_str($search));
-		$this->db->where("deleted","0");
-		$this->db->order_by("last_name", "asc");
+		$this->db->join('people', 'customers.person_id=people.person_id', 'left');
+		$this->db->like('first_name', $this->db->escape_like_str($search));
+		$this->db->or_like('last_name', $this->db->escape_like_str($search)); 
+		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
+		$this->db->where('deleted', 0);
+		$this->db->order_by('last_name', 'asc');
 		$by_name = $this->db->get();
 		
 		foreach($by_name->result() as $row)
 		{
 			$suggestions[]=$row->first_name.' '.$row->last_name;
 		}
-/** END GARRISON MODIFIED **/				
 
 	//only return $limit suggestions
 		if(count($suggestions > $limit))
@@ -186,7 +210,6 @@
 		return $suggestions;
 	}
 	
-	/** GARRISON ADDED 5/3/2013 **/
 	/*
 	 Get search suggestions to find customers
 	*/
@@ -199,7 +222,7 @@
 		$this->db->like('person_id',$this->db->escape_like_str($search));
 		$this->db->or_like('first_name',$this->db->escape_like_str($search));
 		$this->db->or_like('last_name',$this->db->escape_like_str($search));
-		$this->db->or_like("CONCAT(`first_name`,' ',`last_name`)",$this->db->escape_like_str($search));
+		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
 		$this->db->or_like('email',$this->db->escape_like_str($search));
 		$this->db->or_like('phone_number',$this->db->escape_like_str($search));
 		$this->db->order_by('person_id', 'asc');
@@ -218,28 +242,52 @@
 		return $suggestions;
 	}	
 	
-/** GARRISON MODIFIED 4/24/2013 **/	
 	/*
 	Preform a search on giftcards
 	*/
-	function search($search)
+	function search($search, $rows = 0, $limit_from = 0)
 	{
 		$this->db->from('giftcards');
-		$this->db->join('people','giftcards.person_id=people.person_id');
-		$this->db->like("first_name",$this->db->escape_like_str($search));
-		$this->db->or_like("last_name",$this->db->escape_like_str($search));
-		$this->db->or_like("CONCAT(`first_name`,' ',`last_name`)",$this->db->escape_like_str($search));
-		$this->db->or_like("giftcard_number",$this->db->escape_like_str($search));
-		$this->db->or_like("giftcards.person_id",$this->db->escape_like_str($search));
-		$this->db->where('deleted',$this->db->escape('0'));
-		$this->db->order_by("giftcard_number", "asc");
+		$this->db->join('people', 'giftcards.person_id=people.person_id', 'left');
+		$this->db->like('first_name', $this->db->escape_like_str($search));
+		$this->db->or_group_start();
+		$this->db->or_like('last_name', $this->db->escape_like_str($search));
+		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
+		$this->db->or_like('giftcard_number', $this->db->escape_like_str($search));
+		$this->db->or_like('giftcards.person_id', $this->db->escape_like_str($search));
+		$this->db->group_end();
+		$this->db->where('giftcards.deleted', 0);
+		$this->db->order_by('giftcard_number', 'asc');
+
+		if ($rows > 0)
+		{
+			$this->db->limit($rows, $limit_from);
+		}
+
 		return $this->db->get();
 	}
 	
+	function get_found_rows($search)
+	{
+		$this->db->from('giftcards');
+		$this->db->join('people', 'giftcards.person_id=people.person_id', 'left');
+		$this->db->like('first_name', $this->db->escape_like_str($search));
+		$this->db->or_group_start();
+		$this->db->or_like('last_name', $this->db->escape_like_str($search));
+		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
+		$this->db->or_like('giftcard_number', $this->db->escape_like_str($search));
+		$this->db->or_like('giftcards.person_id', $this->db->escape_like_str($search));
+		$this->db->group_end();
+		$this->db->where('giftcards.deleted', 0);
+		return $this->db->get()->num_rows();
+	}
+	
 	public function get_giftcard_value( $giftcard_number )
 	{
 		if ( !$this->exists( $this->get_giftcard_id($giftcard_number)))
+		{
 			return 0;
+		}
 		
 		$this->db->from('giftcards');
 		$this->db->where('giftcard_number',$giftcard_number);
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/index.html opensourcepos/application/models/index.html
--- pos-prod/application/models/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/index.html	2016-05-23 15:32:31.912839290 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/item.php opensourcepos/application/models/Item.php
--- pos-prod/application/models/item.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Item.php	2016-05-23 15:32:31.911839305 -0700
@@ -4,7 +4,7 @@
 	/*
 	Determines if a given item_id is an item
 	*/
-	function exists($item_id)
+	public function exists($item_id)
 	{
 		$this->db->from('items');
 		$this->db->where('item_id',$item_id);
@@ -13,20 +13,20 @@
 		return ($query->num_rows()==1);
 	}
 
-	/*
-	Returns all the items
-	*/
-	function get_all($limit=10000, $offset=0)
+	public function item_number_exists($item_number, $item_id='')
 	{
 		$this->db->from('items');
-		$this->db->where('deleted',0);
-		$this->db->order_by("name", "asc");
-		$this->db->limit($limit);
-		$this->db->offset($offset);
-		return $this->db->get();
+		$this->db->where('item_number', $item_number);
+		if (!empty($item_id))
+		{
+			$this->db->where('item_id !=', $item_id);
 	}
+		$query=$this->db->get();
 	
-	function count_all()
+		return ($query->num_rows() == 1);
+	}
+	
+	public function get_total_rows()
 	{
 		$this->db->from('items');
 		$this->db->where('deleted',0);
@@ -33,53 +34,127 @@
 		return $this->db->count_all_results();
 	}
 
-	function get_all_filtered($is_serialized=0,$no_description,$search_custom,$is_deleted)/**GARRISON MODIFIED 4/21/2013, Parq 131215 **/
+	/*
+	 Get number of rows
+	*/
+	public function get_found_rows($search, $filters)
+	{
+		return $this->search($search, $filters)->num_rows();
+	}
+
+	/*
+	 Perform a search on items
+	*/
+	public function search($search, $filters, $rows=0, $limit_from=0)
 	{
 		$this->db->from('items');
-		if ($is_serialized !=0 )
+		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
+		$this->db->join('inventory', 'inventory.trans_items = items.item_id');
+
+		if ($filters['stock_location_id'] > -1)
+		{
+			$this->db->join('item_quantities', 'item_quantities.item_id = items.item_id');
+			$this->db->where('location_id', $filters['stock_location_id']);
+		}
+
+		if (empty($search))
+		{
+			$this->db->where('DATE_FORMAT(trans_date, "%Y-%m-%d") BETWEEN ' . $this->db->escape($filters['start_date']) . ' AND ' . $this->db->escape($filters['end_date']));
+		}
+		else
+		{
+			if ($filters['search_custom'] == FALSE)
+			{
+				$this->db->where("(name LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"item_number LIKE '" . $this->db->escape_like_str($search) . "%' OR " .
+								$this->db->dbprefix('items').".item_id LIKE '" . $this->db->escape_like_str($search) . "%' OR " .
+								"company_name LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"category LIKE '%" . $this->db->escape_like_str($search) . "%')");
+			}
+			else
+			{
+				$this->db->where("(custom1 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom2 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom3 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom4 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom5 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom6 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom7 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom8 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom9 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
+								"custom10 LIKE '%" . $this->db->escape_like_str($search) . "%')");
+			}
+		}
+
+		$this->db->where('items.deleted', $filters['is_deleted']);
+
+		if ($filters['empty_upc'] != FALSE)
+		{
+			$this->db->where('item_number', null);
+		}
+		if ($filters['low_inventory'] != FALSE)
+		{
+			$this->db->where('quantity <=', 'reorder_level');
+		}
+		if ($filters['is_serialized'] != FALSE)
 		{
 			$this->db->where('is_serialized',1);
 		}
-		if ($no_description!=0 )
+		if ($filters['no_description'] != FALSE)
 		{
-			$this->db->where('description','');
+			$this->db->where('items.description', '');
 		}        
         
+		// avoid duplicate entry with same name because of inventory reporting multiple changes on the same item in the same date range
+		$this->db->group_by('items.item_id');
         
-/**GARRISON SECTION ADDED 4/21/2013**/
-/**
-		if ($search_custom!=0 )
+		// order by name of item
+		$this->db->order_by('items.name', 'asc');
+
+		if ($rows > 0) 
 		{
-			$this->db->like('custom1',$search);
-			$this->db->or_like('custom2',$search);
-			$this->db->or_like('custom3',$search);
-			$this->db->or_like('custom4',$search);
-			$this->db->or_like('custom5',$search);
-			$this->db->or_like('custom6',$search);
-			$this->db->or_like('custom7',$search);
-			$this->db->or_like('custom8',$search);
-			$this->db->or_like('custom9',$search);
-			$this->db->or_like('custom10',$search);
+			$this->db->limit($rows, $limit_from);
+		}
+
+		return $this->db->get();
+	}
+	
+	/*
+	 Returns all the items
+	*/
+	public function get_all($stock_location_id=-1, $rows=0, $limit_from=0)
+	{
+		$this->db->from('items');
+		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
+
+		if ($stock_location_id > -1)
+		{
+			$this->db->join('item_quantities', 'item_quantities.item_id=items.item_id');
+			$this->db->where('location_id', $stock_location_id);
 		}
-**/		
-/* Parq 131215 start*/
-		if ($is_deleted !=0 )
+
+		$this->db->where('items.deleted', 0);
+		
+		// order by name of item
+		$this->db->order_by('items.name', 'asc');
+
+		if ($rows > 0)
 		{
-			$this->db->where('deleted',1);
-		} else {
-		$this->db->where('deleted',0);
+			$this->db->limit($rows, $limit_from);
 		}
-/* Parq 131215 end*/
-		$this->db->order_by("name", "asc");
+
 		return $this->db->get();
 	}
 
 	/*
 	Gets information about a particular item
 	*/
-	function get_info($item_id)
+	public function get_info($item_id)
 	{
+		$this->db->select('items.*');
+		$this->db->select('suppliers.company_name');
 		$this->db->from('items');
+		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
 		$this->db->where('item_id',$item_id);
 		
 		$query = $this->db->get();
@@ -108,11 +183,12 @@
 	/*
 	Get an item id given an item number
 	*/
-	function get_item_id($item_number)
+	public function get_item_id($item_number)
 	{
 		$this->db->from('items');
+		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
 		$this->db->where('item_number',$item_number);
-        $this->db->where('deleted',0); // Parq 131226
+		$this->db->where('items.deleted', 0);
         
 		$query = $this->db->get();
 
@@ -127,18 +203,20 @@
 	/*
 	Gets information about multiple items
 	*/
-	function get_multiple_info($item_ids)
+	public function get_multiple_info($item_ids)
 	{
 		$this->db->from('items');
+		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
 		$this->db->where_in('item_id',$item_ids);
-		$this->db->order_by("item", "asc");
+		$this->db->order_by('item_id', 'asc');
+
 		return $this->db->get();
 	}
 
 	/*
 	Inserts or updates a item
 	*/
-	function save(&$item_data,$item_id=false)
+	public function save(&$item_data, $item_id=false)
 	{
 		if (!$item_id or !$this->exists($item_id))
 		{
@@ -157,9 +236,10 @@
 	/*
 	Updates multiple items at once
 	*/
-	function update_multiple($item_data,$item_ids)
+	public function update_multiple($item_data, $item_ids)
 	{
 		$this->db->where_in('item_id',$item_ids);
+
 		return $this->db->update('items',$item_data);
 	}
 
@@ -166,9 +246,10 @@
 	/*
 	Deletes one item
 	*/
-	function delete($item_id)
+	public function delete($item_id)
 	{
 		$this->db->where('item_id', $item_id);
+
 		return $this->db->update('items', array('deleted' => 1));
 	}
 
@@ -175,9 +256,10 @@
 	/*
 	Deletes a list of items
 	*/
-	function delete_list($item_ids)
+	public function delete_list($item_ids)
 	{
 		$this->db->where_in('item_id',$item_ids);
+
 		return $this->db->update('items', array('deleted' => 1));
  	}
 
@@ -184,56 +266,78 @@
  	/*
 	Get search suggestions to find items
 	*/
-	function get_search_suggestions($search,$limit=25)
+	public function get_search_suggestions($search, $limit=25, $search_custom=0, $is_deleted=0)
 	{
 		$suggestions = array();
 
-		$this->db->from('items');
-		$this->db->like('name', $search);
-		$this->db->where('deleted',0);
-		$this->db->order_by("name", "asc");
-		$by_name = $this->db->get();
-		foreach($by_name->result() as $row)
-		{
-			$suggestions[]=$row->name;
-		}
-
 		$this->db->select('category');
 		$this->db->from('items');
-		$this->db->where('deleted',0);
+		$this->db->where('deleted', $is_deleted);
 		$this->db->distinct();
 		$this->db->like('category', $search);
-		$this->db->order_by("category", "asc");
+		$this->db->order_by('category', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
 			$suggestions[]=$row->category;
 		}
 
+		$this->db->select('company_name');
+		$this->db->from('suppliers');
+		$this->db->like('company_name', $search);
+		// restrict to non deleted companies only if is_deleted if false
+		if( $is_deleted == 0 )
+		{
+			$this->db->where('deleted', $is_deleted);
+		}
+		$this->db->distinct();
+		$this->db->order_by('company_name', 'asc');
+		$by_company_name = $this->db->get();
+		foreach($by_company_name->result() as $row)
+		{
+			$suggestions[] = $row->company_name;
+		}
+		
+		$this->db->select('name');
+		$this->db->from('items');
+		$this->db->like('name', $search);
+		$this->db->where('deleted', $is_deleted);
+		$this->db->order_by('name', 'asc');
+		$by_name = $this->db->get();
+		foreach($by_name->result() as $row)
+		{
+			$suggestions[] = $row->name;
+		}
+
+		$this->db->select('item_number');
 		$this->db->from('items');
 		$this->db->like('item_number', $search);
-		$this->db->where('deleted',0);
-		$this->db->order_by("item_number", "asc");
+		$this->db->where('deleted', $is_deleted);
+		$this->db->order_by('item_number', 'asc');
 		$by_item_number = $this->db->get();
 		foreach($by_item_number->result() as $row)
 		{
 			$suggestions[]=$row->item_number;
 		}
-/** GARRISON ADDED 4/21/2013 **/
+
 	//Search by description
+		$this->db->select('name, description');
 		$this->db->from('items');
 		$this->db->like('description', $search);
-		$this->db->where('deleted',0);
-		$this->db->order_by("description", "asc");
+		$this->db->where('deleted', $is_deleted);
+		$this->db->order_by('description', 'asc');
 		$by_name = $this->db->get();
 		foreach($by_name->result() as $row)
 		{
+			if (!in_array($row->name, $suggestions))
+			{
 			$suggestions[]=$row->name;
 		}
-/** END GARRISON ADDED **/
+		}
 
-/** GARRISON ADDED 4/22/2013 **/
 	//Search by custom fields
+		if ($search_custom != 0)
+		{
 		$this->db->from('items');
 		$this->db->like('custom1', $search);
 		$this->db->or_like('custom2', $search);
@@ -245,64 +349,70 @@
 		$this->db->or_like('custom8', $search);
 		$this->db->or_like('custom9', $search);
 		$this->db->or_like('custom10', $search);
-		$this->db->where('deleted',0);
-		$this->db->order_by("name", "asc");
+			$this->db->where('deleted', $is_deleted);
 		$by_name = $this->db->get();
 		foreach($by_name->result() as $row)
 		{
 			$suggestions[]=$row->name;
 		}
-/** END GARRISON ADDED **/		
+		}
 		
 	//only return $limit suggestions
 		if(count($suggestions > $limit))
 		{
 			$suggestions = array_slice($suggestions, 0,$limit);
 		}
-		return $suggestions;
 
+		return $suggestions;
 	}
 
-	function get_item_search_suggestions($search,$limit=25)
+	public function get_item_search_suggestions($search, $limit=25, $search_custom=0, $is_deleted=0)
 	{
 		$suggestions = array();
 
+		$this->db->select('item_id, name');
 		$this->db->from('items');
-		$this->db->where('deleted',0);
+		$this->db->where('deleted', $is_deleted);
 		$this->db->like('name', $search);
-		$this->db->order_by("name", "asc");
+		$this->db->order_by('name', 'asc');
 		$by_name = $this->db->get();
 		foreach($by_name->result() as $row)
 		{
 			$suggestions[]=$row->item_id.'|'.$row->name;
 		}
 
+		$this->db->select('item_id, item_number');
 		$this->db->from('items');
-		$this->db->where('deleted',0);
+		$this->db->where('deleted', $is_deleted);
 		$this->db->like('item_number', $search);
-		$this->db->order_by("item_number", "asc");
+		$this->db->order_by('item_number', 'asc');
 		$by_item_number = $this->db->get();
 		foreach($by_item_number->result() as $row)
 		{
 			$suggestions[]=$row->item_id.'|'.$row->item_number;
 		}
-/** GARRISON ADDED 4/21/2013 **/
+
 	//Search by description
+		$this->db->select('item_id, name, description');
 		$this->db->from('items');
-		$this->db->where('deleted',0);
+		$this->db->where('deleted', $is_deleted);
 		$this->db->like('description', $search);
-		$this->db->order_by("description", "asc");
+		$this->db->order_by('description', 'asc');
 		$by_description = $this->db->get();
 		foreach($by_description->result() as $row)
 		{
-			$suggestions[]=$row->item_id.'|'.$row->name;
+			$entry = $row->item_id.'|'.$row->name;
+			if (!in_array($entry, $suggestions))
+			{
+				$suggestions[] = $entry;
+			}
 		}
-/** END GARRISON ADDED **/	
-		/** GARRISON ADDED 4/22/2013 **/		
+
 	//Search by custom fields
-		/*$this->db->from('items');
-		$this->db->where('deleted',0);
-        $this->db->where('stock_type',$stock_type);
+		if ($search_custom != 0)
+		{
+			$this->db->from('items');
+			$this->db->where('deleted', $is_deleted);
 		$this->db->like('custom1', $search);
 		$this->db->or_like('custom2', $search);
 		$this->db->or_like('custom3', $search);
@@ -313,13 +423,12 @@
 		$this->db->or_like('custom8', $search);
 		$this->db->or_like('custom9', $search);
 		$this->db->or_like('custom10', $search);
-		$this->db->order_by("name", "asc");
 		$by_description = $this->db->get();
 		foreach($by_description->result() as $row)
 		{
 			$suggestions[]=$row->item_id.'|'.$row->name;
-		}*/
-		/** END GARRISON ADDED **/
+			}
+		}
 		
 		//only return $limit suggestions
 		if(count($suggestions > $limit))
@@ -329,7 +439,7 @@
 		return $suggestions;
 	}
 
-	function get_category_suggestions($search)
+	public function get_category_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -337,7 +447,7 @@
 		$this->db->from('items');
 		$this->db->like('category', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("category", "asc");
+		$this->db->order_by('category', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -347,8 +457,7 @@
 		return $suggestions;
 	}
 
-/** GARRISON ADDED 5/18/2013 **/	
-	function get_location_suggestions($search)
+	public function get_location_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -356,7 +465,7 @@
 		$this->db->from('items');
 		$this->db->like('location', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("location", "asc");
+		$this->db->order_by('location', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -366,7 +475,7 @@
 		return $suggestions;
 	}
 
-	function get_custom1_suggestions($search)
+	public function get_custom1_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -374,7 +483,7 @@
 		$this->db->from('items');
 		$this->db->like('custom1', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom1", "asc");
+		$this->db->order_by('custom1', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -384,7 +493,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom2_suggestions($search)
+	public function get_custom2_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -392,7 +501,7 @@
 		$this->db->from('items');
 		$this->db->like('custom2', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom2", "asc");
+		$this->db->order_by('custom2', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -402,7 +511,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom3_suggestions($search)
+	public function get_custom3_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -410,7 +519,7 @@
 		$this->db->from('items');
 		$this->db->like('custom3', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom3", "asc");
+		$this->db->order_by('custom3', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -420,7 +529,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom4_suggestions($search)
+	public function get_custom4_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -428,7 +537,7 @@
 		$this->db->from('items');
 		$this->db->like('custom4', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom4", "asc");
+		$this->db->order_by('custom4', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -438,7 +547,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom5_suggestions($search)
+	public function get_custom5_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -446,7 +555,7 @@
 		$this->db->from('items');
 		$this->db->like('custom5', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom5", "asc");
+		$this->db->order_by('custom5', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -456,7 +565,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom6_suggestions($search)
+	public function get_custom6_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -464,7 +573,7 @@
 		$this->db->from('items');
 		$this->db->like('custom6', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom6", "asc");
+		$this->db->order_by('custom6', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -474,7 +583,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom7_suggestions($search)
+	public function get_custom7_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -482,7 +591,7 @@
 		$this->db->from('items');
 		$this->db->like('custom7', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom7", "asc");
+		$this->db->order_by('custom7', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -492,7 +601,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom8_suggestions($search)
+	public function get_custom8_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -500,7 +609,7 @@
 		$this->db->from('items');
 		$this->db->like('custom8', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom8", "asc");
+		$this->db->order_by('custom8', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -510,7 +619,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom9_suggestions($search)
+	public function get_custom9_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -518,7 +627,7 @@
 		$this->db->from('items');
 		$this->db->like('custom9', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom9", "asc");
+		$this->db->order_by('custom9', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -528,7 +637,7 @@
 		return $suggestions;
 	}
 	
-	function get_custom10_suggestions($search)
+	public function get_custom10_suggestions($search)
 	{
 		$suggestions = array();
 		$this->db->distinct();
@@ -536,7 +645,7 @@
 		$this->db->from('items');
 		$this->db->like('custom10', $search);
 		$this->db->where('deleted', 0);
-		$this->db->order_by("custom10", "asc");
+		$this->db->order_by('custom10', 'asc');
 		$by_category = $this->db->get();
 		foreach($by_category->result() as $row)
 		{
@@ -545,64 +654,51 @@
 	
 		return $suggestions;
 	}
-/** END GARRISON ADDED **/	
-	/*
-	Preform a search on items
-	*/
-	function search($search)
-	{
-		$this->db->from('items');
-		$this->db->where("(
-				name LIKE '%".$this->db->escape_like_str($search)."%' or 
-				item_number LIKE '%".$this->db->escape_like_str($search)."%' or 
-				description LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/21/2013**/
-				custom1 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom2 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom3 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom4 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom5 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom6 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom7 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom8 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom9 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				custom10 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
-				category LIKE '%".$this->db->escape_like_str($search)."%') and 
-				deleted=0");
-		$this->db->order_by("name", "asc");
-		return $this->db->get();	
-	}
 
-	function get_categories()
+	public function get_categories()
 	{
 		$this->db->select('category');
 		$this->db->from('items');
 		$this->db->where('deleted',0);
 		$this->db->distinct();
-		$this->db->order_by("category", "asc");
+		$this->db->order_by('category', 'asc');
 
 		return $this->db->get();
 	}
     
-    function is_sale_store_item_exist($item_number)
+	/*
+	 * changes the cost price of a given item
+	 * calculates the average price between received items and items on stock
+	 * $item_id : the item which price should be changed
+	 * $items_received : the amount of new items received
+	 * $new_price : the cost-price for the newly received items
+	 * $old_price (optional) : the current-cost-price
+	 * 
+	 * used in receiving-process to update cost-price if changed
+	 * caution: must be used there before item_quantities gets updated, otherwise average price is wrong!
+	 * 
+	 */
+	public function change_cost_price($item_id, $items_received, $new_price, $old_price = null)
     {
-        $this->db->from('items');
-        $this->db->where('item_number',$item_number);
-        $this->db->where('stock_type','sale_stock');
-        $this->db->where('deleted',0);
-
-        $query = $this->db->get();
-        return ($query->num_rows()==1);
+		if($old_price === null)
+		{
+			$item_info = $this->get_info($item['item_id']);
+			$old_price = $item_info->cost_price;
     }
     
-    function is_warehouse_item_exist($item_number)
-    {
-        $this->db->from('items');
-        $this->db->where('item_number',$item_number);
-        $this->db->where('stock_type','warehouse');
-        $this->db->where('deleted',0);
+		$this->db->from('item_quantities');
+		$this->db->select_sum('quantity');
+        $this->db->where('item_id', $item_id);
+		$this->db->join('stock_locations', 'stock_locations.location_id=item_quantities.location_id');
+        $this->db->where('stock_locations.deleted', 0);
+		$old_total_quantity = $this->db->get()->row()->quantity;
 
-        $query = $this->db->get();
-        return ($query->num_rows()==1);
+		$total_quantity = $old_total_quantity + $items_received;
+		$average_price = bcdiv(bcadd(bcmul($items_received, $new_price), bcmul($old_total_quantity, $old_price)), $total_quantity);
+
+		$data = array('cost_price' => $average_price);
+		
+		return $this->save($data, $item_id);
     }
 }
 ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/item_kit.php opensourcepos/application/models/Item_kit.php
--- pos-prod/application/models/item_kit.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Item_kit.php	2016-05-23 15:32:31.911839305 -0700
@@ -8,26 +8,30 @@
 	{
 		$this->db->from('item_kits');
 		$this->db->where('item_kit_id',$item_kit_id);
-		$query = $this->db->get();
 
-		return ($query->num_rows()==1);
+		return ($this->db->get()->num_rows()==1);
 	}
 
 	/*
 	Returns all the item kits
 	*/
-	function get_all($limit=10000, $offset=0)
+	function get_all($rows=0, $limit_from=0)
 	{
 		$this->db->from('item_kits');
-		$this->db->order_by("name", "asc");
-		$this->db->limit($limit);
-		$this->db->offset($offset);
+		$this->db->order_by('name', 'asc');
+
+		if ($rows > 0)
+		{
+			$this->db->limit($rows, $limit_from);
+		}
+
 		return $this->db->get();
 	}
 	
-	function count_all()
+	function get_total_rows()
 	{
 		$this->db->from('item_kits');
+
 		return $this->db->count_all_results();
 	}
 
@@ -69,7 +73,8 @@
 	{
 		$this->db->from('item_kits');
 		$this->db->where_in('item_kit_id',$item_kit_ids);
-		$this->db->order_by("name", "asc");
+		$this->db->order_by('name', 'asc');
+
 		return $this->db->get();
 	}
 
@@ -117,9 +126,27 @@
 		$suggestions = array();
 
 		$this->db->from('item_kits');
+
+		//KIT #
+		if (stripos($search, 'KIT ') !== false)
+		{
+			$this->db->like('item_kit_id', str_ireplace('KIT ', '', $search));
+			
+			$this->db->order_by('item_kit_id', 'asc');
+			$by_name = $this->db->get();
+	
+			foreach($by_name->result() as $row)
+			{
+				$suggestions[] = 'KIT ' . $row->item_kit_id;
+			}			
+		}
+		else
+		{
 		$this->db->like('name', $search);
-		$this->db->order_by("name", "asc");
+			
+			$this->db->order_by('name', 'asc');
 		$by_name = $this->db->get();
+	
 		foreach($by_name->result() as $row)
 		{
 			$suggestions[]=$row->name;
@@ -124,14 +151,15 @@
 		{
 			$suggestions[]=$row->name;
 		}
+		}
 
 		//only return $limit suggestions
 		if(count($suggestions > $limit))
 		{
 			$suggestions = array_slice($suggestions, 0,$limit);
 		}
-		return $suggestions;
 
+		return $suggestions;
 	}
 	
 	function get_item_kit_search_suggestions($search, $limit=25)
@@ -140,10 +168,12 @@
 
 		$this->db->from('item_kits');
 		$this->db->like('name', $search);
-		$this->db->order_by("name", "asc");
+		$this->db->order_by('name', 'asc');
 		$by_name = $this->db->get();
+
 		foreach($by_name->result() as $row)
 		{
+			// do not touch the '|' otherwise the sale search will not fetch the kit
 			$suggestions[]='KIT '.$row->item_kit_id.'|'.$row->name;
 		}
 
@@ -152,20 +182,48 @@
 		{
 			$suggestions = array_slice($suggestions, 0,$limit);
 		}
-		return $suggestions;
 		
+		return $suggestions;
 	}
 
 	/*
-	Preform a search on items
+	Perform a search on items
 	*/
-	function search($search)
+	function search($search, $rows=0, $limit_from=0)
 	{
 		$this->db->from('item_kits');
-		$this->db->where("name LIKE '%".$this->db->escape_like_str($search)."%' or 
-		description LIKE '%".$this->db->escape_like_str($search)."%'");
-		$this->db->order_by("name", "asc");
+		$this->db->like('name', $search);
+		$this->db->or_like('description', $search);
+		
+		//KIT #
+		if (stripos($search, 'KIT ') !== false)
+		{
+			$this->db->or_like('item_kit_id', str_ireplace('KIT ', '', $search));
+		}
+
+		$this->db->order_by('name', 'asc');
+
+		if ($rows > 0)
+		{
+			$this->db->limit($rows, $limit_from);
+		}
+
 		return $this->db->get();	
 	}
+	
+	function get_found_rows($search)
+	{
+		$this->db->from('item_kits');
+		$this->db->like('name', $search);
+		$this->db->or_like('description', $search);
+		
+		//KIT #
+		if (stripos($search, 'KIT ') !== false)
+		{
+			$this->db->or_like('item_kit_id', str_ireplace('KIT ', '', $search));
+		}
+
+		return $this->db->get()->num_rows();
+	}
 }
 ?>
\ No newline at end of file
Only in pos-prod/application/models: item_quantities.php
Only in opensourcepos/application/models: Item_quantity.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/item_taxes.php opensourcepos/application/models/Item_taxes.php
--- pos-prod/application/models/item_taxes.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Item_taxes.php	2016-05-23 15:32:31.911839305 -0700
@@ -21,15 +21,15 @@
 		$this->db->trans_start();
 
 		$this->delete($item_id);
-		
+		$result = TRUE;
 		foreach ($items_taxes_data as $row)
 		{
 			$row['item_id'] = $item_id;
-			$this->db->insert('items_taxes',$row);		
+			$result &= $this->db->insert('items_taxes',$row);		
 		}
 		
 		$this->db->trans_complete();
-		return true;
+		return $result;
 	}
 	
 	function save_multiple(&$items_taxes_data, $item_ids)
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/module.php opensourcepos/application/models/Module.php
--- pos-prod/application/models/module.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Module.php	2016-05-23 15:32:31.911839305 -0700
@@ -31,6 +31,21 @@
 		return $this->lang->line('error_unknown');	
 	}
 	
+	function get_all_permissions()
+	{
+		$this->db->from('permissions');
+		return $this->db->get();
+	}
+	
+	function get_all_subpermissions()
+	{
+		$this->db->from('permissions');
+		$this->db->join('modules', 'modules.module_id=permissions.module_id');
+		// can't quote the parameters correctly when using different operators..
+		$this->db->where($this->db->dbprefix('modules').'.module_id!=', 'permission_id', FALSE);
+		return $this->db->get();
+	}
+	
 	function get_all_modules()
 	{
 		$this->db->from('modules');
@@ -41,8 +56,9 @@
 	function get_allowed_modules($person_id)
 	{
 		$this->db->from('modules');
-		$this->db->join('permissions','permissions.module_id=modules.module_id');
-		$this->db->where("permissions.person_id",$person_id);
+		$this->db->join('permissions','permissions.permission_id=modules.module_id');
+		$this->db->join('grants','permissions.permission_id=grants.permission_id');
+		$this->db->where("person_id",$person_id);
 		$this->db->order_by("sort", "asc");
 		return $this->db->get();		
 	}
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/person.php opensourcepos/application/models/Person.php
--- pos-prod/application/models/person.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Person.php	2016-05-23 15:32:31.911839305 -0700
@@ -84,7 +84,7 @@
 		$this->db->where('person_id', $person_id);
 		return $this->db->update('people',$person_data);
 	}
-/** GARRISON ADDED 4/25/2013 IN PROGRESS **/
+
 	/*
 	 Get search suggestions to find customers
 	*/
@@ -122,7 +123,7 @@
 	*/
 	function delete($person_id)
 	{
-		return true;; 
+		return true;
 	}
 	
 	/*
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/receiving.php opensourcepos/application/models/Receiving.php
--- pos-prod/application/models/receiving.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/models/Receiving.php	2016-05-23 15:32:31.911839305 -0700
@@ -4,10 +4,36 @@
 	function get_info($receiving_id)
 	{
 		$this->db->from('receivings');
+		$this->db->join('people', 'people.person_id = receivings.supplier_id', 'LEFT');
 		$this->db->where('receiving_id',$receiving_id);
 		return $this->db->get();
 	}
 	
+	function get_invoice_count()
+	{
+		$this->db->from('receivings');
+		$this->db->where('invoice_number is not null');
+		return $this->db->count_all_results();
+	}
+	
+	function get_receiving_by_invoice_number($invoice_number)
+	{
+		$this->db->from('receivings');
+		$this->db->where('invoice_number', $invoice_number);
+		return $this->db->get();
+	}
+	
+	function get_invoice_number_for_year($year='', $start_from = 0)
+	{
+		$year = $year == '' ? date('Y') : $year;
+		$this->db->select("COUNT( 1 ) AS invoice_number_year", FALSE);
+		$this->db->from('receivings');
+		$this->db->where("DATE_FORMAT(receiving_time, '%Y' ) = ", $year, FALSE);
+		$this->db->where("invoice_number IS NOT ", "NULL", FALSE);
+		$result = $this->db->get()->row_array();
+		return ($start_from + $result[ 'invoice_number_year' ] + 1);
+	}
+	
 	function exists($receiving_id)
 	{
 		$this->db->from('receivings');
@@ -17,7 +43,15 @@
 		return ($query->num_rows()==1);
 	}
 
-	function save ($items,$supplier_id,$employee_id,$comment,$payment_type,$receiving_id=false)
+	function update($receiving_data, $receiving_id)
+	{
+		$this->db->where('receiving_id', $receiving_id);
+		$success = $this->db->update('receivings',$receiving_data);
+	
+		return $success;
+	}
+
+	function save ($items,$supplier_id,$employee_id,$comment,$invoice_number,$payment_type,$receiving_id=false)
 	{
 		if(count($items)==0)
 			return -1;
@@ -26,7 +60,8 @@
 		'supplier_id'=> $this->Supplier->exists($supplier_id) ? $supplier_id : null,
 		'employee_id'=>$employee_id,
 		'payment_type'=>$payment_type,
-		'comment'=>$comment
+		'comment'=>$comment,
+		'invoice_number'=>$invoice_number
 		);
 
 		//Run these queries as a transaction, we want to make sure we do all or nothing
@@ -40,14 +75,15 @@
 		{
 			$cur_item_info = $this->Item->get_info($item['item_id']);
 
-			$receivings_items_data = array
-			(
+
+			$receivings_items_data = array(
 				'receiving_id'=>$receiving_id,
 				'item_id'=>$item['item_id'],
 				'line'=>$item['line'],
 				'description'=>$item['description'],
 				'serialnumber'=>$item['serialnumber'],
 				'quantity_purchased'=>$item['quantity'],
+				'receiving_quantity'=>$item['receiving_quantity'],
 				'discount_percent'=>$item['discount'],
 				'item_cost_price' => $cur_item_info->cost_price,
 				'item_unit_price'=>$item['price'],
@@ -53,23 +89,28 @@
 				'item_unit_price'=>$item['price'],
 				'item_location'=>$item['item_location']
 			);
+
 			$this->db->insert('receivings_items',$receivings_items_data);
-			// Update Receivings -> Items Receiving screen to allow cost field from screen to update item cost in database
-			$items_data = array
-			(
-				'item_id'=>$item['item_id'],
-				'cost_price'=>$item['price']
-			);
-			$this->Item->save($items_data,$item['item_id']);
+
+			$items_received = $item['receiving_quantity'] != 0 ? $item['quantity'] * $item['receiving_quantity'] : $item['quantity'];
+
+			// update cost price, if changed AND is set in config as wanted
+			if($cur_item_info->cost_price != $item['price']
+					AND	$this->config->item('receiving_calculate_average_price') == 'receiving_calculate_average_price')
+			{
+				$this->Item->change_cost_price($item['item_id'],
+												$items_received,
+												$item['price'],
+												$cur_item_info->cost_price);
+			}
 
 			//Update stock quantity
-			$item_quantity = $this->Item_quantities->get_item_quantity($item['item_id'], $item['item_location']);		
-            $this->Item_quantities->save(array('quantity'=>$item_quantity->quantity + $item['quantity'],
+			$item_quantity = $this->Item_quantity->get_item_quantity($item['item_id'], $item['item_location']);
+            $this->Item_quantity->save(array('quantity'=>$item_quantity->quantity + $items_received,
                                               'item_id'=>$item['item_id'],
                                               'location_id'=>$item['item_location']), $item['item_id'], $item['item_location']);
 			
 			
-			$qty_recv = $item['quantity'];
 			$recv_remarks ='RECV '.$receiving_id;
 			$inv_data = array
 			(
@@ -78,7 +119,7 @@
 				'trans_user'=>$employee_id,
 				'trans_location'=>$item['item_location'],
 				'trans_comment'=>$recv_remarks,
-				'trans_inventory'=>$qty_recv
+				'trans_inventory'=>$items_received
 			);
 			$this->Inventory->insert($inv_data);
 
@@ -88,13 +129,60 @@
 		
 		if ($this->db->trans_status() === FALSE)
 		{
-			//file_put_contents("./tmp/logfile","TRANS FAILED",FILE_APPEND);
 			return -1;
 		}
-//file_put_contents("./tmp/logfile","TRANS SUCCEEDED",FILE_APPEND);
+
 		return $receiving_id;
 	}
 
+	function delete_list($receiving_ids,$employee_id,$update_inventory=TRUE)
+	{
+		$result = TRUE;
+		foreach($receiving_ids as $receiving_id) {
+			$result &= $this->delete($receiving_id,$employee_id,$update_inventory);
+		}
+		return $result;
+	}
+	
+	function delete($receiving_id,$employee_id,$update_inventory=TRUE)
+	{
+		// start a transaction to assure data integrity
+		$this->db->trans_start();
+		if ($update_inventory) {
+			// defect, not all item deletions will be undone??
+			// get array with all the items involved in the sale to update the inventory tracking
+			$items = $this->get_receiving_items($receiving_id)->result_array();
+			foreach($items as $item) {
+				// create query to update inventory tracking
+				$inv_data = array
+				(
+						'trans_date'=>date('Y-m-d H:i:s'),
+						'trans_items'=>$item['item_id'],
+						'trans_user'=>$employee_id,
+						'trans_comment'=>'Deleting receiving ' . $receiving_id,
+						'trans_location'=>$item['item_location'],
+						'trans_inventory'=>$item['quantity_purchased']*-1
+	
+				);
+				// update inventory
+				$this->Inventory->insert($inv_data);
+
+				// update quantities
+				$this->Item_quantity->change_quantity($item['item_id'],
+														$item['item_location'],
+														$item['quantity_purchased']*-1);
+			}
+		}
+		// delete all items
+		$this->db->delete('receivings_items', array('receiving_id' => $receiving_id));
+		// delete sale itself
+		$this->db->delete('receivings', array('receiving_id' => $receiving_id));
+		// execute transaction
+		$this->db->trans_complete();
+	
+		return $this->db->trans_status();
+	}
+
 	function get_receiving_items($receiving_id)
 	{
 		$this->db->from('receivings_items');
@@ -109,16 +197,29 @@
 		return $this->Supplier->get_info($this->db->get()->row()->supplier_id);
 	}
 	
+	function invoice_number_exists($invoice_number,$receiving_id='')
+	{
+		$this->db->from('receivings');
+		$this->db->where('invoice_number', $invoice_number);
+		if (!empty($receiving_id))
+		{
+			$this->db->where('receiving_id !=', $receiving_id);
+		}
+		$query=$this->db->get();
+		return ($query->num_rows()==1);
+	}
+	
 	//We create a temp table that allows us to do easy report/receiving queries
-	public function create_receivings_items_temp_table()
+	function create_receivings_items_temp_table()
 	{
-		$this->db->query("CREATE TEMPORARY TABLE ".$this->db->dbprefix('receivings_items_temp')."
-		(SELECT date(receiving_time) as receiving_date, ".$this->db->dbprefix('receivings_items').".receiving_id, comment,payment_type, employee_id, 
-		".$this->db->dbprefix('items').".item_id, ".$this->db->dbprefix('receivings').".supplier_id, quantity_purchased, item_cost_price, item_unit_price,
-		discount_percent, (item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as subtotal,
+		$this->db->query("CREATE TEMPORARY TABLE IF NOT EXISTS ".$this->db->dbprefix('receivings_items_temp')."
+		(SELECT date(receiving_time) as receiving_date, ".$this->db->dbprefix('receivings_items').".receiving_id, comment, item_location, invoice_number, payment_type, employee_id,
+		".$this->db->dbprefix('items').".item_id, ".$this->db->dbprefix('receivings').".supplier_id, quantity_purchased, ".$this->db->dbprefix('receivings_items').".receiving_quantity,
+		item_cost_price, item_unit_price, discount_percent, (item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as subtotal,
 		".$this->db->dbprefix('receivings_items').".line as line, serialnumber, ".$this->db->dbprefix('receivings_items').".description as description,
 		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as total,
-		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) - (item_cost_price*quantity_purchased) as profit
+		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) - (item_cost_price*quantity_purchased) as profit,
+		(item_cost_price*quantity_purchased) as cost
 		FROM ".$this->db->dbprefix('receivings_items')."
 		INNER JOIN ".$this->db->dbprefix('receivings')." ON  ".$this->db->dbprefix('receivings_items').'.receiving_id='.$this->db->dbprefix('receivings').'.receiving_id'."
 		INNER JOIN ".$this->db->dbprefix('items')." ON  ".$this->db->dbprefix('receivings_items').'.item_id='.$this->db->dbprefix('items').'.item_id'."
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/detailed_receivings.php opensourcepos/application/models/reports/Detailed_receivings.php
--- pos-prod/application/models/reports/detailed_receivings.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/models/reports/Detailed_receivings.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,22 +9,32 @@
 	
 	public function getDataColumns()
 	{
-		return array('summary' => array($this->lang->line('reports_receiving_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_received'), $this->lang->line('reports_received_by'), $this->lang->line('reports_supplied_by'), $this->lang->line('reports_total'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
-					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_total'), $this->lang->line('reports_discount'))
+		return array('summary' => array($this->lang->line('reports_receiving_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_received_by'), $this->lang->line('reports_supplied_by'), $this->lang->line('reports_total'), $this->lang->line('reports_payment_type'), $this->lang->line('recvs_invoice_number'), $this->lang->line('reports_comments')),
+					'details' => array($this->lang->line('reports_item_number'), $this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_count'), $this->lang->line('reports_total'), $this->lang->line('reports_discount'))
 		);		
 	}
 	
+	public function getDataByReceivingId($receiving_id)
+	{
+		$this->db->select('receiving_id, DATE_FORMAT(receiving_date, "%d-%m-%Y") AS receiving_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name, " ", employee.last_name) as employee_name, suppliers.company_name as supplier_name, sum(subtotal) as subtotal, sum(total) as total, sum(profit) as profit, payment_type, comment, invoice_number', false);
+		$this->db->from('receivings_items_temp');
+		$this->db->join('people as employee', 'receivings_items_temp.employee_id = employee.person_id');
+		$this->db->join('suppliers as suppliers', 'receivings_items_temp.supplier_id = suppliers.person_id', 'left');
+		$this->db->where('receiving_id', $receiving_id);
+
+		return $this->db->get()->row_array();
+	}
+	
 	public function getData(array $inputs)
 	{
-		$supplier_id = $inputs['supplier_id'];
-		$this->db->select('receiving_id, receiving_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(supplier.first_name," ",supplier.last_name) as supplier_name, sum(total) as total, sum(profit) as profit, payment_type, comment', false);
+		$this->db->select('receiving_id, receiving_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(supplier.first_name," ",supplier.last_name) as supplier_name, sum(total) as total, sum(profit) as profit, payment_type, comment, invoice_number', false);
 		$this->db->from('receivings_items_temp');
 		$this->db->join('people as employee', 'receivings_items_temp.employee_id = employee.person_id');
 		$this->db->join('people as supplier', 'receivings_items_temp.supplier_id = supplier.person_id', 'left');
-		$this->db->where('receiving_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
-		if ($supplier_id != -1)
+		$this->db->where('receiving_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
+		if ($inputs['location_id'] != 'all')
 		{
-			$this->db->where('receivings_items_temp.supplier_id = "'.$supplier_id.'"');
+			$this->db->where('item_location', $inputs['location_id']);
 		}
 		if ($inputs['receiving_type'] == 'receiving')
 		{
@@ -47,7 +57,8 @@
 		
 		foreach($data['summary'] as $key=>$value)
 		{
-			$this->db->select('name, category, quantity_purchased, serialnumber,total, discount_percent');
+			$this->db->select('name, item_number, category, quantity_purchased, serialnumber,total, discount_percent, item_location');
+			$this->db->select($this->db->dbprefix('receivings_items_temp').".receiving_quantity");
 			$this->db->from('receivings_items_temp');
 			$this->db->join('items', 'receivings_items_temp.item_id = items.item_id');
 			$this->db->where('receiving_id = '.$value['receiving_id']);
@@ -59,13 +70,13 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$supplier_id = $inputs['supplier_id'];
 		$this->db->select('sum(total) as total');
 		$this->db->from('receivings_items_temp');
-		$this->db->where('receiving_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
-		if ($supplier_id != -1)
+		$this->db->where('receiving_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
+
+		if ($inputs['location_id'] != 'all')
 		{
-			$this->db->where('receivings_items_temp.supplier_id = "'.$supplier_id.'"');
+			$this->db->where('item_location', $inputs['location_id']);
 		}
 		if ($inputs['receiving_type'] == 'receiving')
 		{
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/detailed_sales.php opensourcepos/application/models/reports/Detailed_sales.php
--- pos-prod/application/models/reports/detailed_sales.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Detailed_sales.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,40 +9,38 @@
 	
 	public function getDataColumns()
 	{
-		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
-					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'),$this->lang->line('reports_discount'))
+		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
+					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_discount'))
 		);		
 	}
 	
-	public function getDataBySaleId($sale_id, $sale_type)
+	public function getDataBySaleId($sale_id)
 	{
-		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
+		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name, " ", employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('people as employee', 'sales_items_temp.employee_id = employee.person_id');
 		$this->db->join('people as customer', 'sales_items_temp.customer_id = customer.person_id', 'left');
 		$this->db->where('sale_id', $sale_id);
-		if ($sale_type)
-		{
-			$this->db->where('quantity_purchased > 0');
-		}
-		else
-		{
-			$this->db->where('quantity_purchased < 0');
-		}
+
 		return $this->db->get()->row_array();
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
+		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('people as employee', 'sales_items_temp.employee_id = employee.person_id');
 		$this->db->join('people as customer', 'sales_items_temp.customer_id = customer.person_id', 'left');
-		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
+		$this->db->where('sale_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
+
+		if ($inputs['location_id'] != 'all')
+		{
+			$this->db->where('item_location', $inputs['location_id']);
+		}
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
-            $this->db->where('sale_type', 'sale_stock');
         }
         elseif ($inputs['sale_type'] == 'returns')
         {
@@ -57,10 +56,10 @@
 		
 		foreach($data['summary'] as $key=>$value)
 		{
-			$this->db->select('name, category, quantity_purchased, serialnumber, sales_items_temp.description, subtotal,total, tax, profit, discount_percent');
+			$this->db->select('name, category, quantity_purchased, item_location, serialnumber, sales_items_temp.description, subtotal, total, tax, cost, profit, discount_percent');
 			$this->db->from('sales_items_temp');
 			$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
-			$this->db->where('sale_id = '.$value['sale_id']);
+			$this->db->where('sale_id', $value['sale_id']);
 			$data['details'][$key] = $this->db->get()->result_array();
 		}
 		
@@ -69,9 +68,15 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
-		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
+		$this->db->where('sale_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
+
+		if ($inputs['location_id'] != 'all')
+		{
+			$this->db->where('item_location', $inputs['location_id']);
+		}
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/inventory_low.php opensourcepos/application/models/reports/Inventory_low.php
--- pos-prod/application/models/reports/inventory_low.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Inventory_low.php	2016-05-23 15:32:31.912839290 -0700
@@ -17,12 +17,9 @@
         $this->db->from('items');
         $this->db->join('item_quantities','items.item_id=item_quantities.item_id');
         $this->db->join('stock_locations','item_quantities.location_id=stock_locations.location_id');
-        
         $this->db->select('name, item_number, reorder_level, item_quantities.quantity,description,location_name');     
-
         $this->db->where('item_quantities.quantity <= reorder_level');
-        $this->db->where('items.deleted = 0');
-        
+        $this->db->where('items.deleted', 0);
         $this->db->order_by('name');
         
         return $this->db->get()->result_array();
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/inventory_summary.php opensourcepos/application/models/reports/Inventory_summary.php
--- pos-prod/application/models/reports/inventory_summary.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Inventory_summary.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,7 +9,15 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_item_name'), $this->lang->line('reports_item_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_reorder_level'),$this->lang->line('reports_stock_location'));
+		return array($this->lang->line('reports_item_name'),
+					$this->lang->line('reports_item_number'),
+					$this->lang->line('reports_description'),
+					$this->lang->line('reports_count'),
+					$this->lang->line('reports_reorder_level'),
+					$this->lang->line('reports_stock_location'),
+					$this->lang->line('reports_cost_price'),
+					$this->lang->line('reports_unit_price'),
+					$this->lang->line('reports_sub_total_value'));
 	}
 	
 	public function getData(array $inputs)
@@ -17,18 +25,55 @@
 	    $this->db->from('items');		
         $this->db->join('item_quantities','items.item_id=item_quantities.item_id');
         $this->db->join('stock_locations','item_quantities.location_id=stock_locations.location_id');
-        
-		$this->db->select('name, item_number, reorder_level, item_quantities.quantity, description,location_name');
+		$this->db->select('name, item_number, reorder_level, item_quantities.quantity, description, location_name, cost_price, unit_price, (cost_price*quantity) as sub_total_value');
 		$this->db->where('items.deleted', 0);	
-		$this->db->order_by('items.name');
+		// should be corresponding to values Inventory_summary::getItemCountDropdownArray() returns...
+		if($inputs['item_count'] == 'zero_and_less')
+		{
+			$this->db->where('quantity <=', 0);
+		}
+		elseif($inputs['item_count'] == 'more_than_zero')
+		{
+			$this->db->where('quantity >', 0);
+		}
 		
-		return $this->db->get()->result_array();
+		if($inputs['location_id'] != 'all')
+		{
+			$this->db->where('item_quantities.location_id',$inputs['location_id']);
+		}
 
+		$this->db->order_by('name');
+
+		return $this->db->get()->result_array();
 	}
 	
+	/**
+	 * calulcates the total value of the given inventory summary by summing all sub_total_values (see Inventory_summary::getData())
+	 * 
+	 * @param array $inputs expects the reports-data-array which Inventory_summary::getData() returns
+	 * @return array
+	 */
 	public function getSummaryData(array $inputs)
 	{
-		return array();
+		$return = array('total_inventory_value' => 0);
+		foreach($inputs as $input)
+		{
+			$return['total_inventory_value'] += $input['sub_total_value'];
+		}
+		return $return;
+	}
+	
+	/**
+	 * returns the array for the dropdown-element item-count in the form for the inventory summary-report
+	 * 
+	 * @return array
+	 */
+	public function getItemCountDropdownArray()
+	{
+		return array(
+					'all' => $this->lang->line('reports_all'),
+					'zero_and_less' => $this->lang->line('reports_zero_and_less'),
+					'more_than_zero' => $this->lang->line('reports_more_than_zero'));
 	}
 }
 ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/specific_customer.php opensourcepos/application/models/reports/Specific_customer.php
--- pos-prod/application/models/reports/specific_customer.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Specific_customer.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,14 +9,14 @@
 	
 	public function getDataColumns()
 	{
-		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
-					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'),$this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'),$this->lang->line('reports_discount'))
+		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
+					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_discount'))
 		);		
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name," ",last_name) as employee_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
+		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name, " ", last_name) as employee_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('people', 'sales_items_temp.employee_id = people.person_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'" and customer_id='.$inputs['customer_id']);
@@ -37,7 +39,7 @@
 		
 		foreach($data['summary'] as $key=>$value)
 		{
-			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal,total, tax, profit, discount_percent');
+			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal, total, tax, cost, profit, discount_percent');
 			$this->db->from('sales_items_temp');
 			$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 			$this->db->where('sale_id = '.$value['sale_id']);
@@ -49,9 +51,10 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'" and customer_id='.$inputs['customer_id']);
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/specific_discount.php opensourcepos/application/models/reports/Specific_discount.php
--- pos-prod/application/models/reports/specific_discount.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Specific_discount.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,14 +9,14 @@
 	
 	public function getDataColumns()
 	{
-		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_customer'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/ $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
-					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/$this->lang->line('reports_discount'))
+		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/ $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
+					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/ $this->lang->line('reports_discount'))
 		);		
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name," ",last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
+		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name, " ", last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('people as customer', 'sales_items_temp.customer_id = customer.person_id', 'left');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'" and discount_percent >='.$inputs['discount']);
@@ -39,7 +39,7 @@
 		
 		foreach($data['summary'] as $key=>$value)
 		{
-			$this->db->select('name, serialnumber, sales_items_temp.description, quantity_purchased, subtotal,total, tax, profit, discount_percent');
+			$this->db->select('name, serialnumber, category, sales_items_temp.description, quantity_purchased, subtotal, total, tax, cost, profit, discount_percent');
 			$this->db->from('sales_items_temp');
 			$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 			$this->db->where('sale_id = '.$value['sale_id'] . " AND discount_percent >= " . $inputs['discount']);
@@ -51,7 +51,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'" and discount_percent >= '.$inputs['discount']);
 				
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/specific_employee.php opensourcepos/application/models/reports/Specific_employee.php
--- pos-prod/application/models/reports/specific_employee.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Specific_employee.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,14 +9,14 @@
 	
 	public function getDataColumns()
 	{
-		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
-					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'),$this->lang->line('reports_discount'))
+		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
+					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_discount'))
 		);		
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name," ",last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
+		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name, " ", last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('people', 'sales_items_temp.customer_id = people.person_id', 'left');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'" and employee_id='.$inputs['employee_id']);
@@ -39,7 +39,7 @@
 		
 		foreach($data['summary'] as $key=>$value)
 		{
-			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal,total, tax, profit, discount_percent');
+			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal, total, tax, cost, profit, discount_percent');
 			$this->db->from('sales_items_temp');
 			$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 			$this->db->where('sale_id = '.$value['sale_id']);
@@ -51,9 +51,10 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'" and employee_id='.$inputs['employee_id']);
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_categories.php opensourcepos/application/models/reports/Summary_categories.php
--- pos-prod/application/models/reports/summary_categories.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_categories.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,12 +9,12 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_category'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
+		return array($this->lang->line('reports_category'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('category, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('category, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
@@ -34,7 +36,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_customers.php opensourcepos/application/models/reports/Summary_customers.php
--- pos-prod/application/models/reports/summary_customers.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_customers.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,12 +9,12 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_customer'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
+		return array($this->lang->line('reports_customer'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('CONCAT(first_name, " ",last_name) as customer, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit', false);
+		$this->db->select('CONCAT(first_name, " ",last_name) as customer, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('customers', 'customers.person_id = sales_items_temp.customer_id');
 		$this->db->join('people', 'customers.person_id = people.person_id');
@@ -35,7 +37,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('customers', 'customers.person_id = sales_items_temp.customer_id');
 		$this->db->join('people', 'customers.person_id = people.person_id');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_discounts.php opensourcepos/application/models/reports/Summary_discounts.php
--- pos-prod/application/models/reports/summary_discounts.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_discounts.php	2016-05-23 15:32:31.912839290 -0700
@@ -32,9 +35,10 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_employees.php opensourcepos/application/models/reports/Summary_employees.php
--- pos-prod/application/models/reports/summary_employees.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_employees.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,12 +9,12 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_employee'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
+		return array($this->lang->line('reports_employee'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('CONCAT(first_name, " ",last_name) as employee, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit', false);
+		$this->db->select('CONCAT(first_name, " ", last_name) as employee, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('employees', 'employees.person_id = sales_items_temp.employee_id');
 		$this->db->join('people', 'employees.person_id = people.person_id');
@@ -35,7 +37,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('employees', 'employees.person_id = sales_items_temp.employee_id');
 		$this->db->join('people', 'employees.person_id = people.person_id');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_items.php opensourcepos/application/models/reports/Summary_items.php
--- pos-prod/application/models/reports/summary_items.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_items.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,12 +9,12 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_item'),$this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'),$this->lang->line('reports_profit'));
+		return array($this->lang->line('reports_item'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('name, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('name, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
@@ -34,7 +36,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_payments.php opensourcepos/application/models/reports/Summary_payments.php
--- pos-prod/application/models/reports/summary_payments.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_payments.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,12 +9,12 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_payment_type'), $this->lang->line('reports_total'));
+		return array($this->lang->line('reports_payment_type'), $this->lang->line('reports_count'), $this->lang->line('reports_total'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('sales_payments.payment_type, SUM(payment_amount) as payment_amount', false);
+		$this->db->select('sales_payments.payment_type, count(*) AS count, SUM(payment_amount) AS payment_amount', false);
 		$this->db->from('sales_payments');
 		$this->db->join('sales', 'sales.sale_id=sales_payments.sale_id');
 		$this->db->where('date(sale_time) BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
@@ -18,21 +18,46 @@
 		$this->db->from('sales_payments');
 		$this->db->join('sales', 'sales.sale_id=sales_payments.sale_id');
 		$this->db->where('date(sale_time) BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
+
 		if ($inputs['sale_type'] == 'sales')
         {
-            $this->db->where('quantity_purchased > 0');
+			$this->db->where('payment_amount > 0');
         }
         elseif ($inputs['sale_type'] == 'returns')
         {
-            $this->db->where('quantity_purchased < 0');
+			$this->db->where('payment_amount < 0');
         }      
+
 		$this->db->group_by("payment_type");
-		return $this->db->get()->result_array();
+		
+		$payments = $this->db->get()->result_array();
+		
+		// consider Gift Card as only one type of payment and do not show "Gift Card: 1, Gift Card: 2, etc." in the total
+		$gift_card_count = 0;
+		$gift_card_amount = 0;
+		foreach($payments as $key=>$payment)
+		{		
+			if( strstr($payment['payment_type'], $this->lang->line('sales_giftcard')) != FALSE )
+			{
+				$gift_card_count  += $payment['count'];
+				$gift_card_amount += $payment['payment_amount'];
+
+				// remove the "Gift Card: 1", "Gift Card: 2", etc. payment string
+				unset($payments[$key]);
+			}
+		}
+
+		if( $gift_card_count > 0 )
+		{
+			$payments[] = array('payment_type' => $this->lang->line('sales_giftcard'), 'count' => $gift_card_count, 'payment_amount' => $gift_card_amount);
+		}
+		
+		return $payments;
 	}
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) AS subtotal, sum(total) AS total, sum(tax) AS tax, sum(cost) AS cost, sum(profit) AS profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_sales.php opensourcepos/application/models/reports/Summary_sales.php
--- pos-prod/application/models/reports/summary_sales.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_sales.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,13 +9,14 @@
 
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_date'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
+		return array($this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
 	}
 	
 	public function getData(array $inputs)
 	{		
-		$this->db->select('sale_date, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit');
+		$this->db->select('sale_date, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
@@ -33,9 +35,10 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
+
 		if ($inputs['sale_type'] == 'sales')
         {
             $this->db->where('quantity_purchased > 0');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_suppliers.php opensourcepos/application/models/reports/Summary_suppliers.php
--- pos-prod/application/models/reports/summary_suppliers.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_suppliers.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,12 +9,12 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_supplier'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
+		return array($this->lang->line('reports_supplier'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		$this->db->select('CONCAT(first_name, " ",last_name) as supplier, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit', false);
+		$this->db->select('CONCAT(company_name, " (", first_name, " ",last_name, ")") as supplier, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit', false);
 		$this->db->from('sales_items_temp');
 		$this->db->join('suppliers', 'suppliers.person_id = sales_items_temp.supplier_id');
 		$this->db->join('people', 'suppliers.person_id = people.person_id');
@@ -35,7 +37,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('suppliers', 'suppliers.person_id = sales_items_temp.supplier_id');
 		$this->db->join('people', 'suppliers.person_id = people.person_id');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/reports/summary_taxes.php opensourcepos/application/models/reports/Summary_taxes.php
--- pos-prod/application/models/reports/summary_taxes.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/reports/Summary_taxes.php	2016-05-23 15:32:31.912839290 -0700
@@ -9,38 +9,48 @@
 	
 	public function getDataColumns()
 	{
-		return array($this->lang->line('reports_tax_percent'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'));
+		return array($this->lang->line('reports_tax_percent'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'));
 	}
 	
 	public function getData(array $inputs)
 	{
-		
-		$quanitity_cond = '';
+		$quantity_cond = '';
 		if ($inputs['sale_type'] == 'sales')
 		{
-			$quanitity_cond = 'and quantity_purchased > 0';
+			$quantity_cond = 'and quantity_purchased > 0';
 		}
 		elseif ($inputs['sale_type'] == 'returns')
 		{
-			$quanitity_cond = 'and quantity_purchased < 0';
+			$quantity_cond = 'and quantity_purchased < 0';
+		}
+
+		if ($this->config->item('tax_included'))
+		{
+			$total = "1";
+			$subtotal = "(100/(100+percent))";
+			$tax="(1 - (100/(100 +percent)))";
+		}
+		else
+		{
+			$tax = "(percent/100)";
+			$total = "(1+(percent/100))";
+			$subtotal = "1";
 		}
 		
-		$query = $this->db->query("SELECT percent, SUM(subtotal) as subtotal, sum(total) as total, sum(tax) as tax 
-		FROM (SELECT name, CONCAT( percent,  '%' ) AS percent, (
-		item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100
-		) AS subtotal, ROUND( (
-		item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100
-		) * ( 1 + ( percent /100 ) ) , 2 ) AS total, ROUND( (
-		item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100
-		) * ( percent /100 ) , 2 ) AS tax
+		$query = $this->db->query("SELECT percent, count(*) as count, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax
+		FROM (SELECT name, CONCAT( percent,  '%' ) AS percent,
+		ROUND((item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100) * $subtotal, 2) AS subtotal,
+		ROUND((item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100) * $total, 2) AS total,
+		ROUND((item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100) * $tax, 2) AS tax
 		FROM ".$this->db->dbprefix('sales_items_taxes')."
 		JOIN ".$this->db->dbprefix('sales_items')." ON "
 		.$this->db->dbprefix('sales_items').'.sale_id='.$this->db->dbprefix('sales_items_taxes').'.sale_id'." and "
 		.$this->db->dbprefix('sales_items').'.item_id='.$this->db->dbprefix('sales_items_taxes').'.item_id'." and "
 		.$this->db->dbprefix('sales_items').'.line='.$this->db->dbprefix('sales_items_taxes').'.line'
 		." JOIN ".$this->db->dbprefix('sales')." ON ".$this->db->dbprefix('sales_items_taxes').".sale_id=".$this->db->dbprefix('sales').".sale_id
-		WHERE date(sale_time) BETWEEN '".$inputs['start_date']."' and '".$inputs['end_date']."' $quanitity_cond) as temp_taxes
+		WHERE date(sale_time) BETWEEN '".$inputs['start_date']."' and '".$inputs['end_date']."' $quantity_cond) as temp_taxes
 		GROUP BY percent");
+
 		return $query->result_array();
 	}
 	
@@ -46,7 +56,7 @@
 	
 	public function getSummaryData(array $inputs)
 	{
-		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
+		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
 		$this->db->from('sales_items_temp');
 		$this->db->join('items', 'sales_items_temp.item_id = items.item_id');
 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/sale.php opensourcepos/application/models/Sale.php
--- pos-prod/application/models/sale.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/models/Sale.php	2016-05-23 15:32:31.911839305 -0700
@@ -3,24 +3,245 @@
 {
 	public function get_info($sale_id)
 	{
-		$this->db->select('sales.*', FALSE);
-		$this->db->select('people.*', FALSE);
+		$this->db->select('first_name, last_name, email, comment, sale_payment_amount AS amount_tendered, payment_type,
+			invoice_number, sale_time, employee_id, customer_id, comments, sale_id, (sale_payment_amount - total) AS change_due', FALSE);
+		$this->db->select('DATE_FORMAT( sale_time, "%d-%m-%Y" ) AS sale_date', FALSE);
+		$this->db->select('CONCAT(first_name," ",  last_name) AS customer_name', FALSE);
+		$this->db->select('SUM(item_unit_price * quantity_purchased * (1 - discount_percent / 100)) AS amount_due');
+		$this->db->from('sales_items_temp');
+		$this->db->join('people', 'people.person_id = sales_items_temp.customer_id', 'left');
+
+		$this->db->where('sales_items_temp.sale_id', $sale_id);
+		$this->db->group_by('sale_id');
+		$this->db->order_by('sale_time', 'asc');
+
+		return $this->db->get();
+	}
+	
+	/*
+	 Get number of rows for the takings (sales/manage) view
+	*/
+	public function get_found_rows($search, $filters)
+	{
+		return $this->search($search, $filters)->num_rows();
+	}
+
+	/*
+	 Get the sales data for the takings (sales/manage) view
+	*/
+	public function search($search, $filters, $rows=0, $limit_from=0)
+	{
+		$this->db->select('sale_id, sale_date, sale_time, SUM(quantity_purchased) AS items_purchased,
+						CONCAT(customer.first_name," ",customer.last_name) AS customer_name, 
+						SUM(subtotal) AS subtotal, SUM(total) AS total, SUM(tax) AS tax, SUM(cost) AS cost, SUM(profit) AS profit,
+						sale_payment_amount AS amount_tendered, SUM(total) AS amount_due, (sale_payment_amount - SUM(total)) AS change_due, 
+						payment_type, invoice_number', FALSE);
+		$this->db->from('sales_items_temp');
+		$this->db->join('people AS customer', 'sales_items_temp.customer_id = customer.person_id', 'left');
+
+		if (empty($search))
+		{
+			$this->db->where('sale_date BETWEEN '. $this->db->escape($filters['start_date']). ' AND '. $this->db->escape($filters['end_date']));
+		}
+		else
+		{
+			if ($filters['is_valid_receipt'] != FALSE)
+			{
+				$pieces = explode(' ', $search);
+				$this->db->where('sales_items_temp.sale_id', $pieces[1]);
+			}
+
+			else
+			{
+				$this->db->like('last_name', $search);
+				$this->db->or_like('first_name', $search);
+				$this->db->or_like('CONCAT(customer.first_name, " ", last_name)', $search);
+			}
+		}
+
+		if ($filters['location_id'] != 'all')
+		{
+			$this->db->where('item_location', $filters['location_id']);
+		}
+
+		if ($filters['sale_type'] == 'sales')
+        {
+            $this->db->where('quantity_purchased > 0');
+        }
+        elseif ($filters['sale_type'] == 'returns')
+        {
+            $this->db->where('quantity_purchased < 0');
+        }
+		
+		if ($filters['only_invoices'] != FALSE)
+		{
+			$this->db->where('invoice_number <> ', 'NULL');
+		}
+
+		if ($filters['only_cash'] != FALSE)
+		{
+			$this->db->like('payment_type ', $this->lang->line('sales_cash'), 'after');
+		}
+		
+		$this->db->group_by('sale_id');
+		$this->db->order_by('sale_date', 'asc');
+		
+		if ($rows > 0)
+		{
+			$this->db->limit($rows, $limit_from);
+		}
+
+		return $this->db->get();
+	}
+
+	/*
+	 Get the payment summary for the takings (sales/manage) view
+	*/
+	public function get_payments_summary($search, $filters)
+	{
+		// get payment summary
+		$this->db->select('payment_type, count(*) AS count, SUM(payment_amount) AS payment_amount', FALSE);
 		$this->db->from('sales');
+		$this->db->join('sales_payments', 'sales_payments.sale_id=sales.sale_id');
 		$this->db->join('people', 'people.person_id = sales.customer_id', 'LEFT');
-		$this->db->where('sale_id',$sale_id);
+
+		if (empty($search))
+		{
+			$this->db->where('DATE(sale_time) BETWEEN '. $this->db->escape($filters['start_date']). ' AND '. $this->db->escape($filters['end_date']));
+		}
+		else
+		{
+			if ($filters['is_valid_receipt'])
+			{
+				$pieces = explode(' ',$search);
+				$this->db->where('sales.sale_id', $pieces[1]);
+			}
+			else
+			{
+				$this->db->like('last_name', $search);
+				$this->db->or_like('first_name', $search);
+				$this->db->or_like('CONCAT(first_name, " ", last_name)', $search);
+			}
+		}
+
+		if ($filters['sale_type'] == 'sales')
+		{
+			$this->db->where('payment_amount > 0');
+		}
+		elseif ($filters['sale_type'] == 'returns')
+		{
+			$this->db->where('payment_amount < 0');
+		}
+
+		if ($filters['only_invoices'] != FALSE)
+		{
+			$this->db->where('invoice_number <> ', 'NULL');
+		}
+		
+		if ($filters['only_cash'] != FALSE)
+		{
+			$this->db->like('payment_type ', $this->lang->line('sales_cash'), 'after');
+		}
+
+		$this->db->group_by('payment_type');
+
+		$payments = $this->db->get()->result_array();
+
+		// consider Gift Card as only one type of payment and do not show "Gift Card: 1, Gift Card: 2, etc." in the total
+		$gift_card_count = 0;
+		$gift_card_amount = 0;
+		foreach($payments as $key=>$payment)
+		{
+			if( strstr($payment['payment_type'], $this->lang->line('sales_giftcard')) != FALSE )
+			{
+				$gift_card_count  += $payment['count'];
+				$gift_card_amount += $payment['payment_amount'];
+
+				// remove the "Gift Card: 1", "Gift Card: 2", etc. payment string
+				unset($payments[$key]);
+			}
+		}
+
+		if( $gift_card_count > 0 )
+		{
+			$payments[] = array('payment_type' => $this->lang->line('sales_giftcard'), 'count' => $gift_card_count, 'payment_amount' => $gift_card_amount);
+		}
+
+		return $payments;
+	}
+	
+	public function get_total_rows()
+	{
+		$this->db->from('sales');
+
+		return $this->db->count_all_results();
+	}
+
+	public function get_search_suggestions($search, $limit=25)
+	{
+		$suggestions = array();
+
+		if (!$this->sale_lib->is_valid_receipt($search))
+		{
+			$this->db->distinct();
+			$this->db->select('first_name, last_name');
+			$this->db->from('sales');
+			$this->db->join('people', 'people.person_id = sales.customer_id');
+			$this->db->like('last_name', $search);
+			$this->db->or_like('first_name', $search);
+			$this->db->or_like('CONCAT(first_name, " ", last_name)', $search);
+			$this->db->order_by('last_name', 'asc');
+
+			foreach($this->db->get()->result_array() as $result)
+			{
+				$suggestions[] = $result[ 'first_name' ].' '.$result[ 'last_name' ];
+			}
+		}
+		else
+		{
+			$suggestions[] = $search;
+		}
+
+		return $suggestions;
+	}
+
+	public function get_invoice_count()
+	{
+		$this->db->from('sales');
+		$this->db->where('invoice_number is not null');
+
+		return $this->db->count_all_results();
+	}
+	
+	public function get_sale_by_invoice_number($invoice_number)
+	{
+		$this->db->from('sales');
+		$this->db->where('invoice_number', $invoice_number);
+
 		return $this->db->get();
 	}
 
-	function exists($sale_id)
+	public function get_invoice_number_for_year($year = '', $start_from = 0) 
+	{
+		$year = $year == '' ? date('Y') : $year;
+		$this->db->select("COUNT( 1 ) AS invoice_number_year", FALSE);
+		$this->db->from('sales');
+		$this->db->where("DATE_FORMAT(sale_time, '%Y' ) = ", $year, FALSE);
+		$this->db->where("invoice_number IS NOT ", "NULL", FALSE);
+		$result = $this->db->get()->row_array();
+
+		return ($start_from + $result[ 'invoice_number_year']);
+	}
+
+	public function exists($sale_id)
 	{
 		$this->db->from('sales');
 		$this->db->where('sale_id',$sale_id);
-		$query = $this->db->get();
 
-		return ($query->num_rows()==1);
+		return ($this->db->get()->num_rows()==1);
 	}
 	
-	function update($sale_data, $sale_id)
+	public function update($sale_data, $sale_id)
 	{
 		$this->db->where('sale_id', $sale_id);
 		$success = $this->db->update('sales',$sale_data);
@@ -28,27 +249,21 @@
 		return $success;
 	}
 	
-	function save ($items,$customer_id,$employee_id,$comment,$payments,$sale_id=false)
+	public function save($items, $customer_id, $employee_id, $comment, $invoice_number, $payments, $sale_id=false)
 	{
 		if(count($items)==0)
-			return -1;
-
-		//Alain Multiple payments
-		//Build payment types string
-		$payment_types='';
-		foreach($payments as $payment_id=>$payment)
 		{
-			$payment_types=$payment_types.$payment['payment_type'].': '.to_currency($payment['payment_amount']).'<br />';
+			return -1;
 		}
 
 		$sales_data = array(
 			'sale_time' => date('Y-m-d H:i:s'),
 			'customer_id'=> $this->Customer->exists($customer_id) ? $customer_id : null,
 			'employee_id'=>$employee_id,
-			'payment_type'=>$payment_types,
-			'comment'=>$comment
+			'comment'=>$comment,
+			'invoice_number'=>$invoice_number
 		);
-		//log_message('error',print_r($sales_data,true));
+
 		//Run these queries as a transaction, we want to make sure we do all or nothing
 		$this->db->trans_start();
 
@@ -65,8 +280,7 @@
 				$this->Giftcard->update_giftcard_value( $splitpayment[1], $cur_giftcard_value - $payment['payment_amount'] );
 			}
 
-			$sales_payments_data = array
-			(
+			$sales_payments_data = array(
 				'sale_id'=>$sale_id,
 				'payment_type'=>$payment['payment_type'],
 				'payment_amount'=>$payment['payment_amount']
@@ -78,13 +292,12 @@
 		{
 			$cur_item_info = $this->Item->get_info($item['item_id']);
 
-			$sales_items_data = array
-			(
+			$sales_items_data = array(
 				'sale_id'=>$sale_id,
 				'item_id'=>$item['item_id'],
 				'line'=>$item['line'],
-				'description'=>$item['description'],
-				'serialnumber'=>$item['serialnumber'],
+				'description'=>character_limiter($item['description'], 30),
+				'serialnumber'=>character_limiter($item['serialnumber'], 30),
 				'quantity_purchased'=>$item['quantity'],
 				'discount_percent'=>$item['discount'],
 				'item_cost_price' => $cur_item_info->cost_price,
@@ -95,13 +308,11 @@
 			$this->db->insert('sales_items',$sales_items_data);
 
 			//Update stock quantity
-			$item_quantity = $this->Item_quantities->get_item_quantity($item['item_id'], $item['item_location']);       
-            $this->Item_quantities->save(array('quantity'=>$item_quantity->quantity - $item['quantity'],
+			$item_quantity = $this->Item_quantity->get_item_quantity($item['item_id'], $item['item_location']);
+			$this->Item_quantity->save(array('quantity'=>$item_quantity->quantity - $item['quantity'],
                                               'item_id'=>$item['item_id'],
                                               'location_id'=>$item['item_location']), $item['item_id'], $item['item_location']);
 	
-			
-			//Ramel Inventory Tracking
 			//Inventory Count Details
 			$qty_buy = -$item['quantity'];
 			$sale_remarks ='POS '.$sale_id;
@@ -115,7 +326,6 @@
 				'trans_inventory'=>$qty_buy
 			);
 			$this->Inventory->insert($inv_data);
-			//------------------------------------Ramel
 
 			$customer = $this->Customer->get_info($customer_id);
  			if ($customer_id == -1 or $customer->taxable)
@@ -131,19 +341,6 @@
 					));
 				}
 			}
-			// Update items table if item_number starts with PGS or BBN
-			if (preg_match('/^(PGS|BBN)/', $item['item_number']) == 1)
-			{
-				
-				$items_data = array
-				(
-					'item_id'=>$item['item_id'],
-					'unit_price'=>$item['price']
-				);
-				//file_put_contents("tmp/logfile",var_export($items_data,true),FILE_APPEND);
-				$this->Item->save($items_data,$item['item_id']);
-			}
-
 		}
 		$this->db->trans_complete();
 		
@@ -155,11 +352,15 @@
 		return $sale_id;
 	}
 	
-	function delete_list($sale_ids, $employee_id,$update_inventory=TRUE) {
+	public function delete_list($sale_ids, $employee_id, $update_inventory=TRUE) 
+	{
 		$result = TRUE;
-		foreach($sale_ids as $sale_id) {
+
+		foreach($sale_ids as $sale_id)
+		{
 			$result &= $this->delete($sale_id, $employee_id, $update_inventory);
 		}
+
 		return $result;
 	}
 	
@@ -163,18 +364,22 @@
 		return $result;
 	}
 	
-	function delete($sale_id,$employee_id,$update_inventory=TRUE) {
+	public function delete($sale_id, $employee_id, $update_inventory=TRUE) 
+	{
 		// start a transaction to assure data integrity
 		$this->db->trans_start();
 		// first delete all payments
 		$this->db->delete('sales_payments', array('sale_id' => $sale_id)); 
 		// then delete all taxes on items
 		$this->db->delete('sales_items_taxes', array('sale_id' => $sale_id)); 
-		if ($update_inventory) {
+
+		if ($update_inventory)
+		{
 			// defect, not all item deletions will be undone??
 			// get array with all the items involved in the sale to update the inventory tracking
 			$items = $this->get_sale_items($sale_id)->result_array();
-			foreach($items as $item) {
+			foreach($items as $item)
+			{
 				// create query to update inventory tracking
 				$inv_data = array
 				(
@@ -182,13 +387,18 @@
 						'trans_items'=>$item['item_id'],
 						'trans_user'=>$employee_id,
 						'trans_comment'=>'Deleting sale ' . $sale_id,
+					'trans_location'=>$item['item_location'],
 						'trans_inventory'=>$item['quantity_purchased']
 	
 				);
 				// update inventory
 				$this->Inventory->insert($inv_data);
+
+				// update quantities
+				$this->Item_quantity->change_quantity($item['item_id'], $item['item_location'], $item['quantity_purchased']);
 			}
 		}
+
 		// delete all items
 		$this->db->delete('sales_items', array('sale_id' => $sale_id)); 
 		// delete sale itself
@@ -199,7 +410,7 @@
 		return $this->db->trans_status();
 	}
 
-	function get_sale_items($sale_id)
+	public function get_sale_items($sale_id)
 	{
 		$this->db->from('sales_items');
 		$this->db->where('sale_id',$sale_id);
@@ -206,7 +418,7 @@
 		return $this->db->get();
 	}
 
-	function get_sale_payments($sale_id)
+	public function get_sale_payments($sale_id)
 	{
 		$this->db->from('sales_payments');
 		$this->db->where('sale_id',$sale_id);
@@ -213,7 +426,7 @@
 		return $this->db->get();
 	}
 
-	function get_customer($sale_id)
+	public function get_customer($sale_id)
 	{
 		$this->db->from('sales');
 		$this->db->where('sale_id',$sale_id);
@@ -220,24 +434,62 @@
 		return $this->Customer->get_info($this->db->get()->row()->customer_id);
 	}
 
+	public function invoice_number_exists($invoice_number, $sale_id='')
+	{
+		$this->db->from('sales');
+		$this->db->where('invoice_number', $invoice_number);
+		if (!empty($sale_id))
+		{
+			$this->db->where('sale_id !=', $sale_id);
+		}
+		
+		return ($this->db->get()->num_rows()==1);
+	}
+	
+	public function get_giftcard_value( $giftcardNumber )
+	{
+		if ( !$this->Giftcard->exists( $this->Giftcard->get_giftcard_id($giftcardNumber) ) )
+		{
+			return 0;
+		}
+		
+		$this->db->from('giftcards');
+		$this->db->where('giftcard_number', $giftcardNumber);
+
+		return $this->db->get()->row()->value;
+	}
+
 	//We create a temp table that allows us to do easy report/sales queries
 	public function create_sales_items_temp_table()
 	{
-		$this->db->query("DROP TABLE IF EXISTS phppos_sales_items_temp");
-		$this->db->query("CREATE TEMPORARY TABLE ".$this->db->dbprefix('sales_items_temp')."
-		(SELECT date(sale_time) as sale_date, sale_time, ".$this->db->dbprefix('sales_items').".sale_id, comment,payments.payment_type, customer_id, employee_id, 
+		if ($this->config->item('tax_included'))
+		{
+			$total = "1";
+			$subtotal = "(1 - (SUM(1 - 100/(100+percent))))";
+			$tax="(SUM(1 - 100/(100+percent)))";
+		}
+		else
+		{
+			$tax = "(SUM(percent)/100)";
+			$total = "(1+(SUM(percent/100)))";
+			$subtotal = "1";
+		}
+
+		$this->db->query("CREATE TEMPORARY TABLE IF NOT EXISTS ".$this->db->dbprefix('sales_items_temp')."
+		(SELECT date(sale_time) as sale_date, sale_time, ".$this->db->dbprefix('sales_items').".sale_id, comment, payments.payment_type, payments.sale_payment_amount, item_location, customer_id, employee_id,
 		".$this->db->dbprefix('items').".item_id, supplier_id, quantity_purchased, item_cost_price, item_unit_price, SUM(percent) as item_tax_percent,
-		discount_percent, (item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as subtotal,
+		discount_percent, ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*$subtotal,2) as subtotal,
 		".$this->db->dbprefix('sales_items').".line as line, serialnumber, ".$this->db->dbprefix('sales_items').".description as description,
-		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*(1+(SUM(percent)/100)) as total,
-		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*(SUM(percent)/100) as tax,
-		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) - (item_cost_price*quantity_purchased) as profit
+		ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*$total, 2) as total,
+		ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*$tax, 2) as tax,
+		ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)- (item_cost_price*quantity_purchased), 2) as profit,
+		(item_cost_price*quantity_purchased) as cost,
+		invoice_number
 		FROM ".$this->db->dbprefix('sales_items')."
 		INNER JOIN ".$this->db->dbprefix('sales')." ON  ".$this->db->dbprefix('sales_items').'.sale_id='.$this->db->dbprefix('sales').'.sale_id'."
 		INNER JOIN ".$this->db->dbprefix('items')." ON  ".$this->db->dbprefix('sales_items').'.item_id='.$this->db->dbprefix('items').'.item_id'."
 		INNER JOIN (SELECT sale_id, SUM(payment_amount) AS sale_payment_amount, 
-		GROUP_CONCAT(payment_type SEPARATOR ', ') AS payment_type FROM " .$this->db->dbprefix('sales_payments') . " 
-		GROUP BY sale_id) AS payments 
+		GROUP_CONCAT(CONCAT(payment_type,' ',payment_amount) SEPARATOR ', ') AS payment_type FROM " . $this->db->dbprefix('sales_payments') . " GROUP BY sale_id) AS payments 
 		ON " . $this->db->dbprefix('sales_items') . '.sale_id'. "=" . "payments.sale_id		
 		LEFT OUTER JOIN ".$this->db->dbprefix('suppliers')." ON  ".$this->db->dbprefix('items').'.supplier_id='.$this->db->dbprefix('suppliers').'.person_id'."
 		LEFT OUTER JOIN ".$this->db->dbprefix('sales_items_taxes')." ON  "
@@ -257,15 +509,5 @@
 		//Update null subtotals to be equal to the total as these don't have tax
 		$this->db->query('UPDATE '.$this->db->dbprefix('sales_items_temp'). ' SET total=subtotal WHERE total IS NULL');
 	}
-	
-	public function get_giftcard_value( $giftcardNumber )
-	{
-		if ( !$this->Giftcard->exists( $this->Giftcard->get_giftcard_id($giftcardNumber)))
-			return 0;
-		
-		$this->db->from('giftcards');
-		$this->db->where('giftcard_number',$giftcardNumber);
-		return $this->db->get()->row()->value;
-	}
 }
 ?>
Only in pos-prod/application/models: sale.php-
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/sale_suspended.php opensourcepos/application/models/Sale_suspended.php
--- pos-prod/application/models/sale_suspended.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/models/Sale_suspended.php	2016-05-23 15:32:31.911839305 -0700
@@ -12,6 +12,21 @@
 	{
 		$this->db->from('sales_suspended');
 		$this->db->where('sale_id',$sale_id);
+		$this->db->join('people', 'people.person_id = sales_suspended.customer_id', 'LEFT');
+		return $this->db->get();
+	}
+	
+	function get_invoice_count()
+	{
+		$this->db->from('sales_suspended');
+		$this->db->where('invoice_number is not null');
+		return $this->db->count_all_results();
+	}
+	
+	function get_sale_by_invoice_number($invoice_number)
+	{
+		$this->db->from('sales_suspended');
+		$this->db->where('invoice_number', $invoice_number);
 		return $this->db->get();
 	}
 
@@ -32,25 +47,17 @@
 		return $success;
 	}
 	
-	function save ($items,$customer_id,$employee_id,$comment,$payments,$sale_id=false)
+	function save ($items,$customer_id,$employee_id,$comment,$invoice_number,$payments,$sale_id=false)
 	{
 		if(count($items)==0)
 			return -1;
 
-		//Alain Multiple payments
-		//Build payment types string
-		$payment_types='';
-		foreach($payments as $payment_id=>$payment)
-		{
-			$payment_types=$payment_types.$payment['payment_type'].': '.to_currency($payment['payment_amount']).'<br />';
-		}
-
 		$sales_data = array(
 			'sale_time' => date('Y-m-d H:i:s'),
 			'customer_id'=> $this->Customer->exists($customer_id) ? $customer_id : null,
 			'employee_id'=>$employee_id,
-			'payment_type'=>$payment_types,
-			'comment'=>$comment
+			'comment'=>$comment,
+			'invoice_number'=>$invoice_number
 		);
 
 		//Run these queries as a transaction, we want to make sure we do all or nothing
@@ -79,8 +86,8 @@
 				'sale_id'=>$sale_id,
 				'item_id'=>$item['item_id'],
 				'line'=>$item['line'],
-				'description'=>$item['description'],
-				'serialnumber'=>$item['serialnumber'],
+				'description'=>character_limiter($item['description'], 30),
+				'serialnumber'=>character_limiter($item['serialnumber'], 30),
 				'quantity_purchased'=>$item['quantity'],
 				'discount_percent'=>$item['discount'],
 				'item_cost_price' => $cur_item_info->cost_price,
@@ -144,11 +151,16 @@
 		return $this->db->get();
 	}
 
-	function get_customer($sale_id)
+	function invoice_number_exists($invoice_number,$sale_id='')
 	{
 		$this->db->from('sales_suspended');
-		$this->db->where('sale_id',$sale_id);
-		return $this->Customer->get_info($this->db->get()->row()->customer_id);
+		$this->db->where('invoice_number', $invoice_number);
+		if (!empty($sale_id))
+		{
+			$this->db->where('sale_id !=', $sale_id);
+		}
+		$query=$this->db->get();
+		return ($query->num_rows()==1);
 	}
 	
 	function get_comment($sale_id)
Only in opensourcepos/application/models: Stock_location.php
Only in pos-prod/application/models: stock_locations.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/models/supplier.php opensourcepos/application/models/Supplier.php
--- pos-prod/application/models/supplier.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/models/Supplier.php	2016-05-23 15:32:31.911839305 -0700
@@ -14,18 +14,25 @@
 		return ($query->num_rows()==1);
 	}
 	
+	function get_total_rows()
+	{
+		$this->db->from('suppliers');
+		$this->db->where('deleted',0);
+		return $this->db->count_all_results();
+	}
+	
 	/*
 	Returns all the suppliers
 	*/
-	function get_all($limit=10000, $offset=0)
+	function get_all($limit_from = 0, $rows = 0)
 	{
 		$this->db->from('suppliers');
 		$this->db->join('people','suppliers.person_id=people.person_id');			
 		$this->db->where('deleted', 0);
-		//$this->db->order_by("last_name", "asc");
-		$this->db->order_by("first_name", "asc");
-		$this->db->limit($limit);
-		$this->db->offset($offset);
+		$this->db->order_by("company_name", "asc");
+		if ($rows > 0) {
+			$this->db->limit($rows, $limit_from);
+		}
 		return $this->db->get();		
 	}
 	
@@ -83,7 +90,7 @@
 	/*
 	Inserts or updates a suppliers
 	*/
-	function save(&$person_data, &$supplier_data,$supplier_id=false)
+	function save_supplier(&$person_data, &$supplier_data,$supplier_id=false)
 	{
 		$success=false;
 		//Run these queries as a transaction, we want to make sure we do all or nothing
@@ -144,6 +151,17 @@
 			$suggestions[]=$row->company_name;		
 		}
 
+		$this->db->from('suppliers');
+		$this->db->join('people','suppliers.person_id=people.person_id');	
+		$this->db->where('deleted', 0);
+		$this->db->distinct();
+		$this->db->like("agency_name",$search);
+		$this->db->order_by("agency_name", "asc");		
+		$by_agency_name = $this->db->get();
+		foreach($by_agency_name->result() as $row)
+		{
+			$suggestions[]=$row->agency_name;		
+		}
 		
 		$this->db->from('suppliers');
 		$this->db->join('people','suppliers.person_id=people.person_id');	
@@ -220,6 +238,19 @@
 
 		$this->db->from('suppliers');
 		$this->db->join('people','suppliers.person_id=people.person_id');	
+		$this->db->where('deleted', 0);
+		$this->db->distinct();
+		$this->db->like("agency_name",$search);
+		$this->db->order_by("agency_name", "asc");		
+		$by_agency_name = $this->db->get();
+		foreach($by_agency_name->result() as $row)
+		{
+			$suggestions[]=$row->person_id.'|'.$row->agency_name;		
+		}
+
+
+		$this->db->from('suppliers');
+		$this->db->join('people','suppliers.person_id=people.person_id');	
 		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or 
 		last_name LIKE '%".$this->db->escape_like_str($search)."%' or 
 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
@@ -238,22 +269,41 @@
 		return $suggestions;
 
 	}
+	
+	function get_found_rows($search)
+	{
+		$this->db->from('suppliers');
+		$this->db->join('people','suppliers.person_id=people.person_id');
+		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		last_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		company_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		agency_name LIKE '%".$this->db->escape_like_str($search)."%' or
+		email LIKE '%".$this->db->escape_like_str($search)."%' or
+		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or
+		account_number LIKE '%".$this->db->escape_like_str($search)."%' or
+		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
+		return $this->db->get()->num_rows();
+	}
+	
 	/*
 	Perform a search on suppliers
 	*/
-	function search($search)
+	function search($search, $rows = 0, $limit_from = 0)
 	{
 		$this->db->from('suppliers');
 		$this->db->join('people','suppliers.person_id=people.person_id');
 		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or 
 		last_name LIKE '%".$this->db->escape_like_str($search)."%' or 
 		company_name LIKE '%".$this->db->escape_like_str($search)."%' or 
+		agency_name LIKE '%".$this->db->escape_like_str($search)."%' or 
 		email LIKE '%".$this->db->escape_like_str($search)."%' or 
 		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or 
 		account_number LIKE '%".$this->db->escape_like_str($search)."%' or 
 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");		
 		$this->db->order_by("last_name", "asc");
-		
+		if ($rows > 0) {
+			$this->db->limit($rows, $limit_from);
+		}
 		return $this->db->get();	
 	}
 
diff -rBwi --ignore-file-name-case -u pos-prod/application/third_party/index.html opensourcepos/application/third_party/index.html
--- pos-prod/application/third_party/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/third_party/index.html	2016-05-23 15:32:31.912839290 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in pos-prod/application/views: barcode.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/barcode_sheet.php opensourcepos/application/views/barcode_sheet.php
--- pos-prod/application/views/barcode_sheet.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/barcode_sheet.php	2016-05-23 15:32:31.912839290 -0700
@@ -1,24 +1,32 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
-        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml">
+
 <head>
+	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
 	<title><?php echo $this->lang->line('items_generate_barcodes'); ?></title>
+	<link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/barcode_font.css" />
+	<style type="text/css" >
+		* 
+		{ 
+			font-size: 12px;
+		}
+	</style>
 </head>
-<body>
-<table width='50%' align='center' cellpadding='20'>
+
+<body class=<?php  echo "font_".$this->barcode_lib->get_font_name($barcode_config['barcode_font']); ?> 
+      style="font-size:<?php echo $barcode_config['barcode_font_size'] + 5; //5 is size offset for font in display label?>px">
+	<table cellspacing=<?php echo $barcode_config['barcode_page_cellspacing']; ?> width='<?php echo $barcode_config['barcode_page_width']."%"; ?>' >
 <tr>
 <?php 
 $count = 0;
 foreach($items as $item)
 {
-	$barcode = $item['id'];
-	$text = $item['name'];
-	
-	if ($count % 2 ==0 and $count!=0)
+				if ($count % $barcode_config['barcode_num_in_row'] == 0 and $count != 0)
 	{
 		echo '</tr><tr>';
 	}
-	echo "<td><img src='".site_url()."/barcode?barcode=$barcode&text=$text&width=256' /></td>";
+				echo "<td>" . $this->barcode_lib->display_barcode($item, $barcode_config) . "</td>";
 	$count++;
 }
 ?>
Only in opensourcepos/application/views: barcodes
Only in pos-prod/application/views: config.php
Only in opensourcepos/application/views: configs
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/customers/excel_import.php opensourcepos/application/views/customers/excel_import.php
--- pos-prod/application/views/customers/excel_import.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/customers/excel_import.php	2016-05-23 15:32:31.913839275 -0700
@@ -1,14 +1,14 @@
 <?php
 echo form_open_multipart('customers/do_excel_import/',array('id'=>'item_form'));
 ?>
-<div id="required_fields_message">Import customers from Excel sheet</div>
-<ul id="error_message_box"></ul>
-<b><a href="<?php echo site_url('customers/excel'); ?>">Download Import Excel Template (CSV)</a></b>
+<div id="required_fields_message"><?php echo $this->lang->line('customers_import_items_excel'); ?></div>
+<ul id="error_message_box" class="error_message_box"></ul>
+<b><a href="<?php echo site_url('customers/excel'); ?>"><?php echo $this->lang->line('common_download_import_template'); ?></a></b>
 <fieldset id="item_basic_info">
-<legend>Import</legend>
+<legend><?php echo $this->lang->line('common_import'); ?></legend>
 
 <div class="field_row clearfix">	
-<?php echo form_label('File path:', 'name',array('class'=>'wide')); ?>
+<?php echo form_label($this->lang->line('common_import_file_path').':', 'name',array('class'=>'wide')); ?>
 	<div class='form_field'>
 	<?php echo form_upload(array(
 		'name'=>'file_path',
@@ -56,7 +56,7 @@
    		},
 		messages: 
 		{
-   			file_path:"Full path to excel file required"
+   			file_path:"<?php echo $this->lang->line('common_import_full_path'); ?>"
 		}
 	});
 });
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/customers/form.php opensourcepos/application/views/customers/form.php
--- pos-prod/application/views/customers/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/customers/form.php	2016-05-23 15:32:31.913839275 -0700
@@ -2,16 +2,28 @@
 echo form_open('customers/save/'.$person_info->person_id,array('id'=>'customer_form'));
 ?>
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <fieldset id="customer_basic_info">
 <legend><?php echo $this->lang->line("customers_basic_information"); ?></legend>
 <?php $this->load->view("people/form_basic_info"); ?>
+
+<div class="field_row clearfix">	
+<?php echo form_label($this->lang->line('customers_company_name').':', 'company_name'); ?>
+	<div class='form_field'>
+	<?php echo form_input(array(
+		'name'=>'company_name',
+		'value'=>$person_info->company_name)
+	);?>
+	</div>
+</div>
+
 <div class="field_row clearfix">	
 <?php echo form_label($this->lang->line('customers_account_number').':', 'account_number'); ?>
 	<div class='form_field'>
 	<?php echo form_input(array(
 		'name'=>'account_number',
 		'id'=>'account_number',
+		'class'=>'account_number',
 		'value'=>$person_info->account_number)
 	);?>
 	</div>
@@ -60,13 +73,30 @@
 		{
 			first_name: "required",
 			last_name: "required",
-    		email: "email"
+    		email: "email",
+    		account_number:
+			{
+				remote:
+				{
+					url: "<?php echo site_url($controller_name . '/check_account_number')?>",
+					type: "post",
+					data:
+					{
+						"person_id" : "<?php echo $person_info->person_id; ?>",
+						"account_number" : function()
+						{
+							return $("#account_number").val();
+						}
+					}
+				}
+			}
    		},
 		messages: 
 		{
      		first_name: "<?php echo $this->lang->line('common_first_name_required'); ?>",
      		last_name: "<?php echo $this->lang->line('common_last_name_required'); ?>",
-     		email: "<?php echo $this->lang->line('common_email_invalid_format'); ?>"
+     		email: "<?php echo $this->lang->line('common_email_invalid_format'); ?>",
+			account_number: "<?php echo $this->lang->line('customers_account_number_duplicate'); ?>"
 		}
 	});
 });
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/employees/form.php opensourcepos/application/views/employees/form.php
--- pos-prod/application/views/employees/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/employees/form.php	2016-05-23 15:32:31.914839259 -0700
@@ -2,7 +2,7 @@
 echo form_open('employees/save/'.$person_info->person_id,array('id'=>'employee_form'));
 ?>
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <fieldset id="employee_basic_info">
 <legend><?php echo $this->lang->line("employees_basic_information"); ?></legend>
 <?php $this->load->view("people/form_basic_info"); ?>
@@ -56,13 +56,35 @@
 {
 ?>
 <li>	
-<?php echo form_checkbox("permissions[]",$module->module_id,$this->Employee->has_permission($module->module_id,$person_info->person_id)); ?>
+<?php echo form_checkbox("grants[]",$module->module_id,$this->Employee->has_grant($module->module_id,$person_info->person_id),"class='module'"); ?>
 <span class="medium"><?php echo $this->lang->line('module_'.$module->module_id);?>:</span>
 <span class="small"><?php echo $this->lang->line('module_'.$module->module_id.'_desc');?></span>
+<?php
+	foreach($all_subpermissions->result() as $permission)
+	{
+		$exploded_permission = explode('_', $permission->permission_id);
+		if ($permission->module_id == $module->module_id)
+		{
+			$lang_key = $module->module_id.'_'.$exploded_permission[1];
+			$lang_line = $this->lang->line($lang_key);
+			$lang_line = ($this->lang->line_tbd($lang_key) == $lang_line) ? $exploded_permission[1] : $lang_line;
+			if (empty($lang_line))
+			{
+				continue;
+			} 
+			?>
+		<ul>
+			<li>
+			<?php echo form_checkbox("grants[]",$permission->permission_id,$this->Employee->has_grant($permission->permission_id,$person_info->person_id)); ?>
+			<span class="medium"><?php echo $lang_line ?></span>
 </li>
+		</ul>
 <?php
 }
+	}
+}
 ?>
+</li>
 </ul>
 <?php
 echo form_submit(array(
@@ -82,6 +104,39 @@
 //validation and submit handling
 $(document).ready(function()
 {
+
+	$.validator.addMethod("module", function (value, element) {
+		var result = $("#permission_list input").is(":checked");
+		$(".module").each(function(index, element)
+		{
+			var parent = $(element).parent();
+			var checked =  $(element).is(":checked");
+			if ($("ul", parent).length > 0 && result)
+			{
+				result &= !checked || (checked && $("ul > li > input:checked", parent).length > 0);
+			}
+		});
+		return result;
+	}, '<?php echo $this->lang->line('employees_subpermission_required'); ?>');
+
+	$("ul#permission_list > li > input[name='grants[]']").each(function() 
+	{
+	    var $this = $(this);
+	    $("ul > li > input", $this.parent()).each(function() 
+	    {
+		    var $that = $(this);
+	        var updateCheckboxes = function (checked) 
+	        {
+				$that.prop("disabled", !checked);
+	         	!checked && $that.prop("checked", false);
+	        }
+	       $this.change(function() {
+	            updateCheckboxes($this.is(":checked"));
+	        });
+			updateCheckboxes($this.is(":checked"));
+	    });
+	});
+	
 	$('#employee_form').validate({
 		submitHandler:function(form)
 		{
@@ -117,7 +172,7 @@
 				<?php
 				}
 				?>
-				minlength: 4
+				minlength: 8
 			},	
 			repeat_password:
 			{
Only in opensourcepos/application/views: errors
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/giftcards/form.php opensourcepos/application/views/giftcards/form.php
--- pos-prod/application/views/giftcards/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/giftcards/form.php	2016-05-23 15:32:31.914839259 -0700
@@ -1,23 +1,21 @@
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <?php
 echo form_open('giftcards/save/'.$giftcard_info->giftcard_id,array('id'=>'giftcard_form'));
 ?>
 <fieldset id="giftcard_basic_info" style="padding: 5px;">
 <legend><?php echo $this->lang->line("giftcards_basic_information"); ?></legend>
 
-<!-- GARRISON ADDED 4/22/2013 -->
 <div class="field_row clearfix">
-<?php echo form_label($this->lang->line('giftcards_person_id').':', 'name',array('class'=>'required wide')); ?>
+<?php echo form_label($this->lang->line('giftcards_person_id').':', 'name',array('class'=>'wide')); ?>
 	<div class='form_field'>
 	<?php echo form_input(array(
 		'name'=>'person_id',
 		'id'=>'person_id',
-		'value'=>$giftcard_info->person_id)
+		'value'=>$selected_person)
 	);?>
 	</div>
 </div>
-<!-- END GARRISON ADDED -->
 
 <div class="field_row clearfix">
 <?php echo form_label($this->lang->line('giftcards_giftcard_number').':', 'name',array('class'=>'required wide')); ?>
@@ -25,7 +23,7 @@
 	<?php echo form_input(array(
 		'name'=>'giftcard_number',
 		'id'=>'giftcard_number',
-		'value'=>$giftcard_info->giftcard_number)
+		'value'=>$giftcard_number)
 	);?>
 	</div>
 </div>
@@ -58,22 +56,46 @@
 //validation and submit handling
 $(document).ready(function()
 {
-	$("#person_id").autocomplete("<?php echo site_url('giftcards/suggest_person');?>",{max:100,minChars:0,delay:10});
-    $("#person_id").result(function(event, data, formatted){});
-	$("#person_id").search();
+	var format_item = function(row) 
+	{
+    	return [row[0], "|", row[1]].join("");
+	};
+	var autocompleter = $("#person_id").autocomplete('<?php echo site_url("giftcards/person_search"); ?>', 
+	{
+    	minChars:0,
+    	delay:15, 
+    	max:100,
+       	cacheLength: 1,
+        formatItem: format_item,
+        formatResult : format_item
+    });
 	
-	$('#giftcard_form').validate({
-		submitHandler:function(form)
+	// declare submitHandler as an object.. will be reused
+	var submit_form = function(selected_person) 
+	{ 
+		$(this).ajaxSubmit(
 		{
-			$(form).ajaxSubmit({
 			success:function(response)
 			{
 				tb_remove();
 				post_giftcard_form_submit(response);
 			},
+			error: function(jqXHR, textStatus, errorThrown) 
+			{
+				selected_customer && autocompleter.val(selected_person);
+				post_giftcard_form_submit({message: errorThrown});
+			},
 			dataType:'json'
 		});
+	};
 
+	$('#giftcard_form').validate({
+		submitHandler:function(form)
+		{
+			var selected_person = autocompleter.val();
+			var selected_person_id = selected_person && selected_person.replace(/(\w)\|.*/, "$1");
+			selected_person_id && autocompleter.val(selected_person_id);
+			submit_form.call(form, selected_person);
 		},
 		errorLabelContainer: "#error_message_box",
  		wrapper: "li",
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/giftcards/manage.php opensourcepos/application/views/giftcards/manage.php
--- pos-prod/application/views/giftcards/manage.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/giftcards/manage.php	2016-05-23 15:32:31.914839259 -0700
@@ -6,9 +6,9 @@
     enable_select_all();
     enable_checkboxes();
     enable_row_selection();
-    enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>');
+    enable_search({suggest_url: '<?php echo site_url("$controller_name/suggest")?>',
+					confirm_message: '<?php echo $this->lang->line("common_confirm_search")?>'});
     enable_delete('<?php echo $this->lang->line($controller_name."_confirm_delete")?>','<?php echo $this->lang->line($controller_name."_none_selected")?>');
-
 });
 
 function init_table_sorting()
@@ -22,7 +22,7 @@
 			headers:
 			{
 				0: { sorter: false},
-				3: { sorter: false}
+				5: { sorter: false}
 			}
 		});
 	}
@@ -66,7 +65,7 @@
 		?>
 	</div>
 </div>
-<?php echo $this->pagination->create_links();?>
+<div id="pagination"><?= $links ?></div>
 <div id="table_action_header">
 	<ul>
 		<li class="float_left"><span><?php echo anchor("$controller_name/delete",$this->lang->line("common_delete"),array('id'=>'delete')); ?></span></li>
@@ -74,6 +73,7 @@
 		<img src='<?php echo base_url()?>images/spinner_small.gif' alt='spinner' id='spinner' />
 		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 		<input type="text" name ='search' id='search'/>
+		<input type="hidden" name ='limit_from' id='limit_from'/>
 		</form>
 		</li>
 	</ul>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/index.html opensourcepos/application/views/index.html
--- pos-prod/application/views/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/index.html	2016-05-23 15:32:31.914839259 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/item_kits/form.php opensourcepos/application/views/item_kits/form.php
--- pos-prod/application/views/item_kits/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/item_kits/form.php	2016-05-23 15:32:31.914839259 -0700
@@ -1,5 +1,5 @@
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <?php
 echo form_open('item_kits/save/'.$item_kit_info->item_kit_id,array('id'=>'item_kit_form'));
 ?>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/item_kits/manage.php opensourcepos/application/views/item_kits/manage.php
--- pos-prod/application/views/item_kits/manage.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/item_kits/manage.php	2016-05-23 15:32:31.914839259 -0700
@@ -6,7 +7,8 @@
     enable_select_all();
     enable_checkboxes();
     enable_row_selection();
-    enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>');
+    enable_search({suggest_url : '<?php echo site_url("$controller_name/suggest")?>',
+					confirm_message : '<?php echo $this->lang->line("common_confirm_search")?>'});
     enable_delete('<?php echo $this->lang->line($controller_name."_confirm_delete")?>','<?php echo $this->lang->line($controller_name."_none_selected")?>');
 	
 	$('#generate_barcodes').click(function()
@@ -34,7 +35,7 @@
 			headers:
 			{
 				0: { sorter: false},
-				3: { sorter: false}
+				6: { sorter: false}
 			}
 		});
 	}
@@ -49,9 +50,9 @@
 	else
 	{
 		//This is an update, just update one row
-		if(jQuery.inArray(response.item_id,get_visible_checkbox_ids()) != -1)
+		if(jQuery.inArray(response.item_kit_id,get_visible_checkbox_ids()) != -1)
 		{
-			update_row(response.item_id,'<?php echo site_url("$controller_name/get_row")?>');
+			update_row(response.item_kit_id,'<?php echo site_url("$controller_name/get_row")?>');
 			set_feedback(response.message,'success_message',false);
 
 		}
@@ -78,20 +79,22 @@
 	</div>
 </div>
 
-<?php echo $this->pagination->create_links();?>
+<div id="pagination"><?= $links ?></div>
+<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 <div id="table_action_header">
 	<ul>
 		<li class="float_left"><span><?php echo anchor("$controller_name/delete",$this->lang->line("common_delete"),array('id'=>'delete')); ?></span></li>
 		<li class="float_left"><span><?php echo anchor("$controller_name/generate_barcodes",$this->lang->line("items_generate_barcodes"),array('id'=>'generate_barcodes', 'target' =>'_blank','title'=>$this->lang->line('items_generate_barcodes'))); ?></span></li>
 		<li class="float_right">
 		<img src='<?php echo base_url()?>images/spinner_small.gif' alt='spinner' id='spinner' />
-		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 		<input type="text" name ='search' id='search'/>
-		</form>
+			<input type="hidden" name ='limit_from' id='limit_from'/>
 		</li>
 	</ul>
 </div>
 
+<?php echo form_close(); ?>
+
 <div id="table_holder">
 <?php echo $manage_table; ?>
 </div>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/items/excel_import.php opensourcepos/application/views/items/excel_import.php
--- pos-prod/application/views/items/excel_import.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/items/excel_import.php	2016-05-23 15:32:31.914839259 -0700
@@ -1,14 +1,14 @@
 <?php
 echo form_open_multipart('items/do_excel_import/',array('id'=>'item_form'));
 ?>
-<div id="required_fields_message">Import items from Excel sheet</div>
-<ul id="error_message_box"></ul>
-<b><a href="<?php echo site_url('items/excel'); ?>">Download Import Excel Template (CSV)</a></b>
+<div id="required_fields_message"><?php echo $this->lang->line('items_import_items_excel'); ?></div>
+<ul id="error_message_box" class="error_message_box"></ul>
+<b><a href="<?php echo site_url('items/excel'); ?>"><?php echo $this->lang->line('common_download_import_template'); ?></a></b>
 <fieldset id="item_basic_info">
-<legend>Import</legend>
+<legend><?php echo $this->lang->line('common_import'); ?></legend>
 
 <div class="field_row clearfix">	
-<?php echo form_label('File path:', 'name',array('class'=>'wide')); ?>
+<?php echo form_label($this->lang->line('common_import_file_path').':', 'name',array('class'=>'wide')); ?>
 	<div class='form_field'>
 	<?php echo form_upload(array(
 		'name'=>'file_path',
@@ -56,7 +56,7 @@
    		},
 		messages: 
 		{
-   			file_path:"Full path to excel file required"
+   			file_path:"<?php echo $this->lang->line('common_import_full_path'); ?>"
 		}
 	});
 });
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/items/form.php opensourcepos/application/views/items/form.php
--- pos-prod/application/views/items/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/items/form.php	2016-05-23 15:32:31.914839259 -0700
@@ -1,16 +1,17 @@
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <?php
-echo form_open('items/save/'.$item_info->item_id,array('id'=>'item_form'));
+echo form_open('items/save/'.$item_info->item_id,array('id'=>'item_form', 'enctype'=>'multipart/form-data'));
 ?>
 <fieldset id="item_basic_info">
 <legend><?php echo $this->lang->line("items_basic_information"); ?></legend>
 
 <div class="field_row clearfix">
-<?php echo form_label($this->lang->line('items_item_number').':', 'name',array('class'=>'wide')); ?>
+<?php echo form_label($this->lang->line('items_item_number').':', 'item_number',array('class'=>'wide')); ?>
 	<div class='form_field'>
 	<?php echo form_input(array(
 		'name'=>'item_number',
+		'class'=>'item_number',
 		'id'=>'item_number',
 		'value'=>$item_info->item_number)
 	);?>
@@ -31,7 +32,10 @@
 <div class="field_row clearfix">
 <?php echo form_label($this->lang->line('items_category').':', 'category',array('class'=>'required wide')); ?>
 	<div class='form_field'>
-	<?php echo form_dropdown('category', $categories, $selected_category
+	<?php echo form_input(array(
+		'name'=>'category',
+		'id'=>'category',
+		'value'=>$item_info->category)
 	);?>
 	</div>
 </div>
@@ -121,7 +125,9 @@
     	<?php echo form_input(array(
     		'name'=>$key.'_quantity',
     		'id'=>$key.'_quantity',
-    		'value'=>$location_detail['quantity'])
+    		'class'=>'quantity',
+    		'size'=>'8',
+    		'value'=>isset($item_info->item_id)?$location_detail['quantity']:0)
     	);?>
     	</div>
     </div>
@@ -130,12 +136,25 @@
 ?>
 
 <div class="field_row clearfix">
+<?php echo form_label($this->lang->line('items_receiving_quantity').':', 'receiving_quantity',array('class'=>'wide')); ?>
+	<div class='form_field'>
+	<?php echo form_input(array(
+		'name'=>'receiving_quantity',
+		'id'=>'receiving_quantity',
+		'size'=>'8',
+		'value'=>$item_info->receiving_quantity)
+	);?>
+	</div>
+	</div>
+
+	<div class="field_row clearfix">
 <?php echo form_label($this->lang->line('items_reorder_level').':', 'reorder_level',array('class'=>'required wide')); ?>
 	<div class='form_field'>
 	<?php echo form_input(array(
 		'name'=>'reorder_level',
 		'id'=>'reorder_level',
-		'value'=>$item_info->reorder_level)
+		'size'=>'8',
+		'value'=>!isset($item_info->item_id)?0:$item_info->reorder_level)
 	);?>
 	</div>
 </div>
@@ -154,6 +173,13 @@
 </div>
 
 <div class="field_row clearfix">
+<?php echo form_label($this->lang->line('items_image').':', 'item_image',array('class'=>'wide')); ?>
+    <div class='form_field'>
+        <?php echo form_upload('item_image');?>
+    </div>
+</div>
+
+<div class="field_row clearfix">
 <?php echo form_label($this->lang->line('items_allow_alt_description').':', 'allow_alt_description',array('class'=>'wide')); ?>
 	<div class='form_field'>
 	<?php echo form_checkbox(array(
@@ -177,7 +203,6 @@
 	</div>
 </div>
 
-<!-- Parq 131215 Start -->
 <div class="field_row clearfix">
 <?php echo form_label($this->lang->line('items_is_deleted').':', 'is_deleted',array('class'=>'wide')); ?>
 	<div class='form_field'>
@@ -189,162 +214,30 @@
 	);?>
 	</div>
 </div>
-<!-- Parq End -->
-
 
-
-<!--  GARRISON ADDED 4/21/2013 -->
-<div class="field_row clearfix">	
-<?php
-if($this->config->item('custom1_name') != NULL)
-{
-	echo form_label($this->config->item('custom1_name').':', 'custom1',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom1',
-			'id'=>'custom1',
-			'value'=>$item_info->custom1)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
-<?php
-if($this->config->item('custom2_name') != NULL)
-{
-	echo form_label($this->config->item('custom2_name').':', 'custom2',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom2',
-			'id'=>'custom2',
-			'value'=>$item_info->custom2)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
-<?php
-if($this->config->item('custom3_name') != NULL)
-{
-	echo form_label($this->config->item('custom3_name').':', 'custom3',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom3',
-			'id'=>'custom3',
-			'value'=>$item_info->custom3)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
-<?php
-if($this->config->item('custom4_name') != NULL)
-{
-	echo form_label($this->config->item('custom4_name').':', 'custom4',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom4',
-			'id'=>'custom4',
-			'value'=>$item_info->custom4)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
-<?php
-if($this->config->item('custom5_name') != NULL)
-{
-	echo form_label($this->config->item('custom5_name').':', 'custom5',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom5',
-			'id'=>'custom5',
-			'value'=>$item_info->custom5)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
-<?php
-if($this->config->item('custom6_name') != NULL)
+<?php for ($i = 0; $i < 11; $i++) 
 {
-	echo form_label($this->config->item('custom6_name').':', 'custom6',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom6',
-			'id'=>'custom6',
-			'value'=>$item_info->custom6)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
-<?php
-if($this->config->item('custom7_name') != NULL)
-{
-	echo form_label($this->config->item('custom7_name').':', 'custom7',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom7',
-			'id'=>'custom7',
-			'value'=>$item_info->custom7)
-		);?>
-	</div>
-	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
+?>
 <?php
-if($this->config->item('custom8_name') != NULL)
+	if($this->config->item('custom'.$i.'_name') != null)
 {
-	echo form_label($this->config->item('custom8_name').':', 'custom8',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom8',
-			'id'=>'custom8',
-			'value'=>$item_info->custom8)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
+		$item_arr = (array)$item_info;
+		?>
 <div class="field_row clearfix">
 <?php
-if($this->config->item('custom9_name') != NULL)
-{
-	echo form_label($this->config->item('custom9_name').':', 'custom9',array('class'=>'wide')); ?>
+			echo form_label($this->config->item('custom'.$i.'_name').':', 'custom'.$i,array('class'=>'wide')); ?>
 	<div class='form_field'>
 		<?php echo form_input(array(
-			'name'=>'custom9',
-			'id'=>'custom9',
-			'value'=>$item_info->custom9)
+					'name'=>'custom'.$i,
+					'id'=>'custom'.$i,
+					'value'=>$item_arr['custom'.$i])
 		);?>
 		</div>
 	</div>
-<?php }//end if?>
-
-<div class="field_row clearfix">
 <?php
-if($this->config->item('custom10_name') != NULL)
-{
-	echo form_label($this->config->item('custom10_name').':', 'custom10',array('class'=>'wide')); ?>
-	<div class='form_field'>
-		<?php echo form_input(array(
-			'name'=>'custom10',
-			'id'=>'custom10',
-			'value'=>$item_info->custom10)
-		);?>
-		</div>
-	</div>
-<?php }//end if?>
-
-<!--   END GARRISON ADDED -->
+	}
+}
+?>
 
 <?php
 echo form_submit(array(
@@ -353,6 +246,12 @@
 	'value'=>$this->lang->line('common_submit'),
 	'class'=>'submit_button float_right')
 );
+echo form_submit(array(
+		'name'=>'continue',
+		'id'=>'continue',
+		'value'=>$this->lang->line('common_new'),
+		'class'=>'submit_button float_right')
+);
 ?>
 </fieldset>
 <?php
@@ -363,64 +262,48 @@
 //validation and submit handling
 $(document).ready(function()
 {
-	//$("#category").autocomplete("<?php echo site_url('items/suggest_category');?>",{max:100,minChars:0,delay:10});
-    //$("#category").result(function(event, data, formatted){});
-	//$("#category").search();
-
-	$("#custom1").autocomplete("<?php echo site_url('items/suggest_custom1');?>",{max:100,minChars:0,delay:10});
-    $("#custom1").result(function(event, data, formatted){});
-	$("#custom1").search();
-
-	$("#custom2").autocomplete("<?php echo site_url('items/suggest_custom2');?>",{max:100,minChars:0,delay:10});
-    $("#custom2").result(function(event, data, formatted){});
-	$("#custom2").search();
-
-	$("#custom3").autocomplete("<?php echo site_url('items/suggest_custom3');?>",{max:100,minChars:0,delay:10});
-    $("#custom3").result(function(event, data, formatted){});
-	$("#custom3").search();
-
-	$("#custom4").autocomplete("<?php echo site_url('items/suggest_custom4');?>",{max:100,minChars:0,delay:10});
-    $("#custom4").result(function(event, data, formatted){});
-	$("#custom4").search();
-
-	$("#custom5").autocomplete("<?php echo site_url('items/suggest_custom5');?>",{max:100,minChars:0,delay:10});
-    $("#custom5").result(function(event, data, formatted){});
-	$("#custom5").search();
-
-	$("#custom6").autocomplete("<?php echo site_url('items/suggest_custom6');?>",{max:100,minChars:0,delay:10});
-    $("#custom6").result(function(event, data, formatted){});
-	$("#custom6").search();
-
-	$("#custom7").autocomplete("<?php echo site_url('items/suggest_custom7');?>",{max:100,minChars:0,delay:10});
-    $("#custom7").result(function(event, data, formatted){});
-	$("#custom7").search();
-
-	$("#custom8").autocomplete("<?php echo site_url('items/suggest_custom8');?>",{max:100,minChars:0,delay:10});
-    $("#custom8").result(function(event, data, formatted){});
-	$("#custom8").search();
-
-	$("#custom9").autocomplete("<?php echo site_url('items/suggest_custom9');?>",{max:100,minChars:0,delay:10});
-    $("#custom9").result(function(event, data, formatted){});
-	$("#custom9").search();
-
-	$("#custom10").autocomplete("<?php echo site_url('items/suggest_custom10');?>",{max:100,minChars:0,delay:10});
-    $("#custom10").result(function(event, data, formatted){});
-	$("#custom10").search();
-/** END GARRISON ADDED **/
+    $("#continue").click(function()
+  	{
+        stay_open = true;
+    });
+    	    
+    $("#submit").click(function()
+    {
+        stay_open = false;
+    });
+	
+	var no_op = function(event, data, formatted){};
+	$("#category").autocomplete("<?php echo site_url('items/suggest_category');?>",{max:100,minChars:0,delay:10}).result(no_op).search();
+
+	<?php for ($i = 0; $i < 11; $i++) 
+	{ 
+	?>
+	$("#custom"+<?php echo $i; ?>).autocomplete("<?php echo site_url('items/suggest_custom'.$i);?>",{max:100,minChars:0,delay:10}).result(no_op).search();
+	<?php 
+	}
+	?>
 	
 	$('#item_form').validate({
 		submitHandler:function(form)
 		{
-			/*
-			make sure the hidden field #item_number gets set
-			to the visible scan_item_number value
-			*/
-			$('#item_number').val($('#scan_item_number').val());
 			$(form).ajaxSubmit({
 			success:function(response)
 			{
+					if (stay_open) 
+					{
+						// set action of item_form to url without item id, so a new one can be created
+				        $("#item_form").attr("action", "<?php echo site_url("items/save/")?>");
+						// use a whitelist of fields to minimize unintended side effects
+						$(':text, :password, :file, #description, #item_form').not('.quantity, #reorder_level, #tax_name_1,' + 
+								'#tax_percent_name_1, #reference_number, #name, #cost_price, #unit_price, #taxed_cost_price, #taxed_unit_price').val('');  
+						// de-select any checkboxes, radios and drop-down menus
+						$(':input', '#item_form').not('#item_category_id').removeAttr('checked').removeAttr('selected');
+					}
+					else
+					{
 				tb_remove();
-				post_item_form_submit(response);
+					}
+					post_item_form_submit(response, stay_open);	
 			},
 			dataType:'json'
 		});
@@ -432,6 +315,22 @@
 		{
 			name:"required",
 			category:"required",
+			item_number:
+			{
+                remote:
+				{
+					url: "<?php echo site_url($controller_name . '/check_item_number')?>",
+					type: "POST",
+					data:
+					{
+						"item_id": "<?php echo $item_info->item_id; ?>",
+						"item_number": function ()
+						{
+							return $("#item_number").val();
+						}
+					}
+				}
+			},
 			cost_price:
 			{
 				required:true,
@@ -458,6 +357,7 @@
 		messages:
 		{
 			name:"<?php echo $this->lang->line('items_name_required'); ?>",
+			item_number:"<?php echo $this->lang->line('items_item_number_duplicate'); ?>",
 			category:"<?php echo $this->lang->line('items_category_required'); ?>",
 			cost_price:
 			{
Only in pos-prod/application/views/items: form.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/items/form_bulk.php opensourcepos/application/views/items/form_bulk.php
--- pos-prod/application/views/items/form_bulk.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/items/form_bulk.php	2016-05-23 15:32:31.914839259 -0700
@@ -1,5 +1,5 @@
 <div id="required_fields_message"><?php echo $this->lang->line('items_edit_fields_you_want_to_update'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <?php
 echo form_open('items/bulk_update/',array('id'=>'item_form'));
 ?>
@@ -63,7 +63,7 @@
 		'name'=>'tax_names[]',
 		'id'=>'tax_name_1',
 		'size'=>'8',
-		'value'=> isset($item_tax_info[0]['name']) ? $item_tax_info[0]['name'] : $this->lang->line('items_sales_tax'))
+		'value'=> isset($item_tax_info[0]['name']) ? $item_tax_info[0]['name'] : $this->lang->line('items_sales_tax_1'))
 	);?>
 	</div>
 	<div class='form_field'>
@@ -84,7 +84,7 @@
 		'name'=>'tax_names[]',
 		'id'=>'tax_name_2',
 		'size'=>'8',
-		'value'=> isset($item_tax_info[1]['name']) ? $item_tax_info[1]['name'] : '')
+		'value'=> isset($item_tax_info[1]['name']) ? $item_tax_info[1]['name'] : $this->lang->line('items_sales_tax_2'),)
 	);?>
 	</div>
 	<div class='form_field'>
@@ -108,16 +108,6 @@
 </div>
 
 <div class="field_row clearfix">	
-<?php echo form_label($this->lang->line('items_location').':', 'location',array('class'=>'wide')); ?>
-	<div class='form_field'>
-	<?php echo form_input(array(
-		'name'=>'location',
-		'id'=>'location')
-	);?>
-	</div>
-</div>
-
-<div class="field_row clearfix">	
 <?php echo form_label($this->lang->line('items_description').':', 'description',array('class'=>'wide')); ?>
 	<div class='form_field'>
 	<?php echo form_textarea(array(
@@ -173,10 +163,19 @@
     });
 	$("#category").search();
 	
+	var confirm_message = "<?php echo $this->lang->line('items_confirm_bulk_edit') ?>";
+	$("#tax_percent_name_2, #tax_name_2").prop('disabled', true),
+	$("#tax_percent_name_1, tax_name_1").blur(function() {
+		var disabled = !($("#tax_percent_name_1").val() + $("#tax_name_1").val());
+		$("#tax_percent_name_2, #tax_name_2").prop('disabled', disabled);
+		confirm_message = "<?php echo $this->lang->line('items_confirm_bulk_edit') ?>";
+		confirm_message +=  disabled ? "" : "<?php echo $this->lang->line('items_confirm_bulk_edit_wipe_taxes') ?>";
+	});
+
 	$('#item_form').validate({
 		submitHandler:function(form)
 		{
-			if(confirm("<?php echo $this->lang->line('items_confirm_bulk_edit') ?>"))
+			if(confirm(confirm_message))
 			{
 				//Get the selected ids and create hidden fields to send with ajax submit.
 				var selected_item_ids=get_selected_values();
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/items/inventory.php opensourcepos/application/views/items/inventory.php
--- pos-prod/application/views/items/inventory.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/items/inventory.php	2016-05-23 15:32:31.914839259 -0700
@@ -1,5 +1,5 @@
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <?php
 echo form_close();
 echo form_open('items/save_inventory/'.$item_info->item_id,array('id'=>'item_form'));
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/items/manage.php opensourcepos/application/views/items/manage.php
--- pos-prod/application/views/items/manage.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/items/manage.php	2016-05-23 15:32:31.915839244 -0700
@@ -6,7 +7,17 @@
     enable_select_all();
     enable_checkboxes();
     enable_row_selection();
-    enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>');
+    var widget = enable_search({suggest_url : '<?php echo site_url("$controller_name/suggest")?>',
+        confirm_message : '<?php echo $this->lang->line("common_confirm_search")?>',
+        extra_params : {
+            'is_deleted' : function () {
+                return $("#is_deleted").is(":checked") ? 1 : 0;
+        }
+    }});
+    // clear suggestion cache when toggling filter
+    $("#is_deleted").change(function() {
+        widget.flushCache();
+    });
     enable_delete('<?php echo $this->lang->line($controller_name."_confirm_delete")?>','<?php echo $this->lang->line($controller_name."_none_selected")?>');
     enable_bulk_edit('<?php echo $this->lang->line($controller_name."_none_selected")?>');
 
@@ -22,12 +33,38 @@
     	$(this).attr('href','index.php/items/generate_barcodes/'+selected.join(':'));
     });
 
-    $("#is_serialized, #no_description, #search_custom, #is_deleted").click(function()
+    $("#search_filter_section input").click(function() 
     {
-    	$('#items_filter_form').submit();
+        // reset page number when selecting a specific page number
+        $('#limit_from').val("0");
+        do_search(true);
     });
+
+    $('#search').keypress(function (e) {
+        if (e.which == 13) {
+            $('#search_form').submit();
+        }
     });
 
+    $(".date_filter").datepicker({onSelect: function(d,i)
+    {
+        if(d !== i.lastVal){
+            $(this).change();
+        }
+    }, dateFormat: '<?php echo dateformat_jquery($this->config->item("dateformat"));?>',
+       timeFormat: '<?php echo dateformat_jquery($this->config->item("timeformat"));?>'
+    }).change(function() {
+        do_search(true);
+        return false;
+    });
+    
+    resize_thumbs();
+});
+
+function resize_thumbs()
+{
+    $('a.rollover').imgPreview();
+}
 
 function init_table_sorting()
 {
@@ -41,9 +78,9 @@
 			{
 				0: { sorter: false},
 				8: { sorter: false},
-				9: { sorter: false}
+                9: { sorter: false},
+                10: { sorter: false}
 			}
-
 		});
 	}
 }
@@ -59,9 +96,8 @@
 		//This is an update, just update one row
 		if(jQuery.inArray(response.item_id,get_visible_checkbox_ids()) != -1)
 		{
-			update_row(response.item_id,'<?php echo site_url("$controller_name/get_row")?>');
+            update_row(response.item_id,'<?php echo site_url("$controller_name/get_row")?>',resize_thumbs);
 			set_feedback(response.message,'success_message',false);
-
 		}
 		else //refresh entire table
 		{
@@ -86,13 +122,14 @@
 		var selected_item_ids=get_selected_values();
 		for(k=0;k<selected_item_ids.length;k++)
 		{
-			update_row(selected_item_ids[k],'<?php echo site_url("$controller_name/get_row")?>');
+            update_row(selected_item_ids[k],'<?php echo site_url("$controller_name/get_row")?>',resize_thumbs);
 		}
 		set_feedback(response.message,'success_message',false);
 	}
 }
 
-function show_hide_search_filter(search_filter_section, switchImgTag) {
+function show_hide_search_filter(search_filter_section, switchImgTag)
+{
         var ele = document.getElementById(search_filter_section);
         var imageEle = document.getElementById(switchImgTag);
         var elesearchstate = document.getElementById('search_section_state');
@@ -120,49 +157,63 @@
 		array('class'=>'thickbox none','title'=>$this->lang->line($controller_name.'_new')));
 		?>
 		<?php echo anchor("$controller_name/excel_import/width:$form_width",
-		"<div class='big_button' style='float: left;'><span>Excel Import</span></div>",
+        "<div class='big_button' style='float: left;'><span>" . $this->lang->line('common_import_excel') . "</span></div>",
 		array('class'=>'thickbox none','title'=>'Import Items from Excel'));
 		?>
 	</div>
 </div>
 
-<div id="titleTextImg" style="background-color:#EEEEEE;height:20px;position:relative;">
-	<div style="float:left;vertical-align:text-top;">Search Options :</div>
+<div id="pagination"><?= $links ?></div>
+<div id="titleTextImg" style="background-color:#EEEEEE;height:30px;position:relative;">
+    <div style="float:left;vertical-align:text-top;"><?php echo $this->lang->line('common_search_options'); ?> :</div>
 	<a id="imageDivLink" href="javascript:show_hide_search_filter('search_filter_section', 'imageDivLink');" style="outline:none;">
 	<img src="
 	<?php echo isset($search_section_state)?  ( ($search_section_state)? base_url().'images/minus.png' : base_url().'images/plus.png') : base_url().'images/plus.png';?>" style="border:0;outline:none;padding:0px;margin:0px;position:relative;top:-5px;"></a>
 </div>
-
+<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 <div id="search_filter_section" style="display: <?php echo isset($search_section_state)?  ( ($search_section_state)? 'block' : 'none') : 'none';?>;background-color:#EEEEEE;">
-	<?php echo form_open("$controller_name/refresh",array('id'=>'items_filter_form')); ?>
+    <?php echo form_label($this->lang->line('items_empty_upc_items').' '.':', 'empty_upc');?>
+    <?php echo form_checkbox(array('name'=>'empty_upc','id'=>'empty_upc','value'=>1,'checked'=> isset($empty_upc)?  ( ($empty_upc)? 1 : 0) : 0)).' | ';?>
+    <?php echo form_label($this->lang->line('items_low_inventory_items').' '.':', 'low_inventory');?>
+    <?php echo form_checkbox(array('name'=>'low_inventory','id'=>'low_inventory','value'=>1,'checked'=> isset($low_inventory)?  ( ($low_inventory)? 1 : 0) : 0)).' | ';?>
 	<?php echo form_label($this->lang->line('items_serialized_items').' '.':', 'is_serialized');?>
 	<?php echo form_checkbox(array('name'=>'is_serialized','id'=>'is_serialized','value'=>1,'checked'=> isset($is_serialized)?  ( ($is_serialized)? 1 : 0) : 0)).' | ';?>
 	<?php echo form_label($this->lang->line('items_no_description_items').' '.':', 'no_description');?>
 	<?php echo form_checkbox(array('name'=>'no_description','id'=>'no_description','value'=>1,'checked'=> isset($no_description)?  ( ($no_description)? 1 : 0) : 0)).' | ';?>
-	<?php echo form_label($this->lang->line('items_search_custom_items').' '.':', 'search_custom');//GARRISON ADDED 4/21/2013?>
-	<?php echo form_checkbox(array('name'=>'search_custom','id'=>'search_custom','value'=>1,'checked'=> isset($search_custom)?  ( ($search_custom)? 1 : 0) : 0)).' | ';//GARRISON ADDED 4/21/2013?>
-	<?php echo form_label($this->lang->line('items_is_deleted').' '.':', 'is_deleted');// Parq 131215?> 
-	<?php echo form_checkbox(array('name'=>'is_deleted','id'=>'is_deleted','value'=>1,'checked'=> isset($is_deleted)?  ( ($is_deleted)? 1 : 0) : 0));// Parq 131215?>  
+    <?php echo form_label($this->lang->line('items_search_custom_items').' '.':', 'search_custom');?>
+    <?php echo form_checkbox(array('name'=>'search_custom','id'=>'search_custom','value'=>1,'checked'=> isset($search_custom)?  ( ($search_custom)? 1 : 0) : 0)).' | ';?>
+    <?php echo form_label($this->lang->line('items_is_deleted').' '.':', 'is_deleted');?> 
+    <?php echo form_checkbox(array('name'=>'is_deleted','id'=>'is_deleted','value'=>1,'checked'=> isset($is_deleted)?  ( ($is_deleted)? 1 : 0) : 0));?> 
+
+    <?php echo form_label($this->lang->line('sales_date_range').' :', 'start_date');?>
+    <?php echo form_input(array('name'=>'start_date','value'=>$start_date, 'class'=>'date_filter', 'size' => '15'));?>
+    <?php echo form_label(' - ', 'end_date');?>
+    <?php echo form_input(array('name'=>'end_date','value'=>$end_date, 'class'=>'date_filter', 'size' => '15'));?>
+    
 	<input type="hidden" name="search_section_state" id="search_section_state" value="<?php echo isset($search_section_state)?  ( ($search_section_state)? 'block' : 'none') : 'none';?>" />
-	</form>
 </div>
-<?php echo $this->pagination->create_links();?>
 <div id="table_action_header">
 	<ul>
 		<li class="float_left"><span><?php echo anchor("$controller_name/delete",$this->lang->line("common_delete"),array('id'=>'delete')); ?></span></li>
 		<li class="float_left"><span><?php echo anchor("$controller_name/bulk_edit/width:$form_width",$this->lang->line("items_bulk_edit"),array('id'=>'bulk_edit','title'=>$this->lang->line('items_edit_multiple_items'))); ?></span></li>
 		<li class="float_left"><span><?php echo anchor("$controller_name/generate_barcodes",$this->lang->line("items_generate_barcodes"),array('id'=>'generate_barcodes', 'target' =>'_blank','title'=>$this->lang->line('items_generate_barcodes'))); ?></span></li>
+        <?php if (count($stock_locations) > 1): ?>
+            <li class="float_left"><span><?php echo form_dropdown('stock_location',$stock_locations,$stock_location,'id="stock_location" onchange="$(\'#search_form\').submit();"'); ?></span></li>
+        <?php endif; ?>
 		<li class="float_right">
 		<img src='<?php echo base_url()?>images/spinner_small.gif' alt='spinner' id='spinner' />
-		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 		<input type="text" name ='search' id='search'/>
-		</form>
+            <input type="hidden" name ='limit_from' id='limit_from'/>
 		</li>
 	</ul>
 </div>
 
-<div id="table_holder" style="font-size:14px">
+<?php echo form_close(); ?>
+
+<div id="table_holder">
 <?php echo $manage_table; ?>
 </div>
+
 <div id="feedback_bar"></div>
+
 <?php $this->load->view("partial/footer"); ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/login.php opensourcepos/application/views/login.php
--- pos-prod/application/views/login.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/login.php	2016-05-23 15:32:31.915839244 -0700
@@ -5,7 +5,8 @@
 <link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/login.css" />
 <meta http-equiv="content-type" content="text/html; charset=utf-8" />
 <title>Open Source Point Of Sale <?php echo $this->lang->line('login_login'); ?></title>
-<script src="<?php echo base_url();?>js/jquery-1.2.6.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
+	<link rel="shortcut icon" type="image/x-icon" href="<?php echo base_url();?>/images/favicon.ico">
+	<script src="<?php echo base_url();?>js/jquery-1.8.3.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
 <script type="text/javascript">
 $(document).ready(function()
 {
@@ -13,24 +14,22 @@
 });
 </script>
 </head>
+
 <body>
-<h1>Open Source Point Of Sale <?php echo $this->config->item('application_version'); ?></h1>
+	<div align="center" style="margin-top:10px"><img src=<?php echo base_url();?>/images/logo.gif></div>
+
+	<div id="login">
 
 <?php echo form_open('login') ?>
 <div id="container">
 <?php echo validation_errors(); ?>
-	<div id="top">
-	<?php echo $this->lang->line('login_login'); ?>
-	</div>
-	<div id="login_form">
-		<div id="welcome_message">
-		<?php echo $this->lang->line('login_welcome_message'); ?>
-		</div>
 		
+		<div id="login_form">
 		<div class="form_field_label"><?php echo $this->lang->line('login_username'); ?>: </div>
 		<div class="form_field">
 		<?php echo form_input(array(
 		'name'=>'username', 
+				'id'=>'username',
 		'size'=>'20')); ?>
 		</div>
 
@@ -38,15 +37,13 @@
 		<div class="form_field">
 		<?php echo form_password(array(
 		'name'=>'password', 
+				'id' => 'password',
 		'size'=>'20')); ?>
-		
 		</div>
 		
-		<div id="submit_button">
-		<?php echo form_submit('loginButton','Go'); ?>
-		</div>
+			<div id="submit_button"><?php echo form_submit('loginButton','Go'); ?> </div>
 	</div>
 </div>
-<?php echo form_close(); ?>
+	<?php echo form_close(); ?><h1>Open Source Point Of Sale <?php echo $this->config->item('application_version'); ?></h1>
 </body>
 </html>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/no_access.php opensourcepos/application/views/no_access.php
--- pos-prod/application/views/no_access.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/no_access.php	2016-05-23 15:32:31.915839244 -0700
@@ -1,3 +1,3 @@
 <?php
-echo $this->lang->line('error_no_permission_module').' '.$module_name; 
+echo $this->lang->line('error_no_permission_module').' '.$module_name . (!empty($permission_id) ? ' (' . $permission_id . ')' : ''); 
 ?> 
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/partial/footer.php opensourcepos/application/views/partial/footer.php
--- pos-prod/application/views/partial/footer.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/partial/footer.php	2016-05-23 15:32:31.915839244 -0700
@@ -1,6 +1,12 @@
 </div>
 </div>
-<div id="footer"> <?php echo $this->lang->line('common_you_are_using_ospos'); ?> <?php echo $this->config->item('application_version'); ?>.
-<?php echo $this->lang->line('common_please_visit_my'); ?> <a href="http://sourceforge.net/projects/opensourcepos/" target="_blank"><?php echo $this->lang->line('common_website'); ?></a> <?php echo $this->lang->line('common_learn_about_project'); ?>.</div>
+
+	<div id="footer">
+		<?php echo $this->lang->line('common_you_are_using_ospos'); ?>
+		<?php echo $this->config->item('application_version'); ?>.
+		<?php echo $this->lang->line('common_please_visit_my'); ?>
+		<a href="https://github.com/jekkos/opensourcepos" target="_blank"><?php echo $this->lang->line('common_website'); ?></a>
+		<?php echo $this->lang->line('common_learn_about_project'); ?>
+	</div>
 </body>
 </html>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/partial/header.php opensourcepos/application/views/partial/header.php
--- pos-prod/application/views/partial/header.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/partial/header.php	2016-05-23 15:32:31.915839244 -0700
@@ -1,29 +1,60 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
-        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml">
 <head>
 	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
 	<base href="<?php echo base_url();?>" />
 	<title><?php echo $this->config->item('company').' -- '.$this->lang->line('common_powered_by').' OS Point Of Sale' ?></title>
-	<link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/ospos.css" />
-	<link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/ospos_print.css"  media="print"/>
-	<script>BASE_URL = '<?php echo site_url(); ?>';</script>
-	<script src="<?php echo base_url();?>js/jquery-1.2.6.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.color.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.metadata.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.form.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.tablesorter.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.ajax_queue.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.bgiframe.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.autocomplete.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.validate.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/jquery.jkey-1.1.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/thickbox.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/common.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/manage_tables.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/swfobject.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/date.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
-	<script src="<?php echo base_url();?>js/datepicker.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
+	<link rel="shortcut icon" type="image/x-icon" href="<?php echo base_url();?>/images/favicon.ico">
+	<link rel="stylesheet" type="text/css" href="css/ospos.css" />
+	<link rel="stylesheet" type="text/css" href="css/ospos_print.css" media="print" />
+	
+	<?php if ($this->input->cookie('debug') == "true" || $this->input->get("debug") == "true") : ?>
+		<!-- start js template tags -->
+		<script type="text/javascript" src="js/jquery-1.8.3.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery-ui-1.11.4.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery-ui-timepicker-addon.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.ajax_queue.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.autocomplete.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.color.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.form-3.51.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.metadata.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.tablesorter-2.20.1.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.tablesorter.staticrow.js" language="javascript"></script>
+		<script type="text/javascript" src="js/jquery.validate-1.13.1-min.js" language="javascript"></script>
+		<script type="text/javascript" src="js/common.js" language="javascript"></script>
+		<script type="text/javascript" src="js/date.js" language="javascript"></script>
+		<script type="text/javascript" src="js/imgpreview.full.jquery.js" language="javascript"></script>
+		<script type="text/javascript" src="js/manage_tables.js" language="javascript"></script>
+		<script type="text/javascript" src="js/nominatim.autocomplete.js" language="javascript"></script>
+		<script type="text/javascript" src="js/phpjsdate.js" language="javascript"></script>
+		<script type="text/javascript" src="js/swfobject.js" language="javascript"></script>
+		<script type="text/javascript" src="js/tabcontent.js" language="javascript"></script>
+		<script type="text/javascript" src="js/thickbox.js" language="javascript"></script>
+		<!-- end js template tags -->
+	<?php else : ?>
+		<!-- start minjs template tags -->
+		<script type="text/javascript" src="dist/opensourcepos.min.js?rel=5b6d6cb4c1" language="javascript"></script>
+		<!-- end minjs template tags -->       
+	<?php endif; ?>
+
+	<script type="text/javascript">
+		// live clock
+	
+		function clockTick() {  
+			setInterval('updateClock();', 1000);  
+		}
+
+		// start the clock immediatly
+		clockTick();
+
+		var now = new Date(<?php echo time() * 1000 ?>);
+
+		function updateClock() {
+			now.setTime(now.getTime() + 1000);
+			
+			document.getElementById('liveclock').innerHTML = phpjsDate("<?php echo $this->config->item('dateformat').' '.$this->config->item('timeformat') ?>", now);
+		}
+	</script>
 	
 <style type="text/css">
 html {
@@ -47,7 +78,7 @@
 			?>
 			<div class="menu_item">
 				<a href="<?php echo site_url("$module->module_id");?>">
-				<img src="<?php echo base_url().'images/menubar/'.$module->module_id.'.png';?>" border="0" alt="Menubar Image" /></a><br />
+						<img src="<?php echo base_url().'images/menubar/'.$module->module_id.'.png';?>" border="0" alt="Menubar Image"></a><br>
 				<a href="<?php echo site_url("$module->module_id");?>"><?php echo $this->lang->line("module_".$module->module_id) ?></a>
 			</div>
 			<?php
@@ -61,9 +92,8 @@
 		</div>
 
 		<div id="menubar_date">
-		<?php echo date('F d, Y h:i a') ?>
+				<div id="liveclock"><?php echo date($this->config->item('dateformat').' '.$this->config->item('timeformat')) ?></div>
 		</div>
-
 	</div>
 </div>
 <div id="content_area_wrapper">
@@ -68,3 +98,4 @@
 </div>
 <div id="content_area_wrapper">
 <div id="content_area">
+ 
\ No newline at end of file
Only in opensourcepos/application/views/partial: print_receipt.php
Only in opensourcepos/application/views/partial: stock_locations.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/people/form_basic_info.php opensourcepos/application/views/people/form_basic_info.php
--- pos-prod/application/views/people/form_basic_info.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/people/form_basic_info.php	2016-05-23 15:32:31.915839244 -0700
@@ -20,6 +20,30 @@
 </div>
 
 <div class="field_row clearfix">	
+<?php echo form_label($this->lang->line('common_gender').':', 'gender',
+!empty($basic_version) ? array('class'=>'required') : array()); ?>
+	<div class='form_field'>
+	<?php echo form_radio(array(
+		'name'=>'gender',
+		'type'=>'radio',
+		'id'=>'gender',
+		'value'=>1,
+		'checked'=>$person_info->gender === '1')
+	);
+	echo '&nbsp;' . $this->lang->line('common_gender_male') . '&nbsp;';
+	echo form_radio(array(
+		'name'=>'gender',
+		'type'=>'radio',
+		'id'=>'gender',
+		'value'=>0,
+		'checked'=>$person_info->gender === '0')
+	);
+	echo '&nbsp;' . $this->lang->line('common_gender_female');
+	?>
+	</div>
+</div>
+
+<div class="field_row clearfix">	
 <?php echo form_label($this->lang->line('common_email').':', 'email'); ?>
 	<div class='form_field'>
 	<?php echo form_input(array(
@@ -85,7 +109,7 @@
 	<div class='form_field'>
 	<?php echo form_input(array(
 		'name'=>'zip',
-		'id'=>'zip',
+		'id'=>'postcode',
 		'value'=>$person_info->zip));?>
 	</div>
 </div>
@@ -112,3 +136,39 @@
 	);?>
 	</div>
 </div>
\ No newline at end of file
+
+<script type='text/javascript' language="javascript">
+//validation and submit handling
+$(document).ready(function()
+{
+	nominatim.init({
+		fields : {
+			postcode : {  
+				dependencies :  ["postcode", "city", "state", "country"], 
+				response : {  
+					field : 'postalcode', 
+					format: ["postcode", "village|town|hamlet|city_district|city", "state", "country"] 
+				}
+			},
+	
+			city : {
+				dependencies :  ["postcode", "city", "state", "country"], 
+				response : {  
+					format: ["postcode", "village|town|hamlet|city_district|city", "state", "country"] 
+				}
+			},
+	
+			state : {
+				dependencies :  ["state", "country"]
+			},
+	
+			country : {
+				dependencies :  ["state", "country"] 
+			}
+			
+		},
+		language : '<?php echo $this->config->item('language');?>'
+	});
+
+});
+</script>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/people/manage.php opensourcepos/application/views/people/manage.php
--- pos-prod/application/views/people/manage.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/people/manage.php	2016-05-23 15:32:31.915839244 -0700
@@ -5,7 +5,8 @@
     init_table_sorting();
     enable_select_all();
     enable_row_selection();
-    enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>',false);
+    enable_search({ suggest_url : '<?php echo site_url("$controller_name/suggest")?>',
+		confirm_search_message : '<?php echo $this->lang->line("common_confirm_search")?>'});
     enable_email('<?php echo site_url("$controller_name/mailto")?>');
     enable_delete('<?php echo $this->lang->line($controller_name."_confirm_delete")?>','<?php echo $this->lang->line($controller_name."_none_selected")?>');
 }); 
@@ -65,13 +66,13 @@
 		?>
 		<?php if ($controller_name =='customers') {?>
 			<?php echo anchor("$controller_name/excel_import/width:$form_width",
-			"<div class='big_button' style='float: left;'><span>Excel Import</span></div>",
+			"<div class='big_button' style='float: left;'><span>" . $this->lang->line('common_import_excel') . "</span></div>",
 				array('class'=>'thickbox none','title'=>'Import Items from Excel'));
 			?>	
 		<?php } ?>
 	</div>
 </div>
-<?php echo $this->pagination->create_links();?>
+<div id="pagination"><?= $links ?></div>
 <div id="table_action_header">
 	<ul>
 		<li class="float_left"><span><?php echo anchor("$controller_name/delete",$this->lang->line("common_delete"),array('id'=>'delete')); ?></span></li>
@@ -80,6 +81,7 @@
 		<img src='<?php echo base_url()?>images/spinner_small.gif' alt='spinner' id='spinner' />
 		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 		<input type="text" name ='search' id='search'/>
+		<input type="hidden" name ='limit_from' id='limit_from'/>
 		</form>
 		</li>
 	</ul>
Only in opensourcepos/application/views/receivings: form.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/receivings/receipt.php opensourcepos/application/views/receivings/receipt.php
--- pos-prod/application/views/receivings/receipt.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/receivings/receipt.php	2016-05-23 15:32:31.915839244 -0700
@@ -1,4 +1,8 @@
 <?php $this->load->view("partial/header"); ?>
+
+<?php $this->load->view('partial/print_receipt', array('print_after_sale', $print_after_sale, 
+		'selected_printer' => 'receipt_printer')); ?>
+
 <?php
 if (isset($error_message))
 {
@@ -8,7 +12,19 @@
 ?>
 <div id="receipt_wrapper">
 	<div id="receipt_header">
+		<?php if ($this->Appconfig->get('company_logo') == '') 
+        { 
+        ?>
 		<div id="company_name"><?php echo $this->config->item('company'); ?></div>
+		<?php 
+		}
+		else 
+		{ 
+		?>
+		<div id="company_name"><img id="image" src="<?php echo base_url('uploads/' . $this->Appconfig->get('company_logo')); ?>" alt="company_logo" /></div>			
+		<?php
+		}
+		?>
 		<div id="company_address"><?php echo nl2br($this->config->item('address')); ?></div>
 		<div id="company_phone"><?php echo $this->config->item('phone'); ?></div>
 		<div id="sale_receipt"><?php echo $receipt_title; ?></div>
@@ -18,54 +34,54 @@
 		<?php if(isset($supplier))
 		{
 		?>
-			<div id="customer"><?php echo $this->lang->line('suppliers_supplier').": ".$supplier; ?><br>
-			<?php if (!empty($supplier_2) ) echo $supplier_2."<br>"; ?>
-			<?php if (!empty($supplier_3) ) echo $supplier_3."<br>"; ?>
-			<?php if (!empty($supplier_4) ) echo $supplier_4."<br>"; ?>
-			<?php if (!empty($supplier_5) ) echo "ACCT: ".$supplier_5."<br>"; ?>
-			
-			</div>
-			<br>
+		<div id="customer"><?php echo $this->lang->line('suppliers_supplier').": ".$supplier; ?></div>
 		<?php
 		}
 		?>
 		<div id="sale_id"><?php echo $this->lang->line('recvs_id').": ".$receiving_id; ?></div>
+		<?php if (!empty($invoice_number))
+		{
+		?>
+		<div id="invoice_number"><?php echo $this->lang->line('recvs_invoice_number').": ".$invoice_number; ?></div>	
+		<?php 
+		}
+		?>
 		<div id="employee"><?php echo $this->lang->line('employees_employee').": ".$employee; ?></div>
 	</div>
 
 	<table id="receipt_items">
 	<tr>
-	<th style="width:50%;"><?php echo $this->lang->line('items_item'); ?></th>
-	<th style="width:17%;">Cost/Price</th>
-	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_quantity'); ?></th>
-	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_discount'); ?></th>
-	<th style="width:17%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
+	<th style="width:40%;"><?php echo $this->lang->line('items_item'); ?></th>
+	<th style="width:20%;"><?php echo $this->lang->line('common_price'); ?></th>
+	<th style="width:20%;"><?php echo $this->lang->line('sales_quantity'); ?></th>
+	<th style="width:15%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
 	</tr>
 	<?php
 	foreach(array_reverse($cart, true) as $line=>$item)
 	{
 	?>
 		<tr>
-		<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],70); ?></span></td>
-		<td><?php echo to_currency($item['price'])."/".to_currency($item['unit_price']); ?></td>
-                <td style='text-align:center;'><?php
+		<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],10); ?></span></td>
+		<td><?php echo to_currency($item['price']); ?></td>
+		<td><?php 
                         echo $item['quantity'] . " " . ($show_stock_locations ? " [" . $item['stock_name'] . "]" : "");
-                ?></td>
-		<td style='text-align:center;'><?php echo $item['discount']; ?></td>
-		<td style='text-align:right;'><?php echo to_currency($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100); ?></td>
+		?>&nbsp;&nbsp;&nbsp;x <?php echo $item['receiving_quantity'] != 0 ? $item['receiving_quantity'] : 1; ?></td>
+		<td><div class="total-value"><?php echo to_currency($item['total']); ?></div></td>
 		</tr>
 	    <tr>
-
-	    <td colspan="2" align="center"><?php echo $item['description']; ?></td>
-		<td colspan="2" ><?php echo $item['serialnumber']; ?></td>
-		<td colspan="1"><?php echo '---'; ?></td>
+		<td ><?php echo $item['serialnumber']; ?></td>
+	    </tr>
+	    <?php if ($item['discount'] > 0 ) : ?>
+		<tr>
+			<td colspan="3" style="font-weight: bold;"> <?php echo number_format($item['discount'], 0) . " " . $this->lang->line("sales_discount_included")?> </td>
 	    </tr>
+		<?php endif; ?>
 	<?php
 	}
 	?>	
 	<tr>
-	<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_total'); ?></td>
-	<td colspan="2" style='text-align:right'><?php echo to_currency($total); ?></td>
+	<td colspan="3" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_total'); ?></td>
+	<td style='border-top:2px solid #000000;'><div class="total-value"><?php echo to_currency($total); ?></div></td>
 	</tr>
 	<?php 
     if($mode!='requisition')
@@ -73,7 +89,7 @@
     ?>
 	<tr>
 	<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_payment'); ?></td>
-	<td colspan="2" style='text-align:right'><?php echo $payment_type; ?></td>
+	<td><div class="total-value"><?php echo $payment_type; ?></div></td>
 	</tr>
 	
 
@@ -82,12 +98,12 @@
 	?>
 		<tr>
 		<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_amount_tendered'); ?></td>
-		<td colspan="2" style='text-align:right'><?php echo to_currency($amount_tendered); ?></td>
+		<td><div class="total-value"><?php echo to_currency($amount_tendered); ?></div></td>
 		</tr>
 
 		<tr>
 		<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_change_due'); ?></td>
-		<td colspan="2" style='text-align:right'><?php echo $amount_change; ?></td>
+		<td><div class="total-value"><?php echo $amount_change; ?></div></td>
 		</tr>
 	<?php
 	}
@@ -101,20 +117,8 @@
 	<?php echo nl2br($this->config->item('return_policy')); ?>
 	</div>
 	<div id='barcode'>
-	<?php echo "<img src='index.php/barcode?barcode=$receiving_id&text=$receiving_id&width=250&height=50' />"; ?>
+		<img src='data:image/png;base64,<?php echo $barcode; ?>' /><br>
+		<?php echo $receiving_id; ?>
 	</div>
 </div>
 <?php $this->load->view("partial/footer"); ?>
-
-<?php if ($this->Appconfig->get('print_after_sale'))
-{
-?>
-<script type="text/javascript">
-$(window).load(function()
-{
-	window.print();
-});
-</script>
-<?php
-}
-?>
Only in pos-prod/application/views/receivings: receipt.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/receivings/receiving.php opensourcepos/application/views/receivings/receiving.php
--- pos-prod/application/views/receivings/receiving.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/views/receivings/receiving.php	2016-05-23 15:32:31.915839244 -0700
@@ -48,7 +48,7 @@
 	</label>
 <?php echo form_input(array('name'=>'item','id'=>'item','size'=>'40'));?>
 <div id="new_item_button_register" >
-		<?php echo anchor("items/view/-1/width:360",
+		<?php echo anchor("items/view/-1/width:450",
 		"<div class='small_button'><span>".$this->lang->line('sales_new_item')."</span></div>",
 		array('class'=>'thickbox none','title'=>$this->lang->line('sales_new_item')));
 		?>
@@ -63,9 +63,9 @@
 <tr>
         <th style="width:11%;"><?php echo $this->lang->line('common_delete'); ?></th>
         <th style="width:30%;"><?php echo $this->lang->line('recvs_item_name'); ?></th>
-	<th>Price</th>
         <th style="width:11%;"><?php echo $this->lang->line('recvs_cost'); ?></th>
-        <th style="width:11%;"><?php echo $this->lang->line('recvs_quantity'); ?></th>
+	<th style="width:5%;"><?php echo $this->lang->line('recvs_quantity'); ?></th>
+	<th style="width:6%;"></th>
         <th style="width:11%;"><?php echo $this->lang->line('recvs_discount'); ?></th>
         <th style="width:15%;"><?php echo $this->lang->line('recvs_total'); ?></th>
         <th style="width:11%;"><?php echo $this->lang->line('recvs_edit'); ?></th>
@@ -76,9 +76,9 @@
 if(count($cart)==0)
 {
 ?>
-<tr><td colspan='7'>
+<tr><td colspan='8'>
 <div class='warning_message' style='padding:7px;'><?php echo $this->lang->line('sales_no_items_in_cart'); ?></div>
-</tr></tr>
+</td></tr>
 <?php
 }
 else
@@ -90,14 +90,9 @@
 ?>
 	    <tr>
 	    <td><?php echo anchor("receivings/delete_item/$line",'['.$this->lang->line('common_delete').']');?></td>
-		<td style="align:center;"><?php echo $item['name']; ?><br /> [<?php echo $item['in_stock']; ?> in <?php echo $item['stock_name']; ?>]</td>
-            <?php echo form_hidden('location', $item['item_location']); ?>
+		<td style="align:center;"><?php echo $item['name']; ?><br /> [<?php echo $item['in_stock']; ?> in <?php echo $item['stock_name']; ?>]
+            <?php echo form_hidden('location', $item['item_location']); ?></td>
 
-<?php
-			echo $item['description'];
-      		echo form_hidden('description',$item['description']);
-?>
-		<td><?php echo $item['unit_price']; ?></td>
 <?php       if ($items_module_allowed && $mode!='requisition')
 		    {
 ?>
@@ -112,14 +107,27 @@
 <?php
 		    }
 ?>
-		<?php echo form_hidden('unit_price',$item['unit_price']); ?>
+		
 	    <td>
 <?php
             echo form_input(array('name'=>'quantity','value'=>$item['quantity'],'size'=>'2'));
+            if ($item['receiving_quantity'] > 1) 
+			{
 ?>
 	    </td>
+        <td>x <?php echo $item['receiving_quantity']; ?></td>	
+		<?php 
+			}
+			else
+			{
+		?>
+		<td></td>
+		<?php 
+			}
+		?>
 	    
-<?php       if ($items_module_allowed && $mode!='requisition')
+		<?php       
+			if ($items_module_allowed && $mode!='requisition')
 		    {
 ?>
 		    <td><?php echo form_input(array('name'=>'discount','value'=>$item['discount'],'size'=>'3'));?></td>
@@ -136,6 +144,39 @@
 	    <td><?php echo to_currency($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100); ?></td>
 	    <td><?php echo form_submit("edit_item", $this->lang->line('sales_edit_item'));?></td>
 	    </tr>
+		<tr>
+		<?php 
+			if($item['allow_alt_description']==1)
+			{
+			?>
+			<td style="color: #2F4F4F;"><?php echo $this->lang->line('sales_description_abbrv').':';?></td>
+			<?php 
+			} 
+			?>
+			<td colspan="2" style="text-align: left;">
+		
+			<?php
+	        	if($item['allow_alt_description']==1)
+	        	{
+	        		echo form_input(array('name'=>'description','value'=>$item['description'],'size'=>'20'));
+	        	}
+	        	else
+	        	{
+					if ($item['description']!='')
+					{
+						echo $item['description'];
+	        			echo form_hidden('description',$item['description']);
+	        		}
+	        		else
+	        		{
+	        		    echo $this->lang->line('sales_no_description');
+	           			echo form_hidden('description','');
+	        		}
+	        	}
+			?>
+			</td>
+			<td colspan="6"></td>
+		</tr>
 	    </form>
 <?php
     }
@@ -162,7 +203,7 @@
 		</form>
 		<div style="margin-top:5px;text-align:center;">
 		<h3 style="margin: 5px 0 5px 0"><?php echo $this->lang->line('common_or'); ?></h3>
-		<?php echo anchor("suppliers/view/-1/width:350",
+		<?php echo anchor("suppliers/view/-1/width:400",
 		"<div class='small_button' style='margin:0 auto;'><span>".$this->lang->line('recvs_new_supplier')."</span></div>",
 		array('class'=>'thickbox none','title'=>$this->lang->line('recvs_new_supplier')));
 		?>
@@ -195,19 +233,19 @@
     
     <div  style='border-top:2px solid #000;' />
     <div id="finish_sale">
-        <?php echo form_open("receivings/requisition_complete",array('id'=>'finish_sale_form')); ?>
+		        <?php echo form_open("receivings/requisition_complete",array('id'=>'finish_receiving_form')); ?>
         <br />
         <label id="comment_label" for="comment"><?php echo $this->lang->line('common_comments'); ?>:</label>
-        <?php echo form_textarea(array('name'=>'comment','value'=>'','rows'=>'4','cols'=>'23'));?>
+		        <?php echo form_textarea(array('name'=>'comment','id'=>'comment','value'=>$comment,'rows'=>'4','cols'=>'23'));?>
         <br /><br />
         
-        <?php echo "<div class='small_button' id='finish_sale_button' style='float:right;margin-top:5px;'><span>".$this->lang->line('recvs_complete_receiving')."</span></div>";
-        ?>
+		        <div class='small_button' id='finish_receiving_button' style='float:right;margin-top:5px;'>
+		        	<span><?php echo $this->lang->line('recvs_complete_receiving') ?></span>
         </div>
         </form>    
-        <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_sale_form')); ?>
-        <div class='small_button' id='cancel_sale_button' style='float:left;margin-top:5px;'>
-        <span>Cancel </span>
+		        <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_receiving_form')); ?>
+		        <div class='small_button' id='cancel_receiving_button' style='float:left;margin-top:5px;'>
+		        <span><?php echo $this->lang->line('recvs_cancel_receiving')?></span>
         </div>
         </form>
      </div>
@@ -217,12 +255,60 @@
         {
 	?>
 	<div id="finish_sale">
-		<?php echo form_open("receivings/complete",array('id'=>'finish_sale_form')); ?>
+		<?php echo form_open("receivings/complete",array('id'=>'finish_receiving_form')); ?>
 		<br />
 		<label id="comment_label" for="comment"><?php echo $this->lang->line('common_comments'); ?>:</label>
-		<?php echo form_textarea(array('name'=>'comment','value'=>'','rows'=>'4','cols'=>'23'));?>
+		<?php echo form_textarea(array('name'=>'comment','id'=>'comment','value'=>$comment,'rows'=>'4','cols'=>'23'));?>
 		<br /><br />
-		<table width="100%"><tr><td>
+		<table width="100%">
+		<tr>
+			<td>
+				<?php echo $this->lang->line('recvs_print_after_sale'); ?>
+			</td>
+			<td>
+				<?php if ($print_after_sale)
+				{
+					echo form_checkbox(array('name'=>'recv_print_after_sale','id'=>'recv_print_after_sale','checked'=>'checked'));
+				}
+				else
+				{
+					echo form_checkbox(array('name'=>'recv_print_after_sale','id'=>'recv_print_after_sale'));
+				}
+				?>
+			</td>
+		</tr>
+		<?php if ($mode == "receive") 
+		{
+		?>
+		<tr>
+		<td>
+		<?php echo $this->lang->line('recvs_invoice_enable'); ?>
+		</td>
+		<td>
+		<?php if ($invoice_number_enabled)
+		{
+			echo form_checkbox(array('name'=>'recv_invoice_enable','id'=>'recv_invoice_enable','size'=>10,'checked'=>'checked'));
+		}
+		else
+		{
+			echo form_checkbox(array('name'=>'recv_invoice_enable','id'=>'recv_invoice_enable','size'=>10));
+		}
+		?>
+		</td>
+		</tr>
+		
+		<tr>
+		<td>
+		<?php echo $this->lang->line('recvs_invoice_number').':   ';?>
+		</td>
+		<td>
+		<?php echo form_input(array('name'=>'recv_invoice_number','id'=>'recv_invoice_number','value'=>$invoice_number,'size'=>10));?>
+		</td>
+		</tr>
+		<?php 
+		}
+		?>
+		<tr><td>
 		<?php
 			echo $this->lang->line('sales_payment').':   ';?>
 		</td><td>
@@ -244,15 +330,15 @@
 
         </table>
         <br />
-		<?php echo "<div class='small_button' id='finish_sale_button' style='float:right;margin-top:5px;'><span>".$this->lang->line('recvs_complete_receiving')."</span></div>";
-		?>
+		<div class='small_button' id='finish_receiving_button' style='float:right;margin-top:5px;'>
+			<span><?php echo $this->lang->line('recvs_complete_receiving') ?></span>
 		</div>
 
 		</form>
 
-	    <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_sale_form')); ?>
-			    <div class='small_button' id='cancel_sale_button' style='float:left;margin-top:5px;'>
-					<span>Cancel </span>
+	    <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_receiving_form')); ?>
+			    <div class='small_button' id='cancel_receiving_button' style='float:left;margin-top:5px;'>
+					<span><?php echo $this->lang->line('recvs_cancel_receiving')?></span>
 				</div>
         </form>
 	</div>
@@ -264,10 +350,6 @@
 </div>
 <div class="clearfix" style="margin-bottom:30px;">&nbsp;</div>
 
-
-<?php $this->load->view("partial/footer"); ?>
-
-
 <script type="text/javascript" language="javascript">
 $(document).ready(function()
 {
@@ -294,6 +376,36 @@
     	$(this).attr('value',"<?php echo $this->lang->line('sales_start_typing_item_name'); ?>");
     });
 
+	$('#comment').keyup(function() 
+	{
+		$.post('<?php echo site_url("receivings/set_comment");?>', {comment: $('#comment').val()});
+	});
+
+	$('#recv_invoice_number').keyup(function() 
+	{
+		$.post('<?php echo site_url("receivings/set_invoice_number");?>', {recv_invoice_number: $('#recv_invoice_number').val()});
+	});
+
+	$("#recv_print_after_sale").change(function()
+	{
+		$.post('<?php echo site_url("receivings/set_print_after_sale");?>', {recv_print_after_sale: $(this).is(":checked")});
+	});
+
+	var enable_invoice_number = function() 
+	{
+		var enabled = $("#recv_invoice_enable").is(":checked");
+		$("#recv_invoice_number").prop("disabled", !enabled).parents('tr').show();
+		return enabled;
+	}
+
+	enable_invoice_number();
+
+	$("#recv_invoice_enable").change(function() {
+		var enabled = enable_invoice_number();
+		$.post('<?php echo site_url("receivings/set_invoice_number_enabled");?>', {recv_invoice_number_enabled: enabled});
+		
+	});
+
 	$('#item,#supplier').click(function()
     {
     	$(this).attr('value','');
@@ -319,33 +431,40 @@
     	$(this).attr('value',"<?php echo $this->lang->line('recvs_start_typing_supplier_name'); ?>");
     });
 
-    $("#finish_sale_button").click(function()
+    $("#finish_receiving_button").click(function()
     {
     	if (confirm('<?php echo $this->lang->line("recvs_confirm_finish_receiving"); ?>'))
     	{
-    		$('#finish_sale_form').submit();
+    		$('#finish_receiving_form').submit();
     	}
     });
 
-    $("#cancel_sale_button").click(function()
+    $("#cancel_receiving_button").click(function()
     {
     	if (confirm('<?php echo $this->lang->line("recvs_confirm_cancel_receiving"); ?>'))
     	{
-    		$('#cancel_sale_form').submit();
+    		$('#cancel_receiving_form').submit();
     	}
     });
 
 
 });
 
-function post_item_form_submit(response)
+function post_item_form_submit(response, stay_open)
 {
 	if(response.success)
 	{
 		$("#item").attr("value",response.item_id);
+		if (stay_open)
+		{
+			$("#add_item_form").ajaxSubmit();
+		}
+		else
+		{
 		$("#add_item_form").submit();
 	}
 }
+}
 
 function post_person_form_submit(response)
 {
@@ -357,3 +476,4 @@
 }
 
 </script>
+<?php $this->load->view("partial/footer"); ?>
\ No newline at end of file
Only in pos-prod/application/views/receivings: receiving.php.rej
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/reports/date_input.php opensourcepos/application/views/reports/date_input.php
--- pos-prod/application/views/reports/date_input.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/views/reports/date_input.php	2016-05-23 15:32:31.915839244 -0700
@@ -55,10 +55,6 @@
     elseif($mode == 'receiving')
     {
     ?>
-    <?php echo form_label($specific_input_name, 'specific_input_name_label', array('class'=>'required')); ?>
-	<div id='report_specific_input_data'>
-		<?php echo form_dropdown('specific_input_data',$specific_input_data, '', 'id="specific_input_data"'); ?>
-	</div>
         <?php echo form_label($this->lang->line('reports_receiving_type'), 'reports_receiving_type_label', array('class'=>'required')); ?>
         <div id='report_receiving_type'>
         <?php echo form_dropdown('receiving_type',array('all' => $this->lang->line('reports_all'), 
@@ -68,9 +64,14 @@
         </div>
     <?php
     }
-    elseif($mode == 'requisition')
+	if (!empty($stock_locations) && count($stock_locations) > 1)
     {
-        //Do nothing
+		?>
+		<?php echo form_label($this->lang->line('reports_stock_location'), 'reports_stock_location_label', array('class'=>'required')); ?>
+		<div id='report_stock_location'>
+			<?php echo form_dropdown('stock_location',$stock_locations,'all','id="location_id"'); ?>
+		</div>
+		<?php
     }
     ?>
 <?php
@@ -90,25 +91,30 @@
 	$("#generate_report").click(function()
 	{		
 		var input_type = $("#input_type").val();
-		var supplier_id = $("#specific_input_data").val();
-		
+		var location_id = $("#location_id").val();
+		var location = window.location;
 		if ($("#simple_radio").attr('checked'))
 		{
-			window.location = window.location+'/'+$("#report_date_range_simple option:selected").val() + '/' + input_type + '/' + supplier_id;
+			location += '/'+$("#report_date_range_simple option:selected").val() + '/' + input_type;
 		}
 		else
 		{
 			var start_date = $("#start_year").val()+'-'+$("#start_month").val()+'-'+$('#start_day').val();
 			var end_date = $("#end_year").val()+'-'+$("#end_month").val()+'-'+$('#end_day').val();
-	        if(input_type == null)
+	        if(!input_type)
 	        {
-	            window.location = window.location+'/'+start_date + '/'+ end_date + '/' + supplier_id;
+	            location += '/'+start_date + '/'+ end_date;
 	        }
 	        else
 	        {
-			     window.location = window.location+'/'+start_date + '/'+ end_date+ '/' + input_type+ '/' + supplier_id;
+				location += '/'+start_date + '/'+ end_date+ '/' + input_type;
+			}
 			}
+		if (location_id)
+		{
+			location += '/' + location_id;
 		}
+		window.location = location;
 	});
 	
 	$("#start_month, #start_day, #start_year, #end_month, #end_day, #end_year").click(function()
Only in opensourcepos/application/views/reports: inventory_summary_input.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/reports/listing.php opensourcepos/application/views/reports/listing.php
--- pos-prod/application/views/reports/listing.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/reports/listing.php	2016-05-23 15:32:31.915839244 -0700
@@ -5,49 +4,59 @@
 <ul id="report_list">
 	<li><h3><?php echo $this->lang->line('reports_graphical_reports'); ?></h3>
 		<ul>
-			<li><a href="<?php echo site_url('reports/graphical_summary_sales');?>"><?php echo $this->lang->line('reports_sales'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_categories');?>"><?php echo $this->lang->line('reports_categories'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_customers');?>"><?php echo $this->lang->line('reports_customers'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_suppliers');?>"><?php echo $this->lang->line('reports_suppliers'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_items');?>"><?php echo $this->lang->line('reports_items'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_employees');?>"><?php echo $this->lang->line('reports_employees'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_taxes');?>"><?php echo $this->lang->line('reports_taxes'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_discounts');?>"><?php echo $this->lang->line('reports_discounts'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/graphical_summary_payments');?>"><?php echo $this->lang->line('reports_payments'); ?></a></li>
+			<?php
+			foreach($grants as $grant) 
+			{
+				if (!preg_match('/reports_(inventory|receivings)/', $grant['permission_id']))
+				{
+					show_report('graphical_summary',$grant['permission_id']);
+				}
+			}
+			?>
 		</ul>
 	</li>
 	
 	<li><h3><?php echo $this->lang->line('reports_summary_reports'); ?></h3>
 		<ul>
-			<li><a href="<?php echo site_url('reports/summary_sales');?>"><?php echo $this->lang->line('reports_sales'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_categories');?>"><?php echo $this->lang->line('reports_categories'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_customers');?>"><?php echo $this->lang->line('reports_customers'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_suppliers');?>"><?php echo $this->lang->line('reports_suppliers'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_items');?>"><?php echo $this->lang->line('reports_items'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_employees');?>"><?php echo $this->lang->line('reports_employees'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_taxes');?>"><?php echo $this->lang->line('reports_taxes'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_discounts');?>"><?php echo $this->lang->line('reports_discounts'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/summary_payments');?>"><?php echo $this->lang->line('reports_payments'); ?></a></li>
+			<?php 
+			foreach($grants as $grant) 
+			{
+				if (!preg_match('/reports_(inventory|receivings)/', $grant['permission_id']))
+				{
+					show_report('summary',$grant['permission_id']);
+				}
+			}
+			?>
 		</ul>
 	</li>
 	
 	<li><h3><?php echo $this->lang->line('reports_detailed_reports'); ?></h3>
 		<ul>
-			<li><a href="<?php echo site_url('reports/detailed_sales');?>"><?php echo $this->lang->line('reports_sales'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/detailed_receivings');?>"><?php echo $this->lang->line('reports_receivings'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/specific_customer');?>"><?php echo $this->lang->line('reports_customer'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/specific_discount');?>"><?php echo $this->lang->line('reports_discount'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/specific_employee');?>"><?php echo $this->lang->line('reports_employee'); ?></a></li>
+		<?php 			
+			$person_id = $this->session->userdata('person_id');
+			show_report_if_allowed('detailed', 'sales', $person_id);
+			show_report_if_allowed('detailed', 'receivings', $person_id);
+			show_report_if_allowed('specific', 'customer', $person_id, 'reports_customers');
+			show_report_if_allowed('specific', 'discount', $person_id, 'reports_discounts');
+			show_report_if_allowed('specific', 'employee', $person_id, 'reports_employees');
+		?>
 		</ul>
-	
 	</li>
-	
+	<?php 
+	if ($this->Employee->has_grant('reports_inventory', $this->session->userdata('person_id')))
+	{
+	?>
 	<li><h3><?php echo $this->lang->line('reports_inventory_reports'); ?></h3>
 		<ul>
-			<li><a href="<?php echo site_url('reports/inventory_low');?>"><?php echo $this->lang->line('reports_low_inventory'); ?></a></li>
-			<li><a href="<?php echo site_url('reports/inventory_summary');?>"><?php echo $this->lang->line('reports_inventory_summary'); ?></a></li>
+		<?php 
+			show_report('', 'reports_inventory_low');	
+			show_report('', 'reports_inventory_summary');
+		?>
 		</ul>
 	</li>
+	<?php 
+	}
+	?>
 </ul>
 <?php
 if(isset($error))
@@ -56,9 +65,3 @@
 }
 ?>
 <?php $this->load->view("partial/footer"); ?>
-
-<script type="text/javascript" language="javascript">
-$(document).ready(function()
-{
-});
-</script>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/reports/tabular_details.php opensourcepos/application/views/reports/tabular_details.php
--- pos-prod/application/views/reports/tabular_details.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/reports/tabular_details.php	2016-05-23 15:32:31.916839230 -0700
@@ -15,7 +15,7 @@
 			<tr>
 				<th><a href="#" class="expand_all">+</a></th>
 				<?php foreach ($headers['summary'] as $header) { ?>
-				<th><?php echo $header; ?></th>
+				<th width="<?=$header_width?>%"><?php echo $header; ?></th>
 				<?php } ?>
 			</tr>
 		</thead>
@@ -94,14 +92,14 @@
 	}
 	else
 	{
-		var sale_id = response.id
-		$.get('<?php echo site_url("reports/get_detailed_sales_row")?>/'+sale_id, function(response)
+		var row_id = response.id
+		$.get('<?php echo site_url("reports/get_detailed_" . $editable . "_row")?>/'+row_id, function(response)
 		{
 			//Replace previous row
-			var row = get_table_row(sale_id).parent().parent();
+			var row = get_table_row(row_id).parent().parent();
 			var sign = row.find("a.expand").text();
 			row.replaceWith(response);	
-			row = get_table_row(sale_id).parent().parent();
+			row = get_table_row(row_id).parent().parent();
 			update_sortable_table();
 			animate_row(row);
 			row.find("a.expand").click(expand_handler).text(sign);
Only in pos-prod/application/views/sales: delete.php
Only in pos-prod/application/views/sales: edit.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/sales/form.php opensourcepos/application/views/sales/form.php
--- pos-prod/application/views/sales/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/sales/form.php	2016-05-23 15:32:31.916839230 -0700
@@ -1,22 +1,35 @@
 <div id="edit_sale_wrapper">
 	<div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-	<ul id="error_message_box"></ul>
+	<ul id="error_message_box" class="error_message_box"></ul>
 	
 	<fieldset id="sale_basic_info">
 	<?php echo form_open("sales/save/".$sale_info['sale_id'],array('id'=>'sales_edit_form')); ?>
 	<legend><?php echo $this->lang->line("sales_basic_information"); ?></legend>
 	
 	<div class="field_row clearfix">
-	<?php echo form_label($this->lang->line('sales_receipt').':', 'customer'); ?>
+			<?php echo form_label($this->lang->line('sales_receipt_number').':', 'customer'); ?>
 		<div class='form_field'>
 			<?php echo anchor('sales/receipt/'.$sale_info['sale_id'], $this->lang->line('sales_receipt_number') .$sale_info['sale_id'], array('target' => '_blank'));?>
 		</div>
 	</div>
 	
 	<div class="field_row clearfix">
-	<?php echo form_label($this->lang->line('sales_date').':', 'date', array('class'=>'required')); ?>
+			<?php echo form_label($this->lang->line('sales_date').':', 'date'); ?>
 		<div class='form_field'>
-			<?php echo form_input(array('name'=>'date','value'=>date('m/d/Y', strtotime($sale_info['sale_time'])), 'id'=>'date'));?>
+				<?php echo form_input(array('name'=>'date','value'=>date($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), strtotime($sale_info['sale_time'])), 'id'=>'datetime', 'readonly'=>'true'));?>
+			</div>
+		</div>
+		
+		<div class="field_row clearfix">
+			<?php echo form_label($this->lang->line('sales_invoice_number').':', 'invoice_number'); ?>
+			<div class='form_field'>
+				<?php if (isset($sale_info["invoice_number"]) && !empty($sale_info["invoice_number"]) && 
+					isset($sale_info['customer_id']) && isset($sale_info['email']) && !empty($sale_info['email'])): ?>
+					<?php echo form_input(array('name'=>'invoice_number', 'size'=>10, 'value'=>$sale_info['invoice_number'], 'id'=>'invoice_number'));?>
+					<a id="send_invoice" href="javascript:void(0);"><?=$this->lang->line('sales_send_invoice')?></a>
+				<?php else: ?>
+					<?php echo form_input(array('name'=>'invoice_number', 'value'=>$sale_info['invoice_number'], 'id'=>'invoice_number'));?>
+				<?php endif; ?>
 		</div>
 	</div>
 	
@@ -41,8 +54,7 @@
 		</div>
 	</div>
 	
-	<?php
-	echo form_submit(array(
+		<?php echo form_submit(array(
 		'name'=>'submit',
 		'value'=>$this->lang->line('common_submit'),
 		'class'=> 'submit_button float_right')
@@ -52,8 +64,7 @@
 	
 	<?php echo form_open("sales/delete/".$sale_info['sale_id'],array('id'=>'sales_delete_form')); ?>
 		<?php echo form_hidden('sale_id', $sale_info['sale_id']);?>
-		<?php
-		echo form_submit(array(
+			<?php echo form_submit(array(
 			'name'=>'submit',
 			'value'=>$this->lang->line('sales_delete_entire_sale'),
 			'class'=>'delete_button float_right')
@@ -64,19 +75,28 @@
 </div>
 
 <script type="text/javascript" language="javascript">
-
 $(document).ready(function()
 {	
-	$('#date').datePicker({startDate: '01/01/1970'});
-	$("#sales_delete_form").submit(function()
-	{
-		if (!confirm('<?php echo $this->lang->line("sales_delete_confirmation"); ?>'))
-		{
-			return false;
+	<?php if (isset($sale_info['email'])): ?>
+		$("#send_invoice").click(function(event) {
+			if (confirm("<?php echo $this->lang->line('sales_invoice_confirm') . ' ' . $sale_info['email'] ?>")) {
+				$.get('<?=site_url() . "/sales/send_invoice/" . $sale_info['sale_id']?>',
+						function(response) {
+							tb_remove();
+							post_form_submit(response);
+						}, "json"
+				);	
 		}
 	});
+	<?php endif; ?>
+	
+	$('#datetime').datetimepicker({
+		dateFormat: '<?php echo dateformat_jquery($this->config->item("dateformat"));?>',
+		timeFormat: '<?php echo dateformat_jquery($this->config->item("timeformat"));?>'
+	});
 	
-	var format_item = function(row) {
+	var format_item = function(row)
+	{
     	var result = [row[0], "|", row[1]].join("");
     	// if more than one occurence
     	if (row[2] > 1 && row[3] && row[3].toString().trim()) {
@@ -85,7 +105,9 @@
     	}
 		return result;
 	};
-	var autocompleter = $("#customer_id").autocomplete('<?php echo site_url("sales/customer_search"); ?>', {
+
+	var autocompleter = $("#customer_id").autocomplete('<?php echo site_url("sales/customer_search"); ?>', 
+	{
     	minChars:0,
     	delay:15, 
     	max:100,
@@ -95,21 +117,26 @@
     });
 
 	// declare submitHandler as an object.. will be reused
-	var submit_form = function(selected_customer) { 
-		$(this).ajaxSubmit({
+	var submit_form = function(selected_customer) 
+	{ 
+		$(this).ajaxSubmit(
+		{
 			success:function(response)
 			{
 				tb_remove();
 				post_form_submit(response);
 			},
-			error: function(jqXHR, textStatus, errorThrown) {
+			error: function(jqXHR, textStatus, errorThrown) 
+			{
 				selected_customer && autocompleter.val(selected_customer);
 				post_form_submit({message: errorThrown});
 			},
 			dataType:'json'
 		});
 	};
-	$('#sales_edit_form').validate({
+
+	$('#sales_edit_form').validate(
+	{
 		submitHandler : function(form)
 		{
 			var selected_customer = autocompleter.val();
@@ -121,20 +148,33 @@
 		wrapper: "li",
 		rules: 
 		{
-			date: {
-				required:true,
-				date:true
+			invoice_number:
+			{
+				remote:
+				{
+					url: "<?php echo site_url($controller_name . '/check_invoice_number')?>",
+					type: "POST",
+					data:
+					{
+						"sale_id" : <?php echo $sale_info['sale_id']; ?>,
+						"invoice_number" : function()
+						{
+							return $("#invoice_number").val();
+						}
+					}
+				}
 			}
 		},
 		messages: 
 		{
-			date: {
-				required: "<?= $this->lang->line('sales_date_required'); ?>",
-				date: "<?= $this->lang->line('sales_date_type'); ?>"
-			}
+			invoice_number: '<?php echo $this->lang->line("sales_invoice_number_duplicate"); ?>'
 		}
 	});
-	$('#sales_delete_form').submit(function() {
+
+	$('#sales_delete_form').submit(function() 
+	{
+		if (confirm('<?php echo $this->lang->line("sales_delete_confirmation"); ?>'))
+		{
 		var id = $("input[name='sale_id']").val();
 		$(this).ajaxSubmit({
 			success:function(response)
@@ -156,6 +196,7 @@
 			},
 			dataType:'json'
 		});
+		}
 		return false;
 	});
 });
Only in opensourcepos/application/views/sales: invoice.php
Only in opensourcepos/application/views/sales: invoice_email.php
Only in opensourcepos/application/views/sales: manage.php
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/sales/receipt.php opensourcepos/application/views/sales/receipt.php
--- pos-prod/application/views/sales/receipt.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/sales/receipt.php	2016-05-23 15:32:31.916839230 -0700
@@ -2,20 +3,46 @@
 <?php
 if (isset($error_message))
 {
-	echo '<h1 style="text-align: center;">'.$error_message.'</h1>';
+	echo "<div class='alert alert-dismissible alert-danger'>".$error_message."</div>";
 	exit;
 }
 ?>
+
+<?php $this->load->view('partial/print_receipt', array('print_after_sale'=>$print_after_sale, 'selected_printer'=>'receipt_printer')); ?>
+
+<div class="print_hide" id="control_buttons" style="height: 60px; margin-right: -150px; margin-top: 10px;">
+	<a href="javascript:printdoc();" id="show_print_button"><div class='big_button float_right'><span><?php echo $this->lang->line('common_print'); ?></span></div></a>
+	<?php /* this line will allow to print and go back to sales automatically.... echo anchor("sales", $this->lang->line('common_print'), array('class'=>'big_button', 'id'=>'show_print_button', 'onclick'=>'window.print();')); */ ?>
+	<?php echo anchor("sales", "<div class='big_button float_right'><span>".$this->lang->line('sales_register')."</span></div>",
+		array('id'=>'show_sales_button'));  ?>
+	<?php echo anchor("sales/manage", "<div class='big_button float_right'><span>".$this->lang->line('sales_takings')."</span></div>",
+		array('id'=>'show_takings_button')); ?>
+</div>
+
 <div id="receipt_wrapper">
 	<div id="receipt_header">
+		<?php
+		if ($this->Appconfig->get('company_logo') == '') 
+        { 
+        ?>
 		<div id="company_name"><?php echo $this->config->item('company'); ?></div>
+		<?php 
+		}
+		else 
+		{ 
+		?>
+			<div id="company_name"><img id="image" src="<?php echo base_url('uploads/' . $this->Appconfig->get('company_logo')); ?>" alt="company_logo" /></div>			
+		<?php
+		}
+		?>
 		<div id="company_address"><?php echo nl2br($this->config->item('address')); ?></div>
 		<div id="company_phone"><?php echo $this->config->item('phone'); ?></div>
 		<div id="sale_receipt"><?php echo $receipt_title; ?></div>
 		<div id="sale_time"><?php echo $transaction_time ?></div>
 	</div>
 	<div id="receipt_general_info">
-		<?php if(isset($customer))
+		<?php
+		if(isset($customer))
 		{
 		?>
 			<div id="customer"><?php echo $this->lang->line('customers_customer').": ".$customer; ?></div>
@@ -22,81 +49,143 @@
 		<?php
 		}
 		?>
+		
 		<div id="sale_id"><?php echo $this->lang->line('sales_id').": ".$sale_id; ?></div>
+
+		<?php
+		if (!empty($invoice_number))
+		{
+		?>
+			<div id="invoice_number"><?php echo $this->lang->line('recvs_invoice_number').": ".$invoice_number; ?></div>	
+		<?php 
+		}
+		?>
+
 		<div id="employee"><?php echo $this->lang->line('employees_employee').": ".$employee; ?></div>
 	</div>
 
 	<table id="receipt_items">
 	<tr>
-	<th style="width:25%;"><?php echo $this->lang->line('sales_item_number'); ?></th>
-	<th style="width:25%;"><?php echo $this->lang->line('items_item'); ?></th>
-	<th style="width:17%;"><?php echo $this->lang->line('common_price'); ?></th>
-	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_quantity'); ?></th>
-	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_discount'); ?></th>
-	<th style="width:17%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
+			<th style="width:40%;"><?php echo $this->lang->line('sales_description_abbrv'); ?></th>
+			<th style="width:20%;"><?php echo $this->lang->line('sales_price'); ?></th>
+			<th style="width:20%;"><?php echo $this->lang->line('sales_quantity'); ?></th>
+			<th style="width:20%;" class="total-value"><?php echo $this->lang->line('sales_total'); ?></th>
 	</tr>
 	<?php
 	foreach(array_reverse($cart, true) as $line=>$item)
 	{
 	?>
 		<tr>
-		<td><?php echo $item['item_number']; ?></td>
-		<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],70); ?></span></td>
+				<td><span class='long_name'><?php echo ucfirst($item['name']); ?></span></td>
 		<td><?php echo to_currency($item['price']); ?></td>
-		<td style='text-align:center;'><?php 
-			echo $item['quantity'] . " " . ($show_stock_locations ? " [" . $item['stock_name'] . "]" : ""); 
-		?></td>
-		<td style='text-align:center;'><?php echo $item['discount']; ?></td>
-		<td style='text-align:right;'><?php echo to_currency($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100); ?></td>
+				<td><?php echo $item['quantity'] . " " . ($show_stock_locations ? " [" . $item['stock_name'] . "]" : ""); ?></td>
+				<td><div class="total-value"><?php echo to_currency($item[($this->Appconfig->get('show_total_discount') ? 'total' : 'discounted_total')]); ?></div></td>
 		</tr>
-
 	    <tr>
-	    <td colspan="2" align="center"><?php echo $item['description']; ?></td>
-		<td colspan="2" ><?php echo $item['serialnumber']; ?></td>
-		<td colspan="2"><?php echo '&nbsp;'; ?></td>
+				<td colspan="2"><?php echo $item['description']; ?></td>
+				<td><?php echo $item['serialnumber']; ?></td>
+			</tr>
+			<?php
+			if ($item['discount'] > 0)
+			{
+			?>
+				<tr>
+					<td colspan="3" class="discount"><?php echo number_format($item['discount'], 0) . " " . $this->lang->line("sales_discount_included")?></td>
+					<td class="total-value"><?php echo to_currency($item['discounted_total']) ; ?></td>
 	    </tr>
+			<?php
+			}
+			?>
+		<?php
+		}
+		?>
 
 	<?php
+		if ($this->Appconfig->get('show_total_discount') && $discount > 0)
+		{
+		?> 
+			<tr>
+				<td colspan="3" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_sub_total'); ?></td>
+				<td style='text-align:right;border-top:2px solid #000000;'><?php echo to_currency($subtotal); ?></td>
+			</tr>
+			<tr>
+				<td colspan="3" class="total-value"><?php echo $this->lang->line('sales_discount'); ?>:</td>
+				<td class="total-value"><?php echo to_currency($discount*-1); ?></td>
+			</tr>
+		<?php
 	}
 	?>
+
+		<?php
+		if ($this->Appconfig->get('receipt_show_taxes'))
+		{
+		?> 
+			<tr>
+				<td colspan="3" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_sub_total'); ?></td>
+				<td style='text-align:right;border-top:2px solid #000000;'><?php echo to_currency($this->config->item('tax_included') ? $tax_exclusive_subtotal : $discounted_subtotal); ?></td>
+			</tr>
+			<?php
+			foreach($taxes as $name=>$value)
+			{
+			?>
 	<tr>
-	<td colspan="4" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_sub_total'); ?></td>
-	<td colspan="2" style='text-align:right;border-top:2px solid #000000;'><?php echo to_currency($subtotal); ?></td>
+					<td colspan="3" class="total-value"><?php echo $name; ?>:</td>
+					<td class="total-value"><?php echo to_currency($value); ?></td>
 	</tr>
+			<?php
+			}
+			?>
+		<?php
+		}
+		?>
 
-	<?php foreach($taxes as $name=>$value) { ?>
 		<tr>
-			<td colspan="4" style='text-align:right;'><?php echo $name; ?>:</td>
-			<td colspan="2" style='text-align:right;'><?php echo to_currency($value); ?></td>
 		</tr>
-	<?php }; ?>
 
+		<?php $border = (!$this->Appconfig->get('receipt_show_taxes') && !($this->Appconfig->get('show_total_discount') && $discount > 0)); ?> 
 	<tr>
-	<td colspan="4" style='text-align:right;'><?php echo $this->lang->line('sales_total'); ?></td>
-	<td colspan="2" style='text-align:right'><?php echo to_currency($total); ?></td>
+			<td colspan="3" style='<?php echo $border? 'border-top: 2px solid black;' :''; ?>text-align:right;'><?php echo $this->lang->line('sales_total'); ?></td>
+			<td style='<?php echo $border? 'border-top: 2px solid black;' :''; ?>text-align:right'><?php echo to_currency($total); ?></td>
 	</tr>
 
-    <tr><td colspan="6">&nbsp;</td></tr>
+		<tr>
+			<td colspan="4">&nbsp;</td>
+		</tr>
 
 	<?php
+		$only_sale_check = TRUE;
+		$show_giftcard_remainder = FALSE;
 		foreach($payments as $payment_id=>$payment)
-	{ ?>
+		{ 
+			$only_sale_check &= $payment['payment_type'] == $this->lang->line('sales_check');
+			$splitpayment=explode(':',$payment['payment_type']);
+			$show_giftcard_remainder |= $splitpayment[0] == $this->lang->line('sales_giftcard');
+		?>
 		<tr>
-		<td colspan="2" style="text-align:right;"><?php echo $this->lang->line('sales_payment'); ?></td>
-		<td colspan="2" style="text-align:right;"><?php $splitpayment=explode(':',$payment['payment_type']); echo $splitpayment[0]; ?> </td>
-		<td colspan="2" style="text-align:right"><?php echo to_currency( $payment['payment_amount'] * -1 ); ?>  </td>
+				<td colspan="3" style="text-align:right;"><?php echo $splitpayment[0]; ?> </td>
+				<td><div class="total-value"><?php echo to_currency( $payment['payment_amount'] * -1 ); ?></div></td>
 	    </tr>
 	<?php
 	}
 	?>
 
-    <tr><td colspan="6">&nbsp;</td></tr>
+		<tr><td colspan="4">&nbsp;</td></tr>
 
+		<?php 
+		if (isset($cur_giftcard_value) && $show_giftcard_remainder)
+		{
+		?>
 	<tr>
-		<td colspan="4" style='text-align:right;'><?php echo $this->lang->line('sales_change_due'); ?></td>
-		<td colspan="2" style='text-align:right'><?php echo  $amount_change; ?></td>
+			<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_giftcard_balance'); ?></td>
+			<td style='text-align:right'><?php echo to_currency($cur_giftcard_value); ?></td>
+		</tr>
+		<?php 
+		}
+		?>
+		<tr>
+			<td colspan="3" style='text-align:right;'> <?php echo $this->lang->line($amount_change >= 0 ? ($only_sale_check ? 'sales_check_balance' : 'sales_change_due') : 'sales_amount_due') ; ?> </td>
+			<td style='text-align:right'><?php echo to_currency($amount_change); ?></td>
 	</tr>
-
 	</table>
 
 	<div id="sale_return_policy">
@@ -102,21 +191,12 @@
 	<div id="sale_return_policy">
 	<?php echo nl2br($this->config->item('return_policy')); ?>
 	</div>
+
 	<div id='barcode'>
-	<?php echo "<img src='index.php/barcode?barcode=$sale_id&text=$sale_id&width=250&height=50' />"; ?>
+		<img src='data:image/png;base64,<?php echo $barcode; ?>' /><br>
+		<?php echo $sale_id; ?>
 	</div>
 </div>
+
 <?php $this->load->view("partial/footer"); ?>
 
-<?php if ($this->Appconfig->get('print_after_sale'))
-{
-?>
-<script type="text/javascript">
-$(window).load(function()
-{
-	window.print();
-});
-</script>
-<?php
-}
-?>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/sales/receipt_email.php opensourcepos/application/views/sales/receipt_email.php
--- pos-prod/application/views/sales/receipt_email.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/sales/receipt_email.php	2016-05-23 15:32:31.916839230 -0700
@@ -20,9 +21,9 @@
 
 	<table id="receipt_items">
 	<tr>
-	<th style="width:25%;text-align:left;"><?php echo $this->lang->line('sales_item_number'); ?></th>
-	<th style="width:25%;text-align:left;"><?php echo $this->lang->line('items_item'); ?></th>
-	<th style="width:17%;text-align:left;"><?php echo $this->lang->line('common_price'); ?></th>
+			<th style="width:25%;"><?php echo $this->lang->line('sales_item_number'); ?></th>
+			<th style="width:25%;"><?php echo $this->lang->line('items_item'); ?></th>
+			<th style="width:17%;"><?php echo $this->lang->line('common_price'); ?></th>
 	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_quantity'); ?></th>
 	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_discount'); ?></th>
 	<th style="width:17%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
@@ -33,7 +34,7 @@
 	?>
 		<tr>
 		<td><?php echo $item['item_number']; ?></td>
-		<td><?php echo $item['name']; ?></td>
+				<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],10); ?></span></td>
 		<td><?php echo to_currency($item['price']); ?></td>
 		<td style='text-align:center;'><?php echo $item['quantity']; ?></td>
 		<td style='text-align:center;'><?php echo $item['discount']; ?></td>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/sales/register.php opensourcepos/application/views/sales/register.php
--- pos-prod/application/views/sales/register.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/views/sales/register.php	2016-05-23 15:32:31.916839230 -0700
@@ -6,7 +9,7 @@
 	echo "<div class='error_message'>".$error."</div>";
 }
 
-if (isset($warning))
+if (!empty($warning))
 {
 	echo "<div class='warning_mesage'>".$warning."</div>";
 }
@@ -20,10 +24,27 @@
 <?php echo form_open("sales/change_mode",array('id'=>'mode_form')); ?>
 	<span><?php echo $this->lang->line('sales_mode') ?></span>
 <?php echo form_dropdown('mode',$modes,$mode,'onchange="$(\'#mode_form\').submit();"'); ?>
-<?php if ($show_stock_locations): ?>
+	<?php
+	if (count($stock_locations) > 1)
+	{
+	?>
 <span><?php echo $this->lang->line('sales_stock_location') ?></span>
 <?php echo form_dropdown('stock_location',$stock_locations,$stock_location,'onchange="$(\'#mode_form\').submit();"'); ?>
-<?php endif; ?>
+	<?php
+	}
+	?>
+
+	<?php
+	if ($this->Employee->has_grant('reports_sales', $this->session->userdata('person_id')))
+	{
+	?>
+	<div id="sales_overview" class="small_button">
+		<a href="<?=site_url($controller_name . '/manage')?>"><span><?php echo $this->lang->line('sales_takings'); ?><span></a>
+	</div>
+	<?php
+	}
+	?>
+
 <div id="show_suspended_sales_button">
 	<?php echo anchor("sales/suspended/width:425",
 	"<div class='small_button'><span style='font-size:73%;'>".$this->lang->line('sales_suspended_sales')."</span></div>",
@@ -30,32 +51,24 @@
 	array('class'=>'thickbox none','title'=>$this->lang->line('sales_suspended_sales')));
 	?>
 </div>
+
 	</form>
+
 <?php echo form_open("sales/add",array('id'=>'add_item_form')); ?>
 <label id="item_label" for="item">
-
-<?php
-if($mode=='sale_retail' or $mode=='sale_wholesale')
-{
-	echo $this->lang->line('sales_find_or_scan_item');
-}
-else
-{
-	echo $this->lang->line('sales_find_or_scan_item_or_receipt');
-}
-?>
+		<?php echo $this->lang->line('sales_find_or_scan_item_or_receipt'); ?>
 </label>
 
-<?php echo form_input(array('name'=>'item','id'=>'item','size'=>'40'));?>
-<!-- no need the new item button in sale page
+	<?php echo form_input(array('name'=>'item','id'=>'item','size'=>'40','tabindex'=>'1')); ?>
 <div id="new_item_button_register" >
-		<?php echo anchor("items/view/-1/width:360",
+		<?php echo anchor("items/view/-1/width:450",
 		"<div class='small_button'><span>".$this->lang->line('sales_new_item')."</span></div>",
 		array('class'=>'thickbox none','title'=>$this->lang->line('sales_new_item')));
 		?>
 	</div>
--->
+
 	</form>
+
 	<table id="register">
 		<thead>
 			<tr>
@@ -84,9 +96,13 @@
 }
 else
 {
+				$tabindex = 2;				
 	foreach(array_reverse($cart, true) as $line=>$item)
 	{
-		$cur_item_info = $this->Item->get_info($item['item_id']);
+					if($tabindex == 3) 
+					{
+						$tabindex = 5;
+					}					
 		echo form_open("sales/edit_item/$line");
 	?>
 		<tr>
@@ -107,7 +121,7 @@
 		else
 		{
 		?>
-			<td><?php echo $item['price']; ?></td>
+							<td><?php echo to_currency($item['price']); ?></td>
 			<?php echo form_hidden('price',$item['price']); ?>
 		<?php
 		}
@@ -122,7 +136,7 @@
         	}
         	else
         	{
-        		echo form_input(array('name'=>'quantity','value'=>$item['quantity'],'size'=>'2'));
+				        		echo form_input(array('name'=>'quantity','value'=>$item['quantity'],'size'=>'2','tabindex'=>$tabindex));
         	}
 		?>
 		</td>
@@ -132,9 +146,16 @@
 				<td><?php echo form_submit("edit_item", $this->lang->line('sales_edit_item'));?></td>
 			</tr>
 			<tr>
-				<td style="color: #2F4F4F";><?php echo $this->lang->line('sales_description_abbrv').':';?></td>
-				<td colspan=2 style="text-align: left;">
+						<?php 
+						if($item['allow_alt_description']==1)
+						{
+						?>
+							<td style="color: #2F4F4F;"><?php echo $this->lang->line('sales_description_abbrv').':';?></td>
+						<?php 
+						}
+						?>
 
+						<td colspan=2 style="text-align: left;">
 		<?php
         	if($item['allow_alt_description']==1)
         	{
@@ -156,7 +177,7 @@
 		?>
 		</td>
 				<td>&nbsp;</td>
-				<td style="color: #2F4F4F";>
+						<td style="color: #2F4F4F;">
 		<?php
         	if($item['is_serialized']==1)
         	{
@@ -164,7 +185,7 @@
 			}
 		?>
 		</td>
-				<td colspan=3 style="text-align: left;">
+						<td colspan="4" style="text-align: left;">
 		<?php
         	if($item['is_serialized']==1)
         	{
@@ -182,8 +201,10 @@
 			<tr style="height: 3px">
 				<td colspan=8 style="background-color: white"></td>
 			</tr>
+
 			</form>
 	<?php
+					$tabindex = $tabindex + 1;					
 	}
 }
 ?>
@@ -201,13 +221,16 @@
 	}
 	else
 	{
-		echo form_open("sales/select_customer",array('id'=>'select_customer_form')); ?>
+		echo form_open("sales/select_customer",array('id'=>'select_customer_form'));
+	?>
 		<label id="customer_label" for="customer"><?php echo $this->lang->line('sales_select_customer'); ?></label>
 		<?php echo form_input(array('name'=>'customer','id'=>'customer','size'=>'30','value'=>$this->lang->line('sales_start_typing_customer_name')));?>
+
 		</form>
+
 	<div style="margin-top: 5px; text-align: center;">
 		<h3 style="margin: 5px 0 5px 0"><?php echo $this->lang->line('common_or'); ?></h3>
-		<?php echo anchor("customers/view/-1/width:350",
+			<?php echo anchor("customers/view/-1/width:400",
 		"<div class='small_button' style='margin:0 auto;'><span>".$this->lang->line('sales_new_customer')."</span></div>",
 		array('class'=>'thickbox none','title'=>$this->lang->line('sales_new_customer')));
 		?>
@@ -219,7 +243,7 @@
 
 	<div id='sale_details'>
 		<div class="float_left" style="width: 55%;"><?php echo $this->lang->line('sales_sub_total'); ?>:</div>
-		<div class="float_left" style="width: 45%; font-weight: bold;"><?php echo to_currency($subtotal); ?></div>
+		<div class="float_left" style="width: 45%; font-weight: bold;"><?php echo to_currency($this->config->item('tax_included') ? $tax_exclusive_subtotal : $subtotal); ?></div>
 
 		<?php foreach($taxes as $name=>$value) { ?>
 		<div class="float_left" style='width: 55%;'><?php echo $name; ?>:</div>
@@ -238,16 +259,22 @@
 	if(count($cart) > 0)
 	{
 	?>
+		<?php echo form_open("sales/cancel_sale", array('id'=>'cancel_sale_form')); ?>
 
     	<div id="Cancel_sale">
-		<?php echo form_open("sales/cancel_sale",array('id'=>'cancel_sale_form')); ?>
-		<div class='small_button' id='cancel_sale_button'
-			style='margin-top: 5px;'>
+			<div class='small_button' id='cancel_sale_button' style='float:left; margin-top: 5px;'>
 			<span><?php echo $this->lang->line('sales_cancel_sale'); ?></span>
 		</div>
-		</form>
+			
+			<div class='small_button' id='suspend_sale_button' style='float:right; margin-top: 5px;'>
+				<span><?php echo $this->lang->line('sales_suspend_sale'); ?></span>
+			</div>
 	</div>
+	
+		</form>
+
 	<div class="clearfix" style="margin-bottom: 1px;">&nbsp;</div>
+
 		<?php
 		// Only show this part if there is at least one payment entered.
 		if(count($payments) > 0)
@@ -253,8 +280,9 @@
 		if(count($payments) > 0)
 		{
 		?>
-			<div id="finish_sale">
 				<?php echo form_open("sales/complete",array('id'=>'finish_sale_form')); ?>
+
+			<div id="finish_sale">
 				<label id="comment_label" for="comment"><?php echo $this->lang->line('common_comments'); ?>:</label>
 				<?php echo form_textarea(array('name'=>'comment', 'id' => 'comment', 'value'=>$comment,'rows'=>'4','cols'=>'23'));?>
 				<br />
@@ -259,12 +287,11 @@
 				<?php echo form_textarea(array('name'=>'comment', 'id' => 'comment', 'value'=>$comment,'rows'=>'4','cols'=>'23'));?>
 				<br />
 		<br />
-				
 				<?php
-				
 				if(!empty($customer_email))
 				{
-					echo $this->lang->line('sales_email_receipt'). ': '. form_checkbox(array(
+					echo $this->lang->line('sales_email_receipt'). ': '
+						. form_checkbox(array(
 					    'name'        => 'email_receipt',
 					    'id'          => 'email_receipt',
 					    'value'       => '1',
@@ -274,11 +301,11 @@
 				 
 				if ($payments_cover_total)
 				{
-					echo "<div class='small_button' id='finish_sale_button' style='float:left;margin-top:5px;'><span>".$this->lang->line('sales_complete_sale')."</span></div>";
+					echo "<div class='small_button' id='finish_sale_button' style='float:left; margin-top:5px;' tabindex='3'><span>".$this->lang->line('sales_complete_sale')."</span></div>";
 				}
-				echo "<div class='small_button' id='suspend_sale_button' style='float:right;margin-top:5px;'><span>".$this->lang->line('sales_suspend_sale')."</span></div>";
 				?>
 			</div>
+
 	</form>
 		<?php
 		}
@@ -299,14 +324,60 @@
 		</tr>
 	</table>
 
-	<div id="Payment_Types">
-
-		<div style="height: 100px;">
-
+		<div id="payment_details">
+			<div>
 			<?php echo form_open("sales/add_payment",array('id'=>'add_payment_form')); ?>
 			<table width="100%">
 				<tr>
 					<td>
+							<?php echo $this->lang->line('sales_print_after_sale'); ?>
+						</td>
+						<td>
+							<?php
+							if ($print_after_sale)
+							{
+								echo form_checkbox(array('name'=>'sales_print_after_sale','id'=>'sales_print_after_sale','checked'=>'checked'));
+							}
+							else
+							{
+								echo form_checkbox(array('name'=>'sales_print_after_sale','id'=>'sales_print_after_sale'));
+							}
+							?>
+						</td>
+					</tr>
+					<?php
+					if ($mode == "sale") 
+					{
+					?>
+					<tr>
+						<td>
+							<?php echo $this->lang->line('sales_invoice_enable'); ?>
+						</td>
+						<td>
+							<?php if ($invoice_number_enabled)
+							{
+								echo form_checkbox(array('name'=>'sales_invoice_enable','id'=>'sales_invoice_enable','checked'=>'checked'));
+							}
+							else
+							{
+								echo form_checkbox(array('name'=>'sales_invoice_enable','id'=>'sales_invoice_enable'));
+							}
+							?>
+						</td>
+					</tr>
+					<tr>
+						<td>
+							<?php echo $this->lang->line('sales_invoice_number').':   ';?>
+						</td>
+						<td>
+							<?php echo form_input(array('name'=>'sales_invoice_number','id'=>'sales_invoice_number','value'=>$invoice_number,'size'=>10));?>
+						</td>
+					</tr>
+					<?php 
+					}
+					?>
+					<tr>
+						<td>
 				<?php echo $this->lang->line('sales_payment').':   ';?>
 			</td>
 					<td>
@@ -314,19 +385,21 @@
 			</td>
 				</tr>
 				<tr>
-					<td><span id="amount_tendered_label"><?php echo $this->lang->line( 'sales_amount_tendered' ).': '; ?></span>
+						<td>
+							<span id="amount_tendered_label"><?php echo $this->lang->line( 'sales_amount_tendered' ).': '; ?></span>
 					</td>
 					<td>
-				<?php echo form_input( array( 'name'=>'amount_tendered', 'id'=>'amount_tendered', 'value'=>to_currency_no_money($amount_due), 'size'=>'10' ) );	?>
+							<?php echo form_input( array( 'name'=>'amount_tendered', 'id'=>'amount_tendered', 'value'=>to_currency_no_money($amount_due), 'size'=>'10','tabindex'=>4 ) ); ?>
 			</td>
 				</tr>
 			</table>
-			<div class='small_button' id='add_payment_button'
-				style='float: left; margin-top: 5px;'>
+				
+				<div class='small_button' id='add_payment_button' style='float: left; margin-top: 5px;'>
 				<span><?php echo $this->lang->line('sales_add_payment'); ?></span>
 			</div>
-		</div>
+
 		</form>
+			</div>
 
 		<?php
 		// Only show this part if there is at least one payment entered.
@@ -376,10 +444,8 @@
 	}
 	?>
 </div>
-<div class="clearfix" style="margin-bottom: 30px;">&nbsp;</div>
 
-
-<?php $this->load->view("partial/footer"); ?>
+<div class="clearfix" style="margin-bottom: 30px;">&nbsp;</div>
 
 <script type="text/javascript" language="javascript">
 $(document).ready(function()
@@ -391,7 +457,7 @@
     	selectFirst: false,
        	delay:10,
     	formatItem: function(row) {
-			return row[1];
+			return (row.length > 1 && row[1]) || row[0];
 		}
     });
 
@@ -404,13 +470,19 @@
 
 	$('#item').blur(function()
     {
-    	$(this).attr('value',"<?php echo $this->lang->line('sales_start_typing_item_name'); ?>");
+        $(this).val("<?php echo $this->lang->line('sales_start_typing_item_name'); ?>");
     });
 
-	$('#item,#customer').click(function()
+    var clear_fields = function()
     {
-    	$(this).attr('value','');
-    });
+        if ($(this).val().match("<?php echo $this->lang->line('sales_start_typing_item_name') . '|' . 
+        	$this->lang->line('sales_start_typing_customer_name'); ?>"))
+        {
+            $(this).val('');
+        }
+    };
+
+    $('#item, #customer').click(clear_fields);
 
     $("#customer").autocomplete('<?php echo site_url("sales/customer_search"); ?>',
     {
@@ -429,14 +501,37 @@
 
     $('#customer').blur(function()
     {
-    	$(this).attr('value',"<?php echo $this->lang->line('sales_start_typing_customer_name'); ?>");
+    	$(this).val("<?php echo $this->lang->line('sales_start_typing_customer_name'); ?>");
     });
 	
-	$('#comment').change(function() 
+	$('#comment').keyup(function() 
 	{
 		$.post('<?php echo site_url("sales/set_comment");?>', {comment: $('#comment').val()});
 	});
 	
+	$('#sales_invoice_number').keyup(function() 
+	{
+		$.post('<?php echo site_url("sales/set_invoice_number");?>', {sales_invoice_number: $('#sales_invoice_number').val()});
+	});
+
+	var enable_invoice_number = function() 
+	{
+		var enabled = $("#sales_invoice_enable").is(":checked");
+		$("#sales_invoice_number").prop("disabled", !enabled).parents('tr').show();
+		return enabled;
+	}
+
+	enable_invoice_number();
+
+	$("#sales_print_after_sale").change(function() {
+		$.post('<?php echo site_url("sales/set_print_after_sale");?>', {sales_print_after_sale: $(this).is(":checked")});
+	});
+	
+	$("#sales_invoice_enable").change(function() {
+		var enabled = enable_invoice_number();
+		$.post('<?php echo site_url("sales/set_invoice_number_enabled");?>', {sales_invoice_number_enabled: enabled});
+	});
+	
 	$('#email_receipt').change(function() 
 	{
 		$.post('<?php echo site_url("sales/set_email_receipt");?>', {email_receipt: $('#email_receipt').is(':checked') ? '1' : '0'});
@@ -455,8 +550,8 @@
 	{
 		if (confirm('<?php echo $this->lang->line("sales_confirm_suspend_sale"); ?>'))
     	{
-			$('#finish_sale_form').attr('action', '<?php echo site_url("sales/suspend"); ?>');
-    		$('#finish_sale_form').submit();
+			$('#cancel_sale_form').attr('action', '<?php echo site_url("sales/suspend"); ?>');
+    		$('#cancel_sale_form').submit();
     	}
 	});
 
@@ -473,40 +568,64 @@
 	   $('#add_payment_form').submit();
     });
 
-	$("#payment_types").change(checkPaymentTypeGiftcard).ready(checkPaymentTypeGiftcard)
+	$("#payment_types").change(check_payment_type_gifcard).ready(check_payment_type_gifcard)
+	
+	$("#amount_tendered").keyup(function(event){
+		if(event.which == 13) {
+			$('#add_payment_form').submit();
+		}
+	});	
+	
+    $( "#finish_sale_button" ).keypress(function( event ) {
+		if ( event.which == 13 ) {
+			if (confirm('<?php echo $this->lang->line("sales_confirm_finish_sale"); ?>'))
+			{
+				$('#finish_sale_form').submit();
+			}
+		}
+	});	    
 });
 
-function post_item_form_submit(response)
+function post_item_form_submit(response, stay_open)
 {
 	if(response.success)
 	{
         var $stock_location = $("select[name='stock_location']").val();
         $("#item_location").val($stock_location);
+		$("#item").val(response.item_id);
+		if (stay_open)
+		{
+			$("#add_item_form").ajaxSubmit();
+		}
+		else
+		{
 		$("#add_item_form").submit();
 	}
 }
+}
 
 function post_person_form_submit(response)
 {
 	if(response.success)
 	{
-		$("#customer").attr("value",response.person_id);
+		$("#customer").val(response.person_id);
 		$("#select_customer_form").submit();
 	}
 }
 
-function checkPaymentTypeGiftcard()
+function check_payment_type_gifcard()
 {
 	if ($("#payment_types").val() == "<?php echo $this->lang->line('sales_giftcard'); ?>")
 	{
 		$("#amount_tendered_label").html("<?php echo $this->lang->line('sales_giftcard_number'); ?>");
-		$("#amount_tendered").val('');
-		$("#amount_tendered").focus();
+		$("#amount_tendered").val('').focus();
 	}
 	else
 	{
 		$("#amount_tendered_label").html("<?php echo $this->lang->line('sales_amount_tendered'); ?>");		
+		$("#amount_tendered").val('<?php echo $amount_due; ?>');
 	}
 }
 
 </script>
+<?php $this->load->view("partial/footer"); ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/sales/suspended.php opensourcepos/application/views/sales/suspended.php
--- pos-prod/application/views/sales/suspended.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/sales/suspended.php	2016-05-23 15:32:31.916839230 -0700
@@ -13,7 +13,7 @@
 	?>
 		<tr>
 			<td><?php echo $suspended_sale['sale_id'];?></td>
-			<td><?php echo date('m/d/Y',strtotime($suspended_sale['sale_time']));?></td>
+			<td><?php echo date($this->config->item('dateformat'),strtotime($suspended_sale['sale_time']));?></td>
 			<td>
 				<?php
 				if (isset($suspended_sale['customer_id']))
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/suppliers/form.php opensourcepos/application/views/suppliers/form.php
--- pos-prod/application/views/suppliers/form.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/application/views/suppliers/form.php	2016-05-23 15:32:31.916839230 -0700
@@ -2,7 +2,7 @@
 echo form_open('suppliers/save/'.$person_info->person_id,array('id'=>'supplier_form'));
 ?>
 <div id="required_fields_message"><?php echo $this->lang->line('common_fields_required_message'); ?></div>
-<ul id="error_message_box"></ul>
+<ul id="error_message_box" class="error_message_box"></ul>
 <fieldset id="supplier_basic_info">
 <legend><?php echo $this->lang->line("suppliers_basic_information"); ?></legend>
 
@@ -17,6 +17,17 @@
 	</div>
 </div>
 
+<div class="field_row clearfix">	
+<?php echo form_label($this->lang->line('suppliers_agency_name').':', 'agency_name'); ?>
+	<div class='form_field'>
+	<?php echo form_input(array(
+		'name'=>'agency_name',
+		'id'=>'agency_name_input',
+		'value'=>$person_info->agency_name)
+	);?>
+	</div>
+</div>
+
 <?php $this->load->view("people/form_basic_info"); ?>
 <div class="field_row clearfix">	
 <?php echo form_label($this->lang->line('suppliers_account_number').':', 'account_number'); ?>
diff -rBwi --ignore-file-name-case -u pos-prod/application/views/suppliers/manage.php opensourcepos/application/views/suppliers/manage.php
--- pos-prod/application/views/suppliers/manage.php	2014-12-24 09:26:09.000000000 -0800
+++ opensourcepos/application/views/suppliers/manage.php	2016-05-23 15:32:31.916839230 -0700
@@ -5,7 +5,7 @@
     init_table_sorting();
     enable_select_all();
     enable_row_selection();
-    enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>',false);
+    enable_search({suggest_url : '<?php echo site_url("$controller_name/suggest")?>', confirm_search_message : '<?php echo $this->lang->line("common_confirm_search")?>'});
     enable_email('<?php echo site_url("$controller_name/mailto")?>');
     enable_delete('<?php echo $this->lang->line($controller_name."_confirm_delete")?>','<?php echo $this->lang->line($controller_name."_none_selected")?>');
 }); 
@@ -21,9 +21,7 @@
 			headers: 
 			{ 
 				0: { sorter: false}, 
-				2: { sorter: false},
-				3: { sorter: false},
-				4: { sorter: false}
+				6: { sorter: false} 
 			} 
 
 		}); 
@@ -67,7 +65,7 @@
 		?>
 	</div>
 </div>
-<?php echo $this->pagination->create_links();?>
+<div id="pagination"><?= $links ?></div>
 <div id="table_action_header">
 	<ul>
 		<li class="float_left"><span><?php echo anchor("$controller_name/delete",$this->lang->line("common_delete"),array('id'=>'delete')); ?></span></li>
@@ -76,6 +74,7 @@
 		<img src='<?php echo base_url()?>images/spinner_small.gif' alt='spinner' id='spinner' />
 		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
 		<input type="text" name ='search' id='search'/>
+		<input type="hidden" name ='limit_from' id='limit_from'/>
 		</form>
 		</li>
 	</ul>
Only in opensourcepos: bower.json
Only in opensourcepos: COPYING
Only in opensourcepos/css: barcode_font.css
Only in pos-prod/css: editsale.css
diff -rBwi --ignore-file-name-case -u pos-prod/css/general.css opensourcepos/css/general.css
--- pos-prod/css/general.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/general.css	2016-05-23 15:32:31.916839230 -0700
@@ -96,7 +96,7 @@
 	width:100%;
 	top:35%;
 	color:#FFF;
-	font-size:0.8em;
+	font-size:0.9em;
 	font-weight:bold;
 	text-align:center;
 }
@@ -140,16 +140,6 @@
 	padding: 3px;
 }
 
-input#search
-{
-	padding: 0px;
-}
-
-#select_customer_form input, #select_supplier_form input
-{
-	width: 95%;
-}
-
 .clearfix:after 
 {
 	content: ".";
Only in opensourcepos/css: invoice.css
Only in opensourcepos/css: invoice_email.css
Only in opensourcepos/css: jquery-ui-timepicker-addon.css
Only in opensourcepos/css: jquery-ui.structure.css
Only in opensourcepos/css: jquery-ui.theme.css
diff -rBwi --ignore-file-name-case -u pos-prod/css/login.css opensourcepos/css/login.css
--- pos-prod/css/login.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/login.css	2016-05-23 15:32:31.917839214 -0700
@@ -1,84 +1,87 @@
-body
-{
-	text-align:center;
-}
-#container
-{
-	position:relative;
-	margin-left:auto;
-	margin-right:auto;
-	margin-top:20px;
-	width:360px;
+@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,400,700);
 
+*{margin:0;padding:0;}
+
+body{
+  background:#567;
+  font-family:'Open Sans',sans-serif;
 }
 
-#top
-{
-	position:relative;
-	width:100%;
-	height:20px;
-	padding:2px;
-	background-color:#005B7F;
+.button{
+  width:100px;
+  background:#3399cc;
+  display:block;
+  margin:0 auto;
+  margin-top:1%;
+  padding:10px;
 	text-align:center;
-	font-family:Verdana;
-	color:white;
-	font-size:12pt;
+  text-decoration:none;
+  color:#fff;
+  cursor:pointer;
+  transition:background .3s;
+  -webkit-transition:background .3s;
 }
 
-#login_form
-{
-	position:relative;
-	width:100%;
-	height:230px;
-	padding:2px;	
-	font-family:Verdana;
-	color:white;
-	font-size:10pt;
-	background-color:#A7A7A7;
+.button:hover{
+  background:#2288bb;
 }
 
-#welcome_message
-{
-	text-align:center;
-	margin-top:10px;
-	margin-bottom:20px;
+#login{
+  width:400px;
+  margin:0 auto;
+  margin-top:8px;
+  margin-bottom:2%;
+  transition:opacity 1s;
+  -webkit-transition:opacity 1s;
 }
 
-.error
-{
+#triangle{
+  width:0;
+  border-top:12x solid transparent;
+  border-right:12px solid transparent;
+  border-bottom:12px solid #3399cc;
+  border-left:12px solid transparent;
 	margin:0 auto;
-	border:3px solid #d3153b;
-	background-color:#fbe6f2;
-	padding:5px;
-	width:80%;
-	text-align:center;
-	font-size:18px;
-	margin-bottom:20px;
-	
 }
 
-.form_field_label
-{
-	float:left;
-	margin-left:20px;
-	width:30%;
+#login h1{
+  background:#3399cc;
+  padding:20px 0;
+  font-size:140%;
+  font-weight:300;
+  text-align:center;
+  color:#fff;
 }
 
-.form_field
-{
-	float:left;
-	width:30%;
+form{
+  background:#f0f0f0;
+  padding:6% 4%;
 }
 
-#submit_button
-{
-	position:absolute;
-	bottom:60px;
-	right:60px;
+input[type="text"],input[type="password"]{
+  width:92%;
+  background:#fff;
+  margin-bottom:4%;
+  border:1px solid #ccc;
+  padding:4%;
+  font-family:'Open Sans',sans-serif;
+  font-size:95%;
+  color:#555;
 }
 
-input
-{
-	font-family:Arial;
+input[type="submit"]{
+  width:100%;
+  background:#3399cc;
+  border:0;
+  padding:4%;
+  font-family:'Open Sans',sans-serif;
+  font-size:100%;
+  color:#fff;
+  cursor:pointer;
+  transition:background .3s;
+  -webkit-transition:background .3s;
 }
 
+input[type="submit"]:hover{
+  background:#2288bb;
+}
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/css/menubar.css opensourcepos/css/menubar.css
--- pos-prod/css/menubar.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/menubar.css	2016-05-23 15:32:31.917839214 -0700
@@ -16,7 +16,7 @@
 {
 	position:relative;
 	margin:0 auto;
-	width:875px;
+	width:960px;
 	text-align:left;
 }
 
@@ -43,7 +43,7 @@
 
 .menu_item
 {
-	font-size:8pt;
+	font-size:11px;
 }
 
 #menubar_company_info
@@ -57,7 +57,7 @@
 
 #company_title
 {
-	font-size:14pt;
+	font-size:14px;
 	font-weight:bold;
 }
 
@@ -77,7 +77,7 @@
 	left:0px;
 	height:17%;
 	padding-top:3px;
-	font-size:8pt;
+	font-size:10px;
 	font-weight:bold;
 }
 
@@ -88,6 +88,6 @@
 	right:0px;
 	height:17%;
 	padding-top:3px;
-	font-size:8pt;
+	font-size:10px;
 	font-weight:bold;
 }
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/css/ospos.css opensourcepos/css/ospos.css
--- pos-prod/css/ospos.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/ospos.css	2016-05-23 15:32:31.917839214 -0700
@@ -8,13 +8,17 @@
 @import url(tables.css);
 @import url(thickbox.css);
 @import url(datepicker.css);
+@import url(invoice.css);
+@import url(jquery-ui.structure.css);
+@import url(jquery-ui.theme.css);
+@import url(jquery-ui-timepicker-addon.css);
 
 body
 {
 	margin:0px;
 	padding:0px;
 	background-color:#f7f7f7;
-	font-family: "Lucida Grande", "Trebuchet MS", Tahoma, Verdana, sans-serif;
+	font-family: Arial, sans-serif, "Lucida Grande", "Trebuchet MS", Tahoma, Verdana;
 	font-size: 0.9em;
 }
 
@@ -30,7 +34,7 @@
 	width:100%;
 	background-color:#FFFFFF;	
 	margin:0px;
-	padding:0px;
+	padding-bottom: 10px;
 	border-bottom:1px solid #CCCCCC;
 	text-align:center;	
 
@@ -83,7 +87,7 @@
 	text-align:center;
 }
 
-#new_button
+#new_button, #print_button
 {
 	position:absolute;
 	bottom:-5px;
@@ -127,7 +131,7 @@
 
 #config_info
 {
-	width:70%;
+	width:93%;
 	margin:0 auto;
 	padding:10px;
 	margin-bottom:30px;
@@ -135,6 +139,11 @@
 	text-align:left;
 }
 
+#config_info .wide
+{
+	width: 30%;
+}
+
 #footer
 {
 	position:relative;
@@ -146,3 +155,28 @@
 	clear:both;
 	
 }
+
+input#search
+{
+	padding: 0px;
+}
+
+select#stock_location
+{
+	border: none;
+}
+
+#select_customer_form input, #select_supplier_form input
+{
+	width: 95%;
+}
+
+input.quantity, input.discount
+{
+	width: 40px;
+}
+
+a.rollover img
+{
+	padding: 3px;	
+}
diff -rBwi --ignore-file-name-case -u pos-prod/css/ospos_print.css opensourcepos/css/ospos_print.css
--- pos-prod/css/ospos_print.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/ospos_print.css	2016-05-23 15:32:31.917839214 -0700
@@ -1,6 +1,6 @@
-body
+#receipt_wrapper 
 {
-	background-color:#FFFFFF;
+	/*background-color:#FFFFFF;*/
 	font-size:75%;	
 }
 
@@ -25,11 +25,6 @@
 	text-align:center;
 }
 
-.long_name
-{
-	display:none;
-}
-
 .short_name
 {
 	display:inline;
@@ -39,3 +34,41 @@
 {
 	white-space:nowrap;
 }
+
+/* Hide links in table for printing */
+table.innertable
+{
+	display: table;
+}
+
+table.innertable a 
+{
+	color: #000000;
+	text-decoration: none;	
+}
+
+table.report a.expand 
+{
+	visibility: hidden;
+}
+
+table.report a 
+{
+	color: #000000;
+	text-decoration: none;
+}
+
+table.innertable thead 
+{
+	/*display:none;*/ 
+}
+
+.print_show 
+{
+	display:block !important; 
+}
+
+.print_hide
+{
+	display:none !important;
+}
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/css/popupbox.css opensourcepos/css/popupbox.css
--- pos-prod/css/popupbox.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/popupbox.css	2016-05-23 15:32:31.917839214 -0700
@@ -49,6 +49,13 @@
 	padding:5px;	
 }
 
+#permission_list ul li
+{
+	padding-left:20px;
+	padding-bottom: 0px;
+	list-style:none;
+}
+
 #permission_list input
 {
 	top:3px;
@@ -72,11 +79,12 @@
 	font-size:80%;
 }
 
-#error_message_box
+.error_message_box
 {
 	margin-bottom:7px;
 	margin-left:20px;
 	color:red;	
+	font-weight:bold;
 }
 #item_kit_items_title
 {
diff -rBwi --ignore-file-name-case -u pos-prod/css/receipt.css opensourcepos/css/receipt.css
--- pos-prod/css/receipt.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/receipt.css	2016-05-23 15:32:31.917839214 -0700
@@ -1,6 +1,5 @@
 #receipt_wrapper
 {
-	font-family:Arial;
 	width:100%;	
 }
 
@@ -15,6 +14,12 @@
 	font-weight:bold;
 }
 
+#company_name img
+{
+	max-width: 150px;
+	max-height: 150px;
+}
+
 #company_phone
 {
 	margin-bottom:15px;
@@ -39,6 +44,12 @@
 {
 	position:relative;
 	padding:3px;	
+	margin-bottom:5px;	
+	
+}
+
+#receipt_items tr {
+	margin-bottom:5px;	
 }
 
 .short_name
@@ -58,3 +69,14 @@
 	margin-top:10px;
 	text-align:center;
 }
\ No newline at end of file
+
+.total-value 
+{
+	text-align: right;		
+}
+
+.discount
+{
+	font-weight: bold;
+}
+}
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/css/register.css opensourcepos/css/register.css
--- pos-prod/css/register.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/register.css	2016-05-23 15:32:31.917839214 -0700
@@ -2,7 +2,6 @@
 {
 	float:left;
 	width:70%;
-	font-family:Arial;
 	font-size:13px;
 }
 #mode_form
@@ -87,7 +86,6 @@
 	background-color:#BBBBBB;
 	width:28%;
 	padding:5px;
-	font-family:Arial;
 	font-size:13px;
 	
 }
@@ -105,7 +103,7 @@
 	position:relative;
 }
 
-#Payment_Types
+#payment_details
 {
 	float:left;
 	width:100%;
@@ -158,3 +156,9 @@
 	margin: 0 4px 8px 0;
 }
 
+#sales_overview
+{
+	position:absolute;
+	top:3px;
+	right:99px;
+}
\ No newline at end of file
Only in opensourcepos/css: tabcontent.css
diff -rBwi --ignore-file-name-case -u pos-prod/css/tables.css opensourcepos/css/tables.css
--- pos-prod/css/tables.css	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/css/tables.css	2016-05-23 15:32:31.917839214 -0700
@@ -26,7 +26,7 @@
 	
 }
 
-#table_action_header ul li span
+#table_action_header ul li span a
 {
 	background-color:#0a6184;
 	border:2px solid #DDDDDD;
@@ -94,14 +94,18 @@
 	background-color:#BBBBBB;
 }
 
-table.tablesorter thead tr .headerSortUp 
+table.tablesorter thead tr .tablesorter-headerAsc 
 {
 	background-image: url(../images/tables/asc.gif);
+	background-repeat:no-repeat;
+	background-position: right; 
 }
 
-table.tablesorter thead tr .headerSortDown 
+table.tablesorter thead .tablesorter-headerDesc 
 {
 	background-image: url(../images/tables/desc.gif);
+	background-repeat:no-repeat;
+	background-position: right; 
 }
 
 table.tablesorter thead tr .headerSortDown, table.tablesorter thead tr .headerSortUp 
@@ -124,3 +128,13 @@
 {
 	background-color: #DDD;
 }
\ No newline at end of file
+
+.totals table tr:last-child td
+{
+	font-weight: bold;
+}
+
+#pagination a, #pagination strong
+{
+	padding: 2px 3px;
+}
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/database/2.2.2_to_2.3.sql opensourcepos/database/2.2.2_to_2.3.sql
--- pos-prod/database/2.2.2_to_2.3.sql	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/database/2.2.2_to_2.3.sql	2016-05-23 15:32:31.917839214 -0700
@@ -5,49 +5,71 @@
   PRIMARY KEY (`location_id`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=0;
 
+INSERT INTO `ospos_stock_locations` ( `deleted`, `location_name` ) VALUES ('0', 'stock');
+
 CREATE TABLE IF NOT EXISTS `ospos_item_quantities` (
   `item_id` int(11) NOT NULL,
-  `location_id` int(11) NOT NULL,
+  `location_id` int(11),
   `quantity` int(11) NOT NULL,
   PRIMARY KEY (`item_id`,`location_id`),
   KEY `item_id` (`item_id`),
   KEY `location_id` (`location_id`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=0 ;
 
-ALTER TABLE ospos_inventory
- ADD COLUMN trans_location int(11),
+UPDATE `ospos_item_quantities` SET location_id = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
+
+ALTER TABLE `ospos_inventory`
+ ADD COLUMN trans_location int(11);
+
+UPDATE `ospos_inventory` SET trans_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
+
+ALTER TABLE `ospos_inventory`
+ MODIFY COLUMN trans_location int(11) NOT NULL,
  ADD KEY `trans_location` (`trans_location`),
  ADD CONSTRAINT `ospos_inventory_ibfk_3` FOREIGN KEY (`trans_location`) REFERENCES `ospos_stock_locations` (`location_id`); 
 
 -- ALTER TABLE ospos_items DROP COLUMN location;
 
---INSERT INTO `ospos_stock_locations` ( `deleted`, `location_name` ) VALUES ('0', 'stock');
+ALTER TABLE `ospos_receivings_items`
+ ADD COLUMN item_location int(11);
+ 
+UPDATE `ospos_receivings_items` SET item_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
 
 ALTER TABLE ospos_receivings_items
- ADD COLUMN item_location int(11),
+ MODIFY COLUMN `item_location` INT(11) NOT NULL,
  ADD KEY `item_location` (`item_location`),
  ADD CONSTRAINT `ospos_receivings_items_ibfk_3` FOREIGN KEY (`item_location`) REFERENCES `ospos_stock_locations` (`location_id`);
  
+ALTER TABLE `ospos_sales_items`
+ ADD COLUMN `item_location` int(11);
+
+UPDATE `ospos_sales_items` SET item_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
 
-ALTER TABLE ospos_sales_items
- ADD COLUMN item_location int(11),
+ALTER TABLE `ospos_sales_items`
+ MODIFY `item_location` INT(11) NOT NULL,
  ADD KEY `item_location` (`item_location`),
  ADD KEY `sale_id` (`sale_id`),
  ADD CONSTRAINT `ospos_sales_items_ibfk_3` FOREIGN KEY (`item_location`) REFERENCES `ospos_stock_locations` (`location_id`);
 
-ALTER TABLE ospos_sales_items_taxes
+ALTER TABLE `ospos_sales_items_taxes`
  ADD KEY `sale_id` (`sale_id`);
 
-ALTER TABLE ospos_sales_payments
+ALTER TABLE `ospos_sales_payments`
  ADD KEY `sale_id` (`sale_id`);
 
-ALTER TABLE ospos_sales_suspended_items
- ADD COLUMN item_location int(11),
+ALTER TABLE `ospos_sales_suspended_items`
+ ADD COLUMN `item_location` int(11);
+
+UPDATE `ospos_sales_suspended_items` SET item_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
+
+ALTER TABLE `ospos_sales_suspended_items`
+ MODIFY COLUMN `item_location` int(11) NOT NULL,
  ADD KEY `item_location` (`item_location`),
  ADD KEY `sale_id` (`sale_id`),
  ADD CONSTRAINT `ospos_sales_suspended_items_ibfk_3` FOREIGN KEY (`item_location`) REFERENCES `ospos_stock_locations` (`location_id`);
 
 ALTER TABLE `ospos_item_quantities`
+  MODIFY COLUMN `location_id` INT(11) NOT NULL,
   ADD CONSTRAINT `ospos_item_quantities_ibfk_1` FOREIGN KEY (`item_id`) REFERENCES `ospos_items` (`item_id`),
   ADD CONSTRAINT `ospos_item_quantities_ibfk_2` FOREIGN KEY (`location_id`) REFERENCES `ospos_stock_locations` (`location_id`);
 
Only in opensourcepos/database: 2.3.1_to_2.3.2.sql
Only in opensourcepos/database: 2.3.2_to_2.3.3.sql
Only in opensourcepos/database: 2.3.4_to_2.4.sql
diff -rBwi --ignore-file-name-case -u pos-prod/database/2.3_migrate_locations.sql opensourcepos/database/2.3_migrate_locations.sql
--- pos-prod/database/2.3_migrate_locations.sql	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/database/2.3_migrate_locations.sql	2016-05-09 13:21:31.841674113 -0700
@@ -1,7 +1,2 @@
-UPDATE `ospos_items` set custom1=NULL, custom2=NULL, custom3=NULL, custom4=NULL, custom5=NULL, custom6=NULL, custom7=null, custom8=NULL, custom9=NULL, custom10=NULL;
-UPDATE ospos_items SET custom1=location;
-UPDATE ospos_items SET location='PGS';
-INSERT INTO `ospos_stock_locations` ( `deleted`, `location_name` ) VALUES ('0', 'stock');
---INSERT INTO ospos_stock_locations (location_name) (SELECT location FROM ospos_items WHERE NOT EXISTS (select location from ospos_stock_locations where location_name = location));
-INSERT INTO ospos_stock_locations (location_name) (SELECT DISTINCT location FROM ospos_items);
+INSERT INTO ospos_stock_locations (location_name) (SELECT location FROM ospos_items WHERE NOT EXISTS (select location from ospos_stock_locations where location_name = location));
 INSERT INTO ospos_item_quantities (item_id, location_id, quantity) (SELECT item_id, location_id, quantity FROM ospos_items, ospos_stock_locations where ospos_items.location = ospos_stock_locations.location_name);
Only in opensourcepos/database: 2.3_to_2.3.1.sql
Only in opensourcepos/database: constraints.sql
diff -rBwi --ignore-file-name-case -u pos-prod/database/database.sql opensourcepos/database/database.sql
--- pos-prod/database/database.sql	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/database/database.sql	2016-05-23 15:32:31.917839214 -0700
@@ -1,18 +1,4 @@
--- phpMyAdmin SQL Dump
--- version 3.3.9
--- http://www.phpmyadmin.net
---
--- Host: localhost
--- Generation Time: Apr 08, 2011 at 04:27 PM
--- Server version: 5.1.54
--- PHP Version: 5.3.3
-
---
--- Database: `pos`
---
-
--- --------------------------------------------------------
-
+-- >> This file is autogenerated from tables.sql and constraints.sql. Do not modify directly << --
 --
 -- Table structure for table `ospos_app_config`
 --
@@ -36,7 +22,42 @@
 ('phone', '555-555-5555'),
 ('return_policy', 'Test'),
 ('timezone', 'America/New_York'),
-('website', '');
+('website', ''),
+('recv_invoice_format', '$CO'),
+('sales_invoice_format', '$CO'),
+('tax_included', '0'),
+('invoice_default_comments', 'This is a default comment'),
+('company_logo', ''),
+('barcode_content', 'id'),
+('barcode_type', 'Code39'),
+('barcode_width', '250'),
+('barcode_height', '50'),
+('barcode_quality', '100'),
+('barcode_font', 'Arial'),
+('barcode_font_size', '10'),
+('barcode_first_row', 'category'),
+('barcode_second_row', 'item_code'),
+('barcode_third_row', 'unit_price'),
+('barcode_num_in_row', '2'),
+('barcode_page_width', '100'),      
+('barcode_page_cellspacing', '20'),
+('barcode_generate_if_empty', '0'),
+('receipt_show_taxes', '0'),
+('use_invoice_template', '1'),
+('invoice_email_message', 'Dear $CU, In attachment the receipt for sale $INV'),
+('print_silently', '1'),
+('print_header', '0'),
+('print_footer', '0'),
+('print_top_margin', '0'),
+('print_left_margin', '0'),
+('print_bottom_margin', '0'),
+('print_right_margin', '0'),
+('default_sales_discount', '0'),
+('lines_per_page', '25'),
+('show_total_discount', '1'),
+('dateformat', 'm/d/Y'),
+('timeformat', 'H:i:s'),
+('currency_symbol', '$');
 
 -- --------------------------------------------------------
 
@@ -46,6 +67,7 @@
 
 CREATE TABLE `ospos_customers` (
   `person_id` int(10) NOT NULL,
+  `company_name` varchar(255) DEFAULT NULL,
   `account_number` varchar(255) DEFAULT NULL,
   `taxable` int(1) NOT NULL DEFAULT '1',
   `deleted` int(1) NOT NULL DEFAULT '0',
@@ -87,14 +109,16 @@
 --
 
 CREATE TABLE `ospos_giftcards` (
+  `record_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
   `giftcard_id` int(11) NOT NULL AUTO_INCREMENT,
-  `giftcard_number` varchar(25) COLLATE utf8_unicode_ci NOT NULL,
+  `giftcard_number` int(10) NOT NULL,
   `value` decimal(15,2) NOT NULL,
   `deleted` int(1) NOT NULL DEFAULT '0',
-  `person_id` INT NOT NULL,
+  `person_id` INT(10) DEFAULT NULL,
   PRIMARY KEY (`giftcard_id`),
-  UNIQUE KEY `giftcard_number` (`giftcard_number`)
-) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=48 ;
+  UNIQUE KEY `giftcard_number` (`giftcard_number`),
+  KEY `person_id` (`person_id`)
+) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
 
 --
 -- Dumping data for table `ospos_giftcards`
@@ -119,7 +143,7 @@
   KEY `trans_items` (`trans_items`),
   KEY `trans_user` (`trans_user`),
   KEY `trans_location` (`trans_location`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_inventory`
@@ -140,9 +164,10 @@
   `description` varchar(255) NOT NULL,
   `cost_price` decimal(15,2) NOT NULL,
   `unit_price` decimal(15,2) NOT NULL,
-  `quantity` decimal(15,2) NOT NULL DEFAULT '0.00',
-  `reorder_level` decimal(15,2) NOT NULL DEFAULT '0.00',
+  `reorder_level` decimal(15,2) NOT NULL DEFAULT '0',
+  `receiving_quantity` int(11) NOT NULL DEFAULT '1',
   `item_id` int(10) NOT NULL AUTO_INCREMENT,
+  `pic_id` int(10) DEFAULT NULL,
   `allow_alt_description` tinyint(1) NOT NULL,
   `is_serialized` tinyint(1) NOT NULL,
   `deleted` int(1) NOT NULL DEFAULT '0',
@@ -158,8 +183,8 @@
   `custom10` VARCHAR(25) NOT NULL,
   PRIMARY KEY (`item_id`),
   UNIQUE KEY `item_number` (`item_number`),
-  KEY `ospos_items_ibfk_1` (`supplier_id`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+  KEY `supplier_id` (`supplier_id`)
+) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_items`
@@ -195,7 +220,7 @@
   `name` varchar(255) NOT NULL,
   `description` varchar(255) NOT NULL,
   PRIMARY KEY (`item_kit_id`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_item_kits`
@@ -229,11 +254,11 @@
 CREATE TABLE IF NOT EXISTS `ospos_item_quantities` (
   `item_id` int(11) NOT NULL,
   `location_id` int(11) NOT NULL,
-  `quantity` int(11) NOT NULL,
+  `quantity` int(11) NOT NULL DEFAULT '0',
   PRIMARY KEY (`item_id`,`location_id`),
   KEY `item_id` (`item_id`),
   KEY `location_id` (`location_id`)
-) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=0 ;
+) ENGINE=InnoDB  DEFAULT CHARSET=utf8  ;
 
 -- --------------------------------------------------------
 
@@ -276,6 +301,7 @@
 CREATE TABLE `ospos_people` (
   `first_name` varchar(255) NOT NULL,
   `last_name` varchar(255) NOT NULL,
+  `gender` int(1) DEFAULT NULL,
   `phone_number` varchar(255) NOT NULL,
   `email` varchar(255) NOT NULL,
   `address_1` varchar(255) NOT NULL,
@@ -287,7 +313,7 @@
   `comments` text NOT NULL,
   `person_id` int(10) NOT NULL AUTO_INCREMENT,
   PRIMARY KEY (`person_id`)
-) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;
+) ENGINE=InnoDB  DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_people`
@@ -303,18 +329,74 @@
 --
 
 CREATE TABLE `ospos_permissions` (
+  `permission_id` varchar(255) NOT NULL,
   `module_id` varchar(255) NOT NULL,
-  `person_id` int(10) NOT NULL,
-  PRIMARY KEY (`module_id`,`person_id`),
-  KEY `person_id` (`person_id`)
+  `location_id` int(10) DEFAULT NULL,
+  PRIMARY KEY (`permission_id`),
+  KEY `module_id` (`module_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
 
 --
 -- Dumping data for table `ospos_permissions`
 --
 
-INSERT INTO `ospos_permissions` (`module_id`, `person_id`) VALUES
-('config', 1),
+INSERT INTO `ospos_permissions` (`permission_id`, `module_id`) VALUES
+('reports_customers', 'reports'),
+('reports_receivings', 'reports'),
+('reports_items', 'reports'),
+('reports_employees', 'reports'),
+('reports_suppliers', 'reports'),
+('reports_sales', 'reports'),
+('reports_discounts', 'reports'),
+('reports_taxes', 'reports'),
+('reports_inventory', 'reports'),
+('reports_categories', 'reports'),
+('reports_payments', 'reports'),
+('customers', 'customers'),
+('employees', 'employees'),
+('giftcards', 'giftcards'),
+('items', 'items'),
+('item_kits', 'item_kits'),
+('receivings', 'receivings'),
+('reports', 'reports'),
+('sales', 'sales'),
+('config', 'config'),
+('suppliers', 'suppliers');
+
+INSERT INTO `ospos_permissions` (`permission_id`, `module_id`, `location_id`) VALUES
+('items_stock', 'items', 1),
+('sales_stock', 'sales', 1),
+('receivings_stock', 'receivings', 1);
+
+-- --------------------------------------------------------
+
+--
+-- Table structure for table `ospos_grants`
+--
+
+CREATE TABLE `ospos_grants` (
+  `permission_id` varchar(255) NOT NULL,
+  `person_id` int(10) NOT NULL,
+  PRIMARY KEY (`permission_id`,`person_id`)
+) ENGINE=InnoDB DEFAULT CHARSET=utf8;
+
+--
+-- Dumping data for table `ospos_grants`
+--
+-- --------------------------------------------------------
+
+INSERT INTO `ospos_grants` (`permission_id`, `person_id`) VALUES
+('reports_customers', 1),
+('reports_receivings', 1), 
+('reports_items', 1),
+('reports_inventory', 1),
+('reports_employees', 1),
+('reports_suppliers', 1),
+('reports_sales', 1),
+('reports_discounts', 1),
+('reports_taxes', 1),
+('reports_categories', 1),
+('reports_payments', 1),    
 ('customers', 1),
 ('employees', 1),
 ('giftcards', 1),
@@ -323,10 +405,12 @@
 ('receivings', 1),
 ('reports', 1),
 ('sales', 1),
+('config', 1),
+('items_stock', 1),
+('sales_stock', 1),
+('receivings_stock', 1),
 ('suppliers', 1);
 
--- --------------------------------------------------------
-
 --
 -- Table structure for table `ospos_receivings`
 --
@@ -338,10 +422,12 @@
   `comment` text NOT NULL,
   `receiving_id` int(10) NOT NULL AUTO_INCREMENT,
   `payment_type` varchar(20) DEFAULT NULL,
+  `invoice_number` varchar(32) DEFAULT NULL,
   PRIMARY KEY (`receiving_id`),
   KEY `supplier_id` (`supplier_id`),
-  KEY `employee_id` (`employee_id`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+  KEY `employee_id` (`employee_id`),
+  UNIQUE KEY `invoice_number` (`invoice_number`)
+) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_receivings`
@@ -365,6 +451,7 @@
   `item_unit_price` decimal(15,2) NOT NULL,
   `discount_percent` decimal(15,2) NOT NULL DEFAULT '0',
   `item_location` int(11) NOT NULL,
+  `receiving_quantity` int(11) NOT NULL DEFAULT '1',
   PRIMARY KEY (`receiving_id`,`item_id`,`line`),
   KEY `item_id` (`item_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
@@ -385,12 +472,14 @@
   `customer_id` int(10) DEFAULT NULL,
   `employee_id` int(10) NOT NULL DEFAULT '0',
   `comment` text NOT NULL,
+  `invoice_number` varchar(32) DEFAULT NULL,
   `sale_id` int(10) NOT NULL AUTO_INCREMENT,
-  `payment_type` varchar(512) DEFAULT NULL,
   PRIMARY KEY (`sale_id`),
   KEY `customer_id` (`customer_id`),
-  KEY `employee_id` (`employee_id`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+  KEY `employee_id` (`employee_id`),
+  KEY `sale_time` (`sale_time`),
+  UNIQUE KEY `invoice_number` (`invoice_number`)
+) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_sales`
@@ -477,12 +566,12 @@
   `customer_id` int(10) DEFAULT NULL,
   `employee_id` int(10) NOT NULL DEFAULT '0',
   `comment` text NOT NULL,
+  `invoice_number` varchar(32) DEFAULT NULL,
   `sale_id` int(10) NOT NULL AUTO_INCREMENT,
-  `payment_type` varchar(512) DEFAULT NULL,
   PRIMARY KEY (`sale_id`),
   KEY `customer_id` (`customer_id`),
   KEY `employee_id` (`employee_id`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
 
 --
 -- Dumping data for table `ospos_sales_suspended`
@@ -562,12 +651,11 @@
 --
 
 CREATE TABLE `ospos_sessions` (
-  `session_id` varchar(40) NOT NULL DEFAULT '0',
+  `id` varchar(40) NOT NULL DEFAULT '0',
   `ip_address` varchar(45) NOT NULL DEFAULT '0',
-  `user_agent` varchar(120) NOT NULL,
-  `last_activity` int(10) unsigned NOT NULL DEFAULT '0',
-  `user_data` text,
-  PRIMARY KEY (`session_id`)
+  `data` blob NOT NULL,
+  `timestamp` int(10) unsigned NOT NULL DEFAULT '0',
+  PRIMARY KEY (`id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
 
 --
@@ -582,10 +670,10 @@
 
 CREATE TABLE `ospos_stock_locations` (
   `location_id` int(11) NOT NULL AUTO_INCREMENT,
-  `location_name` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
+  `location_name` varchar(255) DEFAULT NULL,
   `deleted` int(1) NOT NULL DEFAULT '0',
   PRIMARY KEY (`location_id`)
-) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8;
+) ENGINE=InnoDB  DEFAULT CHARSET=utf8 ;
 
 --
 -- Dumping data for table `ospos_stock_locations`
@@ -602,6 +690,7 @@
 CREATE TABLE `ospos_suppliers` (
   `person_id` int(10) NOT NULL,
   `company_name` varchar(255) NOT NULL,
+  `agency_name` varchar(255) NOT NULL,
   `account_number` varchar(255) DEFAULT NULL,
   `deleted` int(1) NOT NULL DEFAULT '0',
   UNIQUE KEY `account_number` (`account_number`),
@@ -634,7 +724,8 @@
 --
 ALTER TABLE `ospos_inventory`
   ADD CONSTRAINT `ospos_inventory_ibfk_1` FOREIGN KEY (`trans_items`) REFERENCES `ospos_items` (`item_id`),
-  ADD CONSTRAINT `ospos_inventory_ibfk_2` FOREIGN KEY (`trans_user`) REFERENCES `ospos_employees` (`person_id`);
+  ADD CONSTRAINT `ospos_inventory_ibfk_2` FOREIGN KEY (`trans_user`) REFERENCES `ospos_employees` (`person_id`),
+  ADD CONSTRAINT `ospos_inventory_ibfk_3` FOREIGN KEY (`trans_location`) REFERENCES `ospos_stock_locations` (`location_id`);
 
 --
 -- Constraints for table `ospos_items`
@@ -659,8 +750,15 @@
 -- Constraints for table `ospos_permissions`
 --
 ALTER TABLE `ospos_permissions`
-  ADD CONSTRAINT `ospos_permissions_ibfk_1` FOREIGN KEY (`person_id`) REFERENCES `ospos_employees` (`person_id`),
-  ADD CONSTRAINT `ospos_permissions_ibfk_2` FOREIGN KEY (`module_id`) REFERENCES `ospos_modules` (`module_id`);
+  ADD CONSTRAINT `ospos_permissions_ibfk_1` FOREIGN KEY (`module_id`) REFERENCES `ospos_modules` (`module_id`) ON DELETE CASCADE,
+  ADD CONSTRAINT `ospos_permissions_ibfk_2` FOREIGN KEY (`location_id`) REFERENCES `ospos_stock_locations` (`location_id`) ON DELETE CASCADE;
+
+--
+-- Constraints for table `ospos_grants`
+--
+ALTER TABLE `ospos_grants`
+  ADD CONSTRAINT `ospos_grants_ibfk_1` foreign key (`permission_id`) references `ospos_permissions` (`permission_id`) ON DELETE CASCADE,
+  ADD CONSTRAINT `ospos_grants_ibfk_2` foreign key (`person_id`) references `ospos_employees` (`person_id`) ON DELETE CASCADE;
 
 --
 -- Constraints for table `ospos_receivings`
@@ -744,3 +842,10 @@
 --
 ALTER TABLE `ospos_suppliers`
   ADD CONSTRAINT `ospos_suppliers_ibfk_1` FOREIGN KEY (`person_id`) REFERENCES `ospos_people` (`person_id`);
+  
+--
+-- Constraints for table `ospos_giftcards`
+--
+ALTER TABLE `ospos_giftcards`
+  ADD CONSTRAINT `ospos_giftcards_ibfk_1` FOREIGN KEY (`person_id`) REFERENCES `ospos_people` (`person_id`);
+
Only in opensourcepos/database: migrate_phppos_dist.sql
Only in opensourcepos/database: phppos_migrate.sql
Only in opensourcepos/database: rename_tables.sql
Only in opensourcepos/database: resetdatabase.sh
Only in opensourcepos/database: tables.sql
Only in opensourcepos: dist
Only in opensourcepos: docker
Only in opensourcepos: Dockerfile
Only in opensourcepos: font
Only in opensourcepos: generate_languages.php
Only in pos-prod: git-svn-diff.sh
Only in opensourcepos: Gruntfile.js
Only in opensourcepos/images: favicon.ico
Only in opensourcepos/images: jquery-ui
Only in opensourcepos/images: logo.gif
Only in opensourcepos/images: tabbg.gif
Only in pos-prod/images: Thumbs.db
diff -rBwi --ignore-file-name-case -u pos-prod/import_customers.csv opensourcepos/import_customers.csv
--- pos-prod/import_customers.csv	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/import_customers.csv	2016-05-23 15:32:31.928839049 -0700
@@ -1,2 +1,2 @@
-First Name,Last Name,E-Mail,Phone Number,Address 1,Address2,City,State,Zip,Country,Comments,Account Number,Taxable
-Bob,Smith,bsmith@nowhere.com,585-555-1111,123 Nowhere Street,Apt 4,Awesome,NY,11111,USA,Awesome guy,,y
\ No newline at end of file
+First Name,Last Name,Gender,E-Mail,Phone Number,Address 1,Address2,City,State,Zip,Country,Comments,Account Number,Taxable
+Bob,Smith,1,bsmith@nowhere.com,585-555-1111,123 Nowhere Street,Apt 4,Awesome,NY,11111,USA,Awesome guy,,y
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/import_items.csv opensourcepos/import_items.csv
--- pos-prod/import_items.csv	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/import_items.csv	2016-05-23 15:32:31.929839034 -0700
@@ -1 +1,2 @@
-UPC/EAN/ISBN,Item Name,Category,Supplier ID,Cost Price,Unit Price,Tax 1 Name,Tax 1 Percent,Tax 2 Name ,Tax 2 Percent,Quantity,Reorder Level,Location,Description,Allow Alt Description,Item has Serial Number33333333,Apple iMac,Computers,,800,1200,Tax 1,8,Tax 2,10,10,1,Earth,Best Computer ever,y,
\ No newline at end of file
+UPC/EAN/ISBN,Item Name,Category,Supplier ID,Cost Price,Unit Price,Tax 1 Name,Tax 1 Percent,Tax 2 Name ,Tax 2 Percent,Reorder Level,Description,Allow Alt Description,Item has Serial Number,custom1,custom2,custom3,custom4,custom5,custom6,custom7,custom8,custom9,custom10,location_id,quantity
+33333333,Apple iMac,Computers,,800,1200,Tax 1,8,Tax 2,10,1,Best Computer ever,y,,"Oz, Frank",The Bunny and the Hill,"Monkeys,Giraffes,Gorillas",English,New,Apple,,1999,D3lk3jlkjs,Hardbound,1,100
diff -rBwi --ignore-file-name-case -u pos-prod/index.php opensourcepos/index.php
--- pos-prod/index.php	2014-10-08 16:41:53.000000000 -0700
+++ opensourcepos/index.php	2016-05-23 15:32:31.929839034 -0700
@@ -1,4 +1,40 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
 
 /*
  *---------------------------------------------------------------
@@ -16,9 +52,9 @@
  *     production
  *
  * NOTE: If you change these, also change the error_reporting() code below
- *
  */
-	define('ENVIRONMENT', 'production');
+	define('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');
+
 /*
  *---------------------------------------------------------------
  * ERROR REPORTING
@@ -27,23 +63,30 @@
  * Different environments will require different levels of error reporting.
  * By default development will show errors but testing and live will hide them.
  */
-
-if (defined('ENVIRONMENT'))
-{
 	switch (ENVIRONMENT)
 	{
 		case 'development':
-			error_reporting(E_ALL);
+		error_reporting(-1);
+		ini_set('display_errors', 1);
 		break;
 	
 		case 'testing':
 		case 'production':
-			error_reporting(0);
+		ini_set('display_errors', 0);
+		if (version_compare(PHP_VERSION, '5.3', '>='))
+		{
+			error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED & ~E_STRICT & ~E_USER_NOTICE & ~E_USER_DEPRECATED);
+		}
+		else
+		{
+			error_reporting(E_ALL & ~E_NOTICE & ~E_STRICT & ~E_USER_NOTICE);
+		}
 		break;
 
 		default:
-			exit('The application environment is not set correctly.');
-	}
+		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
+		echo 'The application environment is not set correctly.';
+		exit(1); // EXIT_ERROR
 }
 
 /*
@@ -54,7 +97,6 @@
  * This variable must contain the name of your "system" folder.
  * Include the path if the folder is not in the same  directory
  * as this file.
- *
  */
 	$system_path = 'system';
 
@@ -64,17 +106,32 @@
  *---------------------------------------------------------------
  *
  * If you want this front controller to use a different "application"
- * folder then the default one you can set its name here. The folder
+ * folder than the default one you can set its name here. The folder
  * can also be renamed or relocated anywhere on your server.  If
  * you do, use a full server path. For more info please see the user guide:
- * http://codeigniter.com/user_guide/general/managing_apps.html
+ * https://codeigniter.com/user_guide/general/managing_apps.html
  *
  * NO TRAILING SLASH!
- *
  */
 	$application_folder = 'application';
 
 /*
+ *---------------------------------------------------------------
+ * VIEW FOLDER NAME
+ *---------------------------------------------------------------
+ *
+ * If you want to move the view folder out of the application
+ * folder set the path to the folder here. The folder can be renamed
+ * and relocated anywhere on your server. If blank, it will default
+ * to the standard location inside your application folder. If you
+ * do move this, use the full server path to this folder.
+ *
+ * NO TRAILING SLASH!
+ */
+	$view_folder = '';
+
+
+/*
  * --------------------------------------------------------------------
  * DEFAULT CONTROLLER
  * --------------------------------------------------------------------
@@ -92,7 +149,6 @@
  * to call functions dynamically via the URI.
  *
  * Un-comment the $routing array below to use this feature
- *
  */
 	// The directory name, relative to the "controllers" folder.  Leave blank
 	// if your controller is not in a sub-folder within the "controllers" folder
@@ -118,7 +174,6 @@
  * config values.
  *
  * Un-comment the $assign_to_config array below to use this feature
- *
  */
 	// $assign_to_config['name_of_config_item'] = 'value of config item';
 
@@ -140,18 +195,22 @@
 		chdir(dirname(__FILE__));
 	}
 
-	if (realpath($system_path) !== FALSE)
+	if (($_temp = realpath($system_path)) !== FALSE)
 	{
-		$system_path = realpath($system_path).'/';
+		$system_path = $_temp.'/';
 	}
-
+	else
+	{
 	// ensure there's a trailing slash
 	$system_path = rtrim($system_path, '/').'/';
+	}
 
 	// Is the system path correct?
 	if ( ! is_dir($system_path))
 	{
-		exit("Your system folder path does not appear to be set correctly. Please open the following file and correct this: ".pathinfo(__FILE__, PATHINFO_BASENAME));
+		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
+		echo 'Your system folder path does not appear to be set correctly. Please open the following file and correct this: '.pathinfo(__FILE__, PATHINFO_BASENAME);
+		exit(3); // EXIT_CONFIG
 	}
 
 /*
@@ -162,15 +221,11 @@
 	// The name of THIS file
 	define('SELF', pathinfo(__FILE__, PATHINFO_BASENAME));
 
-	// The PHP file extension
-	// this global constant is deprecated.
-	define('EXT', '.php');
-
 	// Path to the system folder
-	define('BASEPATH', str_replace("\\", "/", $system_path));
+	define('BASEPATH', str_replace('\\', '/', $system_path));
 
 	// Path to the front controller (this file)
-	define('FCPATH', str_replace(SELF, '', __FILE__));
+	define('FCPATH', dirname(__FILE__).'/');
 
 	// Name of the "system folder"
 	define('SYSDIR', trim(strrchr(trim(BASEPATH, '/'), '/'), '/'));
@@ -179,27 +233,60 @@
 	// The path to the "application" folder
 	if (is_dir($application_folder))
 	{
-		define('APPPATH', $application_folder.'/');
+		if (($_temp = realpath($application_folder)) !== FALSE)
+		{
+			$application_folder = $_temp;
+		}
+
+		define('APPPATH', $application_folder.DIRECTORY_SEPARATOR);
 	}
 	else
 	{
-		if ( ! is_dir(BASEPATH.$application_folder.'/'))
+		if ( ! is_dir(BASEPATH.$application_folder.DIRECTORY_SEPARATOR))
+		{
+			header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
+			echo 'Your application folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;
+			exit(3); // EXIT_CONFIG
+		}
+
+		define('APPPATH', BASEPATH.$application_folder.DIRECTORY_SEPARATOR);
+	}
+
+	// The path to the "views" folder
+	if ( ! is_dir($view_folder))
+	{
+		if ( ! empty($view_folder) && is_dir(APPPATH.$view_folder.DIRECTORY_SEPARATOR))
+		{
+			$view_folder = APPPATH.$view_folder;
+		}
+		elseif ( ! is_dir(APPPATH.'views'.DIRECTORY_SEPARATOR))
 		{
-			exit("Your application folder path does not appear to be set correctly. Please open the following file and correct this: ".SELF);
+			header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
+			echo 'Your view folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;
+			exit(3); // EXIT_CONFIG
+		}
+		else
+		{
+			$view_folder = APPPATH.'views';
+		}
 		}
 
-		define('APPPATH', BASEPATH.$application_folder.'/');
+	if (($_temp = realpath($view_folder)) !== FALSE)
+	{
+		$view_folder = $_temp.DIRECTORY_SEPARATOR;
+	}
+	else
+	{
+		$view_folder = rtrim($view_folder, '/\\').DIRECTORY_SEPARATOR;
 	}
 
+	define('VIEWPATH', $view_folder);
+
 /*
  * --------------------------------------------------------------------
  * LOAD THE BOOTSTRAP FILE
  * --------------------------------------------------------------------
  *
  * And away we go...
- *
  */
 require_once BASEPATH.'core/CodeIgniter.php';
-
-/* End of file index.php */
-/* Location: ./index.php */
diff -rBwi --ignore-file-name-case -u pos-prod/js/common.js opensourcepos/js/common.js
--- pos-prod/js/common.js	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/js/common.js	2016-05-23 15:32:31.929839034 -0700
@@ -21,17 +21,13 @@
 
 function set_feedback(text, classname, keep_displayed)
 {
-	if(text!='')
+	if(text)
 	{
-		$('#feedback_bar').removeClass();
-		$('#feedback_bar').addClass(classname);
-		$('#feedback_bar').text(text);
-		$('#feedback_bar').css('opacity','1');
+		$('#feedback_bar').removeClass().addClass(classname).html(text).css('opacity','1');
 
 		if(!keep_displayed)
 		{
-			$('#feedback_bar').fadeTo(5000, 1);
-			$('#feedback_bar').fadeTo("fast",0);
+			$('#feedback_bar').fadeTo(5000, 1).fadeTo("fast",0);
 		}
 	}
 	else
@@ -39,44 +35,3 @@
 		$('#feedback_bar').css('opacity','0');
 	}
 }
-
-//keylisteners
-
-$(window).jkey('f1',function(){
-window.location = BASE_URL + '/customers/index';
-});
-
-
-$(window).jkey('f2',function(){
-window.location = BASE_URL + '/items/index';
-});
-
-
-$(window).jkey('f3',function(){
-window.location = BASE_URL + '/reports/index';
-});
-
-$(window).jkey('f4',function(){
-window.location = BASE_URL + '/suppliers/index';
-});
-
-$(window).jkey('f5',function(){
-window.location = BASE_URL + '/receivings/index';
-});
-
-
-$(window).jkey('f6',function(){
-window.location = BASE_URL + '/sales/index';
-});
-
-$(window).jkey('f7',function(){
-window.location = BASE_URL + '/employees/index';
-});
-
-$(window).jkey('f8',function(){
-window.location = BASE_URL + '/config/index';
-});
-
-$(window).jkey('f9',function(){
-window.location = BASE_URL + '/giftcards/index';
-});
Only in pos-prod/js: datepicker.js
Only in opensourcepos/js: imgpreview.full.jquery.js
Only in pos-prod/js: jquery-1.2.6.min.js
Only in opensourcepos/js: jquery-1.8.3.js
Only in opensourcepos/js: jquery-ui-1.11.4.js
Only in opensourcepos/js: jquery-ui-timepicker-addon.js
diff -rBwi --ignore-file-name-case -u pos-prod/js/jquery.autocomplete.js opensourcepos/js/jquery.autocomplete.js
--- pos-prod/js/jquery.autocomplete.js	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/js/jquery.autocomplete.js	2016-05-23 15:32:31.931839004 -0700
@@ -338,6 +338,13 @@
 				extraParams[key] = typeof param == "function" ? param() : param;
 			});
 			
+			// don't add q parameter (won't work for nomantim)
+			var data = typeof options.extraParams == "function" ? 
+			    $.extend({}, options.extraParams()) : $.extend({
+				    q: lastWord(term),
+				    limit: options.max
+			    }, extraParams);
+			
 			$.ajax({
 				// try to leverage ajaxQueue plugin to abort previous requests
 				mode: "abort",
@@ -345,11 +352,8 @@
 				port: "autocomplete" + input.name,
 				dataType: options.dataType,
 				url: options.url,
-				type:"POST",
-				data: $.extend({
-					q: lastWord(term),
-					limit: options.max
-				}, extraParams),
+				type: options.type || "POST",
+				data: data,
 				success: function(data) {
 					var parsed = options.parse && options.parse(data) || parse(data);
 					cache.add(term, parsed);
Only in pos-prod/js: jquery.bgiframe.min.js
diff -rBwi --ignore-file-name-case -u pos-prod/js/jquery.color.js opensourcepos/js/jquery.color.js
--- pos-prod/js/jquery.color.js	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/js/jquery.color.js	2016-05-23 15:32:31.931839004 -0700
@@ -1,123 +1,663 @@
-/*
- * jQuery Color Animations
- * Copyright 2007 John Resig
- * Released under the MIT and GPL licenses.
+/*!
+ * jQuery Color Animations v@VERSION
+ * https://github.com/jquery/jquery-color
+ *
+ * Copyright jQuery Foundation and other contributors
+ * Released under the MIT license.
+ * http://jquery.org/license
+ *
+ * Date: @DATE
  */
+(function( jQuery, undefined ) {
 
-(function(jQuery){
+	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
 
-	// We override the animation for all of these color styles
-	jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function(i,attr){
-		jQuery.fx.step[attr] = function(fx){
-			if ( fx.state == 0 ) {
-				fx.start = getColor( fx.elem, attr );
-				fx.end = getRGB( fx.end );
-			}
-
-			fx.elem.style[attr] = "rgb(" + [
-				Math.max(Math.min( parseInt((fx.pos * (fx.end[0] - fx.start[0])) + fx.start[0]), 255), 0),
-				Math.max(Math.min( parseInt((fx.pos * (fx.end[1] - fx.start[1])) + fx.start[1]), 255), 0),
-				Math.max(Math.min( parseInt((fx.pos * (fx.end[2] - fx.start[2])) + fx.start[2]), 255), 0)
-			].join(",") + ")";
-		}
-	});
-
-	// Color Conversion functions from highlightFade
-	// By Blair Mitchelmore
-	// http://jquery.offput.ca/highlightFade/
-
-	// Parse strings looking for color tuples [255,255,255]
-	function getRGB(color) {
-		var result;
-
-		// Check if we're already dealing with an array of colors
-		if ( color && color.constructor == Array && color.length == 3 )
-			return color;
-
-		// Look for rgb(num,num,num)
-		if (result = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(color))
-			return [parseInt(result[1]), parseInt(result[2]), parseInt(result[3])];
-
-		// Look for rgb(num%,num%,num%)
-		if (result = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(color))
-			return [parseFloat(result[1])*2.55, parseFloat(result[2])*2.55, parseFloat(result[3])*2.55];
-
-		// Look for #a0b1c2
-		if (result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color))
-			return [parseInt(result[1],16), parseInt(result[2],16), parseInt(result[3],16)];
-
-		// Look for #fff
-		if (result = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(color))
-			return [parseInt(result[1]+result[1],16), parseInt(result[2]+result[2],16), parseInt(result[3]+result[3],16)];
-
-		// Otherwise, we're most likely dealing with a named color
-		return colors[jQuery.trim(color).toLowerCase()];
-	}
-	
-	function getColor(elem, attr) {
-		var color;
-
-		do {
-			color = jQuery.curCSS(elem, attr);
-
-			// Keep going until we find an element that has color, or we hit the body
-			if ( color != '' && color != 'transparent' || jQuery.nodeName(elem, "body") )
-				break; 
-
-			attr = "backgroundColor";
-		} while ( elem = elem.parentNode );
-
-		return getRGB(color);
-	};
-	
-	// Some named colors to work with
-	// From Interface by Stefan Petre
-	// http://interface.eyecon.ro/
-
-	var colors = {
-		aqua:[0,255,255],
-		azure:[240,255,255],
-		beige:[245,245,220],
-		black:[0,0,0],
-		blue:[0,0,255],
-		brown:[165,42,42],
-		cyan:[0,255,255],
-		darkblue:[0,0,139],
-		darkcyan:[0,139,139],
-		darkgrey:[169,169,169],
-		darkgreen:[0,100,0],
-		darkkhaki:[189,183,107],
-		darkmagenta:[139,0,139],
-		darkolivegreen:[85,107,47],
-		darkorange:[255,140,0],
-		darkorchid:[153,50,204],
-		darkred:[139,0,0],
-		darksalmon:[233,150,122],
-		darkviolet:[148,0,211],
-		fuchsia:[255,0,255],
-		gold:[255,215,0],
-		green:[0,128,0],
-		indigo:[75,0,130],
-		khaki:[240,230,140],
-		lightblue:[173,216,230],
-		lightcyan:[224,255,255],
-		lightgreen:[144,238,144],
-		lightgrey:[211,211,211],
-		lightpink:[255,182,193],
-		lightyellow:[255,255,224],
-		lime:[0,255,0],
-		magenta:[255,0,255],
-		maroon:[128,0,0],
-		navy:[0,0,128],
-		olive:[128,128,0],
-		orange:[255,165,0],
-		pink:[255,192,203],
-		purple:[128,0,128],
-		violet:[128,0,128],
-		red:[255,0,0],
-		silver:[192,192,192],
-		white:[255,255,255],
-		yellow:[255,255,0]
+	// plusequals test for += 100 -= 100
+	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
+	// a set of RE's that can match strings and generate color tuples.
+	stringParsers = [{
+			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
+			parse: function( execResult ) {
+				return [
+					execResult[ 1 ],
+					execResult[ 2 ],
+					execResult[ 3 ],
+					execResult[ 4 ]
+				];
+			}
+		}, {
+			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
+			parse: function( execResult ) {
+				return [
+					execResult[ 1 ] * 2.55,
+					execResult[ 2 ] * 2.55,
+					execResult[ 3 ] * 2.55,
+					execResult[ 4 ]
+				];
+			}
+		}, {
+			// this regex ignores A-F because it's compared against an already lowercased string
+			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
+			parse: function( execResult ) {
+				return [
+					parseInt( execResult[ 1 ], 16 ),
+					parseInt( execResult[ 2 ], 16 ),
+					parseInt( execResult[ 3 ], 16 )
+				];
+			}
+		}, {
+			// this regex ignores A-F because it's compared against an already lowercased string
+			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
+			parse: function( execResult ) {
+				return [
+					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
+					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
+					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
+				];
+			}
+		}, {
+			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
+			space: "hsla",
+			parse: function( execResult ) {
+				return [
+					execResult[ 1 ],
+					execResult[ 2 ] / 100,
+					execResult[ 3 ] / 100,
+					execResult[ 4 ]
+				];
+			}
+		}],
+
+	// jQuery.Color( )
+	color = jQuery.Color = function( color, green, blue, alpha ) {
+		return new jQuery.Color.fn.parse( color, green, blue, alpha );
+	},
+	spaces = {
+		rgba: {
+			props: {
+				red: {
+					idx: 0,
+					type: "byte"
+				},
+				green: {
+					idx: 1,
+					type: "byte"
+				},
+				blue: {
+					idx: 2,
+					type: "byte"
+				}
+			}
+		},
+
+		hsla: {
+			props: {
+				hue: {
+					idx: 0,
+					type: "degrees"
+				},
+				saturation: {
+					idx: 1,
+					type: "percent"
+				},
+				lightness: {
+					idx: 2,
+					type: "percent"
+				}
+			}
+		}
+	},
+	propTypes = {
+		"byte": {
+			floor: true,
+			max: 255
+		},
+		"percent": {
+			max: 1
+		},
+		"degrees": {
+			mod: 360,
+			floor: true
+		}
+	},
+	support = color.support = {},
+
+	// element for support tests
+	supportElem = jQuery( "<p>" )[ 0 ],
+
+	// colors = jQuery.Color.names
+	colors,
+
+	// local aliases of functions called often
+	each = jQuery.each;
+
+// determine rgba support immediately
+supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
+support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;
+
+// define cache name and alpha properties
+// for rgba and hsla spaces
+each( spaces, function( spaceName, space ) {
+	space.cache = "_" + spaceName;
+	space.props.alpha = {
+		idx: 3,
+		type: "percent",
+		def: 1
+	};
+});
+
+function clamp( value, prop, allowEmpty ) {
+	var type = propTypes[ prop.type ] || {};
+
+	if ( value == null ) {
+		return (allowEmpty || !prop.def) ? null : prop.def;
+	}
+
+	// ~~ is an short way of doing floor for positive numbers
+	value = type.floor ? ~~value : parseFloat( value );
+
+	// IE will pass in empty strings as value for alpha,
+	// which will hit this case
+	if ( isNaN( value ) ) {
+		return prop.def;
+	}
+
+	if ( type.mod ) {
+		// we add mod before modding to make sure that negatives values
+		// get converted properly: -10 -> 350
+		return (value + type.mod) % type.mod;
+	}
+
+	// for now all property types without mod have min and max
+	return 0 > value ? 0 : type.max < value ? type.max : value;
+}
+
+function stringParse( string ) {
+	var inst = color(),
+		rgba = inst._rgba = [];
+
+	string = string.toLowerCase();
+
+	each( stringParsers, function( i, parser ) {
+		var parsed,
+			match = parser.re.exec( string ),
+			values = match && parser.parse( match ),
+			spaceName = parser.space || "rgba";
+
+		if ( values ) {
+			parsed = inst[ spaceName ]( values );
+
+			// if this was an rgba parse the assignment might happen twice
+			// oh well....
+			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
+			rgba = inst._rgba = parsed._rgba;
+
+			// exit each( stringParsers ) here because we matched
+			return false;
+		}
+	});
+
+	// Found a stringParser that handled it
+	if ( rgba.length ) {
+
+		// if this came from a parsed string, force "transparent" when alpha is 0
+		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
+		if ( rgba.join() === "0,0,0,0" ) {
+			jQuery.extend( rgba, colors.transparent );
+		}
+		return inst;
+	}
+
+	// named colors
+	return colors[ string ];
+}
+
+color.fn = jQuery.extend( color.prototype, {
+	parse: function( red, green, blue, alpha ) {
+		if ( red === undefined ) {
+			this._rgba = [ null, null, null, null ];
+			return this;
+		}
+		if ( red.jquery || red.nodeType ) {
+			red = jQuery( red ).css( green );
+			green = undefined;
+		}
+
+		var inst = this,
+			type = jQuery.type( red ),
+			rgba = this._rgba = [];
+
+		// more than 1 argument specified - assume ( red, green, blue, alpha )
+		if ( green !== undefined ) {
+			red = [ red, green, blue, alpha ];
+			type = "array";
+		}
+
+		if ( type === "string" ) {
+			return this.parse( stringParse( red ) || colors._default );
+		}
+
+		if ( type === "array" ) {
+			each( spaces.rgba.props, function( key, prop ) {
+				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
+			});
+			return this;
+		}
+
+		if ( type === "object" ) {
+			if ( red instanceof color ) {
+				each( spaces, function( spaceName, space ) {
+					if ( red[ space.cache ] ) {
+						inst[ space.cache ] = red[ space.cache ].slice();
+					}
+				});
+			} else {
+				each( spaces, function( spaceName, space ) {
+					var cache = space.cache;
+					each( space.props, function( key, prop ) {
+
+						// if the cache doesn't exist, and we know how to convert
+						if ( !inst[ cache ] && space.to ) {
+
+							// if the value was null, we don't need to copy it
+							// if the key was alpha, we don't need to copy it either
+							if ( key === "alpha" || red[ key ] == null ) {
+								return;
+							}
+							inst[ cache ] = space.to( inst._rgba );
+						}
+
+						// this is the only case where we allow nulls for ALL properties.
+						// call clamp with alwaysAllowEmpty
+						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
+					});
+
+					// everything defined but alpha?
+					if ( inst[ cache ] && jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
+						// use the default of 1
+						inst[ cache ][ 3 ] = 1;
+						if ( space.from ) {
+							inst._rgba = space.from( inst[ cache ] );
+						}
+					}
+				});
+			}
+			return this;
+		}
+	},
+	is: function( compare ) {
+		var is = color( compare ),
+			same = true,
+			inst = this;
+
+		each( spaces, function( _, space ) {
+			var localCache,
+				isCache = is[ space.cache ];
+			if (isCache) {
+				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
+				each( space.props, function( _, prop ) {
+					if ( isCache[ prop.idx ] != null ) {
+						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
+						return same;
+					}
+				});
+			}
+			return same;
+		});
+		return same;
+	},
+	_space: function() {
+		var used = [],
+			inst = this;
+		each( spaces, function( spaceName, space ) {
+			if ( inst[ space.cache ] ) {
+				used.push( spaceName );
+			}
+		});
+		return used.pop();
+	},
+	transition: function( other, distance ) {
+		var end = color( other ),
+			spaceName = end._space(),
+			space = spaces[ spaceName ],
+			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
+			start = startColor[ space.cache ] || space.to( startColor._rgba ),
+			result = start.slice();
+
+		end = end[ space.cache ];
+		each( space.props, function( key, prop ) {
+			var index = prop.idx,
+				startValue = start[ index ],
+				endValue = end[ index ],
+				type = propTypes[ prop.type ] || {};
+
+			// if null, don't override start value
+			if ( endValue === null ) {
+				return;
+			}
+			// if null - use end
+			if ( startValue === null ) {
+				result[ index ] = endValue;
+			} else {
+				if ( type.mod ) {
+					if ( endValue - startValue > type.mod / 2 ) {
+						startValue += type.mod;
+					} else if ( startValue - endValue > type.mod / 2 ) {
+						startValue -= type.mod;
+					}
+				}
+				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
+			}
+		});
+		return this[ spaceName ]( result );
+	},
+	blend: function( opaque ) {
+		// if we are already opaque - return ourself
+		if ( this._rgba[ 3 ] === 1 ) {
+			return this;
+		}
+
+		var rgb = this._rgba.slice(),
+			a = rgb.pop(),
+			blend = color( opaque )._rgba;
+
+		return color( jQuery.map( rgb, function( v, i ) {
+			return ( 1 - a ) * blend[ i ] + a * v;
+		}));
+	},
+	toRgbaString: function() {
+		var prefix = "rgba(",
+			rgba = jQuery.map( this._rgba, function( v, i ) {
+				return v == null ? ( i > 2 ? 1 : 0 ) : v;
+			});
+
+		if ( rgba[ 3 ] === 1 ) {
+			rgba.pop();
+			prefix = "rgb(";
+		}
+
+		return prefix + rgba.join() + ")";
+	},
+	toHslaString: function() {
+		var prefix = "hsla(",
+			hsla = jQuery.map( this.hsla(), function( v, i ) {
+				if ( v == null ) {
+					v = i > 2 ? 1 : 0;
+				}
+
+				// catch 1 and 2
+				if ( i && i < 3 ) {
+					v = Math.round( v * 100 ) + "%";
+				}
+				return v;
+			});
+
+		if ( hsla[ 3 ] === 1 ) {
+			hsla.pop();
+			prefix = "hsl(";
+		}
+		return prefix + hsla.join() + ")";
+	},
+	toHexString: function( includeAlpha ) {
+		var rgba = this._rgba.slice(),
+			alpha = rgba.pop();
+
+		if ( includeAlpha ) {
+			rgba.push( ~~( alpha * 255 ) );
+		}
+
+		return "#" + jQuery.map( rgba, function( v ) {
+
+			// default to 0 when nulls exist
+			v = ( v || 0 ).toString( 16 );
+			return v.length === 1 ? "0" + v : v;
+		}).join("");
+	},
+	toString: function() {
+		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
+	}
+});
+color.fn.parse.prototype = color.fn;
+
+// hsla conversions adapted from:
+// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021
+
+function hue2rgb( p, q, h ) {
+	h = ( h + 1 ) % 1;
+	if ( h * 6 < 1 ) {
+		return p + (q - p) * h * 6;
+	}
+	if ( h * 2 < 1) {
+		return q;
+	}
+	if ( h * 3 < 2 ) {
+		return p + (q - p) * ((2/3) - h) * 6;
+	}
+	return p;
+}
+
+spaces.hsla.to = function ( rgba ) {
+	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
+		return [ null, null, null, rgba[ 3 ] ];
+	}
+	var r = rgba[ 0 ] / 255,
+		g = rgba[ 1 ] / 255,
+		b = rgba[ 2 ] / 255,
+		a = rgba[ 3 ],
+		max = Math.max( r, g, b ),
+		min = Math.min( r, g, b ),
+		diff = max - min,
+		add = max + min,
+		l = add * 0.5,
+		h, s;
+
+	if ( min === max ) {
+		h = 0;
+	} else if ( r === max ) {
+		h = ( 60 * ( g - b ) / diff ) + 360;
+	} else if ( g === max ) {
+		h = ( 60 * ( b - r ) / diff ) + 120;
+	} else {
+		h = ( 60 * ( r - g ) / diff ) + 240;
+	}
+
+	// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
+	// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
+	if ( diff === 0 ) {
+		s = 0;
+	} else if ( l <= 0.5 ) {
+		s = diff / add;
+	} else {
+		s = diff / ( 2 - add );
+	}
+	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];
+};
+
+spaces.hsla.from = function ( hsla ) {
+	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
+		return [ null, null, null, hsla[ 3 ] ];
+	}
+	var h = hsla[ 0 ] / 360,
+		s = hsla[ 1 ],
+		l = hsla[ 2 ],
+		a = hsla[ 3 ],
+		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
+		p = 2 * l - q;
+
+	return [
+		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
+		Math.round( hue2rgb( p, q, h ) * 255 ),
+		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
+		a
+	];
+};
+
+
+each( spaces, function( spaceName, space ) {
+	var props = space.props,
+		cache = space.cache,
+		to = space.to,
+		from = space.from;
+
+	// makes rgba() and hsla()
+	color.fn[ spaceName ] = function( value ) {
+
+		// generate a cache for this space if it doesn't exist
+		if ( to && !this[ cache ] ) {
+			this[ cache ] = to( this._rgba );
+		}
+		if ( value === undefined ) {
+			return this[ cache ].slice();
+		}
+
+		var ret,
+			type = jQuery.type( value ),
+			arr = ( type === "array" || type === "object" ) ? value : arguments,
+			local = this[ cache ].slice();
+
+		each( props, function( key, prop ) {
+			var val = arr[ type === "object" ? key : prop.idx ];
+			if ( val == null ) {
+				val = local[ prop.idx ];
+			}
+			local[ prop.idx ] = clamp( val, prop );
+		});
+
+		if ( from ) {
+			ret = color( from( local ) );
+			ret[ cache ] = local;
+			return ret;
+		} else {
+			return color( local );
+		}
+	};
+
+	// makes red() green() blue() alpha() hue() saturation() lightness()
+	each( props, function( key, prop ) {
+		// alpha is included in more than one space
+		if ( color.fn[ key ] ) {
+			return;
+		}
+		color.fn[ key ] = function( value ) {
+			var vtype = jQuery.type( value ),
+				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
+				local = this[ fn ](),
+				cur = local[ prop.idx ],
+				match;
+
+			if ( vtype === "undefined" ) {
+				return cur;
+			}
+
+			if ( vtype === "function" ) {
+				value = value.call( this, cur );
+				vtype = jQuery.type( value );
+			}
+			if ( value == null && prop.empty ) {
+				return this;
+			}
+			if ( vtype === "string" ) {
+				match = rplusequals.exec( value );
+				if ( match ) {
+					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
+				}
+			}
+			local[ prop.idx ] = value;
+			return this[ fn ]( local );
+		};
+	});
+});
+
+// add cssHook and .fx.step function for each named hook.
+// accept a space separated string of properties
+color.hook = function( hook ) {
+	var hooks = hook.split( " " );
+	each( hooks, function( i, hook ) {
+		jQuery.cssHooks[ hook ] = {
+			set: function( elem, value ) {
+				var parsed, curElem,
+					backgroundColor = "";
+
+				if ( value !== "transparent" && ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) ) {
+					value = color( parsed || value );
+					if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
+						curElem = hook === "backgroundColor" ? elem.parentNode : elem;
+						while (
+							(backgroundColor === "" || backgroundColor === "transparent") &&
+							curElem && curElem.style
+						) {
+							try {
+								backgroundColor = jQuery.css( curElem, "backgroundColor" );
+								curElem = curElem.parentNode;
+							} catch ( e ) {
+							}
+						}
+
+						value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
+							backgroundColor :
+							"_default" );
+					}
+
+					value = value.toRgbaString();
+				}
+				try {
+					elem.style[ hook ] = value;
+				} catch( e ) {
+					// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
+				}
+			}
+		};
+		jQuery.fx.step[ hook ] = function( fx ) {
+			if ( !fx.colorInit ) {
+				fx.start = color( fx.elem, hook );
+				fx.end = color( fx.end );
+				fx.colorInit = true;
+			}
+			jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
+		};
+	});
+
+};
+
+color.hook( stepHooks );
+
+jQuery.cssHooks.borderColor = {
+	expand: function( value ) {
+		var expanded = {};
+
+		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
+			expanded[ "border" + part + "Color" ] = value;
+		});
+		return expanded;
+	}
+};
+
+// Basic color names only.
+// Usage of any of the other color names requires adding yourself or including
+// jquery.color.svg-names.js.
+colors = jQuery.Color.names = {
+	// 4.1. Basic color keywords
+	aqua: "#00ffff",
+	black: "#000000",
+	blue: "#0000ff",
+	fuchsia: "#ff00ff",
+	gray: "#808080",
+	green: "#008000",
+	lime: "#00ff00",
+	maroon: "#800000",
+	navy: "#000080",
+	olive: "#808000",
+	purple: "#800080",
+	red: "#ff0000",
+	silver: "#c0c0c0",
+	teal: "#008080",
+	white: "#ffffff",
+	yellow: "#ffff00",
+
+	// 4.2.3. "transparent" color keyword
+	transparent: [ null, null, null, 0 ],
+
+	_default: "#ffffff"
 	};
 	
-})(jQuery);
\ No newline at end of file
+}( jQuery ));
Only in opensourcepos/js: jquery.form-3.51.js
Only in pos-prod/js: jquery.form.js
Only in pos-prod/js: jquery.jkey-1.1.js
Only in opensourcepos/js: jquery.tablesorter-2.20.1.js
Only in pos-prod/js: jquery.tablesorter.min.js
Only in opensourcepos/js: jquery.tablesorter.staticrow.js
Only in opensourcepos/js: jquery.validate-1.13.1-min.js
Only in pos-prod/js: jquery.validate.min.js
diff -rBwi --ignore-file-name-case -u pos-prod/js/manage_tables.js opensourcepos/js/manage_tables.js
--- pos-prod/js/manage_tables.js	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/js/manage_tables.js	2016-05-23 15:32:31.932838989 -0700
@@ -12,8 +12,13 @@
 	}
 }
 
-function enable_search(suggest_url,confirm_search_message,ac)
+function enable_search(options)
 {
+	if (!options.format_item) {
+		format_item = function(results) {
+			return results[0];
+		};
+	}
 	//Keep track of enable_email has been called
 	if(!enable_search.enabled)
 		enable_search.enabled=true;
@@ -22,30 +27,51 @@
     {
     	$(this).attr('value','');
     });
-ac = typeof ac !== 'undefined' ? ac : true;
-if(ac) 
-{
-    $("#search").autocomplete(suggest_url,{max:100,delay:10, selectFirst: false});
-    }
+
+    var widget = $("#search").autocomplete(options.suggest_url,{max:100,delay:10, selectFirst: false,
+		formatItem : options.format_item, extraParams: options.extra_params});
     $("#search").result(function(event, data, formatted)
     {
-		do_search(true);
+		do_search(true, options.on_complete);
+    }).on("keypress", function(event) {
+		if(event.which == 13) {
+			do_search(true, options.on_complete);
+		}
     });
+    attach_search_listener();
     
 	$('#search_form').submit(function(event)
 	{
 		event.preventDefault();
-
+        // reset page number when selecting a specific page number
+		$('#limit_from').val(0);
 		if(get_selected_values().length >0)
 		{
-			if(!confirm(confirm_search_message))
+			if(!confirm(options.confirm_search_message))
 				return;
 		}
-		do_search(true);
+		do_search(true, options.on_complete);
 	});
+
+	return widget;
 }
 enable_search.enabled=false;
 
+function attach_search_listener() 
+{
+	 // prevent redirecting to link when search enabled
+    $("#pagination a").click(function(event) {
+    	  if ($("#search").val() || $("#search_form input:checked")) {
+    		  event.preventDefault();
+    		  // set limit_from to value included in the link
+    		  var uri_segments = event.currentTarget.href.split('/');
+    		  var limit_from = uri_segments.pop();
+    		  $('#limit_from').val(limit_from);
+    		  do_search(true);
+    	  }
+    });
+}
+
 function do_search(show_feedback,on_complete)
 {	
 	//If search is not enabled, don't do anything
@@ -53,21 +79,31 @@
 		return;
 		
 	if(show_feedback)
-		$('#spinner').show();
+		$('#search').addClass("ac_loading");
 		
-	$('#sortable_table tbody').load($('#search_form').attr('action'),{'search':$('#search').val()},function()
-	{
+	$.post(
+		$('#search_form').attr('action'), 
+		// serialize all the input fields in the form
+		$('#search_form').serialize(),
+		function(response) {
+			$('#sortable_table tbody').html(response.rows);
 		if(typeof on_complete=='function')
-			on_complete();
-				
-		$('#spinner').hide();
+				on_complete(response);
+			$('#search').removeClass("ac_loading");
+			//$('#spinner').hide();
 		//re-init elements in new table, as table tbody children were replaced
 		tb_init('#sortable_table a.thickbox');
-		update_sortable_table();	
-		enable_row_selection();		
+			$('#pagination').html(response.pagination);
 		$('#sortable_table tbody :checkbox').click(checkbox_click);
 		$("#select_all").attr('checked',false);
-	});
+			if (response.total_rows > 0)
+			{
+				update_sortable_table();	
+				enable_row_selection();	
+			}
+		    attach_search_listener();
+		}, "json"
+	);
 }
 
 function enable_email(email_url)
@@ -111,7 +147,7 @@
 	if(!enable_delete.enabled)
 		enable_delete.enabled=true;
 	
-	$('#delete').click(function(event)
+	$("#delete").click(function(event)
 	{
 		event.preventDefault();
 		if($("#sortable_table tbody :checkbox:checked").length >0)
@@ -119,6 +155,8 @@
 			if(confirm(confirm_message))
 			{
 				do_delete($(this).attr('href'));
+			} else {
+				return false;
 			}
 		}
 		else
@@ -149,14 +187,10 @@
 				{
 					$(this).remove();
 					//Re-init sortable table as we removed a row
-					update_sortable_table();
+					$("#sortable_table tbody tr").length > 0 && update_sortable_table();
 					
 				});
 			});	
-			// update rows that were affected by this delete
-			for(index in response.ids) {
-				update_row(response.ids[index],url.replace(/[^\/]+$/,'get_row'));
-			}
 			
 			set_feedback(response.message,'success_message',false);	
 		}
@@ -274,18 +307,22 @@
 		var sorting = $("#sortable_table")[0].config.sortList; 		
 		$("#sortable_table").trigger("sorton",[sorting]);
 	}
+	else
+	{
+		window['init_table_sorting'] && init_table_sorting();
+	}
 }
 
 function get_table_row(id) {
 	id = id || $("input[name='sale_id']").val();
 	var $element = $("#sortable_table tbody :checkbox[value='" + id + "']");
-	if ($element.index() === -1) {
-		$element = $("#sortable_table tbody a[href*='" + id + "']");
+	if ($element.length === 0) {
+		$element = $("#sortable_table tbody a[href*='/" + id + "/']");
 	}
 	return $element;
 }
 
-function update_row(row_id,url)
+function update_row(row_id,url,callback)
 {
 	$.post(url, { 'row_id': row_id },function(response)
 	{
@@ -294,7 +331,8 @@
 		row_to_update.replaceWith(response);	
 		reinit_row(row_id);
 		hightlight_row(row_id);
-	});
+		callback && typeof(callback) == "function" && callback(); 
+	}, 'html');
 }
 
 function reinit_row(checkbox_id)
Only in opensourcepos/js: nominatim.autocomplete.js
Only in opensourcepos/js: phpjsdate.js
Only in opensourcepos/js: tabcontent.js
diff -rBwi --ignore-file-name-case -u pos-prod/license/codeigniter_license.txt opensourcepos/license/codeigniter_license.txt
--- pos-prod/license/codeigniter_license.txt	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/license/codeigniter_license.txt	2016-05-23 15:32:31.932838989 -0700
@@ -1,51 +1,21 @@
-Copyright (c) 2008 - 2011, EllisLab, Inc.
-All rights reserved.
+The MIT License (MIT)
 
-This license is a legal agreement between you and EllisLab Inc. for the use
-of CodeIgniter Software (the "Software").  By obtaining the Software you
-agree to comply with the terms and conditions of this license.
+Copyright (c) 2014 - 2016, British Columbia Institute of Technology
 
-PERMITTED USE
-You are permitted to use, copy, modify, and distribute the Software and its
-documentation, with or without modification, for any purpose, provided that
-the following conditions are met:
-
-1. A copy of this license agreement must be included with the distribution.
-
-2. Redistributions of source code must retain the above copyright notice in
-   all source code files.
-
-3. Redistributions in binary form must reproduce the above copyright notice
-   in the documentation and/or other materials provided with the distribution.
-
-4. Any files that have been modified must carry notices stating the nature
-   of the change and the names of those who changed them.
-
-5. Products derived from the Software must include an acknowledgment that
-   they are derived from CodeIgniter in their documentation and/or other
-   materials provided with the distribution.
-
-6. Products derived from the Software may not be called "CodeIgniter",
-   nor may "CodeIgniter" appear in their name, without prior written
-   permission from EllisLab, Inc.
-
-INDEMNITY
-You agree to indemnify and hold harmless the authors of the Software and
-any contributors for any direct, indirect, incidental, or consequential
-third-party claims, actions or suits, as well as any related expenses,
-liabilities, damages, settlements or fees arising from your use or misuse
-of the Software, or a violation of any terms of this license.
-
-DISCLAIMER OF WARRANTY
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESSED OR
-IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF QUALITY, PERFORMANCE,
-NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.
-
-LIMITATIONS OF LIABILITY
-YOU ASSUME ALL RISK ASSOCIATED WITH THE INSTALLATION AND USE OF THE SOFTWARE.
-IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS OF THE SOFTWARE BE LIABLE
-FOR CLAIMS, DAMAGES OR OTHER LIABILITY ARISING FROM, OUT OF, OR IN CONNECTION
-WITH THE SOFTWARE. LICENSE HOLDERS ARE SOLELY RESPONSIBLE FOR DETERMINING THE
-APPROPRIATENESS OF USE AND ASSUME ALL RISKS ASSOCIATED WITH ITS USE, INCLUDING
-BUT NOT LIMITED TO THE RISKS OF PROGRAM ERRORS, DAMAGE TO EQUIPMENT, LOSS OF
-DATA OR SOFTWARE PROGRAMS, OR UNAVAILABILITY OR INTERRUPTION OF OPERATIONS.
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
diff -rBwi --ignore-file-name-case -u pos-prod/license/codeigniter_version.txt opensourcepos/license/codeigniter_version.txt
--- pos-prod/license/codeigniter_version.txt	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/license/codeigniter_version.txt	2016-05-23 15:32:31.932838989 -0700
@@ -1 +1 @@
-2.1.0
\ No newline at end of file
+3.0.5
\ No newline at end of file
Only in pos-prod/license: license.txt
Only in pos-prod: LICENSE
Only in opensourcepos: package.json
diff -rBwi --ignore-file-name-case -u pos-prod/README.md opensourcepos/README.md
--- pos-prod/README.md	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/README.md	2016-05-23 15:32:31.795841050 -0700
@@ -1,5 +1,13 @@
+Introduction
+------------
+
 Open Source Point of Sale is a web based point of sale system written in the PHP language. It uses MySQL as the data storage back-end and has a simple user interface.
 
+Badges
+------
+
+[![Build Status](https://travis-ci.org/jekkos/opensourcepos.svg?branch=master)](https://travis-ci.org/jekkos/opensourcepos)
+
 How to Install
 --------------
 1. Create/locate a new mysql database to install open source point of sale into
@@ -14,4 +22,31 @@
 password:pointofsale
 9. Enjoy
 
-A more extensive setup guide can be found at [this site](http://www.opensourceposguide.com/guide/gettingstarted/installation)
+FAQ
+---
+If a blank page (HTTP status 500) shows after search completion or receipt generation, then double check php5-gd presence in your php installation. On windows check in php.ini whether the lib is installed. On Ubuntu issue `sudo apt-get install php5-gd`. Also have a look at the Dockerfile for a complete list of recommended packages.
+
+13/01/2016: Install using Docker
+-------------------------------
+From now on ospos can be deployed using Docker on Linux, Mac or Windows. This setup dramatically reduces the number of possible issues as all setup is now done in a Dockerfile. Docker runs natively on mac and linux, but will require more overhead on windows. Please refer to the docker documentation for instructions on how to set it up on your platform.
+
+To build and run the image, issue following commands in a terminal with docker installed
+
+    docker build -t me/ospos https://github.com/jekkos/opensourcepos.git
+    docker run -d -p 80:80 me/ospos
+
+Docker will clone the latest master into the image and start a LAMP stack with the application configured. If you like to persist your changes in this install, then you can use two docker data containers to store database and filesystem changes. In this case you will need following command (first time only)
+
+    docker run -d -v /app --name="ospos" -v /var/lib/mysql --name="ospos-sql" -p 127.0.0.1:80:80 me/ospos
+
+After stopping the created container for the first time, this command will be replaced with
+
+    docker run -d -v /app --volumes-from="ospos" -v /var/lib/mysql --volumes-from="ospos-sql" -p 127.0.0.1:80:80 me/ospos
+
+Both the data and mysql directories will be persisted in a separate docker container and can be mounted within any other container using the last command. A more extensive setup guide can be found at [this site](http://www.opensourceposguide.com/guide/gettingstarted/installation)
+
+If you like the project, and you are making money out of it on a daily basis, then consider to buy me a coffee so I can keep adding features.
+
+
+[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MUN6AEG7NY6H8)
+
Only in pos-prod: README.txt
diff -rBwi --ignore-file-name-case -u pos-prod/system/.htaccess opensourcepos/system/.htaccess
--- pos-prod/system/.htaccess	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/.htaccess	2016-05-23 15:32:31.932838989 -0700
@@ -1 +1,6 @@
+<IfModule authz_core_module>
+	Require all denied
+</IfModule>
+<IfModule !authz_core_module>
 Deny from all
\ No newline at end of file
+</IfModule>
\ No newline at end of file
Only in pos-prod/system: cache
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Benchmark.php opensourcepos/system/core/Benchmark.php
--- pos-prod/system/core/Benchmark.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Benchmark.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,22 +1,44 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * CodeIgniter Benchmark Class
+ * Benchmark Class
  *
  * This class enables you to mark points and calculate the time difference
  * between them.  Memory consumption can also be displayed.
@@ -24,38 +46,37 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/benchmark.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/benchmark.html
  */
 class CI_Benchmark {
 
 	/**
-	 * List of all benchmark markers and when they were added
+	 * List of all benchmark markers
 	 *
 	 * @var array
 	 */
-	var $marker = array();
-
-	// --------------------------------------------------------------------
+	public $marker = array();
 
 	/**
 	 * Set a benchmark marker
 	 *
 	 * Multiple calls to this function can be made so that several
-	 * execution points can be timed
+	 * execution points can be timed.
 	 *
-	 * @access	public
-	 * @param	string	$name	name of the marker
+	 * @param	string	$name	Marker name
 	 * @return	void
 	 */
-	function mark($name)
+	public function mark($name)
 	{
-		$this->marker[$name] = microtime();
+		$this->marker[$name] = microtime(TRUE);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
+	 * Elapsed time
+	 *
 	 * Calculates the time difference between two marked points.
 	 *
 	 * If the first parameter is empty this function instead returns the
@@ -63,15 +84,17 @@
 	 * execution time to be shown in a template. The output class will
 	 * swap the real value for this variable.
 	 *
-	 * @access	public
-	 * @param	string	a particular marked point
-	 * @param	string	a particular marked point
-	 * @param	integer	the number of decimal places
-	 * @return	mixed
+	 * @param	string	$point1		A particular marked point
+	 * @param	string	$point2		A particular marked point
+	 * @param	int	$decimals	Number of decimal places
+	 *
+	 * @return	string	Calculated elapsed time on success,
+	 *			an '{elapsed_string}' if $point1 is empty
+	 *			or an empty string if $point1 is not found.
 	 */
-	function elapsed_time($point1 = '', $point2 = '', $decimals = 4)
+	public function elapsed_time($point1 = '', $point2 = '', $decimals = 4)
 	{
-		if ($point1 == '')
+		if ($point1 === '')
 		{
 			return '{elapsed_time}';
 		}
@@ -83,13 +106,10 @@
 
 		if ( ! isset($this->marker[$point2]))
 		{
-			$this->marker[$point2] = microtime();
+			$this->marker[$point2] = microtime(TRUE);
 		}
 
-		list($sm, $ss) = explode(' ', $this->marker[$point1]);
-		list($em, $es) = explode(' ', $this->marker[$point2]);
-
-		return number_format(($em + $es) - ($sm + $ss), $decimals);
+		return number_format($this->marker[$point2] - $this->marker[$point1], $decimals);
 	}
 
 	// --------------------------------------------------------------------
@@ -97,22 +117,17 @@
 	/**
 	 * Memory Usage
 	 *
-	 * This function returns the {memory_usage} pseudo-variable.
+	 * Simply returns the {memory_usage} marker.
+	 *
 	 * This permits it to be put it anywhere in a template
 	 * without the memory being calculated until the end.
 	 * The output class will swap the real value for this variable.
 	 *
-	 * @access	public
-	 * @return	string
+	 * @return	string	'{memory_usage}'
 	 */
-	function memory_usage()
+	public function memory_usage()
 	{
 		return '{memory_usage}';
 	}
 
 }
-
-// END CI_Benchmark class
-
-/* End of file Benchmark.php */
-/* Location: ./system/core/Benchmark.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/CodeIgniter.php opensourcepos/system/core/CodeIgniter.php
--- pos-prod/system/core/CodeIgniter.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/CodeIgniter.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * System Initialization File
@@ -23,8 +45,8 @@
  * @package		CodeIgniter
  * @subpackage	codeigniter
  * @category	Front-controller
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/
  */
 
 /**
@@ -33,37 +55,78 @@
  * @var string
  *
  */
-	define('CI_VERSION', '2.2.0');
+	define('CI_VERSION', '3.0.5');
 
-/**
- * CodeIgniter Branch (Core = TRUE, Reactor = FALSE)
- *
- * @var boolean
- *
+/*
+ * ------------------------------------------------------
+ *  Load the framework constants
+ * ------------------------------------------------------
  */
-	define('CI_CORE', FALSE);
+	if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/constants.php'))
+	{
+		require_once(APPPATH.'config/'.ENVIRONMENT.'/constants.php');
+	}
+
+	require_once(APPPATH.'config/constants.php');
 
 /*
  * ------------------------------------------------------
  *  Load the global functions
  * ------------------------------------------------------
  */
-	require(BASEPATH.'core/Common.php');
+	require_once(BASEPATH.'core/Common.php');
+
 
 /*
  * ------------------------------------------------------
- *  Load the framework constants
+ * Security procedures
  * ------------------------------------------------------
  */
-	if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/constants.php'))
+
+if ( ! is_php('5.4'))
+{
+	ini_set('magic_quotes_runtime', 0);
+
+	if ((bool) ini_get('register_globals'))
 	{
-		require(APPPATH.'config/'.ENVIRONMENT.'/constants.php');
+		$_protected = array(
+			'_SERVER',
+			'_GET',
+			'_POST',
+			'_FILES',
+			'_REQUEST',
+			'_SESSION',
+			'_ENV',
+			'_COOKIE',
+			'GLOBALS',
+			'HTTP_RAW_POST_DATA',
+			'system_path',
+			'application_folder',
+			'view_folder',
+			'_protected',
+			'_registered'
+		);
+
+		$_registered = ini_get('variables_order');
+		foreach (array('E' => '_ENV', 'G' => '_GET', 'P' => '_POST', 'C' => '_COOKIE', 'S' => '_SERVER') as $key => $superglobal)
+		{
+			if (strpos($_registered, $key) === FALSE)
+			{
+				continue;
 	}
-	else
+
+			foreach (array_keys($$superglobal) as $var)
 	{
-		require(APPPATH.'config/constants.php');
+				if (isset($GLOBALS[$var]) && ! in_array($var, $_protected, TRUE))
+				{
+					$GLOBALS[$var] = NULL;
+				}
+			}
+		}
+	}
 	}
 
+
 /*
  * ------------------------------------------------------
  *  Define a custom error handler so we can log PHP errors
@@ -69,12 +132,9 @@
  *  Define a custom error handler so we can log PHP errors
  * ------------------------------------------------------
  */
-	set_error_handler('_exception_handler');
-
-	if ( ! is_php('5.3'))
-	{
-		@set_magic_quotes_runtime(0); // Kill magic quotes
-	}
+	set_error_handler('_error_handler');
+	set_exception_handler('_exception_handler');
+	register_shutdown_function('_shutdown_handler');
 
 /*
  * ------------------------------------------------------
@@ -85,26 +145,39 @@
  * The subclass prefix allows CI to know if a core class is
  * being extended via a library in the local application
  * "libraries" folder. Since CI allows config items to be
- * overriden via data set in the main index. php file,
+ * overridden via data set in the main index.php file,
  * before proceeding we need to know if a subclass_prefix
  * override exists.  If so, we will set this value now,
  * before any classes are loaded
  * Note: Since the config file data is cached it doesn't
  * hurt to load it here.
  */
-	if (isset($assign_to_config['subclass_prefix']) AND $assign_to_config['subclass_prefix'] != '')
+	if ( ! empty($assign_to_config['subclass_prefix']))
 	{
 		get_config(array('subclass_prefix' => $assign_to_config['subclass_prefix']));
 	}
 
 /*
  * ------------------------------------------------------
- *  Set a liberal script execution time limit
+ *  Should we use a Composer autoloader?
  * ------------------------------------------------------
  */
-	if (function_exists("set_time_limit") == TRUE AND @ini_get("safe_mode") == 0)
+	if ($composer_autoload = config_item('composer_autoload'))
+	{
+		if ($composer_autoload === TRUE)
+		{
+			file_exists(APPPATH.'vendor/autoload.php')
+				? require_once(APPPATH.'vendor/autoload.php')
+				: log_message('error', '$config[\'composer_autoload\'] is set to TRUE but '.APPPATH.'vendor/autoload.php was not found.');
+		}
+		elseif (file_exists($composer_autoload))
+		{
+			require_once($composer_autoload);
+		}
+		else
 	{
-		@set_time_limit(300);
+			log_message('error', 'Could not find the specified $config[\'composer_autoload\'] path: '.$composer_autoload);
+		}
 	}
 
 /*
@@ -128,33 +201,96 @@
  *  Is there a "pre_system" hook?
  * ------------------------------------------------------
  */
-	$EXT->_call_hook('pre_system');
+	$EXT->call_hook('pre_system');
 
 /*
  * ------------------------------------------------------
  *  Instantiate the config class
  * ------------------------------------------------------
+ *
+ * Note: It is important that Config is loaded first as
+ * most other classes depend on it either directly or by
+ * depending on another class that uses it.
+ *
  */
 	$CFG =& load_class('Config', 'core');
 
 	// Do we have any manually set config items in the index.php file?
-	if (isset($assign_to_config))
+	if (isset($assign_to_config) && is_array($assign_to_config))
+	{
+		foreach ($assign_to_config as $key => $value)
 	{
-		$CFG->_assign_to_config($assign_to_config);
+			$CFG->set_item($key, $value);
+		}
 	}
 
 /*
  * ------------------------------------------------------
- *  Instantiate the UTF-8 class
+ * Important charset-related stuff
  * ------------------------------------------------------
  *
- * Note: Order here is rather important as the UTF-8
- * class needs to be used very early on, but it cannot
- * properly determine if UTf-8 can be supported until
- * after the Config class is instantiated.
+ * Configure mbstring and/or iconv if they are enabled
+ * and set MB_ENABLED and ICONV_ENABLED constants, so
+ * that we don't repeatedly do extension_loaded() or
+ * function_exists() calls.
+ *
+ * Note: UTF-8 class depends on this. It used to be done
+ * in it's constructor, but it's _not_ class-specific.
  *
  */
+	$charset = strtoupper(config_item('charset'));
+	ini_set('default_charset', $charset);
+
+	if (extension_loaded('mbstring'))
+	{
+		define('MB_ENABLED', TRUE);
+		// mbstring.internal_encoding is deprecated starting with PHP 5.6
+		// and it's usage triggers E_DEPRECATED messages.
+		@ini_set('mbstring.internal_encoding', $charset);
+		// This is required for mb_convert_encoding() to strip invalid characters.
+		// That's utilized by CI_Utf8, but it's also done for consistency with iconv.
+		mb_substitute_character('none');
+	}
+	else
+	{
+		define('MB_ENABLED', FALSE);
+	}
+
+	// There's an ICONV_IMPL constant, but the PHP manual says that using
+	// iconv's predefined constants is "strongly discouraged".
+	if (extension_loaded('iconv'))
+	{
+		define('ICONV_ENABLED', TRUE);
+		// iconv.internal_encoding is deprecated starting with PHP 5.6
+		// and it's usage triggers E_DEPRECATED messages.
+		@ini_set('iconv.internal_encoding', $charset);
+	}
+	else
+	{
+		define('ICONV_ENABLED', FALSE);
+	}
+
+	if (is_php('5.6'))
+	{
+		ini_set('php.internal_encoding', $charset);
+	}
+
+/*
+ * ------------------------------------------------------
+ *  Load compatibility features
+ * ------------------------------------------------------
+ */
+
+	require_once(BASEPATH.'core/compat/mbstring.php');
+	require_once(BASEPATH.'core/compat/hash.php');
+	require_once(BASEPATH.'core/compat/password.php');
+	require_once(BASEPATH.'core/compat/standard.php');
 
+/*
+ * ------------------------------------------------------
+ *  Instantiate the UTF-8 class
+ * ------------------------------------------------------
+ */
 	$UNI =& load_class('Utf8', 'core');
 
 /*
@@ -169,14 +305,7 @@
  *  Instantiate the routing class and set the routing
  * ------------------------------------------------------
  */
-	$RTR =& load_class('Router', 'core');
-	$RTR->_set_routing();
-
-	// Set any routing overrides that may exist in the main index file
-	if (isset($routing))
-	{
-		$RTR->_set_overrides($routing);
-	}
+	$RTR =& load_class('Router', 'core', isset($routing) ? $routing : NULL);
 
 /*
  * ------------------------------------------------------
@@ -190,13 +319,10 @@
  *	Is there a valid cache file?  If so, we're done...
  * ------------------------------------------------------
  */
-	if ($EXT->_call_hook('cache_override') === FALSE)
-	{
-		if ($OUT->_display_cache($CFG, $URI) == TRUE)
+	if ($EXT->call_hook('cache_override') === FALSE && $OUT->_display_cache($CFG, $URI) === TRUE)
 		{
 			exit;
 		}
-	}
 
 /*
  * -----------------------------------------------------
@@ -226,8 +352,15 @@
  *
  */
 	// Load the base controller class
-	require BASEPATH.'core/Controller.php';
+	require_once BASEPATH.'core/Controller.php';
 
+	/**
+	 * Reference to the CI_Controller method.
+	 *
+	 * Returns current CI instance object
+	 *
+	 * @return CI_Controller
+	 */
 	function &get_instance()
 	{
 		return CI_Controller::get_instance();
@@ -233,69 +366,128 @@
 		return CI_Controller::get_instance();
 	}
 
-
 	if (file_exists(APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php'))
 	{
-		require APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php';
+		require_once APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php';
 	}
 
-	// Load the local application controller
-	// Note: The Router class automatically validates the controller path using the router->_validate_request().
-	// If this include fails it means that the default controller in the Routes.php file is not resolving to something valid.
-	if ( ! file_exists(APPPATH.'controllers/'.$RTR->fetch_directory().$RTR->fetch_class().'.php'))
-	{
-		show_error('Unable to load your default controller. Please make sure the controller specified in your Routes.php file is valid.');
-	}
-
-	include(APPPATH.'controllers/'.$RTR->fetch_directory().$RTR->fetch_class().'.php');
-
 	// Set a mark point for benchmarking
 	$BM->mark('loading_time:_base_classes_end');
 
 /*
  * ------------------------------------------------------
- *  Security check
+ *  Sanity checks
  * ------------------------------------------------------
  *
- *  None of the functions in the app controller or the
- *  loader class can be called via the URI, nor can
- *  controller functions that begin with an underscore
+ *  The Router class has already validated the request,
+ *  leaving us with 3 options here:
+ *
+ *	1) an empty class name, if we reached the default
+ *	   controller, but it didn't exist;
+ *	2) a query string which doesn't go through a
+ *	   file_exists() check
+ *	3) a regular request for a non-existing page
+ *
+ *  We handle all of these as a 404 error.
+ *
+ *  Furthermore, none of the methods in the app controller
+ *  or the loader class can be called via the URI, nor can
+ *  controller methods that begin with an underscore.
  */
-	$class  = $RTR->fetch_class();
-	$method = $RTR->fetch_method();
 
-	if ( ! class_exists($class)
-		OR strncmp($method, '_', 1) == 0
-		OR in_array(strtolower($method), array_map('strtolower', get_class_methods('CI_Controller')))
-		)
+	$e404 = FALSE;
+	$class = ucfirst($RTR->class);
+	$method = $RTR->method;
+
+	if (empty($class) OR ! file_exists(APPPATH.'controllers/'.$RTR->directory.$class.'.php'))
 	{
-		if ( ! empty($RTR->routes['404_override']))
+		$e404 = TRUE;
+	}
+	else
+	{
+		require_once(APPPATH.'controllers/'.$RTR->directory.$class.'.php');
+
+		if ( ! class_exists($class, FALSE) OR $method[0] === '_' OR method_exists('CI_Controller', $method))
 		{
-			$x = explode('/', $RTR->routes['404_override']);
-			$class = $x[0];
-			$method = (isset($x[1]) ? $x[1] : 'index');
-			if ( ! class_exists($class))
+			$e404 = TRUE;
+		}
+		elseif (method_exists($class, '_remap'))
+		{
+			$params = array($method, array_slice($URI->rsegments, 2));
+			$method = '_remap';
+		}
+		// WARNING: It appears that there are issues with is_callable() even in PHP 5.2!
+		// Furthermore, there are bug reports and feature/change requests related to it
+		// that make it unreliable to use in this context. Please, DO NOT change this
+		// work-around until a better alternative is available.
+		elseif ( ! in_array(strtolower($method), array_map('strtolower', get_class_methods($class)), TRUE))
+		{
+			$e404 = TRUE;
+		}
+	}
+
+	if ($e404)
 			{
-				if ( ! file_exists(APPPATH.'controllers/'.$class.'.php'))
+		if ( ! empty($RTR->routes['404_override']))
 				{
-					show_404("{$class}/{$method}");
+			if (sscanf($RTR->routes['404_override'], '%[^/]/%s', $error_class, $error_method) !== 2)
+			{
+				$error_method = 'index';
 				}
 
-				include_once(APPPATH.'controllers/'.$class.'.php');
+			$error_class = ucfirst($error_class);
+
+			if ( ! class_exists($error_class, FALSE))
+			{
+				if (file_exists(APPPATH.'controllers/'.$RTR->directory.$error_class.'.php'))
+				{
+					require_once(APPPATH.'controllers/'.$RTR->directory.$error_class.'.php');
+					$e404 = ! class_exists($error_class, FALSE);
+				}
+				// Were we in a directory? If so, check for a global override
+				elseif ( ! empty($RTR->directory) && file_exists(APPPATH.'controllers/'.$error_class.'.php'))
+				{
+					require_once(APPPATH.'controllers/'.$error_class.'.php');
+					if (($e404 = ! class_exists($error_class, FALSE)) === FALSE)
+					{
+						$RTR->directory = '';
+					}
+				}
+			}
+			else
+			{
+				$e404 = FALSE;
+			}
 			}
+
+		// Did we reset the $e404 flag? If so, set the rsegments, starting from index 1
+		if ( ! $e404)
+		{
+			$class = $error_class;
+			$method = $error_method;
+
+			$URI->rsegments = array(
+				1 => $class,
+				2 => $method
+			);
 		}
 		else
 		{
-			show_404("{$class}/{$method}");
+			show_404($RTR->directory.$class.'/'.$method);
 		}
 	}
 
+	if ($method !== '_remap')
+	{
+		$params = array_slice($URI->rsegments, 2);
+	}
+
 /*
  * ------------------------------------------------------
  *  Is there a "pre_controller" hook?
  * ------------------------------------------------------
  */
-	$EXT->_call_hook('pre_controller');
+	$EXT->call_hook('pre_controller');
 
 /*
  * ------------------------------------------------------
@@ -312,53 +504,14 @@
  *  Is there a "post_controller_constructor" hook?
  * ------------------------------------------------------
  */
-	$EXT->_call_hook('post_controller_constructor');
+	$EXT->call_hook('post_controller_constructor');
 
 /*
  * ------------------------------------------------------
  *  Call the requested method
  * ------------------------------------------------------
  */
-	// Is there a "remap" function? If so, we call it instead
-	if (method_exists($CI, '_remap'))
-	{
-		$CI->_remap($method, array_slice($URI->rsegments, 2));
-	}
-	else
-	{
-		// is_callable() returns TRUE on some versions of PHP 5 for private and protected
-		// methods, so we'll use this workaround for consistent behavior
-		if ( ! in_array(strtolower($method), array_map('strtolower', get_class_methods($CI))))
-		{
-			// Check and see if we are using a 404 override and use it.
-			if ( ! empty($RTR->routes['404_override']))
-			{
-				$x = explode('/', $RTR->routes['404_override']);
-				$class = $x[0];
-				$method = (isset($x[1]) ? $x[1] : 'index');
-				if ( ! class_exists($class))
-				{
-					if ( ! file_exists(APPPATH.'controllers/'.$class.'.php'))
-					{
-						show_404("{$class}/{$method}");
-					}
-
-					include_once(APPPATH.'controllers/'.$class.'.php');
-					unset($CI);
-					$CI = new $class();
-				}
-			}
-			else
-			{
-				show_404("{$class}/{$method}");
-			}
-		}
-
-		// Call the requested method.
-		// Any URI segments present (besides the class/function) will be passed to the method for convenience
-		call_user_func_array(array(&$CI, $method), array_slice($URI->rsegments, 2));
-	}
-
+	call_user_func_array(array(&$CI, $method), $params);
 
 	// Mark a benchmark end point
 	$BM->mark('controller_execution_time_( '.$class.' / '.$method.' )_end');
@@ -368,14 +521,14 @@
  *  Is there a "post_controller" hook?
  * ------------------------------------------------------
  */
-	$EXT->_call_hook('post_controller');
+	$EXT->call_hook('post_controller');
 
 /*
  * ------------------------------------------------------
  *  Send the final rendered output to the browser
  * ------------------------------------------------------
  */
-	if ($EXT->_call_hook('display_override') === FALSE)
+	if ($EXT->call_hook('display_override') === FALSE)
 	{
 		$OUT->_display();
 	}
@@ -385,18 +538,4 @@
  *  Is there a "post_system" hook?
  * ------------------------------------------------------
  */
-	$EXT->_call_hook('post_system');
-
-/*
- * ------------------------------------------------------
- *  Close the DB connection if one exists
- * ------------------------------------------------------
- */
-	if (class_exists('CI_DB') AND isset($CI->db))
-	{
-		$CI->db->close();
-	}
-
-
-/* End of file CodeIgniter.php */
-/* Location: ./system/core/CodeIgniter.php */
\ No newline at end of file
+	$EXT->call_hook('post_system');
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Common.php opensourcepos/system/core/Common.php
--- pos-prod/system/core/Common.php	2014-10-08 16:36:12.000000000 -0700
+++ opensourcepos/system/core/Common.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Common Functions
@@ -23,32 +45,28 @@
  * @package		CodeIgniter
  * @subpackage	codeigniter
  * @category	Common Functions
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('is_php'))
+{
 /**
-* Determines if the current version of PHP is greater then the supplied value
-*
-* Since there are a few places where we conditionally test for PHP > 5
-* we'll set a static variable.
+	 * Determines if the current version of PHP is equal to or greater than the supplied value
 *
-* @access	public
 * @param	string
 * @return	bool	TRUE if the current version is $version or higher
 */
-if ( ! function_exists('is_php'))
-{
-	function is_php($version = '5.0.0')
+	function is_php($version)
 	{
 		static $_is_php;
 		$version = (string)$version;
 
 		if ( ! isset($_is_php[$version]))
 		{
-			$_is_php[$version] = (version_compare(PHP_VERSION, $version) < 0) ? FALSE : TRUE;
+			$_is_php[$version] = version_compare(PHP_VERSION, $version, '>=');
 		}
 
 		return $_is_php[$version];
@@ -57,6 +75,8 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('is_really_writable'))
+{
 /**
  * Tests for file writability
  *
@@ -64,36 +84,35 @@
  * the file, based on the read-only attribute.  is_writable() is also unreliable
  * on Unix servers if safe_mode is on.
  *
- * @access	private
- * @return	void
+	 * @link	https://bugs.php.net/bug.php?id=54709
+	 * @param	string
+	 * @return	bool
  */
-if ( ! function_exists('is_really_writable'))
-{
 	function is_really_writable($file)
 	{
 		// If we're on a Unix server with safe_mode off we call is_writable
-		if (DIRECTORY_SEPARATOR == '/' AND @ini_get("safe_mode") == FALSE)
+		if (DIRECTORY_SEPARATOR === '/' && (is_php('5.4') OR ! ini_get('safe_mode')))
 		{
 			return is_writable($file);
 		}
 
-		// For windows servers and safe_mode "on" installations we'll actually
-		// write a file then read it.  Bah...
+		/* For Windows servers and safe_mode "on" installations we'll actually
+		 * write a file then read it. Bah...
+		 */
 		if (is_dir($file))
 		{
-			$file = rtrim($file, '/').'/'.md5(mt_rand(1,100).mt_rand(1,100));
-
-			if (($fp = @fopen($file, FOPEN_WRITE_CREATE)) === FALSE)
+			$file = rtrim($file, '/').'/'.md5(mt_rand());
+			if (($fp = @fopen($file, 'ab')) === FALSE)
 			{
 				return FALSE;
 			}
 
 			fclose($fp);
-			@chmod($file, DIR_WRITE_MODE);
+			@chmod($file, 0777);
 			@unlink($file);
 			return TRUE;
 		}
-		elseif ( ! is_file($file) OR ($fp = @fopen($file, FOPEN_WRITE_CREATE)) === FALSE)
+		elseif ( ! is_file($file) OR ($fp = @fopen($file, 'ab')) === FALSE)
 		{
 			return FALSE;
 		}
@@ -105,6 +124,8 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('load_class'))
+{
 /**
 * Class registry
 *
@@ -112,15 +133,12 @@
 * exist it is instantiated and set to a static variable.  If it has
 * previously been instantiated the variable is returned.
 *
-* @access	public
 * @param	string	the class name being requested
 * @param	string	the directory where the class should be found
-* @param	string	the class name prefix
+	 * @param	string	an optional argument to pass to the class constructor
 * @return	object
 */
-if ( ! function_exists('load_class'))
-{
-	function &load_class($class, $directory = 'libraries', $prefix = 'CI_')
+	function &load_class($class, $directory = 'libraries', $param = NULL)
 	{
 		static $_classes = array();
 
@@ -138,11 +156,11 @@
 		{
 			if (file_exists($path.$directory.'/'.$class.'.php'))
 			{
-				$name = $prefix.$class;
+				$name = 'CI_'.$class;
 
-				if (class_exists($name) === FALSE)
+				if (class_exists($name, FALSE) === FALSE)
 				{
-					require($path.$directory.'/'.$class.'.php');
+					require_once($path.$directory.'/'.$class.'.php');
 				}
 
 				break;
@@ -154,44 +172,48 @@
 		{
 			$name = config_item('subclass_prefix').$class;
 
-			if (class_exists($name) === FALSE)
+			if (class_exists($name, FALSE) === FALSE)
 			{
-				require(APPPATH.$directory.'/'.config_item('subclass_prefix').$class.'.php');
+				require_once(APPPATH.$directory.'/'.$name.'.php');
 			}
 		}
 
 		// Did we find the class?
 		if ($name === FALSE)
 		{
-			// Note: We use exit() rather then show_error() in order to avoid a
-			// self-referencing loop with the Excptions class
-			exit('Unable to locate the specified class: '.$class.'.php');
+			// Note: We use exit() rather than show_error() in order to avoid a
+			// self-referencing loop with the Exceptions class
+			set_status_header(503);
+			echo 'Unable to locate the specified class: '.$class.'.php';
+			exit(5); // EXIT_UNK_CLASS
 		}
 
 		// Keep track of what we just loaded
 		is_loaded($class);
 
-		$_classes[$class] = new $name();
+		$_classes[$class] = isset($param)
+			? new $name($param)
+			: new $name();
 		return $_classes[$class];
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('is_loaded'))
+{
 /**
 * Keeps track of which libraries have been loaded.  This function is
 * called by the load_class() function above
 *
-* @access	public
+	 * @param	string
 * @return	array
 */
-if ( ! function_exists('is_loaded'))
-{
 	function &is_loaded($class = '')
 	{
 		static $_is_loaded = array();
 
-		if ($class != '')
+		if ($class !== '')
 		{
 			$_is_loaded[strtolower($class)] = $class;
 		}
@@ -202,117 +224,214 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('get_config'))
+{
 /**
 * Loads the main config.php file
 *
 * This function lets us grab the config file even if the Config class
 * hasn't been instantiated yet
 *
-* @access	private
+	 * @param	array
 * @return	array
 */
-if ( ! function_exists('get_config'))
+	function &get_config(Array $replace = array())
 {
-	function &get_config($replace = array())
-	{
-		static $_config;
+		static $config;
 
-		if (isset($_config))
+		if (empty($config))
 		{
-			return $_config[0];
+			$file_path = APPPATH.'config/config.php';
+			$found = FALSE;
+			if (file_exists($file_path))
+			{
+				$found = TRUE;
+				require($file_path);
 		}
 
 		// Is the config file in the environment folder?
-		if ( ! defined('ENVIRONMENT') OR ! file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/config.php'))
+			if (file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/config.php'))
 		{
-			$file_path = APPPATH.'config/config.php';
+				require($file_path);
 		}
-
-		// Fetch the config file
-		if ( ! file_exists($file_path))
+			elseif ( ! $found)
 		{
-			exit('The configuration file does not exist.');
+				set_status_header(503);
+				echo 'The configuration file does not exist.';
+				exit(3); // EXIT_CONFIG
 		}
 
-		require($file_path);
-
 		// Does the $config array exist in the file?
 		if ( ! isset($config) OR ! is_array($config))
 		{
-			exit('Your config file does not appear to be formatted correctly.');
+				set_status_header(503);
+				echo 'Your config file does not appear to be formatted correctly.';
+				exit(3); // EXIT_CONFIG
+			}
 		}
 
-		// Are any values being dynamically replaced?
-		if (count($replace) > 0)
-		{
+		// Are any values being dynamically added or replaced?
 			foreach ($replace as $key => $val)
 			{
-				if (isset($config[$key]))
-				{
 					$config[$key] = $val;
 				}
-			}
-		}
 
-		return $_config[0] =& $config;
+		return $config;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('config_item'))
+{
 /**
 * Returns the specified config item
 *
-* @access	public
+	 * @param	string
 * @return	mixed
 */
-if ( ! function_exists('config_item'))
-{
 	function config_item($item)
 	{
-		static $_config_item = array();
+		static $_config;
+
+		if (empty($_config))
+		{
+			// references cannot be directly assigned to static variables, so we use an array
+			$_config[0] =& get_config();
+		}
+
+		return isset($_config[0][$item]) ? $_config[0][$item] : NULL;
+	}
+}
+
+// ------------------------------------------------------------------------
+
+if ( ! function_exists('get_mimes'))
+{
+	/**
+	 * Returns the MIME types array from config/mimes.php
+	 *
+	 * @return	array
+	 */
+	function &get_mimes()
+	{
+		static $_mimes;
 
-		if ( ! isset($_config_item[$item]))
+		if (empty($_mimes))
+		{
+			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
+			{
+				$_mimes = include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
+			}
+			elseif (file_exists(APPPATH.'config/mimes.php'))
+			{
+				$_mimes = include(APPPATH.'config/mimes.php');
+			}
+			else
 		{
-			$config =& get_config();
+				$_mimes = array();
+			}
+		}
+
+		return $_mimes;
+	}
+}
+
+// ------------------------------------------------------------------------
 
-			if ( ! isset($config[$item]))
+if ( ! function_exists('is_https'))
+{
+	/**
+	 * Is HTTPS?
+	 *
+	 * Determines if the application is accessed via an encrypted
+	 * (HTTPS) connection.
+	 *
+	 * @return	bool
+	 */
+	function is_https()
+	{
+		if ( ! empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off')
+		{
+			return TRUE;
+		}
+		elseif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https')
 			{
+			return TRUE;
+		}
+		elseif ( ! empty($_SERVER['HTTP_FRONT_END_HTTPS']) && strtolower($_SERVER['HTTP_FRONT_END_HTTPS']) !== 'off')
+		{
+			return TRUE;
+		}
+
 				return FALSE;
 			}
-			$_config_item[$item] = $config[$item];
 		}
 
-		return $_config_item[$item];
+// ------------------------------------------------------------------------
+
+if ( ! function_exists('is_cli'))
+{
+
+	/**
+	 * Is CLI?
+	 *
+	 * Test to see if a request was made from the command line.
+	 *
+	 * @return 	bool
+	 */
+	function is_cli()
+	{
+		return (PHP_SAPI === 'cli' OR defined('STDIN'));
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('show_error'))
+{
 /**
 * Error Handler
 *
 * This function lets us invoke the exception class and
 * display errors using the standard error template located
-* in application/errors/errors.php
+	 * in application/views/errors/error_general.php
 * This function will send the error page directly to the
 * browser and exit.
 *
-* @access	public
+	 * @param	string
+	 * @param	int
+	 * @param	string
 * @return	void
 */
-if ( ! function_exists('show_error'))
-{
 	function show_error($message, $status_code = 500, $heading = 'An Error Was Encountered')
 	{
+		$status_code = abs($status_code);
+		if ($status_code < 100)
+		{
+			$exit_status = $status_code + 9; // 9 is EXIT__AUTO_MIN
+			if ($exit_status > 125) // 125 is EXIT__AUTO_MAX
+			{
+				$exit_status = 1; // EXIT_ERROR
+			}
+
+			$status_code = 500;
+		}
+		else
+		{
+			$exit_status = 1; // EXIT_ERROR
+		}
+
 		$_error =& load_class('Exceptions', 'core');
 		echo $_error->show_error($heading, $message, 'error_general', $status_code);
-		exit;
+		exit($exit_status);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('show_404'))
+{
 /**
 * 404 Page Handler
 *
@@ -320,61 +439,76 @@
 * However, instead of the standard error template it displays
 * 404 errors.
 *
-* @access	public
+	 * @param	string
+	 * @param	bool
 * @return	void
 */
-if ( ! function_exists('show_404'))
-{
 	function show_404($page = '', $log_error = TRUE)
 	{
 		$_error =& load_class('Exceptions', 'core');
 		$_error->show_404($page, $log_error);
-		exit;
+		exit(4); // EXIT_UNKNOWN_FILE
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('log_message'))
+{
 /**
 * Error Logging Interface
 *
 * We use this as a simple mechanism to access the logging
 * class and send messages to be logged.
 *
-* @access	public
+	 * @param	string	the error level: 'error', 'debug' or 'info'
+	 * @param	string	the error message
 * @return	void
 */
-if ( ! function_exists('log_message'))
-{
-	function log_message($level = 'error', $message, $php_error = FALSE)
+	function log_message($level, $message)
 	{
 		static $_log;
 
-		if (config_item('log_threshold') == 0)
+		if ($_log === NULL)
 		{
-			return;
+			// references cannot be directly assigned to static variables, so we use an array
+			$_log[0] =& load_class('Log', 'core');
 		}
 
-		$_log =& load_class('Log');
-		$_log->write_log($level, $message, $php_error);
+		$_log[0]->write_log($level, $message);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_status_header'))
+{
 /**
  * Set HTTP Status Header
  *
- * @access	public
  * @param	int		the status code
  * @param	string
  * @return	void
  */
-if ( ! function_exists('set_status_header'))
-{
 	function set_status_header($code = 200, $text = '')
 	{
+		if (is_cli())
+		{
+			return;
+		}
+
+		if (empty($code) OR ! is_numeric($code))
+		{
+			show_error('Status codes must be numeric', 500);
+		}
+
+		if (empty($text))
+		{
+			is_int($code) OR $code = (int) $code;
 		$stati = array(
+				100	=> 'Continue',
+				101	=> 'Switching Protocols',
+
 							200	=> 'OK',
 							201	=> 'Created',
 							202	=> 'Accepted',
@@ -386,12 +520,14 @@
 							300	=> 'Multiple Choices',
 							301	=> 'Moved Permanently',
 							302	=> 'Found',
+				303	=> 'See Other',
 							304	=> 'Not Modified',
 							305	=> 'Use Proxy',
 							307	=> 'Temporary Redirect',
 
 							400	=> 'Bad Request',
 							401	=> 'Unauthorized',
+				402	=> 'Payment Required',
 							403	=> 'Forbidden',
 							404	=> 'Not Found',
 							405	=> 'Method Not Allowed',
@@ -407,6 +543,7 @@
 							415	=> 'Unsupported Media Type',
 							416	=> 'Requested Range Not Satisfiable',
 							417	=> 'Expectation Failed',
+				422	=> 'Unprocessable Entity',
 
 							500	=> 'Internal Server Error',
 							501	=> 'Not Implemented',
@@ -416,108 +553,167 @@
 							505	=> 'HTTP Version Not Supported'
 						);
 
-		if ($code == '' OR ! is_numeric($code))
-		{
-			show_error('Status codes must be numeric', 500);
-		}
-
-		if (isset($stati[$code]) AND $text == '')
+			if (isset($stati[$code]))
 		{
 			$text = $stati[$code];
 		}
-
-		if ($text == '')
+			else
 		{
 			show_error('No status text available.  Please check your status code number or supply your own message text.', 500);
 		}
-
-		$server_protocol = (isset($_SERVER['SERVER_PROTOCOL'])) ? $_SERVER['SERVER_PROTOCOL'] : FALSE;
-
-		if (substr(php_sapi_name(), 0, 3) == 'cgi')
-		{
-			header("Status: {$code} {$text}", TRUE);
 		}
-		elseif ($server_protocol == 'HTTP/1.1' OR $server_protocol == 'HTTP/1.0')
+
+		if (strpos(PHP_SAPI, 'cgi') === 0)
 		{
-			header($server_protocol." {$code} {$text}", TRUE, $code);
+			header('Status: '.$code.' '.$text, TRUE);
 		}
 		else
 		{
-			header("HTTP/1.1 {$code} {$text}", TRUE, $code);
+			$server_protocol = isset($_SERVER['SERVER_PROTOCOL']) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.1';
+			header($server_protocol.' '.$code.' '.$text, TRUE, $code);
 		}
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('_error_handler'))
+{
 /**
-* Exception Handler
+	 * Error Handler
 *
-* This is the custom exception handler that is declaired at the top
-* of Codeigniter.php.  The main reason we use this is to permit
+	 * This is the custom error handler that is declared at the (relative)
+	 * top of CodeIgniter.php. The main reason we use this is to permit
 * PHP errors to be logged in our own log files since the user may
-* not have access to server logs. Since this function
-* effectively intercepts PHP errors, however, we also need
-* to display errors based on the current error_reporting level.
+	 * not have access to server logs. Since this function effectively
+	 * intercepts PHP errors, however, we also need to display errors
+	 * based on the current error_reporting level.
 * We do that with the use of a PHP error template.
 *
-* @access	private
+	 * @param	int	$severity
+	 * @param	string	$message
+	 * @param	string	$filepath
+	 * @param	int	$line
 * @return	void
 */
-if ( ! function_exists('_exception_handler'))
+	function _error_handler($severity, $message, $filepath, $line)
 {
-	function _exception_handler($severity, $message, $filepath, $line)
+		$is_error = (((E_ERROR | E_COMPILE_ERROR | E_CORE_ERROR | E_USER_ERROR) & $severity) === $severity);
+
+		// When an error occurred, set the status header to '500 Internal Server Error'
+		// to indicate to the client something went wrong.
+		// This can't be done within the $_error->show_php_error method because
+		// it is only called when the display_errors flag is set (which isn't usually
+		// the case in a production environment) or when errors are ignored because
+		// they are above the error_reporting threshold.
+		if ($is_error)
 	{
-		 // We don't bother with "strict" notices since they tend to fill up
-		 // the log file with excess information that isn't normally very helpful.
-		 // For example, if you are running PHP 5 and you use version 4 style
-		 // class functions (without prefixes like "public", "private", etc.)
-		 // you'll get notices telling you that these have been deprecated.
-		if ($severity == E_STRICT)
+			set_status_header(500);
+		}
+
+		// Should we ignore the error? We'll get the current error_reporting
+		// level and add its bits with the severity bits to find out.
+		if (($severity & error_reporting()) !== $severity)
 		{
 			return;
 		}
 
 		$_error =& load_class('Exceptions', 'core');
+		$_error->log_exception($severity, $message, $filepath, $line);
 
-		// Should we display the error? We'll get the current error_reporting
-		// level and add its bits with the severity bits to find out.
-		if (($severity & error_reporting()) == $severity)
+		// Should we display the error?
+		if (str_ireplace(array('off', 'none', 'no', 'false', 'null'), '', ini_get('display_errors')))
 		{
 			$_error->show_php_error($severity, $message, $filepath, $line);
 		}
 
-		// Should we log the error?  No?  We're done...
-		if (config_item('log_threshold') == 0)
+		// If the error is fatal, the execution of the script should be stopped because
+		// errors can't be recovered from. Halting the script conforms with PHP's
+		// default error handling. See http://www.php.net/manual/en/errorfunc.constants.php
+		if ($is_error)
 		{
-			return;
+			exit(1); // EXIT_ERROR
+		}
+	}
 		}
 
-		$_error->log_exception($severity, $message, $filepath, $line);
+// ------------------------------------------------------------------------
+
+if ( ! function_exists('_exception_handler'))
+{
+	/**
+	 * Exception Handler
+	 *
+	 * Sends uncaught exceptions to the logger and displays them
+	 * only if display_errors is On so that they don't show up in
+	 * production environments.
+	 *
+	 * @param	Exception	$exception
+	 * @return	void
+	 */
+	function _exception_handler($exception)
+	{
+		$_error =& load_class('Exceptions', 'core');
+		$_error->log_exception('error', 'Exception: '.$exception->getMessage(), $exception->getFile(), $exception->getLine());
+
+		// Should we display the error?
+		if (str_ireplace(array('off', 'none', 'no', 'false', 'null'), '', ini_get('display_errors')))
+		{
+			$_error->show_exception($exception);
+		}
+
+		exit(1); // EXIT_ERROR
+	}
+}
+
+// ------------------------------------------------------------------------
+
+if ( ! function_exists('_shutdown_handler'))
+{
+	/**
+	 * Shutdown Handler
+	 *
+	 * This is the shutdown handler that is declared at the top
+	 * of CodeIgniter.php. The main reason we use this is to simulate
+	 * a complete custom exception handler.
+	 *
+	 * E_STRICT is purposively neglected because such events may have
+	 * been caught. Duplication or none? None is preferred for now.
+	 *
+	 * @link	http://insomanic.me.uk/post/229851073/php-trick-catching-fatal-errors-e-error-with-a
+	 * @return	void
+	 */
+	function _shutdown_handler()
+	{
+		$last_error = error_get_last();
+		if (isset($last_error) &&
+			($last_error['type'] & (E_ERROR | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING)))
+		{
+			_error_handler($last_error['type'], $last_error['message'], $last_error['file'], $last_error['line']);
+		}
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('remove_invisible_characters'))
+{
 /**
  * Remove Invisible Characters
  *
  * This prevents sandwiching null characters
  * between ascii characters, like Java\0script.
  *
- * @access	public
  * @param	string
+	 * @param	bool
  * @return	string
  */
-if ( ! function_exists('remove_invisible_characters'))
-{
 	function remove_invisible_characters($str, $url_encoded = TRUE)
 	{
 		$non_displayables = array();
 		
-		// every control character except newline (dec 10)
-		// carriage return (dec 13), and horizontal tab (dec 09)
-		
+		// every control character except newline (dec 10),
+		// carriage return (dec 13) and horizontal tab (dec 09)
 		if ($url_encoded)
 		{
 			$non_displayables[] = '/%0[0-8bcef]/';	// url encoded 00-08, 11, 12, 14, 15
@@ -538,26 +734,118 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('html_escape'))
+{
 /**
-* Returns HTML escaped variable
+	 * Returns HTML escaped variable.
 *
-* @access	public
-* @param	mixed
-* @return	mixed
+	 * @param	mixed	$var		The input string or array of strings to be escaped.
+	 * @param	bool	$double_encode	$double_encode set to FALSE prevents escaping twice.
+	 * @return	mixed			The escaped string or array of strings as a result.
 */
-if ( ! function_exists('html_escape'))
+	function html_escape($var, $double_encode = TRUE)
 {
-	function html_escape($var)
+		if (empty($var))
 	{
+			return $var;
+		}
+
 		if (is_array($var))
 		{
-			return array_map('html_escape', $var);
+			foreach (array_keys($var) as $key)
+			{
+				$var[$key] = html_escape($var[$key], $double_encode);
 		}
-		else
+
+			return $var;
+		}
+
+		return htmlspecialchars($var, ENT_QUOTES, config_item('charset'), $double_encode);
+	}
+}
+
+// ------------------------------------------------------------------------
+
+if ( ! function_exists('_stringify_attributes'))
+{
+	/**
+	 * Stringify attributes for use in HTML tags.
+	 *
+	 * Helper function used to convert a string, array, or object
+	 * of attributes to a string.
+	 *
+	 * @param	mixed	string, array, object
+	 * @param	bool
+	 * @return	string
+	 */
+	function _stringify_attributes($attributes, $js = FALSE)
 		{
-			return htmlspecialchars($var, ENT_QUOTES, config_item('charset'));
+		$atts = NULL;
+
+		if (empty($attributes))
+		{
+			return $atts;
+		}
+
+		if (is_string($attributes))
+		{
+			return ' '.$attributes;
+		}
+
+		$attributes = (array) $attributes;
+
+		foreach ($attributes as $key => $val)
+		{
+			$atts .= ($js) ? $key.'='.$val.',' : ' '.$key.'="'.$val.'"';
+		}
+
+		return rtrim($atts, ',');
+	}
 		}
+
+// ------------------------------------------------------------------------
+
+if ( ! function_exists('function_usable'))
+{
+	/**
+	 * Function usable
+	 *
+	 * Executes a function_exists() check, and if the Suhosin PHP
+	 * extension is loaded - checks whether the function that is
+	 * checked might be disabled in there as well.
+	 *
+	 * This is useful as function_exists() will return FALSE for
+	 * functions disabled via the *disable_functions* php.ini
+	 * setting, but not for *suhosin.executor.func.blacklist* and
+	 * *suhosin.executor.disable_eval*. These settings will just
+	 * terminate script execution if a disabled function is executed.
+	 *
+	 * The above described behavior turned out to be a bug in Suhosin,
+	 * but even though a fix was commited for 0.9.34 on 2012-02-12,
+	 * that version is yet to be released. This function will therefore
+	 * be just temporary, but would probably be kept for a few years.
+	 *
+	 * @link	http://www.hardened-php.net/suhosin/
+	 * @param	string	$function_name	Function to check for
+	 * @return	bool	TRUE if the function exists and is safe to call,
+	 *			FALSE otherwise.
+	 */
+	function function_usable($function_name)
+	{
+		static $_suhosin_func_blacklist;
+
+		if (function_exists($function_name))
+		{
+			if ( ! isset($_suhosin_func_blacklist))
+			{
+				$_suhosin_func_blacklist = extension_loaded('suhosin')
+					? explode(',', trim(ini_get('suhosin.executor.func.blacklist')))
+					: array();
+			}
+
+			return ! in_array($function_name, $_suhosin_func_blacklist, TRUE);
+		}
+
+		return FALSE;
 	}
 }
-/* End of file Common.php */
-/* Location: ./system/core/Common.php */
Only in opensourcepos/system/core: compat
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Config.php opensourcepos/system/core/Config.php
--- pos-prod/system/core/Config.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Config.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,30 +1,52 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * CodeIgniter Config Class
+ * Config Class
  *
  * This class contains functions that enable config files to be managed
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/config.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/config.html
  */
 class CI_Config {
 
@@ -33,46 +55,53 @@
 	 *
 	 * @var array
 	 */
-	var $config = array();
+	public $config = array();
+
 	/**
 	 * List of all loaded config files
 	 *
 	 * @var array
 	 */
-	var $is_loaded = array();
+	public $is_loaded =	array();
+
 	/**
-	 * List of paths to search when trying to load a config file
+	 * List of paths to search when trying to load a config file.
 	 *
+	 * @used-by	CI_Loader
 	 * @var array
 	 */
-	var $_config_paths = array(APPPATH);
+	public $_config_paths =	array(APPPATH);
+
+	// --------------------------------------------------------------------
 
 	/**
-	 * Constructor
+	 * Class constructor
 	 *
-	 * Sets the $config data from the primary config.php file as a class variable
+	 * Sets the $config data from the primary config.php file as a class variable.
 	 *
-	 * @access   public
-	 * @param   string	the config file name
-	 * @param   boolean  if configuration values should be loaded into their own section
-	 * @param   boolean  true if errors should just return false, false if an error message should be displayed
-	 * @return  boolean  if the file was successfully loaded or not
+	 * @return	void
 	 */
-	function __construct()
+	public function __construct()
 	{
 		$this->config =& get_config();
-		log_message('debug', "Config Class Initialized");
 
 		// Set the base_url automatically if none was provided
-		if ($this->config['base_url'] == '')
+		if (empty($this->config['base_url']))
 		{
-			if (isset($_SERVER['HTTP_HOST']))
+			if (isset($_SERVER['SERVER_ADDR']))
 			{
-				$base_url = isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off' ? 'https' : 'http';
-				$base_url .= '://'. $_SERVER['HTTP_HOST'];
-				$base_url .= str_replace(basename($_SERVER['SCRIPT_NAME']), '', $_SERVER['SCRIPT_NAME']);
+				if (strpos($_SERVER['SERVER_ADDR'], ':') !== FALSE)
+				{
+					$server_addr = '['.$_SERVER['SERVER_ADDR'].']';
+				}
+				else
+				{
+					$server_addr = $_SERVER['SERVER_ADDR'];
 			}
 
+				$base_url = (is_https() ? 'https' : 'http').'://'.$server_addr
+					.substr($_SERVER['SCRIPT_NAME'], 0, strpos($_SERVER['SCRIPT_NAME'], basename($_SERVER['SCRIPT_FILENAME'])));
+			}
 			else
 			{
 				$base_url = 'http://localhost/';
@@ -80,6 +109,8 @@
 
 			$this->set_item('base_url', $base_url);
 		}
+
+		log_message('info', 'Config Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -87,42 +118,27 @@
 	/**
 	 * Load Config File
 	 *
-	 * @access	public
-	 * @param	string	the config file name
-	 * @param   boolean  if configuration values should be loaded into their own section
-	 * @param   boolean  true if errors should just return false, false if an error message should be displayed
-	 * @return	boolean	if the file was loaded correctly
+	 * @param	string	$file			Configuration file name
+	 * @param	bool	$use_sections		Whether configuration values should be loaded into their own section
+	 * @param	bool	$fail_gracefully	Whether to just return FALSE or display an error message
+	 * @return	bool	TRUE if the file was loaded correctly or FALSE on failure
 	 */
-	function load($file = '', $use_sections = FALSE, $fail_gracefully = FALSE)
+	public function load($file = '', $use_sections = FALSE, $fail_gracefully = FALSE)
 	{
-		$file = ($file == '') ? 'config' : str_replace('.php', '', $file);
-		$found = FALSE;
+		$file = ($file === '') ? 'config' : str_replace('.php', '', $file);
 		$loaded = FALSE;
 
-		$check_locations = defined('ENVIRONMENT')
-			? array(ENVIRONMENT.'/'.$file, $file)
-			: array($file);
-
 		foreach ($this->_config_paths as $path)
 		{
-			foreach ($check_locations as $location)
+			foreach (array($file, ENVIRONMENT.DIRECTORY_SEPARATOR.$file) as $location)
 			{
 				$file_path = $path.'config/'.$location.'.php';
-
 				if (in_array($file_path, $this->is_loaded, TRUE))
 				{
-					$loaded = TRUE;
-					continue 2;
-				}
-
-				if (file_exists($file_path))
-				{
-					$found = TRUE;
-					break;
-				}
+					return TRUE;
 			}
 
-			if ($found === FALSE)
+				if ( ! file_exists($file_path))
 			{
 				continue;
 			}
@@ -140,14 +157,9 @@
 
 			if ($use_sections === TRUE)
 			{
-				if (isset($this->config[$file]))
-				{
-					$this->config[$file] = array_merge($this->config[$file], $config);
-				}
-				else
-				{
-					$this->config[$file] = $config;
-				}
+					$this->config[$file] = isset($this->config[$file])
+						? array_merge($this->config[$file], $config)
+						: $config;
 			}
 			else
 			{
@@ -155,23 +167,22 @@
 			}
 
 			$this->is_loaded[] = $file_path;
-			unset($config);
-
+				$config = NULL;
 			$loaded = TRUE;
 			log_message('debug', 'Config file loaded: '.$file_path);
-			break;
+			}
 		}
 
-		if ($loaded === FALSE)
+		if ($loaded === TRUE)
 		{
-			if ($fail_gracefully === TRUE)
+			return TRUE;
+		}
+		elseif ($fail_gracefully === TRUE)
 			{
 				return FALSE;
 			}
-			show_error('The configuration file '.$file.'.php does not exist.');
-		}
 
-		return TRUE;
+		show_error('The configuration file '.$file.'.php does not exist.');
 	}
 
 	// --------------------------------------------------------------------
@@ -179,59 +190,35 @@
 	/**
 	 * Fetch a config file item
 	 *
-	 *
-	 * @access	public
-	 * @param	string	the config item name
-	 * @param	string	the index name
-	 * @param	bool
-	 * @return	string
+	 * @param	string	$item	Config item name
+	 * @param	string	$index	Index name
+	 * @return	string|null	The configuration item or NULL if the item doesn't exist
 	 */
-	function item($item, $index = '')
+	public function item($item, $index = '')
 	{
 		if ($index == '')
 		{
-			if ( ! isset($this->config[$item]))
-			{
-				return FALSE;
-			}
-
-			$pref = $this->config[$item];
-		}
-		else
-		{
-			if ( ! isset($this->config[$index]))
-			{
-				return FALSE;
-			}
-
-			if ( ! isset($this->config[$index][$item]))
-			{
-				return FALSE;
-			}
-
-			$pref = $this->config[$index][$item];
+			return isset($this->config[$item]) ? $this->config[$item] : NULL;
 		}
 
-		return $pref;
+		return isset($this->config[$index], $this->config[$index][$item]) ? $this->config[$index][$item] : NULL;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a config file item - adds slash after item (if item is not empty)
+	 * Fetch a config file item with slash appended (if not empty)
 	 *
-	 * @access	public
-	 * @param	string	the config item name
-	 * @param	bool
-	 * @return	string
+	 * @param	string		$item	Config item name
+	 * @return	string|null	The configuration item or NULL if the item doesn't exist
 	 */
-	function slash_item($item)
+	public function slash_item($item)
 	{
 		if ( ! isset($this->config[$item]))
 		{
-			return FALSE;
+			return NULL;
 		}
-		if( trim($this->config[$item]) == '')
+		elseif (trim($this->config[$item]) === '')
 		{
 			return '';
 		}
@@ -243,79 +230,124 @@
 
 	/**
 	 * Site URL
+	 *
 	 * Returns base_url . index_page [. uri_string]
 	 *
-	 * @access	public
-	 * @param	string	the URI string
+	 * @uses	CI_Config::_uri_string()
+	 *
+	 * @param	string|string[]	$uri	URI string or an array of segments
+	 * @param	string	$protocol
 	 * @return	string
 	 */
-	function site_url($uri = '')
+	public function site_url($uri = '', $protocol = NULL)
+	{
+		$base_url = $this->slash_item('base_url');
+
+		if (isset($protocol))
+		{
+			// For protocol-relative links
+			if ($protocol === '')
 	{
-		if ($uri == '')
+				$base_url = substr($base_url, strpos($base_url, '//'));
+			}
+			else
 		{
-			return $this->slash_item('base_url').$this->item('index_page');
+				$base_url = $protocol.substr($base_url, strpos($base_url, '://'));
 		}
+		}
+
+		if (empty($uri))
+		{
+			return $base_url.$this->item('index_page');
+		}
+
+		$uri = $this->_uri_string($uri);
 
-		if ($this->item('enable_query_strings') == FALSE)
+		if ($this->item('enable_query_strings') === FALSE)
 		{
-			$suffix = ($this->item('url_suffix') == FALSE) ? '' : $this->item('url_suffix');
-			return $this->slash_item('base_url').$this->slash_item('index_page').$this->_uri_string($uri).$suffix;
+			$suffix = isset($this->config['url_suffix']) ? $this->config['url_suffix'] : '';
+
+			if ($suffix !== '')
+			{
+				if (($offset = strpos($uri, '?')) !== FALSE)
+				{
+					$uri = substr($uri, 0, $offset).$suffix.substr($uri, $offset);
 		}
 		else
 		{
-			return $this->slash_item('base_url').$this->item('index_page').'?'.$this->_uri_string($uri);
+					$uri .= $suffix;
+				}
+			}
+
+			return $base_url.$this->slash_item('index_page').$uri;
+		}
+		elseif (strpos($uri, '?') === FALSE)
+		{
+			$uri = '?'.$uri;
 		}
+
+		return $base_url.$this->item('index_page').$uri;
 	}
 
 	// -------------------------------------------------------------
 
 	/**
 	 * Base URL
+	 *
 	 * Returns base_url [. uri_string]
 	 *
-	 * @access public
-	 * @param string $uri
+	 * @uses	CI_Config::_uri_string()
+	 *
+	 * @param	string|string[]	$uri	URI string or an array of segments
+	 * @param	string	$protocol
 	 * @return string
 	 */
-	function base_url($uri = '')
+	public function base_url($uri = '', $protocol = NULL)
+	{
+		$base_url = $this->slash_item('base_url');
+
+		if (isset($protocol))
+		{
+			// For protocol-relative links
+			if ($protocol === '')
 	{
-		return $this->slash_item('base_url').ltrim($this->_uri_string($uri), '/');
+				$base_url = substr($base_url, strpos($base_url, '//'));
+			}
+			else
+			{
+				$base_url = $protocol.substr($base_url, strpos($base_url, '://'));
+			}
+		}
+
+		return $base_url.ltrim($this->_uri_string($uri), '/');
 	}
 
 	// -------------------------------------------------------------
 
 	/**
-	 * Build URI string for use in Config::site_url() and Config::base_url()
+	 * Build URI string
+	 *
+	 * @used-by	CI_Config::site_url()
+	 * @used-by	CI_Config::base_url()
 	 *
-	 * @access protected
-	 * @param  $uri
+	 * @param	string|string[]	$uri	URI string or an array of segments
 	 * @return string
 	 */
 	protected function _uri_string($uri)
 	{
-		if ($this->item('enable_query_strings') == FALSE)
+		if ($this->item('enable_query_strings') === FALSE)
 		{
 			if (is_array($uri))
 			{
 				$uri = implode('/', $uri);
 			}
-			$uri = trim($uri, '/');
+			return trim($uri, '/');
 		}
-		else
-		{
-			if (is_array($uri))
+		elseif (is_array($uri))
 			{
-				$i = 0;
-				$str = '';
-				foreach ($uri as $key => $val)
-				{
-					$prefix = ($i == 0) ? '' : '&';
-					$str .= $prefix.$key.'='.$val;
-					$i++;
-				}
-				$uri = $str;
-			}
+			return http_build_query($uri);
 		}
+
 	    return $uri;
 	}
 
@@ -324,12 +356,12 @@
 	/**
 	 * System URL
 	 *
-	 * @access	public
+	 * @deprecated	3.0.0	Encourages insecure practices
 	 * @return	string
 	 */
-	function system_url()
+	public function system_url()
 	{
-		$x = explode("/", preg_replace("|/*(.+?)/*$|", "\\1", BASEPATH));
+		$x = explode('/', preg_replace('|/*(.+?)/*$|', '\\1', BASEPATH));
 		return $this->slash_item('base_url').end($x).'/';
 	}
 
@@ -338,42 +370,13 @@
 	/**
 	 * Set a config file item
 	 *
-	 * @access	public
-	 * @param	string	the config item key
-	 * @param	string	the config item value
+	 * @param	string	$item	Config item key
+	 * @param	string	$value	Config item value
 	 * @return	void
 	 */
-	function set_item($item, $value)
+	public function set_item($item, $value)
 	{
 		$this->config[$item] = $value;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Assign to Config
-	 *
-	 * This function is called by the front controller (CodeIgniter.php)
-	 * after the Config class is instantiated.  It permits config items
-	 * to be assigned or overriden by variables contained in the index.php file
-	 *
-	 * @access	private
-	 * @param	array
-	 * @return	void
-	 */
-	function _assign_to_config($items = array())
-	{
-		if (is_array($items))
-		{
-			foreach ($items as $key => $val)
-			{
-				$this->set_item($key, $val);
-			}
-		}
 	}
-}
-
-// END CI_Config class
-
-/* End of file Config.php */
-/* Location: ./system/core/Config.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Controller.php opensourcepos/system/core/Controller.php
--- pos-prod/system/core/Controller.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Controller.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,22 +1,44 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * CodeIgniter Application Controller Class
+ * Application Controller Class
  *
  * This class object is the super class that every library in
  * CodeIgniter will be assigned to.
@@ -24,15 +46,22 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/general/controllers.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/general/controllers.html
  */
 class CI_Controller {
 
+	/**
+	 * Reference to the CI singleton
+	 *
+	 * @var	object
+	 */
 	private static $instance;
 
 	/**
-	 * Constructor
+	 * Class constructor
+	 *
+	 * @return	void
 	 */
 	public function __construct()
 	{
@@ -47,18 +76,21 @@
 		}
 
 		$this->load =& load_class('Loader', 'core');
-
 		$this->load->initialize();
-		
-		log_message('debug', "Controller Class Initialized");
+		log_message('info', 'Controller Class Initialized');
 	}
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * Get the CI singleton
+	 *
+	 * @static
+	 * @return	object
+	 */
 	public static function &get_instance()
 	{
 		return self::$instance;
 	}
-}
-// END Controller class
 
-/* End of file Controller.php */
-/* Location: ./system/core/Controller.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Exceptions.php opensourcepos/system/core/Exceptions.php
--- pos-prod/system/core/Exceptions.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Exceptions.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Exceptions Class
@@ -21,31 +43,24 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Exceptions
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/exceptions.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/exceptions.html
  */
 class CI_Exceptions {
-	var $action;
-	var $severity;
-	var $message;
-	var $filename;
-	var $line;
 
 	/**
 	 * Nesting level of the output buffering mechanism
 	 *
 	 * @var int
-	 * @access public
 	 */
-	var $ob_level;
+	public $ob_level;
 
 	/**
-	 * List if available error levels
+	 * List of available error levels
 	 *
 	 * @var array
-	 * @access public
 	 */
-	var $levels = array(
+	public $levels = array(
 						E_ERROR				=>	'Error',
 						E_WARNING			=>	'Warning',
 						E_PARSE				=>	'Parsing Error',
@@ -60,9 +75,10 @@
 						E_STRICT			=>	'Runtime Notice'
 					);
 
-
 	/**
-	 * Constructor
+	 * Class constructor
+	 *
+	 * @return	void
 	 */
 	public function __construct()
 	{
@@ -75,45 +91,52 @@
 	/**
 	 * Exception Logger
 	 *
-	 * This function logs PHP generated error messages
+	 * Logs PHP generated error messages
 	 *
-	 * @access	private
-	 * @param	string	the error severity
-	 * @param	string	the error string
-	 * @param	string	the error filepath
-	 * @param	string	the error line number
-	 * @return	string
+	 * @param	int	$severity	Log level
+	 * @param	string	$message	Error message
+	 * @param	string	$filepath	File path
+	 * @param	int	$line		Line number
+	 * @return	void
 	 */
-	function log_exception($severity, $message, $filepath, $line)
+	public function log_exception($severity, $message, $filepath, $line)
 	{
-		$severity = ( ! isset($this->levels[$severity])) ? $severity : $this->levels[$severity];
-
-		log_message('error', 'Severity: '.$severity.'  --> '.$message. ' '.$filepath.' '.$line, TRUE);
+		$severity = isset($this->levels[$severity]) ? $this->levels[$severity] : $severity;
+		log_message('error', 'Severity: '.$severity.' --> '.$message.' '.$filepath.' '.$line);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * 404 Page Not Found Handler
+	 * 404 Error Handler
 	 *
-	 * @access	private
-	 * @param	string	the page
-	 * @param 	bool	log error yes/no
-	 * @return	string
+	 * @uses	CI_Exceptions::show_error()
+	 *
+	 * @param	string	$page		Page URI
+	 * @param 	bool	$log_error	Whether to log the error
+	 * @return	void
 	 */
-	function show_404($page = '', $log_error = TRUE)
+	public function show_404($page = '', $log_error = TRUE)
+	{
+		if (is_cli())
+		{
+			$heading = 'Not Found';
+			$message = 'The controller/method pair you requested was not found.';
+		}
+		else
 	{
-		$heading = "404 Page Not Found";
-		$message = "The page you requested was not found.";
+			$heading = '404 Page Not Found';
+			$message = 'The page you requested was not found.';
+		}
 
 		// By default we log this, but allow a dev to skip it
 		if ($log_error)
 		{
-			log_message('error', '404 Page Not Found --> '.$page);
+			log_message('error', $heading.': '.$page);
 		}
 
 		echo $this->show_error($heading, $message, 'error_404', 404);
-		exit;
+		exit(4); // EXIT_UNKNOWN_FILE
 	}
 
 	// --------------------------------------------------------------------
@@ -121,29 +144,42 @@
 	/**
 	 * General Error Page
 	 *
-	 * This function takes an error message as input
-	 * (either as a string or an array) and displays
-	 * it using the specified template.
-	 *
-	 * @access	private
-	 * @param	string	the heading
-	 * @param	string	the message
-	 * @param	string	the template name
-	 * @param 	int		the status code
-	 * @return	string
+	 * Takes an error message as input (either as a string or an array)
+	 * and displays it using the specified template.
+	 *
+	 * @param	string		$heading	Page heading
+	 * @param	string|string[]	$message	Error message
+	 * @param	string		$template	Template name
+	 * @param 	int		$status_code	(default: 500)
+	 *
+	 * @return	string	Error page output
 	 */
-	function show_error($heading, $message, $template = 'error_general', $status_code = 500)
+	public function show_error($heading, $message, $template = 'error_general', $status_code = 500)
 	{
-		set_status_header($status_code);
+		$templates_path = config_item('error_views_path');
+		if (empty($templates_path))
+		{
+			$templates_path = VIEWPATH.'errors'.DIRECTORY_SEPARATOR;
+		}
 
-		$message = '<p>'.implode('</p><p>', ( ! is_array($message)) ? array($message) : $message).'</p>';
+		if (is_cli())
+		{
+			$message = "\t".(is_array($message) ? implode("\n\t", $message) : $message);
+			$template = 'cli'.DIRECTORY_SEPARATOR.$template;
+		}
+		else
+		{
+			set_status_header($status_code);
+			$message = '<p>'.(is_array($message) ? implode('</p><p>', $message) : $message).'</p>';
+			$template = 'html'.DIRECTORY_SEPARATOR.$template;
+		}
 
 		if (ob_get_level() > $this->ob_level + 1)
 		{
 			ob_end_flush();
 		}
 		ob_start();
-		include(APPPATH.'errors/'.$template.'.php');
+		include($templates_path.$template.'.php');
 		$buffer = ob_get_contents();
 		ob_end_clean();
 		return $buffer;
@@ -151,35 +187,86 @@
 
 	// --------------------------------------------------------------------
 
+	public function show_exception($exception)
+	{
+		$templates_path = config_item('error_views_path');
+		if (empty($templates_path))
+		{
+			$templates_path = VIEWPATH.'errors'.DIRECTORY_SEPARATOR;
+		}
+
+		$message = $exception->getMessage();
+		if (empty($message))
+		{
+			$message = '(null)';
+		}
+
+		if (is_cli())
+		{
+			$templates_path .= 'cli'.DIRECTORY_SEPARATOR;
+		}
+		else
+		{
+			set_status_header(500);
+			$templates_path .= 'html'.DIRECTORY_SEPARATOR;
+		}
+
+		if (ob_get_level() > $this->ob_level + 1)
+		{
+			ob_end_flush();
+		}
+
+		ob_start();
+		include($templates_path.'error_exception.php');
+		$buffer = ob_get_contents();
+		ob_end_clean();
+		echo $buffer;
+	}
+
+	// --------------------------------------------------------------------
+
 	/**
 	 * Native PHP error handler
 	 *
-	 * @access	private
-	 * @param	string	the error severity
-	 * @param	string	the error string
-	 * @param	string	the error filepath
-	 * @param	string	the error line number
-	 * @return	string
+	 * @param	int	$severity	Error level
+	 * @param	string	$message	Error message
+	 * @param	string	$filepath	File path
+	 * @param	int	$line		Line number
+	 * @return	string	Error page output
 	 */
-	function show_php_error($severity, $message, $filepath, $line)
+	public function show_php_error($severity, $message, $filepath, $line)
+	{
+		$templates_path = config_item('error_views_path');
+		if (empty($templates_path))
 	{
-		$severity = ( ! isset($this->levels[$severity])) ? $severity : $this->levels[$severity];
+			$templates_path = VIEWPATH.'errors'.DIRECTORY_SEPARATOR;
+		}
 
-		$filepath = str_replace("\\", "/", $filepath);
+		$severity = isset($this->levels[$severity]) ? $this->levels[$severity] : $severity;
 
-		// For safety reasons we do not show the full file path
+		// For safety reasons we don't show the full file path in non-CLI requests
+		if ( ! is_cli())
+		{
+			$filepath = str_replace('\\', '/', $filepath);
 		if (FALSE !== strpos($filepath, '/'))
 		{
 			$x = explode('/', $filepath);
 			$filepath = $x[count($x)-2].'/'.end($x);
 		}
 
+			$template = 'html'.DIRECTORY_SEPARATOR.'error_php';
+		}
+		else
+		{
+			$template = 'cli'.DIRECTORY_SEPARATOR.'error_php';
+		}
+
 		if (ob_get_level() > $this->ob_level + 1)
 		{
 			ob_end_flush();
 		}
 		ob_start();
-		include(APPPATH.'errors/error_php.php');
+		include($templates_path.$template.'.php');
 		$buffer = ob_get_contents();
 		ob_end_clean();
 		echo $buffer;
@@ -185,9 +272,4 @@
 		echo $buffer;
 	}
 
-
 }
-// END Exceptions Class
-
-/* End of file Exceptions.php */
-/* Location: ./system/core/Exceptions.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Hooks.php opensourcepos/system/core/Hooks.php
--- pos-prod/system/core/Hooks.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Hooks.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,95 +1,114 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * CodeIgniter Hooks Class
+ * Hooks Class
  *
  * Provides a mechanism to extend the base system without hacking.
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/encryption.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/general/hooks.html
  */
 class CI_Hooks {
 
 	/**
-	 * Determines wether hooks are enabled
+	 * Determines whether hooks are enabled
 	 *
 	 * @var bool
 	 */
-	var $enabled		= FALSE;
+	public $enabled = FALSE;
+
 	/**
 	 * List of all hooks set in config/hooks.php
 	 *
 	 * @var array
 	 */
-	var $hooks			= array();
+	public $hooks =	array();
+
 	/**
-	 * Determines wether hook is in progress, used to prevent infinte loops
+	 * Array with class objects to use hooks methods
 	 *
-	 * @var bool
+	 * @var array
 	 */
-	var $in_progress	= FALSE;
+	protected $_objects = array();
 
 	/**
-	 * Constructor
+	 * In progress flag
 	 *
+	 * Determines whether hook is in progress, used to prevent infinte loops
+	 *
+	 * @var	bool
 	 */
-	function __construct()
-	{
-		$this->_initialize();
-		log_message('debug', "Hooks Class Initialized");
-	}
-
-	// --------------------------------------------------------------------
+	protected $_in_progress = FALSE;
 
 	/**
-	 * Initialize the Hooks Preferences
+	 * Class constructor
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	function _initialize()
+	public function __construct()
 	{
 		$CFG =& load_class('Config', 'core');
+		log_message('info', 'Hooks Class Initialized');
 
 		// If hooks are not enabled in the config file
 		// there is nothing else to do
-
-		if ($CFG->item('enable_hooks') == FALSE)
+		if ($CFG->item('enable_hooks') === FALSE)
 		{
 			return;
 		}
 
 		// Grab the "hooks" definition file.
-		// If there are no hooks, we're done.
-
-		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/hooks.php'))
-		{
-		    include(APPPATH.'config/'.ENVIRONMENT.'/hooks.php');
-		}
-		elseif (is_file(APPPATH.'config/hooks.php'))
+		if (file_exists(APPPATH.'config/hooks.php'))
 		{
 			include(APPPATH.'config/hooks.php');
 		}
 
+		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/hooks.php'))
+		{
+			include(APPPATH.'config/'.ENVIRONMENT.'/hooks.php');
+		}
 
+		// If there are no hooks, we're done.
 		if ( ! isset($hook) OR ! is_array($hook))
 		{
 			return;
@@ -104,20 +123,21 @@
 	/**
 	 * Call Hook
 	 *
-	 * Calls a particular hook
+	 * Calls a particular hook. Called by CodeIgniter.php.
+	 *
+	 * @uses	CI_Hooks::_run_hook()
 	 *
-	 * @access	private
-	 * @param	string	the hook name
-	 * @return	mixed
+	 * @param	string	$which	Hook name
+	 * @return	bool	TRUE on success or FALSE on failure
 	 */
-	function _call_hook($which = '')
+	public function call_hook($which = '')
 	{
 		if ( ! $this->enabled OR ! isset($this->hooks[$which]))
 		{
 			return FALSE;
 		}
 
-		if (isset($this->hooks[$which][0]) AND is_array($this->hooks[$which][0]))
+		if (is_array($this->hooks[$which]) && ! isset($this->hooks[$which]['function']))
 		{
 			foreach ($this->hooks[$which] as $val)
 			{
@@ -139,13 +159,21 @@
 	 *
 	 * Runs a particular hook
 	 *
-	 * @access	private
-	 * @param	array	the hook details
-	 * @return	bool
+	 * @param	array	$data	Hook details
+	 * @return	bool	TRUE on success or FALSE on failure
 	 */
-	function _run_hook($data)
+	protected function _run_hook($data)
 	{
-		if ( ! is_array($data))
+		// Closures/lambda functions and array($object, 'method') callables
+		if (is_callable($data))
+		{
+			is_array($data)
+				? $data[0]->{$data[1]}()
+				: $data();
+
+			return TRUE;
+		}
+		elseif ( ! is_array($data))
 		{
 			return FALSE;
 		}
@@ -156,8 +184,7 @@
 
 		// If the script being called happens to have the same
 		// hook call within it a loop can happen
-
-		if ($this->in_progress == TRUE)
+		if ($this->_in_progress === TRUE)
 		{
 			return;
 		}
@@ -166,7 +193,7 @@
 		// Set file path
 		// -----------------------------------
 
-		if ( ! isset($data['filepath']) OR ! isset($data['filename']))
+		if ( ! isset($data['filepath'], $data['filename']))
 		{
 			return FALSE;
 		}
@@ -178,71 +205,62 @@
 			return FALSE;
 		}
 
-		// -----------------------------------
-		// Set class/function name
-		// -----------------------------------
+		// Determine and class and/or function names
+		$class		= empty($data['class']) ? FALSE : $data['class'];
+		$function	= empty($data['function']) ? FALSE : $data['function'];
+		$params		= isset($data['params']) ? $data['params'] : '';
 
-		$class		= FALSE;
-		$function	= FALSE;
-		$params		= '';
-
-		if (isset($data['class']) AND $data['class'] != '')
+		if (empty($function))
 		{
-			$class = $data['class'];
+			return FALSE;
 		}
 
-		if (isset($data['function']))
-		{
-			$function = $data['function'];
-		}
+		// Set the _in_progress flag
+		$this->_in_progress = TRUE;
 
-		if (isset($data['params']))
+		// Call the requested class and/or function
+		if ($class !== FALSE)
 		{
-			$params = $data['params'];
+			// The object is stored?
+			if (isset($this->_objects[$class]))
+			{
+				if (method_exists($this->_objects[$class], $function))
+				{
+					$this->_objects[$class]->$function($params);
 		}
-
-		if ($class === FALSE AND $function === FALSE)
+				else
 		{
-			return FALSE;
+					return $this->_in_progress = FALSE;
 		}
-
-		// -----------------------------------
-		// Set the in_progress flag
-		// -----------------------------------
-
-		$this->in_progress = TRUE;
-
-		// -----------------------------------
-		// Call the requested class and/or function
-		// -----------------------------------
-
-		if ($class !== FALSE)
+			}
+			else
 		{
-			if ( ! class_exists($class))
+				class_exists($class, FALSE) OR require_once($filepath);
+
+				if ( ! class_exists($class, FALSE) OR ! method_exists($class, $function))
 			{
-				require($filepath);
+					return $this->_in_progress = FALSE;
 			}
 
-			$HOOK = new $class;
-			$HOOK->$function($params);
+				// Store the object and execute the method
+				$this->_objects[$class] = new $class();
+				$this->_objects[$class]->$function($params);
+			}
 		}
 		else
 		{
+			function_exists($function) OR require_once($filepath);
+
 			if ( ! function_exists($function))
 			{
-				require($filepath);
+				return $this->_in_progress = FALSE;
 			}
 
 			$function($params);
 		}
 
-		$this->in_progress = FALSE;
+		$this->_in_progress = FALSE;
 		return TRUE;
 	}
 
 }
-
-// END CI_Hooks class
-
-/* End of file Hooks.php */
-/* Location: ./system/core/Hooks.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/index.html opensourcepos/system/core/index.html
--- pos-prod/system/core/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/index.html	2016-05-23 15:32:31.935838944 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Input.php opensourcepos/system/core/Input.php
--- pos-prod/system/core/Input.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Input.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Input Class
@@ -23,8 +45,8 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Input
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/input.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/input.html
  */
 class CI_Input {
 
@@ -33,39 +55,47 @@
 	 *
 	 * @var string
 	 */
-	var $ip_address				= FALSE;
+	protected $ip_address = FALSE;
+
 	/**
-	 * user agent (web browser) being used by the current user
+	 * Allow GET array flag
 	 *
-	 * @var string
-	 */
-	var $user_agent				= FALSE;
-	/**
-	 * If FALSE, then $_GET will be set to an empty array
+	 * If set to FALSE, then $_GET will be set to an empty array.
 	 *
 	 * @var bool
 	 */
-	var $_allow_get_array		= TRUE;
+	protected $_allow_get_array = TRUE;
+
 	/**
-	 * If TRUE, then newlines are standardized
+	 * Standardize new lines flag
+	 *
+	 * If set to TRUE, then newlines are standardized.
 	 *
 	 * @var bool
 	 */
-	var $_standardize_newlines	= TRUE;
+	protected $_standardize_newlines;
+
 	/**
-	 * Determines whether the XSS filter is always active when GET, POST or COOKIE data is encountered
-	 * Set automatically based on config setting
+	 * Enable XSS flag
+	 *
+	 * Determines whether the XSS filter is always active when
+	 * GET, POST or COOKIE data is encountered.
+	 * Set automatically based on config setting.
 	 *
 	 * @var bool
 	 */
-	var $_enable_xss			= FALSE;
+	protected $_enable_xss = FALSE;
+
 	/**
+	 * Enable CSRF flag
+	 *
 	 * Enables a CSRF cookie token to be set.
-	 * Set automatically based on config setting
+	 * Set automatically based on config setting.
 	 *
 	 * @var bool
 	 */
-	var $_enable_csrf			= FALSE;
+	protected $_enable_csrf = FALSE;
+
 	/**
 	 * List of all HTTP request headers
 	 *
@@ -74,33 +104,62 @@
 	protected $headers			= array();
 
 	/**
-	 * Constructor
+	 * Raw input stream data
+	 *
+	 * Holds a cache of php://input contents
+	 *
+	 * @var	string
+	 */
+	protected $_raw_input_stream;
+
+	/**
+	 * Parsed input stream data
+	 *
+	 * Parsed from php://input at runtime
+	 *
+	 * @see	CI_Input::input_stream()
+	 * @var	array
+	 */
+	protected $_input_stream;
+
+	protected $security;
+	protected $uni;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
 	 *
-	 * Sets whether to globally enable the XSS processing
-	 * and whether to allow the $_GET array
+	 * Determines whether to globally enable the XSS processing
+	 * and whether to allow the $_GET array.
 	 *
 	 * @return	void
 	 */
 	public function __construct()
 	{
-		log_message('debug', "Input Class Initialized");
-
 		$this->_allow_get_array	= (config_item('allow_get_array') === TRUE);
 		$this->_enable_xss		= (config_item('global_xss_filtering') === TRUE);
 		$this->_enable_csrf		= (config_item('csrf_protection') === TRUE);
+		$this->_standardize_newlines	= (bool) config_item('standardize_newlines');
 
-		global $SEC;
-		$this->security =& $SEC;
+		$this->security =& load_class('Security', 'core');
 
 		// Do we need the UTF-8 class?
 		if (UTF8_ENABLED === TRUE)
 		{
-			global $UNI;
-			$this->uni =& $UNI;
+			$this->uni =& load_class('Utf8', 'core');
 		}
 
 		// Sanitize global arrays
 		$this->_sanitize_globals();
+
+		// CSRF Protection check
+		if ($this->_enable_csrf === TRUE && ! is_cli())
+		{
+			$this->security->csrf_verify();
+		}
+
+		log_message('info', 'Input Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -108,27 +167,65 @@
 	/**
 	 * Fetch from array
 	 *
-	 * This is a helper function to retrieve values from global arrays
+	 * Internal method used to retrieve values from global arrays.
 	 *
-	 * @access	private
-	 * @param	array
-	 * @param	string
-	 * @param	bool
-	 * @return	string
+	 * @param	array	&$array		$_GET, $_POST, $_COOKIE, $_SERVER, etc.
+	 * @param	mixed	$index		Index for item to be fetched from $array
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
 	 */
-	function _fetch_from_array(&$array, $index = '', $xss_clean = FALSE)
+	protected function _fetch_from_array(&$array, $index = NULL, $xss_clean = NULL)
+	{
+		is_bool($xss_clean) OR $xss_clean = $this->_enable_xss;
+
+		// If $index is NULL, it means that the whole $array is requested
+		isset($index) OR $index = array_keys($array);
+
+		// allow fetching multiple keys at once
+		if (is_array($index))
 	{
-		if ( ! isset($array[$index]))
+			$output = array();
+			foreach ($index as $key)
 		{
-			return FALSE;
+				$output[$key] = $this->_fetch_from_array($array, $key, $xss_clean);
+			}
+
+			return $output;
+		}
+
+		if (isset($array[$index]))
+		{
+			$value = $array[$index];
+		}
+		elseif (($count = preg_match_all('/(?:^[^\[]+)|\[[^]]*\]/', $index, $matches)) > 1) // Does the index contain array notation
+		{
+			$value = $array;
+			for ($i = 0; $i < $count; $i++)
+			{
+				$key = trim($matches[0][$i], '[]');
+				if ($key === '') // Empty notation will return the value as array
+				{
+					break;
 		}
 
-		if ($xss_clean === TRUE)
+				if (isset($value[$key]))
+				{
+					$value = $value[$key];
+				}
+				else
+				{
+					return NULL;
+				}
+			}
+		}
+		else
 		{
-			return $this->security->xss_clean($array[$index]);
+			return NULL;
 		}
 
-		return $array[$index];
+		return ($xss_clean === TRUE)
+			? $this->security->xss_clean($value)
+			: $value;
 	}
 
 	// --------------------------------------------------------------------
@@ -136,26 +233,12 @@
 	/**
 	* Fetch an item from the GET array
 	*
-	* @access	public
-	* @param	string
-	* @param	bool
-	* @return	string
+	 * @param	mixed	$index		Index for item to be fetched from $_GET
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
 	*/
-	function get($index = NULL, $xss_clean = FALSE)
-	{
-		// Check if a field has been provided
-		if ($index === NULL AND ! empty($_GET))
+	public function get($index = NULL, $xss_clean = NULL)
 		{
-			$get = array();
-
-			// loop through the full _GET array
-			foreach (array_keys($_GET) as $key)
-			{
-				$get[$key] = $this->_fetch_from_array($_GET, $key, $xss_clean);
-			}
-			return $get;
-		}
-
 		return $this->_fetch_from_array($_GET, $index, $xss_clean);
 	}
 
@@ -164,26 +247,12 @@
 	/**
 	* Fetch an item from the POST array
 	*
-	* @access	public
-	* @param	string
-	* @param	bool
-	* @return	string
+	 * @param	mixed	$index		Index for item to be fetched from $_POST
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
 	*/
-	function post($index = NULL, $xss_clean = FALSE)
-	{
-		// Check if a field has been provided
-		if ($index === NULL AND ! empty($_POST))
-		{
-			$post = array();
-
-			// Loop through the full _POST array and return it
-			foreach (array_keys($_POST) as $key)
+	public function post($index = NULL, $xss_clean = NULL)
 			{
-				$post[$key] = $this->_fetch_from_array($_POST, $key, $xss_clean);
-			}
-			return $post;
-		}
-
 		return $this->_fetch_from_array($_POST, $index, $xss_clean);
 	}
 
@@ -191,23 +259,33 @@
 	// --------------------------------------------------------------------
 
 	/**
-	* Fetch an item from either the GET array or the POST
+	 * Fetch an item from POST data with fallback to GET
 	*
-	* @access	public
-	* @param	string	The index key
-	* @param	bool	XSS cleaning
-	* @return	string
+	 * @param	string	$index		Index for item to be fetched from $_POST or $_GET
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
 	*/
-	function get_post($index = '', $xss_clean = FALSE)
-	{
-		if ( ! isset($_POST[$index]) )
+	public function post_get($index, $xss_clean = NULL)
 		{
-			return $this->get($index, $xss_clean);
+		return isset($_POST[$index])
+			? $this->post($index, $xss_clean)
+			: $this->get($index, $xss_clean);
 		}
-		else
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fetch an item from GET data with fallback to POST
+	 *
+	 * @param	string	$index		Index for item to be fetched from $_GET or $_POST
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
+	 */
+	public function get_post($index, $xss_clean = NULL)
 		{
-			return $this->post($index, $xss_clean);
-		}
+		return isset($_GET[$index])
+			? $this->get($index, $xss_clean)
+			: $this->post($index, $xss_clean);
 	}
 
 	// --------------------------------------------------------------------
@@ -215,40 +293,78 @@
 	/**
 	* Fetch an item from the COOKIE array
 	*
-	* @access	public
-	* @param	string
-	* @param	bool
-	* @return	string
+	 * @param	mixed	$index		Index for item to be fetched from $_COOKIE
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
 	*/
-	function cookie($index = '', $xss_clean = FALSE)
+	public function cookie($index = NULL, $xss_clean = NULL)
 	{
 		return $this->_fetch_from_array($_COOKIE, $index, $xss_clean);
 	}
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fetch an item from the SERVER array
+	 *
+	 * @param	mixed	$index		Index for item to be fetched from $_SERVER
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
+	 */
+	public function server($index, $xss_clean = NULL)
+	{
+		return $this->_fetch_from_array($_SERVER, $index, $xss_clean);
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Fetch an item from the php://input stream
+	 *
+	 * Useful when you need to access PUT, DELETE or PATCH request data.
+	 *
+	 * @param	string	$index		Index for item to be fetched
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
+	 * @return	mixed
+	 */
+	public function input_stream($index = NULL, $xss_clean = NULL)
+	{
+		// Prior to PHP 5.6, the input stream can only be read once,
+		// so we'll need to check if we have already done that first.
+		if ( ! is_array($this->_input_stream))
+		{
+			// $this->raw_input_stream will trigger __get().
+			parse_str($this->raw_input_stream, $this->_input_stream);
+			is_array($this->_input_stream) OR $this->_input_stream = array();
+		}
+
+		return $this->_fetch_from_array($this->_input_stream, $index, $xss_clean);
+	}
+
 	// ------------------------------------------------------------------------
 
 	/**
 	* Set cookie
 	*
-	* Accepts six parameter, or you can submit an associative
+	 * Accepts an arbitrary number of parameters (up to 7) or an associative
 	* array in the first parameter containing all the values.
 	*
-	* @access	public
-	* @param	mixed
-	* @param	string	the value of the cookie
-	* @param	string	the number of seconds until expiration
-	* @param	string	the cookie domain.  Usually:  .yourdomain.com
-	* @param	string	the cookie path
-	* @param	string	the cookie prefix
-	* @param	bool	true makes the cookie secure
+	 * @param	string|mixed[]	$name		Cookie name or an array containing parameters
+	 * @param	string		$value		Cookie value
+	 * @param	int		$expire		Cookie expiration time in seconds
+	 * @param	string		$domain		Cookie domain (e.g.: '.yourdomain.com')
+	 * @param	string		$path		Cookie path (default: '/')
+	 * @param	string		$prefix		Cookie name prefix
+	 * @param	bool		$secure		Whether to only transfer cookies via SSL
+	 * @param	bool		$httponly	Whether to only makes the cookie accessible via HTTP (no javascript)
 	* @return	void
 	*/
-	function set_cookie($name = '', $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE)
+	public function set_cookie($name, $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE, $httponly = FALSE)
 	{
 		if (is_array($name))
 		{
 			// always leave 'name' in last place, as the loop will break otherwise, due to $$item
-			foreach (array('value', 'expire', 'domain', 'path', 'prefix', 'secure', 'name') as $item)
+			foreach (array('value', 'expire', 'domain', 'path', 'prefix', 'secure', 'httponly', 'name') as $item)
 			{
 				if (isset($name[$item]))
 				{
@@ -257,23 +373,31 @@
 			}
 		}
 
-		if ($prefix == '' AND config_item('cookie_prefix') != '')
+		if ($prefix === '' && config_item('cookie_prefix') !== '')
 		{
 			$prefix = config_item('cookie_prefix');
 		}
-		if ($domain == '' AND config_item('cookie_domain') != '')
+
+		if ($domain == '' && config_item('cookie_domain') != '')
 		{
 			$domain = config_item('cookie_domain');
 		}
-		if ($path == '/' AND config_item('cookie_path') != '/')
+
+		if ($path === '/' && config_item('cookie_path') !== '/')
 		{
 			$path = config_item('cookie_path');
 		}
-		if ($secure == FALSE AND config_item('cookie_secure') != FALSE)
+
+		if ($secure === FALSE && config_item('cookie_secure') === TRUE)
 		{
 			$secure = config_item('cookie_secure');
 		}
 
+		if ($httponly === FALSE && config_item('cookie_httponly') !== FALSE)
+		{
+			$httponly = config_item('cookie_httponly');
+		}
+
 		if ( ! is_numeric($expire))
 		{
 			$expire = time() - 86500;
@@ -283,22 +407,7 @@
 			$expire = ($expire > 0) ? time() + $expire : 0;
 		}
 
-		setcookie($prefix.$name, $value, $expire, $path, $domain, $secure);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	* Fetch an item from the SERVER array
-	*
-	* @access	public
-	* @param	string
-	* @param	bool
-	* @return	string
-	*/
-	function server($index = '', $xss_clean = FALSE)
-	{
-		return $this->_fetch_from_array($_SERVER, $index, $xss_clean);
+		setcookie($prefix.$name, $value, $expire, $path, $domain, $secure, $httponly);
 	}
 
 	// --------------------------------------------------------------------
@@ -306,7 +415,9 @@
 	/**
 	* Fetch the IP Address
 	*
-	* @return	string
+	 * Determines and validates the visitor's IP address.
+	 *
+	 * @return	string	IP address
 	*/
 	public function ip_address()
 	{
@@ -316,25 +427,27 @@
 		}
 
 		$proxy_ips = config_item('proxy_ips');
-		if ( ! empty($proxy_ips))
+		if ( ! empty($proxy_ips) && ! is_array($proxy_ips))
 		{
 			$proxy_ips = explode(',', str_replace(' ', '', $proxy_ips));
+		}
+
+		$this->ip_address = $this->server('REMOTE_ADDR');
+
+		if ($proxy_ips)
+		{
 			foreach (array('HTTP_X_FORWARDED_FOR', 'HTTP_CLIENT_IP', 'HTTP_X_CLIENT_IP', 'HTTP_X_CLUSTER_CLIENT_IP') as $header)
 			{
-				if (($spoof = $this->server($header)) !== FALSE)
+				if (($spoof = $this->server($header)) !== NULL)
 				{
 					// Some proxies typically list the whole chain of IP
 					// addresses through which the client has reached us.
 					// e.g. client_ip, proxy_ip1, proxy_ip2, etc.
-					if (strpos($spoof, ',') !== FALSE)
-					{
-						$spoof = explode(',', $spoof, 2);
-						$spoof = $spoof[0];
-					}
+					sscanf($spoof, '%[^,]', $spoof);
 
 					if ( ! $this->valid_ip($spoof))
 					{
-						$spoof = FALSE;
+						$spoof = NULL;
 					}
 					else
 					{
@@ -343,206 +456,134 @@
 				}
 			}
 
-			$this->ip_address = ($spoof !== FALSE && in_array($_SERVER['REMOTE_ADDR'], $proxy_ips, TRUE))
-				? $spoof : $_SERVER['REMOTE_ADDR'];
-		}
-		else
+			if ($spoof)
 		{
-			$this->ip_address = $_SERVER['REMOTE_ADDR'];
-		}
-
-		if ( ! $this->valid_ip($this->ip_address))
+				for ($i = 0, $c = count($proxy_ips); $i < $c; $i++)
+				{
+					// Check if we have an IP address or a subnet
+					if (strpos($proxy_ips[$i], '/') === FALSE)
+					{
+						// An IP address (and not a subnet) is specified.
+						// We can compare right away.
+						if ($proxy_ips[$i] === $this->ip_address)
 		{
-			$this->ip_address = '0.0.0.0';
+							$this->ip_address = $spoof;
+							break;
 		}
 
-		return $this->ip_address;
+						continue;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	* Validate IP Address
-	*
-	* @access	public
-	* @param	string
-	* @param	string	ipv4 or ipv6
-	* @return	bool
-	*/
-	public function valid_ip($ip, $which = '')
-	{
-		$which = strtolower($which);
+					// We have a subnet ... now the heavy lifting begins
+					isset($separator) OR $separator = $this->valid_ip($this->ip_address, 'ipv6') ? ':' : '.';
 
-		// First check if filter_var is available
-		if (is_callable('filter_var'))
+					// If the proxy entry doesn't match the IP protocol - skip it
+					if (strpos($proxy_ips[$i], $separator) === FALSE)
 		{
-			switch ($which) {
-				case 'ipv4':
-					$flag = FILTER_FLAG_IPV4;
-					break;
-				case 'ipv6':
-					$flag = FILTER_FLAG_IPV6;
-					break;
-				default:
-					$flag = '';
-					break;
+						continue;
 			}
 
-			return (bool) filter_var($ip, FILTER_VALIDATE_IP, $flag);
-		}
-
-		if ($which !== 'ipv6' && $which !== 'ipv4')
+					// Convert the REMOTE_ADDR IP address to binary, if needed
+					if ( ! isset($ip, $sprintf))
 		{
-			if (strpos($ip, ':') !== FALSE)
+						if ($separator === ':')
 			{
-				$which = 'ipv6';
-			}
-			elseif (strpos($ip, '.') !== FALSE)
+							// Make sure we're have the "full" IPv6 format
+							$ip = explode(':',
+								str_replace('::',
+									str_repeat(':', 9 - substr_count($this->ip_address, ':')),
+									$this->ip_address
+								)
+							);
+
+							for ($j = 0; $j < 8; $j++)
 			{
-				$which = 'ipv4';
+								$ip[$j] = intval($ip[$j], 16);
+							}
+
+							$sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';
 			}
 			else
 			{
-				return FALSE;
-			}
+							$ip = explode('.', $this->ip_address);
+							$sprintf = '%08b%08b%08b%08b';
 		}
 
-		$func = '_valid_'.$which;
-		return $this->$func($ip);
+						$ip = vsprintf($sprintf, $ip);
 	}
 
-	// --------------------------------------------------------------------
+					// Split the netmask length off the network address
+					sscanf($proxy_ips[$i], '%[^/]/%d', $netaddr, $masklen);
 
-	/**
-	* Validate IPv4 Address
-	*
-	* Updated version suggested by Geert De Deckere
-	*
-	* @access	protected
-	* @param	string
-	* @return	bool
-	*/
-	protected function _valid_ipv4($ip)
+					// Again, an IPv6 address is most likely in a compressed form
+					if ($separator === ':')
 	{
-		$ip_segments = explode('.', $ip);
-
-		// Always 4 segments needed
-		if (count($ip_segments) !== 4)
+						$netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));
+						for ($i = 0; $i < 8; $i++)
 		{
-			return FALSE;
+							$netaddr[$i] = intval($netaddr[$i], 16);
+						}
 		}
-		// IP can not start with 0
-		if ($ip_segments[0][0] == '0')
+					else
 		{
-			return FALSE;
+						$netaddr = explode('.', $netaddr);
 		}
 
-		// Check each segment
-		foreach ($ip_segments as $segment)
-		{
-			// IP segments must be digits and can not be
-			// longer than 3 digits or greater then 255
-			if ($segment == '' OR preg_match("/[^0-9]/", $segment) OR $segment > 255 OR strlen($segment) > 3)
+					// Convert to binary and finally compare
+					if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0)
 			{
-				return FALSE;
+						$this->ip_address = $spoof;
+						break;
 			}
 		}
-
-		return TRUE;
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	* Validate IPv6 Address
-	*
-	* @access	protected
-	* @param	string
-	* @return	bool
-	*/
-	protected function _valid_ipv6($str)
-	{
-		// 8 groups, separated by :
-		// 0-ffff per group
-		// one set of consecutive 0 groups can be collapsed to ::
-
-		$groups = 8;
-		$collapsed = FALSE;
-
-		$chunks = array_filter(
-			preg_split('/(:{1,2})/', $str, NULL, PREG_SPLIT_DELIM_CAPTURE)
-		);
-
-		// Rule out easy nonsense
-		if (current($chunks) == ':' OR end($chunks) == ':')
-		{
-			return FALSE;
 		}
 
-		// PHP supports IPv4-mapped IPv6 addresses, so we'll expect those as well
-		if (strpos(end($chunks), '.') !== FALSE)
-		{
-			$ipv4 = array_pop($chunks);
-
-			if ( ! $this->_valid_ipv4($ipv4))
+		if ( ! $this->valid_ip($this->ip_address))
 			{
-				return FALSE;
-			}
-
-			$groups--;
+			return $this->ip_address = '0.0.0.0';
 		}
 
-		while ($seg = array_pop($chunks))
-		{
-			if ($seg[0] == ':')
-			{
-				if (--$groups == 0)
-				{
-					return FALSE;	// too many groups
+		return $this->ip_address;
 				}
 
-				if (strlen($seg) > 2)
-				{
-					return FALSE;	// long separator
-				}
+	// --------------------------------------------------------------------
 
-				if ($seg == '::')
-				{
-					if ($collapsed)
+	/**
+	 * Validate IP Address
+	 *
+	 * @param	string	$ip	IP address
+	 * @param	string	$which	IP protocol: 'ipv4' or 'ipv6'
+	 * @return	bool
+	 */
+	public function valid_ip($ip, $which = '')
 					{
-						return FALSE;	// multiple collapsed
-					}
-
-					$collapsed = TRUE;
-				}
-			}
-			elseif (preg_match("/[^0-9a-f]/i", $seg) OR strlen($seg) > 4)
+		switch (strtolower($which))
 			{
-				return FALSE; // invalid segment
-			}
+			case 'ipv4':
+				$which = FILTER_FLAG_IPV4;
+				break;
+			case 'ipv6':
+				$which = FILTER_FLAG_IPV6;
+				break;
+			default:
+				$which = NULL;
+				break;
 		}
 
-		return $collapsed OR $groups == 1;
+		return (bool) filter_var($ip, FILTER_VALIDATE_IP, $which);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* User Agent
+	 * Fetch User Agent string
 	*
-	* @access	public
-	* @return	string
+	 * @return	string|null	User Agent string or NULL if it doesn't exist
 	*/
-	function user_agent()
-	{
-		if ($this->user_agent !== FALSE)
+	public function user_agent($xss_clean = NULL)
 		{
-			return $this->user_agent;
-		}
-
-		$this->user_agent = ( ! isset($_SERVER['HTTP_USER_AGENT'])) ? FALSE : $_SERVER['HTTP_USER_AGENT'];
-
-		return $this->user_agent;
+		return $this->_fetch_from_array($_SERVER, 'HTTP_USER_AGENT', $xss_clean);
 	}
 
 	// --------------------------------------------------------------------
@@ -550,68 +591,31 @@
 	/**
 	* Sanitize Globals
 	*
-	* This function does the following:
-	*
-	* Unsets $_GET data (if query strings are not enabled)
-	*
-	* Unsets all globals if register_globals is enabled
+	 * Internal method serving for the following purposes:
 	*
-	* Standardizes newline characters to \n
+	 *	- Unsets $_GET data, if query strings are not enabled
+	 *	- Cleans POST, COOKIE and SERVER data
+	 * 	- Standardizes newline characters to PHP_EOL
 	*
-	* @access	private
 	* @return	void
 	*/
-	function _sanitize_globals()
-	{
-		// It would be "wrong" to unset any of these GLOBALS.
-		$protected = array('_SERVER', '_GET', '_POST', '_FILES', '_REQUEST',
-							'_SESSION', '_ENV', 'GLOBALS', 'HTTP_RAW_POST_DATA',
-							'system_folder', 'application_folder', 'BM', 'EXT',
-							'CFG', 'URI', 'RTR', 'OUT', 'IN');
-
-		// Unset globals for securiy.
-		// This is effectively the same as register_globals = off
-		foreach (array($_GET, $_POST, $_COOKIE) as $global)
-		{
-			if ( ! is_array($global))
-			{
-				if ( ! in_array($global, $protected))
-				{
-					global $$global;
-					$$global = NULL;
-				}
-			}
-			else
-			{
-				foreach ($global as $key => $val)
-				{
-					if ( ! in_array($key, $protected))
+	protected function _sanitize_globals()
 					{
-						global $$key;
-						$$key = NULL;
-					}
-				}
-			}
-		}
-
 		// Is $_GET data allowed? If not we'll set the $_GET to an empty array
-		if ($this->_allow_get_array == FALSE)
+		if ($this->_allow_get_array === FALSE)
 		{
 			$_GET = array();
 		}
-		else
-		{
-			if (is_array($_GET) AND count($_GET) > 0)
+		elseif (is_array($_GET))
 			{
 				foreach ($_GET as $key => $val)
 				{
 					$_GET[$this->_clean_input_keys($key)] = $this->_clean_input_data($val);
 				}
 			}
-		}
 
 		// Clean $_POST Data
-		if (is_array($_POST) AND count($_POST) > 0)
+		if (is_array($_POST))
 		{
 			foreach ($_POST as $key => $val)
 			{
@@ -620,34 +624,36 @@
 		}
 
 		// Clean $_COOKIE Data
-		if (is_array($_COOKIE) AND count($_COOKIE) > 0)
+		if (is_array($_COOKIE))
 		{
 			// Also get rid of specially treated cookies that might be set by a server
 			// or silly application, that are of no use to a CI application anyway
 			// but that when present will trip our 'Disallowed Key Characters' alarm
 			// http://www.ietf.org/rfc/rfc2109.txt
 			// note that the key names below are single quoted strings, and are not PHP variables
-			unset($_COOKIE['$Version']);
-			unset($_COOKIE['$Path']);
-			unset($_COOKIE['$Domain']);
+			unset(
+				$_COOKIE['$Version'],
+				$_COOKIE['$Path'],
+				$_COOKIE['$Domain']
+			);
 
 			foreach ($_COOKIE as $key => $val)
 			{
-				$_COOKIE[$this->_clean_input_keys($key)] = $this->_clean_input_data($val);
+				if (($cookie_key = $this->_clean_input_keys($key)) !== FALSE)
+				{
+					$_COOKIE[$cookie_key] = $this->_clean_input_data($val);
+				}
+				else
+				{
+					unset($_COOKIE[$key]);
+				}
 			}
 		}
 
 		// Sanitize PHP_SELF
 		$_SERVER['PHP_SELF'] = strip_tags($_SERVER['PHP_SELF']);
 
-
-		// CSRF Protection check on HTTP requests
-		if ($this->_enable_csrf == TRUE && ! $this->is_cli_request())
-		{
-			$this->security->csrf_verify();
-		}
-
-		log_message('debug', "Global POST and COOKIE data sanitized");
+		log_message('debug', 'Global POST, GET and COOKIE data sanitized');
 	}
 
 	// --------------------------------------------------------------------
@@ -655,21 +661,20 @@
 	/**
 	* Clean Input Data
 	*
-	* This is a helper function. It escapes data and
-	* standardizes newline characters to \n
+	 * Internal method that aids in escaping data and
+	 * standardizing newline characters to PHP_EOL.
 	*
-	* @access	private
-	* @param	string
+	 * @param	string|string[]	$str	Input string(s)
 	* @return	string
 	*/
-	function _clean_input_data($str)
+	protected function _clean_input_data($str)
 	{
 		if (is_array($str))
 		{
 			$new_array = array();
-			foreach ($str as $key => $val)
+			foreach (array_keys($str) as $key)
 			{
-				$new_array[$this->_clean_input_keys($key)] = $this->_clean_input_data($val);
+				$new_array[$this->_clean_input_keys($key)] = $this->_clean_input_data($str[$key]);
 			}
 			return $new_array;
 		}
@@ -691,21 +696,12 @@
 		}
 
 		// Remove control characters
-		$str = remove_invisible_characters($str);
-
-		// Should we filter the input data?
-		if ($this->_enable_xss === TRUE)
-		{
-			$str = $this->security->xss_clean($str);
-		}
+		$str = remove_invisible_characters($str, FALSE);
 
 		// Standardize newlines if needed
-		if ($this->_standardize_newlines == TRUE)
+		if ($this->_standardize_newlines === TRUE)
 		{
-			if (strpos($str, "\r") !== FALSE)
-			{
-				$str = str_replace(array("\r\n", "\r", "\r\n\n"), PHP_EOL, $str);
-			}
+			return preg_replace('/(?:\r\n|[\r\n])/', PHP_EOL, $str);
 		}
 
 		return $str;
@@ -716,25 +712,36 @@
 	/**
 	* Clean Keys
 	*
-	* This is a helper function. To prevent malicious users
+	 * Internal method that helps to prevent malicious users
 	* from trying to exploit keys we make sure that keys are
 	* only named with alpha-numeric text and a few other items.
 	*
-	* @access	private
-	* @param	string
-	* @return	string
+	 * @param	string	$str	Input string
+	 * @param	bool	$fatal	Whether to terminate script exection
+	 *				or to return FALSE if an invalid
+	 *				key is encountered
+	 * @return	string|bool
 	*/
-	function _clean_input_keys($str)
+	protected function _clean_input_keys($str, $fatal = TRUE)
+	{
+		if ( ! preg_match('/^[a-z0-9:_\/|-]+$/i', $str))
+		{
+			if ($fatal === TRUE)
 	{
-		if ( ! preg_match("/^[a-z0-9:_\/-]+$/i", $str))
+				return FALSE;
+			}
+			else
 		{
-			exit('Disallowed Key Characters.');
+				set_status_header(503);
+				echo 'Disallowed Key Characters.';
+				exit(7); // EXIT_USER_INPUT
+			}
 		}
 
 		// Clean UTF-8 if supported
 		if (UTF8_ENABLED === TRUE)
 		{
-			$str = $this->uni->clean_string($str);
+			return $this->uni->clean_string($str);
 		}
 
 		return $str;
@@ -745,40 +752,35 @@
 	/**
 	 * Request Headers
 	 *
-	 * In Apache, you can simply call apache_request_headers(), however for
-	 * people running other webservers the function is undefined.
-	 *
-	 * @param	bool XSS cleaning
-	 *
+	 * @param	bool	$xss_clean	Whether to apply XSS filtering
 	 * @return array
 	 */
 	public function request_headers($xss_clean = FALSE)
 	{
-		// Look at Apache go!
-		if (function_exists('apache_request_headers'))
+		// If header is already defined, return it immediately
+		if ( ! empty($this->headers))
 		{
-			$headers = apache_request_headers();
+			return $this->headers;
 		}
-		else
+
+		// In Apache, you can simply call apache_request_headers()
+		if (function_exists('apache_request_headers'))
 		{
-			$headers['Content-Type'] = (isset($_SERVER['CONTENT_TYPE'])) ? $_SERVER['CONTENT_TYPE'] : @getenv('CONTENT_TYPE');
+			return $this->headers = apache_request_headers();
+		}
+
+		$this->headers['Content-Type'] = isset($_SERVER['CONTENT_TYPE']) ? $_SERVER['CONTENT_TYPE'] : @getenv('CONTENT_TYPE');
 
 			foreach ($_SERVER as $key => $val)
 			{
-				if (strncmp($key, 'HTTP_', 5) === 0)
+			if (sscanf($key, 'HTTP_%s', $header) === 1)
 				{
-					$headers[substr($key, 5)] = $this->_fetch_from_array($_SERVER, $key, $xss_clean);
-				}
-			}
-		}
-
 		// take SOME_HEADER and turn it into Some-Header
-		foreach ($headers as $key => $val)
-		{
-			$key = str_replace('_', ' ', strtolower($key));
-			$key = str_replace(' ', '-', ucwords($key));
+				$header = str_replace('_', ' ', strtolower($header));
+				$header = str_replace(' ', '-', ucwords($header));
 
-			$this->headers[$key] = $val;
+				$this->headers[$header] = $this->_fetch_from_array($_SERVER, $key, $xss_clean);
+			}
 		}
 
 		return $this->headers;
@@ -791,28 +793,33 @@
 	 *
 	 * Returns the value of a single member of the headers class member
 	 *
-	 * @param 	string		array key for $this->headers
-	 * @param	boolean		XSS Clean or not
-	 * @return 	mixed		FALSE on failure, string on success
+	 * @param	string		$index		Header name
+	 * @param	bool		$xss_clean	Whether to apply XSS filtering
+	 * @return	string|null	The requested header on success or NULL on failure
 	 */
 	public function get_request_header($index, $xss_clean = FALSE)
 	{
-		if (empty($this->headers))
-		{
-			$this->request_headers();
-		}
+		static $headers;
 
-		if ( ! isset($this->headers[$index]))
+		if ( ! isset($headers))
 		{
-			return FALSE;
+			empty($this->headers) && $this->request_headers();
+			foreach ($this->headers as $key => $value)
+			{
+				$headers[strtolower($key)] = $value;
+			}
 		}
 
-		if ($xss_clean === TRUE)
+		$index = strtolower($index);
+
+		if ( ! isset($headers[$index]))
 		{
-			return $this->security->xss_clean($this->headers[$index]);
+			return NULL;
 		}
 
-		return $this->headers[$index];
+		return ($xss_clean === TRUE)
+			? $this->security->xss_clean($headers[$index])
+			: $headers[$index];
 	}
 
 	// --------------------------------------------------------------------
@@ -820,13 +827,13 @@
 	/**
 	 * Is ajax Request?
 	 *
-	 * Test to see if a request contains the HTTP_X_REQUESTED_WITH header
+	 * Test to see if a request contains the HTTP_X_REQUESTED_WITH header.
 	 *
-	 * @return 	boolean
+	 * @return 	bool
 	 */
 	public function is_ajax_request()
 	{
-		return ($this->server('HTTP_X_REQUESTED_WITH') === 'XMLHttpRequest');
+		return ( ! empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) === 'xmlhttprequest');
 	}
 
 	// --------------------------------------------------------------------
@@ -834,16 +841,55 @@
 	/**
 	 * Is cli Request?
 	 *
-	 * Test to see if a request was made from the command line
+	 * Test to see if a request was made from the command line.
 	 *
+	 * @deprecated	3.0.0	Use is_cli() instead
 	 * @return 	bool
 	 */
 	public function is_cli_request()
 	{
-		return (php_sapi_name() === 'cli' OR defined('STDIN'));
+		return is_cli();
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Get Request Method
+	 *
+	 * Return the request method
+	 *
+	 * @param	bool	$upper	Whether to return in upper or lower case
+	 *				(default: FALSE)
+	 * @return 	string
+	 */
+	public function method($upper = FALSE)
+	{
+		return ($upper)
+			? strtoupper($this->server('REQUEST_METHOD'))
+			: strtolower($this->server('REQUEST_METHOD'));
 	}
 
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Magic __get()
+	 *
+	 * Allows read access to protected properties
+	 *
+	 * @param	string	$name
+	 * @return	mixed
+	 */
+	public function __get($name)
+	{
+		if ($name === 'raw_input_stream')
+		{
+			isset($this->_raw_input_stream) OR $this->_raw_input_stream = file_get_contents('php://input');
+			return $this->_raw_input_stream;
+		}
+		elseif ($name === 'ip_address')
+		{
+			return $this->ip_address;
+		}
 }
 
-/* End of file Input.php */
-/* Location: ./system/core/Input.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Lang.php opensourcepos/system/core/Lang.php
--- pos-prod/system/core/Lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Lang.php	2016-05-23 15:32:31.933838974 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Language Class
@@ -21,8 +43,8 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Language
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/language.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/language.html
  */
 class CI_Lang {
 
@@ -31,22 +53,23 @@
 	 *
 	 * @var array
 	 */
-	var $language	= array();
+	public $language =	array();
+
 	/**
 	 * List of loaded language files
 	 *
 	 * @var array
 	 */
-	var $is_loaded	= array();
+	public $is_loaded =	array();
 
 	/**
-	 * Constructor
+	 * Class constructor
 	 *
-	 * @access	public
+	 * @return	void
 	 */
-	function __construct()
+	public function __construct()
 	{
-		log_message('debug', "Language Class Initialized");
+		log_message('info', 'Language Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -54,98 +77,122 @@
 	/**
 	 * Load a language file
 	 *
-	 * @access	public
-	 * @param	mixed	the name of the language file to be loaded. Can be an array
-	 * @param	string	the language (english, etc.)
-	 * @param	bool	return loaded array of translations
-	 * @param 	bool	add suffix to $langfile
-	 * @param 	string	alternative path to look for language file
-	 * @return	mixed
+	 * @param	mixed	$langfile	Language file name
+	 * @param	string	$idiom		Language name (english, etc.)
+	 * @param	bool	$return		Whether to return the loaded array of translations
+	 * @param 	bool	$add_suffix	Whether to add suffix to $langfile
+	 * @param 	string	$alt_path	Alternative path to look for the language file
+	 *
+	 * @return	void|string[]	Array containing translations, if $return is set to TRUE
 	 */
-	function load($langfile = '', $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '')
+	public function load($langfile, $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '')
+	{
+		if (is_array($langfile))
+		{
+			foreach ($langfile as $value)
 	{
+				$this->load($value, $idiom, $return, $add_suffix, $alt_path);
+			}
+
+			return;
+		}
+
 		$langfile = str_replace('.php', '', $langfile);
 
-		if ($add_suffix == TRUE)
+		if ($add_suffix === TRUE)
 		{
-			$langfile = str_replace('_lang.', '', $langfile).'_lang';
+			$langfile = preg_replace('/_lang$/', '', $langfile).'_lang';
 		}
 
 		$langfile .= '.php';
 
-		if (in_array($langfile, $this->is_loaded, TRUE))
+		if (empty($idiom) OR ! preg_match('/^[a-z_-]+$/i', $idiom))
 		{
-			return;
+			$config =& get_config();
+			$idiom = empty($config['language']) ? 'english' : $config['language'];
 		}
 
-		$config =& get_config();
+		if ($return === FALSE && isset($this->is_loaded[$langfile]) && $this->is_loaded[$langfile] === $idiom)
+		{
+			return;
+		}
 
-		if ($idiom == '')
+		// Load the base file, so any others found can override it
+		$basepath = BASEPATH.'language/'.$idiom.'/'.$langfile;
+		if (($found = file_exists($basepath)) === TRUE)
 		{
-			$deft_lang = ( ! isset($config['language'])) ? 'english' : $config['language'];
-			$idiom = ($deft_lang == '') ? 'english' : $deft_lang;
+			include($basepath);
 		}
 
-		// Determine where the language file is and load it
-		if ($alt_path != '' && file_exists($alt_path.'language/'.$idiom.'/'.$langfile))
+		// Do we have an alternative path to look in?
+		if ($alt_path !== '')
+		{
+			$alt_path .= 'language/'.$idiom.'/'.$langfile;
+			if (file_exists($alt_path))
 		{
-			include($alt_path.'language/'.$idiom.'/'.$langfile);
+				include($alt_path);
+				$found = TRUE;
+			}
 		}
 		else
 		{
-			$found = FALSE;
-
 			foreach (get_instance()->load->get_package_paths(TRUE) as $package_path)
 			{
-				if (file_exists($package_path.'language/'.$idiom.'/'.$langfile))
+				$package_path .= 'language/'.$idiom.'/'.$langfile;
+				if ($basepath !== $package_path && file_exists($package_path))
 				{
-					include($package_path.'language/'.$idiom.'/'.$langfile);
+					include($package_path);
 					$found = TRUE;
 					break;
 				}
 			}
+		}
 
 			if ($found !== TRUE)
 			{
 				show_error('Unable to load the requested language file: language/'.$idiom.'/'.$langfile);
 			}
-		}
-
 
-		if ( ! isset($lang))
+		if ( ! isset($lang) OR ! is_array($lang))
 		{
 			log_message('error', 'Language file contains no data: language/'.$idiom.'/'.$langfile);
+
+			if ($return === TRUE)
+			{
+				return array();
+			}
 			return;
 		}
 
-		if ($return == TRUE)
+		if ($return === TRUE)
 		{
 			return $lang;
 		}
 
-		$this->is_loaded[] = $langfile;
+		$this->is_loaded[$langfile] = $idiom;
 		$this->language = array_merge($this->language, $lang);
-		unset($lang);
 
-		log_message('debug', 'Language file loaded: language/'.$idiom.'/'.$langfile);
+		log_message('info', 'Language file loaded: language/'.$idiom.'/'.$langfile);
 		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a single line of text from the language array
+	 * Language line
+	 *
+	 * Fetches a single line of text from the language array
 	 *
-	 * @access	public
-	 * @param	string	$line	the language line
-	 * @return	string
+	 * @param	string	$line		Language line key
+	 * @param	bool	$log_errors	Whether to log an error message if the line is not found
+	 * @return	string	Translation
 	 */
-	function line($line = '')
+	public function line($line, $log_errors = TRUE)
 	{
-		$value = ($line == '' OR ! isset($this->language[$line])) ? FALSE : $this->language[$line];
+		$value = isset($this->language[$line]) ? $this->language[$line] : FALSE;
 
 		// Because killer robots like unicorns!
-		if ($value === FALSE)
+		if ($value === FALSE && $log_errors === TRUE)
 		{
 			log_message('error', 'Could not find the language line "'.$line.'"');
 		}
@@ -154,7 +201,3 @@
 	}
 
 }
-// END Language Class
-
-/* End of file Lang.php */
-/* Location: ./system/core/Lang.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Loader.php opensourcepos/system/core/Loader.php
--- pos-prod/system/core/Loader.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Loader.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,30 +1,52 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Loader Class
  *
- * Loads views and files
+ * Loads framework components.
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
- * @author		ExpressionEngine Dev Team
  * @category	Loader
- * @link		http://codeigniter.com/user_guide/libraries/loader.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/loader.html
  */
 class CI_Loader {
 
@@ -33,9 +55,9 @@
 	 * Nesting level of the output buffering mechanism
 	 *
 	 * @var int
-	 * @access protected
 	 */
 	protected $_ci_ob_level;
+
 	/**
 	 * List of paths to load views from
 	 *
@@ -40,45 +62,37 @@
 	 * List of paths to load views from
 	 *
 	 * @var array
-	 * @access protected
 	 */
-	protected $_ci_view_paths		= array();
+	protected $_ci_view_paths =	array(VIEWPATH	=> TRUE);
+
 	/**
 	 * List of paths to load libraries from
 	 *
 	 * @var array
-	 * @access protected
 	 */
-	protected $_ci_library_paths	= array();
+	protected $_ci_library_paths =	array(APPPATH, BASEPATH);
+
 	/**
 	 * List of paths to load models from
 	 *
 	 * @var array
-	 * @access protected
 	 */
-	protected $_ci_model_paths		= array();
+	protected $_ci_model_paths =	array(APPPATH);
+
 	/**
 	 * List of paths to load helpers from
 	 *
 	 * @var array
-	 * @access protected
-	 */
-	protected $_ci_helper_paths		= array();
-	/**
-	 * List of loaded base classes
-	 * Set by the controller class
-	 *
-	 * @var array
-	 * @access protected
 	 */
-	protected $_base_classes		= array(); // Set by the controller class
+	protected $_ci_helper_paths =	array(APPPATH, BASEPATH);
+
 	/**
 	 * List of cached variables
 	 *
 	 * @var array
-	 * @access protected
 	 */
 	protected $_ci_cached_vars		= array();
+
 	/**
 	 * List of loaded classes
 	 *
@@ -83,23 +97,16 @@
 	 * List of loaded classes
 	 *
 	 * @var array
-	 * @access protected
 	 */
 	protected $_ci_classes			= array();
-	/**
-	 * List of loaded files
-	 *
-	 * @var array
-	 * @access protected
-	 */
-	protected $_ci_loaded_files		= array();
+
 	/**
 	 * List of loaded models
 	 *
 	 * @var array
-	 * @access protected
 	 */
 	protected $_ci_models			= array();
+
 	/**
 	 * List of loaded helpers
 	 *
@@ -104,9 +111,9 @@
 	 * List of loaded helpers
 	 *
 	 * @var array
-	 * @access protected
 	 */
 	protected $_ci_helpers			= array();
+
 	/**
 	 * List of class name mappings
 	 *
@@ -111,47 +118,43 @@
 	 * List of class name mappings
 	 *
 	 * @var array
-	 * @access protected
 	 */
-	protected $_ci_varmap			= array('unit_test' => 'unit',
-											'user_agent' => 'agent');
+	protected $_ci_varmap =	array(
+		'unit_test' => 'unit',
+		'user_agent' => 'agent'
+	);
+
+	// --------------------------------------------------------------------
 
 	/**
-	 * Constructor
+	 * Class constructor
+	 *
+	 * Sets component load paths, gets the initial output buffering level.
 	 *
-	 * Sets the path to the view files and gets the initial output buffering level
+	 * @return	void
 	 */
 	public function __construct()
 	{
 		$this->_ci_ob_level  = ob_get_level();
-		$this->_ci_library_paths = array(APPPATH, BASEPATH);
-		$this->_ci_helper_paths = array(APPPATH, BASEPATH);
-		$this->_ci_model_paths = array(APPPATH);
-		$this->_ci_view_paths = array(APPPATH.'views/'	=> TRUE);
+		$this->_ci_classes =& is_loaded();
 
-		log_message('debug', "Loader Class Initialized");
+		log_message('info', 'Loader Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Initialize the Loader
+	 * Initializer
 	 *
-	 * This method is called once in CI_Controller.
-	 *
-	 * @param 	array
-	 * @return 	object
+	 * @todo	Figure out a way to move this to the constructor
+	 *		without breaking *package_path*() methods.
+	 * @uses	CI_Loader::_ci_autoloader()
+	 * @used-by	CI_Controller::__construct()
+	 * @return	void
 	 */
 	public function initialize()
 	{
-		$this->_ci_classes = array();
-		$this->_ci_loaded_files = array();
-		$this->_ci_models = array();
-		$this->_base_classes =& is_loaded();
-
 		$this->_ci_autoloader();
-
-		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -159,61 +162,61 @@
 	/**
 	 * Is Loaded
 	 *
-	 * A utility function to test if a class is in the self::$_ci_classes array.
-	 * This function returns the object name if the class tested for is loaded,
-	 * and returns FALSE if it isn't.
+	 * A utility method to test if a class is in the self::$_ci_classes array.
 	 *
-	 * It is mainly used in the form_helper -> _get_validation_object()
+	 * @used-by	Mainly used by Form Helper function _get_validation_object().
 	 *
-	 * @param 	string	class being checked for
-	 * @return 	mixed	class object name on the CI SuperObject or FALSE
+	 * @param 	string		$class	Class name to check for
+	 * @return 	string|bool	Class object name if loaded or FALSE
 	 */
 	public function is_loaded($class)
 	{
-		if (isset($this->_ci_classes[$class]))
-		{
-			return $this->_ci_classes[$class];
-		}
-
-		return FALSE;
+		return array_search(ucfirst($class), $this->_ci_classes, TRUE);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Class Loader
+	 * Library Loader
 	 *
-	 * This function lets users load and instantiate classes.
-	 * It is designed to be called from a user's app controllers.
+	 * Loads and instantiates libraries.
+	 * Designed to be called from application controllers.
 	 *
-	 * @param	string	the name of the class
-	 * @param	mixed	the optional parameters
-	 * @param	string	an optional object name
-	 * @return	void
+	 * @param	string	$library	Library name
+	 * @param	array	$params		Optional parameters to pass to the library class constructor
+	 * @param	string	$object_name	An optional object name to assign to
+	 * @return	object
 	 */
-	public function library($library = '', $params = NULL, $object_name = NULL)
+	public function library($library, $params = NULL, $object_name = NULL)
 	{
-		if (is_array($library))
+		if (empty($library))
 		{
-			foreach ($library as $class)
+			return $this;
+		}
+		elseif (is_array($library))
+		{
+			foreach ($library as $key => $value)
 			{
-				$this->library($class, $params);
+				if (is_int($key))
+				{
+					$this->library($value, $params);
+				}
+				else
+				{
+					$this->library($key, $params, $value);
 			}
-
-			return;
 		}
 
-		if ($library == '' OR isset($this->_base_classes[$library]))
-		{
-			return FALSE;
+			return $this;
 		}
 
-		if ( ! is_null($params) && ! is_array($params))
+		if ($params !== NULL && ! is_array($params))
 		{
 			$params = NULL;
 		}
 
-		$this->_ci_load_class($library, $params, $object_name);
+		$this->_ci_load_library($library, $params, $object_name);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -221,27 +224,27 @@
 	/**
 	 * Model Loader
 	 *
-	 * This function lets users load and instantiate models.
+	 * Loads and instantiates models.
 	 *
-	 * @param	string	the name of the class
-	 * @param	string	name for the model
-	 * @param	bool	database connection
-	 * @return	void
+	 * @param	string	$model		Model name
+	 * @param	string	$name		An optional object name to assign to
+	 * @param	bool	$db_conn	An optional database connection configuration to initialize
+	 * @return	object
 	 */
 	public function model($model, $name = '', $db_conn = FALSE)
 	{
-		if (is_array($model))
-		{
-			foreach ($model as $babe)
+		if (empty($model))
 			{
-				$this->model($babe);
+			return $this;
 			}
-			return;
+		elseif (is_array($model))
+		{
+			foreach ($model as $key => $value)
+			{
+				is_int($key) ? $this->model($value, '', $db_conn) : $this->model($key, $value, $db_conn);
 		}
 
-		if ($model == '')
-		{
-			return;
+			return $this;
 		}
 
 		$path = '';
@@ -250,64 +253,105 @@
 		if (($last_slash = strrpos($model, '/')) !== FALSE)
 		{
 			// The path is in front of the last slash
-			$path = substr($model, 0, $last_slash + 1);
+			$path = substr($model, 0, ++$last_slash);
 
 			// And the model name behind it
-			$model = substr($model, $last_slash + 1);
+			$model = substr($model, $last_slash);
 		}
 
-		if ($name == '')
+		if (empty($name))
 		{
 			$name = $model;
 		}
 
 		if (in_array($name, $this->_ci_models, TRUE))
 		{
-			return;
+			return $this;
 		}
 
 		$CI =& get_instance();
 		if (isset($CI->$name))
 		{
-			show_error('The model name you are loading is the name of a resource that is already being used: '.$name);
+			throw new RuntimeException('The model name you are loading is the name of a resource that is already being used: '.$name);
 		}
 
-		$model = strtolower($model);
-
-		foreach ($this->_ci_model_paths as $mod_path)
+		if ($db_conn !== FALSE && ! class_exists('CI_DB', FALSE))
 		{
-			if ( ! file_exists($mod_path.'models/'.$path.$model.'.php'))
+			if ($db_conn === TRUE)
 			{
-				continue;
+				$db_conn = '';
+			}
+
+			$this->database($db_conn, FALSE, TRUE);
 			}
 
-			if ($db_conn !== FALSE AND ! class_exists('CI_DB'))
+		// Note: All of the code under this condition used to be just:
+		//
+		//       load_class('Model', 'core');
+		//
+		//       However, load_class() instantiates classes
+		//       to cache them for later use and that prevents
+		//       MY_Model from being an abstract class and is
+		//       sub-optimal otherwise anyway.
+		if ( ! class_exists('CI_Model', FALSE))
 			{
-				if ($db_conn === TRUE)
+			$app_path = APPPATH.'core'.DIRECTORY_SEPARATOR;
+			if (file_exists($app_path.'Model.php'))
 				{
-					$db_conn = '';
+				require_once($app_path.'Model.php');
+				if ( ! class_exists('CI_Model', FALSE))
+				{
+					throw new RuntimeException($app_path."Model.php exists, but doesn't declare class CI_Model");
+				}
+			}
+			elseif ( ! class_exists('CI_Model', FALSE))
+			{
+				require_once(BASEPATH.'core'.DIRECTORY_SEPARATOR.'Model.php');
 				}
 
-				$CI->load->database($db_conn, FALSE, TRUE);
+			$class = config_item('subclass_prefix').'Model';
+			if (file_exists($app_path.$class.'.php'))
+			{
+				require_once($app_path.$class.'.php');
+				if ( ! class_exists($class, FALSE))
+				{
+					throw new RuntimeException($app_path.$class.".php exists, but doesn't declare class ".$class);
+				}
+			}
 			}
 
-			if ( ! class_exists('CI_Model'))
+		$model = ucfirst($model);
+		if ( ! class_exists($model, FALSE))
+		{
+			foreach ($this->_ci_model_paths as $mod_path)
+			{
+				if ( ! file_exists($mod_path.'models/'.$path.$model.'.php'))
 			{
-				load_class('Model', 'core');
+					continue;
 			}
 
 			require_once($mod_path.'models/'.$path.$model.'.php');
+				if ( ! class_exists($model, FALSE))
+				{
+					throw new RuntimeException($mod_path."models/".$path.$model.".php exists, but doesn't declare class ".$model);
+				}
 
-			$model = ucfirst($model);
-
-			$CI->$name = new $model();
+				break;
+			}
 
-			$this->_ci_models[] = $name;
-			return;
+			if ( ! class_exists($model, FALSE))
+			{
+				throw new RuntimeException('Unable to locate the model you have specified: '.$model);
+			}
+		}
+		elseif ( ! is_subclass_of($model, 'CI_Model'))
+		{
+			throw new RuntimeException("Class ".$model." already exists and doesn't extend CI_Model");
 		}
 
-		// couldn't find the model
-		show_error('Unable to locate the model you have specified: '.$model);
+		$this->_ci_models[] = $name;
+		$CI->$name = new $model();
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -315,18 +359,21 @@
 	/**
 	 * Database Loader
 	 *
-	 * @param	string	the DB credentials
-	 * @param	bool	whether to return the DB object
-	 * @param	bool	whether to enable active record (this allows us to override the config setting)
-	 * @return	object
+	 * @param	mixed	$params		Database configuration options
+	 * @param	bool	$return 	Whether to return the database object
+	 * @param	bool	$query_builder	Whether to enable Query Builder
+	 *					(overrides the configuration setting)
+	 *
+	 * @return	object|bool	Database object if $return is set to TRUE,
+	 *					FALSE on failure, CI_Loader instance in any other case
 	 */
-	public function database($params = '', $return = FALSE, $active_record = NULL)
+	public function database($params = '', $return = FALSE, $query_builder = NULL)
 	{
 		// Grab the super object
 		$CI =& get_instance();
 
 		// Do we even need to load the database class?
-		if (class_exists('CI_DB') AND $return == FALSE AND $active_record == NULL AND isset($CI->db) AND is_object($CI->db))
+		if ($return === FALSE && $query_builder === NULL && isset($CI->db) && is_object($CI->db) && ! empty($CI->db->conn_id))
 		{
 			return FALSE;
 		}
@@ -335,7 +382,7 @@
 
 		if ($return === TRUE)
 		{
-			return DB($params, $active_record);
+			return DB($params, $query_builder);
 		}
 
 		// Initialize the db variable.  Needed to prevent
@@ -343,34 +390,40 @@
 		$CI->db = '';
 
 		// Load the DB class
-		$CI->db =& DB($params, $active_record);
+		$CI->db =& DB($params, $query_builder);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Load the Utilities Class
+	 * Load the Database Utilities Class
 	 *
-	 * @return	string
+	 * @param	object	$db	Database object
+	 * @param	bool	$return	Whether to return the DB Utilities class object or not
+	 * @return	object
 	 */
-	public function dbutil()
-	{
-		if ( ! class_exists('CI_DB'))
+	public function dbutil($db = NULL, $return = FALSE)
 		{
-			$this->database();
-		}
-
 		$CI =& get_instance();
 
-		// for backwards compatibility, load dbforge so we can extend dbutils off it
-		// this use is deprecated and strongly discouraged
-		$CI->load->dbforge();
+		if ( ! is_object($db) OR ! ($db instanceof CI_DB))
+		{
+			class_exists('CI_DB', FALSE) OR $this->database();
+			$db =& $CI->db;
+		}
 
 		require_once(BASEPATH.'database/DB_utility.php');
-		require_once(BASEPATH.'database/drivers/'.$CI->db->dbdriver.'/'.$CI->db->dbdriver.'_utility.php');
-		$class = 'CI_DB_'.$CI->db->dbdriver.'_utility';
+		require_once(BASEPATH.'database/drivers/'.$db->dbdriver.'/'.$db->dbdriver.'_utility.php');
+		$class = 'CI_DB_'.$db->dbdriver.'_utility';
 
-		$CI->dbutil = new $class();
+		if ($return === TRUE)
+		{
+			return new $class($db);
+		}
+
+		$CI->dbutil = new $class($db);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -378,41 +431,58 @@
 	/**
 	 * Load the Database Forge Class
 	 *
-	 * @return	string
+	 * @param	object	$db	Database object
+	 * @param	bool	$return	Whether to return the DB Forge class object or not
+	 * @return	object
 	 */
-	public function dbforge()
+	public function dbforge($db = NULL, $return = FALSE)
 	{
-		if ( ! class_exists('CI_DB'))
+		$CI =& get_instance();
+		if ( ! is_object($db) OR ! ($db instanceof CI_DB))
 		{
-			$this->database();
+			class_exists('CI_DB', FALSE) OR $this->database();
+			$db =& $CI->db;
 		}
 
-		$CI =& get_instance();
-
 		require_once(BASEPATH.'database/DB_forge.php');
-		require_once(BASEPATH.'database/drivers/'.$CI->db->dbdriver.'/'.$CI->db->dbdriver.'_forge.php');
-		$class = 'CI_DB_'.$CI->db->dbdriver.'_forge';
+		require_once(BASEPATH.'database/drivers/'.$db->dbdriver.'/'.$db->dbdriver.'_forge.php');
+
+		if ( ! empty($db->subdriver))
+		{
+			$driver_path = BASEPATH.'database/drivers/'.$db->dbdriver.'/subdrivers/'.$db->dbdriver.'_'.$db->subdriver.'_forge.php';
+			if (file_exists($driver_path))
+			{
+				require_once($driver_path);
+				$class = 'CI_DB_'.$db->dbdriver.'_'.$db->subdriver.'_forge';
+			}
+		}
+		else
+		{
+			$class = 'CI_DB_'.$db->dbdriver.'_forge';
+		}
 
-		$CI->dbforge = new $class();
+		if ($return === TRUE)
+		{
+			return new $class($db);
+		}
+
+		$CI->dbforge = new $class($db);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Load View
-	 *
-	 * This function is used to load a "view" file.  It has three parameters:
+	 * View Loader
 	 *
-	 * 1. The name of the "view" file to be included.
-	 * 2. An associative array of data to be extracted for use in the view.
-	 * 3. TRUE/FALSE - whether to return the data or load it.  In
-	 * some cases it's advantageous to be able to return data so that
-	 * a developer can process it in some way.
+	 * Loads "view" files.
 	 *
-	 * @param	string
-	 * @param	array
-	 * @param	bool
-	 * @return	void
+	 * @param	string	$view	View name
+	 * @param	array	$vars	An associative array of data
+	 *				to be extracted for use in the view
+	 * @param	bool	$return	Whether to return the view output
+	 *				or leave it to the Output class
+	 * @return	object|string
 	 */
 	public function view($view, $vars = array(), $return = FALSE)
 	{
@@ -422,13 +492,11 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Load File
+	 * Generic File Loader
 	 *
-	 * This is a generic file loader
-	 *
-	 * @param	string
-	 * @param	bool
-	 * @return	string
+	 * @param	string	$path	File path
+	 * @param	bool	$return	Whether to return the file output
+	 * @return	object|string
 	 */
 	public function file($path, $return = FALSE)
 	{
@@ -443,26 +511,45 @@
 	 * Once variables are set they become available within
 	 * the controller class and its "view" files.
 	 *
-	 * @param	array
-	 * @param 	string
-	 * @return	void
+	 * @param	array|object|string	$vars
+	 *					An associative array or object containing values
+	 *					to be set, or a value's name if string
+	 * @param 	string	$val	Value to set, only used if $vars is a string
+	 * @return	object
 	 */
-	public function vars($vars = array(), $val = '')
+	public function vars($vars, $val = '')
 	{
-		if ($val != '' AND is_string($vars))
+		if (is_string($vars))
 		{
 			$vars = array($vars => $val);
 		}
 
 		$vars = $this->_ci_object_to_array($vars);
 
-		if (is_array($vars) AND count($vars) > 0)
+		if (is_array($vars) && count($vars) > 0)
 		{
 			foreach ($vars as $key => $val)
 			{
 				$this->_ci_cached_vars[$key] = $val;
 			}
 		}
+
+		return $this;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Clear Cached Variables
+	 *
+	 * Clears the cached variables.
+	 *
+	 * @return	CI_Loader
+	 */
+	public function clear_vars()
+	{
+		$this->_ci_cached_vars = array();
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -472,8 +559,8 @@
 	 *
 	 * Check if a variable is set and retrieve it.
 	 *
-	 * @param	array
-	 * @return	void
+	 * @param	string	$key	Variable name
+	 * @return	mixed	The variable or NULL if not found
 	 */
 	public function get_var($key)
 	{
@@ -483,12 +570,24 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Load Helper
+	 * Get Variables
 	 *
-	 * This function loads the specified helper file.
+	 * Retrieves all loaded variables.
 	 *
-	 * @param	mixed
-	 * @return	void
+	 * @return	array
+	 */
+	public function get_vars()
+	{
+		return $this->_ci_cached_vars;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Helper Loader
+	 *
+	 * @param	string|string[]	$helpers	Helper name(s)
+	 * @return	object
 	 */
 	public function helper($helpers = array())
 	{
@@ -499,27 +598,34 @@
 				continue;
 			}
 
-			$ext_helper = APPPATH.'helpers/'.config_item('subclass_prefix').$helper.'.php';
-
 			// Is this a helper extension request?
-			if (file_exists($ext_helper))
+			$ext_helper = config_item('subclass_prefix').$helper;
+			$ext_loaded = FALSE;
+			foreach ($this->_ci_helper_paths as $path)
 			{
-				$base_helper = BASEPATH.'helpers/'.$helper.'.php';
+				if (file_exists($path.'helpers/'.$ext_helper.'.php'))
+				{
+					include_once($path.'helpers/'.$ext_helper.'.php');
+					$ext_loaded = TRUE;
+				}
+			}
 
+			// If we have loaded extensions - check if the base one is here
+			if ($ext_loaded === TRUE)
+			{
+				$base_helper = BASEPATH.'helpers/'.$helper.'.php';
 				if ( ! file_exists($base_helper))
 				{
 					show_error('Unable to load the requested file: helpers/'.$helper.'.php');
 				}
 
-				include_once($ext_helper);
 				include_once($base_helper);
-
 				$this->_ci_helpers[$helper] = TRUE;
-				log_message('debug', 'Helper loaded: '.$helper);
+				log_message('info', 'Helper loaded: '.$helper);
 				continue;
 			}
 
-			// Try to load the helper
+			// No extensions found ... try loading regular helpers and/or overrides
 			foreach ($this->_ci_helper_paths as $path)
 			{
 				if (file_exists($path.'helpers/'.$helper.'.php'))
@@ -527,7 +633,7 @@
 					include_once($path.'helpers/'.$helper.'.php');
 
 					$this->_ci_helpers[$helper] = TRUE;
-					log_message('debug', 'Helper loaded: '.$helper);
+					log_message('info', 'Helper loaded: '.$helper);
 					break;
 				}
 			}
@@ -538,6 +644,8 @@
 				show_error('Unable to load the requested file: helpers/'.$helper.'.php');
 			}
 		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -545,82 +653,96 @@
 	/**
 	 * Load Helpers
 	 *
-	 * This is simply an alias to the above function in case the
-	 * user has written the plural form of this function.
+	 * An alias for the helper() method in case the developer has
+	 * written the plural form of it.
 	 *
-	 * @param	array
-	 * @return	void
+	 * @uses	CI_Loader::helper()
+	 * @param	string|string[]	$helpers	Helper name(s)
+	 * @return	object
 	 */
 	public function helpers($helpers = array())
 	{
-		$this->helper($helpers);
+		return $this->helper($helpers);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Loads a language file
+	 * Language Loader
 	 *
-	 * @param	array
-	 * @param	string
-	 * @return	void
+	 * Loads language files.
+	 *
+	 * @param	string|string[]	$files	List of language file names to load
+	 * @param	string		Language name
+	 * @return	object
 	 */
-	public function language($file = array(), $lang = '')
-	{
-		$CI =& get_instance();
-
-		if ( ! is_array($file))
-		{
-			$file = array($file);
-		}
-
-		foreach ($file as $langfile)
+	public function language($files, $lang = '')
 		{
-			$CI->lang->load($langfile, $lang);
-		}
+		get_instance()->lang->load($files, $lang);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Loads a config file
+	 * Config Loader
 	 *
-	 * @param	string
-	 * @param	bool
-	 * @param 	bool
-	 * @return	void
+	 * Loads a config file (an alias for CI_Config::load()).
+	 *
+	 * @uses	CI_Config::load()
+	 * @param	string	$file			Configuration file name
+	 * @param	bool	$use_sections		Whether configuration values should be loaded into their own section
+	 * @param	bool	$fail_gracefully	Whether to just return FALSE or display an error message
+	 * @return	bool	TRUE if the file was loaded correctly or FALSE on failure
 	 */
-	public function config($file = '', $use_sections = FALSE, $fail_gracefully = FALSE)
+	public function config($file, $use_sections = FALSE, $fail_gracefully = FALSE)
 	{
-		$CI =& get_instance();
-		$CI->config->load($file, $use_sections, $fail_gracefully);
+		return get_instance()->config->load($file, $use_sections, $fail_gracefully);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Driver
+	 * Driver Loader
 	 *
-	 * Loads a driver library
+	 * Loads a driver library.
 	 *
-	 * @param	string	the name of the class
-	 * @param	mixed	the optional parameters
-	 * @param	string	an optional object name
-	 * @return	void
+	 * @param	string|string[]	$library	Driver name(s)
+	 * @param	array		$params		Optional parameters to pass to the driver
+	 * @param	string		$object_name	An optional object name to assign to
+	 *
+	 * @return	object|bool	Object or FALSE on failure if $library is a string
+	 *				and $object_name is set. CI_Loader instance otherwise.
 	 */
-	public function driver($library = '', $params = NULL, $object_name = NULL)
+	public function driver($library, $params = NULL, $object_name = NULL)
 	{
-		if ( ! class_exists('CI_Driver_Library'))
+		if (is_array($library))
 		{
-			// we aren't instantiating an object here, that'll be done by the Library itself
-			require BASEPATH.'libraries/Driver.php';
+			foreach ($library as $key => $value)
+			{
+				if (is_int($key))
+				{
+					$this->driver($value, $params);
+				}
+				else
+				{
+					$this->driver($key, $params, $value);
+				}
 		}
 
-		if ($library == '')
+			return $this;
+		}
+		elseif (empty($library))
 		{
 			return FALSE;
 		}
 
+		if ( ! class_exists('CI_Driver_Library', FALSE))
+		{
+			// We aren't instantiating an object here, just making the base class available
+			require BASEPATH.'libraries/Driver.php';
+		}
+
 		// We can save the loader some time since Drivers will *always* be in a subfolder,
 		// and typically identically named to the library
 		if ( ! strpos($library, '/'))
@@ -636,11 +758,17 @@
 	/**
 	 * Add Package Path
 	 *
-	 * Prepends a parent path to the library, model, helper, and config path arrays
+	 * Prepends a parent path to the library, model, helper and config
+	 * path arrays.
 	 *
-	 * @param	string
-	 * @param 	boolean
-	 * @return	void
+	 * @see	CI_Loader::$_ci_library_paths
+	 * @see	CI_Loader::$_ci_model_paths
+	 * @see CI_Loader::$_ci_helper_paths
+	 * @see CI_Config::$_config_paths
+	 *
+	 * @param	string	$path		Path to add
+	 * @param 	bool	$view_cascade	(default: TRUE)
+	 * @return	object
 	 */
 	public function add_package_path($path, $view_cascade=TRUE)
 	{
@@ -654,7 +782,9 @@
 
 		// Add config file path
 		$config =& $this->_ci_get_component('config');
-		array_unshift($config->_config_paths, $path);
+		$config->_config_paths[] = $path;
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -662,14 +792,14 @@
 	/**
 	 * Get Package Paths
 	 *
-	 * Return a list of all package paths, by default it will ignore BASEPATH.
+	 * Return a list of all package paths.
 	 *
-	 * @param	string
-	 * @return	void
+	 * @param	bool	$include_base	Whether to include BASEPATH (default: FALSE)
+	 * @return	array
 	 */
 	public function get_package_paths($include_base = FALSE)
 	{
-		return $include_base === TRUE ? $this->_ci_library_paths : $this->_ci_model_paths;
+		return ($include_base === TRUE) ? $this->_ci_library_paths : $this->_ci_model_paths;
 	}
 
 	// --------------------------------------------------------------------
@@ -677,24 +807,24 @@
 	/**
 	 * Remove Package Path
 	 *
-	 * Remove a path from the library, model, and helper path arrays if it exists
-	 * If no path is provided, the most recently added path is removed.
+	 * Remove a path from the library, model, helper and/or config
+	 * path arrays if it exists. If no path is provided, the most recently
+	 * added path will be removed removed.
 	 *
-	 * @param	type
-	 * @param 	bool
-	 * @return	type
+	 * @param	string	$path	Path to remove
+	 * @return	object
 	 */
-	public function remove_package_path($path = '', $remove_config_path = TRUE)
+	public function remove_package_path($path = '')
 	{
 		$config =& $this->_ci_get_component('config');
 
-		if ($path == '')
+		if ($path === '')
 		{
-			$void = array_shift($this->_ci_library_paths);
-			$void = array_shift($this->_ci_model_paths);
-			$void = array_shift($this->_ci_helper_paths);
-			$void = array_shift($this->_ci_view_paths);
-			$void = array_shift($config->_config_paths);
+			array_shift($this->_ci_library_paths);
+			array_shift($this->_ci_model_paths);
+			array_shift($this->_ci_helper_paths);
+			array_shift($this->_ci_view_paths);
+			array_pop($config->_config_paths);
 		}
 		else
 		{
@@ -724,32 +854,37 @@
 		$this->_ci_model_paths = array_unique(array_merge($this->_ci_model_paths, array(APPPATH)));
 		$this->_ci_view_paths = array_merge($this->_ci_view_paths, array(APPPATH.'views/' => TRUE));
 		$config->_config_paths = array_unique(array_merge($config->_config_paths, array(APPPATH)));
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Loader
+	 * Internal CI Data Loader
+	 *
+	 * Used to load views and files.
 	 *
-	 * This function is used to load views and files.
 	 * Variables are prefixed with _ci_ to avoid symbol collision with
-	 * variables made available to view files
+	 * variables made available to view files.
 	 *
-	 * @param	array
-	 * @return	void
+	 * @used-by	CI_Loader::view()
+	 * @used-by	CI_Loader::file()
+	 * @param	array	$_ci_data	Data to load
+	 * @return	object
 	 */
 	protected function _ci_load($_ci_data)
 	{
 		// Set the default data variables
 		foreach (array('_ci_view', '_ci_vars', '_ci_path', '_ci_return') as $_ci_val)
 		{
-			$$_ci_val = ( ! isset($_ci_data[$_ci_val])) ? FALSE : $_ci_data[$_ci_val];
+			$$_ci_val = isset($_ci_data[$_ci_val]) ? $_ci_data[$_ci_val] : FALSE;
 		}
 
 		$file_exists = FALSE;
 
 		// Set the path to the requested file
-		if ($_ci_path != '')
+		if (is_string($_ci_path) && $_ci_path !== '')
 		{
 			$_ci_x = explode('/', $_ci_path);
 			$_ci_file = end($_ci_x);
@@ -757,13 +892,13 @@
 		else
 		{
 			$_ci_ext = pathinfo($_ci_view, PATHINFO_EXTENSION);
-			$_ci_file = ($_ci_ext == '') ? $_ci_view.'.php' : $_ci_view;
+			$_ci_file = ($_ci_ext === '') ? $_ci_view.'.php' : $_ci_view;
 
-			foreach ($this->_ci_view_paths as $view_file => $cascade)
+			foreach ($this->_ci_view_paths as $_ci_view_file => $cascade)
 			{
-				if (file_exists($view_file.$_ci_file))
+				if (file_exists($_ci_view_file.$_ci_file))
 				{
-					$_ci_path = $view_file.$_ci_file;
+					$_ci_path = $_ci_view_file.$_ci_file;
 					$file_exists = TRUE;
 					break;
 				}
@@ -795,13 +929,21 @@
 		/*
 		 * Extract and cache variables
 		 *
-		 * You can either set variables using the dedicated $this->load_vars()
+		 * You can either set variables using the dedicated $this->load->vars()
 		 * function or via the second parameter of this function. We'll merge
 		 * the two types and cache them so that views that are embedded within
 		 * other views can have access to these variables.
 		 */
 		if (is_array($_ci_vars))
 		{
+			foreach (array_keys($_ci_vars) as $key)
+			{
+				if (strncmp($key, '_ci_', 4) === 0)
+				{
+					unset($_ci_vars[$key]);
+				}
+			}
+
 			$this->_ci_cached_vars = array_merge($this->_ci_cached_vars, $_ci_vars);
 		}
 		extract($this->_ci_cached_vars);
@@ -811,29 +953,27 @@
 		 *
 		 * We buffer the output for two reasons:
 		 * 1. Speed. You get a significant speed boost.
-		 * 2. So that the final rendered template can be
-		 * post-processed by the output class.  Why do we
-		 * need post processing?  For one thing, in order to
-		 * show the elapsed page load time.  Unless we
-		 * can intercept the content right before it's sent to
-		 * the browser and then stop the timer it won't be accurate.
+		 * 2. So that the final rendered template can be post-processed by
+		 *	the output class. Why do we need post processing? For one thing,
+		 *	in order to show the elapsed page load time. Unless we can
+		 *	intercept the content right before it's sent to the browser and
+		 *	then stop the timer it won't be accurate.
 		 */
 		ob_start();
 
 		// If the PHP installation does not support short tags we'll
 		// do a little string replacement, changing the short tags
 		// to standard PHP echo statements.
-
-		if ((bool) @ini_get('short_open_tag') === FALSE AND config_item('rewrite_short_tags') == TRUE)
+		if ( ! is_php('5.4') && ! ini_get('short_open_tag') && config_item('rewrite_short_tags') === TRUE)
 		{
-			echo eval('?>'.preg_replace("/;*\s*\?>/", "; ?>", str_replace('<?=', '<?php echo ', file_get_contents($_ci_path))));
+			echo eval('?>'.preg_replace('/;*\s*\?>/', '; ?>', str_replace('<?=', '<?php echo ', file_get_contents($_ci_path))));
 		}
 		else
 		{
 			include($_ci_path); // include() vs include_once() allows for multiple views with the same name
 		}
 
-		log_message('debug', 'File loaded: '.$_ci_path);
+		log_message('info', 'File loaded: '.$_ci_path);
 
 		// Return the file data if requested
 		if ($_ci_return === TRUE)
@@ -851,7 +991,6 @@
 		 * we are beyond the first level of output buffering so that
 		 * it can be seen and included properly by the first included
 		 * template and any subsequent ones. Oy!
-		 *
 		 */
 		if (ob_get_level() > $this->_ci_ob_level + 1)
 		{
@@ -862,21 +1001,24 @@
 			$_ci_CI->output->append_output(ob_get_contents());
 			@ob_end_clean();
 		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Load class
+	 * Internal CI Library Loader
 	 *
-	 * This function loads the requested class.
+	 * @used-by	CI_Loader::library()
+	 * @uses	CI_Loader::_ci_init_library()
 	 *
-	 * @param	string	the item that is being loaded
-	 * @param	mixed	any additional parameters
-	 * @param	string	an optional object name
+	 * @param	string	$class		Class name to load
+	 * @param	mixed	$params		Optional parameters to pass to the class constructor
+	 * @param	string	$object_name	Optional object name to assign to
 	 * @return	void
 	 */
-	protected function _ci_load_class($class, $params = NULL, $object_name = NULL)
+	protected function _ci_load_library($class, $params = NULL, $object_name = NULL)
 	{
 		// Get the class name, and while we're at it trim any slashes.
 		// The directory path can be included as part of the class name,
@@ -885,126 +1027,182 @@
 
 		// Was the path included with the class name?
 		// We look for a slash to determine this
-		$subdir = '';
 		if (($last_slash = strrpos($class, '/')) !== FALSE)
 		{
 			// Extract the path
-			$subdir = substr($class, 0, $last_slash + 1);
+			$subdir = substr($class, 0, ++$last_slash);
 
 			// Get the filename from the path
-			$class = substr($class, $last_slash + 1);
+			$class = substr($class, $last_slash);
 		}
-
-		// We'll test for both lowercase and capitalized versions of the file name
-		foreach (array(ucfirst($class), strtolower($class)) as $class)
+		else
 		{
-			$subclass = APPPATH.'libraries/'.$subdir.config_item('subclass_prefix').$class.'.php';
+			$subdir = '';
+		}
+
+		$class = ucfirst($class);
 
-			// Is this a class extension request?
-			if (file_exists($subclass))
+		// Is this a stock library? There are a few special conditions if so ...
+		if (file_exists(BASEPATH.'libraries/'.$subdir.$class.'.php'))
 			{
-				$baseclass = BASEPATH.'libraries/'.ucfirst($class).'.php';
+			return $this->_ci_load_stock_library($class, $subdir, $params, $object_name);
+		}
 
-				if ( ! file_exists($baseclass))
+		// Let's search for the requested library file and load it.
+		foreach ($this->_ci_library_paths as $path)
+		{
+			// BASEPATH has already been checked for
+			if ($path === BASEPATH)
 				{
-					log_message('error', "Unable to load the requested class: ".$class);
-					show_error("Unable to load the requested class: ".$class);
+				continue;
 				}
 
+			$filepath = $path.'libraries/'.$subdir.$class.'.php';
+
 				// Safety:  Was the class already loaded by a previous call?
-				if (in_array($subclass, $this->_ci_loaded_files))
+			if (class_exists($class, FALSE))
 				{
 					// Before we deem this to be a duplicate request, let's see
 					// if a custom object name is being supplied.  If so, we'll
 					// return a new instance of the object
-					if ( ! is_null($object_name))
+				if ($object_name !== NULL)
 					{
 						$CI =& get_instance();
 						if ( ! isset($CI->$object_name))
 						{
-							return $this->_ci_init_class($class, config_item('subclass_prefix'), $params, $object_name);
+						return $this->_ci_init_library($class, '', $params, $object_name);
 						}
 					}
 
-					$is_duplicate = TRUE;
-					log_message('debug', $class." class already loaded. Second attempt ignored.");
+				log_message('debug', $class.' class already loaded. Second attempt ignored.');
 					return;
 				}
+			// Does the file exist? No? Bummer...
+			elseif ( ! file_exists($filepath))
+			{
+				continue;
+			}
 
-				include_once($baseclass);
-				include_once($subclass);
-				$this->_ci_loaded_files[] = $subclass;
+			include_once($filepath);
+			return $this->_ci_init_library($class, '', $params, $object_name);
+		}
 
-				return $this->_ci_init_class($class, config_item('subclass_prefix'), $params, $object_name);
+		// One last attempt. Maybe the library is in a subdirectory, but it wasn't specified?
+		if ($subdir === '')
+		{
+			return $this->_ci_load_library($class.'/'.$class, $params, $object_name);
 			}
 
-			// Lets search for the requested library file and load it.
-			$is_duplicate = FALSE;
-			foreach ($this->_ci_library_paths as $path)
+		// If we got this far we were unable to find the requested class.
+		log_message('error', 'Unable to load the requested class: '.$class);
+		show_error('Unable to load the requested class: '.$class);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Internal CI Stock Library Loader
+	 *
+	 * @used-by	CI_Loader::_ci_load_library()
+	 * @uses	CI_Loader::_ci_init_library()
+	 *
+	 * @param	string	$library	Library name to load
+	 * @param	string	$file_path	Path to the library filename, relative to libraries/
+	 * @param	mixed	$params		Optional parameters to pass to the class constructor
+	 * @param	string	$object_name	Optional object name to assign to
+	 * @return	void
+	 */
+	protected function _ci_load_stock_library($library_name, $file_path, $params, $object_name)
 			{
-				$filepath = $path.'libraries/'.$subdir.$class.'.php';
+		$prefix = 'CI_';
 
-				// Does the file exist?  No?  Bummer...
-				if ( ! file_exists($filepath))
+		if (class_exists($prefix.$library_name, FALSE))
 				{
-					continue;
+			if (class_exists(config_item('subclass_prefix').$library_name, FALSE))
+			{
+				$prefix = config_item('subclass_prefix');
 				}
 
-				// Safety:  Was the class already loaded by a previous call?
-				if (in_array($filepath, $this->_ci_loaded_files))
-				{
 					// Before we deem this to be a duplicate request, let's see
 					// if a custom object name is being supplied.  If so, we'll
 					// return a new instance of the object
-					if ( ! is_null($object_name))
+			if ($object_name !== NULL)
 					{
 						$CI =& get_instance();
 						if ( ! isset($CI->$object_name))
 						{
-							return $this->_ci_init_class($class, '', $params, $object_name);
+					return $this->_ci_init_library($library_name, $prefix, $params, $object_name);
 						}
 					}
 
-					$is_duplicate = TRUE;
-					log_message('debug', $class." class already loaded. Second attempt ignored.");
+			log_message('debug', $library_name.' class already loaded. Second attempt ignored.');
 					return;
 				}
 
-				include_once($filepath);
-				$this->_ci_loaded_files[] = $filepath;
-				return $this->_ci_init_class($class, '', $params, $object_name);
+		$paths = $this->_ci_library_paths;
+		array_pop($paths); // BASEPATH
+		array_pop($paths); // APPPATH (needs to be the first path checked)
+		array_unshift($paths, APPPATH);
+
+		foreach ($paths as $path)
+		{
+			if (file_exists($path = $path.'libraries/'.$file_path.$library_name.'.php'))
+			{
+				// Override
+				include_once($path);
+				if (class_exists($prefix.$library_name, FALSE))
+				{
+					return $this->_ci_init_library($library_name, $prefix, $params, $object_name);
+				}
+				else
+				{
+					log_message('debug', $path.' exists, but does not declare '.$prefix.$library_name);
+				}
+			}
 			}
 
-		} // END FOREACH
+		include_once(BASEPATH.'libraries/'.$file_path.$library_name.'.php');
 
-		// One last attempt.  Maybe the library is in a subdirectory, but it wasn't specified?
-		if ($subdir == '')
+		// Check for extensions
+		$subclass = config_item('subclass_prefix').$library_name;
+		foreach ($paths as $path)
+		{
+			if (file_exists($path = $path.'libraries/'.$file_path.$subclass.'.php'))
 		{
-			$path = strtolower($class).'/'.$class;
-			return $this->_ci_load_class($path, $params);
+				include_once($path);
+				if (class_exists($subclass, FALSE))
+				{
+					$prefix = config_item('subclass_prefix');
+					break;
 		}
-
-		// If we got this far we were unable to find the requested class.
-		// We do not issue errors if the load call failed due to a duplicate request
-		if ($is_duplicate == FALSE)
+				else
 		{
-			log_message('error', "Unable to load the requested class: ".$class);
-			show_error("Unable to load the requested class: ".$class);
+					log_message('debug', $path.' exists, but does not declare '.$subclass);
+				}
 		}
 	}
 
+		return $this->_ci_init_library($library_name, $prefix, $params, $object_name);
+	}
+
 	// --------------------------------------------------------------------
 
 	/**
-	 * Instantiates a class
+	 * Internal CI Library Instantiator
+	 *
+	 * @used-by	CI_Loader::_ci_load_stock_library()
+	 * @used-by	CI_Loader::_ci_load_library()
 	 *
-	 * @param	string
-	 * @param	string
-	 * @param	bool
-	 * @param	string	an optional object name
-	 * @return	null
+	 * @param	string		$class		Class name
+	 * @param	string		$prefix		Class name prefix
+	 * @param	array|null|bool	$config		Optional configuration to pass to the class constructor:
+	 *						FALSE to skip;
+	 *						NULL to search in config paths;
+	 *						array containing configuration data
+	 * @param	string		$object_name	Optional object name to assign to
+	 * @return	void
 	 */
-	protected function _ci_init_class($class, $prefix = '', $config = FALSE, $object_name = NULL)
+	protected function _ci_init_library($class, $prefix, $config = FALSE, $object_name = NULL)
 	{
 		// Is there an associated config file for this class?  Note: these should always be lowercase
 		if ($config === NULL)
@@ -1014,117 +1212,111 @@
 
 			if (is_array($config_component->_config_paths))
 			{
-				// Break on the first found file, thus package files
-				// are not overridden by default paths
+				$found = FALSE;
 				foreach ($config_component->_config_paths as $path)
 				{
 					// We test for both uppercase and lowercase, for servers that
-					// are case-sensitive with regard to file names. Check for environment
-					// first, global next
-					if (defined('ENVIRONMENT') AND file_exists($path .'config/'.ENVIRONMENT.'/'.strtolower($class).'.php'))
-					{
-						include($path .'config/'.ENVIRONMENT.'/'.strtolower($class).'.php');
-						break;
-					}
-					elseif (defined('ENVIRONMENT') AND file_exists($path .'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php'))
-					{
-						include($path .'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php');
-						break;
-					}
-					elseif (file_exists($path .'config/'.strtolower($class).'.php'))
+					// are case-sensitive with regard to file names. Load global first,
+					// override with environment next
+					if (file_exists($path.'config/'.strtolower($class).'.php'))
 					{
 						include($path .'config/'.strtolower($class).'.php');
-						break;
+						$found = TRUE;
 					}
 					elseif (file_exists($path .'config/'.ucfirst(strtolower($class)).'.php'))
 					{
 						include($path .'config/'.ucfirst(strtolower($class)).'.php');
-						break;
-					}
-				}
-			}
+						$found = TRUE;
 		}
 
-		if ($prefix == '')
-		{
-			if (class_exists('CI_'.$class))
+					if (file_exists($path.'config/'.ENVIRONMENT.'/'.strtolower($class).'.php'))
 			{
-				$name = 'CI_'.$class;
+						include($path.'config/'.ENVIRONMENT.'/'.strtolower($class).'.php');
+						$found = TRUE;
 			}
-			elseif (class_exists(config_item('subclass_prefix').$class))
+					elseif (file_exists($path.'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php'))
 			{
-				$name = config_item('subclass_prefix').$class;
+						include($path.'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php');
+						$found = TRUE;
 			}
-			else
+
+					// Break on the first found configuration, thus package
+					// files are not overridden by default paths
+					if ($found === TRUE)
 			{
-				$name = $class;
+						break;
+					}
 			}
 		}
-		else
-		{
-			$name = $prefix.$class;
 		}
 
+		$class_name = $prefix.$class;
+
 		// Is the class name valid?
-		if ( ! class_exists($name))
+		if ( ! class_exists($class_name, FALSE))
 		{
-			log_message('error', "Non-existent class: ".$name);
-			show_error("Non-existent class: ".$class);
+			log_message('error', 'Non-existent class: '.$class_name);
+			show_error('Non-existent class: '.$class_name);
 		}
 
 		// Set the variable name we will assign the class to
 		// Was a custom class name supplied?  If so we'll use it
-		$class = strtolower($class);
-
-		if (is_null($object_name))
+		if (empty($object_name))
 		{
-			$classvar = ( ! isset($this->_ci_varmap[$class])) ? $class : $this->_ci_varmap[$class];
-		}
-		else
+			$object_name = strtolower($class);
+			if (isset($this->_ci_varmap[$object_name]))
 		{
-			$classvar = $object_name;
+				$object_name = $this->_ci_varmap[$object_name];
+			}
 		}
 
-		// Save the class name and object name
-		$this->_ci_classes[$class] = $classvar;
-
-		// Instantiate the class
+		// Don't overwrite existing properties
 		$CI =& get_instance();
-		if ($config !== NULL)
+		if (isset($CI->$object_name))
 		{
-			$CI->$classvar = new $name($config);
-		}
-		else
+			if ($CI->$object_name instanceof $class_name)
 		{
-			$CI->$classvar = new $name;
+				log_message('debug', $class_name." has already been instantiated as '".$object_name."'. Second attempt aborted.");
+				return;
 		}
+
+			show_error("Resource '".$object_name."' already exists and is not a ".$class_name." instance.");
+		}
+
+		// Save the class name and object name
+		$this->_ci_classes[$object_name] = $class;
+
+		// Instantiate the class
+		$CI->$object_name = isset($config)
+			? new $class_name($config)
+			: new $class_name();
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Autoloader
+	 * CI Autoloader
 	 *
-	 * The config/autoload.php file contains an array that permits sub-systems,
-	 * libraries, and helpers to be loaded automatically.
+	 * Loads component listed in the config/autoload.php file.
 	 *
-	 * @param	array
+	 * @used-by	CI_Loader::initialize()
 	 * @return	void
 	 */
-	private function _ci_autoloader()
+	protected function _ci_autoloader()
 	{
-		if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/autoload.php'))
+		if (file_exists(APPPATH.'config/autoload.php'))
 		{
-			include(APPPATH.'config/'.ENVIRONMENT.'/autoload.php');
+			include(APPPATH.'config/autoload.php');
 		}
-		else
+
+		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/autoload.php'))
 		{
-			include(APPPATH.'config/autoload.php');
+			include(APPPATH.'config/'.ENVIRONMENT.'/autoload.php');
 		}
 
 		if ( ! isset($autoload))
 		{
-			return FALSE;
+			return;
 		}
 
 		// Autoload packages
@@ -1139,31 +1331,29 @@
 		// Load any custom config file
 		if (count($autoload['config']) > 0)
 		{
-			$CI =& get_instance();
-			foreach ($autoload['config'] as $key => $val)
+			foreach ($autoload['config'] as $val)
 			{
-				$CI->config->load($val);
+				$this->config($val);
 			}
 		}
 
 		// Autoload helpers and languages
 		foreach (array('helper', 'language') as $type)
 		{
-			if (isset($autoload[$type]) AND count($autoload[$type]) > 0)
+			if (isset($autoload[$type]) && count($autoload[$type]) > 0)
 			{
 				$this->$type($autoload[$type]);
 			}
 		}
 
-		// A little tweak to remain backward compatible
-		// The $autoload['core'] item was deprecated
-		if ( ! isset($autoload['libraries']) AND isset($autoload['core']))
+		// Autoload drivers
+		if (isset($autoload['drivers']))
 		{
-			$autoload['libraries'] = $autoload['core'];
+			$this->driver($autoload['drivers']);
 		}
 
 		// Load libraries
-		if (isset($autoload['libraries']) AND count($autoload['libraries']) > 0)
+		if (isset($autoload['libraries']) && count($autoload['libraries']) > 0)
 		{
 			// Load the database driver.
 			if (in_array('database', $autoload['libraries']))
@@ -1173,10 +1363,7 @@
 			}
 
 			// Load all other libraries
-			foreach ($autoload['libraries'] as $item)
-			{
-				$this->library($item);
-			}
+			$this->library($autoload['libraries']);
 		}
 
 		// Autoload models
@@ -1189,24 +1376,27 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Object to Array
+	 * CI Object to Array translator
 	 *
-	 * Takes an object as input and converts the class variables to array key/vals
+	 * Takes an object as input and converts the class variables to
+	 * an associative array with key/value pairs.
 	 *
-	 * @param	object
+	 * @param	object	$object	Object data to translate
 	 * @return	array
 	 */
 	protected function _ci_object_to_array($object)
 	{
-		return (is_object($object)) ? get_object_vars($object) : $object;
+		return is_object($object) ? get_object_vars($object) : $object;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Get a reference to a specific library or model
+	 * CI Component getter
+	 *
+	 * Get a reference to a specific library or model.
 	 *
-	 * @param 	string
+	 * @param 	string	$component	Component name
 	 * @return	bool
 	 */
 	protected function &_ci_get_component($component)
@@ -1220,29 +1410,28 @@
 	/**
 	 * Prep filename
 	 *
-	 * This function preps the name of various items to make loading them more reliable.
+	 * This function prepares filenames of various items to
+	 * make their loading more reliable.
 	 *
-	 * @param	mixed
-	 * @param 	string
+	 * @param	string|string[]	$filename	Filename(s)
+	 * @param 	string		$extension	Filename extension
 	 * @return	array
 	 */
 	protected function _ci_prep_filename($filename, $extension)
 	{
 		if ( ! is_array($filename))
 		{
-			return array(strtolower(str_replace('.php', '', str_replace($extension, '', $filename)).$extension));
+			return array(strtolower(str_replace(array($extension, '.php'), '', $filename).$extension));
 		}
 		else
 		{
 			foreach ($filename as $key => $val)
 			{
-				$filename[$key] = strtolower(str_replace('.php', '', str_replace($extension, '', $val)).$extension);
+				$filename[$key] = strtolower(str_replace(array($extension, '.php'), '', $val).$extension);
 			}
 
 			return $filename;
 		}
 	}
-}
 
-/* End of file Loader.php */
-/* Location: ./system/core/Loader.php */
\ No newline at end of file
+}
Only in opensourcepos/system/core: Log.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Model.php opensourcepos/system/core/Model.php
--- pos-prod/system/core/Model.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Model.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,57 +1,80 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * CodeIgniter Model Class
+ * Model Class
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/config.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/config.html
  */
 class CI_Model {
 
 	/**
-	 * Constructor
+	 * Class constructor
 	 *
-	 * @access public
+	 * @return	void
 	 */
-	function __construct()
+	public function __construct()
 	{
-		log_message('debug', "Model Class Initialized");
+		log_message('info', 'Model Class Initialized');
 	}
 
+	// --------------------------------------------------------------------
+
 	/**
-	 * __get
+	 * __get magic
 	 *
 	 * Allows models to access CI's loaded classes using the same
 	 * syntax as controllers.
 	 *
-	 * @param	string
-	 * @access private
+	 * @param	string	$key
 	 */
-	function __get($key)
+	public function __get($key)
 	{
-		$CI =& get_instance();
-		return $CI->$key;
-	}
+		// Debugging note:
+		//	If you're here because you're getting an error message
+		//	saying 'Undefined Property: system/core/Model.php', it's
+		//	most likely a typo in your model code.
+		return get_instance()->$key;
 }
-// END Model Class
 
-/* End of file Model.php */
-/* Location: ./system/core/Model.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Output.php opensourcepos/system/core/Output.php
--- pos-prod/system/core/Output.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Output.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,112 +1,147 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Output Class
  *
- * Responsible for sending final output to browser
+ * Responsible for sending final output to the browser.
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Output
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/output.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/output.html
  */
 class CI_Output {
 
 	/**
-	 * Current output string
+	 * Final output string
 	 *
 	 * @var string
-	 * @access 	protected
 	 */
-	protected $final_output;
+	public $final_output;
+
 	/**
 	 * Cache expiration time
 	 *
 	 * @var int
-	 * @access 	protected
 	 */
-	protected $cache_expiration	= 0;
+	public $cache_expiration = 0;
+
 	/**
 	 * List of server headers
 	 *
 	 * @var array
-	 * @access 	protected
 	 */
-	protected $headers			= array();
+	public $headers = array();
+
 	/**
 	 * List of mime types
 	 *
 	 * @var array
-	 * @access 	protected
 	 */
-	protected $mime_types		= array();
+	public $mimes =	array();
+
 	/**
-	 * Determines wether profiler is enabled
+	 * Mime-type for the current page
 	 *
-	 * @var book
-	 * @access 	protected
+	 * @var	string
+	 */
+	protected $mime_type = 'text/html';
+
+	/**
+	 * Enable Profiler flag
+	 *
+	 * @var	bool
 	 */
-	protected $enable_profiler	= FALSE;
+	public $enable_profiler = FALSE;
+
 	/**
-	 * Determines if output compression is enabled
+	 * php.ini zlib.output_compression flag
 	 *
 	 * @var bool
-	 * @access 	protected
 	 */
 	protected $_zlib_oc			= FALSE;
+
+	/**
+	 * CI output compression flag
+	 *
+	 * @var	bool
+	 */
+	protected $_compress_output = FALSE;
+
 	/**
 	 * List of profiler sections
 	 *
 	 * @var array
-	 * @access 	protected
 	 */
 	protected $_profiler_sections = array();
+
 	/**
-	 * Whether or not to parse variables like {elapsed_time} and {memory_usage}
+	 * Parse markers flag
+	 *
+	 * Whether or not to parse variables like {elapsed_time} and {memory_usage}.
 	 *
 	 * @var bool
-	 * @access 	protected
 	 */
-	protected $parse_exec_vars	= TRUE;
+	public $parse_exec_vars = TRUE;
 
 	/**
-	 * Constructor
+	 * Class constructor
 	 *
+	 * Determines whether zLib output compression will be used.
+	 *
+	 * @return	void
 	 */
-	function __construct()
+	public function __construct()
 	{
-		$this->_zlib_oc = @ini_get('zlib.output_compression');
+		$this->_zlib_oc = (bool) ini_get('zlib.output_compression');
+		$this->_compress_output = (
+			$this->_zlib_oc === FALSE
+			&& config_item('compress_output') === TRUE
+			&& extension_loaded('zlib')
+		);
 
 		// Get mime types for later
-		if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
-		{
-		    include APPPATH.'config/'.ENVIRONMENT.'/mimes.php';
-		}
-		else
-		{
-			include APPPATH.'config/mimes.php';
-		}
-
-
-		$this->mime_types = $mimes;
+		$this->mimes =& get_mimes();
 
-		log_message('debug', "Output Class Initialized");
+		log_message('info', 'Output Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -114,12 +149,11 @@
 	/**
 	 * Get Output
 	 *
-	 * Returns the current output string
+	 * Returns the current output string.
 	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function get_output()
+	public function get_output()
 	{
 		return $this->final_output;
 	}
@@ -129,16 +163,14 @@
 	/**
 	 * Set Output
 	 *
-	 * Sets the output string
+	 * Sets the output string.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	void
+	 * @param	string	$output	Output data
+	 * @return	CI_Output
 	 */
-	function set_output($output)
+	public function set_output($output)
 	{
 		$this->final_output = $output;
-
 		return $this;
 	}
 
@@ -147,23 +179,14 @@
 	/**
 	 * Append Output
 	 *
-	 * Appends data onto the output string
+	 * Appends data onto the output string.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	void
+	 * @param	string	$output	Data to append
+	 * @return	CI_Output
 	 */
-	function append_output($output)
-	{
-		if ($this->final_output == '')
-		{
-			$this->final_output = $output;
-		}
-		else
+	public function append_output($output)
 		{
 			$this->final_output .= $output;
-		}
-
 		return $this;
 	}
 
@@ -172,26 +195,24 @@
 	/**
 	 * Set Header
 	 *
-	 * Lets you set a server header which will be outputted with the final display.
+	 * Lets you set a server header which will be sent with the final output.
 	 *
-	 * Note:  If a file is cached, headers will not be sent.  We need to figure out
-	 * how to permit header data to be saved with the cache data...
+	 * Note: If a file is cached, headers will not be sent.
+	 * @todo	We need to figure out how to permit headers to be cached.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param 	bool
-	 * @return	void
+	 * @param	string	$header		Header
+	 * @param	bool	$replace	Whether to replace the old header value, if already set
+	 * @return	CI_Output
 	 */
-	function set_header($header, $replace = TRUE)
+	public function set_header($header, $replace = TRUE)
 	{
 		// If zlib.output_compression is enabled it will compress the output,
 		// but it will not modify the content-length header to compensate for
 		// the reduction, causing the browser to hang waiting for more data.
 		// We'll just skip content-length in those cases.
-
-		if ($this->_zlib_oc && strncasecmp($header, 'content-length', 14) == 0)
+		if ($this->_zlib_oc && strncasecmp($header, 'content-length', 14) === 0)
 		{
-			return;
+			return $this;
 		}
 
 		$this->headers[] = array($header, $replace);
@@ -202,22 +222,22 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set Content Type Header
+	 * Set Content-Type Header
 	 *
-	 * @access	public
-	 * @param	string	extension of the file we're outputting
-	 * @return	void
+	 * @param	string	$mime_type	Extension of the file we're outputting
+	 * @param	string	$charset	Character set (default: NULL)
+	 * @return	CI_Output
 	 */
-	function set_content_type($mime_type)
+	public function set_content_type($mime_type, $charset = NULL)
 	{
 		if (strpos($mime_type, '/') === FALSE)
 		{
 			$extension = ltrim($mime_type, '.');
 
 			// Is this extension supported?
-			if (isset($this->mime_types[$extension]))
+			if (isset($this->mimes[$extension]))
 			{
-				$mime_type =& $this->mime_types[$extension];
+				$mime_type =& $this->mimes[$extension];
 
 				if (is_array($mime_type))
 				{
@@ -226,28 +246,88 @@
 			}
 		}
 
-		$header = 'Content-Type: '.$mime_type;
+		$this->mime_type = $mime_type;
 
-		$this->headers[] = array($header, TRUE);
+		if (empty($charset))
+		{
+			$charset = config_item('charset');
+		}
+
+		$header = 'Content-Type: '.$mime_type
+			.(empty($charset) ? '' : '; charset='.$charset);
 
+		$this->headers[] = array($header, TRUE);
 		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
+	 * Get Current Content-Type Header
+	 *
+	 * @return	string	'text/html', if not already set
+	 */
+	public function get_content_type()
+	{
+		for ($i = 0, $c = count($this->headers); $i < $c; $i++)
+		{
+			if (sscanf($this->headers[$i][0], 'Content-Type: %[^;]', $content_type) === 1)
+			{
+				return $content_type;
+			}
+		}
+
+		return 'text/html';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Get Header
+	 *
+	 * @param	string	$header_name
+	 * @return	string
+	 */
+	public function get_header($header)
+	{
+		// Combine headers already sent with our batched headers
+		$headers = array_merge(
+			// We only need [x][0] from our multi-dimensional array
+			array_map('array_shift', $this->headers),
+			headers_list()
+		);
+
+		if (empty($headers) OR empty($header))
+		{
+			return NULL;
+		}
+
+		for ($i = 0, $c = count($headers); $i < $c; $i++)
+		{
+			if (strncasecmp($header, $headers[$i], $l = strlen($header)) === 0)
+			{
+				return trim(substr($headers[$i], $l+1));
+			}
+		}
+
+		return NULL;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Set HTTP Status Header
-	 * moved to Common procedural functions in 1.7.2
 	 *
-	 * @access	public
-	 * @param	int		the status code
-	 * @param	string
-	 * @return	void
+	 * As of version 1.7.2, this is an alias for common function
+	 * set_status_header().
+	 *
+	 * @param	int	$code	Status code (default: 200)
+	 * @param	string	$text	Optional message
+	 * @return	CI_Output
 	 */
-	function set_status_header($code = 200, $text = '')
+	public function set_status_header($code = 200, $text = '')
 	{
 		set_status_header($code, $text);
-
 		return $this;
 	}
 
@@ -256,14 +336,12 @@
 	/**
 	 * Enable/disable Profiler
 	 *
-	 * @access	public
-	 * @param	bool
-	 * @return	void
+	 * @param	bool	$val	TRUE to enable or FALSE to disable
+	 * @return	CI_Output
 	 */
-	function enable_profiler($val = TRUE)
+	public function enable_profiler($val = TRUE)
 	{
-		$this->enable_profiler = (is_bool($val)) ? $val : TRUE;
-
+		$this->enable_profiler = is_bool($val) ? $val : TRUE;
 		return $this;
 	}
 
@@ -272,17 +350,23 @@
 	/**
 	 * Set Profiler Sections
 	 *
-	 * Allows override of default / config settings for Profiler section display
+	 * Allows override of default/config settings for
+	 * Profiler section display.
 	 *
-	 * @access	public
-	 * @param	array
-	 * @return	void
+	 * @param	array	$sections	Profiler sections
+	 * @return	CI_Output
 	 */
-	function set_profiler_sections($sections)
+	public function set_profiler_sections($sections)
+	{
+		if (isset($sections['query_toggle_count']))
 	{
+			$this->_profiler_sections['query_toggle_count'] = (int) $sections['query_toggle_count'];
+			unset($sections['query_toggle_count']);
+		}
+
 		foreach ($sections as $section => $enable)
 		{
-			$this->_profiler_sections[$section] = ($enable !== FALSE) ? TRUE : FALSE;
+			$this->_profiler_sections[$section] = ($enable !== FALSE);
 		}
 
 		return $this;
@@ -293,14 +377,12 @@
 	/**
 	 * Set Cache
 	 *
-	 * @access	public
-	 * @param	integer
-	 * @return	void
+	 * @param	int	$time	Cache expiration time in minutes
+	 * @return	CI_Output
 	 */
-	function cache($time)
+	public function cache($time)
 	{
-		$this->cache_expiration = ( ! is_numeric($time)) ? 0 : $time;
-
+		$this->cache_expiration = is_numeric($time) ? $time : 0;
 		return $this;
 	}
 
@@ -309,27 +391,27 @@
 	/**
 	 * Display Output
 	 *
-	 * All "view" data is automatically put into this variable by the controller class:
-	 *
-	 * $this->final_output
+	 * Processes and sends finalized output data to the browser along
+	 * with any server headers and profile data. It also stops benchmark
+	 * timers so the page rendering speed and memory usage can be shown.
 	 *
-	 * This function sends the finalized output data to the browser along
-	 * with any server headers and profile data.  It also stops the
-	 * benchmark timer so the page rendering speed and memory usage can be shown.
+	 * Note: All "view" data is automatically put into $this->final_output
+	 *	 by controller class.
 	 *
-	 * @access	public
-	 * @param 	string
-	 * @return	mixed
+	 * @uses	CI_Output::$final_output
+	 * @param	string	$output	Output data override
+	 * @return	void
 	 */
-	function _display($output = '')
+	public function _display($output = '')
 	{
-		// Note:  We use globals because we can't use $CI =& get_instance()
+		// Note:  We use load_class() because we can't use $CI =& get_instance()
 		// since this function is sometimes called by the caching mechanism,
 		// which happens before the CI super object is available.
-		global $BM, $CFG;
+		$BM =& load_class('Benchmark', 'core');
+		$CFG =& load_class('Config', 'core');
 
 		// Grab the super object if we can.
-		if (class_exists('CI_Controller'))
+		if (class_exists('CI_Controller', FALSE))
 		{
 			$CI =& get_instance();
 		}
@@ -337,7 +419,7 @@
 		// --------------------------------------------------------------------
 
 		// Set the output data
-		if ($output == '')
+		if ($output === '')
 		{
 			$output =& $this->final_output;
 		}
@@ -361,25 +443,19 @@
 
 		if ($this->parse_exec_vars === TRUE)
 		{
-			$memory	 = ( ! function_exists('memory_get_usage')) ? '0' : round(memory_get_usage()/1024/1024, 2).'MB';
-
-			$output = str_replace('{elapsed_time}', $elapsed, $output);
-			$output = str_replace('{memory_usage}', $memory, $output);
+			$memory	= round(memory_get_usage() / 1024 / 1024, 2).'MB';
+			$output = str_replace(array('{elapsed_time}', '{memory_usage}'), array($elapsed, $memory), $output);
 		}
 
 		// --------------------------------------------------------------------
 
 		// Is compression requested?
-		if ($CFG->item('compress_output') === TRUE && $this->_zlib_oc == FALSE)
-		{
-			if (extension_loaded('zlib'))
-			{
-				if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) AND strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE)
+		if (isset($CI) // This means that we're not serving a cache file, if we were, it would already be compressed
+			&& $this->_compress_output === TRUE
+			&& isset($_SERVER['HTTP_ACCEPT_ENCODING']) && strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE)
 				{
 					ob_start('ob_gzhandler');
 				}
-			}
-		}
 
 		// --------------------------------------------------------------------
 
@@ -399,20 +475,34 @@
 		// simply echo out the data and exit.
 		if ( ! isset($CI))
 		{
+			if ($this->_compress_output === TRUE)
+			{
+				if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE)
+				{
+					header('Content-Encoding: gzip');
+					header('Content-Length: '.strlen($output));
+				}
+				else
+				{
+					// User agent doesn't support gzip compression,
+					// so we'll have to decompress our cache
+					$output = gzinflate(substr($output, 10, -8));
+				}
+			}
+
 			echo $output;
-			log_message('debug', "Final output sent to browser");
-			log_message('debug', "Total execution time: ".$elapsed);
-			return TRUE;
+			log_message('info', 'Final output sent to browser');
+			log_message('debug', 'Total execution time: '.$elapsed);
+			return;
 		}
 
 		// --------------------------------------------------------------------
 
 		// Do we need to generate profile data?
 		// If so, load the Profile class and run it.
-		if ($this->enable_profiler == TRUE)
+		if ($this->enable_profiler === TRUE)
 		{
 			$CI->load->library('profiler');
-
 			if ( ! empty($this->_profiler_sections))
 			{
 				$CI->profiler->set_sections($this->_profiler_sections);
@@ -420,20 +510,13 @@
 
 			// If the output data contains closing </body> and </html> tags
 			// we will remove them and add them back after we insert the profile data
-			if (preg_match("|</body>.*?</html>|is", $output))
+			$output = preg_replace('|</body>.*?</html>|is', '', $output, -1, $count).$CI->profiler->run();
+			if ($count > 0)
 			{
-				$output  = preg_replace("|</body>.*?</html>|is", '', $output);
-				$output .= $CI->profiler->run();
 				$output .= '</body></html>';
 			}
-			else
-			{
-				$output .= $CI->profiler->run();
-			}
 		}
 
-		// --------------------------------------------------------------------
-
 		// Does the controller contain a function named _output()?
 		// If so send the output there.  Otherwise, echo it.
 		if (method_exists($CI, '_output'))
@@ -445,130 +528,273 @@
 			echo $output;  // Send it to the browser!
 		}
 
-		log_message('debug', "Final output sent to browser");
-		log_message('debug', "Total execution time: ".$elapsed);
+		log_message('info', 'Final output sent to browser');
+		log_message('debug', 'Total execution time: '.$elapsed);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Write a Cache File
+	 * Write Cache
 	 *
-	 * @access	public
-	 * @param 	string
+	 * @param	string	$output	Output data to cache
 	 * @return	void
 	 */
-	function _write_cache($output)
+	public function _write_cache($output)
 	{
 		$CI =& get_instance();
 		$path = $CI->config->item('cache_path');
-
-		$cache_path = ($path == '') ? APPPATH.'cache/' : $path;
+		$cache_path = ($path === '') ? APPPATH.'cache/' : $path;
 
 		if ( ! is_dir($cache_path) OR ! is_really_writable($cache_path))
 		{
-			log_message('error', "Unable to write cache file: ".$cache_path);
+			log_message('error', 'Unable to write cache file: '.$cache_path);
 			return;
 		}
 
-		$uri =	$CI->config->item('base_url').
-				$CI->config->item('index_page').
-				$CI->uri->uri_string();
+		$uri = $CI->config->item('base_url')
+			.$CI->config->item('index_page')
+			.$CI->uri->uri_string();
+
+		if (($cache_query_string = $CI->config->item('cache_query_string')) && ! empty($_SERVER['QUERY_STRING']))
+		{
+			if (is_array($cache_query_string))
+			{
+				$uri .= '?'.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));
+			}
+			else
+			{
+				$uri .= '?'.$_SERVER['QUERY_STRING'];
+			}
+		}
 
 		$cache_path .= md5($uri);
 
-		if ( ! $fp = @fopen($cache_path, FOPEN_WRITE_CREATE_DESTRUCTIVE))
+		if ( ! $fp = @fopen($cache_path, 'w+b'))
 		{
-			log_message('error', "Unable to write cache file: ".$cache_path);
+			log_message('error', 'Unable to write cache file: '.$cache_path);
 			return;
 		}
 
+		if (flock($fp, LOCK_EX))
+		{
+			// If output compression is enabled, compress the cache
+			// itself, so that we don't have to do that each time
+			// we're serving it
+			if ($this->_compress_output === TRUE)
+			{
+				$output = gzencode($output);
+
+				if ($this->get_header('content-type') === NULL)
+				{
+					$this->set_content_type($this->mime_type);
+				}
+			}
+
 		$expire = time() + ($this->cache_expiration * 60);
 
-		if (flock($fp, LOCK_EX))
+			// Put together our serialized info.
+			$cache_info = serialize(array(
+				'expire'	=> $expire,
+				'headers'	=> $this->headers
+			));
+
+			$output = $cache_info.'ENDCI--->'.$output;
+
+			for ($written = 0, $length = strlen($output); $written < $length; $written += $result)
+			{
+				if (($result = fwrite($fp, substr($output, $written))) === FALSE)
 		{
-			fwrite($fp, $expire.'TS--->'.$output);
+					break;
+				}
+			}
+
 			flock($fp, LOCK_UN);
 		}
 		else
 		{
-			log_message('error', "Unable to secure a file lock for file at: ".$cache_path);
+			log_message('error', 'Unable to secure a file lock for file at: '.$cache_path);
 			return;
 		}
+
 		fclose($fp);
-		@chmod($cache_path, FILE_WRITE_MODE);
 
-		log_message('debug', "Cache file written: ".$cache_path);
+		if (is_int($result))
+		{
+			chmod($cache_path, 0640);
+			log_message('debug', 'Cache file written: '.$cache_path);
+
+			// Send HTTP cache-control headers to browser to match file cache settings.
+			$this->set_cache_header($_SERVER['REQUEST_TIME'], $expire);
+		}
+		else
+		{
+			@unlink($cache_path);
+			log_message('error', 'Unable to write the complete cache content at: '.$cache_path);
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Update/serve a cached file
+	 * Update/serve cached output
 	 *
-	 * @access	public
-	 * @param 	object	config class
-	 * @param 	object	uri class
-	 * @return	void
+	 * @uses	CI_Config
+	 * @uses	CI_URI
+	 *
+	 * @param	object	&$CFG	CI_Config class instance
+	 * @param	object	&$URI	CI_URI class instance
+	 * @return	bool	TRUE on success or FALSE on failure
 	 */
-	function _display_cache(&$CFG, &$URI)
+	public function _display_cache(&$CFG, &$URI)
 	{
-		$cache_path = ($CFG->item('cache_path') == '') ? APPPATH.'cache/' : $CFG->item('cache_path');
+		$cache_path = ($CFG->item('cache_path') === '') ? APPPATH.'cache/' : $CFG->item('cache_path');
 
 		// Build the file path.  The file name is an MD5 hash of the full URI
-		$uri =	$CFG->item('base_url').
-				$CFG->item('index_page').
-				$URI->uri_string;
+		$uri = $CFG->item('base_url').$CFG->item('index_page').$URI->uri_string;
 
-		$filepath = $cache_path.md5($uri);
-
-		if ( ! @file_exists($filepath))
+		if (($cache_query_string = $CFG->item('cache_query_string')) && ! empty($_SERVER['QUERY_STRING']))
 		{
-			return FALSE;
+			if (is_array($cache_query_string))
+			{
+				$uri .= '?'.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));
+			}
+			else
+			{
+				$uri .= '?'.$_SERVER['QUERY_STRING'];
 		}
+		}
+
+		$filepath = $cache_path.md5($uri);
 
-		if ( ! $fp = @fopen($filepath, FOPEN_READ))
+		if ( ! file_exists($filepath) OR ! $fp = @fopen($filepath, 'rb'))
 		{
 			return FALSE;
 		}
 
 		flock($fp, LOCK_SH);
 
-		$cache = '';
-		if (filesize($filepath) > 0)
-		{
-			$cache = fread($fp, filesize($filepath));
-		}
+		$cache = (filesize($filepath) > 0) ? fread($fp, filesize($filepath)) : '';
 
 		flock($fp, LOCK_UN);
 		fclose($fp);
 
-		// Strip out the embedded timestamp
-		if ( ! preg_match("/(\d+TS--->)/", $cache, $match))
+		// Look for embedded serialized file info.
+		if ( ! preg_match('/^(.*)ENDCI--->/', $cache, $match))
 		{
 			return FALSE;
 		}
 
-		// Has the file expired? If so we'll delete it.
-		if (time() >= trim(str_replace('TS--->', '', $match['1'])))
-		{
-			if (is_really_writable($cache_path))
+		$cache_info = unserialize($match[1]);
+		$expire = $cache_info['expire'];
+
+		$last_modified = filemtime($filepath);
+
+		// Has the file expired?
+		if ($_SERVER['REQUEST_TIME'] >= $expire && is_really_writable($cache_path))
 			{
+			// If so we'll delete it.
 				@unlink($filepath);
-				log_message('debug', "Cache file has expired. File deleted");
+			log_message('debug', 'Cache file has expired. File deleted.');
 				return FALSE;
 			}
+		else
+		{
+			// Or else send the HTTP cache control headers.
+			$this->set_cache_header($last_modified, $expire);
+		}
+
+		// Add headers from cache file.
+		foreach ($cache_info['headers'] as $header)
+		{
+			$this->set_header($header[0], $header[1]);
 		}
 
 		// Display the cache
-		$this->_display(str_replace($match['0'], '', $cache));
-		log_message('debug', "Cache file is current. Sending it to browser.");
+		$this->_display(substr($cache, strlen($match[0])));
+		log_message('debug', 'Cache file is current. Sending it to browser.');
+		return TRUE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Delete cache
+	 *
+	 * @param	string	$uri	URI string
+	 * @return	bool
+	 */
+	public function delete_cache($uri = '')
+	{
+		$CI =& get_instance();
+		$cache_path = $CI->config->item('cache_path');
+		if ($cache_path === '')
+		{
+			$cache_path = APPPATH.'cache/';
+		}
+
+		if ( ! is_dir($cache_path))
+		{
+			log_message('error', 'Unable to find cache path: '.$cache_path);
+			return FALSE;
+		}
+
+		if (empty($uri))
+		{
+			$uri = $CI->uri->uri_string();
+
+			if (($cache_query_string = $CI->config->item('cache_query_string')) && ! empty($_SERVER['QUERY_STRING']))
+			{
+				if (is_array($cache_query_string))
+				{
+					$uri .= '?'.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));
+				}
+				else
+				{
+					$uri .= '?'.$_SERVER['QUERY_STRING'];
+				}
+			}
+		}
+
+		$cache_path .= md5($CI->config->item('base_url').$CI->config->item('index_page').ltrim($uri, '/'));
+
+		if ( ! @unlink($cache_path))
+		{
+			log_message('error', 'Unable to delete cache file for '.$uri);
+			return FALSE;
+		}
+
 		return TRUE;
 	}
 
+	// --------------------------------------------------------------------
 
+	/**
+	 * Set Cache Header
+	 *
+	 * Set the HTTP headers to match the server-side file cache settings
+	 * in order to reduce bandwidth.
+	 *
+	 * @param	int	$last_modified	Timestamp of when the page was last modified
+	 * @param	int	$expiration	Timestamp of when should the requested page expire from cache
+	 * @return	void
+	 */
+	public function set_cache_header($last_modified, $expiration)
+	{
+		$max_age = $expiration - $_SERVER['REQUEST_TIME'];
+
+		if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) && $last_modified <= strtotime($_SERVER['HTTP_IF_MODIFIED_SINCE']))
+		{
+			$this->set_status_header(304);
+			exit;
+		}
+		else
+		{
+			header('Pragma: public');
+			header('Cache-Control: max-age='.$max_age.', public');
+			header('Expires: '.gmdate('D, d M Y H:i:s', $expiration).' GMT');
+			header('Last-modified: '.gmdate('D, d M Y H:i:s', $last_modified).' GMT');
+		}
 }
-// END Output Class
 
-/* End of file Output.php */
-/* Location: ./system/core/Output.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Router.php opensourcepos/system/core/Router.php
--- pos-prod/system/core/Router.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Router.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Router Class
@@ -22,213 +44,225 @@
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
- * @author		ExpressionEngine Dev Team
  * @category	Libraries
- * @link		http://codeigniter.com/user_guide/general/routing.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/general/routing.html
  */
 class CI_Router {
 
 	/**
-	 * Config class
+	 * CI_Config class object
 	 *
 	 * @var object
-	 * @access public
 	 */
-	var $config;
+	public $config;
+
 	/**
 	 * List of routes
 	 *
 	 * @var array
-	 * @access public
 	 */
-	var $routes			= array();
-	/**
-	 * List of error routes
-	 *
-	 * @var array
-	 * @access public
-	 */
-	var $error_routes	= array();
+	public $routes =	array();
+
 	/**
 	 * Current class name
 	 *
 	 * @var string
-	 * @access public
 	 */
-	var $class			= '';
+	public $class =		'';
+
 	/**
 	 * Current method name
 	 *
 	 * @var string
-	 * @access public
 	 */
-	var $method			= 'index';
+	public $method =	'index';
+
 	/**
 	 * Sub-directory that contains the requested controller class
 	 *
 	 * @var string
-	 * @access public
 	 */
-	var $directory		= '';
+	public $directory;
+
 	/**
 	 * Default controller (and method if specific)
 	 *
 	 * @var string
-	 * @access public
 	 */
-	var $default_controller;
+	public $default_controller;
+
+	/**
+	 * Translate URI dashes
+	 *
+	 * Determines whether dashes in controller & method segments
+	 * should be automatically replaced by underscores.
+	 *
+	 * @var	bool
+	 */
+	public $translate_uri_dashes = FALSE;
 
 	/**
-	 * Constructor
+	 * Enable query strings flag
+	 *
+	 * Determines whether to use GET parameters or segment URIs
+	 *
+	 * @var	bool
+	 */
+	public $enable_query_strings = FALSE;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
 	 *
 	 * Runs the route mapping function.
+	 *
+	 * @param	array	$routing
+	 * @return	void
 	 */
-	function __construct()
+	public function __construct($routing = NULL)
 	{
 		$this->config =& load_class('Config', 'core');
 		$this->uri =& load_class('URI', 'core');
-		log_message('debug', "Router Class Initialized");
+
+		$this->enable_query_strings = ( ! is_cli() && $this->config->item('enable_query_strings') === TRUE);
+
+		// If a directory override is configured, it has to be set before any dynamic routing logic
+		is_array($routing) && isset($routing['directory']) && $this->set_directory($routing['directory']);
+		$this->_set_routing();
+
+		// Set any routing overrides that may exist in the main index file
+		if (is_array($routing))
+		{
+			empty($routing['controller']) OR $this->set_class($routing['controller']);
+			empty($routing['function'])   OR $this->set_method($routing['function']);
+		}
+
+		log_message('info', 'Router Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set the route mapping
+	 * Set route mapping
 	 *
-	 * This function determines what should be served based on the URI request,
+	 * Determines what should be served based on the URI request,
 	 * as well as any "routes" that have been set in the routing config file.
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	function _set_routing()
-	{
-		// Are query strings enabled in the config file?  Normally CI doesn't utilize query strings
-		// since URI segments are more search-engine friendly, but they can optionally be used.
-		// If this feature is enabled, we will gather the directory/class/method a little differently
-		$segments = array();
-		if ($this->config->item('enable_query_strings') === TRUE AND isset($_GET[$this->config->item('controller_trigger')]))
+	protected function _set_routing()
 		{
-			if (isset($_GET[$this->config->item('directory_trigger')]))
+		// Load the routes.php file. It would be great if we could
+		// skip this for enable_query_strings = TRUE, but then
+		// default_controller would be empty ...
+		if (file_exists(APPPATH.'config/routes.php'))
 			{
-				$this->set_directory(trim($this->uri->_filter_uri($_GET[$this->config->item('directory_trigger')])));
-				$segments[] = $this->fetch_directory();
+			include(APPPATH.'config/routes.php');
 			}
 
-			if (isset($_GET[$this->config->item('controller_trigger')]))
+		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/routes.php'))
 			{
-				$this->set_class(trim($this->uri->_filter_uri($_GET[$this->config->item('controller_trigger')])));
-				$segments[] = $this->fetch_class();
+			include(APPPATH.'config/'.ENVIRONMENT.'/routes.php');
 			}
 
-			if (isset($_GET[$this->config->item('function_trigger')]))
+		// Validate & get reserved routes
+		if (isset($route) && is_array($route))
 			{
-				$this->set_method(trim($this->uri->_filter_uri($_GET[$this->config->item('function_trigger')])));
-				$segments[] = $this->fetch_method();
-			}
+			isset($route['default_controller']) && $this->default_controller = $route['default_controller'];
+			isset($route['translate_uri_dashes']) && $this->translate_uri_dashes = $route['translate_uri_dashes'];
+			unset($route['default_controller'], $route['translate_uri_dashes']);
+			$this->routes = $route;
 		}
 
-		// Load the routes.php file.
-		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/routes.php'))
+		// Are query strings enabled in the config file? Normally CI doesn't utilize query strings
+		// since URI segments are more search-engine friendly, but they can optionally be used.
+		// If this feature is enabled, we will gather the directory/class/method a little differently
+		if ($this->enable_query_strings)
 		{
-			include(APPPATH.'config/'.ENVIRONMENT.'/routes.php');
-		}
-		elseif (is_file(APPPATH.'config/routes.php'))
+			// If the directory is set at this time, it means an override exists, so skip the checks
+			if ( ! isset($this->directory))
 		{
-			include(APPPATH.'config/routes.php');
-		}
-
-		$this->routes = ( ! isset($route) OR ! is_array($route)) ? array() : $route;
-		unset($route);
-
-		// Set the default controller so we can display it in the event
-		// the URI doesn't correlated to a valid controller.
-		$this->default_controller = ( ! isset($this->routes['default_controller']) OR $this->routes['default_controller'] == '') ? FALSE : strtolower($this->routes['default_controller']);
+				$_d = $this->config->item('directory_trigger');
+				$_d = isset($_GET[$_d]) ? trim($_GET[$_d], " \t\n\r\0\x0B/") : '';
 
-		// Were there any query string segments?  If so, we'll validate them and bail out since we're done.
-		if (count($segments) > 0)
+				if ($_d !== '')
 		{
-			return $this->_validate_request($segments);
+					$this->uri->filter_uri($_d);
+					$this->set_directory($_d);
+				}
 		}
 
-		// Fetch the complete URI string
-		$this->uri->_fetch_uri_string();
+			$_c = trim($this->config->item('controller_trigger'));
+			if ( ! empty($_GET[$_c]))
+			{
+				$this->uri->filter_uri($_GET[$_c]);
+				$this->set_class($_GET[$_c]);
 
-		// Is there a URI string? If not, the default controller specified in the "routes" file will be shown.
-		if ($this->uri->uri_string == '')
+				$_f = trim($this->config->item('function_trigger'));
+				if ( ! empty($_GET[$_f]))
 		{
-			return $this->_set_default_controller();
+					$this->uri->filter_uri($_GET[$_f]);
+					$this->set_method($_GET[$_f]);
 		}
 
-		// Do we need to remove the URL suffix?
-		$this->uri->_remove_url_suffix();
-
-		// Compile the segments into an array
-		$this->uri->_explode_segments();
-
-		// Parse any custom routing that may exist
-		$this->_parse_routes();
-
-		// Re-index the segment array so that it starts with 1 rather than 0
-		$this->uri->_reindex_segments();
+				$this->uri->rsegments = array(
+					1 => $this->class,
+					2 => $this->method
+				);
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Set the default controller
-	 *
-	 * @access	private
-	 * @return	void
-	 */
-	function _set_default_controller()
-	{
-		if ($this->default_controller === FALSE)
+			else
 		{
-			show_error("Unable to determine what should be displayed. A default route has not been specified in the routing file.");
+				$this->_set_default_controller();
 		}
-		// Is the method being specified?
-		if (strpos($this->default_controller, '/') !== FALSE)
-		{
-			$x = explode('/', $this->default_controller);
 
-			$this->set_class($x[0]);
-			$this->set_method($x[1]);
-			$this->_set_request($x);
+			// Routing rules don't apply to query strings and we don't need to detect
+			// directories, so we're done here
+			return;
+		}
+
+		// Is there anything to parse?
+		if ($this->uri->uri_string !== '')
+		{
+			$this->_parse_routes();
 		}
 		else
 		{
-			$this->set_class($this->default_controller);
-			$this->set_method('index');
-			$this->_set_request(array($this->default_controller, 'index'));
+			$this->_set_default_controller();
 		}
-
-		// re-index the routed segments array so it starts with 1 rather than 0
-		$this->uri->_reindex_segments();
-
-		log_message('debug', "No URI present. Default controller set.");
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set the Route
+	 * Set request route
 	 *
-	 * This function takes an array of URI segments as
-	 * input, and sets the current class/method
+	 * Takes an array of URI segments as input and sets the class/method
+	 * to be called.
 	 *
-	 * @access	private
-	 * @param	array
-	 * @param	bool
+	 * @used-by	CI_Router::_parse_routes()
+	 * @param	array	$segments	URI segments
 	 * @return	void
 	 */
-	function _set_request($segments = array())
+	protected function _set_request($segments = array())
 	{
 		$segments = $this->_validate_request($segments);
+		// If we don't have any segments left - try the default controller;
+		// WARNING: Directories get shifted out of the segments array!
+		if (empty($segments))
+		{
+			$this->_set_default_controller();
+			return;
+		}
 
-		if (count($segments) == 0)
+		if ($this->translate_uri_dashes === TRUE)
 		{
-			return $this->_set_default_controller();
+			$segments[0] = str_replace('-', '_', $segments[0]);
+			if (isset($segments[1]))
+			{
+				$segments[1] = str_replace('-', '_', $segments[1]);
+			}
 		}
 
 		$this->set_class($segments[0]);
@@ -232,120 +266,95 @@
 		}
 
 		$this->set_class($segments[0]);
-
 		if (isset($segments[1]))
 		{
-			// A standard method request
 			$this->set_method($segments[1]);
 		}
 		else
 		{
-			// This lets the "routed" segment array identify that the default
-			// index method is being used.
 			$segments[1] = 'index';
 		}
 
-		// Update our "routed" segment array to contain the segments.
-		// Note: If there is no custom routing, this array will be
-		// identical to $this->uri->segments
+		array_unshift($segments, NULL);
+		unset($segments[0]);
 		$this->uri->rsegments = $segments;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Validates the supplied segments.  Attempts to determine the path to
-	 * the controller.
+	 * Set default controller
 	 *
-	 * @access	private
-	 * @param	array
-	 * @return	array
+	 * @return	void
 	 */
-	function _validate_request($segments)
+	protected function _set_default_controller()
 	{
-		if (count($segments) == 0)
+		if (empty($this->default_controller))
 		{
-			return $segments;
+			show_error('Unable to determine what should be displayed. A default route has not been specified in the routing file.');
 		}
 
-		// Does the requested controller exist in the root folder?
-		if (file_exists(APPPATH.'controllers/'.$segments[0].'.php'))
+		// Is the method being specified?
+		if (sscanf($this->default_controller, '%[^/]/%s', $class, $method) !== 2)
 		{
-			return $segments;
+			$method = 'index';
 		}
 
-		// Is the controller in a sub-folder?
-		if (is_dir(APPPATH.'controllers/'.$segments[0]))
+		if ( ! file_exists(APPPATH.'controllers/'.$this->directory.ucfirst($class).'.php'))
 		{
-			// Set the directory and remove it from the segment array
-			$this->set_directory($segments[0]);
-			$segments = array_slice($segments, 1);
+			// This will trigger 404 later
+			return;
+		}
 
-			if (count($segments) > 0)
-			{
-				// Does the requested controller exist in the sub-folder?
-				if ( ! file_exists(APPPATH.'controllers/'.$this->fetch_directory().$segments[0].'.php'))
-				{
-					if ( ! empty($this->routes['404_override']))
-					{
-						$x = explode('/', $this->routes['404_override']);
+		$this->set_class($class);
+		$this->set_method($method);
 
-						$this->set_directory('');
-						$this->set_class($x[0]);
-						$this->set_method(isset($x[1]) ? $x[1] : 'index');
+		// Assign routed segments, index starting from 1
+		$this->uri->rsegments = array(
+			1 => $class,
+			2 => $method
+		);
 
-						return $x;
-					}
-					else
-					{
-						show_404($this->fetch_directory().$segments[0]);
-					}
-				}
+		log_message('debug', 'No URI present. Default controller set.');
 			}
-			else
-			{
-				// Is the method being specified in the route?
-				if (strpos($this->default_controller, '/') !== FALSE)
-				{
-					$x = explode('/', $this->default_controller);
 
-					$this->set_class($x[0]);
-					$this->set_method($x[1]);
-				}
-				else
+	// --------------------------------------------------------------------
+
+	/**
+	 * Validate request
+	 *
+	 * Attempts validate the URI request and determine the controller path.
+	 *
+	 * @used-by	CI_Router::_set_request()
+	 * @param	array	$segments	URI segments
+	 * @return	mixed	URI segments
+	 */
+	protected function _validate_request($segments)
 				{
-					$this->set_class($this->default_controller);
-					$this->set_method('index');
-				}
+		$c = count($segments);
+		$directory_override = isset($this->directory);
 
-				// Does the default controller exist in the sub-folder?
-				if ( ! file_exists(APPPATH.'controllers/'.$this->fetch_directory().$this->default_controller.'.php'))
+		// Loop through our segments and return as soon as a controller
+		// is found or when such a directory doesn't exist
+		while ($c-- > 0)
 				{
-					$this->directory = '';
-					return array();
-				}
+			$test = $this->directory
+				.ucfirst($this->translate_uri_dashes === TRUE ? str_replace('-', '_', $segments[0]) : $segments[0]);
 
+			if ( ! file_exists(APPPATH.'controllers/'.$test.'.php')
+				&& $directory_override === FALSE
+				&& is_dir(APPPATH.'controllers/'.$this->directory.$segments[0])
+			)
+			{
+				$this->set_directory(array_shift($segments), TRUE);
+				continue;
 			}
 
 			return $segments;
 		}
 
-
-		// If we've gotten this far it means that the URI does not correlate to a valid
-		// controller class.  We will now see if there is an override
-		if ( ! empty($this->routes['404_override']))
-		{
-			$x = explode('/', $this->routes['404_override']);
-
-			$this->set_class($x[0]);
-			$this->set_method(isset($x[1]) ? $x[1] : 'index');
-
-			return $x;
-		}
-
-
-		// Nothing else to do at this point but show a 404
-		show_404($segments[0]);
+		// This means that all segments were actually directories
+		return $segments;
 	}
 
 	// --------------------------------------------------------------------
@@ -353,58 +362,76 @@
 	/**
 	 *  Parse Routes
 	 *
-	 * This function matches any routes that may exist in
-	 * the config/routes.php file against the URI to
-	 * determine if the class/method need to be remapped.
+	 * Matches any routes that may exist in the config/routes.php file
+	 * against the URI to determine if the class/method need to be remapped.
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	function _parse_routes()
+	protected function _parse_routes()
 	{
 		// Turn the segment array into a URI string
 		$uri = implode('/', $this->uri->segments);
 
-		// Is there a literal match?  If so we're done
-		if (isset($this->routes[$uri]))
-		{
-			return $this->_set_request(explode('/', $this->routes[$uri]));
-		}
+		// Get HTTP verb
+		$http_verb = isset($_SERVER['REQUEST_METHOD']) ? strtolower($_SERVER['REQUEST_METHOD']) : 'cli';
 
-		// Loop through the route array looking for wild-cards
+		// Loop through the route array looking for wildcards
 		foreach ($this->routes as $key => $val)
 		{
-			// Convert wild-cards to RegEx
-			$key = str_replace(':any', '.+', str_replace(':num', '[0-9]+', $key));
+			// Check if route format is using HTTP verbs
+			if (is_array($val))
+			{
+				$val = array_change_key_case($val, CASE_LOWER);
+				if (isset($val[$http_verb]))
+				{
+					$val = $val[$http_verb];
+				}
+				else
+				{
+					continue;
+				}
+			}
+
+			// Convert wildcards to RegEx
+			$key = str_replace(array(':any', ':num'), array('[^/]+', '[0-9]+'), $key);
 
 			// Does the RegEx match?
-			if (preg_match('#^'.$key.'$#', $uri))
+			if (preg_match('#^'.$key.'$#', $uri, $matches))
 			{
-				// Do we have a back-reference?
-				if (strpos($val, '$') !== FALSE AND strpos($key, '(') !== FALSE)
+				// Are we using callbacks to process back-references?
+				if ( ! is_string($val) && is_callable($val))
+				{
+					// Remove the original string from the matches array.
+					array_shift($matches);
+
+					// Execute the callback using the values in matches as its parameters.
+					$val = call_user_func_array($val, $matches);
+				}
+				// Are we using the default routing method for back-references?
+				elseif (strpos($val, '$') !== FALSE && strpos($key, '(') !== FALSE)
 				{
 					$val = preg_replace('#^'.$key.'$#', $val, $uri);
 				}
 
-				return $this->_set_request(explode('/', $val));
+				$this->_set_request(explode('/', $val));
+				return;
 			}
 		}
 
 		// If we got this far it means we didn't encounter a
 		// matching route so we'll set the site default route
-		$this->_set_request($this->uri->segments);
+		$this->_set_request(array_values($this->uri->segments));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set the class name
+	 * Set class name
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$class	Class name
 	 * @return	void
 	 */
-	function set_class($class)
+	public function set_class($class)
 	{
 		$this->class = str_replace(array('/', '.'), '', $class);
 	}
@@ -414,10 +441,10 @@
 	/**
 	 * Fetch the current class
 	 *
-	 * @access	public
+	 * @deprecated	3.0.0	Read the 'class' property instead
 	 * @return	string
 	 */
-	function fetch_class()
+	public function fetch_class()
 	{
 		return $this->class;
 	}
@@ -425,13 +452,12 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 *  Set the method name
+	 * Set method name
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$method	Method name
 	 * @return	void
 	 */
-	function set_method($method)
+	public function set_method($method)
 	{
 		$this->method = $method;
 	}
@@ -441,82 +467,49 @@
 	/**
 	 *  Fetch the current method
 	 *
-	 * @access	public
+	 * @deprecated	3.0.0	Read the 'method' property instead
 	 * @return	string
 	 */
-	function fetch_method()
-	{
-		if ($this->method == $this->fetch_class())
+	public function fetch_method()
 		{
-			return 'index';
-		}
-
 		return $this->method;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 *  Set the directory name
+	 * Set directory name
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$dir	Directory name
+	 * @param	bool	$append	Whether we're appending rather than setting the full value
 	 * @return	void
 	 */
-	function set_directory($dir)
+	public function set_directory($dir, $append = FALSE)
+	{
+		if ($append !== TRUE OR empty($this->directory))
 	{
-		$this->directory = str_replace(array('/', '.'), '', $dir).'/';
+			$this->directory = str_replace('.', '', trim($dir, '/')).'/';
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 *  Fetch the sub-directory (if any) that contains the requested controller class
-	 *
-	 * @access	public
-	 * @return	string
-	 */
-	function fetch_directory()
+		else
 	{
-		return $this->directory;
+			$this->directory .= str_replace('.', '', trim($dir, '/')).'/';
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 *  Set the controller overrides
+	 * Fetch directory
 	 *
-	 * @access	public
-	 * @param	array
-	 * @return	null
+	 * Feches the sub-directory (if any) that contains the requested
+	 * controller class.
+	 *
+	 * @deprecated	3.0.0	Read the 'directory' property instead
+	 * @return	string
 	 */
-	function _set_overrides($routing)
-	{
-		if ( ! is_array($routing))
-		{
-			return;
-		}
-
-		if (isset($routing['directory']))
+	public function fetch_directory()
 		{
-			$this->set_directory($routing['directory']);
-		}
-
-		if (isset($routing['controller']) AND $routing['controller'] != '')
-		{
-			$this->set_class($routing['controller']);
-		}
-
-		if (isset($routing['function']))
-		{
-			$routing['function'] = ($routing['function'] == '') ? 'index' : $routing['function'];
-			$this->set_method($routing['function']);
-		}
+		return $this->directory;
 	}
 
-
 }
-// END Router Class
-
-/* End of file Router.php */
-/* Location: ./system/core/Router.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Security.php opensourcepos/system/core/Security.php
--- pos-prod/system/core/Security.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Security.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,19 +1,41 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Security Class
@@ -21,47 +43,90 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Security
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/security.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/security.html
  */
 class CI_Security {
 
 	/**
-	 * Random Hash for protecting URLs
+	 * List of sanitize filename strings
+	 *
+	 * @var	array
+	 */
+	public $filename_bad_chars =	array(
+		'../', '<!--', '-->', '<', '>',
+		"'", '"', '&', '$', '#',
+		'{', '}', '[', ']', '=',
+		';', '?', '%20', '%22',
+		'%3c',		// <
+		'%253c',	// <
+		'%3e',		// >
+		'%0e',		// >
+		'%28',		// (
+		'%29',		// )
+		'%2528',	// (
+		'%26',		// &
+		'%24',		// $
+		'%3f',		// ?
+		'%3b',		// ;
+		'%3d'		// =
+	);
+
+	/**
+	 * Character set
+	 *
+	 * Will be overridden by the constructor.
+	 *
+	 * @var	string
+	 */
+	public $charset = 'UTF-8';
+
+	/**
+	 * XSS Hash
+	 *
+	 * Random Hash for protecting URLs.
 	 *
 	 * @var string
-	 * @access protected
 	 */
-	protected $_xss_hash			= '';
+	protected $_xss_hash;
+
 	/**
+	 * CSRF Hash
+	 *
 	 * Random Hash for Cross Site Request Forgery Protection Cookie
 	 *
 	 * @var string
-	 * @access protected
 	 */
-	protected $_csrf_hash			= '';
+	protected $_csrf_hash;
+
 	/**
-	 * Expiration time for Cross Site Request Forgery Protection Cookie
-	 * Defaults to two hours (in seconds)
+	 * CSRF Expire time
+	 *
+	 * Expiration time for Cross Site Request Forgery protection cookie.
+	 * Defaults to two hours (in seconds).
 	 *
 	 * @var int
-	 * @access protected
 	 */
 	protected $_csrf_expire			= 7200;
+
 	/**
-	 * Token name for Cross Site Request Forgery Protection Cookie
+	 * CSRF Token name
+	 *
+	 * Token name for Cross Site Request Forgery protection cookie.
 	 *
 	 * @var string
-	 * @access protected
 	 */
 	protected $_csrf_token_name		= 'ci_csrf_token';
+
 	/**
-	 * Cookie name for Cross Site Request Forgery Protection Cookie
+	 * CSRF Cookie name
+	 *
+	 * Cookie name for Cross Site Request Forgery protection cookie.
 	 *
 	 * @var string
-	 * @access protected
 	 */
 	protected $_csrf_cookie_name	= 'ci_csrf_token';
+
 	/**
 	 * List of never allowed strings
 	 *
@@ -66,14 +131,12 @@
 	 * List of never allowed strings
 	 *
 	 * @var array
-	 * @access protected
 	 */
 	protected $_never_allowed_str = array(
 		'document.cookie'	=> '[removed]',
 		'document.write'	=> '[removed]',
 		'.parentNode'		=> '[removed]',
 		'.innerHTML'		=> '[removed]',
-		'window.location'	=> '[removed]',
 		'-moz-binding'		=> '[removed]',
 		'<!--'				=> '&lt;!--',
 		'-->'				=> '--&gt;',
@@ -81,59 +144,63 @@
 		'<comment>'			=> '&lt;comment&gt;'
 	);
 
-	/* never allowed, regex replacement */
 	/**
-	 * List of never allowed regex replacement
+	 * List of never allowed regex replacements
 	 *
 	 * @var array
-	 * @access protected
 	 */
 	protected $_never_allowed_regex = array(
 		'javascript\s*:',
+		'(document|(document\.)?window)\.(location|on\w*)',
 		'expression\s*(\(|&\#40;)', // CSS and IE
 		'vbscript\s*:', // IE, surprise!
-		'Redirect\s+302',
+		'wscript\s*:', // IE
+		'jscript\s*:', // IE
+		'vbs\s*:', // IE
+		'Redirect\s+30\d',
 		"([\"'])?data\s*:[^\\1]*?base64[^\\1]*?,[^\\1]*?\\1?"
 	);
 
 	/**
-	 * Constructor
+	 * Class constructor
 	 *
 	 * @return	void
 	 */
 	public function __construct()
 	{
 		// Is CSRF protection enabled?
-		if (config_item('csrf_protection') === TRUE)
+		if (config_item('csrf_protection'))
 		{
 			// CSRF config
 			foreach (array('csrf_expire', 'csrf_token_name', 'csrf_cookie_name') as $key)
 			{
-				if (FALSE !== ($val = config_item($key)))
+				if (NULL !== ($val = config_item($key)))
 				{
 					$this->{'_'.$key} = $val;
 				}
 			}
 
 			// Append application specific cookie prefix
-			if (config_item('cookie_prefix'))
+			if ($cookie_prefix = config_item('cookie_prefix'))
 			{
-				$this->_csrf_cookie_name = config_item('cookie_prefix').$this->_csrf_cookie_name;
+				$this->_csrf_cookie_name = $cookie_prefix.$this->_csrf_cookie_name;
 			}
 
 			// Set the CSRF hash
 			$this->_csrf_set_hash();
 		}
 
-		log_message('debug', "Security Class Initialized");
+		$this->charset = strtoupper(config_item('charset'));
+
+		log_message('info', 'Security Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Verify Cross Site Request Forgery Protection
+	 * CSRF Verify
 	 *
-	 * @return	object
+	 * @return	CI_Security
 	 */
 	public function csrf_verify()
 	{
@@ -143,52 +210,72 @@
 			return $this->csrf_set_cookie();
 		}
 
-		// Do the tokens exist in both the _POST and _COOKIE arrays?
-		if ( ! isset($_POST[$this->_csrf_token_name], $_COOKIE[$this->_csrf_cookie_name]))
+		// Check if URI has been whitelisted from CSRF checks
+		if ($exclude_uris = config_item('csrf_exclude_uris'))
 		{
-			$this->csrf_show_error();
+			$uri = load_class('URI', 'core');
+			foreach ($exclude_uris as $excluded)
+			{
+				if (preg_match('#^'.$excluded.'$#i'.(UTF8_ENABLED ? 'u' : ''), $uri->uri_string()))
+				{
+					return $this;
+				}
+			}
 		}
 
-		// Do the tokens match?
-		if ($_POST[$this->_csrf_token_name] != $_COOKIE[$this->_csrf_cookie_name])
+		// Do the tokens exist in both the _POST and _COOKIE arrays?
+		if ( ! isset($_POST[$this->_csrf_token_name], $_COOKIE[$this->_csrf_cookie_name])
+			OR $_POST[$this->_csrf_token_name] !== $_COOKIE[$this->_csrf_cookie_name]) // Do the tokens match?
 		{
 			$this->csrf_show_error();
 		}
 
-		// We kill this since we're done and we don't want to
-		// polute the _POST array
+		// We kill this since we're done and we don't want to polute the _POST array
 		unset($_POST[$this->_csrf_token_name]);
 
+		// Regenerate on every submission?
+		if (config_item('csrf_regenerate'))
+		{
 		// Nothing should last forever
 		unset($_COOKIE[$this->_csrf_cookie_name]);
+			$this->_csrf_hash = NULL;
+		}
+
 		$this->_csrf_set_hash();
 		$this->csrf_set_cookie();
 
-		log_message('debug', 'CSRF token verified');
-
+		log_message('info', 'CSRF token verified');
 		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set Cross Site Request Forgery Protection Cookie
+	 * CSRF Set Cookie
 	 *
-	 * @return	object
+	 * @codeCoverageIgnore
+	 * @return	CI_Security
 	 */
 	public function csrf_set_cookie()
 	{
 		$expire = time() + $this->_csrf_expire;
-		$secure_cookie = (config_item('cookie_secure') === TRUE) ? 1 : 0;
+		$secure_cookie = (bool) config_item('cookie_secure');
 
-		if ($secure_cookie && (empty($_SERVER['HTTPS']) OR strtolower($_SERVER['HTTPS']) === 'off'))
+		if ($secure_cookie && ! is_https())
 		{
 			return FALSE;
 		}
 
-		setcookie($this->_csrf_cookie_name, $this->_csrf_hash, $expire, config_item('cookie_path'), config_item('cookie_domain'), $secure_cookie);
-
-		log_message('debug', "CRSF cookie Set");
+		setcookie(
+			$this->_csrf_cookie_name,
+			$this->_csrf_hash,
+			$expire,
+			config_item('cookie_path'),
+			config_item('cookie_domain'),
+			$secure_cookie,
+			config_item('cookie_httponly')
+		);
+		log_message('info', 'CSRF cookie sent');
 
 		return $this;
 	}
@@ -202,7 +289,7 @@
 	 */
 	public function csrf_show_error()
 	{
-		show_error('The action you have requested is not allowed.');
+		show_error('The action you have requested is not allowed.', 403);
 	}
 
 	// --------------------------------------------------------------------
@@ -210,9 +297,8 @@
 	/**
 	 * Get CSRF Hash
 	 *
-	 * Getter Method
-	 *
-	 * @return 	string 	self::_csrf_hash
+	 * @see		CI_Security::$_csrf_hash
+	 * @return 	string	CSRF hash
 	 */
 	public function get_csrf_hash()
 	{
@@ -224,9 +310,8 @@
 	/**
 	 * Get CSRF Token Name
 	 *
-	 * Getter Method
-	 *
-	 * @return 	string 	self::csrf_token_name
+	 * @see		CI_Security::$_csrf_token_name
+	 * @return	string	CSRF token name
 	 */
 	public function get_csrf_token_name()
 	{
@@ -239,34 +324,31 @@
 	 * XSS Clean
 	 *
 	 * Sanitizes data so that Cross Site Scripting Hacks can be
-	 * prevented.  This function does a fair amount of work but
+	 * prevented.  This method does a fair amount of work but
 	 * it is extremely thorough, designed to prevent even the
 	 * most obscure XSS attempts.  Nothing is ever 100% foolproof,
 	 * of course, but I haven't been able to get anything passed
 	 * the filter.
 	 *
-	 * Note: This function should only be used to deal with data
-	 * upon submission.  It's not something that should
-	 * be used for general runtime processing.
+	 * Note: Should only be used to deal with data upon submission.
+	 *	 It's not something that should be used for general
+	 *	 runtime processing.
 	 *
-	 * This function was based in part on some code and ideas I
-	 * got from Bitflux: http://channel.bitflux.ch/wiki/XSS_Prevention
+	 * @link	http://channel.bitflux.ch/wiki/XSS_Prevention
+	 * 		Based in part on some code and ideas from Bitflux.
 	 *
+	 * @link	http://ha.ckers.org/xss.html
 	 * To help develop this script I used this great list of
 	 * vulnerabilities along with a few other hacks I've
-	 * harvested from examining vulnerabilities in other programs:
-	 * http://ha.ckers.org/xss.html
+	 *		harvested from examining vulnerabilities in other programs.
 	 *
-	 * @param	mixed	string or array
-	 * @param 	bool
+	 * @param	string|string[]	$str		Input data
+	 * @param 	bool		$is_image	Whether the input is an image
 	 * @return	string
 	 */
 	public function xss_clean($str, $is_image = FALSE)
 	{
-		/*
-		 * Is the string an array?
-		 *
-		 */
+		// Is the string an array?
 		if (is_array($str))
 		{
 			while (list($key) = each($str))
@@ -277,14 +359,9 @@
 			return $str;
 		}
 
-		/*
-		 * Remove Invisible Characters
-		 */
+		// Remove Invisible Characters
 		$str = remove_invisible_characters($str);
 
-		// Validate Entities in URLs
-		$str = $this->_validate_entities($str);
-
 		/*
 		 * URL Decode
 		 *
@@ -293,9 +370,12 @@
 		 * <a href="http://%77%77%77%2E%67%6F%6F%67%6C%65%2E%63%6F%6D">Google</a>
 		 *
 		 * Note: Use rawurldecode() so it does not remove plus signs
-		 *
 		 */
+		do
+		{
 		$str = rawurldecode($str);
+		}
+		while (preg_match('/%[0-9a-f]{2,}/i', $str));
 
 		/*
 		 * Convert character entities to ASCII
@@ -303,16 +383,11 @@
 		 * This permits our tests below to work reliably.
 		 * We only convert entities that are within tags since
 		 * these are the ones that will pose security problems.
-		 *
 		 */
+		$str = preg_replace_callback("/[^a-z0-9>]+[a-z0-9]+=([\'\"]).*?\\1/si", array($this, '_convert_attribute'), $str);
+		$str = preg_replace_callback('/<\w+.*/si', array($this, '_decode_entity'), $str);
 
-		$str = preg_replace_callback("/[a-z]+=([\'\"]).*?\\1/si", array($this, '_convert_attribute'), $str);
-
-		$str = preg_replace_callback("/<\w+.*?(?=>|<|$)/si", array($this, '_decode_entity'), $str);
-
-		/*
-		 * Remove Invisible Characters Again!
-		 */
+		// Remove Invisible Characters Again!
 		$str = remove_invisible_characters($str);
 
 		/*
@@ -323,15 +398,9 @@
 		 * NOTE: preg_replace was found to be amazingly slow here on
 		 * large blocks of data, so we use str_replace.
 		 */
-
-		if (strpos($str, "\t") !== FALSE)
-		{
 			$str = str_replace("\t", ' ', $str);
-		}
 
-		/*
-		 * Capture converted string for later comparison
-		 */
+		// Capture converted string for later comparison
 		$converted_string = $str;
 
 		// Remove Strings that are never allowed
@@ -351,7 +420,7 @@
 			// Images have a tendency to have the PHP short opening and
 			// closing tags every so often so we skip those and only
 			// do the long opening tags.
-			$str = preg_replace('/<\?(php)/i', "&lt;?\\1", $str);
+			$str = preg_replace('/<\?(php)/i', '&lt;?\\1', $str);
 		}
 		else
 		{
@@ -365,56 +434,54 @@
 		 * These words are compacted back to their correct state.
 		 */
 		$words = array(
-			'javascript', 'expression', 'vbscript', 'script', 'base64',
-			'applet', 'alert', 'document', 'write', 'cookie', 'window'
+			'javascript', 'expression', 'vbscript', 'jscript', 'wscript',
+			'vbs', 'script', 'base64', 'applet', 'alert', 'document',
+			'write', 'cookie', 'window', 'confirm', 'prompt', 'eval'
 		);
 
 		foreach ($words as $word)
 		{
-			$temp = '';
-
-			for ($i = 0, $wordlen = strlen($word); $i < $wordlen; $i++)
-			{
-				$temp .= substr($word, $i, 1)."\s*";
-			}
+			$word = implode('\s*', str_split($word)).'\s*';
 
 			// We only want to do this when it is followed by a non-word character
 			// That way valid stuff like "dealer to" does not become "dealerto"
-			$str = preg_replace_callback('#('.substr($temp, 0, -3).')(\W)#is', array($this, '_compact_exploded_words'), $str);
+			$str = preg_replace_callback('#('.substr($word, 0, -3).')(\W)#is', array($this, '_compact_exploded_words'), $str);
 		}
 
 		/*
 		 * Remove disallowed Javascript in links or img tags
-		 * We used to do some version comparisons and use of stripos for PHP5,
+		 * We used to do some version comparisons and use of stripos(),
 		 * but it is dog slow compared to these simplified non-capturing
 		 * preg_match(), especially if the pattern exists in the string
+		 *
+		 * Note: It was reported that not only space characters, but all in
+		 * the following pattern can be parsed as separators between a tag name
+		 * and its attributes: [\d\s"\'`;,\/\=\(\x00\x0B\x09\x0C]
+		 * ... however, remove_invisible_characters() above already strips the
+		 * hex-encoded ones, so we'll skip them below.
 		 */
 		do
 		{
 			$original = $str;
 
-			if (preg_match("/<a/i", $str))
+			if (preg_match('/<a/i', $str))
 			{
-				$str = preg_replace_callback("#<a\s+([^>]*?)(>|$)#si", array($this, '_js_link_removal'), $str);
+				$str = preg_replace_callback('#<a[^a-z0-9>]+([^>]*?)(?:>|$)#si', array($this, '_js_link_removal'), $str);
 			}
 
-			if (preg_match("/<img/i", $str))
+			if (preg_match('/<img/i', $str))
 			{
-				$str = preg_replace_callback("#<img\s+([^>]*?)(\s?/?>|$)#si", array($this, '_js_img_removal'), $str);
+				$str = preg_replace_callback('#<img[^a-z0-9]+([^>]*?)(?:\s?/?>|$)#si', array($this, '_js_img_removal'), $str);
 			}
 
-			if (preg_match("/script/i", $str) OR preg_match("/xss/i", $str))
+			if (preg_match('/script|xss/i', $str))
 			{
-				$str = preg_replace("#<(/*)(script|xss)(.*?)\>#si", '[removed]', $str);
+				$str = preg_replace('#</*(?:script|xss).*?>#si', '[removed]', $str);
 			}
 		}
-		while($original != $str);
-
+		while ($original !== $str);
 		unset($original);
 
-		// Remove evil attributes such as style, onclick and xmlns
-		$str = $this->_remove_evil_attributes($str, $is_image);
-
 		/*
 		 * Sanitize naughty HTML elements
 		 *
@@ -424,8 +491,29 @@
 		 * So this: <blink>
 		 * Becomes: &lt;blink&gt;
 		 */
-		$naughty = 'alert|applet|audio|basefont|base|behavior|bgsound|blink|body|embed|expression|form|frameset|frame|head|html|ilayer|iframe|input|isindex|layer|link|meta|object|plaintext|style|script|textarea|title|video|xml|xss';
-		$str = preg_replace_callback('#<(/*\s*)('.$naughty.')([^><]*)([><]*)#is', array($this, '_sanitize_naughty_html'), $str);
+		$pattern = '#'
+			.'<((?<slash>/*\s*)(?<tagName>[a-z0-9]+)(?=[^a-z0-9]|$)' // tag start and name, followed by a non-tag character
+			.'[^\s\042\047a-z0-9>/=]*' // a valid attribute character immediately after the tag would count as a separator
+			// optional attributes
+			.'(?<attributes>(?:[\s\042\047/=]*' // non-attribute characters, excluding > (tag close) for obvious reasons
+			.'[^\s\042\047>/=]+' // attribute characters
+			// optional attribute-value
+				.'(?:\s*=' // attribute-value separator
+					.'(?:[^\s\042\047=><`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=><`]*))' // single, double or non-quoted value
+				.')?' // end optional attribute-value group
+			.')*)' // end optional attributes group
+			.'[^>]*)(?<closeTag>\>)?#isS';
+
+		// Note: It would be nice to optimize this for speed, BUT
+		//       only matching the naughty elements here results in
+		//       false positives and in turn - vulnerabilities!
+		do
+		{
+			$old_str = $str;
+			$str = preg_replace_callback($pattern, array($this, '_sanitize_naughty_html'), $str);
+		}
+		while ($old_str !== $str);
+		unset($old_str);
 
 		/*
 		 * Sanitize naughty scripting elements
@@ -439,8 +527,11 @@
 		 * For example:	eval('some code')
 		 * Becomes:		eval&#40;'some code'&#41;
 		 */
-		$str = preg_replace('#(alert|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si', "\\1\\2&#40;\\3&#41;", $str);
-
+		$str = preg_replace(
+			'#(alert|prompt|confirm|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si',
+			'\\1\\2&#40;\\3&#41;',
+			$str
+		);
 
 		// Final clean up
 		// This adds a bit of extra precaution in case
@@ -456,29 +547,32 @@
 		 * string post-removal of XSS, then it fails, as there was unwanted XSS
 		 * code found and removed/changed during processing.
 		 */
-
 		if ($is_image === TRUE)
 		{
-			return ($str == $converted_string) ? TRUE: FALSE;
+			return ($str === $converted_string);
 		}
 
-		log_message('debug', "XSS Filtering completed");
 		return $str;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Random Hash for protecting URLs
+	 * XSS Hash
 	 *
-	 * @return	string
+	 * Generates the XSS hash if needed and returns it.
+	 *
+	 * @see		CI_Security::$_xss_hash
+	 * @return	string	XSS hash
 	 */
 	public function xss_hash()
 	{
-		if ($this->_xss_hash == '')
+		if ($this->_xss_hash === NULL)
 		{
-			mt_srand();
-			$this->_xss_hash = md5(time() + mt_rand(0, 1999999999));
+			$rand = $this->get_random_bytes(16);
+			$this->_xss_hash = ($rand === FALSE)
+				? md5(uniqid(mt_rand(), TRUE))
+				: bin2hex($rand);
 		}
 
 		return $this->_xss_hash;
@@ -487,9 +581,67 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * Get random bytes
+	 *
+	 * @param	int	$length	Output length
+	 * @return	string
+	 */
+	public function get_random_bytes($length)
+	{
+		if (empty($length) OR ! ctype_digit((string) $length))
+		{
+			return FALSE;
+		}
+
+		if (function_exists('random_bytes'))
+		{
+			try
+			{
+				// The cast is required to avoid TypeError
+				return random_bytes((int) $length);
+			}
+			catch (Exception $e)
+			{
+				// If random_bytes() can't do the job, we can't either ...
+				// There's no point in using fallbacks.
+				log_message('error', $e->getMessage());
+				return FALSE;
+			}
+		}
+
+		// Unfortunately, none of the following PRNGs is guaranteed to exist ...
+		if (defined('MCRYPT_DEV_URANDOM') && ($output = mcrypt_create_iv($length, MCRYPT_DEV_URANDOM)) !== FALSE)
+		{
+			return $output;
+		}
+
+
+		if (is_readable('/dev/urandom') && ($fp = fopen('/dev/urandom', 'rb')) !== FALSE)
+		{
+			// Try not to waste entropy ...
+			is_php('5.4') && stream_set_chunk_size($fp, $length);
+			$output = fread($fp, $length);
+			fclose($fp);
+			if ($output !== FALSE)
+			{
+				return $output;
+			}
+		}
+
+		if (function_exists('openssl_random_pseudo_bytes'))
+		{
+			return openssl_random_pseudo_bytes($length);
+		}
+
+		return FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * HTML Entities Decode
 	 *
-	 * This function is a replacement for html_entity_decode()
+	 * A replacement for html_entity_decode()
 	 *
 	 * The reason we are not using html_entity_decode() by itself is because
 	 * while it is not technically correct to leave out the semicolon
@@ -497,66 +649,90 @@
 	 * correctly.  html_entity_decode() does not convert entities without
 	 * semicolons, so we are left with our own little solution here. Bummer.
 	 *
-	 * @param	string
-	 * @param	string
+	 * @link	http://php.net/html-entity-decode
+	 *
+	 * @param	string	$str		Input
+	 * @param	string	$charset	Character set
 	 * @return	string
 	 */
-	public function entity_decode($str, $charset='UTF-8')
+	public function entity_decode($str, $charset = NULL)
 	{
-		if (stristr($str, '&') === FALSE)
+		if (strpos($str, '&') === FALSE)
 		{
 			return $str;
 		}
 
-		$str = html_entity_decode($str, ENT_COMPAT, $charset);
-		$str = preg_replace('~&#x(0*[0-9a-f]{2,5})~ei', 'chr(hexdec("\\1"))', $str);
-		return preg_replace('~&#([0-9]{2,4})~e', 'chr(\\1)', $str);
+		static $_entities;
+
+		isset($charset) OR $charset = $this->charset;
+		$flag = is_php('5.4')
+			? ENT_COMPAT | ENT_HTML5
+			: ENT_COMPAT;
+
+		do
+		{
+			$str_compare = $str;
+
+			// Decode standard entities, avoiding false positives
+			if (preg_match_all('/&[a-z]{2,}(?![a-z;])/i', $str, $matches))
+			{
+				if ( ! isset($_entities))
+				{
+					$_entities = array_map(
+						'strtolower',
+						is_php('5.3.4')
+							? get_html_translation_table(HTML_ENTITIES, $flag, $charset)
+							: get_html_translation_table(HTML_ENTITIES, $flag)
+					);
+
+					// If we're not on PHP 5.4+, add the possibly dangerous HTML 5
+					// entities to the array manually
+					if ($flag === ENT_COMPAT)
+					{
+						$_entities[':'] = '&colon;';
+						$_entities['('] = '&lpar;';
+						$_entities[')'] = '&rpar;';
+						$_entities["\n"] = '&newline;';
+						$_entities["\t"] = '&tab;';
+					}
+				}
+
+				$replace = array();
+				$matches = array_unique(array_map('strtolower', $matches[0]));
+				foreach ($matches as &$match)
+				{
+					if (($char = array_search($match.';', $_entities, TRUE)) !== FALSE)
+					{
+						$replace[$match] = $char;
+					}
+				}
+
+				$str = str_ireplace(array_keys($replace), array_values($replace), $str);
+			}
+
+			// Decode numeric & UTF16 two byte entities
+			$str = html_entity_decode(
+				preg_replace('/(&#(?:x0*[0-9a-f]{2,5}(?![0-9a-f;])|(?:0*\d{2,4}(?![0-9;]))))/iS', '$1;', $str),
+				$flag,
+				$charset
+			);
+		}
+		while ($str_compare !== $str);
+		return $str;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Filename Security
+	 * Sanitize Filename
 	 *
-	 * @param	string
-	 * @param 	bool
+	 * @param	string	$str		Input file name
+	 * @param 	bool	$relative_path	Whether to preserve paths
 	 * @return	string
 	 */
 	public function sanitize_filename($str, $relative_path = FALSE)
 	{
-		$bad = array(
-			"../",
-			"<!--",
-			"-->",
-			"<",
-			">",
-			"'",
-			'"',
-			'&',
-			'$',
-			'#',
-			'{',
-			'}',
-			'[',
-			']',
-			'=',
-			';',
-			'?',
-			"%20",
-			"%22",
-			"%3c",		// <
-			"%253c",	// <
-			"%3e",		// >
-			"%0e",		// >
-			"%28",		// (
-			"%29",		// )
-			"%2528",	// (
-			"%26",		// &
-			"%24",		// $
-			"%3f",		// ?
-			"%3b",		// ;
-			"%3d"		// =
-		);
+		$bad = $this->filename_bad_chars;
 
 		if ( ! $relative_path)
 		{
@@ -565,7 +741,35 @@
 		}
 
 		$str = remove_invisible_characters($str, FALSE);
-		return stripslashes(str_replace($bad, '', $str));
+
+		do
+		{
+			$old = $str;
+			$str = str_replace($bad, '', $str);
+		}
+		while ($old !== $str);
+
+		return stripslashes($str);
+	}
+
+	// ----------------------------------------------------------------
+
+	/**
+	 * Strip Image Tags
+	 *
+	 * @param	string	$str
+	 * @return	string
+	 */
+	public function strip_image_tags($str)
+	{
+		return preg_replace(
+			array(
+				'#<img[\s/]+.*?src\s*=\s*(["\'])([^\\1]+?)\\1.*?\>#i',
+				'#<img[\s/]+.*?src\s*=\s*?(([^\s"\'=<>`]+)).*?\>#i'
+			),
+			'\\2',
+			$str
+		);
 	}
 
 	// ----------------------------------------------------------------
@@ -573,11 +777,12 @@
 	/**
 	 * Compact Exploded Words
 	 *
-	 * Callback function for xss_clean() to remove whitespace from
-	 * things like j a v a s c r i p t
+	 * Callback method for xss_clean() to remove whitespace from
+	 * things like 'j a v a s c r i p t'.
 	 *
-	 * @param	type
-	 * @return	type
+	 * @used-by	CI_Security::xss_clean()
+	 * @param	array	$matches
+	 * @return	string
 	 */
 	protected function _compact_exploded_words($matches)
 	{
@@ -586,86 +791,93 @@
 
 	// --------------------------------------------------------------------
 
-	/*
-	 * Remove Evil HTML Attributes (like evenhandlers and style)
+	/**
+	 * Sanitize Naughty HTML
+	 *
+	 * Callback method for xss_clean() to remove naughty HTML elements.
 	 *
-	 * It removes the evil attribute and either:
-	 * 	- Everything up until a space
-	 *		For example, everything between the pipes:
-	 *		<a |style=document.write('hello');alert('world');| class=link>
-	 * 	- Everything inside the quotes
-	 *		For example, everything between the pipes:
-	 *		<a |style="document.write('hello'); alert('world');"| class="link">
-	 *
-	 * @param string $str The string to check
-	 * @param boolean $is_image TRUE if this is an image
-	 * @return string The string with the evil attributes removed
+	 * @used-by	CI_Security::xss_clean()
+	 * @param	array	$matches
+	 * @return	string
 	 */
-	protected function _remove_evil_attributes($str, $is_image)
+	protected function _sanitize_naughty_html($matches)
 	{
-		// All javascript event handlers (e.g. onload, onclick, onmouseover), style, and xmlns
-		$evil_attributes = array('on\w*', 'style', 'xmlns', 'formaction');
+		static $naughty_tags    = array(
+			'alert', 'prompt', 'confirm', 'applet', 'audio', 'basefont', 'base', 'behavior', 'bgsound',
+			'blink', 'body', 'embed', 'expression', 'form', 'frameset', 'frame', 'head', 'html', 'ilayer',
+			'iframe', 'input', 'button', 'select', 'isindex', 'layer', 'link', 'meta', 'keygen', 'object',
+			'plaintext', 'style', 'script', 'textarea', 'title', 'math', 'video', 'svg', 'xml', 'xss'
+		);
 
-		if ($is_image === TRUE)
+		static $evil_attributes = array(
+			'on\w+', 'style', 'xmlns', 'formaction', 'form', 'xlink:href', 'FSCommand', 'seekSegmentTime'
+		);
+
+		// First, escape unclosed tags
+		if (empty($matches['closeTag']))
 		{
-			/*
-			 * Adobe Photoshop puts XML metadata into JFIF images, 
-			 * including namespacing, so we have to allow this for images.
-			 */
-			unset($evil_attributes[array_search('xmlns', $evil_attributes)]);
+			return '&lt;'.$matches[1];
 		}
+		// Is the element that we caught naughty? If so, escape it
+		elseif (in_array(strtolower($matches['tagName']), $naughty_tags, TRUE))
+		{
+			return '&lt;'.$matches[1].'&gt;';
+		}
+		// For other tags, see if their attributes are "evil" and strip those
+		elseif (isset($matches['attributes']))
+		{
+			// We'll store the already fitlered attributes here
+			$attributes = array();
 
-		do {
-			$count = 0;
-			$attribs = array();
+			// Attribute-catching pattern
+			$attributes_pattern = '#'
+				.'(?<name>[^\s\042\047>/=]+)' // attribute characters
+				// optional attribute-value
+				.'(?:\s*=(?<value>[^\s\042\047=><`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=><`]*)))' // attribute-value separator
+				.'#i';
 
-			// find occurrences of illegal attribute strings with quotes (042 and 047 are octal quotes)
-			preg_match_all('/('.implode('|', $evil_attributes).')\s*=\s*(\042|\047)([^\\2]*?)(\\2)/is', $str, $matches, PREG_SET_ORDER);
+			// Blacklist pattern for evil attribute names
+			$is_evil_pattern = '#^('.implode('|', $evil_attributes).')$#i';
 
-			foreach ($matches as $attr)
+			// Each iteration filters a single attribute
+			do
 			{
-				$attribs[] = preg_quote($attr[0], '/');
-			}
-
-			// find occurrences of illegal attribute strings without quotes
-			preg_match_all('/('.implode('|', $evil_attributes).')\s*=\s*([^\s>]*)/is', $str, $matches, PREG_SET_ORDER);
+				// Strip any non-alpha characters that may preceed an attribute.
+				// Browsers often parse these incorrectly and that has been a
+				// of numerous XSS issues we've had.
+				$matches['attributes'] = preg_replace('#^[^a-z]+#i', '', $matches['attributes']);
 
-			foreach ($matches as $attr)
+				if ( ! preg_match($attributes_pattern, $matches['attributes'], $attribute, PREG_OFFSET_CAPTURE))
 			{
-				$attribs[] = preg_quote($attr[0], '/');
+					// No (valid) attribute found? Discard everything else inside the tag
+					break;
 			}
 
-			// replace illegal attribute strings that are inside an html tag
-			if (count($attribs) > 0)
+				if (
+					// Is it indeed an "evil" attribute?
+					preg_match($is_evil_pattern, $attribute['name'][0])
+					// Or does it have an equals sign, but no value and not quoted? Strip that too!
+					OR (trim($attribute['value'][0]) === '')
+				)
 			{
-				$str = preg_replace('/(<?)(\/?[^><]+?)([^A-Za-z<>\-])(.*?)('.implode('|', $attribs).')(.*?)([\s><]?)([><]*)/i', '$1$2 $4$6$7$8', $str, -1, $count);
+					$attributes[] = 'xss=removed';
 			}
-
-		} while ($count);
-
-		return $str;
+				else
+				{
+					$attributes[] = $attribute[0][0];
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Sanitize Naughty HTML
-	 *
-	 * Callback function for xss_clean() to remove naughty HTML elements
-	 *
-	 * @param	array
-	 * @return	string
-	 */
-	protected function _sanitize_naughty_html($matches)
-	{
-		// encode opening brace
-		$str = '&lt;'.$matches[1].$matches[2].$matches[3];
+				$matches['attributes'] = substr($matches['attributes'], $attribute[0][1] + strlen($attribute[0][0]));
+			}
+			while ($matches['attributes'] !== '');
 
-		// encode captured opening or closing brace to prevent recursive vectors
-		$str .= str_replace(array('>', '<'), array('&gt;', '&lt;'),
-							$matches[4]);
+			$attributes = empty($attributes)
+				? ''
+				: ' '.implode(' ', $attributes);
+			return '<'.$matches['slash'].$matches['tagName'].$attributes.'>';
+		}
 
-		return $str;
+		return $matches[0];
 	}
 
 	// --------------------------------------------------------------------
@@ -673,12 +885,14 @@
 	/**
 	 * JS Link Removal
 	 *
-	 * Callback function for xss_clean() to sanitize links
+	 * Callback method for xss_clean() to sanitize links.
+	 *
 	 * This limits the PCRE backtracks, making it more performance friendly
 	 * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in
-	 * PHP 5.2+ on link-heavy strings
+	 * PHP 5.2+ on link-heavy strings.
 	 *
-	 * @param	array
+	 * @used-by	CI_Security::xss_clean()
+	 * @param	array	$match
 	 * @return	string
 	 */
 	protected function _js_link_removal($match)
@@ -686,9 +900,9 @@
 		return str_replace(
 			$match[1],
 			preg_replace(
-				'#href=.*?(alert\(|alert&\#40;|javascript\:|livescript\:|mocha\:|charset\=|window\.|document\.|\.cookie|<script|<xss|data\s*:)#si',
+				'#href=.*?(?:(?:alert|prompt|confirm)(?:\(|&\#40;)|javascript:|livescript:|mocha:|charset=|window\.|document\.|\.cookie|<script|<xss|data\s*:)#si',
 				'',
-				$this->_filter_attributes(str_replace(array('<', '>'), '', $match[1]))
+				$this->_filter_attributes($match[1])
 			),
 			$match[0]
 		);
@@ -699,12 +913,14 @@
 	/**
 	 * JS Image Removal
 	 *
-	 * Callback function for xss_clean() to sanitize image tags
+	 * Callback method for xss_clean() to sanitize image tags.
+	 *
 	 * This limits the PCRE backtracks, making it more performance friendly
 	 * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in
-	 * PHP 5.2+ on image tag heavy strings
+	 * PHP 5.2+ on image tag heavy strings.
 	 *
-	 * @param	array
+	 * @used-by	CI_Security::xss_clean()
+	 * @param	array	$match
 	 * @return	string
 	 */
 	protected function _js_img_removal($match)
@@ -712,9 +928,9 @@
 		return str_replace(
 			$match[1],
 			preg_replace(
-				'#src=.*?(alert\(|alert&\#40;|javascript\:|livescript\:|mocha\:|charset\=|window\.|document\.|\.cookie|<script|<xss|base64\s*,)#si',
+				'#src=.*?(?:(?:alert|prompt|confirm|eval)(?:\(|&\#40;)|javascript:|livescript:|mocha:|charset=|window\.|document\.|\.cookie|<script|<xss|base64\s*,)#si',
 				'',
-				$this->_filter_attributes(str_replace(array('<', '>'), '', $match[1]))
+				$this->_filter_attributes($match[1])
 			),
 			$match[0]
 		);
@@ -725,9 +941,8 @@
 	/**
 	 * Attribute Conversion
 	 *
-	 * Used as a callback for XSS Clean
-	 *
-	 * @param	array
+	 * @used-by	CI_Security::xss_clean()
+	 * @param	array	$match
 	 * @return	string
 	 */
 	protected function _convert_attribute($match)
@@ -740,9 +955,11 @@
 	/**
 	 * Filter Attributes
 	 *
-	 * Filters tag attributes for consistency and safety
+	 * Filters tag attributes for consistency and safety.
 	 *
-	 * @param	string
+	 * @used-by	CI_Security::_js_img_removal()
+	 * @used-by	CI_Security::_js_link_removal()
+	 * @param	string	$str
 	 * @return	string
 	 */
 	protected function _filter_attributes($str)
@@ -753,7 +969,7 @@
 		{
 			foreach ($matches[0] as $match)
 			{
-				$out .= preg_replace("#/\*.*?\*/#s", '', $match);
+				$out .= preg_replace('#/\*.*?\*/#s', '', $match);
 			}
 		}
 
@@ -765,68 +981,30 @@
 	/**
 	 * HTML Entity Decode Callback
 	 *
-	 * Used as a callback for XSS Clean
-	 *
-	 * @param	array
+	 * @used-by	CI_Security::xss_clean()
+	 * @param	array	$match
 	 * @return	string
 	 */
 	protected function _decode_entity($match)
 	{
-		return $this->entity_decode($match[0], strtoupper(config_item('charset')));
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Validate URL entities
-	 *
-	 * Called by xss_clean()
-	 *
-	 * @param 	string
-	 * @return 	string
-	 */
-	protected function _validate_entities($str)
-	{
-		/*
-		 * Protect GET variables in URLs
-		 */
-
+		// Protect GET variables in URLs
 		 // 901119URL5918AMP18930PROTECT8198
+		$match = preg_replace('|\&([a-z\_0-9\-]+)\=([a-z\_0-9\-/]+)|i', $this->xss_hash().'\\1=\\2', $match[0]);
 
-		$str = preg_replace('|\&([a-z\_0-9\-]+)\=([a-z\_0-9\-]+)|i', $this->xss_hash()."\\1=\\2", $str);
-
-		/*
-		 * Validate standard character entities
-		 *
-		 * Add a semicolon if missing.  We do this to enable
-		 * the conversion of entities to ASCII later.
-		 *
-		 */
-		$str = preg_replace('#(&\#?[0-9a-z]{2,})([\x00-\x20])*;?#i', "\\1;\\2", $str);
-
-		/*
-		 * Validate UTF16 two byte encoding (x00)
-		 *
-		 * Just as above, adds a semicolon if missing.
-		 *
-		 */
-		$str = preg_replace('#(&\#x?)([0-9A-F]+);?#i',"\\1\\2;",$str);
-
-		/*
-		 * Un-Protect GET variables in URLs
-		 */
-		$str = str_replace($this->xss_hash(), '&', $str);
-
-		return $str;
+		// Decode, then un-protect URL GET vars
+		return str_replace(
+			$this->xss_hash(),
+			'&',
+			$this->entity_decode($match, $this->charset)
+		);
 	}
 
-	// ----------------------------------------------------------------------
+	// --------------------------------------------------------------------
 
 	/**
 	 * Do Never Allowed
 	 *
-	 * A utility function for xss_clean()
-	 *
+	 * @used-by	CI_Security::xss_clean()
 	 * @param 	string
 	 * @return 	string
 	 */
@@ -845,31 +1023,31 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set Cross Site Request Forgery Protection Cookie
+	 * Set CSRF Hash and Cookie
 	 *
 	 * @return	string
 	 */
 	protected function _csrf_set_hash()
 	{
-		if ($this->_csrf_hash == '')
+		if ($this->_csrf_hash === NULL)
 		{
-			// If the cookie exists we will use it's value.
+			// If the cookie exists we will use its value.
 			// We don't necessarily want to regenerate it with
 			// each page load since a page could contain embedded
 			// sub-pages causing this feature to fail
-			if (isset($_COOKIE[$this->_csrf_cookie_name]) &&
-				preg_match('#^[0-9a-f]{32}$#iS', $_COOKIE[$this->_csrf_cookie_name]) === 1)
+			if (isset($_COOKIE[$this->_csrf_cookie_name]) && is_string($_COOKIE[$this->_csrf_cookie_name])
+				&& preg_match('#^[0-9a-f]{32}$#iS', $_COOKIE[$this->_csrf_cookie_name]) === 1)
 			{
 				return $this->_csrf_hash = $_COOKIE[$this->_csrf_cookie_name];
 			}
 
-			return $this->_csrf_hash = md5(uniqid(rand(), TRUE));
+			$rand = $this->get_random_bytes(16);
+			$this->_csrf_hash = ($rand === FALSE)
+				? md5(uniqid(mt_rand(), TRUE))
+				: bin2hex($rand);
 		}
 
 		return $this->_csrf_hash;
 	}
 
 }
-
-/* End of file Security.php */
-/* Location: ./system/libraries/Security.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/URI.php opensourcepos/system/core/URI.php
--- pos-prod/system/core/URI.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/URI.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * URI Class
@@ -23,8 +45,8 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	URI
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/uri.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/uri.html
  */
 class CI_URI {
 
@@ -32,278 +54,263 @@
 	 * List of cached uri segments
 	 *
 	 * @var array
-	 * @access public
 	 */
-	var	$keyval			= array();
+	public $keyval = array();
+
 	/**
 	 * Current uri string
 	 *
 	 * @var string
-	 * @access public
 	 */
-	var $uri_string;
+	public $uri_string = '';
+
 	/**
 	 * List of uri segments
 	 *
+	 * Starts at 1 instead of 0.
+	 *
 	 * @var array
-	 * @access public
 	 */
-	var $segments		= array();
+	public $segments = array();
+
 	/**
-	 * Re-indexed list of uri segments
-	 * Starts at 1 instead of 0
+	 * List of routed URI segments
+	 *
+	 * Starts at 1 instead of 0.
 	 *
 	 * @var array
-	 * @access public
 	 */
-	var $rsegments		= array();
+	public $rsegments = array();
 
 	/**
-	 * Constructor
+	 * Permitted URI chars
 	 *
-	 * Simply globalizes the $RTR object.  The front
-	 * loads the Router class early on so it's not available
-	 * normally as other classes are.
+	 * PCRE character group allowed in URI segments
 	 *
-	 * @access	public
+	 * @var	string
 	 */
-	function __construct()
-	{
-		$this->config =& load_class('Config', 'core');
-		log_message('debug', "URI Class Initialized");
-	}
-
-
-	// --------------------------------------------------------------------
+	protected $_permitted_uri_chars;
 
 	/**
-	 * Get the URI String
+	 * Class constructor
 	 *
-	 * @access	private
-	 * @return	string
+	 * @return	void
 	 */
-	function _fetch_uri_string()
-	{
-		if (strtoupper($this->config->item('uri_protocol')) == 'AUTO')
-		{
-			// Is the request coming from the command line?
-			if (php_sapi_name() == 'cli' or defined('STDIN'))
+	public function __construct()
 			{
-				$this->_set_uri_string($this->_parse_cli_args());
-				return;
-			}
+		$this->config =& load_class('Config', 'core');
 
-			// Let's try the REQUEST_URI first, this will work in most situations
-			if ($uri = $this->_detect_uri())
+		// If query strings are enabled, we don't need to parse any segments.
+		// However, they don't make sense under CLI.
+		if (is_cli() OR $this->config->item('enable_query_strings') !== TRUE)
 			{
-				$this->_set_uri_string($uri);
-				return;
-			}
+			$this->_permitted_uri_chars = $this->config->item('permitted_uri_chars');
 
-			// Is there a PATH_INFO variable?
-			// Note: some servers seem to have trouble with getenv() so we'll test it two ways
-			$path = (isset($_SERVER['PATH_INFO'])) ? $_SERVER['PATH_INFO'] : @getenv('PATH_INFO');
-			if (trim($path, '/') != '' && $path != "/".SELF)
+			// If it's a CLI request, ignore the configuration
+			if (is_cli())
 			{
-				$this->_set_uri_string($path);
-				return;
+				$uri = $this->_parse_argv();
 			}
-
-			// No PATH_INFO?... What about QUERY_STRING?
-			$path =  (isset($_SERVER['QUERY_STRING'])) ? $_SERVER['QUERY_STRING'] : @getenv('QUERY_STRING');
-			if (trim($path, '/') != '')
+			else
 			{
-				$this->_set_uri_string($path);
-				return;
-			}
+				$protocol = $this->config->item('uri_protocol');
+				empty($protocol) && $protocol = 'REQUEST_URI';
 
-			// As a last ditch effort lets try using the $_GET array
-			if (is_array($_GET) && count($_GET) == 1 && trim(key($_GET), '/') != '')
+				switch ($protocol)
 			{
-				$this->_set_uri_string(key($_GET));
-				return;
+					case 'AUTO': // For BC purposes only
+					case 'REQUEST_URI':
+						$uri = $this->_parse_request_uri();
+						break;
+					case 'QUERY_STRING':
+						$uri = $this->_parse_query_string();
+						break;
+					case 'PATH_INFO':
+					default:
+						$uri = isset($_SERVER[$protocol])
+							? $_SERVER[$protocol]
+							: $this->_parse_request_uri();
+						break;
 			}
-
-			// We've exhausted all our options...
-			$this->uri_string = '';
-			return;
 		}
 
-		$uri = strtoupper($this->config->item('uri_protocol'));
-
-		if ($uri == 'REQUEST_URI')
-		{
-			$this->_set_uri_string($this->_detect_uri());
-			return;
-		}
-		elseif ($uri == 'CLI')
-		{
-			$this->_set_uri_string($this->_parse_cli_args());
-			return;
+			$this->_set_uri_string($uri);
 		}
 
-		$path = (isset($_SERVER[$uri])) ? $_SERVER[$uri] : @getenv($uri);
-		$this->_set_uri_string($path);
+		log_message('info', 'URI Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set the URI String
+	 * Set URI String
 	 *
-	 * @access	public
-	 * @param 	string
-	 * @return	string
+	 * @param 	string	$str
+	 * @return	void
 	 */
-	function _set_uri_string($str)
+	protected function _set_uri_string($str)
 	{
-		// Filter out control characters
-		$str = remove_invisible_characters($str, FALSE);
+		// Filter out control characters and trim slashes
+		$this->uri_string = trim(remove_invisible_characters($str, FALSE), '/');
 
-		// If the URI contains only a slash we'll kill it
-		$this->uri_string = ($str == '/') ? '' : $str;
+		if ($this->uri_string !== '')
+		{
+			// Remove the URL suffix, if present
+			if (($suffix = (string) $this->config->item('url_suffix')) !== '')
+			{
+				$slen = strlen($suffix);
+
+				if (substr($this->uri_string, -$slen) === $suffix)
+				{
+					$this->uri_string = substr($this->uri_string, 0, -$slen);
+				}
+			}
+
+			$this->segments[0] = NULL;
+			// Populate the segments array
+			foreach (explode('/', trim($this->uri_string, '/')) as $val)
+			{
+				$val = trim($val);
+				// Filter segments for security
+				$this->filter_uri($val);
+
+				if ($val !== '')
+				{
+					$this->segments[] = $val;
+				}
+			}
+
+			unset($this->segments[0]);
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Detects the URI
+	 * Parse REQUEST_URI
 	 *
-	 * This function will detect the URI automatically and fix the query string
-	 * if necessary.
+	 * Will parse REQUEST_URI and automatically detect the URI from it,
+	 * while fixing the query string if necessary.
 	 *
-	 * @access	private
 	 * @return	string
 	 */
-	private function _detect_uri()
+	protected function _parse_request_uri()
 	{
-		if ( ! isset($_SERVER['REQUEST_URI']) OR ! isset($_SERVER['SCRIPT_NAME']))
+		if ( ! isset($_SERVER['REQUEST_URI'], $_SERVER['SCRIPT_NAME']))
 		{
 			return '';
 		}
 
-		$uri = $_SERVER['REQUEST_URI'];
+		// parse_url() returns false if no host is present, but the path or query string
+		// contains a colon followed by a number
+		$uri = parse_url('http://dummy'.$_SERVER['REQUEST_URI']);
+		$query = isset($uri['query']) ? $uri['query'] : '';
+		$uri = isset($uri['path']) ? $uri['path'] : '';
+
+		if (isset($_SERVER['SCRIPT_NAME'][0]))
+		{
 		if (strpos($uri, $_SERVER['SCRIPT_NAME']) === 0)
 		{
-			$uri = substr($uri, strlen($_SERVER['SCRIPT_NAME']));
+				$uri = (string) substr($uri, strlen($_SERVER['SCRIPT_NAME']));
 		}
 		elseif (strpos($uri, dirname($_SERVER['SCRIPT_NAME'])) === 0)
 		{
-			$uri = substr($uri, strlen(dirname($_SERVER['SCRIPT_NAME'])));
+				$uri = (string) substr($uri, strlen(dirname($_SERVER['SCRIPT_NAME'])));
+			}
 		}
 
 		// This section ensures that even on servers that require the URI to be in the query string (Nginx) a correct
 		// URI is found, and also fixes the QUERY_STRING server var and $_GET array.
-		if (strncmp($uri, '?/', 2) === 0)
+		if (trim($uri, '/') === '' && strncmp($query, '/', 1) === 0)
 		{
-			$uri = substr($uri, 2);
-		}
-		$parts = preg_split('#\?#i', $uri, 2);
-		$uri = $parts[0];
-		if (isset($parts[1]))
-		{
-			$_SERVER['QUERY_STRING'] = $parts[1];
-			parse_str($_SERVER['QUERY_STRING'], $_GET);
+			$query = explode('?', $query, 2);
+			$uri = $query[0];
+			$_SERVER['QUERY_STRING'] = isset($query[1]) ? $query[1] : '';
 		}
 		else
 		{
-			$_SERVER['QUERY_STRING'] = '';
-			$_GET = array();
+			$_SERVER['QUERY_STRING'] = $query;
 		}
 
-		if ($uri == '/' || empty($uri))
+		parse_str($_SERVER['QUERY_STRING'], $_GET);
+
+		if ($uri === '/' OR $uri === '')
 		{
 			return '/';
 		}
 
-		$uri = parse_url($uri, PHP_URL_PATH);
-
 		// Do some final cleaning of the URI and return it
-		return str_replace(array('//', '../'), '/', trim($uri, '/'));
+		return $this->_remove_relative_directory($uri);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Parse cli arguments
+	 * Parse QUERY_STRING
 	 *
-	 * Take each command line argument and assume it is a URI segment.
+	 * Will parse QUERY_STRING and automatically detect the URI from it.
 	 *
-	 * @access	private
 	 * @return	string
 	 */
-	private function _parse_cli_args()
+	protected function _parse_query_string()
 	{
-		$args = array_slice($_SERVER['argv'], 1);
-
-		return $args ? '/' . implode('/', $args) : '';
-	}
+		$uri = isset($_SERVER['QUERY_STRING']) ? $_SERVER['QUERY_STRING'] : @getenv('QUERY_STRING');
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Filter segments for malicious characters
-	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
-	 */
-	function _filter_uri($str)
+		if (trim($uri, '/') === '')
 	{
-		if ($str != '' && $this->config->item('permitted_uri_chars') != '' && $this->config->item('enable_query_strings') == FALSE)
-		{
-			// preg_quote() in PHP 5.3 escapes -, so the str_replace() and addition of - to preg_quote() is to maintain backwards
-			// compatibility as many are unaware of how characters in the permitted_uri_chars will be parsed as a regex pattern
-			if ( ! preg_match("|^[".str_replace(array('\\-', '\-'), '-', preg_quote($this->config->item('permitted_uri_chars'), '-'))."]+$|i", $str))
-			{
-				show_error('The URI you submitted has disallowed characters.', 400);
+			return '';
 			}
+		elseif (strncmp($uri, '/', 1) === 0)
+		{
+			$uri = explode('?', $uri, 2);
+			$_SERVER['QUERY_STRING'] = isset($uri[1]) ? $uri[1] : '';
+			$uri = $uri[0];
 		}
 
-		// Convert programatic characters to entities
-		$bad	= array('$',		'(',		')',		'%28',		'%29');
-		$good	= array('&#36;',	'&#40;',	'&#41;',	'&#40;',	'&#41;');
+		parse_str($_SERVER['QUERY_STRING'], $_GET);
 
-		return str_replace($bad, $good, $str);
+		return $this->_remove_relative_directory($uri);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Remove the suffix from the URL if needed
+	 * Parse CLI arguments
 	 *
-	 * @access	private
-	 * @return	void
+	 * Take each command line argument and assume it is a URI segment.
+	 *
+	 * @return	string
 	 */
-	function _remove_url_suffix()
-	{
-		if  ($this->config->item('url_suffix') != "")
+	protected function _parse_argv()
 		{
-			$this->uri_string = preg_replace("|".preg_quote($this->config->item('url_suffix'))."$|", "", $this->uri_string);
-		}
+		$args = array_slice($_SERVER['argv'], 1);
+		return $args ? implode('/', $args) : '';
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Explode the URI Segments. The individual segments will
-	 * be stored in the $this->segments array.
+	 * Remove relative directory (../) and multi slashes (///)
 	 *
-	 * @access	private
-	 * @return	void
+	 * Do some final cleaning of the URI and return it, currently only used in self::_parse_request_uri()
+	 *
+	 * @param	string	$uri
+	 * @return	string
 	 */
-	function _explode_segments()
+	protected function _remove_relative_directory($uri)
 	{
-		foreach (explode("/", preg_replace("|/*(.+?)/*$|", "\\1", $this->uri_string)) as $val)
+		$uris = array();
+		$tok = strtok($uri, '/');
+		while ($tok !== FALSE)
 		{
-			// Filter segments for security
-			$val = trim($this->_filter_uri($val));
-
-			if ($val != '')
+			if (( ! empty($tok) OR $tok === '0') && $tok !== '..')
 			{
-				$this->segments[] = $val;
+				$uris[] = $tok;
 			}
+			$tok = strtok('/');
 		}
+
+		return implode('/', $uris);
 	}
 
 	// --------------------------------------------------------------------
@@ -307,72 +314,69 @@
 	}
 
 	// --------------------------------------------------------------------
+
 	/**
-	 * Re-index Segments
+	 * Filter URI
 	 *
-	 * This function re-indexes the $this->segment array so that it
-	 * starts at 1 rather than 0.  Doing so makes it simpler to
-	 * use functions like $this->uri->segment(n) since there is
-	 * a 1:1 relationship between the segment array and the actual segments.
+	 * Filters segments for malicious characters.
 	 *
-	 * @access	private
+	 * @param	string	$str
 	 * @return	void
 	 */
-	function _reindex_segments()
+	public function filter_uri(&$str)
 	{
-		array_unshift($this->segments, NULL);
-		array_unshift($this->rsegments, NULL);
-		unset($this->segments[0]);
-		unset($this->rsegments[0]);
+		if ( ! empty($str) && ! empty($this->_permitted_uri_chars) && ! preg_match('/^['.$this->_permitted_uri_chars.']+$/i'.(UTF8_ENABLED ? 'u' : ''), $str))
+		{
+			show_error('The URI you submitted has disallowed characters.', 400);
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a URI Segment
+	 * Fetch URI Segment
 	 *
-	 * This function returns the URI segment based on the number provided.
-	 *
-	 * @access	public
-	 * @param	integer
-	 * @param	bool
-	 * @return	string
+	 * @see		CI_URI::$segments
+	 * @param	int		$n		Index
+	 * @param	mixed		$no_result	What to return if the segment index is not found
+	 * @return	mixed
 	 */
-	function segment($n, $no_result = FALSE)
+	public function segment($n, $no_result = NULL)
 	{
-		return ( ! isset($this->segments[$n])) ? $no_result : $this->segments[$n];
+		return isset($this->segments[$n]) ? $this->segments[$n] : $no_result;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a URI "routed" Segment
+	 * Fetch URI "routed" Segment
 	 *
-	 * This function returns the re-routed URI segment (assuming routing rules are used)
-	 * based on the number provided.  If there is no routing this function returns the
-	 * same result as $this->segment()
+	 * Returns the re-routed URI segment (assuming routing rules are used)
+	 * based on the index provided. If there is no routing, will return
+	 * the same result as CI_URI::segment().
 	 *
-	 * @access	public
-	 * @param	integer
-	 * @param	bool
-	 * @return	string
+	 * @see		CI_URI::$rsegments
+	 * @see		CI_URI::segment()
+	 * @param	int		$n		Index
+	 * @param	mixed		$no_result	What to return if the segment index is not found
+	 * @return	mixed
 	 */
-	function rsegment($n, $no_result = FALSE)
+	public function rsegment($n, $no_result = NULL)
 	{
-		return ( ! isset($this->rsegments[$n])) ? $no_result : $this->rsegments[$n];
+		return isset($this->rsegments[$n]) ? $this->rsegments[$n] : $no_result;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Generate a key value pair from the URI string
+	 * URI to assoc
 	 *
-	 * This function generates and associative array of URI data starting
-	 * at the supplied segment. For example, if this is your URI:
+	 * Generates an associative array of URI data starting at the supplied
+	 * segment index. For example, if this is your URI:
 	 *
 	 *	example.com/user/search/name/joe/location/UK/gender/male
 	 *
-	 * You can use this function to generate an array with this prototype:
+	 * You can use this method to generate an array with this prototype:
 	 *
 	 * array (
 	 *			name => joe
@@ -380,25 +384,29 @@
 	 *			gender => male
 	 *		 )
 	 *
-	 * @access	public
-	 * @param	integer	the starting segment number
-	 * @param	array	an array of default values
+	 * @param	int	$n		Index (default: 3)
+	 * @param	array	$default	Default values
 	 * @return	array
 	 */
-	function uri_to_assoc($n = 3, $default = array())
+	public function uri_to_assoc($n = 3, $default = array())
 	{
 		return $this->_uri_to_assoc($n, $default, 'segment');
 	}
+
+	// --------------------------------------------------------------------
+
 	/**
-	 * Identical to above only it uses the re-routed segment array
+	 * Routed URI to assoc
 	 *
-	 * @access 	public
-	 * @param 	integer	the starting segment number
-	 * @param 	array	an array of default values
-	 * @return 	array
+	 * Identical to CI_URI::uri_to_assoc(), only it uses the re-routed
+	 * segment array.
 	 *
+	 * @see		CI_URI::uri_to_assoc()
+	 * @param 	int	$n		Index (default: 3)
+	 * @param 	array	$default	Default values
+	 * @return 	array
 	 */
-	function ruri_to_assoc($n = 3, $default = array())
+	public function ruri_to_assoc($n = 3, $default = array())
 	{
 		return $this->_uri_to_assoc($n, $default, 'rsegment');
 	}
@@ -406,50 +414,37 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Generate a key value pair from the URI string or Re-routed URI string
+	 * Internal URI-to-assoc
+	 *
+	 * Generates a key/value pair from the URI string or re-routed URI string.
 	 *
-	 * @access	private
-	 * @param	integer	the starting segment number
-	 * @param	array	an array of default values
-	 * @param	string	which array we should use
+	 * @used-by	CI_URI::uri_to_assoc()
+	 * @used-by	CI_URI::ruri_to_assoc()
+	 * @param	int	$n		Index (default: 3)
+	 * @param	array	$default	Default values
+	 * @param	string	$which		Array name ('segment' or 'rsegment')
 	 * @return	array
 	 */
-	function _uri_to_assoc($n = 3, $default = array(), $which = 'segment')
+	protected function _uri_to_assoc($n = 3, $default = array(), $which = 'segment')
 	{
-		if ($which == 'segment')
-		{
-			$total_segments = 'total_segments';
-			$segment_array = 'segment_array';
-		}
-		else
-		{
-			$total_segments = 'total_rsegments';
-			$segment_array = 'rsegment_array';
-		}
-
 		if ( ! is_numeric($n))
 		{
 			return $default;
 		}
 
-		if (isset($this->keyval[$n]))
+		if (isset($this->keyval[$which], $this->keyval[$which][$n]))
 		{
-			return $this->keyval[$n];
+			return $this->keyval[$which][$n];
 		}
 
-		if ($this->$total_segments() < $n)
-		{
-			if (count($default) == 0)
-			{
-				return array();
-			}
+		$total_segments = "total_{$which}s";
+		$segment_array = "{$which}_array";
 
-			$retval = array();
-			foreach ($default as $val)
+		if ($this->$total_segments() < $n)
 			{
-				$retval[$val] = FALSE;
-			}
-			return $retval;
+			return (count($default) === 0)
+				? array()
+				: array_fill_keys($default, NULL);
 		}
 
 		$segments = array_slice($this->$segment_array(), ($n - 1));
@@ -465,7 +459,7 @@
 			}
 			else
 			{
-				$retval[$seg] = FALSE;
+				$retval[$seg] = NULL;
 				$lastval = $seg;
 			}
 
@@ -478,27 +472,28 @@
 			{
 				if ( ! array_key_exists($val, $retval))
 				{
-					$retval[$val] = FALSE;
+					$retval[$val] = NULL;
 				}
 			}
 		}
 
 		// Cache the array for reuse
-		$this->keyval[$n] = $retval;
+		isset($this->keyval[$which]) OR $this->keyval[$which] = array();
+		$this->keyval[$which][$n] = $retval;
 		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Generate a URI string from an associative array
+	 * Assoc to URI
 	 *
+	 * Generates a URI string from an associative array.
 	 *
-	 * @access	public
-	 * @param	array	an associative array of key/values
-	 * @return	array
+	 * @param	array	$array	Input array of key/value pairs
+	 * @return	string	URI string
 	 */
-	function assoc_to_uri($array)
+	public function assoc_to_uri($array)
 	{
 		$temp = array();
 		foreach ((array)$array as $key => $val)
@@ -513,14 +508,15 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a URI Segment and add a trailing slash
+	 * Slash segment
+	 *
+	 * Fetches an URI segment with a slash.
 	 *
-	 * @access	public
-	 * @param	integer
-	 * @param	string
+	 * @param	int	$n	Index
+	 * @param	string	$where	Where to add the slash ('trailing' or 'leading')
 	 * @return	string
 	 */
-	function slash_segment($n, $where = 'trailing')
+	public function slash_segment($n, $where = 'trailing')
 	{
 		return $this->_slash_segment($n, $where, 'segment');
 	}
@@ -528,14 +524,15 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a URI Segment and add a trailing slash
+	 * Slash routed segment
 	 *
-	 * @access	public
-	 * @param	integer
-	 * @param	string
+	 * Fetches an URI routed segment with a slash.
+	 *
+	 * @param	int	$n	Index
+	 * @param	string	$where	Where to add the slash ('trailing' or 'leading')
 	 * @return	string
 	 */
-	function slash_rsegment($n, $where = 'trailing')
+	public function slash_rsegment($n, $where = 'trailing')
 	{
 		return $this->_slash_segment($n, $where, 'rsegment');
 	}
@@ -543,24 +540,27 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch a URI Segment and add a trailing slash - helper function
+	 * Internal Slash segment
+	 *
+	 * Fetches an URI Segment and adds a slash to it.
 	 *
-	 * @access	private
-	 * @param	integer
-	 * @param	string
-	 * @param	string
+	 * @used-by	CI_URI::slash_segment()
+	 * @used-by	CI_URI::slash_rsegment()
+	 *
+	 * @param	int	$n	Index
+	 * @param	string	$where	Where to add the slash ('trailing' or 'leading')
+	 * @param	string	$which	Array name ('segment' or 'rsegment')
 	 * @return	string
 	 */
-	function _slash_segment($n, $where = 'trailing', $which = 'segment')
+	protected function _slash_segment($n, $where = 'trailing', $which = 'segment')
 	{
-		$leading	= '/';
-		$trailing	= '/';
+		$leading = $trailing = '/';
 
-		if ($where == 'trailing')
+		if ($where === 'trailing')
 		{
 			$leading	= '';
 		}
-		elseif ($where == 'leading')
+		elseif ($where === 'leading')
 		{
 			$trailing	= '';
 		}
@@ -573,10 +573,9 @@
 	/**
 	 * Segment Array
 	 *
-	 * @access	public
-	 * @return	array
+	 * @return	array	CI_URI::$segments
 	 */
-	function segment_array()
+	public function segment_array()
 	{
 		return $this->segments;
 	}
@@ -586,10 +585,9 @@
 	/**
 	 * Routed Segment Array
 	 *
-	 * @access	public
-	 * @return	array
+	 * @return	array	CI_URI::$rsegments
 	 */
-	function rsegment_array()
+	public function rsegment_array()
 	{
 		return $this->rsegments;
 	}
@@ -599,10 +597,9 @@
 	/**
 	 * Total number of segments
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function total_segments()
+	public function total_segments()
 	{
 		return count($this->segments);
 	}
@@ -612,10 +609,9 @@
 	/**
 	 * Total number of routed segments
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function total_rsegments()
+	public function total_rsegments()
 	{
 		return count($this->rsegments);
 	}
@@ -623,12 +619,11 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch the entire URI string
+	 * Fetch URI string
 	 *
-	 * @access	public
-	 * @return	string
+	 * @return	string	CI_URI::$uri_string
 	 */
-	function uri_string()
+	public function uri_string()
 	{
 		return $this->uri_string;
 	}
@@ -637,18 +631,13 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch the entire Re-routed URI string
+	 * Fetch Re-routed URI string
 	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function ruri_string()
+	public function ruri_string()
 	{
-		return '/'.implode('/', $this->rsegment_array());
+		return ltrim(load_class('Router', 'core')->directory, '/').implode('/', $this->rsegments);
 	}
 
 }
-// END URI Class
-
-/* End of file URI.php */
-/* Location: ./system/core/URI.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/core/Utf8.php opensourcepos/system/core/Utf8.php
--- pos-prod/system/core/Utf8.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/core/Utf8.php	2016-05-23 15:32:31.934838959 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 2.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Utf8 Class
@@ -23,52 +45,36 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	UTF-8
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/utf8.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/utf8.html
  */
 class CI_Utf8 {
 
 	/**
-	 * Constructor
+	 * Class constructor
 	 *
-	 * Determines if UTF-8 support is to be enabled
+	 * Determines if UTF-8 support is to be enabled.
 	 *
+	 * @return	void
 	 */
-	function __construct()
+	public function __construct()
 	{
-		log_message('debug', "Utf8 Class Initialized");
-
-		global $CFG;
-
 		if (
-			preg_match('/./u', 'é') === 1					// PCRE must support UTF-8
-			AND function_exists('iconv')					// iconv must be installed
-			AND ini_get('mbstring.func_overload') != 1		// Multibyte string function overloading cannot be enabled
-			AND $CFG->item('charset') == 'UTF-8'			// Application charset must be UTF-8
+			defined('PREG_BAD_UTF8_ERROR')				// PCRE must support UTF-8
+			&& (ICONV_ENABLED === TRUE OR MB_ENABLED === TRUE)	// iconv or mbstring must be installed
+			&& strtoupper(config_item('charset')) === 'UTF-8'	// Application charset must be UTF-8
 			)
 		{
-			log_message('debug', "UTF-8 Support Enabled");
-
 			define('UTF8_ENABLED', TRUE);
-
-			// set internal encoding for multibyte string functions if necessary
-			// and set a flag so we don't have to repeatedly use extension_loaded()
-			// or function_exists()
-			if (extension_loaded('mbstring'))
-			{
-				define('MB_ENABLED', TRUE);
-				mb_internal_encoding('UTF-8');
+			log_message('debug', 'UTF-8 Support Enabled');
 			}
 			else
 			{
-				define('MB_ENABLED', FALSE);
-			}
-		}
-		else
-		{
-			log_message('debug', "UTF-8 Support Disabled");
 			define('UTF8_ENABLED', FALSE);
+			log_message('debug', 'UTF-8 Support Disabled');
 		}
+
+		log_message('info', 'Utf8 Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -76,18 +82,24 @@
 	/**
 	 * Clean UTF-8 strings
 	 *
-	 * Ensures strings are UTF-8
+	 * Ensures strings contain only valid UTF-8 characters.
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$str	String to clean
 	 * @return	string
 	 */
-	function clean_string($str)
+	public function clean_string($str)
 	{
-		if ($this->_is_ascii($str) === FALSE)
+		if ($this->is_ascii($str) === FALSE)
+		{
+			if (MB_ENABLED)
+			{
+				$str = mb_convert_encoding($str, 'UTF-8', 'UTF-8');
+			}
+			elseif (ICONV_ENABLED)
 		{
 			$str = @iconv('UTF-8', 'UTF-8//IGNORE', $str);
 		}
+		}
 
 		return $str;
 	}
@@ -99,13 +111,12 @@
 	 *
 	 * Removes all ASCII control characters except horizontal tabs,
 	 * line feeds, and carriage returns, as all others can cause
-	 * problems in XML
+	 * problems in XML.
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$str	String to clean
 	 * @return	string
 	 */
-	function safe_ascii_for_xml($str)
+	public function safe_ascii_for_xml($str)
 	{
 		return remove_invisible_characters($str, FALSE);
 	}
@@ -115,29 +126,24 @@
 	/**
 	 * Convert to UTF-8
 	 *
-	 * Attempts to convert a string to UTF-8
+	 * Attempts to convert a string to UTF-8.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string	- input encoding
-	 * @return	string
+	 * @param	string	$str		Input string
+	 * @param	string	$encoding	Input encoding
+	 * @return	string	$str encoded in UTF-8 or FALSE on failure
 	 */
-	function convert_to_utf8($str, $encoding)
-	{
-		if (function_exists('iconv'))
+	public function convert_to_utf8($str, $encoding)
 		{
-			$str = @iconv($encoding, 'UTF-8', $str);
-		}
-		elseif (function_exists('mb_convert_encoding'))
+		if (MB_ENABLED)
 		{
-			$str = @mb_convert_encoding($str, 'UTF-8', $encoding);
+			return mb_convert_encoding($str, 'UTF-8', $encoding);
 		}
-		else
+		elseif (ICONV_ENABLED)
 		{
-			return FALSE;
+			return @iconv($encoding, 'UTF-8', $str);
 		}
 
-		return $str;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -145,21 +151,14 @@
 	/**
 	 * Is ASCII?
 	 *
-	 * Tests if a string is standard 7-bit ASCII or not
+	 * Tests if a string is standard 7-bit ASCII or not.
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$str	String to check
 	 * @return	bool
 	 */
-	function _is_ascii($str)
+	public function is_ascii($str)
 	{
-		return (preg_match('/[^\x00-\x7F]/S', $str) == 0);
+		return (preg_match('/[^\x00-\x7F]/S', $str) === 0);
 	}
 
-	// --------------------------------------------------------------------
-
 }
-// End Utf8 Class
-
-/* End of file Utf8.php */
-/* Location: ./system/core/Utf8.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/DB.php opensourcepos/system/database/DB.php
--- pos-prod/system/database/DB.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/DB.php	2016-05-23 15:32:31.935838944 -0700
@@ -1,100 +1,141 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Initialize the database
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
- * @param 	string
- * @param 	bool	Determines if active record should be used or not
+ * @author	EllisLab Dev Team
+ * @link	https://codeigniter.com/user_guide/database/
+ *
+ * @param 	string|string[]	$params
+ * @param 	bool		$query_builder_override
+ *				Determines if query builder should be used or not
  */
-function &DB($params = '', $active_record_override = NULL)
+function &DB($params = '', $query_builder_override = NULL)
 {
 	// Load the DB config file if a DSN string wasn't passed
-	if (is_string($params) AND strpos($params, '://') === FALSE)
+	if (is_string($params) && strpos($params, '://') === FALSE)
 	{
 		// Is the config file in the environment folder?
-		if ( ! defined('ENVIRONMENT') OR ! file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/database.php'))
-		{
-			if ( ! file_exists($file_path = APPPATH.'config/database.php'))
+		if ( ! file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/database.php')
+			&& ! file_exists($file_path = APPPATH.'config/database.php'))
 			{
 				show_error('The configuration file database.php does not exist.');
 			}
-		}
 
 		include($file_path);
 
-		if ( ! isset($db) OR count($db) == 0)
+		// Make packages contain database config files,
+		// given that the controller instance already exists
+		if (class_exists('CI_Controller', FALSE))
+		{
+			foreach (get_instance()->load->get_package_paths() as $path)
+			{
+				if ($path !== APPPATH)
+				{
+					if (file_exists($file_path = $path.'config/'.ENVIRONMENT.'/database.php'))
+					{
+						include($file_path);
+					}
+					elseif (file_exists($file_path = $path.'config/database.php'))
+					{
+						include($file_path);
+					}
+				}
+			}
+		}
+
+		if ( ! isset($db) OR count($db) === 0)
 		{
 			show_error('No database connection settings were found in the database config file.');
 		}
 
-		if ($params != '')
+		if ($params !== '')
 		{
 			$active_group = $params;
 		}
 
-		if ( ! isset($active_group) OR ! isset($db[$active_group]))
+		if ( ! isset($active_group))
 		{
-			show_error('You have specified an invalid database connection group.');
+			show_error('You have not specified a database connection group via $active_group in your config/database.php file.');
+		}
+		elseif ( ! isset($db[$active_group]))
+		{
+			show_error('You have specified an invalid database connection group ('.$active_group.') in your config/database.php file.');
 		}
 
 		$params = $db[$active_group];
 	}
 	elseif (is_string($params))
 	{
-
-		/* parse the URL from the DSN string
+		/**
+		 * Parse the URL from the DSN string
 		 *  Database settings can be passed as discreet
 		 *  parameters or as a data source name in the first
 		 *  parameter. DSNs must have this prototype:
 		 *  $dsn = 'driver://username:password@hostname/database';
 		 */
-
-		if (($dns = @parse_url($params)) === FALSE)
+		if (($dsn = @parse_url($params)) === FALSE)
 		{
 			show_error('Invalid DB Connection String');
 		}
 
 		$params = array(
-							'dbdriver'	=> $dns['scheme'],
-							'hostname'	=> (isset($dns['host'])) ? rawurldecode($dns['host']) : '',
-							'username'	=> (isset($dns['user'])) ? rawurldecode($dns['user']) : '',
-							'password'	=> (isset($dns['pass'])) ? rawurldecode($dns['pass']) : '',
-							'database'	=> (isset($dns['path'])) ? rawurldecode(substr($dns['path'], 1)) : ''
+			'dbdriver'	=> $dsn['scheme'],
+			'hostname'	=> isset($dsn['host']) ? rawurldecode($dsn['host']) : '',
+			'port'		=> isset($dsn['port']) ? rawurldecode($dsn['port']) : '',
+			'username'	=> isset($dsn['user']) ? rawurldecode($dsn['user']) : '',
+			'password'	=> isset($dsn['pass']) ? rawurldecode($dsn['pass']) : '',
+			'database'	=> isset($dsn['path']) ? rawurldecode(substr($dsn['path'], 1)) : ''
 						);
 
 		// were additional config items set?
-		if (isset($dns['query']))
+		if (isset($dsn['query']))
 		{
-			parse_str($dns['query'], $extra);
+			parse_str($dsn['query'], $extra);
 
 			foreach ($extra as $key => $val)
 			{
-				// booleans please
-				if (strtoupper($val) == "TRUE")
-				{
-					$val = TRUE;
-				}
-				elseif (strtoupper($val) == "FALSE")
+				if (is_string($val) && in_array(strtoupper($val), array('TRUE', 'FALSE', 'NULL')))
 				{
-					$val = FALSE;
+					$val = var_export($val, TRUE);
 				}
 
 				$params[$key] = $val;
@@ -103,60 +144,75 @@
 	}
 
 	// No DB specified yet?  Beat them senseless...
-	if ( ! isset($params['dbdriver']) OR $params['dbdriver'] == '')
+	if (empty($params['dbdriver']))
 	{
 		show_error('You have not selected a database type to connect to.');
 	}
 
-	// Load the DB classes.  Note: Since the active record class is optional
+	// Load the DB classes. Note: Since the query builder class is optional
 	// we need to dynamically create a class that extends proper parent class
-	// based on whether we're using the active record class or not.
-	// Kudos to Paul for discovering this clever use of eval()
-
-	if ($active_record_override !== NULL)
+	// based on whether we're using the query builder class or not.
+	if ($query_builder_override !== NULL)
+	{
+		$query_builder = $query_builder_override;
+	}
+	// Backwards compatibility work-around for keeping the
+	// $active_record config variable working. Should be
+	// removed in v3.1
+	elseif ( ! isset($query_builder) && isset($active_record))
 	{
-		$active_record = $active_record_override;
+		$query_builder = $active_record;
 	}
 
 	require_once(BASEPATH.'database/DB_driver.php');
 
-	if ( ! isset($active_record) OR $active_record == TRUE)
+	if ( ! isset($query_builder) OR $query_builder === TRUE)
 	{
-		require_once(BASEPATH.'database/DB_active_rec.php');
-
-		if ( ! class_exists('CI_DB'))
+		require_once(BASEPATH.'database/DB_query_builder.php');
+		if ( ! class_exists('CI_DB', FALSE))
 		{
-			eval('class CI_DB extends CI_DB_active_record { }');
+			/**
+			 * CI_DB
+			 *
+			 * Acts as an alias for both CI_DB_driver and CI_DB_query_builder.
+			 *
+			 * @see	CI_DB_query_builder
+			 * @see	CI_DB_driver
+			 */
+			class CI_DB extends CI_DB_query_builder { }
 		}
 	}
-	else
-	{
-		if ( ! class_exists('CI_DB'))
+	elseif ( ! class_exists('CI_DB', FALSE))
 		{
-			eval('class CI_DB extends CI_DB_driver { }');
-		}
+		/**
+	 	 * @ignore
+		 */
+		class CI_DB extends CI_DB_driver { }
 	}
 
-	require_once(BASEPATH.'database/drivers/'.$params['dbdriver'].'/'.$params['dbdriver'].'_driver.php');
+	// Load the DB driver
+	$driver_file = BASEPATH.'database/drivers/'.$params['dbdriver'].'/'.$params['dbdriver'].'_driver.php';
+
+	file_exists($driver_file) OR show_error('Invalid DB driver');
+	require_once($driver_file);
 
 	// Instantiate the DB adapter
 	$driver = 'CI_DB_'.$params['dbdriver'].'_driver';
 	$DB = new $driver($params);
 
-	if ($DB->autoinit == TRUE)
+	// Check for a subdriver
+	if ( ! empty($DB->subdriver))
 	{
-		$DB->initialize();
-	}
+		$driver_file = BASEPATH.'database/drivers/'.$DB->dbdriver.'/subdrivers/'.$DB->dbdriver.'_'.$DB->subdriver.'_driver.php';
 
-	if (isset($params['stricton']) && $params['stricton'] == TRUE)
+		if (file_exists($driver_file))
 	{
-		$DB->query('SET SESSION sql_mode="STRICT_ALL_TABLES"');
+			require_once($driver_file);
+			$driver = 'CI_DB_'.$DB->dbdriver.'_'.$DB->subdriver.'_driver';
+			$DB = new $driver($params);
+		}
 	}
 
+	$DB->initialize();
 	return $DB;
 }
-
-
-
-/* End of file DB.php */
-/* Location: ./system/database/DB.php */
\ No newline at end of file
Only in pos-prod/system/database: DB_active_rec.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/DB_cache.php opensourcepos/system/database/DB_cache.php
--- pos-prod/system/database/DB_cache.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/DB_cache.php	2016-05-23 15:32:31.935838944 -0700
@@ -1,45 +1,84 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Database Cache Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_Cache {
 
-	var $CI;
-	var $db;	// allows passing of db object so that multiple database connections and returned db objects can be supported
+	/**
+	 * CI Singleton
+	 *
+	 * @var	object
+	 */
+	public $CI;
 
 	/**
-	 * Constructor
+	 * Database object
+	 *
+	 * Allows passing of DB object so that multiple database connections
+	 * and returned DB objects can be supported.
 	 *
-	 * Grabs the CI super object instance so we can access it.
+	 * @var	object
+	 */
+	public $db;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
 	 *
+	 * @param	object	&$db
+	 * @return	void
 	 */
-	function __construct(&$db)
+	public function __construct(&$db)
 	{
-		// Assign the main CI object to $this->CI
-		// and load the file helper since we use it a lot
+		// Assign the main CI object to $this->CI and load the file helper since we use it a lot
 		$this->CI =& get_instance();
 		$this->db =& $db;
 		$this->CI->load->helper('file');
+
+		$this->check_path();
 	}
 
 	// --------------------------------------------------------------------
@@ -47,15 +86,14 @@
 	/**
 	 * Set Cache Directory Path
 	 *
-	 * @access	public
-	 * @param	string	the path to the cache directory
+	 * @param	string	$path	Path to the cache directory
 	 * @return	bool
 	 */
-	function check_path($path = '')
+	public function check_path($path = '')
 	{
-		if ($path == '')
+		if ($path === '')
 		{
-			if ($this->db->cachedir == '')
+			if ($this->db->cachedir === '')
 			{
 				return $this->db->cache_off();
 			}
@@ -64,14 +102,26 @@
 		}
 
 		// Add a trailing slash to the path if needed
-		$path = preg_replace("/(.+?)\/*$/", "\\1/",  $path);
+		$path = realpath($path)
+			? rtrim(realpath($path), DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR
+			: rtrim($path, '/').'/';
 
-		if ( ! is_dir($path) OR ! is_really_writable($path))
+		if ( ! is_dir($path))
 		{
+			log_message('debug', 'DB cache path error: '.$path);
+
 			// If the path is wrong we'll turn off caching
 			return $this->db->cache_off();
 		}
 
+		if ( ! is_really_writable($path))
+		{
+			log_message('debug', 'DB cache dir not writable: '.$path);
+
+			// If the path is not really writable we'll turn off caching
+			return $this->db->cache_off();
+		}
+
 		$this->db->cachedir = $path;
 		return TRUE;
 	}
@@ -82,25 +132,18 @@
 	 * Retrieve a cached query
 	 *
 	 * The URI being requested will become the name of the cache sub-folder.
-	 * An MD5 hash of the SQL statement will become the cache file name
+	 * An MD5 hash of the SQL statement will become the cache file name.
 	 *
-	 * @access	public
+	 * @param	string	$sql
 	 * @return	string
 	 */
-	function read($sql)
+	public function read($sql)
 	{
-		if ( ! $this->check_path())
-		{
-			return $this->db->cache_off();
-		}
-
 		$segment_one = ($this->CI->uri->segment(1) == FALSE) ? 'default' : $this->CI->uri->segment(1);
-
 		$segment_two = ($this->CI->uri->segment(2) == FALSE) ? 'index' : $this->CI->uri->segment(2);
-
 		$filepath = $this->db->cachedir.$segment_one.'+'.$segment_two.'/'.md5($sql);
 
-		if (FALSE === ($cachedata = read_file($filepath)))
+		if (FALSE === ($cachedata = @file_get_contents($filepath)))
 		{
 			return FALSE;
 		}
@@ -113,40 +156,28 @@
 	/**
 	 * Write a query to a cache file
 	 *
-	 * @access	public
+	 * @param	string	$sql
+	 * @param	object	$object
 	 * @return	bool
 	 */
-	function write($sql, $object)
+	public function write($sql, $object)
 	{
-		if ( ! $this->check_path())
-		{
-			return $this->db->cache_off();
-		}
-
 		$segment_one = ($this->CI->uri->segment(1) == FALSE) ? 'default' : $this->CI->uri->segment(1);
-
 		$segment_two = ($this->CI->uri->segment(2) == FALSE) ? 'index' : $this->CI->uri->segment(2);
-
 		$dir_path = $this->db->cachedir.$segment_one.'+'.$segment_two.'/';
-
 		$filename = md5($sql);
 
-		if ( ! @is_dir($dir_path))
-		{
-			if ( ! @mkdir($dir_path, DIR_WRITE_MODE))
+		if ( ! is_dir($dir_path) && ! @mkdir($dir_path, 0750))
 			{
 				return FALSE;
 			}
 
-			@chmod($dir_path, DIR_WRITE_MODE);
-		}
-
 		if (write_file($dir_path.$filename, serialize($object)) === FALSE)
 		{
 			return FALSE;
 		}
 
-		@chmod($dir_path.$filename, FILE_WRITE_MODE);
+		chmod($dir_path.$filename, 0640);
 		return TRUE;
 	}
 
@@ -155,17 +186,18 @@
 	/**
 	 * Delete cache files within a particular directory
 	 *
-	 * @access	public
-	 * @return	bool
+	 * @param	string	$segment_one
+	 * @param	string	$segment_two
+	 * @return	void
 	 */
-	function delete($segment_one = '', $segment_two = '')
+	public function delete($segment_one = '', $segment_two = '')
 	{
-		if ($segment_one == '')
+		if ($segment_one === '')
 		{
 			$segment_one  = ($this->CI->uri->segment(1) == FALSE) ? 'default' : $this->CI->uri->segment(1);
 		}
 
-		if ($segment_two == '')
+		if ($segment_two === '')
 		{
 			$segment_two = ($this->CI->uri->segment(2) == FALSE) ? 'index' : $this->CI->uri->segment(2);
 		}
@@ -180,16 +211,11 @@
 	/**
 	 * Delete all existing cache files
 	 *
-	 * @access	public
-	 * @return	bool
+	 * @return	void
 	 */
-	function delete_all()
+	public function delete_all()
 	{
-		delete_files($this->db->cachedir, TRUE);
+		delete_files($this->db->cachedir, TRUE, TRUE);
 	}
 
 }
-
-
-/* End of file DB_cache.php */
-/* Location: ./system/database/DB_cache.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/DB_driver.php opensourcepos/system/database/DB_driver.php
--- pos-prod/system/database/DB_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/DB_driver.php	2016-05-23 15:32:31.935838944 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Database Driver Class
@@ -25,60 +47,322 @@
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
+ */
+abstract class CI_DB_driver {
+
+	/**
+	 * Data Source Name / Connect string
+	 *
+	 * @var	string
+	 */
+	public $dsn;
+
+	/**
+	 * Username
+	 *
+	 * @var	string
+	 */
+	public $username;
+
+	/**
+	 * Password
+	 *
+	 * @var	string
+	 */
+	public $password;
+
+	/**
+	 * Hostname
+	 *
+	 * @var	string
+	 */
+	public $hostname;
+
+	/**
+	 * Database name
+	 *
+	 * @var	string
+	 */
+	public $database;
+
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver		= 'mysqli';
+
+	/**
+	 * Sub-driver
+	 *
+	 * @used-by	CI_DB_pdo_driver
+	 * @var	string
+	 */
+	public $subdriver;
+
+	/**
+	 * Table prefix
+	 *
+	 * @var	string
+	 */
+	public $dbprefix		= '';
+
+	/**
+	 * Character set
+	 *
+	 * @var	string
+	 */
+	public $char_set		= 'utf8';
+
+	/**
+	 * Collation
+	 *
+	 * @var	string
+	 */
+	public $dbcollat		= 'utf8_general_ci';
+
+	/**
+	 * Encryption flag/data
+	 *
+	 * @var	mixed
+	 */
+	public $encrypt			= FALSE;
+
+	/**
+	 * Swap Prefix
+	 *
+	 * @var	string
  */
-class CI_DB_driver {
+	public $swap_pre		= '';
 
-	var $username;
-	var $password;
-	var $hostname;
-	var $database;
-	var $dbdriver		= 'mysql';
-	var $dbprefix		= '';
-	var $char_set		= 'utf8';
-	var $dbcollat		= 'utf8_general_ci';
-	var $autoinit		= TRUE; // Whether to automatically initialize the DB
-	var $swap_pre		= '';
-	var $port			= '';
-	var $pconnect		= FALSE;
-	var $conn_id		= FALSE;
-	var $result_id		= FALSE;
-	var $db_debug		= FALSE;
-	var $benchmark		= 0;
-	var $query_count	= 0;
-	var $bind_marker	= '?';
-	var $save_queries	= TRUE;
-	var $queries		= array();
-	var $query_times	= array();
-	var $data_cache		= array();
-	var $trans_enabled	= TRUE;
-	var $trans_strict	= TRUE;
-	var $_trans_depth	= 0;
-	var $_trans_status	= TRUE; // Used with transactions to determine if a rollback should occur
-	var $cache_on		= FALSE;
-	var $cachedir		= '';
-	var $cache_autodel	= FALSE;
-	var $CACHE; // The cache class object
-
-	// Private variables
-	var $_protect_identifiers	= TRUE;
-	var $_reserved_identifiers	= array('*'); // Identifiers that should NOT be escaped
-
-	// These are use with Oracle
-	var $stmt_id;
-	var $curs_id;
-	var $limit_used;
+	/**
+	 * Database port
+	 *
+	 * @var	int
+	 */
+	public $port			= '';
 
+	/**
+	 * Persistent connection flag
+	 *
+	 * @var	bool
+	 */
+	public $pconnect		= FALSE;
+
+	/**
+	 * Connection ID
+	 *
+	 * @var	object|resource
+	 */
+	public $conn_id			= FALSE;
 
+	/**
+	 * Result ID
+	 *
+	 * @var	object|resource
+	 */
+	public $result_id		= FALSE;
+
+	/**
+	 * Debug flag
+	 *
+	 * Whether to display error messages.
+	 *
+	 * @var	bool
+	 */
+	public $db_debug		= FALSE;
+
+	/**
+	 * Benchmark time
+	 *
+	 * @var	int
+	 */
+	public $benchmark		= 0;
 
 	/**
-	 * Constructor.  Accepts one parameter containing the database
-	 * connection settings.
+	 * Executed queries count
+	 *
+	 * @var	int
+	 */
+	public $query_count		= 0;
+
+	/**
+	 * Bind marker
+	 *
+	 * Character used to identify values in a prepared statement.
+	 *
+	 * @var	string
+	 */
+	public $bind_marker		= '?';
+
+	/**
+	 * Save queries flag
+	 *
+	 * Whether to keep an in-memory history of queries for debugging purposes.
+	 *
+	 * @var	bool
+	 */
+	public $save_queries		= TRUE;
+
+	/**
+	 * Queries list
+	 *
+	 * @see	CI_DB_driver::$save_queries
+	 * @var	string[]
+	 */
+	public $queries			= array();
+
+	/**
+	 * Query times
+	 *
+	 * A list of times that queries took to execute.
+	 *
+	 * @var	array
+	 */
+	public $query_times		= array();
+
+	/**
+	 * Data cache
+	 *
+	 * An internal generic value cache.
 	 *
-	 * @param array
+	 * @var	array
 	 */
-	function __construct($params)
+	public $data_cache		= array();
+
+	/**
+	 * Transaction enabled flag
+	 *
+	 * @var	bool
+	 */
+	public $trans_enabled		= TRUE;
+
+	/**
+	 * Strict transaction mode flag
+	 *
+	 * @var	bool
+	 */
+	public $trans_strict		= TRUE;
+
+	/**
+	 * Transaction depth level
+	 *
+	 * @var	int
+	 */
+	protected $_trans_depth		= 0;
+
+	/**
+	 * Transaction status flag
+	 *
+	 * Used with transactions to determine if a rollback should occur.
+	 *
+	 * @var	bool
+	 */
+	protected $_trans_status	= TRUE;
+
+	/**
+	 * Transaction failure flag
+	 *
+	 * Used with transactions to determine if a transaction has failed.
+	 *
+	 * @var	bool
+	 */
+	protected $_trans_failure	= FALSE;
+
+	/**
+	 * Cache On flag
+	 *
+	 * @var	bool
+	 */
+	public $cache_on		= FALSE;
+
+	/**
+	 * Cache directory path
+	 *
+	 * @var	bool
+	 */
+	public $cachedir		= '';
+
+	/**
+	 * Cache auto-delete flag
+	 *
+	 * @var	bool
+	 */
+	public $cache_autodel		= FALSE;
+
+	/**
+	 * DB Cache object
+	 *
+	 * @see	CI_DB_cache
+	 * @var	object
+	 */
+	public $CACHE;
+
+	/**
+	 * Protect identifiers flag
+	 *
+	 * @var	bool
+	 */
+	protected $_protect_identifiers		= TRUE;
+
+	/**
+	 * List of reserved identifiers
+	 *
+	 * Identifiers that must NOT be escaped.
+	 *
+	 * @var	string[]
+	 */
+	protected $_reserved_identifiers	= array('*');
+
+	/**
+	 * Identifier escape character
+	 *
+	 * @var	string
+	 */
+	protected $_escape_char = '"';
+
+	/**
+	 * ESCAPE statement string
+	 *
+	 * @var	string
+	 */
+	protected $_like_escape_str = " ESCAPE '%s' ";
+
+	/**
+	 * ESCAPE character
+	 *
+	 * @var	string
+	 */
+	protected $_like_escape_chr = '!';
+
+	/**
+	 * ORDER BY random keyword
+	 *
+	 * @var	array
+	 */
+	protected $_random_keyword = array('RAND()', 'RAND(%d)');
+
+	/**
+	 * COUNT string
+	 *
+	 * @used-by	CI_DB_driver::count_all()
+	 * @used-by	CI_DB_query_builder::count_all_results()
+	 *
+	 * @var	string
+	 */
+	protected $_count_string = 'SELECT COUNT(*) AS ';
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
+	 *
+	 * @param	array	$params
+	 * @return	void
+	 */
+	public function __construct($params)
 	{
 		if (is_array($params))
 		{
@@ -88,7 +372,7 @@
 			}
 		}
 
-		log_message('debug', 'Database Driver Class Initialized');
+		log_message('info', 'Database Driver Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -96,15 +380,17 @@
 	/**
 	 * Initialize Database Settings
 	 *
-	 * @access	private Called by the constructor
-	 * @param	mixed
-	 * @return	void
+	 * @return	bool
 	 */
-	function initialize()
+	public function initialize()
 	{
-		// If an existing connection resource is available
-		// there is no need to connect and select the database
-		if (is_resource($this->conn_id) OR is_object($this->conn_id))
+		/* If an established connection is available, then there's
+		 * no need to connect and select the database.
+		 *
+		 * Depending on the database driver, conn_id can be either
+		 * boolean TRUE, a resource or an object.
+		 */
+		if ($this->conn_id)
 		{
 			return TRUE;
 		}
@@ -112,9 +398,35 @@
 		// ----------------------------------------------------------------
 
 		// Connect to the database and set the connection ID
-		$this->conn_id = ($this->pconnect == FALSE) ? $this->db_connect() : $this->db_pconnect();
+		$this->conn_id = $this->db_connect($this->pconnect);
+
+		// No connection resource? Check if there is a failover else throw an error
+		if ( ! $this->conn_id)
+		{
+			// Check if there is a failover set
+			if ( ! empty($this->failover) && is_array($this->failover))
+			{
+				// Go over all the failovers
+				foreach ($this->failover as $failover)
+				{
+					// Replace the current settings with those of the failover
+					foreach ($failover as $key => $val)
+					{
+						$this->$key = $val;
+					}
+
+					// Try to connect
+					$this->conn_id = $this->db_connect($this->pconnect);
+
+					// If a connection is made break the foreach loop
+					if ($this->conn_id)
+					{
+						break;
+					}
+				}
+			}
 
-		// No connection resource?  Throw an error
+			// We still don't have a connection?
 		if ( ! $this->conn_id)
 		{
 			log_message('error', 'Unable to connect to the database');
@@ -123,37 +435,83 @@
 			{
 				$this->display_error('db_unable_to_connect');
 			}
+
 			return FALSE;
 		}
+		}
 
-		// ----------------------------------------------------------------
+		// Now we set the character set and that's all
+		return $this->db_set_charset($this->char_set);
+	}
 
-		// Select the DB... assuming a database name is specified in the config file
-		if ($this->database != '')
-		{
-			if ( ! $this->db_select())
-			{
-				log_message('error', 'Unable to select database: '.$this->database);
+	// --------------------------------------------------------------------
 
-				if ($this->db_debug)
+	/**
+	 * DB connect
+	 *
+	 * This is just a dummy method that all drivers will override.
+	 *
+	 * @return	mixed
+	 */
+	public function db_connect()
 				{
-					$this->display_error('db_unable_to_select', $this->database);
-				}
-				return FALSE;
+		return TRUE;
 			}
-			else
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Persistent database connection
+	 *
+	 * @return	mixed
+	 */
+	public function db_pconnect()
 			{
-				// We've selected the DB. Now we set the character set
-				if ( ! $this->db_set_charset($this->char_set, $this->dbcollat))
+		return $this->db_connect(TRUE);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Reconnect
+	 *
+	 * Keep / reestablish the db connection if no queries have been
+	 * sent for a length of time exceeding the server's idle timeout.
+	 *
+	 * This is just a dummy method to allow drivers without such
+	 * functionality to not declare it, while others will override it.
+	 *
+	 * @return	void
+	 */
+	public function reconnect()
 				{
-					return FALSE;
 				}
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * Select database
+	 *
+	 * This is just a dummy method to allow drivers without such
+	 * functionality to not declare it, while others will override it.
+	 *
+	 * @return	bool
+	 */
+	public function db_select()
+	{
 				return TRUE;
 			}
-		}
 
-		return TRUE;
+	// --------------------------------------------------------------------
+
+	/**
+	 * Last error
+	 *
+	 * @return	array
+	 */
+	public function error()
+	{
+		return array('code' => NULL, 'message' => NULL);
 	}
 
 	// --------------------------------------------------------------------
@@ -161,20 +519,18 @@
 	/**
 	 * Set client character set
 	 *
-	 * @access	public
-	 * @param	string
 	 * @param	string
-	 * @return	resource
+	 * @return	bool
 	 */
-	function db_set_charset($charset, $collation)
+	public function db_set_charset($charset)
 	{
-		if ( ! $this->_db_set_charset($this->char_set, $this->dbcollat))
+		if (method_exists($this, '_db_set_charset') && ! $this->_db_set_charset($charset))
 		{
-			log_message('error', 'Unable to set database connection charset: '.$this->char_set);
+			log_message('error', 'Unable to set database connection charset: '.$charset);
 
 			if ($this->db_debug)
 			{
-				$this->display_error('db_unable_to_set_charset', $this->char_set);
+				$this->display_error('db_unable_to_set_charset', $charset);
 			}
 
 			return FALSE;
@@ -188,10 +544,9 @@
 	/**
 	 * The name of the platform in use (mysql, mssql, etc...)
 	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function platform()
+	public function platform()
 	{
 		return $this->dbdriver;
 	}
@@ -199,36 +554,39 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Database Version Number.  Returns a string containing the
-	 * version of the database being used
+	 * Database version number
+	 *
+	 * Returns a string containing the version of the database being used.
+	 * Most drivers will override this method.
 	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function version()
+	public function version()
 	{
-		if (FALSE === ($sql = $this->_version()))
+		if (isset($this->data_cache['version']))
 		{
-			if ($this->db_debug)
+			return $this->data_cache['version'];
+		}
+
+		if (FALSE === ($sql = $this->_version()))
 			{
-				return $this->display_error('db_unsupported_function');
+			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
 			}
-			return FALSE;
+
+		$query = $this->query($sql)->row();
+		return $this->data_cache['version'] = $query->ver;
 		}
 
-		// Some DBs have functions that return the version, and don't run special
-		// SQL queries per se. In these instances, just return the result.
-		$driver_version_exceptions = array('oci8', 'sqlite', 'cubrid');
+	// --------------------------------------------------------------------
 
-		if (in_array($this->dbdriver, $driver_version_exceptions))
-		{
-			return $sql;
-		}
-		else
+	/**
+	 * Version number query string
+	 *
+	 * @return	string
+	 */
+	protected function _version()
 		{
-			$query = $this->query($sql);
-			return $query->row('ver');
-		}
+		return 'SELECT VERSION() AS ver';
 	}
 
 	// --------------------------------------------------------------------
@@ -242,27 +600,27 @@
 	 * FALSE upon failure, and if the $db_debug variable is set to TRUE
 	 * will raise an error.
 	 *
-	 * @access	public
-	 * @param	string	An SQL query string
-	 * @param	array	An array of binding data
+	 * @param	string	$sql
+	 * @param	array	$binds = FALSE		An array of binding data
+	 * @param	bool	$return_object = NULL
 	 * @return	mixed
 	 */
-	function query($sql, $binds = FALSE, $return_object = TRUE)
-	{
-		if ($sql == '')
+	public function query($sql, $binds = FALSE, $return_object = NULL)
 		{
-			if ($this->db_debug)
+		if ($sql === '')
 			{
 				log_message('error', 'Invalid query: '.$sql);
-				return $this->display_error('db_invalid_query');
+			return ($this->db_debug) ? $this->display_error('db_invalid_query') : FALSE;
 			}
-			return FALSE;
+		elseif ( ! is_bool($return_object))
+		{
+			$return_object = ! $this->is_write_type($sql);
 		}
 
 		// Verify table prefix and replace if necessary
-		if ( ($this->dbprefix != '' AND $this->swap_pre != '') AND ($this->dbprefix != $this->swap_pre) )
+		if ($this->dbprefix !== '' && $this->swap_pre !== '' && $this->dbprefix !== $this->swap_pre)
 		{
-			$sql = preg_replace("/(\W)".$this->swap_pre."(\S+?)/", "\\1".$this->dbprefix."\\2", $sql);
+			$sql = preg_replace('/(\W)'.$this->swap_pre.'(\S+?)/', '\\1'.$this->dbprefix.'\\2', $sql);
 		}
 
 		// Compile binds if needed
@@ -274,9 +632,7 @@
 		// Is query caching enabled?  If the query is a "read type"
 		// we will load the caching class and return the previously
 		// cached query if it exists
-		if ($this->cache_on == TRUE AND stristr($sql, 'SELECT'))
-		{
-			if ($this->_cache_init())
+		if ($this->cache_on === TRUE && $return_object === TRUE && $this->_cache_init())
 			{
 				$this->load_rdriver();
 				if (FALSE !== ($cache = $this->CACHE->read($sql)))
@@ -284,74 +640,77 @@
 					return $cache;
 				}
 			}
-		}
 
 		// Save the  query for debugging
-		if ($this->save_queries == TRUE)
+		if ($this->save_queries === TRUE)
 		{
 			$this->queries[] = $sql;
 		}
 
 		// Start the Query Timer
-		$time_start = list($sm, $ss) = explode(' ', microtime());
+		$time_start = microtime(TRUE);
 
 		// Run the Query
 		if (FALSE === ($this->result_id = $this->simple_query($sql)))
 		{
-			if ($this->save_queries == TRUE)
+			if ($this->save_queries === TRUE)
 			{
 				$this->query_times[] = 0;
 			}
 
 			// This will trigger a rollback if transactions are being used
+			if ($this->_trans_depth !== 0)
+			{
 			$this->_trans_status = FALSE;
+			}
+
+			// Grab the error now, as we might run some additional queries before displaying the error
+			$error = $this->error();
+
+			// Log errors
+			log_message('error', 'Query error: '.$error['message'].' - Invalid query: '.$sql);
 
 			if ($this->db_debug)
 			{
-				// grab the error number and message now, as we might run some
-				// additional queries before displaying the error
-				$error_no = $this->_error_number();
-				$error_msg = $this->_error_message();
-
 				// We call this function in order to roll-back queries
 				// if transactions are enabled.  If we don't call this here
 				// the error message will trigger an exit, causing the
 				// transactions to remain in limbo.
+				while ($this->_trans_depth !== 0)
+				{
+					$trans_depth = $this->_trans_depth;
 				$this->trans_complete();
+					if ($trans_depth === $this->_trans_depth)
+					{
+						log_message('error', 'Database: Failure during an automated transaction commit/rollback!');
+						break;
+					}
+				}
 
-				// Log and display errors
-				log_message('error', 'Query error: '.$error_msg);
-				return $this->display_error(
-										array(
-												'Error Number: '.$error_no,
-												$error_msg,
-												$sql
-											)
-										);
+				// Display errors
+				return $this->display_error(array('Error Number: '.$error['code'], $error['message'], $sql));
 			}
 
 			return FALSE;
 		}
 
 		// Stop and aggregate the query time results
-		$time_end = list($em, $es) = explode(' ', microtime());
-		$this->benchmark += ($em + $es) - ($sm + $ss);
+		$time_end = microtime(TRUE);
+		$this->benchmark += $time_end - $time_start;
 
-		if ($this->save_queries == TRUE)
+		if ($this->save_queries === TRUE)
 		{
-			$this->query_times[] = ($em + $es) - ($sm + $ss);
+			$this->query_times[] = $time_end - $time_start;
 		}
 
 		// Increment the query counter
 		$this->query_count++;
 
-		// Was the query a "write" type?
-		// If so we'll simply return true
-		if ($this->is_write_type($sql) === TRUE)
-		{
-			// If caching is enabled we'll auto-cleanup any
-			// existing files related to this particular URI
-			if ($this->cache_on == TRUE AND $this->cache_autodel == TRUE AND $this->_cache_init())
+		// Will we have a result object instantiated? If not - we'll simply return TRUE
+		if ($return_object !== TRUE)
+		{
+			// If caching is enabled we'll auto-cleanup any existing files related to this particular URI
+			if ($this->cache_on === TRUE && $this->cache_autodel === TRUE && $this->_cache_init())
 			{
 				$this->CACHE->delete();
 			}
@@ -359,35 +718,13 @@
 			return TRUE;
 		}
 
-		// Return TRUE if we don't need to create a result object
-		// Currently only the Oracle driver uses this when stored
-		// procedures are used
-		if ($return_object !== TRUE)
-		{
-			return TRUE;
-		}
-
 		// Load and instantiate the result driver
-
 		$driver			= $this->load_rdriver();
-		$RES			= new $driver();
-		$RES->conn_id	= $this->conn_id;
-		$RES->result_id	= $this->result_id;
-
-		if ($this->dbdriver == 'oci8')
-		{
-			$RES->stmt_id		= $this->stmt_id;
-			$RES->curs_id		= NULL;
-			$RES->limit_used	= $this->limit_used;
-			$this->stmt_id		= FALSE;
-		}
-
-		// oci8 vars must be set before calling this
-		$RES->num_rows	= $RES->num_rows();
+		$RES		= new $driver($this);
 
 		// Is query caching enabled?  If so, we'll serialize the
 		// result object and save it to a cache file.
-		if ($this->cache_on == TRUE AND $this->_cache_init())
+		if ($this->cache_on === TRUE && $this->_cache_init())
 		{
 			// We'll create a new instance of the result object
 			// only without the platform specific driver since
@@ -395,10 +732,10 @@
 			// resource ID won't be any good once we've cached the
 			// result object, so we'll have to compile the data
 			// and save it)
-			$CR = new CI_DB_result();
-			$CR->num_rows		= $RES->num_rows();
+			$CR = new CI_DB_result($this);
 			$CR->result_object	= $RES->result_object();
 			$CR->result_array	= $RES->result_array();
+			$CR->num_rows		= $RES->num_rows();
 
 			// Reset these since cached objects can not utilize resource IDs.
 			$CR->conn_id		= NULL;
@@ -415,17 +752,16 @@
 	/**
 	 * Load the result drivers
 	 *
-	 * @access	public
 	 * @return	string	the name of the result class
 	 */
-	function load_rdriver()
+	public function load_rdriver()
 	{
 		$driver = 'CI_DB_'.$this->dbdriver.'_result';
 
-		if ( ! class_exists($driver))
+		if ( ! class_exists($driver, FALSE))
 		{
-			include_once(BASEPATH.'database/DB_result.php');
-			include_once(BASEPATH.'database/drivers/'.$this->dbdriver.'/'.$this->dbdriver.'_result.php');
+			require_once(BASEPATH.'database/DB_result.php');
+			require_once(BASEPATH.'database/drivers/'.$this->dbdriver.'/'.$this->dbdriver.'_result.php');
 		}
 
 		return $driver;
@@ -439,15 +775,17 @@
 	 * we only use it when running transaction commands since they do
 	 * not require all the features of the main query() function.
 	 *
-	 * @access	public
 	 * @param	string	the sql query
 	 * @return	mixed
 	 */
-	function simple_query($sql)
+	public function simple_query($sql)
 	{
 		if ( ! $this->conn_id)
 		{
-			$this->initialize();
+			if ( ! $this->initialize())
+			{
+				return FALSE;
+			}
 		}
 
 		return $this->_execute($sql);
@@ -459,10 +797,9 @@
 	 * Disable Transactions
 	 * This permits transactions to be disabled at run-time.
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function trans_off()
+	public function trans_off()
 	{
 		$this->trans_enabled = FALSE;
 	}
@@ -471,15 +808,18 @@
 
 	/**
 	 * Enable/disable Transaction Strict Mode
+	 *
 	 * When strict mode is enabled, if you are running multiple groups of
-	 * transactions, if one group fails all groups will be rolled back.
-	 * If strict mode is disabled, each group is treated autonomously, meaning
-	 * a failure of one group will not affect any others
+	 * transactions, if one group fails all subsequent groups will be
+	 * rolled back.
 	 *
-	 * @access	public
+	 * If strict mode is disabled, each group is treated autonomously,
+	 * meaning a failure of one group will not affect any others
+	 *
+	 * @param	bool	$mode = TRUE
 	 * @return	void
 	 */
-	function trans_strict($mode = TRUE)
+	public function trans_strict($mode = TRUE)
 	{
 		$this->trans_strict = is_bool($mode) ? $mode : TRUE;
 	}
@@ -489,24 +829,17 @@
 	/**
 	 * Start Transaction
 	 *
-	 * @access	public
-	 * @return	void
+	 * @param	bool	$test_mode = FALSE
+	 * @return	bool
 	 */
-	function trans_start($test_mode = FALSE)
+	public function trans_start($test_mode = FALSE)
 	{
 		if ( ! $this->trans_enabled)
 		{
 			return FALSE;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			$this->_trans_depth += 1;
-			return;
-		}
-
-		$this->trans_begin($test_mode);
+		return $this->trans_begin($test_mode);
 	}
 
 	// --------------------------------------------------------------------
@@ -514,31 +847,23 @@
 	/**
 	 * Complete Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_complete()
+	public function trans_complete()
 	{
 		if ( ! $this->trans_enabled)
 		{
 			return FALSE;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 1)
-		{
-			$this->_trans_depth -= 1;
-			return TRUE;
-		}
-
 		// The query() function will set this flag to FALSE in the event that a query failed
-		if ($this->_trans_status === FALSE)
+		if ($this->_trans_status === FALSE OR $this->_trans_failure === TRUE)
 		{
 			$this->trans_rollback();
 
 			// If we are NOT running in strict mode, we will reset
-			// the _trans_status flag so that subsequent groups of transactions
-			// will be permitted.
+			// the _trans_status flag so that subsequent groups of
+			// transactions will be permitted.
 			if ($this->trans_strict === FALSE)
 			{
 				$this->_trans_status = TRUE;
@@ -548,8 +873,7 @@
 			return FALSE;
 		}
 
-		$this->trans_commit();
-		return TRUE;
+		return $this->trans_commit();
 	}
 
 	// --------------------------------------------------------------------
@@ -557,10 +881,9 @@
 	/**
 	 * Lets you retrieve the transaction flag to determine if it has failed
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_status()
+	public function trans_status()
 	{
 		return $this->_trans_status;
 	}
@@ -568,44 +891,147 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * Begin Transaction
+	 *
+	 * @param	bool	$test_mode
+	 * @return	bool
+	 */
+	public function trans_begin($test_mode = FALSE)
+	{
+		if ( ! $this->trans_enabled)
+		{
+			return FALSE;
+		}
+		// When transactions are nested we only begin/commit/rollback the outermost ones
+		elseif ($this->_trans_depth > 0)
+		{
+			$this->_trans_depth++;
+			return TRUE;
+		}
+
+		// Reset the transaction failure flag.
+		// If the $test_mode flag is set to TRUE transactions will be rolled back
+		// even if the queries produce a successful result.
+		$this->_trans_failure = ($test_mode === TRUE);
+
+		if ($this->_trans_begin())
+		{
+			$this->_trans_depth++;
+			return TRUE;
+		}
+
+		return FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Commit Transaction
+	 *
+	 * @return	bool
+	 */
+	public function trans_commit()
+	{
+		if ( ! $this->trans_enabled OR $this->_trans_depth === 0)
+		{
+			return FALSE;
+		}
+		// When transactions are nested we only begin/commit/rollback the outermost ones
+		elseif ($this->_trans_depth > 1 OR $this->_trans_commit())
+		{
+			$this->_trans_depth--;
+			return TRUE;
+		}
+
+		return FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Rollback Transaction
+	 *
+	 * @return	bool
+	 */
+	public function trans_rollback()
+	{
+		if ( ! $this->trans_enabled OR $this->_trans_depth === 0)
+		{
+			return FALSE;
+		}
+		// When transactions are nested we only begin/commit/rollback the outermost ones
+		elseif ($this->_trans_depth > 1 OR $this->_trans_rollback())
+		{
+			$this->_trans_depth--;
+			return TRUE;
+		}
+
+		return FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Compile Bindings
 	 *
-	 * @access	public
 	 * @param	string	the sql statement
 	 * @param	array	an array of bind data
 	 * @return	string
 	 */
-	function compile_binds($sql, $binds)
+	public function compile_binds($sql, $binds)
 	{
-		if (strpos($sql, $this->bind_marker) === FALSE)
+		if (empty($binds) OR empty($this->bind_marker) OR strpos($sql, $this->bind_marker) === FALSE)
 		{
 			return $sql;
 		}
-
-		if ( ! is_array($binds))
+		elseif ( ! is_array($binds))
 		{
 			$binds = array($binds);
+			$bind_count = 1;
+		}
+		else
+		{
+			// Make sure we're using numeric keys
+			$binds = array_values($binds);
+			$bind_count = count($binds);
 		}
 
-		// Get the sql segments around the bind markers
-		$segments = explode($this->bind_marker, $sql);
+		// We'll need the marker length later
+		$ml = strlen($this->bind_marker);
+
+		// Make sure not to replace a chunk inside a string that happens to match the bind marker
+		if ($c = preg_match_all("/'[^']*'/i", $sql, $matches))
+		{
+			$c = preg_match_all('/'.preg_quote($this->bind_marker, '/').'/i',
+				str_replace($matches[0],
+					str_replace($this->bind_marker, str_repeat(' ', $ml), $matches[0]),
+					$sql, $c),
+				$matches, PREG_OFFSET_CAPTURE);
 
-		// The count of bind should be 1 less then the count of segments
-		// If there are more bind arguments trim it down
-		if (count($binds) >= count($segments)) {
-			$binds = array_slice($binds, 0, count($segments)-1);
+			// Bind values' count must match the count of markers in the query
+			if ($bind_count !== $c)
+			{
+				return $sql;
+			}
+		}
+		elseif (($c = preg_match_all('/'.preg_quote($this->bind_marker, '/').'/i', $sql, $matches, PREG_OFFSET_CAPTURE)) !== $bind_count)
+		{
+			return $sql;
 		}
 
-		// Construct the binded query
-		$result = $segments[0];
-		$i = 0;
-		foreach ($binds as $bind)
+		do
+		{
+			$c--;
+			$escaped_value = $this->escape($binds[$c]);
+			if (is_array($escaped_value))
 		{
-			$result .= $this->escape($bind);
-			$result .= $segments[++$i];
+				$escaped_value = '('.implode(',', $escaped_value).')';
 		}
+			$sql = substr_replace($sql, $escaped_value, $matches[0][$c][1], $ml);
+		}
+		while ($c !== 0);
 
-		return $result;
+		return $sql;
 	}
 
 	// --------------------------------------------------------------------
@@ -613,17 +1039,12 @@
 	/**
 	 * Determines if a query is a "write" type.
 	 *
-	 * @access	public
 	 * @param	string	An SQL query string
-	 * @return	boolean
+	 * @return	bool
 	 */
-	function is_write_type($sql)
-	{
-		if ( ! preg_match('/^\s*"?(SET|INSERT|UPDATE|DELETE|REPLACE|CREATE|DROP|TRUNCATE|LOAD DATA|COPY|ALTER|GRANT|REVOKE|LOCK|UNLOCK)\s+/i', $sql))
+	public function is_write_type($sql)
 		{
-			return FALSE;
-		}
-		return TRUE;
+		return (bool) preg_match('/^\s*"?(SET|INSERT|UPDATE|DELETE|REPLACE|CREATE|DROP|TRUNCATE|LOAD|COPY|ALTER|RENAME|GRANT|REVOKE|LOCK|UNLOCK|REINDEX)\s/i', $sql);
 	}
 
 	// --------------------------------------------------------------------
@@ -631,11 +1052,10 @@
 	/**
 	 * Calculate the aggregate query elapsed time
 	 *
-	 * @access	public
-	 * @param	integer	The number of decimal places
-	 * @return	integer
+	 * @param	int	The number of decimal places
+	 * @return	string
 	 */
-	function elapsed_time($decimals = 6)
+	public function elapsed_time($decimals = 6)
 	{
 		return number_format($this->benchmark, $decimals);
 	}
@@ -645,10 +1065,9 @@
 	/**
 	 * Returns the total number of queries
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function total_queries()
+	public function total_queries()
 	{
 		return $this->query_count;
 	}
@@ -658,10 +1077,9 @@
 	/**
 	 * Returns the last query that was executed
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	string
 	 */
-	function last_query()
+	public function last_query()
 	{
 		return end($this->queries);
 	}
@@ -674,23 +1092,63 @@
 	 * Escapes data based on type
 	 * Sets boolean and null types
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	mixed
 	 */
-	function escape($str)
+	public function escape($str)
 	{
-		if (is_string($str))
+		if (is_array($str))
+		{
+			$str = array_map(array(&$this, 'escape'), $str);
+			return $str;
+		}
+		elseif (is_string($str) OR (is_object($str) && method_exists($str, '__toString')))
 		{
-			$str = "'".$this->escape_str($str)."'";
+			return "'".$this->escape_str($str)."'";
 		}
 		elseif (is_bool($str))
 		{
-			$str = ($str === FALSE) ? 0 : 1;
+			return ($str === FALSE) ? 0 : 1;
+		}
+		elseif ($str === NULL)
+		{
+			return 'NULL';
+		}
+
+		return $str;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Escape String
+	 *
+	 * @param	string|string[]	$str	Input string
+	 * @param	bool	$like	Whether or not the string will be used in a LIKE condition
+	 * @return	string
+	 */
+	public function escape_str($str, $like = FALSE)
+	{
+		if (is_array($str))
+		{
+			foreach ($str as $key => $val)
+			{
+				$str[$key] = $this->escape_str($val, $like);
+			}
+
+			return $str;
 		}
-		elseif (is_null($str))
+
+		$str = $this->_escape_str($str);
+
+		// escape LIKE condition wildcards
+		if ($like === TRUE)
 		{
-			$str = 'NULL';
+			return str_replace(
+				array($this->_like_escape_chr, '%', '_'),
+				array($this->_like_escape_chr.$this->_like_escape_chr, $this->_like_escape_chr.'%', $this->_like_escape_chr.'_'),
+				$str
+			);
 		}
 
 		return $str;
@@ -704,11 +1162,10 @@
 	 * Calls the individual driver for platform
 	 * specific escaping for LIKE conditions
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string|string[]
 	 * @return	mixed
 	 */
-	function escape_like_str($str)
+	public function escape_like_str($str)
 	{
 		return $this->escape_str($str, TRUE);
 	}
@@ -716,25 +1173,60 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * Platform-dependant string escape
+	 *
+	 * @param	string
+	 * @return	string
+	 */
+	protected function _escape_str($str)
+	{
+		return str_replace("'", "''", remove_invisible_characters($str));
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Primary
 	 *
 	 * Retrieves the primary key.  It assumes that the row in the first
 	 * position is the primary key
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table	Table name
 	 * @return	string
 	 */
-	function primary($table = '')
+	public function primary($table)
 	{
 		$fields = $this->list_fields($table);
+		return is_array($fields) ? current($fields) : FALSE;
+	}
 
-		if ( ! is_array($fields))
+	// --------------------------------------------------------------------
+
+	/**
+	 * "Count All" query
+	 *
+	 * Generates a platform-specific query string that counts all records in
+	 * the specified database
+	 *
+	 * @param	string
+	 * @return	int
+	 */
+	public function count_all($table = '')
 		{
-			return FALSE;
+		if ($table === '')
+		{
+			return 0;
+		}
+
+		$query = $this->query($this->_count_string.$this->escape_identifiers('numrows').' FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE));
+		if ($query->num_rows() === 0)
+		{
+			return 0;
 		}
 
-		return current($fields);
+		$query = $query->row();
+		$this->_reset_select();
+		return (int) $query->numrows;
 	}
 
 	// --------------------------------------------------------------------
@@ -742,10 +1234,10 @@
 	/**
 	 * Returns an array of table names
 	 *
-	 * @access	public
+	 * @param	string	$constrain_by_prefix = FALSE
 	 * @return	array
 	 */
-	function list_tables($constrain_by_prefix = FALSE)
+	public function list_tables($constrain_by_prefix = FALSE)
 	{
 		// Is there a cached result?
 		if (isset($this->data_cache['table_names']))
@@ -755,32 +1247,40 @@
 
 		if (FALSE === ($sql = $this->_list_tables($constrain_by_prefix)))
 		{
-			if ($this->db_debug)
-			{
-				return $this->display_error('db_unsupported_function');
-			}
-			return FALSE;
+			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
 		}
 
-		$retval = array();
+		$this->data_cache['table_names'] = array();
 		$query = $this->query($sql);
 
-		if ($query->num_rows() > 0)
-		{
 			foreach ($query->result_array() as $row)
 			{
+			// Do we know from which column to get the table name?
+			if ( ! isset($key))
+			{
 				if (isset($row['TABLE_NAME']))
 				{
-					$retval[] = $row['TABLE_NAME'];
+					$key = 'table_name';
+				}
+				elseif (isset($row['TABLE_NAME']))
+				{
+					$key = 'TABLE_NAME';
 				}
 				else
 				{
-					$retval[] = array_shift($row);
+					/* We have no other choice but to just get the first element's key.
+					 * Due to array_shift() accepting its argument by reference, if
+					 * E_STRICT is on, this would trigger a warning. So we'll have to
+					 * assign it first.
+					 */
+					$key = array_keys($row);
+					$key = array_shift($key);
 				}
 			}
+
+			$this->data_cache['table_names'][] = $row[$key];
 		}
 
-		$this->data_cache['table_names'] = $retval;
 		return $this->data_cache['table_names'];
 	}
 
@@ -788,24 +1288,24 @@
 
 	/**
 	 * Determine if a particular table exists
-	 * @access	public
-	 * @return	boolean
+	 *
+	 * @param	string	$table_name
+	 * @return	bool
 	 */
-	function table_exists($table_name)
+	public function table_exists($table_name)
 	{
-		return ( ! in_array($this->_protect_identifiers($table_name, TRUE, FALSE, FALSE), $this->list_tables())) ? FALSE : TRUE;
+		return in_array($this->protect_identifiers($table_name, TRUE, FALSE, FALSE), $this->list_tables());
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Fetch MySQL Field Names
+	 * Fetch Field Names
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table	Table name
 	 * @return	array
 	 */
-	function list_fields($table = '')
+	public function list_fields($table)
 	{
 		// Is there a cached result?
 		if (isset($this->data_cache['field_names'][$table]))
@@ -813,40 +1313,37 @@
 			return $this->data_cache['field_names'][$table];
 		}
 
-		if ($table == '')
-		{
-			if ($this->db_debug)
-			{
-				return $this->display_error('db_field_param_missing');
-			}
-			return FALSE;
-		}
-
 		if (FALSE === ($sql = $this->_list_columns($table)))
 		{
-			if ($this->db_debug)
-			{
-				return $this->display_error('db_unsupported_function');
-			}
-			return FALSE;
+			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
 		}
 
 		$query = $this->query($sql);
+		$this->data_cache['field_names'][$table] = array();
 
-		$retval = array();
 		foreach ($query->result_array() as $row)
 		{
+			// Do we know from where to get the column's name?
+			if ( ! isset($key))
+			{
 			if (isset($row['COLUMN_NAME']))
 			{
-				$retval[] = $row['COLUMN_NAME'];
+					$key = 'column_name';
+				}
+				elseif (isset($row['COLUMN_NAME']))
+				{
+					$key = 'COLUMN_NAME';
 			}
 			else
 			{
-				$retval[] = current($row);
+					// We have no other choice but to just get the first element's key.
+					$key = key($row);
+				}
 			}
+
+			$this->data_cache['field_names'][$table][] = $row[$key];
 		}
 
-		$this->data_cache['field_names'][$table] = $retval;
 		return $this->data_cache['field_names'][$table];
 	}
 
@@ -854,14 +1351,14 @@
 
 	/**
 	 * Determine if a particular field exists
-	 * @access	public
+	 *
 	 * @param	string
 	 * @param	string
-	 * @return	boolean
+	 * @return	bool
 	 */
-	function field_exists($field_name, $table_name)
+	public function field_exists($field_name, $table_name)
 	{
-		return ( ! in_array($field_name, $this->list_fields($table_name))) ? FALSE : TRUE;
+		return in_array($field_name, $this->list_fields($table_name));
 	}
 
 	// --------------------------------------------------------------------
@@ -869,24 +1366,75 @@
 	/**
 	 * Returns an object with field data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
+	 * @param	string	$table	the table name
+	 * @return	array
+	 */
+	public function field_data($table)
+	{
+		$query = $this->query($this->_field_data($this->protect_identifiers($table, TRUE, NULL, FALSE)));
+		return ($query) ? $query->field_data() : FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Escape the SQL Identifiers
+	 *
+	 * This function escapes column and table names
+	 *
+	 * @param	mixed
+	 * @return	mixed
 	 */
-	function field_data($table = '')
+	public function escape_identifiers($item)
 	{
-		if ($table == '')
+		if ($this->_escape_char === '' OR empty($item) OR in_array($item, $this->_reserved_identifiers))
 		{
-			if ($this->db_debug)
+			return $item;
+		}
+		elseif (is_array($item))
 			{
-				return $this->display_error('db_field_param_missing');
+			foreach ($item as $key => $value)
+			{
+				$item[$key] = $this->escape_identifiers($value);
+			}
+
+			return $item;
+		}
+		// Avoid breaking functions and literal values inside queries
+		elseif (ctype_digit($item) OR $item[0] === "'" OR ($this->_escape_char !== '"' && $item[0] === '"') OR strpos($item, '(') !== FALSE)
+		{
+			return $item;
+		}
+
+		static $preg_ec = array();
+
+		if (empty($preg_ec))
+		{
+			if (is_array($this->_escape_char))
+			{
+				$preg_ec = array(
+					preg_quote($this->_escape_char[0], '/'),
+					preg_quote($this->_escape_char[1], '/'),
+					$this->_escape_char[0],
+					$this->_escape_char[1]
+				);
+			}
+			else
+			{
+				$preg_ec[0] = $preg_ec[1] = preg_quote($this->_escape_char, '/');
+				$preg_ec[2] = $preg_ec[3] = $this->_escape_char;
 			}
-			return FALSE;
 		}
 
-		$query = $this->query($this->_field_data($this->_protect_identifiers($table, TRUE, NULL, FALSE)));
+		foreach ($this->_reserved_identifiers as $id)
+		{
+			if (strpos($item, '.'.$id) !== FALSE)
+			{
+				return preg_replace('/'.$preg_ec[0].'?([^'.$preg_ec[1].'\.]+)'.$preg_ec[1].'?\./i', $preg_ec[2].'$1'.$preg_ec[3].'.', $item);
+			}
+		}
 
-		return $query->field_data();
+		return preg_replace('/'.$preg_ec[0].'?([^'.$preg_ec[1].'\.]+)'.$preg_ec[1].'?(\.)?/i', $preg_ec[2].'$1'.$preg_ec[3].'$2', $item);
 	}
 
 	// --------------------------------------------------------------------
@@ -894,23 +1442,38 @@
 	/**
 	 * Generate an insert string
 	 *
-	 * @access	public
 	 * @param	string	the table upon which the query will be performed
 	 * @param	array	an associative array data of key/values
 	 * @return	string
 	 */
-	function insert_string($table, $data)
+	public function insert_string($table, $data)
 	{
-		$fields = array();
-		$values = array();
+		$fields = $values = array();
 
 		foreach ($data as $key => $val)
 		{
-			$fields[] = $this->_escape_identifiers($key);
+			$fields[] = $this->escape_identifiers($key);
 			$values[] = $this->escape($val);
 		}
 
-		return $this->_insert($this->_protect_identifiers($table, TRUE, NULL, FALSE), $fields, $values);
+		return $this->_insert($this->protect_identifiers($table, TRUE, NULL, FALSE), $fields, $values);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Insert statement
+	 *
+	 * Generates a platform-specific insert string from the supplied data
+	 *
+	 * @param	string	the table name
+	 * @param	array	the insert keys
+	 * @param	array	the insert values
+	 * @return	string
+	 */
+	protected function _insert($table, $keys, $values)
+	{
+		return 'INSERT INTO '.$table.' ('.implode(', ', $keys).') VALUES ('.implode(', ', $values).')';
 	}
 
 	// --------------------------------------------------------------------
@@ -918,71 +1481,104 @@
 	/**
 	 * Generate an update string
 	 *
-	 * @access	public
 	 * @param	string	the table upon which the query will be performed
 	 * @param	array	an associative array data of key/values
 	 * @param	mixed	the "where" statement
 	 * @return	string
 	 */
-	function update_string($table, $data, $where)
+	public function update_string($table, $data, $where)
 	{
-		if ($where == '')
+		if (empty($where))
 		{
 			return false;
 		}
 
+		$this->where($where);
+
 		$fields = array();
 		foreach ($data as $key => $val)
 		{
-			$fields[$this->_protect_identifiers($key)] = $this->escape($val);
+			$fields[$this->protect_identifiers($key)] = $this->escape($val);
 		}
 
-		if ( ! is_array($where))
-		{
-			$dest = array($where);
+		$sql = $this->_update($this->protect_identifiers($table, TRUE, NULL, FALSE), $fields);
+		$this->_reset_write();
+		return $sql;
 		}
-		else
-		{
-			$dest = array();
-			foreach ($where as $key => $val)
-			{
-				$prefix = (count($dest) == 0) ? '' : ' AND ';
 
-				if ($val !== '')
+	// --------------------------------------------------------------------
+
+	/**
+	 * Update statement
+	 *
+	 * Generates a platform-specific update string from the supplied data
+	 *
+	 * @param	string	the table name
+	 * @param	array	the update data
+	 * @return	string
+	 */
+	protected function _update($table, $values)
 				{
-					if ( ! $this->_has_operator($key))
+		foreach ($values as $key => $val)
 					{
-						$key .= ' =';
+			$valstr[] = $key.' = '.$val;
 					}
 
-					$val = ' '.$this->escape($val);
+		return 'UPDATE '.$table.' SET '.implode(', ', $valstr)
+			.$this->_compile_wh('qb_where')
+			.$this->_compile_order_by()
+			.($this->qb_limit ? ' LIMIT '.$this->qb_limit : '');
 				}
 
-				$dest[] = $prefix.$key.$val;
-			}
-		}
+	// --------------------------------------------------------------------
 
-		return $this->_update($this->_protect_identifiers($table, TRUE, NULL, FALSE), $fields, $dest);
+	/**
+	 * Tests whether the string has an SQL operator
+	 *
+	 * @param	string
+	 * @return	bool
+	 */
+	protected function _has_operator($str)
+	{
+		return (bool) preg_match('/(<|>|!|=|\sIS NULL|\sIS NOT NULL|\sEXISTS|\sBETWEEN|\sLIKE|\sIN\s*\(|\s)/i', trim($str));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Tests whether the string has an SQL operator
+	 * Returns the SQL string operator
 	 *
-	 * @access	private
 	 * @param	string
-	 * @return	bool
+	 * @return	string
 	 */
-	function _has_operator($str)
+	protected function _get_operator($str)
 	{
-		$str = trim($str);
-		if ( ! preg_match("/(\s|<|>|!|=|is null|is not null)/i", $str))
+		static $_operators;
+
+		if (empty($_operators))
 		{
-			return FALSE;
+			$_les = ($this->_like_escape_str !== '')
+				? '\s+'.preg_quote(trim(sprintf($this->_like_escape_str, $this->_like_escape_chr)), '/')
+				: '';
+			$_operators = array(
+				'\s*(?:<|>|!)?=\s*',             // =, <=, >=, !=
+				'\s*<>?\s*',                     // <, <>
+				'\s*>\s*',                       // >
+				'\s+IS NULL',                    // IS NULL
+				'\s+IS NOT NULL',                // IS NOT NULL
+				'\s+EXISTS\s*\(.*\)',        // EXISTS(sql)
+				'\s+NOT EXISTS\s*\(.*\)',    // NOT EXISTS(sql)
+				'\s+BETWEEN\s+',                 // BETWEEN value AND value
+				'\s+IN\s*\(.*\)',            // IN(list)
+				'\s+NOT IN\s*\(.*\)',        // NOT IN (list)
+				'\s+LIKE\s+\S.*('.$_les.')?',    // LIKE 'expr'[ ESCAPE '%s']
+				'\s+NOT LIKE\s+\S.*('.$_les.')?' // NOT LIKE 'expr'[ ESCAPE '%s']
+			);
+
 		}
 
-		return TRUE;
+		return preg_match('/'.implode('|', $_operators).'/i', $str, $match)
+			? $match[0] : FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -990,14 +1586,12 @@
 	/**
 	 * Enables a native PHP function to be run, using a platform agnostic wrapper.
 	 *
-	 * @access	public
-	 * @param	string	the function name
-	 * @param	mixed	any parameters needed by the function
+	 * @param	string	$function	Function name
 	 * @return	mixed
 	 */
-	function call_function($function)
+	public function call_function($function)
 	{
-		$driver = ($this->dbdriver == 'postgre') ? 'pg_' : $this->dbdriver.'_';
+		$driver = ($this->dbdriver === 'postgre') ? 'pg_' : $this->dbdriver.'_';
 
 		if (FALSE === strpos($driver, $function))
 		{
@@ -1006,24 +1600,12 @@
 
 		if ( ! function_exists($function))
 		{
-			if ($this->db_debug)
-			{
-				return $this->display_error('db_unsupported_function');
-			}
-			return FALSE;
-		}
-		else
-		{
-			$args = (func_num_args() > 1) ? array_splice(func_get_args(), 1) : null;
-			if (is_null($args))
-			{
-				return call_user_func($function);
-			}
-			else
-			{
-				return call_user_func_array($function, $args);
-			}
+			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
 		}
+
+		return (func_num_args() > 1)
+			? call_user_func_array($function, array_slice(func_get_args(), 1))
+			: call_user_func($function);
 	}
 
 	// --------------------------------------------------------------------
@@ -1031,11 +1613,10 @@
 	/**
 	 * Set Cache Directory Path
 	 *
-	 * @access	public
 	 * @param	string	the path to the cache directory
 	 * @return	void
 	 */
-	function cache_set_path($path = '')
+	public function cache_set_path($path = '')
 	{
 		$this->cachedir = $path;
 	}
@@ -1045,13 +1626,11 @@
 	/**
 	 * Enable Query Caching
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	bool	cache_on value
 	 */
-	function cache_on()
+	public function cache_on()
 	{
-		$this->cache_on = TRUE;
-		return TRUE;
+		return $this->cache_on = TRUE;
 	}
 
 	// --------------------------------------------------------------------
@@ -1059,16 +1638,13 @@
 	/**
 	 * Disable Query Caching
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	bool	cache_on value
 	 */
-	function cache_off()
+	public function cache_off()
 	{
-		$this->cache_on = FALSE;
-		return FALSE;
+		return $this->cache_on = FALSE;
 	}
 
-
 	// --------------------------------------------------------------------
 
 	/**
@@ -1074,16 +1650,15 @@
 	/**
 	 * Delete the cache files associated with a particular URI
 	 *
-	 * @access	public
-	 * @return	void
+	 * @param	string	$segment_one = ''
+	 * @param	string	$segment_two = ''
+	 * @return	bool
 	 */
-	function cache_delete($segment_one = '', $segment_two = '')
-	{
-		if ( ! $this->_cache_init())
+	public function cache_delete($segment_one = '', $segment_two = '')
 		{
-			return FALSE;
-		}
-		return $this->CACHE->delete($segment_one, $segment_two);
+		return $this->_cache_init()
+			? $this->CACHE->delete($segment_one, $segment_two)
+			: FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -1091,17 +1666,13 @@
 	/**
 	 * Delete All cache files
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	bool
 	 */
-	function cache_delete_all()
+	public function cache_delete_all()
 	{
-		if ( ! $this->_cache_init())
-		{
-			return FALSE;
-		}
-
-		return $this->CACHE->delete_all();
+		return $this->_cache_init()
+			? $this->CACHE->delete_all()
+			: FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -1109,22 +1680,17 @@
 	/**
 	 * Initialize the Cache Class
 	 *
-	 * @access	private
-	 * @return	void
+	 * @return	bool
 	 */
-	function _cache_init()
+	protected function _cache_init()
 	{
-		if (is_object($this->CACHE) AND class_exists('CI_DB_Cache'))
+		if ( ! class_exists('CI_DB_Cache', FALSE))
 		{
-			return TRUE;
+			require_once(BASEPATH.'database/DB_cache.php');
 		}
-
-		if ( ! class_exists('CI_DB_Cache'))
+		elseif (is_object($this->CACHE))
 		{
-			if ( ! @include(BASEPATH.'database/DB_cache.php'))
-			{
-				return $this->cache_off();
-			}
+			return TRUE;
 		}
 
 		$this->CACHE = new CI_DB_Cache($this); // pass db object to support multiple db connections and returned db objects
@@ -1136,15 +1702,28 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function close()
+	public function close()
 	{
-		if (is_resource($this->conn_id) OR is_object($this->conn_id))
+		if ($this->conn_id)
 		{
-			$this->_close($this->conn_id);
+			$this->_close();
+			$this->conn_id = FALSE;
 		}
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Close DB Connection
+	 *
+	 * This method would be overridden by most of the drivers.
+	 *
+	 * @return	void
+	 */
+	protected function _close()
+	{
 		$this->conn_id = FALSE;
 	}
 
@@ -1153,26 +1732,25 @@
 	/**
 	 * Display an error message
 	 *
-	 * @access	public
 	 * @param	string	the error message
 	 * @param	string	any "swap" values
-	 * @param	boolean	whether to localize the message
-	 * @return	string	sends the application/error_db.php template
+	 * @param	bool	whether to localize the message
+	 * @return	string	sends the application/views/errors/error_db.php template
 	 */
-	function display_error($error = '', $swap = '', $native = FALSE)
+	public function display_error($error = '', $swap = '', $native = FALSE)
 	{
 		$LANG =& load_class('Lang', 'core');
 		$LANG->load('db');
 
 		$heading = $LANG->line('db_error_heading');
 
-		if ($native == TRUE)
+		if ($native === TRUE)
 		{
-			$message = $error;
+			$message = (array) $error;
 		}
 		else
 		{
-			$message = ( ! is_array($error)) ? array(str_replace('%s', $swap, $LANG->line($error))) : $error;
+			$message = is_array($error) ? $error : array(str_replace('%s', $swap, $LANG->line($error)));
 		}
 
 		// Find the most likely culprit of the error by going through
@@ -1178,17 +1756,22 @@
 		// Find the most likely culprit of the error by going through
 		// the backtrace until the source file is no longer in the
 		// database folder.
-
 		$trace = debug_backtrace();
-
 		foreach ($trace as $call)
 		{
-			if (isset($call['file']) && strpos($call['file'], BASEPATH.'database') === FALSE)
+			if (isset($call['file'], $call['class']))
+			{
+				// We'll need this on Windows, as APPPATH and BASEPATH will always use forward slashes
+				if (DIRECTORY_SEPARATOR !== '/')
+				{
+					$call['file'] = str_replace('\\', '/', $call['file']);
+				}
+
+				if (strpos($call['file'], BASEPATH.'database') === FALSE && strpos($call['class'], 'Loader') === FALSE)
 			{
 				// Found it - use a relative path for safety
-				$message[] = 'Filename: '.str_replace(array(BASEPATH, APPPATH), '', $call['file']);
+					$message[] = 'Filename: '.str_replace(array(APPPATH, BASEPATH), '', $call['file']);
 				$message[] = 'Line Number: '.$call['line'];
-
 				break;
 			}
 		}
@@ -1192,26 +1775,11 @@
 				break;
 			}
 		}
+		}
 
 		$error =& load_class('Exceptions', 'core');
 		echo $error->show_error($heading, $message, 'error_db');
-		exit;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Protect Identifiers
-	 *
-	 * This function adds backticks if appropriate based on db type
-	 *
-	 * @access	private
-	 * @param	mixed	the item to escape
-	 * @return	mixed	the item with backticks
-	 */
-	function protect_identifiers($item, $prefix_single = FALSE)
-	{
-		return $this->_protect_identifiers($item, $prefix_single);
+		exit(8); // EXIT_DATABASE
 	}
 
 	// --------------------------------------------------------------------
@@ -1219,13 +1787,13 @@
 	/**
 	 * Protect Identifiers
 	 *
-	 * This function is used extensively by the Active Record class, and by
+	 * This function is used extensively by the Query Builder class, and by
 	 * a couple functions in this class.
 	 * It takes a column or table name (optionally with an alias) and inserts
 	 * the table prefix onto it.  Some logic is necessary in order to deal with
 	 * column names that include the path.  Consider a query like this:
 	 *
-	 * SELECT * FROM hostname.database.table.column AS c FROM hostname.database.table
+	 * SELECT hostname.database.table.column AS c FROM hostname.database.table
 	 *
 	 * Or a query with aliasing:
 	 *
@@ -1236,14 +1804,13 @@
 	 * insert the table prefix (if it exists) in the proper position, and escape only
 	 * the correct identifiers.
 	 *
-	 * @access	private
 	 * @param	string
 	 * @param	bool
 	 * @param	mixed
 	 * @param	bool
 	 * @return	string
 	 */
-	function _protect_identifiers($item, $prefix_single = FALSE, $protect_identifiers = NULL, $field_exists = TRUE)
+	public function protect_identifiers($item, $prefix_single = FALSE, $protect_identifiers = NULL, $field_exists = TRUE)
 	{
 		if ( ! is_bool($protect_identifiers))
 		{
@@ -1253,39 +1820,50 @@
 		if (is_array($item))
 		{
 			$escaped_array = array();
-
 			foreach ($item as $k => $v)
 			{
-				$escaped_array[$this->_protect_identifiers($k)] = $this->_protect_identifiers($v);
+				$escaped_array[$this->protect_identifiers($k)] = $this->protect_identifiers($v, $prefix_single, $protect_identifiers, $field_exists);
 			}
 
 			return $escaped_array;
 		}
 
+		// This is basically a bug fix for queries that use MAX, MIN, etc.
+		// If a parenthesis is found we know that we do not need to
+		// escape the data or add a prefix. There's probably a more graceful
+		// way to deal with this, but I'm not thinking of it -- Rick
+		//
+		// Added exception for single quotes as well, we don't want to alter
+		// literal strings. -- Narf
+		if (strcspn($item, "()'") !== strlen($item))
+		{
+			return $item;
+		}
+
 		// Convert tabs or multiple spaces into single spaces
-		$item = preg_replace('/[\t ]+/', ' ', $item);
+		$item = preg_replace('/\s+/', ' ', trim($item));
 
 		// If the item has an alias declaration we remove it and set it aside.
-		// Basically we remove everything to the right of the first space
-		if (strpos($item, ' ') !== FALSE)
+		// Note: strripos() is used in order to support spaces in table names
+		if ($offset = strripos($item, ' AS '))
 		{
-			$alias = strstr($item, ' ');
-			$item = substr($item, 0, - strlen($alias));
+			$alias = ($protect_identifiers)
+				? substr($item, $offset, 4).$this->escape_identifiers(substr($item, $offset + 4))
+				: substr($item, $offset);
+			$item = substr($item, 0, $offset);
+		}
+		elseif ($offset = strrpos($item, ' '))
+		{
+			$alias = ($protect_identifiers)
+				? ' '.$this->escape_identifiers(substr($item, $offset + 1))
+				: substr($item, $offset);
+			$item = substr($item, 0, $offset);
 		}
 		else
 		{
 			$alias = '';
 		}
 
-		// This is basically a bug fix for queries that use MAX, MIN, etc.
-		// If a parenthesis is found we know that we do not need to
-		// escape the data or add a prefix.  There's probably a more graceful
-		// way to deal with this, but I'm not thinking of it -- Rick
-		if (strpos($item, '(') !== FALSE)
-		{
-			return $item.$alias;
-		}
-
 		// Break the string apart if it contains periods, then insert the table prefix
 		// in the correct location, assuming the period doesn't indicate that we're dealing
 		// with an alias. While we're at it, we will escape the components
@@ -1296,7 +1874,10 @@
 			// Does the first segment of the exploded item match
 			// one of the aliases previously identified?  If so,
 			// we have nothing more to do other than escape the item
-			if (in_array($parts[0], $this->ar_aliased_tables))
+			//
+			// NOTE: The ! empty() condition prevents this method
+			//       from breaking when QB isn't enabled.
+			if ( ! empty($this->qb_aliased_tables) && in_array($parts[0], $this->qb_aliased_tables))
 			{
 				if ($protect_identifiers === TRUE)
 				{
@@ -1304,7 +1885,7 @@
 					{
 						if ( ! in_array($val, $this->_reserved_identifiers))
 						{
-							$parts[$key] = $this->_escape_identifiers($val);
+							$parts[$key] = $this->escape_identifiers($val);
 						}
 					}
 
@@ -1314,7 +1896,7 @@
 			}
 
 			// Is there a table prefix defined in the config file?  If not, no need to do anything
-			if ($this->dbprefix != '')
+			if ($this->dbprefix !== '')
 			{
 				// We now add the table prefix based on some logic.
 				// Do we have 4 segments (hostname.database.table.column)?
@@ -1338,19 +1920,18 @@
 
 				// This flag is set when the supplied $item does not contain a field name.
 				// This can happen when this function is being called from a JOIN.
-				if ($field_exists == FALSE)
+				if ($field_exists === FALSE)
 				{
 					$i++;
 				}
 
 				// Verify table prefix and replace if necessary
-				if ($this->swap_pre != '' && strncmp($parts[$i], $this->swap_pre, strlen($this->swap_pre)) === 0)
+				if ($this->swap_pre !== '' && strpos($parts[$i], $this->swap_pre) === 0)
 				{
-					$parts[$i] = preg_replace("/^".$this->swap_pre."(\S+?)/", $this->dbprefix."\\1", $parts[$i]);
+					$parts[$i] = preg_replace('/^'.$this->swap_pre.'(\S+?)/', $this->dbprefix.'\\1', $parts[$i]);
 				}
-
 				// We only add the table prefix if it does not already exist
-				if (substr($parts[$i], 0, strlen($this->dbprefix)) != $this->dbprefix)
+				elseif (strpos($parts[$i], $this->dbprefix) !== 0)
 				{
 					$parts[$i] = $this->dbprefix.$parts[$i];
 				}
@@ -1361,31 +1942,30 @@
 
 			if ($protect_identifiers === TRUE)
 			{
-				$item = $this->_escape_identifiers($item);
+				$item = $this->escape_identifiers($item);
 			}
 
 			return $item.$alias;
 		}
 
 		// Is there a table prefix?  If not, no need to insert it
-		if ($this->dbprefix != '')
+		if ($this->dbprefix !== '')
 		{
 			// Verify table prefix and replace if necessary
-			if ($this->swap_pre != '' && strncmp($item, $this->swap_pre, strlen($this->swap_pre)) === 0)
+			if ($this->swap_pre !== '' && strpos($item, $this->swap_pre) === 0)
 			{
-				$item = preg_replace("/^".$this->swap_pre."(\S+?)/", $this->dbprefix."\\1", $item);
+				$item = preg_replace('/^'.$this->swap_pre.'(\S+?)/', $this->dbprefix.'\\1', $item);
 			}
-
 			// Do we prefix an item with no segments?
-			if ($prefix_single == TRUE AND substr($item, 0, strlen($this->dbprefix)) != $this->dbprefix)
+			elseif ($prefix_single === TRUE && strpos($item, $this->dbprefix) !== 0)
 			{
 				$item = $this->dbprefix.$item;
 			}
 		}
 
-		if ($protect_identifiers === TRUE AND ! in_array($item, $this->_reserved_identifiers))
+		if ($protect_identifiers === TRUE && ! in_array($item, $this->_reserved_identifiers))
 		{
-			$item = $this->_escape_identifiers($item);
+			$item = $this->escape_identifiers($item);
 		}
 
 		return $item.$alias;
@@ -1394,9 +1974,8 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Dummy method that allows Active Record class to be disabled
-	 *
-	 * This function is used extensively by every db driver.
+	 * Dummy method that allows Query Builder class to be disabled
+	 * and keep count_all() working.
 	 *
 	 * @return	void
 	 */
@@ -1405,6 +1984,3 @@
 	}
 
 }
-
-/* End of file DB_driver.php */
-/* Location: ./system/database/DB_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/DB_forge.php opensourcepos/system/database/DB_forge.php
--- pos-prod/system/database/DB_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/DB_forge.php	2016-05-23 15:32:31.935838944 -0700
@@ -1,46 +1,173 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * Code Igniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * Database Utility Class
+ * Database Forge Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
-class CI_DB_forge {
+abstract class CI_DB_forge {
 
-	var $fields			= array();
-	var $keys			= array();
-	var $primary_keys	= array();
-	var $db_char_set	=	'';
+	/**
+	 * Database object
+	 *
+	 * @var	object
+	 */
+	protected $db;
 
 	/**
-	 * Constructor
+	 * Fields data
 	 *
-	 * Grabs the CI super object instance so we can access it.
+	 * @var	array
+	 */
+	public $fields		= array();
+
+	/**
+	 * Keys data
 	 *
+	 * @var	array
 	 */
-	function __construct()
+	public $keys		= array();
+
+	/**
+	 * Primary Keys data
+	 *
+	 * @var	array
+	 */
+	public $primary_keys	= array();
+
+	/**
+	 * Database character set
+	 *
+	 * @var	string
+	 */
+	public $db_char_set	= '';
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * CREATE DATABASE statement
+	 *
+	 * @var	string
+	 */
+	protected $_create_database	= 'CREATE DATABASE %s';
+
+	/**
+	 * DROP DATABASE statement
+	 *
+	 * @var	string
+	 */
+	protected $_drop_database	= 'DROP DATABASE %s';
+
+	/**
+	 * CREATE TABLE statement
+	 *
+	 * @var	string
+	 */
+	protected $_create_table	= "%s %s (%s\n)";
+
+	/**
+	 * CREATE TABLE IF statement
+	 *
+	 * @var	string
+	 */
+	protected $_create_table_if	= 'CREATE TABLE IF NOT EXISTS';
+
+	/**
+	 * CREATE TABLE keys flag
+	 *
+	 * Whether table keys are created from within the
+	 * CREATE TABLE statement.
+	 *
+	 * @var	bool
+	 */
+	protected $_create_table_keys	= FALSE;
+
+	/**
+	 * DROP TABLE IF EXISTS statement
+	 *
+	 * @var	string
+	 */
+	protected $_drop_table_if	= 'DROP TABLE IF EXISTS';
+
+	/**
+	 * RENAME TABLE statement
+	 *
+	 * @var	string
+	 */
+	protected $_rename_table	= 'ALTER TABLE %s RENAME TO %s;';
+
+	/**
+	 * UNSIGNED support
+	 *
+	 * @var	bool|array
+	 */
+	protected $_unsigned		= TRUE;
+
+	/**
+	 * NULL value representation in CREATE/ALTER TABLE statements
+	 *
+	 * @var	string
+	 */
+	protected $_null		= '';
+
+	/**
+	 * DEFAULT value representation in CREATE/ALTER TABLE statements
+	 *
+	 * @var	string
+	 */
+	protected $_default		= ' DEFAULT ';
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
+	 *
+	 * @param	object	&$db	Database object
+	 * @return	void
+	 */
+	public function __construct(&$db)
 	{
-		// Assign the main database object to $this->db
-		$CI =& get_instance();
-		$this->db =& $CI->db;
-		log_message('debug', "Database Forge Class Initialized");
+		$this->db =& $db;
+		log_message('info', 'Database Forge Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -48,20 +175,26 @@
 	/**
 	 * Create database
 	 *
-	 * @access	public
-	 * @param	string	the database name
+	 * @param	string	$db_name
 	 * @return	bool
 	 */
-	function create_database($db_name)
+	public function create_database($db_name)
+	{
+		if ($this->_create_database === FALSE)
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
+		elseif ( ! $this->db->query(sprintf($this->_create_database, $db_name, $this->db->char_set, $this->db->dbcollat)))
 	{
-		$sql = $this->_create_database($db_name);
+			return ($this->db->db_debug) ? $this->db->display_error('db_unable_to_drop') : FALSE;
+		}
 
-		if (is_bool($sql))
+		if ( ! empty($this->db->data_cache['db_names']))
 		{
-			return $sql;
+			$this->db->data_cache['db_names'][] = $db_name;
 		}
 
-		return $this->db->query($sql);
+		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
@@ -69,20 +202,30 @@
 	/**
 	 * Drop database
 	 *
-	 * @access	public
-	 * @param	string	the database name
+	 * @param	string	$db_name
 	 * @return	bool
 	 */
-	function drop_database($db_name)
+	public function drop_database($db_name)
+	{
+		if ($this->_drop_database === FALSE)
 	{
-		$sql = $this->_drop_database($db_name);
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
+		elseif ( ! $this->db->query(sprintf($this->_drop_database, $db_name)))
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unable_to_drop') : FALSE;
+		}
 
-		if (is_bool($sql))
+		if ( ! empty($this->db->data_cache['db_names']))
 		{
-			return $sql;
+			$key = array_search(strtolower($db_name), array_map('strtolower', $this->db->data_cache['db_names']), TRUE);
+			if ($key !== FALSE)
+			{
+				unset($this->db->data_cache['db_names'][$key]);
+			}
 		}
 
-		return $this->db->query($sql);
+		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
@@ -90,26 +233,26 @@
 	/**
 	 * Add Key
 	 *
-	 * @access	public
-	 * @param	string	key
-	 * @param	string	type
-	 * @return	void
+	 * @param	string	$key
+	 * @param	bool	$primary
+	 * @return	CI_DB_forge
 	 */
-	function add_key($key = '', $primary = FALSE)
+	public function add_key($key, $primary = FALSE)
 	{
-		if (is_array($key))
+		// DO NOT change this! This condition is only applicable
+		// for PRIMARY keys because you can only have one such,
+		// and therefore all fields you add to it will be included
+		// in the same, composite PRIMARY KEY.
+		//
+		// It's not the same for regular indexes.
+		if ($primary === TRUE && is_array($key))
 		{
 			foreach ($key as $one)
 			{
 				$this->add_key($one, $primary);
 			}
 
-			return;
-		}
-
-		if ($key == '')
-		{
-			show_error('Key information is required for that operation.');
+			return $this;
 		}
 
 		if ($primary === TRUE)
@@ -120,6 +263,8 @@
 		{
 			$this->keys[] = $key;
 		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -127,20 +272,14 @@
 	/**
 	 * Add Field
 	 *
-	 * @access	public
-	 * @param	string	collation
-	 * @return	void
+	 * @param	array	$field
+	 * @return	CI_DB_forge
 	 */
-	function add_field($field = '')
-	{
-		if ($field == '')
+	public function add_field($field)
 		{
-			show_error('Field information is required.');
-		}
-
 		if (is_string($field))
 		{
-			if ($field == 'id')
+			if ($field === 'id')
 			{
 				$this->add_field(array(
 										'id' => array(
@@ -167,6 +306,7 @@
 			$this->fields = array_merge($this->fields, $field);
 		}
 
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -174,26 +314,133 @@
 	/**
 	 * Create Table
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table		Table name
+	 * @param	bool	$if_not_exists	Whether to add IF NOT EXISTS condition
+	 * @param	array	$attributes	Associative array of table attributes
 	 * @return	bool
 	 */
-	function create_table($table = '', $if_not_exists = FALSE)
+	public function create_table($table, $if_not_exists = FALSE, array $attributes = array())
 	{
-		if ($table == '')
+		if ($table === '')
 		{
 			show_error('A table name is required for that operation.');
 		}
+		else
+		{
+			$table = $this->db->dbprefix.$table;
+		}
 
-		if (count($this->fields) == 0)
+		if (count($this->fields) === 0)
 		{
 			show_error('Field information is required.');
 		}
 
-		$sql = $this->_create_table($this->db->dbprefix.$table, $this->fields, $this->primary_keys, $this->keys, $if_not_exists);
+		$sql = $this->_create_table($table, $if_not_exists, $attributes);
 
+		if (is_bool($sql))
+		{
 		$this->_reset();
-		return $this->db->query($sql);
+			if ($sql === FALSE)
+			{
+				return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+			}
+		}
+
+		if (($result = $this->db->query($sql)) !== FALSE)
+		{
+			empty($this->db->data_cache['table_names']) OR $this->db->data_cache['table_names'][] = $table;
+
+			// Most databases don't support creating indexes from within the CREATE TABLE statement
+			if ( ! empty($this->keys))
+			{
+				for ($i = 0, $sqls = $this->_process_indexes($table), $c = count($sqls); $i < $c; $i++)
+				{
+					$this->db->query($sqls[$i]);
+				}
+			}
+		}
+
+		$this->_reset();
+		return $result;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Create Table
+	 *
+	 * @param	string	$table		Table name
+	 * @param	bool	$if_not_exists	Whether to add 'IF NOT EXISTS' condition
+	 * @param	array	$attributes	Associative array of table attributes
+	 * @return	mixed
+	 */
+	protected function _create_table($table, $if_not_exists, $attributes)
+	{
+		if ($if_not_exists === TRUE && $this->_create_table_if === FALSE)
+		{
+			if ($this->db->table_exists($table))
+			{
+				return TRUE;
+			}
+			else
+			{
+				$if_not_exists = FALSE;
+			}
+		}
+
+		$sql = ($if_not_exists)
+			? sprintf($this->_create_table_if, $this->db->escape_identifiers($table))
+			: 'CREATE TABLE';
+
+		$columns = $this->_process_fields(TRUE);
+		for ($i = 0, $c = count($columns); $i < $c; $i++)
+		{
+			$columns[$i] = ($columns[$i]['_literal'] !== FALSE)
+					? "\n\t".$columns[$i]['_literal']
+					: "\n\t".$this->_process_column($columns[$i]);
+		}
+
+		$columns = implode(',', $columns)
+				.$this->_process_primary_keys($table);
+
+		// Are indexes created from within the CREATE TABLE statement? (e.g. in MySQL)
+		if ($this->_create_table_keys === TRUE)
+		{
+			$columns .= $this->_process_indexes($table);
+		}
+
+		// _create_table will usually have the following format: "%s %s (%s\n)"
+		$sql = sprintf($this->_create_table.'%s',
+			$sql,
+			$this->db->escape_identifiers($table),
+			$columns,
+			$this->_create_table_attr($attributes)
+		);
+
+		return $sql;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * CREATE TABLE attributes
+	 *
+	 * @param	array	$attributes	Associative array of table attributes
+	 * @return	string
+	 */
+	protected function _create_table_attr($attributes)
+	{
+		$sql = '';
+
+		foreach (array_keys($attributes) as $key)
+		{
+			if (is_string($key))
+			{
+				$sql .= ' '.strtoupper($key).' '.$attributes[$key];
+			}
+		}
+
+		return $sql;
 	}
 
 	// --------------------------------------------------------------------
@@ -201,20 +448,68 @@
 	/**
 	 * Drop Table
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table_name	Table name
+	 * @param	bool	$if_exists	Whether to add an IF EXISTS condition
 	 * @return	bool
 	 */
-	function drop_table($table_name)
+	public function drop_table($table_name, $if_exists = FALSE)
 	{
-		$sql = $this->_drop_table($this->db->dbprefix.$table_name);
+		if ($table_name === '')
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_table_name_required') : FALSE;
+		}
 
-		if (is_bool($sql))
+		if (($query = $this->_drop_table($this->db->dbprefix.$table_name, $if_exists)) === TRUE)
 		{
-			return $sql;
+			return TRUE;
 		}
 
-		return $this->db->query($sql);
+		$query = $this->db->query($query);
+
+		// Update table list cache
+		if ($query && ! empty($this->db->data_cache['table_names']))
+		{
+			$key = array_search(strtolower($this->db->dbprefix.$table_name), array_map('strtolower', $this->db->data_cache['table_names']), TRUE);
+			if ($key !== FALSE)
+			{
+				unset($this->db->data_cache['table_names'][$key]);
+			}
+		}
+
+		return $query;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Drop Table
+	 *
+	 * Generates a platform-specific DROP TABLE string
+	 *
+	 * @param	string	$table		Table name
+	 * @param	bool	$if_exists	Whether to add an IF EXISTS condition
+	 * @return	string
+	 */
+	protected function _drop_table($table, $if_exists)
+	{
+		$sql = 'DROP TABLE';
+
+		if ($if_exists)
+		{
+			if ($this->_drop_table_if === FALSE)
+			{
+				if ( ! $this->db->table_exists($table))
+				{
+					return TRUE;
+				}
+			}
+			else
+			{
+				$sql = sprintf($this->_drop_table_if, $this->db->escape_identifiers($table));
+			}
+		}
+
+		return $sql.' '.$this->db->escape_identifiers($table);
 	}
 
 	// --------------------------------------------------------------------
@@ -222,20 +517,37 @@
 	/**
 	 * Rename Table
 	 *
-	 * @access	public
-	 * @param	string	the old table name
-	 * @param	string	the new table name
+	 * @param	string	$table_name	Old table name
+	 * @param	string	$new_table_name	New table name
 	 * @return	bool
 	 */
-	function rename_table($table_name, $new_table_name)
+	public function rename_table($table_name, $new_table_name)
 	{
-		if ($table_name == '' OR $new_table_name == '')
+		if ($table_name === '' OR $new_table_name === '')
 		{
 			show_error('A table name is required for that operation.');
+			return FALSE;
+		}
+		elseif ($this->_rename_table === FALSE)
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
 		}
 
-		$sql = $this->_rename_table($this->db->dbprefix.$table_name, $this->db->dbprefix.$new_table_name);
-		return $this->db->query($sql);
+		$result = $this->db->query(sprintf($this->_rename_table,
+						$this->db->escape_identifiers($this->db->dbprefix.$table_name),
+						$this->db->escape_identifiers($this->db->dbprefix.$new_table_name))
+					);
+
+		if ($result && ! empty($this->db->data_cache['table_names']))
+		{
+			$key = array_search(strtolower($this->db->dbprefix.$table_name), array_map('strtolower', $this->db->data_cache['table_names']), TRUE);
+			if ($key !== FALSE)
+			{
+				$this->db->data_cache['table_names'][$key] = $this->db->dbprefix.$new_table_name;
+			}
+		}
+
+		return $result;
 	}
 
 	// --------------------------------------------------------------------
@@ -243,120 +555,464 @@
 	/**
 	 * Column Add
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	string	the column name
-	 * @param	string	the column definition
+	 * @todo	Remove deprecated $_after option in 3.1+
+	 * @param	string	$table	Table name
+	 * @param	array	$field	Column definition
+	 * @param	string	$_after	Column for AFTER clause (deprecated)
 	 * @return	bool
 	 */
-	function add_column($table = '', $field = array(), $after_field = '')
+	public function add_column($table, $field, $_after = NULL)
+	{
+		// Work-around for literal column definitions
+		is_array($field) OR $field = array($field);
+
+		foreach (array_keys($field) as $k)
 	{
-		if ($table == '')
+			// Backwards-compatibility work-around for MySQL/CUBRID AFTER clause (remove in 3.1+)
+			if ($_after !== NULL && is_array($field[$k]) && ! isset($field[$k]['after']))
 		{
-			show_error('A table name is required for that operation.');
+				$field[$k]['after'] = $_after;
+			}
+
+			$this->add_field(array($k => $field[$k]));
 		}
 
-		// add field info into field array, but we can only do one at a time
-		// so we cycle through
+		$sqls = $this->_alter_table('ADD', $this->db->dbprefix.$table, $this->_process_fields());
+		$this->_reset();
+		if ($sqls === FALSE)
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
 
-		foreach ($field as $k => $v)
+		for ($i = 0, $c = count($sqls); $i < $c; $i++)
+		{
+			if ($this->db->query($sqls[$i]) === FALSE)
+			{
+				return FALSE;
+			}
+		}
+
+		return TRUE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Column Drop
+	 *
+	 * @param	string	$table		Table name
+	 * @param	string	$column_name	Column name
+	 * @return	bool
+	 */
+	public function drop_column($table, $column_name)
+	{
+		$sql = $this->_alter_table('DROP', $this->db->dbprefix.$table, $column_name);
+		if ($sql === FALSE)
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
+
+		return $this->db->query($sql);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Column Modify
+	 *
+	 * @param	string	$table	Table name
+	 * @param	string	$field	Column definition
+	 * @return	bool
+	 */
+	public function modify_column($table, $field)
+	{
+		// Work-around for literal column definitions
+		is_array($field) OR $field = array($field);
+
+		foreach (array_keys($field) as $k)
 		{
 			$this->add_field(array($k => $field[$k]));
+		}
 
-			if (count($this->fields) == 0)
+		if (count($this->fields) === 0)
 			{
 				show_error('Field information is required.');
 			}
 
-			$sql = $this->_alter_table('ADD', $this->db->dbprefix.$table, $this->fields, $after_field);
-
+		$sqls = $this->_alter_table('CHANGE', $this->db->dbprefix.$table, $this->_process_fields());
 			$this->_reset();
+		if ($sqls === FALSE)
+		{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
 
-			if ($this->db->query($sql) === FALSE)
+		for ($i = 0, $c = count($sqls); $i < $c; $i++)
+		{
+			if ($this->db->query($sqls[$i]) === FALSE)
 			{
 				return FALSE;
 			}
 		}
 
 		return TRUE;
+	}
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * ALTER TABLE
+	 *
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
+	 */
+	protected function _alter_table($alter_type, $table, $field)
+	{
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table).' ';
+
+		// DROP has everything it needs now.
+		if ($alter_type === 'DROP')
+		{
+			return $sql.'DROP COLUMN '.$this->db->escape_identifiers($field);
+		}
+
+		$sql .= ($alter_type === 'ADD')
+			? 'ADD '
+			: $alter_type.' COLUMN ';
+
+		$sqls = array();
+		for ($i = 0, $c = count($field); $i < $c; $i++)
+		{
+			$sqls[] = $sql
+				.($field[$i]['_literal'] !== FALSE ? $field[$i]['_literal'] : $this->_process_column($field[$i]));
+		}
+
+		return $sqls;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Column Drop
+	 * Process fields
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	string	the column name
-	 * @return	bool
+	 * @param	bool	$create_table
+	 * @return	array
 	 */
-	function drop_column($table = '', $column_name = '')
+	protected function _process_fields($create_table = FALSE)
 	{
+		$fields = array();
 
-		if ($table == '')
+		foreach ($this->fields as $key => $attributes)
 		{
-			show_error('A table name is required for that operation.');
+			if (is_int($key) && ! is_array($attributes))
+			{
+				$fields[] = array('_literal' => $attributes);
+				continue;
 		}
 
-		if ($column_name == '')
+			$attributes = array_change_key_case($attributes, CASE_UPPER);
+
+			if ($create_table === TRUE && empty($attributes['TYPE']))
 		{
-			show_error('A column name is required for that operation.');
+				continue;
 		}
 
-		$sql = $this->_alter_table('DROP', $this->db->dbprefix.$table, $column_name);
+			isset($attributes['TYPE']) && $this->_attr_type($attributes);
 
-		return $this->db->query($sql);
+			$field = array(
+				'name'			=> $key,
+				'new_name'		=> isset($attributes['NAME']) ? $attributes['NAME'] : NULL,
+				'type'			=> isset($attributes['TYPE']) ? $attributes['TYPE'] : NULL,
+				'length'		=> '',
+				'unsigned'		=> '',
+				'null'			=> '',
+				'unique'		=> '',
+				'default'		=> '',
+				'auto_increment'	=> '',
+				'_literal'		=> FALSE
+			);
+
+			isset($attributes['TYPE']) && $this->_attr_unsigned($attributes, $field);
+
+			if ($create_table === FALSE)
+			{
+				if (isset($attributes['AFTER']))
+				{
+					$field['after'] = $attributes['AFTER'];
+				}
+				elseif (isset($attributes['FIRST']))
+				{
+					$field['first'] = (bool) $attributes['FIRST'];
+				}
+			}
+
+			$this->_attr_default($attributes, $field);
+
+			if (isset($attributes['NULL']))
+			{
+				if ($attributes['NULL'] === TRUE)
+				{
+					$field['null'] = empty($this->_null) ? '' : ' '.$this->_null;
+				}
+				else
+				{
+					$field['null'] = ' NOT NULL';
+				}
+			}
+			elseif ($create_table === TRUE)
+			{
+				$field['null'] = ' NOT NULL';
+			}
+
+			$this->_attr_auto_increment($attributes, $field);
+			$this->_attr_unique($attributes, $field);
+
+			if (isset($attributes['COMMENT']))
+			{
+				$field['comment'] = $this->db->escape($attributes['COMMENT']);
+			}
+
+			if (isset($attributes['TYPE']) && ! empty($attributes['CONSTRAINT']))
+			{
+				switch (strtoupper($attributes['TYPE']))
+				{
+					case 'ENUM':
+					case 'SET':
+						$attributes['CONSTRAINT'] = $this->db->escape($attributes['CONSTRAINT']);
+					default:
+						$field['length'] = is_array($attributes['CONSTRAINT'])
+							? '('.implode(',', $attributes['CONSTRAINT']).')'
+							: '('.$attributes['CONSTRAINT'].')';
+						break;
+				}
+			}
+
+			$fields[] = $field;
+		}
+
+		return $fields;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Column Modify
+	 * Process column
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	string	the column name
-	 * @param	string	the column definition
-	 * @return	bool
+	 * @param	array	$field
+	 * @return	string
 	 */
-	function modify_column($table = '', $field = array())
+	protected function _process_column($field)
 	{
-		if ($table == '')
+		return $this->db->escape_identifiers($field['name'])
+			.' '.$field['type'].$field['length']
+			.$field['unsigned']
+			.$field['default']
+			.$field['null']
+			.$field['auto_increment']
+			.$field['unique'];
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Field attribute TYPE
+	 *
+	 * Performs a data type mapping between different databases.
+	 *
+	 * @param	array	&$attributes
+	 * @return	void
+	 */
+	protected function _attr_type(&$attributes)
 		{
-			show_error('A table name is required for that operation.');
+		// Usually overridden by drivers
 		}
 
-		// add field info into field array, but we can only do one at a time
-		// so we cycle through
+	// --------------------------------------------------------------------
 
-		foreach ($field as $k => $v)
+	/**
+	 * Field attribute UNSIGNED
+	 *
+	 * Depending on the _unsigned property value:
+	 *
+	 *	- TRUE will always set $field['unsigned'] to 'UNSIGNED'
+	 *	- FALSE will always set $field['unsigned'] to ''
+	 *	- array(TYPE) will set $field['unsigned'] to 'UNSIGNED',
+	 *		if $attributes['TYPE'] is found in the array
+	 *	- array(TYPE => UTYPE) will change $field['type'],
+	 *		from TYPE to UTYPE in case of a match
+	 *
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
+	 */
+	protected function _attr_unsigned(&$attributes, &$field)
 		{
-			// If no name provided, use the current name
-			if ( ! isset($field[$k]['name']))
+		if (empty($attributes['UNSIGNED']) OR $attributes['UNSIGNED'] !== TRUE)
 			{
-				$field[$k]['name'] = $k;
+			return;
 			}
 
-			$this->add_field(array($k => $field[$k]));
+		// Reset the attribute in order to avoid issues if we do type conversion
+		$attributes['UNSIGNED'] = FALSE;
 
-			if (count($this->fields) == 0)
+		if (is_array($this->_unsigned))
 			{
-				show_error('Field information is required.');
+			foreach (array_keys($this->_unsigned) as $key)
+			{
+				if (is_int($key) && strcasecmp($attributes['TYPE'], $this->_unsigned[$key]) === 0)
+				{
+					$field['unsigned'] = ' UNSIGNED';
+					return;
+				}
+				elseif (is_string($key) && strcasecmp($attributes['TYPE'], $key) === 0)
+				{
+					$field['type'] = $key;
+					return;
+				}
 			}
 
-			$sql = $this->_alter_table('CHANGE', $this->db->dbprefix.$table, $this->fields);
+			return;
+		}
 
-			$this->_reset();
+		$field['unsigned'] = ($this->_unsigned === TRUE) ? ' UNSIGNED' : '';
+	}
+
+	// --------------------------------------------------------------------
 
-			if ($this->db->query($sql) === FALSE)
+	/**
+	 * Field attribute DEFAULT
+	 *
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
+	 */
+	protected function _attr_default(&$attributes, &$field)
 			{
-				return FALSE;
+		if ($this->_default === FALSE)
+		{
+			return;
+		}
+
+		if (array_key_exists('DEFAULT', $attributes))
+		{
+			if ($attributes['DEFAULT'] === NULL)
+			{
+				$field['default'] = empty($this->_null) ? '' : $this->_default.$this->_null;
+
+				// Override the NULL attribute if that's our default
+				$attributes['NULL'] = TRUE;
+				$field['null'] = empty($this->_null) ? '' : ' '.$this->_null;
+			}
+			else
+			{
+				$field['default'] = $this->_default.$this->db->escape($attributes['DEFAULT']);
+			}
 			}
 		}
 
-		return TRUE;
+	// --------------------------------------------------------------------
+
+	/**
+	 * Field attribute UNIQUE
+	 *
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
+	 */
+	protected function _attr_unique(&$attributes, &$field)
+	{
+		if ( ! empty($attributes['UNIQUE']) && $attributes['UNIQUE'] === TRUE)
+		{
+			$field['unique'] = ' UNIQUE';
+		}
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Field attribute AUTO_INCREMENT
+	 *
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
+	 */
+	protected function _attr_auto_increment(&$attributes, &$field)
+	{
+		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
+		{
+			$field['auto_increment'] = ' AUTO_INCREMENT';
+		}
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Process primary keys
+	 *
+	 * @param	string	$table	Table name
+	 * @return	string
+	 */
+	protected function _process_primary_keys($table)
+	{
+		$sql = '';
+
+		for ($i = 0, $c = count($this->primary_keys); $i < $c; $i++)
+		{
+			if ( ! isset($this->fields[$this->primary_keys[$i]]))
+			{
+				unset($this->primary_keys[$i]);
+			}
+		}
+
+		if (count($this->primary_keys) > 0)
+		{
+			$sql .= ",\n\tCONSTRAINT ".$this->db->escape_identifiers('pk_'.$table)
+				.' PRIMARY KEY('.implode(', ', $this->db->escape_identifiers($this->primary_keys)).')';
+		}
+
+		return $sql;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Process indexes
+	 *
+	 * @param	string	$table
+	 * @return	string
+	 */
+	protected function _process_indexes($table)
+	{
+		$sqls = array();
+
+		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
+		{
+			if (is_array($this->keys[$i]))
+			{
+				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
+				{
+					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
+					{
+						unset($this->keys[$i][$i2]);
+						continue;
+					}
+				}
+			}
+			elseif ( ! isset($this->fields[$this->keys[$i]]))
+			{
+				unset($this->keys[$i]);
+				continue;
+			}
+
+			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
+
+			$sqls[] = 'CREATE INDEX '.$this->db->escape_identifiers($table.'_'.implode('_', $this->keys[$i]))
+				.' ON '.$this->db->escape_identifiers($table)
+				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).');';
+		}
+
+		return $sqls;
 	}
 
 	// --------------------------------------------------------------------
@@ -366,17 +1022,11 @@
 	 *
 	 * Resets table creation vars
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	function _reset()
+	protected function _reset()
 	{
-		$this->fields		= array();
-		$this->keys			= array();
-		$this->primary_keys	= array();
+		$this->fields = $this->keys = $this->primary_keys = array();
 	}
 
 }
-
-/* End of file DB_forge.php */
-/* Location: ./system/database/DB_forge.php */
\ No newline at end of file
Only in opensourcepos/system/database: DB_query_builder.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/DB_result.php opensourcepos/system/database/DB_result.php
--- pos-prod/system/database/DB_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/DB_result.php	2016-05-23 15:32:31.936838928 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Database Result Class
@@ -23,33 +45,128 @@
  * class for the specific database will extend and instantiate it.
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_result {
 
-	var $conn_id				= NULL;
-	var $result_id				= NULL;
-	var $result_array			= array();
-	var $result_object			= array();
-	var $custom_result_object	= array();
-	var $current_row			= 0;
-	var $num_rows				= 0;
-	var $row_data				= NULL;
+	/**
+	 * Connection ID
+	 *
+	 * @var	resource|object
+	 */
+	public $conn_id;
+
+	/**
+	 * Result ID
+	 *
+	 * @var	resource|object
+	 */
+	public $result_id;
+
+	/**
+	 * Result Array
+	 *
+	 * @var	array[]
+	 */
+	public $result_array			= array();
+
+	/**
+	 * Result Object
+	 *
+	 * @var	object[]
+	 */
+	public $result_object			= array();
+
+	/**
+	 * Custom Result Object
+	 *
+	 * @var	object[]
+	 */
+	public $custom_result_object		= array();
+
+	/**
+	 * Current Row index
+	 *
+	 * @var	int
+	 */
+	public $current_row			= 0;
+
+	/**
+	 * Number of rows
+	 *
+	 * @var	int
+	 */
+	public $num_rows;
+
+	/**
+	 * Row data
+	 *
+	 * @var	array
+	 */
+	public $row_data;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @param	object	$driver_object
+	 * @return	void
+	 */
+	public function __construct(&$driver_object)
+	{
+		$this->conn_id = $driver_object->conn_id;
+		$this->result_id = $driver_object->result_id;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Number of rows in the result set
+	 *
+	 * @return	int
+	 */
+	public function num_rows()
+	{
+		if (is_int($this->num_rows))
+		{
+			return $this->num_rows;
+		}
+		elseif (count($this->result_array) > 0)
+		{
+			return $this->num_rows = count($this->result_array);
+		}
+		elseif (count($this->result_object) > 0)
+		{
+			return $this->num_rows = count($this->result_object);
+		}
+
+		return $this->num_rows = count($this->result_array());
+	}
 
+	// --------------------------------------------------------------------
 
 	/**
 	 * Query result.  Acts as a wrapper function for the following functions.
 	 *
-	 * @access	public
-	 * @param	string	can be "object" or "array"
-	 * @return	mixed	either a result object or array
+	 * @param	string	$type	'object', 'array' or a custom class name
+	 * @return	array
 	 */
 	public function result($type = 'object')
 	{
-		if ($type == 'array') return $this->result_array();
-		else if ($type == 'object') return $this->result_object();
-		else return $this->custom_result_object($type);
+		if ($type === 'array')
+		{
+			return $this->result_array();
+		}
+		elseif ($type === 'object')
+		{
+			return $this->result_object();
+		}
+		else
+		{
+			return $this->custom_result_object($type);
+		}
 	}
 
 	// --------------------------------------------------------------------
@@ -57,39 +174,55 @@
 	/**
 	 * Custom query result.
 	 *
-	 * @param class_name A string that represents the type of object you want back
-	 * @return array of objects
+	 * @param	string	$class_name
+	 * @return	array
 	 */
 	public function custom_result_object($class_name)
 	{
-		if (array_key_exists($class_name, $this->custom_result_object))
+		if (isset($this->custom_result_object[$class_name]))
 		{
 			return $this->custom_result_object[$class_name];
 		}
-
-		if ($this->result_id === FALSE OR $this->num_rows() == 0)
+		elseif ( ! $this->result_id OR $this->num_rows === 0)
 		{
 			return array();
 		}
 
-		// add the data to the object
-		$this->_data_seek(0);
-		$result_object = array();
+		// Don't fetch the result set again if we already have it
+		$_data = NULL;
+		if (($c = count($this->result_array)) > 0)
+		{
+			$_data = 'result_array';
+		}
+		elseif (($c = count($this->result_object)) > 0)
+		{
+			$_data = 'result_object';
+		}
 
-		while ($row = $this->_fetch_object())
+		if ($_data !== NULL)
+		{
+			for ($i = 0; $i < $c; $i++)
 		{
-			$object = new $class_name();
+				$this->custom_result_object[$class_name][$i] = new $class_name();
 
-			foreach ($row as $key => $value)
+				foreach ($this->{$_data}[$i] as $key => $value)
 			{
-				$object->$key = $value;
+					$this->custom_result_object[$class_name][$i]->$key = $value;
+				}
 			}
 
-			$result_object[] = $object;
+			return $this->custom_result_object[$class_name];
+		}
+
+		is_null($this->row_data) OR $this->data_seek(0);
+		$this->custom_result_object[$class_name] = array();
+
+		while ($row = $this->_fetch_object($class_name))
+		{
+			$this->custom_result_object[$class_name][] = $row;
 		}
 
-		// return the array
-		return $this->custom_result_object[$class_name] = $result_object;
+		return $this->custom_result_object[$class_name];
 	}
 
 	// --------------------------------------------------------------------
@@ -97,8 +230,7 @@
 	/**
 	 * Query result.  "object" version.
 	 *
-	 * @access	public
-	 * @return	object
+	 * @return	array
 	 */
 	public function result_object()
 	{
@@ -107,15 +239,25 @@
 			return $this->result_object;
 		}
 
-		// In the event that query caching is on the result_id variable
-		// will return FALSE since there isn't a valid SQL resource so
-		// we'll simply return an empty array.
-		if ($this->result_id === FALSE OR $this->num_rows() == 0)
+		// In the event that query caching is on, the result_id variable
+		// will not be a valid resource so we'll simply return an empty
+		// array.
+		if ( ! $this->result_id OR $this->num_rows === 0)
 		{
 			return array();
 		}
 
-		$this->_data_seek(0);
+		if (($c = count($this->result_array)) > 0)
+		{
+			for ($i = 0; $i < $c; $i++)
+			{
+				$this->result_object[$i] = (object) $this->result_array[$i];
+			}
+
+			return $this->result_object;
+		}
+
+		is_null($this->row_data) OR $this->data_seek(0);
 		while ($row = $this->_fetch_object())
 		{
 			$this->result_object[] = $row;
@@ -129,7 +271,6 @@
 	/**
 	 * Query result.  "array" version.
 	 *
-	 * @access	public
 	 * @return	array
 	 */
 	public function result_array()
@@ -139,15 +280,25 @@
 			return $this->result_array;
 		}
 
-		// In the event that query caching is on the result_id variable
-		// will return FALSE since there isn't a valid SQL resource so
-		// we'll simply return an empty array.
-		if ($this->result_id === FALSE OR $this->num_rows() == 0)
+		// In the event that query caching is on, the result_id variable
+		// will not be a valid resource so we'll simply return an empty
+		// array.
+		if ( ! $this->result_id OR $this->num_rows === 0)
 		{
 			return array();
 		}
 
-		$this->_data_seek(0);
+		if (($c = count($this->result_object)) > 0)
+		{
+			for ($i = 0; $i < $c; $i++)
+			{
+				$this->result_array[$i] = (array) $this->result_object[$i];
+			}
+
+			return $this->result_array;
+		}
+
+		is_null($this->row_data) OR $this->data_seek(0);
 		while ($row = $this->_fetch_assoc())
 		{
 			$this->result_array[] = $row;
@@ -159,34 +310,32 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Query result.  Acts as a wrapper function for the following functions.
+	 * Row
+	 *
+	 * A wrapper method.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string	can be "object" or "array"
-	 * @return	mixed	either a result object or array
+	 * @param	mixed	$n
+	 * @param	string	$type	'object' or 'array'
+	 * @return	mixed
 	 */
 	public function row($n = 0, $type = 'object')
 	{
 		if ( ! is_numeric($n))
 		{
 			// We cache the row data for subsequent uses
-			if ( ! is_array($this->row_data))
+			is_array($this->row_data) OR $this->row_data = $this->row_array(0);
+
+			// array_key_exists() instead of isset() to allow for NULL values
+			if (empty($this->row_data) OR ! array_key_exists($n, $this->row_data))
 			{
-				$this->row_data = $this->row_array(0);
+				return NULL;
 			}
 
-			// array_key_exists() instead of isset() to allow for MySQL NULL values
-			if (array_key_exists($n, $this->row_data))
-			{
 				return $this->row_data[$n];
 			}
-			// reset the $n variable if the result was not achieved
-			$n = 0;
-		}
 
-		if ($type == 'object') return $this->row_object($n);
-		else if ($type == 'array') return $this->row_array($n);
+		if ($type === 'object') return $this->row_object($n);
+		elseif ($type === 'array') return $this->row_array($n);
 		else return $this->custom_row_object($n, $type);
 	}
 
@@ -195,8 +344,9 @@
 	/**
 	 * Assigns an item into a particular column slot
 	 *
-	 * @access	public
-	 * @return	object
+	 * @param	mixed	$key
+	 * @param	mixed	$value
+	 * @return	void
 	 */
 	public function set_row($key, $value = NULL)
 	{
@@ -216,7 +365,7 @@
 			return;
 		}
 
-		if ($key != '' AND ! is_null($value))
+		if ($key !== '' && $value !== NULL)
 		{
 			$this->row_data[$key] = $value;
 		}
@@ -227,42 +376,44 @@
 	/**
 	 * Returns a single result row - custom object version
 	 *
-	 * @access	public
+	 * @param	int	$n
+	 * @param	string	$type
 	 * @return	object
 	 */
 	public function custom_row_object($n, $type)
 	{
-		$result = $this->custom_result_object($type);
+		isset($this->custom_result_object[$type]) OR $this->custom_result_object($type);
 
-		if (count($result) == 0)
+		if (count($this->custom_result_object[$type]) === 0)
 		{
-			return $result;
+			return NULL;
 		}
 
-		if ($n != $this->current_row AND isset($result[$n]))
+		if ($n !== $this->current_row && isset($this->custom_result_object[$type][$n]))
 		{
 			$this->current_row = $n;
 		}
 
-		return $result[$this->current_row];
+		return $this->custom_result_object[$type][$this->current_row];
 	}
 
+	// --------------------------------------------------------------------
+
 	/**
 	 * Returns a single result row - object version
 	 *
-	 * @access	public
+	 * @param	int	$n
 	 * @return	object
 	 */
 	public function row_object($n = 0)
 	{
 		$result = $this->result_object();
-
-		if (count($result) == 0)
+		if (count($result) === 0)
 		{
-			return $result;
+			return NULL;
 		}
 
-		if ($n != $this->current_row AND isset($result[$n]))
+		if ($n !== $this->current_row && isset($result[$n]))
 		{
 			$this->current_row = $n;
 		}
@@ -275,19 +426,18 @@
 	/**
 	 * Returns a single result row - array version
 	 *
-	 * @access	public
+	 * @param	int	$n
 	 * @return	array
 	 */
 	public function row_array($n = 0)
 	{
 		$result = $this->result_array();
-
-		if (count($result) == 0)
+		if (count($result) === 0)
 		{
-			return $result;
+			return NULL;
 		}
 
-		if ($n != $this->current_row AND isset($result[$n]))
+		if ($n !== $this->current_row && isset($result[$n]))
 		{
 			$this->current_row = $n;
 		}
@@ -301,18 +450,13 @@
 	/**
 	 * Returns the "first" row
 	 *
-	 * @access	public
-	 * @return	object
+	 * @param	string	$type
+	 * @return	mixed
 	 */
 	public function first_row($type = 'object')
 	{
 		$result = $this->result($type);
-
-		if (count($result) == 0)
-		{
-			return $result;
-		}
-		return $result[0];
+		return (count($result) === 0) ? NULL : $result[0];
 	}
 
 	// --------------------------------------------------------------------
@@ -320,18 +464,13 @@
 	/**
 	 * Returns the "last" row
 	 *
-	 * @access	public
-	 * @return	object
+	 * @param	string	$type
+	 * @return	mixed
 	 */
 	public function last_row($type = 'object')
 	{
 		$result = $this->result($type);
-
-		if (count($result) == 0)
-		{
-			return $result;
-		}
-		return $result[count($result) -1];
+		return (count($result) === 0) ? NULL : $result[count($result) - 1];
 	}
 
 	// --------------------------------------------------------------------
@@ -339,24 +478,20 @@
 	/**
 	 * Returns the "next" row
 	 *
-	 * @access	public
-	 * @return	object
+	 * @param	string	$type
+	 * @return	mixed
 	 */
 	public function next_row($type = 'object')
 	{
 		$result = $this->result($type);
-
-		if (count($result) == 0)
+		if (count($result) === 0)
 		{
-			return $result;
+			return NULL;
 		}
 
-		if (isset($result[$this->current_row + 1]))
-		{
-			++$this->current_row;
-		}
-
-		return $result[$this->current_row];
+		return isset($result[$this->current_row + 1])
+			? $result[++$this->current_row]
+			: NULL;
 	}
 
 	// --------------------------------------------------------------------
@@ -364,16 +499,15 @@
 	/**
 	 * Returns the "previous" row
 	 *
-	 * @access	public
-	 * @return	object
+	 * @param	string	$type
+	 * @return	mixed
 	 */
 	public function previous_row($type = 'object')
 	{
 		$result = $this->result($type);
-
-		if (count($result) == 0)
+		if (count($result) === 0)
 		{
-			return $result;
+			return NULL;
 		}
 
 		if (isset($result[$this->current_row - 1]))
@@ -386,7 +520,29 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * The following functions are normally overloaded by the identically named
+	 * Returns an unbuffered row and move pointer to next row
+	 *
+	 * @param	string	$type	'array', 'object' or a custom class name
+	 * @return	mixed
+	 */
+	public function unbuffered_row($type = 'object')
+	{
+		if ($type === 'array')
+		{
+			return $this->_fetch_assoc();
+		}
+		elseif ($type === 'object')
+		{
+			return $this->_fetch_object();
+		}
+
+		return $this->_fetch_object($type);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * The following methods are normally overloaded by the identically named
 	 * methods in the platform-specific driver -- except when query caching
 	 * is used.  When caching is enabled we do not load the other driver.
 	 * These functions are primarily here to prevent undefined function errors
@@ -394,17 +550,117 @@
 	 * operational due to the unavailability of the database resource IDs with
 	 * cached results.
 	 */
-	public function num_rows() { return $this->num_rows; }
-	public function num_fields() { return 0; }
-	public function list_fields() { return array(); }
-	public function field_data() { return array(); }
-	public function free_result() { return TRUE; }
-	protected function _data_seek() { return TRUE; }
-	protected function _fetch_assoc() { return array(); }
-	protected function _fetch_object() { return array(); }
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * Number of fields in the result set
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @return	int
+	 */
+	public function num_fields()
+	{
+		return 0;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fetch Field Names
+	 *
+	 * Generates an array of column names.
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @return	array
+	 */
+	public function list_fields()
+	{
+		return array();
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Field data
+	 *
+	 * Generates an array of objects containing field meta-data.
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @return	array
+	 */
+	public function field_data()
+	{
+		return array();
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Free the result
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @return	void
+	 */
+	public function free_result()
+	{
+		$this->result_id = FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Data Seek
+	 *
+	 * Moves the internal pointer to the desired offset. We call
+	 * this internally before fetching results to make sure the
+	 * result set starts at zero.
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @param	int	$n
+	 * @return	bool
+	 */
+	public function data_seek($n = 0)
+	{
+		return FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Result - associative array
+	 *
+	 * Returns the result set as an array.
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @return	array
+	 */
+	protected function _fetch_assoc()
+	{
+		return array();
 }
-// END DB_result class
 
-/* End of file DB_result.php */
-/* Location: ./system/database/DB_result.php */
+	// --------------------------------------------------------------------
+
+	/**
+	 * Result - object
+	 *
+	 * Returns the result set as an object.
+	 *
+	 * Overridden by driver result classes.
+	 *
+	 * @param	string	$class_name
+	 * @return	object
+	 */
+	protected function _fetch_object($class_name = 'stdClass')
+	{
+		return array();
+	}
+
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/DB_utility.php opensourcepos/system/database/DB_utility.php
--- pos-prod/system/database/DB_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/DB_utility.php	2016-05-23 15:32:31.936838928 -0700
@@ -1,45 +1,93 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Database Utility Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
-class CI_DB_utility extends CI_DB_forge {
+abstract class CI_DB_utility {
 
-	var $db;
-	var $data_cache		= array();
+	/**
+	 * Database object
+	 *
+	 * @var	object
+	 */
+	protected $db;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * List databases statement
+	 *
+	 * @var	string
+	 */
+	protected $_list_databases		= FALSE;
 
 	/**
-	 * Constructor
+	 * OPTIMIZE TABLE statement
 	 *
-	 * Grabs the CI super object instance so we can access it.
+	 * @var	string
+	 */
+	protected $_optimize_table	= FALSE;
+
+	/**
+	 * REPAIR TABLE statement
 	 *
+	 * @var	string
 	 */
-	function __construct()
-	{
-		// Assign the main database object to $this->db
-		$CI =& get_instance();
-		$this->db =& $CI->db;
+	protected $_repair_table	= FALSE;
+
+	// --------------------------------------------------------------------
 
-		log_message('debug', "Database Utility Class Initialized");
+	/**
+	 * Class constructor
+	 *
+	 * @param	object	&$db	Database object
+	 * @return	void
+	 */
+	public function __construct(&$db)
+	{
+		$this->db =& $db;
+		log_message('info', 'Database Utility Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -47,29 +95,34 @@
 	/**
 	 * List databases
 	 *
-	 * @access	public
-	 * @return	bool
+	 * @return	array
 	 */
-	function list_databases()
+	public function list_databases()
 	{
 		// Is there a cached result?
-		if (isset($this->data_cache['db_names']))
+		if (isset($this->db->data_cache['db_names']))
 		{
-			return $this->data_cache['db_names'];
+			return $this->db->data_cache['db_names'];
 		}
-
-		$query = $this->db->query($this->_list_databases());
-		$dbs = array();
-		if ($query->num_rows() > 0)
+		elseif ($this->_list_databases === FALSE)
 		{
-			foreach ($query->result_array() as $row)
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
+
+		$this->db->data_cache['db_names'] = array();
+
+		$query = $this->db->query($this->_list_databases);
+		if ($query === FALSE)
 			{
-				$dbs[] = current($row);
+			return $this->db->data_cache['db_names'];
 			}
+
+		for ($i = 0, $query = $query->result_array(), $c = count($query); $i < $c; $i++)
+		{
+			$this->db->data_cache['db_names'][] = current($query[$i]);
 		}
 
-		$this->data_cache['db_names'] = $dbs;
-		return $this->data_cache['db_names'];
+		return $this->db->data_cache['db_names'];
 	}
 
 	// --------------------------------------------------------------------
@@ -77,26 +130,14 @@
 	/**
 	 * Determine if a particular database exists
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	boolean
-	 */
-	function database_exists($database_name)
-	{
-		// Some databases won't have access to the list_databases() function, so
-		// this is intended to allow them to override with their own functions as
-		// defined in $driver_utility.php
-		if (method_exists($this, '_database_exists'))
-		{
-			return $this->_database_exists($database_name);
-		}
-		else
+	 * @param	string	$database_name
+	 * @return	bool
+	 */
+	public function database_exists($database_name)
 		{
-			return ( ! in_array($database_name, $this->list_databases())) ? FALSE : TRUE;
-		}
+		return in_array($database_name, $this->list_databases());
 	}
 
-
 	// --------------------------------------------------------------------
 
 	/**
@@ -102,25 +143,24 @@
 	/**
 	 * Optimize Table
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	bool
+	 * @param	string	$table_name
+	 * @return	mixed
 	 */
-	function optimize_table($table_name)
+	public function optimize_table($table_name)
 	{
-		$sql = $this->_optimize_table($table_name);
-
-		if (is_bool($sql))
+		if ($this->_optimize_table === FALSE)
 		{
-				show_error('db_must_use_set');
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
 		}
 
-		$query = $this->db->query($sql);
-		$res = $query->result_array();
+		$query = $this->db->query(sprintf($this->_optimize_table, $this->db->escape_identifiers($table_name)));
+		if ($query !== FALSE)
+		{
+			$query = $query->result_array();
+			return current($query);
+		}
 
-		// Note: Due to a bug in current() that affects some versions
-		// of PHP we can not pass function call directly into it
-		return current($res);
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -128,27 +168,26 @@
 	/**
 	 * Optimize Database
 	 *
-	 * @access	public
-	 * @return	array
+	 * @return	mixed
 	 */
-	function optimize_database()
+	public function optimize_database()
+	{
+		if ($this->_optimize_table === FALSE)
 	{
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
+		}
+
 		$result = array();
 		foreach ($this->db->list_tables() as $table_name)
 		{
-			$sql = $this->_optimize_table($table_name);
-
-			if (is_bool($sql))
+			$res = $this->db->query(sprintf($this->_optimize_table, $this->db->escape_identifiers($table_name)));
+			if (is_bool($res))
 			{
-				return $sql;
+				return $res;
 			}
 
-			$query = $this->db->query($sql);
-
 			// Build the result array...
-			// Note: Due to a bug in current() that affects some versions
-			// of PHP we can not pass function call directly into it
-			$res = $query->result_array();
+			$res = $res->result_array();
 			$res = current($res);
 			$key = str_replace($this->db->database.'.', '', current($res));
 			$keys = array_keys($res);
@@ -165,25 +204,24 @@
 	/**
 	 * Repair Table
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	bool
+	 * @param	string	$table_name
+	 * @return	mixed
 	 */
-	function repair_table($table_name)
+	public function repair_table($table_name)
 	{
-		$sql = $this->_repair_table($table_name);
-
-		if (is_bool($sql))
+		if ($this->_repair_table === FALSE)
 		{
-			return $sql;
+			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
 		}
 
-		$query = $this->db->query($sql);
+		$query = $this->db->query(sprintf($this->_repair_table, $this->db->escape_identifiers($table_name)));
+		if (is_bool($query))
+		{
+			return $query;
+		}
 
-		// Note: Due to a bug in current() that affects some versions
-		// of PHP we can not pass function call directly into it
-		$res = $query->result_array();
-		return current($res);
+		$query = $query->result_array();
+		return current($query);
 	}
 
 	// --------------------------------------------------------------------
@@ -191,14 +229,13 @@
 	/**
 	 * Generate CSV from a query result object
 	 *
-	 * @access	public
-	 * @param	object	The query result object
-	 * @param	string	The delimiter - comma by default
-	 * @param	string	The newline character - \n by default
-	 * @param	string	The enclosure - double quote by default
+	 * @param	object	$query		Query result object
+	 * @param	string	$delim		Delimiter (default: ,)
+	 * @param	string	$newline	Newline character (default: \n)
+	 * @param	string	$enclosure	Enclosure (default: ")
 	 * @return	string
 	 */
-	function csv_from_result($query, $delim = ",", $newline = "\n", $enclosure = '"')
+	public function csv_from_result($query, $delim = ',', $newline = "\n", $enclosure = '"')
 	{
 		if ( ! is_object($query) OR ! method_exists($query, 'list_fields'))
 		{
@@ -213,18 +249,17 @@
 			$out .= $enclosure.str_replace($enclosure, $enclosure.$enclosure, $name).$enclosure.$delim;
 		}
 
-		$out = rtrim($out);
-		$out .= $newline;
+		$out = substr($out, 0, -strlen($delim)).$newline;
 
 		// Next blast through the result array and build out the rows
-		foreach ($query->result_array() as $row)
+		while ($row = $query->unbuffered_row('array'))
 		{
+			$line = array();
 			foreach ($row as $item)
 			{
-				$out .= $enclosure.str_replace($enclosure, $enclosure.$enclosure, $item).$enclosure.$delim;
+				$line[] = $enclosure.str_replace($enclosure, $enclosure.$enclosure, $item).$enclosure;
 			}
-			$out = rtrim($out);
-			$out .= $newline;
+			$out .= implode($delim, $line).$newline;
 		}
 
 		return $out;
@@ -235,12 +270,11 @@
 	/**
 	 * Generate XML data from a query result object
 	 *
-	 * @access	public
-	 * @param	object	The query result object
-	 * @param	array	Any preferences
+	 * @param	object	$query	Query result object
+	 * @param	array	$params	Any preferences
 	 * @return	string
 	 */
-	function xml_from_result($query, $params = array())
+	public function xml_from_result($query, $params = array())
 	{
 		if ( ! is_object($query) OR ! method_exists($query, 'list_fields'))
 		{
@@ -260,24 +294,21 @@
 		extract($params);
 
 		// Load the xml helper
-		$CI =& get_instance();
-		$CI->load->helper('xml');
+		get_instance()->load->helper('xml');
 
 		// Generate the result
-		$xml = "<{$root}>".$newline;
-		foreach ($query->result_array() as $row)
+		$xml = '<'.$root.'>'.$newline;
+		while ($row = $query->unbuffered_row())
 		{
-			$xml .= $tab."<{$element}>".$newline;
-
+			$xml .= $tab.'<'.$element.'>'.$newline;
 			foreach ($row as $key => $val)
 			{
-				$xml .= $tab.$tab."<{$key}>".xml_convert($val)."</{$key}>".$newline;
+				$xml .= $tab.$tab.'<'.$key.'>'.xml_convert($val).'</'.$key.'>'.$newline;
 			}
-			$xml .= $tab."</{$element}>".$newline;
+			$xml .= $tab.'</'.$element.'>'.$newline;
 		}
-		$xml .= "</$root>".$newline;
 
-		return $xml;
+		return $xml.'</'.$root.'>'.$newline;
 	}
 
 	// --------------------------------------------------------------------
@@ -285,10 +316,10 @@
 	/**
 	 * Database Backup
 	 *
-	 * @access	public
-	 * @return	void
+	 * @param	array	$params
+	 * @return	string
 	 */
-	function backup($params = array())
+	public function backup($params = array())
 	{
 		// If the parameters have not been submitted as an
 		// array then we know that it is simply the table
@@ -298,8 +329,6 @@
 			$params = array('tables' => $params);
 		}
 
-		// ------------------------------------------------------
-
 		// Set up our default preferences
 		$prefs = array(
 							'tables'		=> array(),
@@ -308,7 +337,8 @@
 							'format'		=> 'gzip', // gzip, zip, txt
 							'add_drop'		=> TRUE,
 							'add_insert'	=> TRUE,
-							'newline'		=> "\n"
+			'newline'		=> "\n",
+			'foreign_key_checks'	=> TRUE
 						);
 
 		// Did the user submit any preferences? If so set them....
@@ -323,82 +353,57 @@
 			}
 		}
 
-		// ------------------------------------------------------
-
 		// Are we backing up a complete database or individual tables?
 		// If no table names were submitted we'll fetch the entire table list
-		if (count($prefs['tables']) == 0)
+		if (count($prefs['tables']) === 0)
 		{
 			$prefs['tables'] = $this->db->list_tables();
 		}
 
-		// ------------------------------------------------------
-
 		// Validate the format
 		if ( ! in_array($prefs['format'], array('gzip', 'zip', 'txt'), TRUE))
 		{
 			$prefs['format'] = 'txt';
 		}
 
-		// ------------------------------------------------------
-
 		// Is the encoder supported?  If not, we'll either issue an
 		// error or use plain text depending on the debug settings
-		if (($prefs['format'] == 'gzip' AND ! @function_exists('gzencode'))
-		OR ($prefs['format'] == 'zip'  AND ! @function_exists('gzcompress')))
+		if (($prefs['format'] === 'gzip' && ! function_exists('gzencode'))
+			OR ($prefs['format'] === 'zip' && ! function_exists('gzcompress')))
 		{
 			if ($this->db->db_debug)
 			{
-				return $this->db->display_error('db_unsuported_compression');
+				return $this->db->display_error('db_unsupported_compression');
 			}
 
 			$prefs['format'] = 'txt';
 		}
 
-		// ------------------------------------------------------
-
-		// Set the filename if not provided - Only needed with Zip files
-		if ($prefs['filename'] == '' AND $prefs['format'] == 'zip')
-		{
-			$prefs['filename'] = (count($prefs['tables']) == 1) ? $prefs['tables'] : $this->db->database;
-			$prefs['filename'] .= '_'.date('Y-m-d_H-i', time());
-		}
-
-		// ------------------------------------------------------
-
-		// Was a Gzip file requested?
-		if ($prefs['format'] == 'gzip')
+		// Was a Zip file requested?
+		if ($prefs['format'] === 'zip')
 		{
-			return gzencode($this->_backup($prefs));
-		}
-
-		// ------------------------------------------------------
-
-		// Was a text file requested?
-		if ($prefs['format'] == 'txt')
+			// Set the filename if not provided (only needed with Zip files)
+			if ($prefs['filename'] === '')
 		{
-			return $this->_backup($prefs);
+				$prefs['filename'] = (count($prefs['tables']) === 1 ? $prefs['tables'] : $this->db->database)
+							.date('Y-m-d_H-i', time()).'.sql';
 		}
-
-		// ------------------------------------------------------
-
-		// Was a Zip file requested?
-		if ($prefs['format'] == 'zip')
+			else
 		{
 			// If they included the .zip file extension we'll remove it
-			if (preg_match("|.+?\.zip$|", $prefs['filename']))
+				if (preg_match('|.+?\.zip$|', $prefs['filename']))
 			{
 				$prefs['filename'] = str_replace('.zip', '', $prefs['filename']);
 			}
 
 			// Tack on the ".sql" file extension if needed
-			if ( ! preg_match("|.+?\.sql$|", $prefs['filename']))
+				if ( ! preg_match('|.+?\.sql$|', $prefs['filename']))
 			{
 				$prefs['filename'] .= '.sql';
 			}
+			}
 
 			// Load the Zip class and output it
-
 			$CI =& get_instance();
 			$CI->load->library('zip');
 			$CI->zip->add_data($prefs['filename'], $this->_backup($prefs));
@@ -404,11 +409,16 @@
 			$CI->zip->add_data($prefs['filename'], $this->_backup($prefs));
 			return $CI->zip->get_zip();
 		}
-
+		elseif ($prefs['format'] === 'txt') // Was a text file requested?
+		{
+			return $this->_backup($prefs);
 	}
-
+		elseif ($prefs['format'] === 'gzip') // Was a Gzip file requested?
+		{
+			return gzencode($this->_backup($prefs));
 }
 
+		return;
+	}
 
-/* End of file DB_utility.php */
-/* Location: ./system/database/DB_utility.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/cubrid/cubrid_driver.php opensourcepos/system/database/drivers/cubrid/cubrid_driver.php
--- pos-prod/system/database/drivers/cubrid/cubrid_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/cubrid/cubrid_driver.php	2016-05-23 15:32:31.936838928 -0700
@@ -1,108 +1,135 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		Esen Sagynov
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 2.0.2
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CUBRID Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
  * @author		Esen Sagynov
- * @link		http://codeigniter.com/user_guide/database/
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_cubrid_driver extends CI_DB {
 
-	// Default CUBRID Broker port. Will be used unless user
-	// explicitly specifies another one.
-	const DEFAULT_PORT = 33000;
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver = 'cubrid';
 
-	var $dbdriver = 'cubrid';
+	/**
+	 * Auto-commit flag
+	 *
+	 * @var	bool
+	 */
+	public $auto_commit = TRUE;
 
-	// The character used for escaping - no need in CUBRID
-	var	$_escape_char = '';
+	// --------------------------------------------------------------------
 
-	// clause and character used for LIKE escape sequences - not used in CUBRID
-	var $_like_escape_str = '';
-	var $_like_escape_chr = '';
+	/**
+	 * Identifier escape character
+	 *
+	 * @var	string
+	 */
+	protected $_escape_char = '`';
 
 	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
+	 * ORDER BY random keyword
+	 *
+	 * @var	array
 	 */
-	var $_count_string = 'SELECT COUNT(*) AS ';
-	var $_random_keyword = ' RAND()'; // database specific random keyword
+	protected $_random_keyword = array('RANDOM()', 'RANDOM(%d)');
+
+	// --------------------------------------------------------------------
 
 	/**
-	 * Non-persistent database connection
+	 * Class constructor
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @param	array	$params
+	 * @return	void
 	 */
-	function db_connect()
-	{
-		// If no port is defined by the user, use the default value
-		if ($this->port == '')
+	public function __construct($params)
 		{
-			$this->port = self::DEFAULT_PORT;
-		}
-
-		$conn = cubrid_connect($this->hostname, $this->port, $this->database, $this->username, $this->password);
+		parent::__construct($params);
 
-		if ($conn)
+		if (preg_match('/^CUBRID:[^:]+(:[0-9][1-9]{0,4})?:[^:]+:[^:]*:[^:]*:(\?.+)?$/', $this->dsn, $matches))
 		{
-			// Check if a user wants to run queries in dry, i.e. run the
-			// queries but not commit them.
-			if (isset($this->auto_commit) && ! $this->auto_commit)
+			if (stripos($matches[2], 'autocommit=off') !== FALSE)
 			{
-				cubrid_set_autocommit($conn, CUBRID_AUTOCOMMIT_FALSE);
+				$this->auto_commit = FALSE;
+			}
 			}
 			else
 			{
-				cubrid_set_autocommit($conn, CUBRID_AUTOCOMMIT_TRUE);
-				$this->auto_commit = TRUE;
-			}
+			// If no port is defined by the user, use the default value
+			empty($this->port) OR $this->port = 33000;
 		}
-
-		return $conn;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Persistent database connection
-	 * In CUBRID persistent DB connection is supported natively in CUBRID
-	 * engine which can be configured in the CUBRID Broker configuration
-	 * file by setting the CCI_PCONNECT parameter to ON. In that case, all
-	 * connections established between the client application and the
-	 * server will become persistent. This is calling the same
-	 * @cubrid_connect function will establish persisten connection
-	 * considering that the CCI_PCONNECT is ON.
+	 * Non-persistent database connection
 	 *
-	 * @access	private called by the base class
+	 * @param	bool	$persistent
 	 * @return	resource
 	 */
-	function db_pconnect()
+	public function db_connect($persistent = FALSE)
+	{
+		if (preg_match('/^CUBRID:[^:]+(:[0-9][1-9]{0,4})?:[^:]+:([^:]*):([^:]*):(\?.+)?$/', $this->dsn, $matches))
 	{
-		return $this->db_connect();
+			$func = ($persistent !== TRUE) ? 'cubrid_connect_with_url' : 'cubrid_pconnect_with_url';
+			return ($matches[2] === '' && $matches[3] === '' && $this->username !== '' && $this->password !== '')
+				? $func($this->dsn, $this->username, $this->password)
+				: $func($this->dsn);
+		}
+
+		$func = ($persistent !== TRUE) ? 'cubrid_connect' : 'cubrid_pconnect';
+		return ($this->username !== '')
+			? $func($this->hostname, $this->port, $this->database, $this->username, $this->password)
+			: $func($this->hostname, $this->port, $this->database);
 	}
 
 	// --------------------------------------------------------------------
@@ -113,10 +140,9 @@
 	 * Keep / reestablish the db connection if no queries have been
 	 * sent for a length of time exceeding the server's idle timeout
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function reconnect()
+	public function reconnect()
 	{
 		if (cubrid_ping($this->conn_id) === FALSE)
 		{
@@ -127,54 +153,20 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * Database version number
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @return	string
 	 */
-	function db_select()
+	public function version()
 	{
-		// In CUBRID there is no need to select a database as the database
-		// is chosen at the connection time.
-		// So, to determine if the database is "selected", all we have to
-		// do is ping the server and return that value.
-		return cubrid_ping($this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Set client character set
-	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
-	 */
-	function db_set_charset($charset, $collation)
+		if (isset($this->data_cache['version']))
 	{
-		// In CUBRID, there is no need to set charset or collation.
-		// This is why returning true will allow the application continue
-		// its normal process.
-		return TRUE;
+			return $this->data_cache['version'];
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Version number query string
-	 *
-	 * @access	public
-	 * @return	string
-	 */
-	function _version()
-	{
-		// To obtain the CUBRID Server version, no need to run the SQL query.
-		// CUBRID PHP API provides a function to determin this value.
-		// This is why we also need to add 'cubrid' value to the list of
-		// $driver_version_exceptions array in DB_driver class in
-		// version() function.
-		return cubrid_get_server_info($this->conn_id);
+		return ( ! $this->conn_id OR ($version = cubrid_get_server_info($this->conn_id)) === FALSE)
+			? FALSE
+			: $this->data_cache['version'] = $version;
 	}
 
 	// --------------------------------------------------------------------
@@ -182,31 +174,12 @@
 	/**
 	 * Execute the query
 	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
+	 * @param	string	$sql	an SQL query
 	 * @return	resource
 	 */
-	function _execute($sql)
+	protected function _execute($sql)
 	{
-		$sql = $this->_prep_query($sql);
-		return @cubrid_query($sql, $this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
-	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
-	 */
-	function _prep_query($sql)
-	{
-		// No need to prepare
-		return $sql;
+		return cubrid_query($sql, $this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -214,30 +187,17 @@
 	/**
 	 * Begin Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_begin($test_mode = FALSE)
+	protected function _trans_begin()
 	{
-		if ( ! $this->trans_enabled)
+		if (($autocommit = cubrid_get_autocommit($this->conn_id)) === NULL)
 		{
-			return TRUE;
+			return FALSE;
 		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		elseif ($autocommit === TRUE)
 		{
-			return TRUE;
-		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		if (cubrid_get_autocommit($this->conn_id))
-		{
-			cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_FALSE);
+			return cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_FALSE);
 		}
 
 		return TRUE;
@@ -248,27 +208,18 @@
 	/**
 	 * Commit Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_commit()
+	protected function _trans_commit()
 	{
-		if ( ! $this->trans_enabled)
+		if ( ! cubrid_commit($this->conn_id))
 		{
-			return TRUE;
+			return FALSE;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		cubrid_commit($this->conn_id);
-
 		if ($this->auto_commit && ! cubrid_get_autocommit($this->conn_id))
 		{
-			cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE);
+			return cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE);
 		}
 
 		return TRUE;
@@ -279,24 +230,15 @@
 	/**
 	 * Rollback Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_rollback()
+	protected function _trans_rollback()
 	{
-		if ( ! $this->trans_enabled)
+		if ( ! cubrid_rollback($this->conn_id))
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
+			return FALSE;
 		}
 
-		cubrid_rollback($this->conn_id);
-
 		if ($this->auto_commit && ! cubrid_get_autocommit($this->conn_id))
 		{
 			cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE);
@@ -308,41 +250,14 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Platform-dependant string escape
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
 	 * @return	string
 	 */
-	function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
-		{
-			foreach ($str as $key => $val)
+	protected function _escape_str($str)
 			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
-		}
-
-		if (function_exists('cubrid_real_escape_string') AND is_resource($this->conn_id))
-		{
-			$str = cubrid_real_escape_string($str, $this->conn_id);
-		}
-		else
-		{
-			$str = addslashes($str);
-		}
-
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
-		{
-			$str = str_replace(array('%', '_'), array('\\%', '\\_'), $str);
-		}
-
-		return $str;
+		return cubrid_real_escape_string($str, $this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -350,12 +265,11 @@
 	/**
 	 * Affected Rows
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function affected_rows()
+	public function affected_rows()
 	{
-		return @cubrid_affected_rows($this->conn_id);
+		return cubrid_affected_rows();
 	}
 
 	// --------------------------------------------------------------------
@@ -363,43 +277,11 @@
 	/**
 	 * Insert ID
 	 *
-	 * @access	public
-	 * @return	integer
-	 */
-	function insert_id()
-	{
-		return @cubrid_insert_id($this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified table
-	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
+	 * @return	int
 	 */
-	function count_all($table = '')
+	public function insert_id()
 	{
-		if ($table == '')
-		{
-			return 0;
-		}
-		
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
-		{
-			return 0;
-		}
-
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		return cubrid_insert_id($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -409,17 +291,16 @@
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	private
-	 * @param	boolean
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _list_tables($prefix_limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		$sql = "SHOW TABLES";
+		$sql = 'SHOW TABLES';
 
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 		{
-			$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%'";
+			return $sql." LIKE '".$this->escape_like_str($this->dbprefix)."%'";
 		}
 
 		return $sql;
@@ -432,343 +313,81 @@
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _list_columns($table = '')
+	protected function _list_columns($table = '')
 	{
-		return "SHOW COLUMNS FROM ".$this->_protect_identifiers($table, TRUE, NULL, FALSE);
+		return 'SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
+	 * Returns an object with field data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
+	 * @param	string	$table
+	 * @return	array
 	 */
-	function _field_data($table)
+	public function field_data($table)
 	{
-		return "SELECT * FROM ".$table." LIMIT 1";
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access	private
-	 * @return	string
-	 */
-	function _error_message()
+		if (($query = $this->query('SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE)
 	{
-		return cubrid_error($this->conn_id);
+			return FALSE;
 	}
+		$query = $query->result_object();
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message number
-	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 	{
-		return cubrid_errno($this->conn_id);
-	}
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->Field;
 
-	// --------------------------------------------------------------------
+			sscanf($query[$i]->Type, '%[a-z](%d)',
+				$retval[$i]->type,
+				$retval[$i]->max_length
+			);
 
-	/**
-	 * Escape the SQL Identifiers
-	 *
-	 * This function escapes column and table names
-	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
-	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
-		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
-		}
-
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
-		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
-		}
-
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
-	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
-	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
-		{
-			$tables = array($tables);
-		}
-
-		return '('.implode(', ', $tables).')';
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
-	 */
-	function _insert($table, $keys, $values)
-	{
-		return "INSERT INTO ".$table." (\"".implode('", "', $keys)."\") VALUES (".implode(', ', $values).")";
-	}
-
-	// --------------------------------------------------------------------
-
-
-	/**
-	 * Replace statement
-	 *
-	 * Generates a platform-specific replace string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
-	 */
-	function _replace($table, $keys, $values)
-	{
-		return "REPLACE INTO ".$table." (\"".implode('", "', $keys)."\") VALUES (".implode(', ', $values).")";
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert_batch statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
-	 */
-	function _insert_batch($table, $keys, $values)
-	{
-		return "INSERT INTO ".$table." (\"".implode('", "', $keys)."\") VALUES ".implode(', ', $values);
-	}
-
-	// --------------------------------------------------------------------
-
-
-	/**
-	 * Update statement
-	 *
-	 * Generates a platform-specific update string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
-	 * @return	string
-	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
-	{
-		foreach ($values as $key => $val)
-		{
-			$valstr[] = sprintf('"%s" = %s', $key, $val);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
-	}
-
-	// --------------------------------------------------------------------
-
-
-	/**
-	 * Update_Batch statement
-	 *
-	 * Generates a platform-specific batch update string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @return	string
-	 */
-	function _update_batch($table, $values, $index, $where = NULL)
-	{
-		$ids = array();
-		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
-
-		foreach ($values as $key => $val)
-		{
-			$ids[] = $val[$index];
-
-			foreach (array_keys($val) as $field)
-			{
-				if ($field != $index)
-				{
-					$final[$field][] = 'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
-				}
-			}
-		}
-
-		$sql = "UPDATE ".$table." SET ";
-		$cases = '';
-
-		foreach ($final as $k => $v)
-		{
-			$cases .= $k.' = CASE '."\n";
-			foreach ($v as $row)
-			{
-				$cases .= $row."\n";
-			}
-
-			$cases .= 'ELSE '.$k.' END, ';
+			$retval[$i]->default		= $query[$i]->Default;
+			$retval[$i]->primary_key	= (int) ($query[$i]->Key === 'PRI');
 		}
 
-		$sql .= substr($cases, 0, -2);
-
-		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
-
-		return $sql;
-	}
-
-	// --------------------------------------------------------------------
-
-
-	/**
-	 * Truncate statement
-	 *
-	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _truncate($table)
-	{
-		return "TRUNCATE ".$table;
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Delete statement
+	 * Error
 	 *
-	 * Generates a platform-specific delete string from the supplied data
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
-	 * @return	string
+	 * @return	array
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
-	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
+	public function error()
 		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
-			{
-				$conditions .= " AND ";
-			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		return "DELETE FROM ".$table.$conditions.$limit;
+		return array('code' => cubrid_errno($this->conn_id), 'message' => cubrid_error($this->conn_id));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Limit string
+	 * FROM tables
 	 *
-	 * Generates a platform-specific LIMIT clause
+	 * Groups tables in FROM clauses if needed, so there is no confusion
+	 * about operator precedence.
 	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
 	 * @return	string
 	 */
-	function _limit($sql, $limit, $offset)
-	{
-		if ($offset == 0)
+	protected function _from_tables()
 		{
-			$offset = '';
-		}
-		else
+		if ( ! empty($this->qb_join) && count($this->qb_from) > 1)
 		{
-			$offset .= ", ";
+			return '('.implode(', ', $this->qb_from).')';
 		}
 
-		return $sql."LIMIT ".$offset.$limit;
+		return implode(', ', $this->qb_from);
 	}
 
 	// --------------------------------------------------------------------
@@ -776,17 +395,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@cubrid_close($conn_id);
+		cubrid_close($this->conn_id);
 	}
 
 }
-
-
-/* End of file cubrid_driver.php */
-/* Location: ./system/database/drivers/cubrid/cubrid_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/cubrid/cubrid_forge.php opensourcepos/system/database/drivers/cubrid/cubrid_forge.php
--- pos-prod/system/database/drivers/cubrid/cubrid_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/cubrid/cubrid_forge.php	2016-05-23 15:32:31.936838928 -0700
@@ -1,288 +1,227 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		Esen Sagynov
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CUBRID Forge Class
  *
  * @category	Database
  * @author		Esen Sagynov
- * @link		http://codeigniter.com/user_guide/database/
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_cubrid_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE DATABASE statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database($name)
-	{
-		// CUBRID does not allow to create a database in SQL. The GUI tools
-		// have to be used for this purpose.
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_create_database	= FALSE;
 
 	/**
-	 * Drop database
+	 * CREATE TABLE keys flag
+	 *
+	 * Whether table keys are created from within the
+	 * CREATE TABLE statement.
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	bool
 	 */
-	function _drop_database($name)
-	{
-		// CUBRID does not allow to drop a database in SQL. The GUI tools
-		// have to be used for this purpose.
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_create_table_keys	= TRUE;
 
 	/**
-	 * Process Fields
+	 * DROP DATABASE statement
 	 *
-	 * @access	private
-	 * @param	mixed	the fields
-	 * @return	string
+	 * @var	string
 	 */
-	function _process_fields($fields)
-	{
-		$current_field_count = 0;
-		$sql = '';
-
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
+	protected $_drop_database	= FALSE;
 
-				$sql .= "\n\t\"" . $this->db->_protect_identifiers($field) . "\"";
+	/**
+	 * CREATE TABLE IF statement
+	 *
+	 * @var	string
+	 */
+	protected $_create_table_if	= FALSE;
 
-				if (array_key_exists('NAME', $attributes))
-				{
-					$sql .= ' '.$this->db->_protect_identifiers($attributes['NAME']).' ';
-				}
+	/**
+	 * UNSIGNED support
+	 *
+	 * @var	array
+	 */
+	protected $_unsigned		= array(
+		'SHORT'		=> 'INTEGER',
+		'SMALLINT'	=> 'INTEGER',
+		'INT'		=> 'BIGINT',
+		'INTEGER'	=> 'BIGINT',
+		'BIGINT'	=> 'NUMERIC',
+		'FLOAT'		=> 'DOUBLE',
+		'REAL'		=> 'DOUBLE'
+	);
 
-				if (array_key_exists('TYPE', $attributes))
-				{
-					$sql .= ' '.$attributes['TYPE'];
+	// --------------------------------------------------------------------
 
-					if (array_key_exists('CONSTRAINT', $attributes))
-					{
-						switch ($attributes['TYPE'])
+	/**
+	 * ALTER TABLE
+	 *
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
+	 */
+	protected function _alter_table($alter_type, $table, $field)
 						{
-							case 'decimal':
-							case 'float':
-							case 'numeric':
-								$sql .= '('.implode(',', $attributes['CONSTRAINT']).')';
-								break;
-							case 'enum': 	// As of version 8.4.0 CUBRID does not support
-											// enum data type.
-											break;
-							case 'set':
-								$sql .= '("'.implode('","', $attributes['CONSTRAINT']).'")';
-								break;
-							default:
-								$sql .= '('.$attributes['CONSTRAINT'].')';
-						}
-					}
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
+		if (in_array($alter_type, array('DROP', 'ADD'), TRUE))
 				{
-					//$sql .= ' UNSIGNED';
-					// As of version 8.4.0 CUBRID does not support UNSIGNED INTEGER data type.
-					// Will be supported in the next release as a part of MySQL Compatibility.
+			return parent::_alter_table($alter_type, $table, $field);
 				}
 
-				if (array_key_exists('DEFAULT', $attributes))
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
+		$sqls = array();
+		for ($i = 0, $c = count($field); $i < $c; $i++)
 				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
+			if ($field[$i]['_literal'] !== FALSE)
 				{
-					$sql .= ' NULL';
+				$sqls[] = $sql.' CHANGE '.$field[$i]['_literal'];
 				}
 				else
 				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' AUTO_INCREMENT';
-				}
-
-				if (array_key_exists('UNIQUE', $attributes) && $attributes['UNIQUE'] === TRUE)
-				{
-					$sql .= ' UNIQUE';
+				$alter_type = empty($field[$i]['new_name']) ? ' MODIFY ' : ' CHANGE ';
+				$sqls[] = $sql.$alter_type.$this->_process_column($field[$i]);
 				}
 			}
 
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
-			{
-				$sql .= ',';
-			}
-		}
-
-		return $sql;
+		return $sqls;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * Process column
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	mixed	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @param	array	$field
+	 * @return	string
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
+	protected function _process_column($field)
 	{
-		$sql = 'CREATE TABLE ';
+		$extra_clause = isset($field['after'])
+			? ' AFTER '.$this->db->escape_identifiers($field['after']) : '';
 
-		if ($if_not_exists === TRUE)
+		if (empty($extra_clause) && isset($field['first']) && $field['first'] === TRUE)
 		{
-			//$sql .= 'IF NOT EXISTS ';
-			// As of version 8.4.0 CUBRID does not support this SQL syntax.
+			$extra_clause = ' FIRST';
 		}
 
-		$sql .= $this->db->_escape_identifiers($table)." (";
-
-		$sql .= $this->_process_fields($fields);
-
-		// If there is a PK defined
-		if (count($primary_keys) > 0)
-		{
-			$key_name = "pk_" . $table . "_" .
-				$this->db->_protect_identifiers(implode('_', $primary_keys));
-			
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tCONSTRAINT " . $key_name . " PRIMARY KEY(" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key_name = $this->db->_protect_identifiers(implode('_', $key));
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key_name = $this->db->_protect_identifiers($key);
-					$key = array($key_name);
-				}
-				
-				$sql .= ",\n\tKEY \"{$key_name}\" (" . implode(', ', $key) . ")";
-			}
-		}
-
-		$sql .= "\n);";
-
-		return $sql;
+		return $this->db->escape_identifiers($field['name'])
+			.(empty($field['new_name']) ? '' : ' '.$this->db->escape_identifiers($field['new_name']))
+			.' '.$field['type'].$field['length']
+			.$field['unsigned']
+			.$field['null']
+			.$field['default']
+			.$field['auto_increment']
+			.$field['unique']
+			.$extra_clause;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop Table
+	 * Field attribute TYPE
 	 *
-	 * @access	private
-	 * @return	string
+	 * Performs a data type mapping between different databases.
+	 *
+	 * @param	array	&$attributes
+	 * @return	void
 	 */
-	function _drop_table($table)
+	protected function _attr_type(&$attributes)
+	{
+		switch (strtoupper($attributes['TYPE']))
 	{
-		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table);
+			case 'TINYINT':
+				$attributes['TYPE'] = 'SMALLINT';
+				$attributes['UNSIGNED'] = FALSE;
+				return;
+			case 'MEDIUMINT':
+				$attributes['TYPE'] = 'INTEGER';
+				$attributes['UNSIGNED'] = FALSE;
+				return;
+			default: return;
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
-	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * Process indexes
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	array	fields
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	string	$table	(ignored)
+	 * @return	string
 	 */
-	function _alter_table($alter_type, $table, $fields, $after_field = '')
+	protected function _process_indexes($table)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ";
+		$sql = '';
 
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
+		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
+		{
+			if (is_array($this->keys[$i]))
+			{
+				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
 		{
-			return $sql.$this->db->_protect_identifiers($fields);
+					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
+					{
+						unset($this->keys[$i][$i2]);
+						continue;
 		}
-
-		$sql .= $this->_process_fields($fields);
-
-		if ($after_field != '')
+				}
+			}
+			elseif ( ! isset($this->fields[$this->keys[$i]]))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+				unset($this->keys[$i]);
+				continue;
 		}
 
-		return $sql;
+			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
+
+			$sql .= ",\n\tKEY ".$this->db->escape_identifiers(implode('_', $this->keys[$i]))
+				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).')';
 	}
 
-	// --------------------------------------------------------------------
+		$this->keys = array();
 
-	/**
-	 * Rename a table
-	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
-	 */
-	function _rename_table($table_name, $new_table_name)
-	{
-		$sql = 'RENAME TABLE '.$this->db->_protect_identifiers($table_name)." AS ".$this->db->_protect_identifiers($new_table_name);
 		return $sql;
 	}
 
 }
-
-/* End of file cubrid_forge.php */
-/* Location: ./system/database/drivers/cubrid/cubrid_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/cubrid/cubrid_result.php opensourcepos/system/database/drivers/cubrid/cubrid_result.php
--- pos-prod/system/database/drivers/cubrid/cubrid_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/cubrid/cubrid_result.php	2016-05-23 15:32:31.936838928 -0700
@@ -1,19 +1,41 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		Esen Sagynov
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 2.0.2
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// --------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CUBRID Result Class
@@ -22,19 +44,20 @@
  *
  * @category	Database
  * @author		Esen Sagynov
- * @link		http://codeigniter.com/user_guide/database/
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_cubrid_result extends CI_DB_result {
 
 	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
 	{
-		return @cubrid_num_rows($this->result_id);
+		return is_int($this->num_rows)
+			? $this->num_rows
+			: $this->num_rows = cubrid_num_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -42,12 +65,11 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
-		return @cubrid_num_fields($this->result_id);
+		return cubrid_num_fields($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -57,10 +79,9 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		return cubrid_column_names($this->result_id);
 	}
@@ -72,59 +93,19 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
 
-		$tablePrimaryKeys = array();
-
-		while ($field = cubrid_fetch_field($this->result_id))
-		{
-			$F				= new stdClass();
-			$F->name		= $field->name;
-			$F->type		= $field->type;
-			$F->default		= $field->def;
-			$F->max_length	= $field->max_length;
-
-			// At this moment primary_key property is not returned when
-			// cubrid_fetch_field is called. The following code will
-			// provide a patch for it. primary_key property will be added
-			// in the next release.
-
-			// TODO: later version of CUBRID will provide primary_key
-			// property.
-			// When PK is defined in CUBRID, an index is automatically
-			// created in the db_index system table in the form of
-			// pk_tblname_fieldname. So the following will count how many
-			// columns are there which satisfy this format.
-			// The query will search for exact single columns, thus
-			// compound PK is not supported.
-			$res = cubrid_query($this->conn_id,
-				"SELECT COUNT(*) FROM db_index WHERE class_name = '" . $field->table .
-				"' AND is_primary_key = 'YES' AND index_name = 'pk_" .
-				$field->table . "_" . $field->name . "'"
-			);
-
-			if ($res)
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 			{
-				$row = cubrid_fetch_array($res, CUBRID_NUM);
-				$F->primary_key = ($row[0] > 0 ? 1 : null);
-			}
-			else
-			{
-				$F->primary_key = null;
-			}
-
-			if (is_resource($res))
-			{
-				cubrid_close_request($res);
-				$this->result_id = FALSE;
-			}
-
-			$retval[] = $F;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= cubrid_field_name($this->result_id, $i);
+			$retval[$i]->type		= cubrid_field_type($this->result_id, $i);
+			$retval[$i]->max_length		= cubrid_field_len($this->result_id, $i);
+			$retval[$i]->primary_key	= (int) (strpos(cubrid_field_flags($this->result_id, $i), 'primary_key') !== FALSE);
 		}
 
 		return $retval;
@@ -135,13 +116,12 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
-		if(is_resource($this->result_id) ||
-			get_resource_type($this->result_id) == "Unknown" &&
-			preg_match('/Resource id #/', strval($this->result_id)))
+		if (is_resource($this->result_id) OR
+			(get_resource_type($this->result_id) === 'Unknown' && preg_match('/Resource id #/', strval($this->result_id))))
 		{
 			cubrid_close_request($this->result_id);
 			$this->result_id = FALSE;
@@ -155,12 +135,12 @@
 	 *
 	 * Moves the internal pointer to the desired offset. We call
 	 * this internally before fetching results to make sure the
-	 * result set starts at zero
+	 * result set starts at zero.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	int	$n
+	 * @return	bool
 	 */
-	function _data_seek($n = 0)
+	public function data_seek($n = 0)
 	{
 		return cubrid_data_seek($this->result_id, $n);
 	}
@@ -172,10 +152,9 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return cubrid_fetch_assoc($this->result_id);
 	}
@@ -187,16 +166,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		return cubrid_fetch_object($this->result_id);
+		return cubrid_fetch_object($this->result_id, $class_name);
 	}
 
 }
-
-
-/* End of file cubrid_result.php */
-/* Location: ./system/database/drivers/cubrid/cubrid_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/cubrid/cubrid_utility.php opensourcepos/system/database/drivers/cubrid/cubrid_utility.php
--- pos-prod/system/database/drivers/cubrid/cubrid_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/cubrid/cubrid_utility.php	2016-05-23 15:32:31.936838928 -0700
@@ -1,108 +1,79 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		Esen Sagynov
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CUBRID Utility Class
  *
  * @category	Database
  * @author		Esen Sagynov
- * @link		http://codeigniter.com/user_guide/database/
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_cubrid_utility extends CI_DB_utility {
 
 	/**
 	 * List databases
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _list_databases()
-	{
-		// CUBRID does not allow to see the list of all databases on the
-		// server. It is the way its architecture is designed. Every
-		// database is independent and isolated.
-		// For this reason we can return only the name of the currect
-		// connected database.
-		if ($this->conn_id)
+	public function list_databases()
 		{
-			return "SELECT '" . $this->database . "'";
-		}
-		else
+		if (isset($this->db->data_cache['db_names']))
 		{
-			return FALSE;
+			return $this->db->data_cache['db_names'];
 		}
-	}
-
-	// --------------------------------------------------------------------
 
-	/**
-	 * Optimize table query
-	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 * @link 	http://www.cubrid.org/manual/840/en/Optimize%20Database
-	 */
-	function _optimize_table($table)
-	{
-		// No SQL based support in CUBRID as of version 8.4.0. Database or
-		// table optimization can be performed using CUBRID Manager
-		// database administration tool. See the link above for more info.
-		return FALSE;
+		return $this->db->data_cache['db_names'] = cubrid_list_dbs($this->db->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Repair table query
-	 *
-	 * Generates a platform-specific query so that a table can be repaired
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 * @link 	http://www.cubrid.org/manual/840/en/Checking%20Database%20Consistency
-	 */
-	function _repair_table($table)
-	{
-		// Not supported in CUBRID as of version 8.4.0. Database or
-		// table consistency can be checked using CUBRID Manager
-		// database administration tool. See the link above for more info.
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-	/**
 	 * CUBRID Export
 	 *
-	 * @access	private
 	 * @param	array	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// No SQL based support in CUBRID as of version 8.4.0. Database or
 		// table backup can be performed using CUBRID Manager
 		// database administration tool.
-		return $this->db->display_error('db_unsuported_feature');
+		return $this->db->display_error('db_unsupported_feature');
 	}
 }
-
-/* End of file cubrid_utility.php */
-/* Location: ./system/database/drivers/cubrid/cubrid_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/cubrid/index.html opensourcepos/system/database/drivers/cubrid/index.html
--- pos-prod/system/database/drivers/cubrid/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/cubrid/index.html	2016-05-23 15:32:31.936838928 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in opensourcepos/system/database/drivers: ibase
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/index.html opensourcepos/system/database/drivers/index.html
--- pos-prod/system/database/drivers/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/index.html	2016-05-23 15:32:31.937838914 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mssql/index.html opensourcepos/system/database/drivers/mssql/index.html
--- pos-prod/system/database/drivers/mssql/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mssql/index.html	2016-05-23 15:32:31.937838914 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mssql/mssql_driver.php opensourcepos/system/database/drivers/mssql/mssql_driver.php
--- pos-prod/system/database/drivers/mssql/mssql_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mssql/mssql_driver.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,374 +1,273 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MS SQL Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mssql_driver extends CI_DB {
 
-	var $dbdriver = 'mssql';
-
-	// The character used for escaping
-	var $_escape_char = '';
-
-	// clause and character used for LIKE escape sequences
-	var $_like_escape_str = " ESCAPE '%s' ";
-	var $_like_escape_chr = '!';
-
-	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
-	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword = ' ASC'; // not currently supported
-
 	/**
-	 * Non-persistent database connection
+	 * Database driver
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	string
 	 */
-	function db_connect()
-	{
-		if ($this->port != '')
-		{
-			$this->hostname .= ','.$this->port;
-		}
-
-		return @mssql_connect($this->hostname, $this->username, $this->password);
-	}
+	public $dbdriver = 'mssql';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Persistent database connection
+	 * ORDER BY random keyword
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	array
 	 */
-	function db_pconnect()
-	{
-		if ($this->port != '')
-		{
-			$this->hostname .= ','.$this->port;
-		}
-
-		return @mssql_pconnect($this->hostname, $this->username, $this->password);
-	}
-
-	// --------------------------------------------------------------------
+	protected $_random_keyword = array('NEWID()', 'RAND(%d)');
 
 	/**
-	 * Reconnect
+	 * Quoted identifier flag
 	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
+	 * Whether to use SQL-92 standard quoted identifier
+	 * (double quotes) or brackets for identifier escaping.
 	 *
-	 * @access	public
-	 * @return	void
+	 * @var	bool
 	 */
-	function reconnect()
-	{
-		// not implemented in MSSQL
-	}
+	protected $_quoted_identifier = TRUE;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * Class constructor
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * Appends the port number to the hostname, if needed.
+	 *
+	 * @param	array	$params
+	 * @return	void
 	 */
-	function db_select()
+	public function __construct($params)
 	{
-		// Note: The brackets are required in the event that the DB name
-		// contains reserved characters
-		return @mssql_select_db('['.$this->database.']', $this->conn_id);
-	}
+		parent::__construct($params);
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Set client character set
-	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
-	 */
-	function db_set_charset($charset, $collation)
+		if ( ! empty($this->port))
 	{
-		// @todo - add support if needed
-		return TRUE;
+			$this->hostname .= (DIRECTORY_SEPARATOR === '\\' ? ',' : ':').$this->port;
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Execute the query
+	 * Non-persistent database connection
 	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
+	 * @param	bool	$persistent
 	 * @return	resource
 	 */
-	function _execute($sql)
+	public function db_connect($persistent = FALSE)
 	{
-		$sql = $this->_prep_query($sql);
-		return @mssql_query($sql, $this->conn_id);
-	}
+		$this->conn_id = ($persistent)
+				? mssql_pconnect($this->hostname, $this->username, $this->password)
+				: mssql_connect($this->hostname, $this->username, $this->password);
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
-	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
-	 */
-	function _prep_query($sql)
+		if ( ! $this->conn_id)
 	{
-		return $sql;
+			return FALSE;
 	}
 
-	// --------------------------------------------------------------------
+		// ----------------------------------------------------------------
 
-	/**
-	 * Begin Transaction
-	 *
-	 * @access	public
-	 * @return	bool
-	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
+		// Select the DB... assuming a database name is specified in the config file
+		if ($this->database !== '' && ! $this->db_select())
 		{
-			return TRUE;
-		}
+			log_message('error', 'Unable to select database: '.$this->database);
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
+			return ($this->db_debug === TRUE)
+				? $this->display_error('db_unable_to_select', $this->database)
+				: FALSE;
 		}
 
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
+		// Determine how identifiers are escaped
+		$query = $this->query('SELECT CASE WHEN (@@OPTIONS | 256) = @@OPTIONS THEN 1 ELSE 0 END AS qi');
+		$query = $query->row_array();
+		$this->_quoted_identifier = empty($query) ? FALSE : (bool) $query['qi'];
+		$this->_escape_char = ($this->_quoted_identifier) ? '"' : array('[', ']');
 
-		$this->simple_query('BEGIN TRAN');
-		return TRUE;
+		return $this->conn_id;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Commit Transaction
+	 * Select the database
 	 *
-	 * @access	public
+	 * @param	string	$database
 	 * @return	bool
 	 */
-	function trans_commit()
+	public function db_select($database = '')
 	{
-		if ( ! $this->trans_enabled)
+		if ($database === '')
 		{
-			return TRUE;
+			$database = $this->database;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		// Note: Escaping is required in the event that the DB name
+		// contains reserved characters.
+		if (mssql_select_db('['.$database.']', $this->conn_id))
 		{
+			$this->database = $database;
 			return TRUE;
 		}
 
-		$this->simple_query('COMMIT TRAN');
-		return TRUE;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rollback Transaction
+	 * Execute the query
 	 *
-	 * @access	public
-	 * @return	bool
+	 * @param	string	$sql	an SQL query
+	 * @return	mixed	resource if rows are returned, bool otherwise
 	 */
-	function trans_rollback()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _execute($sql)
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		$this->simple_query('ROLLBACK TRAN');
-		return TRUE;
+		return mssql_query($sql, $this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Begin Transaction
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
-	 * @return	string
+	 * @return	bool
 	 */
-	function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
+	protected function _trans_begin()
 		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
+		return $this->simple_query('BEGIN TRAN');
 		}
 
-		// Escape single quotes
-		$str = str_replace("'", "''", remove_invisible_characters($str));
+	// --------------------------------------------------------------------
 
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
+	/**
+	 * Commit Transaction
+	 *
+	 * @return	bool
+	 */
+	protected function _trans_commit()
 		{
-			$str = str_replace(
-				array($this->_like_escape_chr, '%', '_'),
-				array($this->_like_escape_chr.$this->_like_escape_chr, $this->_like_escape_chr.'%', $this->_like_escape_chr.'_'),
-				$str
-			);
-		}
-
-		return $str;
+		return $this->simple_query('COMMIT TRAN');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Affected Rows
+	 * Rollback Transaction
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	bool
 	 */
-	function affected_rows()
+	protected function _trans_rollback()
 	{
-		return @mssql_rows_affected($this->conn_id);
+		return $this->simple_query('ROLLBACK TRAN');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* Insert ID
-	*
-	* Returns the last id created in the Identity column.
+	 * Affected Rows
 	*
-	* @access public
-	* @return integer
+	 * @return	int
 	*/
-	function insert_id()
+	public function affected_rows()
 	{
-		$ver = self::_parse_major_version($this->version());
-		$sql = ($ver >= 8 ? "SELECT SCOPE_IDENTITY() AS last_id" : "SELECT @@IDENTITY AS last_id");
-		$query = $this->query($sql);
-		$row = $query->row();
-		return $row->last_id;
+		return mssql_rows_affected($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* Parse major version
+	 * Insert ID
 	*
-	* Grabs the major version number from the
-	* database server version string passed in.
+	 * Returns the last id created in the Identity column.
 	*
-	* @access private
-	* @param string $version
-	* @return int16 major version number
+	 * @return	string
 	*/
-	function _parse_major_version($version)
+	public function insert_id()
 	{
-		preg_match('/([0-9]+)\.([0-9]+)\.([0-9]+)/', $version, $ver_info);
-		return $ver_info[1]; // return the major version b/c that's all we're interested in.
+		$query = version_compare($this->version(), '8', '>=')
+			? 'SELECT SCOPE_IDENTITY() AS last_id'
+			: 'SELECT @@IDENTITY AS last_id';
+
+		$query = $this->query($query);
+		$query = $query->row();
+		return $query->last_id;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* Version number query string
+	 * Set client character set
 	*
-	* @access public
-	* @return string
+	 * @param	string	$charset
+	 * @return	bool
 	*/
-	function _version()
+	protected function _db_set_charset($charset)
 	{
-		return "SELECT @@VERSION AS ver";
+		return (ini_set('mssql.charset', $charset) !== FALSE);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
+	 * Version number query string
 	 *
-	 * @access	public
-	 * @param	string
 	 * @return	string
 	 */
-	function count_all($table = '')
-	{
-		if ($table == '')
-		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
+	protected function _version()
 		{
-			return 0;
-		}
-
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		return "SELECT SERVERPROPERTY('ProductVersion') AS ver";
 	}
 
 	// --------------------------------------------------------------------
@@ -378,22 +277,22 @@
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	private
-	 * @param	boolean
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _list_tables($prefix_limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		$sql = "SELECT name FROM sysobjects WHERE type = 'U' ORDER BY name";
+		$sql = 'SELECT '.$this->escape_identifiers('name')
+			.' FROM '.$this->escape_identifiers('sysobjects')
+			.' WHERE '.$this->escape_identifiers('type')." = 'U'";
 
-		// for future compatibility
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 		{
-			//$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
-			return FALSE; // not currently supported
+			$sql .= ' AND '.$this->escape_identifiers('name')." LIKE '".$this->escape_like_str($this->dbprefix)."%' "
+				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
 		}
 
-		return $sql;
+		return $sql.' ORDER BY '.$this->escape_identifiers('name');
 	}
 
 	// --------------------------------------------------------------------
@@ -403,176 +302,132 @@
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	private
-	 * @param	string	the table name
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _list_columns($table = '')
+	protected function _list_columns($table = '')
 	{
-		return "SELECT * FROM INFORMATION_SCHEMA.Columns WHERE TABLE_NAME = '".$table."'";
+		return 'SELECT COLUMN_NAME
+			FROM INFORMATION_SCHEMA.Columns
+			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
+	 * Returns an object with field data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
+	 * @param	string	$table
+	 * @return	array
 	 */
-	function _field_data($table)
+	public function field_data($table)
 	{
-		return "SELECT TOP 1 * FROM ".$table;
-	}
-
-	// --------------------------------------------------------------------
+		$sql = 'SELECT COLUMN_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, COLUMN_DEFAULT
+			FROM INFORMATION_SCHEMA.Columns
+			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
 
-	/**
-	 * The error message string
-	 *
-	 * @access	private
-	 * @return	string
-	 */
-	function _error_message()
+		if (($query = $this->query($sql)) === FALSE)
 	{
-		return mssql_get_last_message();
+			return FALSE;
 	}
+		$query = $query->result_object();
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message number
-	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 	{
-		// Are error numbers supported?
-		return '';
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->COLUMN_NAME;
+			$retval[$i]->type		= $query[$i]->DATA_TYPE;
+			$retval[$i]->max_length		= ($query[$i]->CHARACTER_MAXIMUM_LENGTH > 0) ? $query[$i]->CHARACTER_MAXIMUM_LENGTH : $query[$i]->NUMERIC_PRECISION;
+			$retval[$i]->default		= $query[$i]->COLUMN_DEFAULT;
+		}
+
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape the SQL Identifiers
+	 * Error
 	 *
-	 * This function escapes column and table names
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
+	 * @return	array
 	 */
-	function _escape_identifiers($item)
+	public function error()
 	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
-		}
+		// We need this because the error info is discarded by the
+		// server the first time you request it, and query() already
+		// calls error() once for logging purposes when a query fails.
+		static $error = array('code' => 0, 'message' => NULL);
 
-		foreach ($this->_reserved_identifiers as $id)
-		{
-			if (strpos($item, '.'.$id) !== FALSE)
+		$message = mssql_get_last_message();
+		if ( ! empty($message))
 			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
+			$error['code']    = $this->query('SELECT @@ERROR AS code')->row()->code;
+			$error['message'] = $message;
 		}
 
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
-		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
-		}
-
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
+		return $error;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * From Tables
+	 * Update statement
 	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
+	 * Generates a platform-specific update string from the supplied data
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @param	string	$table
+	 * @param	array	$values
+	 * @return	string
 	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
+	protected function _update($table, $values)
 		{
-			$tables = array($tables);
-		}
-
-		return implode(', ', $tables);
+		$this->qb_limit = FALSE;
+		$this->qb_orderby = array();
+		return parent::_update($table, $values);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert statement
+	 * Truncate statement
 	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Generates a platform-specific truncate string from the supplied data
+	 *
+	 * If the database does not support the TRUNCATE statement,
+	 * then this method maps to 'DELETE FROM table'
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _insert($table, $keys, $values)
+	protected function _truncate($table)
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		return 'TRUNCATE TABLE '.$table;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Update statement
+	 * Delete statement
 	 *
-	 * Generates a platform-specific update string from the supplied data
+	 * Generates a platform-specific delete string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
+	protected function _delete($table)
 	{
-		foreach ($values as $key => $val)
+		if ($this->qb_limit)
 		{
-			$valstr[] = $key." = ".$val;
+			return 'WITH ci_delete AS (SELECT TOP '.$this->qb_limit.' * FROM '.$table.$this->_compile_wh('qb_where').') DELETE FROM ci_delete';
 		}
 
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
+		return parent::_delete($table);
 	}
 
-
 	// --------------------------------------------------------------------
 
 	/**
@@ -576,73 +431,75 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Truncate statement
+	 * LIMIT
 	 *
-	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
+	 * Generates a platform-specific LIMIT clause
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$sql	SQL Query
 	 * @return	string
 	 */
-	function _truncate($table)
+	protected function _limit($sql)
 	{
-		return "TRUNCATE ".$table;
-	}
-
-	// --------------------------------------------------------------------
+		$limit = $this->qb_offset + $this->qb_limit;
 
-	/**
-	 * Delete statement
-	 *
-	 * Generates a platform-specific delete string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
-	 * @return	string
-	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
+		// As of SQL Server 2005 (9.0.*) ROW_NUMBER() is supported,
+		// however an ORDER BY clause is required for it to work
+		if (version_compare($this->version(), '9', '>=') && $this->qb_offset && ! empty($this->qb_orderby))
 	{
-		$conditions = '';
+			$orderby = $this->_compile_order_by();
 
-		if (count($where) > 0 OR count($like) > 0)
-		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
+			// We have to strip the ORDER BY clause
+			$sql = trim(substr($sql, 0, strrpos($sql, $orderby)));
 
-			if (count($where) > 0 && count($like) > 0)
+			// Get the fields to select from our subquery, so that we can avoid CI_rownum appearing in the actual results
+			if (count($this->qb_select) === 0)
 			{
-				$conditions .= " AND ";
+				$select = '*'; // Inevitable
 			}
-			$conditions .= implode("\n", $like);
+			else
+			{
+				// Use only field names and their aliases, everything else is out of our scope.
+				$select = array();
+				$field_regexp = ($this->_quoted_identifier)
+					? '("[^\"]+")' : '(\[[^\]]+\])';
+				for ($i = 0, $c = count($this->qb_select); $i < $c; $i++)
+				{
+					$select[] = preg_match('/(?:\s|\.)'.$field_regexp.'$/i', $this->qb_select[$i], $m)
+						? $m[1] : $this->qb_select[$i];
+				}
+				$select = implode(', ', $select);
 		}
 
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
+			return 'SELECT '.$select." FROM (\n\n"
+				.preg_replace('/^(SELECT( DISTINCT)?)/i', '\\1 ROW_NUMBER() OVER('.trim($orderby).') AS '.$this->escape_identifiers('CI_rownum').', ', $sql)
+				."\n\n) ".$this->escape_identifiers('CI_subquery')
+				."\nWHERE ".$this->escape_identifiers('CI_rownum').' BETWEEN '.($this->qb_offset + 1).' AND '.$limit;
+		}
 
-		return "DELETE FROM ".$table.$conditions.$limit;
+		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$limit.' ', $sql);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Limit string
+	 * Insert batch statement
 	 *
-	 * Generates a platform-specific LIMIT clause
+	 * Generates a platform-specific insert string from the supplied data.
 	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
-	 * @return	string
+	 * @param	string	$table	Table name
+	 * @param	array	$keys	INSERT keys
+	 * @param	array	$values	INSERT values
+	 * @return	string|bool
 	 */
-	function _limit($sql, $limit, $offset)
+	protected function _insert_batch($table, $keys, $values)
 	{
-		$i = $limit + $offset;
+		// Multiple-value inserts are only supported as of SQL Server 2008
+		if (version_compare($this->version(), '10', '>='))
+		{
+			return parent::_insert_batch($table, $keys, $values);
+		}
 
-		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$i.' ', $sql);
+		return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -650,18 +507,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@mssql_close($conn_id);
+		mssql_close($this->conn_id);
 	}
 
 }
-
-
-
-/* End of file mssql_driver.php */
-/* Location: ./system/database/drivers/mssql/mssql_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mssql/mssql_forge.php opensourcepos/system/database/drivers/mssql/mssql_forge.php
--- pos-prod/system/database/drivers/mssql/mssql_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mssql/mssql_forge.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,248 +1,146 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MS SQL Forge Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mssql_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database($name)
-	{
-		return "CREATE DATABASE ".$name;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_create_table_if	= "IF NOT EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nCREATE TABLE";
 
 	/**
-	 * Drop database
+	 * DROP TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _drop_database($name)
-	{
-		return "DROP DATABASE ".$name;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_drop_table_if	= "IF EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nDROP TABLE";
 
 	/**
-	 * Drop Table
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	array
 	 */
-	function _drop_table($table)
-	{
-		return "DROP TABLE ".$this->db->_escape_identifiers($table);
-	}
+	protected $_unsigned		= array(
+		'TINYINT'	=> 'SMALLINT',
+		'SMALLINT'	=> 'INT',
+		'INT'		=> 'BIGINT',
+		'REAL'		=> 'FLOAT'
+	);
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * ALTER TABLE
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
-	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
-		{
-			$sql .= 'IF NOT EXISTS ';
-		}
-
-		$sql .= $this->db->_escape_identifiers($table)." (";
-		$current_field_count = 0;
-
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				$sql .=  ' '.$attributes['TYPE'];
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
-				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
-				{
-					$sql .= ' NULL';
-				}
-				else
+	protected function _alter_table($alter_type, $table, $field)
 				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' AUTO_INCREMENT';
-				}
-			}
-
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
+		if (in_array($alter_type, array('ADD', 'DROP'), TRUE))
 			{
-				$sql .= ',';
-			}
+			return parent::_alter_table($alter_type, $table, $field);
 		}
 
-		if (count($primary_keys) > 0)
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table).' ALTER COLUMN ';
+		$sqls = array();
+		for ($i = 0, $c = count($field); $i < $c; $i++)
 		{
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
+			$sqls[] = $sql.$this->_process_column($field[$i]);
 		}
 
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
-				}
-
-				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
-			}
-		}
-
-		$sql .= "\n)";
-
-		return $sql;
+		return $sqls;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
+	 * Field attribute TYPE
 	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * Performs a data type mapping between different databases.
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	array	&$attributes
+	 * @return	void
 	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
+	protected function _attr_type(&$attributes)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
-		{
-			return $sql;
-		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
+		switch (strtoupper($attributes['TYPE']))
 		{
-			$sql .= " DEFAULT \"$default_value\"";
+			case 'MEDIUMINT':
+				$attributes['TYPE'] = 'INTEGER';
+				$attributes['UNSIGNED'] = FALSE;
+				return;
+			case 'INTEGER':
+				$attributes['TYPE'] = 'INT';
+				return;
+			default: return;
 		}
-
-		if ($null === NULL)
-		{
-			$sql .= ' NULL';
-		}
-		else
-		{
-			$sql .= ' NOT NULL';
-		}
-
-		if ($after_field != '')
-		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
-		}
-
-		return $sql;
-
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rename a table
+	 * Field attribute AUTO_INCREMENT
 	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
 	 */
-	function _rename_table($table_name, $new_table_name)
+	protected function _attr_auto_increment(&$attributes, &$field)
+	{
+		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
 	{
-		// I think this syntax will work, but can find little documentation on renaming tables in MSSQL
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
-		return $sql;
+			$field['auto_increment'] = ' IDENTITY(1,1)';
 	}
-
 }
 
-/* End of file mssql_forge.php */
-/* Location: ./system/database/drivers/mssql/mssql_forge.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mssql/mssql_result.php opensourcepos/system/database/drivers/mssql/mssql_result.php
--- pos-prod/system/database/drivers/mssql/mssql_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mssql/mssql_result.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,40 +1,65 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MS SQL Result Class
  *
  * This class extends the parent result class: CI_DB_result
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mssql_result extends CI_DB_result {
 
 	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
 	{
-		return @mssql_num_rows($this->result_id);
+		return is_int($this->num_rows)
+			? $this->num_rows
+			: $this->num_rows = mssql_num_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -42,12 +67,11 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
-		return @mssql_num_fields($this->result_id);
+		return mssql_num_fields($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -57,12 +81,12 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
+		mssql_field_seek($this->result_id, 0);
 		while ($field = mssql_fetch_field($this->result_id))
 		{
 			$field_names[] = $field->name;
@@ -78,22 +102,19 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		while ($field = mssql_fetch_field($this->result_id))
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
-			$F				= new stdClass();
-			$F->name		= $field->name;
-			$F->type		= $field->type;
-			$F->max_length	= $field->max_length;
-			$F->primary_key = 0;
-			$F->default		= '';
+			$field = mssql_fetch_field($this->result_id, $i);
 
-			$retval[] = $F;
+			$retval[$i]		= new stdClass();
+			$retval[$i]->name	= $field->name;
+			$retval[$i]->type	= $field->type;
+			$retval[$i]->max_length	= $field->max_length;
 		}
 
 		return $retval;
@@ -104,9 +125,9 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_resource($this->result_id))
 		{
@@ -122,12 +143,12 @@
 	 *
 	 * Moves the internal pointer to the desired offset.  We call
 	 * this internally before fetching results to make sure the
-	 * result set starts at zero
+	 * result set starts at zero.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	int	$n
+	 * @return	bool
 	 */
-	function _data_seek($n = 0)
+	public function data_seek($n = 0)
 	{
 		return mssql_data_seek($this->result_id, $n);
 	}
@@ -139,10 +160,9 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return mssql_fetch_assoc($this->result_id);
 	}
@@ -154,16 +174,25 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
+	{
+		$row = mssql_fetch_object($this->result_id);
+
+		if ($class_name === 'stdClass' OR ! $row)
 	{
-		return mssql_fetch_object($this->result_id);
+			return $row;
 	}
 
+		$class_name = new $class_name();
+		foreach ($row as $key => $value)
+		{
+			$class_name->$key = $value;
 }
 
+		return $class_name;
+	}
 
-/* End of file mssql_result.php */
-/* Location: ./system/database/drivers/mssql/mssql_result.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mssql/mssql_utility.php opensourcepos/system/database/drivers/mssql/mssql_utility.php
--- pos-prod/system/database/drivers/mssql/mssql_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mssql/mssql_utility.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,88 +1,77 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MS SQL Utility Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mssql_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
+	 * List databases statement
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	string
 	 */
-	function _list_databases()
-	{
-		return "EXEC sp_helpdb"; // Can also be: EXEC sp_databases
-	}
-
-	// --------------------------------------------------------------------
+	protected $_list_databases	= 'EXEC sp_helpdb'; // Can also be: EXEC sp_databases
 
 	/**
-	 * Optimize table query
+	 * OPTIMIZE TABLE statement
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _optimize_table($table)
-	{
-		return FALSE; // Is this supported in MS SQL?
-	}
-
-	// --------------------------------------------------------------------
+	protected $_optimize_table	= 'ALTER INDEX all ON %s REORGANIZE';
 
 	/**
-	 * Repair table query
-	 *
-	 * Generates a platform-specific query so that a table can be repaired
+	 * Export
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		return FALSE; // Is this supported in MS SQL?
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * MSSQL Export
-	 *
-	 * @access	private
-	 * @param	array	Preferences
-	 * @return	mixed
+	 * @param	array	$params	Preferences
+	 * @return	bool
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
+		return $this->db->display_error('db_unsupported_feature');
 	}
 
 }
-
-/* End of file mssql_utility.php */
-/* Location: ./system/database/drivers/mssql/mssql_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysql/index.html opensourcepos/system/database/drivers/mysql/index.html
--- pos-prod/system/database/drivers/mysql/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysql/index.html	2016-05-23 15:32:31.937838914 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysql/mysql_driver.php opensourcepos/system/database/drivers/mysql/mysql_driver.php
--- pos-prod/system/database/drivers/mysql/mysql_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysql/mysql_driver.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,555 +1,373 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQL Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysql_driver extends CI_DB {
 
-	var $dbdriver = 'mysql';
-
-	// The character used for escaping
-	var	$_escape_char = '`';
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver = 'mysql';
 
-	// clause and character used for LIKE escape sequences - not used in MySQL
-	var $_like_escape_str = '';
-	var $_like_escape_chr = '';
+	/**
+	 * Compression flag
+	 *
+	 * @var	bool
+	 */
+	public $compress = FALSE;
 
 	/**
+	 * DELETE hack flag
+	 *
 	 * Whether to use the MySQL "delete hack" which allows the number
 	 * of affected rows to be shown. Uses a preg_replace when enabled,
 	 * adding a bit more processing to all queries.
+	 *
+	 * @var	bool
 	 */
-	var $delete_hack = TRUE;
-
-	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
-	 */
-	var $_count_string = 'SELECT COUNT(*) AS ';
-	var $_random_keyword = ' RAND()'; // database specific random keyword
-
-	// whether SET NAMES must be used to set the character set
-	var $use_set_names;
+	public $delete_hack = TRUE;
 	
 	/**
-	 * Non-persistent database connection
+	 * Strict ON flag
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * Whether we're running in strict SQL mode.
+	 *
+	 * @var	bool
 	 */
-	function db_connect()
-	{
-		if ($this->port != '')
-		{
-			$this->hostname .= ':'.$this->port;
-		}
-
-		return @mysql_connect($this->hostname, $this->username, $this->password, TRUE);
-	}
+	public $stricton;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Persistent database connection
+	 * Identifier escape character
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	string
 	 */
-	function db_pconnect()
-	{
-		if ($this->port != '')
-		{
-			$this->hostname .= ':'.$this->port;
-		}
-
-		return @mysql_pconnect($this->hostname, $this->username, $this->password);
-	}
+	protected $_escape_char = '`';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Reconnect
+	 * Class constructor
 	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
-	 *
-	 * @access	public
+	 * @param	array	$params
 	 * @return	void
 	 */
-	function reconnect()
+	public function __construct($params)
 	{
-		if (mysql_ping($this->conn_id) === FALSE)
+		parent::__construct($params);
+
+		if ( ! empty($this->port))
 		{
-			$this->conn_id = FALSE;
+			$this->hostname .= ':'.$this->port;
 		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * Non-persistent database connection
 	 *
-	 * @access	private called by the base class
+	 * @param	bool	$persistent
 	 * @return	resource
 	 */
-	function db_select()
+	public function db_connect($persistent = FALSE)
 	{
-		return @mysql_select_db($this->database, $this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
+		$client_flags = ($this->compress === FALSE) ? 0 : MYSQL_CLIENT_COMPRESS;
 
-	/**
-	 * Set client character set
-	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
-	 */
-	function db_set_charset($charset, $collation)
-	{
-		if ( ! isset($this->use_set_names))
+		if ($this->encrypt === TRUE)
 		{
-			// mysql_set_charset() requires PHP >= 5.2.3 and MySQL >= 5.0.7, use SET NAMES as fallback
-			$this->use_set_names = (version_compare(PHP_VERSION, '5.2.3', '>=') && version_compare(mysql_get_server_info(), '5.0.7', '>=')) ? FALSE : TRUE;
+			$client_flags = $client_flags | MYSQL_CLIENT_SSL;
 		}
 
-		if ($this->use_set_names === TRUE)
-		{
-			return @mysql_query("SET NAMES '".$this->escape_str($charset)."' COLLATE '".$this->escape_str($collation)."'", $this->conn_id);
-		}
-		else
-		{
-			return @mysql_set_charset($charset, $this->conn_id);
-		}
-	}
+		// Error suppression is necessary mostly due to PHP 5.5+ issuing E_DEPRECATED messages
+		$this->conn_id = ($persistent === TRUE)
+			? mysql_pconnect($this->hostname, $this->username, $this->password, $client_flags)
+			: mysql_connect($this->hostname, $this->username, $this->password, TRUE, $client_flags);
 
-	// --------------------------------------------------------------------
+		// ----------------------------------------------------------------
 
-	/**
-	 * Version number query string
-	 *
-	 * @access	public
-	 * @return	string
-	 */
-	function _version()
+		// Select the DB... assuming a database name is specified in the config file
+		if ($this->database !== '' && ! $this->db_select())
 	{
-		return "SELECT version() AS ver";
-	}
-
-	// --------------------------------------------------------------------
+			log_message('error', 'Unable to select database: '.$this->database);
 
-	/**
-	 * Execute the query
-	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
-	 * @return	resource
-	 */
-	function _execute($sql)
-	{
-		$sql = $this->_prep_query($sql);
-		return @mysql_query($sql, $this->conn_id);
+			return ($this->db_debug === TRUE)
+				? $this->display_error('db_unable_to_select', $this->database)
+				: FALSE;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
-	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
-	 */
-	function _prep_query($sql)
+		if (isset($this->stricton) && is_resource($this->conn_id))
 	{
-		// "DELETE FROM TABLE" returns 0 affected rows This hack modifies
-		// the query so that it returns the number of affected rows
-		if ($this->delete_hack === TRUE)
+			if ($this->stricton)
 		{
-			if (preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
+				$this->simple_query('SET SESSION sql_mode = CONCAT(@@sql_mode, ",", "STRICT_ALL_TABLES")');
+			}
+			else
 			{
-				$sql = preg_replace("/^\s*DELETE\s+FROM\s+(\S+)\s*$/", "DELETE FROM \\1 WHERE 1=1", $sql);
+				$this->simple_query(
+					'SET SESSION sql_mode =
+					REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
+					@@sql_mode,
+					"STRICT_ALL_TABLES,", ""),
+					",STRICT_ALL_TABLES", ""),
+					"STRICT_ALL_TABLES", ""),
+					"STRICT_TRANS_TABLES,", ""),
+					",STRICT_TRANS_TABLES", ""),
+					"STRICT_TRANS_TABLES", "")'
+				);
 			}
 		}
 
-		return $sql;
+		return $this->conn_id;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Begin Transaction
+	 * Reconnect
 	 *
-	 * @access	public
-	 * @return	bool
+	 * Keep / reestablish the db connection if no queries have been
+	 * sent for a length of time exceeding the server's idle timeout
+	 *
+	 * @return	void
 	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
+	public function reconnect()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if (mysql_ping($this->conn_id) === FALSE)
 		{
-			return TRUE;
+			$this->conn_id = FALSE;
 		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		$this->simple_query('SET AUTOCOMMIT=0');
-		$this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
-		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Commit Transaction
+	 * Select the database
 	 *
-	 * @access	public
+	 * @param	string	$database
 	 * @return	bool
 	 */
-	function trans_commit()
+	public function db_select($database = '')
 	{
-		if ( ! $this->trans_enabled)
+		if ($database === '')
 		{
-			return TRUE;
+			$database = $this->database;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if (mysql_select_db($database, $this->conn_id))
 		{
+			$this->database = $database;
 			return TRUE;
 		}
 
-		$this->simple_query('COMMIT');
-		$this->simple_query('SET AUTOCOMMIT=1');
-		return TRUE;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rollback Transaction
+	 * Set client character set
 	 *
-	 * @access	public
+	 * @param	string	$charset
 	 * @return	bool
 	 */
-	function trans_rollback()
-	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+	protected function _db_set_charset($charset)
 		{
-			return TRUE;
-		}
-
-		$this->simple_query('ROLLBACK');
-		$this->simple_query('SET AUTOCOMMIT=1');
-		return TRUE;
+		return mysql_set_charset($charset, $this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Database version number
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
 	 * @return	string
 	 */
-	function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
+	public function version()
 		{
-			foreach ($str as $key => $val)
+		if (isset($this->data_cache['version']))
 	   		{
-				$str[$key] = $this->escape_str($val, $like);
-	   		}
-
-	   		return $str;
+			return $this->data_cache['version'];
 	   	}
 
-		if (function_exists('mysql_real_escape_string') AND is_resource($this->conn_id))
+		if ( ! $this->conn_id OR ($version = mysql_get_server_info($this->conn_id)) === FALSE)
 		{
-			$str = mysql_real_escape_string($str, $this->conn_id);
-		}
-		elseif (function_exists('mysql_escape_string'))
-		{
-			$str = mysql_escape_string($str);
-		}
-		else
-		{
-			$str = addslashes($str);
+			return FALSE;
 		}
 
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
-		{
-			$str = str_replace(array('%', '_'), array('\\%', '\\_'), $str);
-		}
-
-		return $str;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Affected Rows
-	 *
-	 * @access	public
-	 * @return	integer
-	 */
-	function affected_rows()
-	{
-		return @mysql_affected_rows($this->conn_id);
+		return $this->data_cache['version'] = $version;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert ID
+	 * Execute the query
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @param	string	$sql	an SQL query
+	 * @return	mixed
 	 */
-	function insert_id()
+	protected function _execute($sql)
 	{
-		return @mysql_insert_id($this->conn_id);
+		return mysql_query($this->_prep_query($sql), $this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * "Count All" query
+	 * Prep the query
 	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
+	 * If needed, each database adapter can prep the query string
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$sql	an SQL query
 	 * @return	string
 	 */
-	function count_all($table = '')
+	protected function _prep_query($sql)
 	{
-		if ($table == '')
-		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
+		// mysql_affected_rows() returns 0 for "DELETE FROM TABLE" queries. This hack
+		// modifies the query so that it a proper number of affected rows is returned.
+		if ($this->delete_hack === TRUE && preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
 		{
-			return 0;
+			return trim($sql).' WHERE 1=1';
 		}
 
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		return $sql;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * List table query
-	 *
-	 * Generates a platform-specific query string so that the table names can be fetched
+	 * Begin Transaction
 	 *
-	 * @access	private
-	 * @param	boolean
-	 * @return	string
+	 * @return	bool
 	 */
-	function _list_tables($prefix_limit = FALSE)
-	{
-		$sql = "SHOW TABLES FROM ".$this->_escape_char.$this->database.$this->_escape_char;
-
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+	protected function _trans_begin()
 		{
-			$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%'";
-		}
-
-		return $sql;
+		$this->simple_query('SET AUTOCOMMIT=0');
+		return $this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Show column query
-	 *
-	 * Generates a platform-specific query string so that the column names can be fetched
+	 * Commit Transaction
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
+	 * @return	bool
 	 */
-	function _list_columns($table = '')
+	protected function _trans_commit()
+	{
+		if ($this->simple_query('COMMIT'))
 	{
-		return "SHOW COLUMNS FROM ".$this->_protect_identifiers($table, TRUE, NULL, FALSE);
+			$this->simple_query('SET AUTOCOMMIT=1');
+			return TRUE;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _field_data($table)
-	{
-		return "DESCRIBE ".$table;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * The error message string
+	 * Rollback Transaction
 	 *
-	 * @access	private
-	 * @return	string
+	 * @return	bool
 	 */
-	function _error_message()
+	protected function _trans_rollback()
 	{
-		return mysql_error($this->conn_id);
+		if ($this->simple_query('ROLLBACK'))
+		{
+			$this->simple_query('SET AUTOCOMMIT=1');
+			return TRUE;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message number
-	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
-	{
-		return mysql_errno($this->conn_id);
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape the SQL Identifiers
+	 * Platform-dependant string escape
 	 *
-	 * This function escapes column and table names
-	 *
-	 * @access	private
 	 * @param	string
 	 * @return	string
 	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
+	protected function _escape_str($str)
 		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
-		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
-		}
-
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
-		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
-		}
-
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
+		return mysql_real_escape_string($str, $this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
+	 * Affected Rows
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @return	int
 	 */
-	function _from_tables($tables)
+	public function affected_rows()
 	{
-		if ( ! is_array($tables))
-		{
-			$tables = array($tables);
-		}
-
-		return '('.implode(', ', $tables).')';
+		return mysql_affected_rows($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Insert ID
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
+	 * @return	int
 	 */
-	function _insert($table, $keys, $values)
+	public function insert_id()
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		return mysql_insert_id($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -554,75 +372,39 @@
 
 	// --------------------------------------------------------------------
 
-
 	/**
-	 * Replace statement
+	 * List table query
 	 *
-	 * Generates a platform-specific replace string from the supplied data
+	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _replace($table, $keys, $values)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		return "REPLACE INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
-	}
-
-	// --------------------------------------------------------------------
+		$sql = 'SHOW TABLES FROM '.$this->escape_identifiers($this->database);
 
-	/**
-	 * Insert_batch statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
-	 */
-	function _insert_batch($table, $keys, $values)
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
+			return $sql." LIKE '".$this->escape_like_str($this->dbprefix)."%'";
 	}
 
-	// --------------------------------------------------------------------
+		return $sql;
+	}
 
+	// --------------------------------------------------------------------
 
 	/**
-	 * Update statement
+	 * Show column query
 	 *
-	 * Generates a platform-specific update string from the supplied data
+	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
+	protected function _list_columns($table = '')
 	{
-		foreach ($values as $key => $val)
-		{
-			$valstr[] = $key . ' = ' . $val;
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
+		return 'SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE);
 	}
 
 	// --------------------------------------------------------------------
@@ -627,135 +409,71 @@
 
 	// --------------------------------------------------------------------
 
-
 	/**
-	 * Update_Batch statement
+	 * Returns an object with field data
 	 *
-	 * Generates a platform-specific batch update string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @return	string
+	 * @param	string	$table
+	 * @return	array
 	 */
-	function _update_batch($table, $values, $index, $where = NULL)
-	{
-		$ids = array();
-		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
-
-		foreach ($values as $key => $val)
+	public function field_data($table)
 		{
-			$ids[] = $val[$index];
-
-			foreach (array_keys($val) as $field)
-			{
-				if ($field != $index)
+		if (($query = $this->query('SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE)
 				{
-					$final[$field][] =  'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
-				}
+			return FALSE;
 			}
-		}
-
-		$sql = "UPDATE ".$table." SET ";
-		$cases = '';
+		$query = $query->result_object();
 
-		foreach ($final as $k => $v)
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 		{
-			$cases .= $k.' = CASE '."\n";
-			foreach ($v as $row)
-			{
-				$cases .= $row."\n";
-			}
-
-			$cases .= 'ELSE '.$k.' END, ';
-		}
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->Field;
 
-		$sql .= substr($cases, 0, -2);
+			sscanf($query[$i]->Type, '%[a-z](%d)',
+				$retval[$i]->type,
+				$retval[$i]->max_length
+			);
 
-		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
-
-		return $sql;
+			$retval[$i]->default		= $query[$i]->Default;
+			$retval[$i]->primary_key	= (int) ($query[$i]->Key === 'PRI');
 	}
 
-	// --------------------------------------------------------------------
-
-
-	/**
-	 * Truncate statement
-	 *
-	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _truncate($table)
-	{
-		return "TRUNCATE ".$table;
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Delete statement
+	 * Error
 	 *
-	 * Generates a platform-specific delete string from the supplied data
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
-	 * @return	string
+	 * @return	array
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
-	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
+	public function error()
 		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
-			{
-				$conditions .= " AND ";
-			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		return "DELETE FROM ".$table.$conditions.$limit;
+		return array('code' => mysql_errno($this->conn_id), 'message' => mysql_error($this->conn_id));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Limit string
+	 * FROM tables
 	 *
-	 * Generates a platform-specific LIMIT clause
+	 * Groups tables in FROM clauses if needed, so there is no confusion
+	 * about operator precedence.
 	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
 	 * @return	string
 	 */
-	function _limit($sql, $limit, $offset)
-	{
-		if ($offset == 0)
+	protected function _from_tables()
 		{
-			$offset = '';
-		}
-		else
+		if ( ! empty($this->qb_join) && count($this->qb_from) > 1)
 		{
-			$offset .= ", ";
+			return '('.implode(', ', $this->qb_from).')';
 		}
 
-		return $sql."LIMIT ".$offset.$limit;
+		return implode(', ', $this->qb_from);
 	}
 
 	// --------------------------------------------------------------------
@@ -763,17 +481,13 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@mysql_close($conn_id);
+		// Error suppression to avoid annoying E_WARNINGs in cases
+		// where the connection has already been closed for some reason.
+		@mysql_close($this->conn_id);
 	}
 
 }
-
-
-/* End of file mysql_driver.php */
-/* Location: ./system/database/drivers/mysql/mysql_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysql/mysql_forge.php opensourcepos/system/database/drivers/mysql/mysql_forge.php
--- pos-prod/system/database/drivers/mysql/mysql_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysql/mysql_forge.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,144 +1,123 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQL Forge Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysql_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE DATABASE statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database($name)
-	{
-		return "CREATE DATABASE ".$name;
-	}
+	protected $_create_database	= 'CREATE DATABASE %s CHARACTER SET %s COLLATE %s';
 
-	// --------------------------------------------------------------------
+	/**
+	 * CREATE TABLE keys flag
+	 *
+	 * Whether table keys are created from within the
+	 * CREATE TABLE statement.
+	 *
+	 * @var	bool
+	 */
+	protected $_create_table_keys	= TRUE;
 
 	/**
-	 * Drop database
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	array
 	 */
-	function _drop_database($name)
-	{
-		return "DROP DATABASE ".$name;
-	}
+	protected $_unsigned		= array(
+		'TINYINT',
+		'SMALLINT',
+		'MEDIUMINT',
+		'INT',
+		'INTEGER',
+		'BIGINT',
+		'REAL',
+		'DOUBLE',
+		'DOUBLE PRECISION',
+		'FLOAT',
+		'DECIMAL',
+		'NUMERIC'
+	);
+
+	/**
+	 * NULL value representation in CREATE/ALTER TABLE statements
+	 *
+	 * @var	string
+	 */
+	protected $_null = 'NULL';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Process Fields
+	 * CREATE TABLE attributes
 	 *
-	 * @access	private
-	 * @param	mixed	the fields
+	 * @param	array	$attributes	Associative array of table attributes
 	 * @return	string
 	 */
-	function _process_fields($fields)
+	protected function _create_table_attr($attributes)
 	{
-		$current_field_count = 0;
 		$sql = '';
 
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				if (array_key_exists('NAME', $attributes))
-				{
-					$sql .= ' '.$this->db->_protect_identifiers($attributes['NAME']).' ';
-				}
-
-				if (array_key_exists('TYPE', $attributes))
-				{
-					$sql .=  ' '.$attributes['TYPE'];
-
-					if (array_key_exists('CONSTRAINT', $attributes))
-					{
-						switch ($attributes['TYPE'])
-						{
-							case 'decimal':
-							case 'float':
-							case 'numeric':
-								$sql .= '('.implode(',', $attributes['CONSTRAINT']).')';
-							break;
-
-							case 'enum':
-							case 'set':
-								$sql .= '("'.implode('","', $attributes['CONSTRAINT']).'")';
-							break;
-
-							default:
-								$sql .= '('.$attributes['CONSTRAINT'].')';
-						}
-					}
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
+		foreach (array_keys($attributes) as $key)
 				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
+			if (is_string($key))
 				{
-					$sql .= ' NULL';
+				$sql .= ' '.strtoupper($key).' = '.$attributes[$key];
 				}
-				else
-				{
-					$sql .= ' NOT NULL';
 				}
 
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
+		if ( ! empty($this->db->char_set) && ! strpos($sql, 'CHARACTER SET') && ! strpos($sql, 'CHARSET'))
 				{
-					$sql .= ' AUTO_INCREMENT';
-				}
+			$sql .= ' DEFAULT CHARACTER SET = '.$this->db->char_set;
 			}
 
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
+		if ( ! empty($this->db->dbcollat) && ! strpos($sql, 'COLLATE'))
 			{
-				$sql .= ',';
-			}
+			$sql .= ' COLLATE = '.$this->db->dbcollat;
 		}
 
 		return $sql;
@@ -147,127 +126,118 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * ALTER TABLE
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	mixed	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
+	protected function _alter_table($alter_type, $table, $field)
 	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
+		if ($alter_type === 'DROP')
 		{
-			$sql .= 'IF NOT EXISTS ';
+			return parent::_alter_table($alter_type, $table, $field);
 		}
 
-		$sql .= $this->db->_escape_identifiers($table)." (";
-
-		$sql .= $this->_process_fields($fields);
-
-		if (count($primary_keys) > 0)
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
+		for ($i = 0, $c = count($field); $i < $c; $i++)
 		{
-			$key_name = $this->db->_protect_identifiers(implode('_', $primary_keys));
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY ".$key_name." (" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
+			if ($field[$i]['_literal'] !== FALSE)
 		{
-			foreach ($keys as $key)
+				$field[$i] = ($alter_type === 'ADD')
+						? "\n\tADD ".$field[$i]['_literal']
+						: "\n\tMODIFY ".$field[$i]['_literal'];
+			}
+			else
 			{
-				if (is_array($key))
+				if ($alter_type === 'ADD')
 				{
-					$key_name = $this->db->_protect_identifiers(implode('_', $key));
-					$key = $this->db->_protect_identifiers($key);
+					$field[$i]['_literal'] = "\n\tADD ";
 				}
 				else
 				{
-					$key_name = $this->db->_protect_identifiers($key);
-					$key = array($key_name);
+					$field[$i]['_literal'] = empty($field[$i]['new_name']) ? "\n\tMODIFY " : "\n\tCHANGE ";
 				}
 
-				$sql .= ",\n\tKEY {$key_name} (" . implode(', ', $key) . ")";
+				$field[$i] = $field[$i]['_literal'].$this->_process_column($field[$i]);
 			}
 		}
 
-		$sql .= "\n) DEFAULT CHARACTER SET {$this->db->char_set} COLLATE {$this->db->dbcollat};";
-
-		return $sql;
+		return array($sql.implode(',', $field));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop Table
+	 * Process column
 	 *
-	 * @access	private
+	 * @param	array	$field
 	 * @return	string
 	 */
-	function _drop_table($table)
+	protected function _process_column($field)
 	{
-		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table);
+		$extra_clause = isset($field['after'])
+			? ' AFTER '.$this->db->escape_identifiers($field['after']) : '';
+
+		if (empty($extra_clause) && isset($field['first']) && $field['first'] === TRUE)
+		{
+			$extra_clause = ' FIRST';
+		}
+
+
+		return $this->db->escape_identifiers($field['name'])
+			.(empty($field['new_name']) ? '' : ' '.$this->db->escape_identifiers($field['new_name']))
+			.' '.$field['type'].$field['length']
+			.$field['unsigned']
+			.$field['null']
+			.$field['default']
+			.$field['auto_increment']
+			.$field['unique']
+			.(empty($field['comment']) ? '' : ' COMMENT '.$field['comment'])
+			.$extra_clause;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
+	 * Process indexes
 	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
-	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	array	fields
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	string	$table	(ignored)
+	 * @return	string
 	 */
-	function _alter_table($alter_type, $table, $fields, $after_field = '')
+	protected function _process_indexes($table)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ";
+		$sql = '';
 
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
+		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
+		{
+			if (is_array($this->keys[$i]))
+			{
+				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
 		{
-			return $sql.$this->db->_protect_identifiers($fields);
+					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
+					{
+						unset($this->keys[$i][$i2]);
+						continue;
 		}
-
-		$sql .= $this->_process_fields($fields);
-
-		if ($after_field != '')
+				}
+			}
+			elseif ( ! isset($this->fields[$this->keys[$i]]))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+				unset($this->keys[$i]);
+				continue;
 		}
 
-		return $sql;
+			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
+
+			$sql .= ",\n\tKEY ".$this->db->escape_identifiers(implode('_', $this->keys[$i]))
+				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).')';
 	}
 
-	// --------------------------------------------------------------------
+		$this->keys = array();
 
-	/**
-	 * Rename a table
-	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
-	 */
-	function _rename_table($table_name, $new_table_name)
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
 		return $sql;
 	}
 
 }
-
-/* End of file mysql_forge.php */
-/* Location: ./system/database/drivers/mysql/mysql_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysql/mysql_result.php opensourcepos/system/database/drivers/mysql/mysql_result.php
--- pos-prod/system/database/drivers/mysql/mysql_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysql/mysql_result.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// --------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQL Result Class
@@ -21,20 +43,36 @@
  * This class extends the parent result class: CI_DB_result
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysql_result extends CI_DB_result {
 
 	/**
+	 * Class constructor
+	 *
+	 * @param	object	&$driver_object
+	 * @return	void
+	 */
+	public function __construct(&$driver_object)
+	{
+		parent::__construct($driver_object);
+
+		// Required, due to mysql_data_seek() causing nightmares
+		// with empty result sets
+		$this->num_rows = mysql_num_rows($this->result_id);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
 	{
-		return @mysql_num_rows($this->result_id);
+		return $this->num_rows;
 	}
 
 	// --------------------------------------------------------------------
@@ -42,12 +80,11 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
-		return @mysql_num_fields($this->result_id);
+		return mysql_num_fields($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -57,12 +94,12 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
+		mysql_field_seek($this->result_id, 0);
 		while ($field = mysql_fetch_field($this->result_id))
 		{
 			$field_names[] = $field->name;
@@ -78,27 +115,18 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		while ($field = mysql_fetch_object($this->result_id))
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
-			preg_match('/([a-zA-Z]+)(\(\d+\))?/', $field->Type, $matches);
-
-			$type = (array_key_exists(1, $matches)) ? $matches[1] : NULL;
-			$length = (array_key_exists(2, $matches)) ? preg_replace('/[^\d]/', '', $matches[2]) : NULL;
-
-			$F				= new stdClass();
-			$F->name		= $field->Field;
-			$F->type		= $type;
-			$F->default		= $field->Default;
-			$F->max_length	= $length;
-			$F->primary_key = ( $field->Key == 'PRI' ? 1 : 0 );
-
-			$retval[] = $F;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= mysql_field_name($this->result_id, $i);
+			$retval[$i]->type		= mysql_field_type($this->result_id, $i);
+			$retval[$i]->max_length		= mysql_field_len($this->result_id, $i);
+			$retval[$i]->primary_key	= (int) (strpos(mysql_field_flags($this->result_id, $i), 'primary_key') !== FALSE);
 		}
 
 		return $retval;
@@ -109,9 +137,9 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_resource($this->result_id))
 		{
@@ -127,14 +155,16 @@
 	 *
 	 * Moves the internal pointer to the desired offset.  We call
 	 * this internally before fetching results to make sure the
-	 * result set starts at zero
+	 * result set starts at zero.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	int	$n
+	 * @return	bool
 	 */
-	function _data_seek($n = 0)
+	public function data_seek($n = 0)
 	{
-		return mysql_data_seek($this->result_id, $n);
+		return $this->num_rows
+			? mysql_data_seek($this->result_id, $n)
+			: FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -144,10 +174,9 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return mysql_fetch_assoc($this->result_id);
 	}
@@ -159,16 +188,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		return mysql_fetch_object($this->result_id);
+		return mysql_fetch_object($this->result_id, $class_name);
 	}
 
 }
-
-
-/* End of file mysql_result.php */
-/* Location: ./system/database/drivers/mysql/mysql_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysql/mysql_utility.php opensourcepos/system/database/drivers/mysql/mysql_utility.php
--- pos-prod/system/database/drivers/mysql/mysql_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysql/mysql_utility.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,83 +1,83 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQL Utility Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysql_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
+	 * List databases statement
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	string
 	 */
-	function _list_databases()
-	{
-		return "SHOW DATABASES";
-	}
-
-	// --------------------------------------------------------------------
+	protected $_list_databases	= 'SHOW DATABASES';
 
 	/**
-	 * Optimize table query
+	 * OPTIMIZE TABLE statement
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _optimize_table($table)
-	{
-		return "OPTIMIZE TABLE ".$this->db->_escape_identifiers($table);
-	}
-
-	// --------------------------------------------------------------------
+	protected $_optimize_table	= 'OPTIMIZE TABLE %s';
 
 	/**
-	 * Repair table query
-	 *
-	 * Generates a platform-specific query so that a table can be repaired
+	 * REPAIR TABLE statement
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _repair_table($table)
-	{
-		return "REPAIR TABLE ".$this->db->_escape_identifiers($table);
-	}
+	protected $_repair_table	= 'REPAIR TABLE %s';
 
 	// --------------------------------------------------------------------
+
 	/**
-	 * MySQL Export
+	 * Export
 	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
-		if (count($params) == 0)
+		if (count($params) === 0)
 		{
 			return FALSE;
 		}
@@ -87,6 +87,13 @@
 
 		// Build the output
 		$output = '';
+
+		// Do we need to include a statement to disable foreign key checks?
+		if ($foreign_key_checks === FALSE)
+		{
+			$output .= 'SET foreign_key_checks = 0;'.$newline;
+		}
+
 		foreach ((array)$tables as $table)
 		{
 			// Is the table in the "ignore" list?
@@ -96,7 +103,7 @@
 			}
 
 			// Get the table schema
-			$query = $this->db->query("SHOW CREATE TABLE `".$this->db->database.'`.`'.$table.'`');
+			$query = $this->db->query('SHOW CREATE TABLE '.$this->db->escape_identifiers($this->db->database.'.'.$table));
 
 			// No result means the table name was invalid
 			if ($query === FALSE)
@@ -107,9 +114,9 @@
 			// Write out the table schema
 			$output .= '#'.$newline.'# TABLE STRUCTURE FOR: '.$table.$newline.'#'.$newline.$newline;
 
-			if ($add_drop == TRUE)
+			if ($add_drop === TRUE)
 			{
-				$output .= 'DROP TABLE IF EXISTS '.$table.';'.$newline.$newline;
+				$output .= 'DROP TABLE IF EXISTS '.$this->db->protect_identifiers($table).';'.$newline.$newline;
 			}
 
 			$i = 0;
@@ -123,15 +130,15 @@
 			}
 
 			// If inserts are not needed we're done...
-			if ($add_insert == FALSE)
+			if ($add_insert === FALSE)
 			{
 				continue;
 			}
 
 			// Grab all the data from the current table
-			$query = $this->db->query("SELECT * FROM $table");
+			$query = $this->db->query('SELECT * FROM '.$this->db->protect_identifiers($table));
 
-			if ($query->num_rows() == 0)
+			if ($query->num_rows() === 0)
 			{
 				continue;
 			}
@@ -146,20 +153,17 @@
 			while ($field = mysql_fetch_field($query->result_id))
 			{
 				// Most versions of MySQL store timestamp as a string
-				$is_int[$i] = (in_array(
-										strtolower(mysql_field_type($query->result_id, $i)),
+				$is_int[$i] = in_array(strtolower(mysql_field_type($query->result_id, $i)),
 										array('tinyint', 'smallint', 'mediumint', 'int', 'bigint'), //, 'timestamp'),
-										TRUE)
-										) ? TRUE : FALSE;
+							TRUE);
 
 				// Create a string of field names
-				$field_str .= '`'.$field->name.'`, ';
+				$field_str .= $this->db->escape_identifiers($field->name).', ';
 				$i++;
 			}
 
 			// Trim off the end comma
-			$field_str = preg_replace( "/, $/" , "" , $field_str);
-
+			$field_str = preg_replace('/, $/' , '', $field_str);
 
 			// Build the insert string
 			foreach ($query->result_array() as $row)
@@ -177,14 +181,7 @@
 					else
 					{
 						// Escape the data if it's not an integer
-						if ($is_int[$i] == FALSE)
-						{
-							$val_str .= $this->db->escape($v);
-						}
-						else
-						{
-							$val_str .= $v;
-						}
+						$val_str .= ($is_int[$i] === FALSE) ? $this->db->escape($v) : $v;
 					}
 
 					// Append a comma
@@ -193,18 +190,22 @@
 				}
 
 				// Remove the comma at the end of the string
-				$val_str = preg_replace( "/, $/" , "" , $val_str);
+				$val_str = preg_replace('/, $/' , '', $val_str);
 
 				// Build the INSERT string
-				$output .= 'INSERT INTO '.$table.' ('.$field_str.') VALUES ('.$val_str.');'.$newline;
+				$output .= 'INSERT INTO '.$this->db->protect_identifiers($table).' ('.$field_str.') VALUES ('.$val_str.');'.$newline;
 			}
 
 			$output .= $newline.$newline;
 		}
 
-		return $output;
+		// Do we need to include a statement to re-enable foreign key checks?
+		if ($foreign_key_checks === FALSE)
+		{
+			$output .= 'SET foreign_key_checks = 1;'.$newline;
 	}
+
+		return $output;
 }
 
-/* End of file mysql_utility.php */
-/* Location: ./system/database/drivers/mysql/mysql_utility.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysqli/index.html opensourcepos/system/database/drivers/mysqli/index.html
--- pos-prod/system/database/drivers/mysqli/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysqli/index.html	2016-05-23 15:32:31.937838914 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysqli/mysqli_driver.php opensourcepos/system/database/drivers/mysqli/mysqli_driver.php
--- pos-prod/system/database/drivers/mysqli/mysqli_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysqli/mysqli_driver.php	2016-05-23 15:32:31.937838914 -0700
@@ -1,574 +1,406 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * MySQLi Database Adapter Class - MySQLi only works with PHP 5
+ * MySQLi Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysqli_driver extends CI_DB {
 
-	var $dbdriver = 'mysqli';
-
-	// The character used for escaping
-	var $_escape_char = '`';
-
-	// clause and character used for LIKE escape sequences - not used in MySQL
-	var $_like_escape_str = '';
-	var $_like_escape_chr = '';
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver = 'mysqli';
 
 	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
+	 * Compression flag
+	 *
+	 * @var	bool
 	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword = ' RAND()'; // database specific random keyword
+	public $compress = FALSE;
 
 	/**
+	 * DELETE hack flag
+	 *
 	 * Whether to use the MySQL "delete hack" which allows the number
 	 * of affected rows to be shown. Uses a preg_replace when enabled,
 	 * adding a bit more processing to all queries.
-	 */
-	var $delete_hack = TRUE;
-
-	// whether SET NAMES must be used to set the character set
-	var $use_set_names;
-	
-	// --------------------------------------------------------------------
-
-	/**
-	 * Non-persistent database connection
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	bool
 	 */
-	function db_connect()
-	{
-		if ($this->port != '')
-		{
-			return @mysqli_connect($this->hostname, $this->username, $this->password, $this->database, $this->port);
-		}
-		else
-		{
-			return @mysqli_connect($this->hostname, $this->username, $this->password, $this->database);
-		}
-
-	}
-
-	// --------------------------------------------------------------------
+	public $delete_hack = TRUE;
 
 	/**
-	 * Persistent database connection
+	 * Strict ON flag
+	 *
+	 * Whether we're running in strict SQL mode.
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	bool
 	 */
-	function db_pconnect()
-	{
-		return $this->db_connect();
-	}
+	public $stricton;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Reconnect
-	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
+	 * Identifier escape character
 	 *
-	 * @access	public
-	 * @return	void
+	 * @var	string
 	 */
-	function reconnect()
-	{
-		if (mysqli_ping($this->conn_id) === FALSE)
-		{
-			$this->conn_id = FALSE;
-		}
-	}
+	protected $_escape_char = '`';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * MySQLi object
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * Has to be preserved without being assigned to $conn_id.
+	 *
+	 * @var	MySQLi
 	 */
-	function db_select()
-	{
-		return @mysqli_select_db($this->conn_id, $this->database);
-	}
+	protected $_mysqli;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set client character set
+	 * Database connection
 	 *
-	 * @access	private
-	 * @param	string
-	 * @param	string
-	 * @return	resource
+	 * @param	bool	$persistent
+	 * @return	object
 	 */
-	function _db_set_charset($charset, $collation)
-	{
-		if ( ! isset($this->use_set_names))
+	public function db_connect($persistent = FALSE)
 		{
-			// mysqli_set_charset() requires MySQL >= 5.0.7, use SET NAMES as fallback
-			$this->use_set_names = (version_compare(mysqli_get_server_info($this->conn_id), '5.0.7', '>=')) ? FALSE : TRUE;
-		}
-
-		if ($this->use_set_names === TRUE)
+		// Do we have a socket path?
+		if ($this->hostname[0] === '/')
 		{
-			return @mysqli_query($this->conn_id, "SET NAMES '".$this->escape_str($charset)."' COLLATE '".$this->escape_str($collation)."'");
+			$hostname = NULL;
+			$port = NULL;
+			$socket = $this->hostname;
 		}
 		else
 		{
-			return @mysqli_set_charset($this->conn_id, $charset);
-		}
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Version number query string
-	 *
-	 * @access	public
-	 * @return	string
-	 */
-	function _version()
-	{
-		return "SELECT version() AS ver";
+			// Persistent connection support was added in PHP 5.3.0
+			$hostname = ($persistent === TRUE && is_php('5.3'))
+				? 'p:'.$this->hostname : $this->hostname;
+			$port = empty($this->port) ? NULL : $this->port;
+			$socket = NULL;
 	}
 
-	// --------------------------------------------------------------------
+		$client_flags = ($this->compress === TRUE) ? MYSQLI_CLIENT_COMPRESS : 0;
+		$this->_mysqli = mysqli_init();
 
-	/**
-	 * Execute the query
-	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
-	 * @return	resource
-	 */
-	function _execute($sql)
-	{
-		$sql = $this->_prep_query($sql);
-		$result = @mysqli_query($this->conn_id, $sql);
-		return $result;
-	}
+		$this->_mysqli->options(MYSQLI_OPT_CONNECT_TIMEOUT, 10);
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
-	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
-	 */
-	function _prep_query($sql)
-	{
-		// "DELETE FROM TABLE" returns 0 affected rows This hack modifies
-		// the query so that it returns the number of affected rows
-		if ($this->delete_hack === TRUE)
+		if (isset($this->stricton))
 		{
-			if (preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
+			if ($this->stricton)
 			{
-				$sql = preg_replace("/^\s*DELETE\s+FROM\s+(\S+)\s*$/", "DELETE FROM \\1 WHERE 1=1", $sql);
+				$this->_mysqli->options(MYSQLI_INIT_COMMAND, 'SET SESSION sql_mode = CONCAT(@@sql_mode, ",", "STRICT_ALL_TABLES")');
 			}
+			else
+			{
+				$this->_mysqli->options(MYSQLI_INIT_COMMAND,
+					'SET SESSION sql_mode =
+					REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
+					@@sql_mode,
+					"STRICT_ALL_TABLES,", ""),
+					",STRICT_ALL_TABLES", ""),
+					"STRICT_ALL_TABLES", ""),
+					"STRICT_TRANS_TABLES,", ""),
+					",STRICT_TRANS_TABLES", ""),
+					"STRICT_TRANS_TABLES", "")'
+				);
 		}
-
-		return $sql;
 	}
 
-	// --------------------------------------------------------------------
+		if (is_array($this->encrypt))
+		{
+			$ssl = array();
+			empty($this->encrypt['ssl_key'])    OR $ssl['key']    = $this->encrypt['ssl_key'];
+			empty($this->encrypt['ssl_cert'])   OR $ssl['cert']   = $this->encrypt['ssl_cert'];
+			empty($this->encrypt['ssl_ca'])     OR $ssl['ca']     = $this->encrypt['ssl_ca'];
+			empty($this->encrypt['ssl_capath']) OR $ssl['capath'] = $this->encrypt['ssl_capath'];
+			empty($this->encrypt['ssl_cipher']) OR $ssl['cipher'] = $this->encrypt['ssl_cipher'];
 
-	/**
-	 * Begin Transaction
-	 *
-	 * @access	public
-	 * @return	bool
-	 */
-	function trans_begin($test_mode = FALSE)
+			if ( ! empty($ssl))
 	{
-		if ( ! $this->trans_enabled)
+				if (isset($this->encrypt['ssl_verify']))
 		{
-			return TRUE;
+					if ($this->encrypt['ssl_verify'])
+					{
+						defined('MYSQLI_OPT_SSL_VERIFY_SERVER_CERT') && $this->_mysqli->options(MYSQLI_OPT_SSL_VERIFY_SERVER_CERT, TRUE);
 		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+					// Apparently (when it exists), setting MYSQLI_OPT_SSL_VERIFY_SERVER_CERT
+					// to FALSE didn't do anything, so PHP 5.6.16 introduced yet another
+					// constant ...
+					//
+					// https://secure.php.net/ChangeLog-5.php#5.6.16
+					// https://bugs.php.net/bug.php?id=68344
+					elseif (defined('MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT'))
 		{
-			return TRUE;
+						$this->_mysqli->options(MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT, TRUE);
 		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		$this->simple_query('SET AUTOCOMMIT=0');
-		$this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
-		return TRUE;
 	}
 
-	// --------------------------------------------------------------------
+				$client_flags |= MYSQLI_CLIENT_SSL;
+				$this->_mysqli->ssl_set(
+					isset($ssl['key'])    ? $ssl['key']    : NULL,
+					isset($ssl['cert'])   ? $ssl['cert']   : NULL,
+					isset($ssl['ca'])     ? $ssl['ca']     : NULL,
+					isset($ssl['capath']) ? $ssl['capath'] : NULL,
+					isset($ssl['cipher']) ? $ssl['cipher'] : NULL
+				);
+			}
+		}
 
-	/**
-	 * Commit Transaction
-	 *
-	 * @access	public
-	 * @return	bool
-	 */
-	function trans_commit()
+		if ($this->_mysqli->real_connect($hostname, $this->username, $this->password, $this->database, $port, $socket, $client_flags))
 	{
-		if ( ! $this->trans_enabled)
+			// Prior to version 5.7.3, MySQL silently downgrades to an unencrypted connection if SSL setup fails
+			if (
+				($client_flags & MYSQLI_CLIENT_SSL)
+				&& version_compare($this->_mysqli->client_info, '5.7.3', '<=')
+				&& empty($this->_mysqli->query("SHOW STATUS LIKE 'ssl_cipher'")->fetch_object()->Value)
+			)
 		{
-			return TRUE;
+				$this->_mysqli->close();
+				$message = 'MySQLi was configured for an SSL connection, but got an unencrypted connection instead!';
+				log_message('error', $message);
+				return ($this->db->db_debug) ? $this->db->display_error($message, '', TRUE) : FALSE;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
+			return $this->_mysqli;
 		}
 
-		$this->simple_query('COMMIT');
-		$this->simple_query('SET AUTOCOMMIT=1');
-		return TRUE;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rollback Transaction
+	 * Reconnect
 	 *
-	 * @access	public
-	 * @return	bool
+	 * Keep / reestablish the db connection if no queries have been
+	 * sent for a length of time exceeding the server's idle timeout
+	 *
+	 * @return	void
 	 */
-	function trans_rollback()
+	public function reconnect()
 	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if ($this->conn_id !== FALSE && $this->conn_id->ping() === FALSE)
 		{
-			return TRUE;
+			$this->conn_id = FALSE;
 		}
-
-		$this->simple_query('ROLLBACK');
-		$this->simple_query('SET AUTOCOMMIT=1');
-		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Select the database
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
-	 * @return	string
+	 * @param	string	$database
+	 * @return	bool
 	 */
-	function escape_str($str, $like = FALSE)
+	public function db_select($database = '')
 	{
-		if (is_array($str))
+		if ($database === '')
 		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
+			$database = $this->database;
 		}
 
-		if (function_exists('mysqli_real_escape_string') AND is_object($this->conn_id))
-		{
-			$str = mysqli_real_escape_string($this->conn_id, $str);
-		}
-		elseif (function_exists('mysql_escape_string'))
-		{
-			$str = mysql_escape_string($str);
-		}
-		else
+		if ($this->conn_id->select_db($database))
 		{
-			$str = addslashes($str);
-		}
-
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
-		{
-			$str = str_replace(array('%', '_'), array('\\%', '\\_'), $str);
+			$this->database = $database;
+			return TRUE;
 		}
 
-		return $str;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Affected Rows
-	 *
-	 * @access	public
-	 * @return	integer
-	 */
-	function affected_rows()
-	{
-		return @mysqli_affected_rows($this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert ID
+	 * Set client character set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @param	string	$charset
+	 * @return	bool
 	 */
-	function insert_id()
+	protected function _db_set_charset($charset)
 	{
-		return @mysqli_insert_id($this->conn_id);
+		return $this->conn_id->set_charset($charset);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
+	 * Database version number
 	 *
-	 * @access	public
-	 * @param	string
 	 * @return	string
 	 */
-	function count_all($table = '')
-	{
-		if ($table == '')
+	public function version()
 		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
+		if (isset($this->data_cache['version']))
 		{
-			return 0;
+			return $this->data_cache['version'];
 		}
 
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		return $this->data_cache['version'] = $this->conn_id->server_info;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * List table query
-	 *
-	 * Generates a platform-specific query string so that the table names can be fetched
+	 * Execute the query
 	 *
-	 * @access	private
-	 * @param	boolean
-	 * @return	string
+	 * @param	string	$sql	an SQL query
+	 * @return	mixed
 	 */
-	function _list_tables($prefix_limit = FALSE)
-	{
-		$sql = "SHOW TABLES FROM ".$this->_escape_char.$this->database.$this->_escape_char;
-
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+	protected function _execute($sql)
 		{
-			$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%'";
-		}
-
-		return $sql;
+		return $this->conn_id->query($this->_prep_query($sql));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Show column query
+	 * Prep the query
 	 *
-	 * Generates a platform-specific query string so that the column names can be fetched
+	 * If needed, each database adapter can prep the query string
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$sql	an SQL query
 	 * @return	string
 	 */
-	function _list_columns($table = '')
+	protected function _prep_query($sql)
 	{
-		return "SHOW COLUMNS FROM ".$this->_protect_identifiers($table, TRUE, NULL, FALSE);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _field_data($table)
+		// mysqli_affected_rows() returns 0 for "DELETE FROM TABLE" queries. This hack
+		// modifies the query so that it a proper number of affected rows is returned.
+		if ($this->delete_hack === TRUE && preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
 	{
-		return "DESCRIBE ".$table;
+			return trim($sql).' WHERE 1=1';
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access	private
-	 * @return	string
-	 */
-	function _error_message()
-	{
-		return mysqli_error($this->conn_id);
+		return $sql;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * The error message number
+	 * Begin Transaction
 	 *
-	 * @access	private
-	 * @return	integer
+	 * @return	bool
 	 */
-	function _error_number()
+	protected function _trans_begin()
 	{
-		return mysqli_errno($this->conn_id);
+		$this->conn_id->autocommit(FALSE);
+		return is_php('5.5')
+			? $this->conn_id->begin_transaction()
+			: $this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape the SQL Identifiers
-	 *
-	 * This function escapes column and table names
+	 * Commit Transaction
 	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
+	 * @return	bool
 	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
-		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
-		}
-
-		if (strpos($item, '.') !== FALSE)
+	protected function _trans_commit()
 		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
+		if ($this->conn_id->commit())
 		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
+			$this->conn_id->autocommit(TRUE);
+			return TRUE;
 		}
 
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
+	 * Rollback Transaction
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @return	bool
 	 */
-	function _from_tables($tables)
+	protected function _trans_rollback()
 	{
-		if ( ! is_array($tables))
+		if ($this->conn_id->rollback())
 		{
-			$tables = array($tables);
+			$this->conn_id->autocommit(TRUE);
+			return TRUE;
 		}
 
-		return '('.implode(', ', $tables).')';
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Platform-dependant string escape
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
+	 * @param	string
 	 * @return	string
 	 */
-	function _insert($table, $keys, $values)
+	protected function _escape_str($str)
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		return $this->conn_id->real_escape_string($str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert_batch statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Affected Rows
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
+	 * @return	int
 	 */
-	function _insert_batch($table, $keys, $values)
+	public function affected_rows()
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
+		return $this->conn_id->affected_rows;
 	}
 
 	// --------------------------------------------------------------------
@@ -573,185 +405,128 @@
 
 	// --------------------------------------------------------------------
 
-
 	/**
-	 * Replace statement
-	 *
-	 * Generates a platform-specific replace string from the supplied data
+	 * Insert ID
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
+	 * @return	int
 	 */
-	function _replace($table, $keys, $values)
+	public function insert_id()
 	{
-		return "REPLACE INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		return $this->conn_id->insert_id;
 	}
 	
 	// --------------------------------------------------------------------
 
 	/**
-	 * Update statement
+	 * List table query
 	 *
-	 * Generates a platform-specific update string from the supplied data
+	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		foreach ($values as $key => $val)
+		$sql = 'SHOW TABLES FROM '.$this->escape_identifiers($this->database);
+
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 		{
-			$valstr[] = $key." = ".$val;
+			return $sql." LIKE '".$this->escape_like_str($this->dbprefix)."%'";
 		}
 
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
 		return $sql;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Update_Batch statement
+	 * Show column query
 	 *
-	 * Generates a platform-specific batch update string from the supplied data
+	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _update_batch($table, $values, $index, $where = NULL)
-	{
-		$ids = array();
-		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
-
-		foreach ($values as $key => $val)
+	protected function _list_columns($table = '')
 		{
-			$ids[] = $val[$index];
-
-			foreach (array_keys($val) as $field)
-			{
-				if ($field != $index)
-				{
-					$final[$field][] =  'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
-				}
-			}
+		return 'SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE);
 		}
 
-		$sql = "UPDATE ".$table." SET ";
-		$cases = '';
+	// --------------------------------------------------------------------
 
-		foreach ($final as $k => $v)
+	/**
+	 * Returns an object with field data
+	 *
+	 * @param	string	$table
+	 * @return	array
+	 */
+	public function field_data($table)
 		{
-			$cases .= $k.' = CASE '."\n";
-			foreach ($v as $row)
+		if (($query = $this->query('SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE)
 			{
-				$cases .= $row."\n";
+			return FALSE;
 			}
+		$query = $query->result_object();
 
-			$cases .= 'ELSE '.$k.' END, ';
-		}
-
-		$sql .= substr($cases, 0, -2);
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
+		{
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->Field;
 
-		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
+			sscanf($query[$i]->Type, '%[a-z](%d)',
+				$retval[$i]->type,
+				$retval[$i]->max_length
+			);
 
-		return $sql;
+			$retval[$i]->default		= $query[$i]->Default;
+			$retval[$i]->primary_key	= (int) ($query[$i]->Key === 'PRI');
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Truncate statement
-	 *
-	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _truncate($table)
-	{
-		return "TRUNCATE ".$table;
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Delete statement
+	 * Error
 	 *
-	 * Generates a platform-specific delete string from the supplied data
+	 * Returns an array containing code and message of the last
+	 * database error that has occurred.
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
-	 * @return	string
+	 * @return	array
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
-	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
+	public function error()
 		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
+		if ( ! empty($this->_mysqli->connect_errno))
 			{
-				$conditions .= " AND ";
+			return array(
+				'code' => $this->_mysqli->connect_errno,
+				'message' => is_php('5.2.9') ? $this->_mysqli->connect_error : mysqli_connect_error()
+			);
 			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
 
-		return "DELETE FROM ".$table.$conditions.$limit;
+		return array('code' => $this->conn_id->errno, 'message' => $this->conn_id->error);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Limit string
+	 * FROM tables
 	 *
-	 * Generates a platform-specific LIMIT clause
+	 * Groups tables in FROM clauses if needed, so there is no confusion
+	 * about operator precedence.
 	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
 	 * @return	string
 	 */
-	function _limit($sql, $limit, $offset)
+	protected function _from_tables()
 	{
-		$sql .= "LIMIT ".$limit;
-
-		if ($offset > 0)
+		if ( ! empty($this->qb_join) && count($this->qb_from) > 1)
 		{
-			$sql .= " OFFSET ".$offset;
+			return '('.implode(', ', $this->qb_from).')';
 		}
 
-		return $sql;
+		return implode(', ', $this->qb_from);
 	}
 
 	// --------------------------------------------------------------------
@@ -759,18 +534,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@mysqli_close($conn_id);
+		$this->conn_id->close();
 	}
 
-
 }
-
-
-/* End of file mysqli_driver.php */
-/* Location: ./system/database/drivers/mysqli/mysqli_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysqli/mysqli_forge.php opensourcepos/system/database/drivers/mysqli/mysqli_forge.php
--- pos-prod/system/database/drivers/mysqli/mysqli_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysqli/mysqli_forge.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,129 +1,125 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQLi Forge Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysqli_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE DATABASE statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database($name)
-	{
-		return "CREATE DATABASE ".$name;
-	}
+	protected $_create_database	= 'CREATE DATABASE %s CHARACTER SET %s COLLATE %s';
 
-	// --------------------------------------------------------------------
+	/**
+	 * CREATE TABLE keys flag
+	 *
+	 * Whether table keys are created from within the
+	 * CREATE TABLE statement.
+	 *
+	 * @var	bool
+	 */
+	protected $_create_table_keys	= TRUE;
 
 	/**
-	 * Drop database
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	array
 	 */
-	function _drop_database($name)
-	{
-		return "DROP DATABASE ".$name;
-	}
+	protected $_unsigned		= array(
+		'TINYINT',
+		'SMALLINT',
+		'MEDIUMINT',
+		'INT',
+		'INTEGER',
+		'BIGINT',
+		'REAL',
+		'DOUBLE',
+		'DOUBLE PRECISION',
+		'FLOAT',
+		'DECIMAL',
+		'NUMERIC'
+	);
+
+	/**
+	 * NULL value representation in CREATE/ALTER TABLE statements
+	 *
+	 * @var	string
+	 */
+	protected $_null = 'NULL';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Process Fields
+	 * CREATE TABLE attributes
 	 *
-	 * @access	private
-	 * @param	mixed	the fields
+	 * @param	array	$attributes	Associative array of table attributes
 	 * @return	string
 	 */
-	function _process_fields($fields)
+	protected function _create_table_attr($attributes)
 	{
-		$current_field_count = 0;
 		$sql = '';
 
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				if (array_key_exists('NAME', $attributes))
+		foreach (array_keys($attributes) as $key)
 				{
-					$sql .= ' '.$this->db->_protect_identifiers($attributes['NAME']).' ';
-				}
-
-				if (array_key_exists('TYPE', $attributes))
-				{
-					$sql .=  ' '.$attributes['TYPE'];
-				}
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
-				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
+			if (is_string($key))
 				{
-					$sql .= ' NULL';
+				$sql .= ' '.strtoupper($key).' = '.$attributes[$key];
 				}
-				else
-				{
-					$sql .= ' NOT NULL';
 				}
 
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
+		if ( ! empty($this->db->char_set) && ! strpos($sql, 'CHARACTER SET') && ! strpos($sql, 'CHARSET'))
 				{
-					$sql .= ' AUTO_INCREMENT';
-				}
+			$sql .= ' DEFAULT CHARACTER SET = '.$this->db->char_set;
 			}
 
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
+		if ( ! empty($this->db->dbcollat) && ! strpos($sql, 'COLLATE'))
 			{
-				$sql .= ',';
-			}
+			$sql .= ' COLLATE = '.$this->db->dbcollat;
 		}
 
 		return $sql;
@@ -132,127 +128,117 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * ALTER TABLE
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	mixed	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
+	protected function _alter_table($alter_type, $table, $field)
 	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
+		if ($alter_type === 'DROP')
 		{
-			$sql .= 'IF NOT EXISTS ';
+			return parent::_alter_table($alter_type, $table, $field);
 		}
 
-		$sql .= $this->db->_escape_identifiers($table)." (";
-
-		$sql .= $this->_process_fields($fields);
-
-		if (count($primary_keys) > 0)
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
+		for ($i = 0, $c = count($field); $i < $c; $i++)
 		{
-			$key_name = $this->db->_protect_identifiers(implode('_', $primary_keys));
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY ".$key_name." (" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
+			if ($field[$i]['_literal'] !== FALSE)
 		{
-			foreach ($keys as $key)
+				$field[$i] = ($alter_type === 'ADD')
+						? "\n\tADD ".$field[$i]['_literal']
+						: "\n\tMODIFY ".$field[$i]['_literal'];
+			}
+			else
 			{
-				if (is_array($key))
+				if ($alter_type === 'ADD')
 				{
-					$key_name = $this->db->_protect_identifiers(implode('_', $key));
-					$key = $this->db->_protect_identifiers($key);
+					$field[$i]['_literal'] = "\n\tADD ";
 				}
 				else
 				{
-					$key_name = $this->db->_protect_identifiers($key);
-					$key = array($key_name);
+					$field[$i]['_literal'] = empty($field[$i]['new_name']) ? "\n\tMODIFY " : "\n\tCHANGE ";
 				}
 
-				$sql .= ",\n\tKEY {$key_name} (" . implode(', ', $key) . ")";
+				$field[$i] = $field[$i]['_literal'].$this->_process_column($field[$i]);
 			}
 		}
 
-		$sql .= "\n) DEFAULT CHARACTER SET {$this->db->char_set} COLLATE {$this->db->dbcollat};";
-
-		return $sql;
+		return array($sql.implode(',', $field));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop Table
+	 * Process column
 	 *
-	 * @access	private
+	 * @param	array	$field
 	 * @return	string
 	 */
-	function _drop_table($table)
+	protected function _process_column($field)
 	{
-		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table);
+		$extra_clause = isset($field['after'])
+			? ' AFTER '.$this->db->escape_identifiers($field['after']) : '';
+
+		if (empty($extra_clause) && isset($field['first']) && $field['first'] === TRUE)
+		{
+			$extra_clause = ' FIRST';
+		}
+
+		return $this->db->escape_identifiers($field['name'])
+			.(empty($field['new_name']) ? '' : ' '.$this->db->escape_identifiers($field['new_name']))
+			.' '.$field['type'].$field['length']
+			.$field['unsigned']
+			.$field['null']
+			.$field['default']
+			.$field['auto_increment']
+			.$field['unique']
+			.(empty($field['comment']) ? '' : ' COMMENT '.$field['comment'])
+			.$extra_clause;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
-	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * Process indexes
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	array	fields
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	string	$table	(ignored)
+	 * @return	string
 	 */
-	function _alter_table($alter_type, $table, $fields, $after_field = '')
+	protected function _process_indexes($table)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ";
+		$sql = '';
 
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
+		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
+		{
+			if (is_array($this->keys[$i]))
+			{
+				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
+				{
+					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
 		{
-			return $sql.$this->db->_protect_identifiers($fields);
+						unset($this->keys[$i][$i2]);
+						continue;
 		}
-
-		$sql .= $this->_process_fields($fields);
-
-		if ($after_field != '')
+				}
+			}
+			elseif ( ! isset($this->fields[$this->keys[$i]]))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+				unset($this->keys[$i]);
+				continue;
 		}
 
-		return $sql;
+			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
+
+			$sql .= ",\n\tKEY ".$this->db->escape_identifiers(implode('_', $this->keys[$i]))
+				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).')';
 	}
 
-	// --------------------------------------------------------------------
+		$this->keys = array();
 
-	/**
-	 * Rename a table
-	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
-	 */
-	function _rename_table($table_name, $new_table_name)
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
 		return $sql;
 	}
 
 }
-
-/* End of file mysqli_forge.php */
-/* Location: ./system/database/drivers/mysqli/mysqli_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysqli/mysqli_result.php opensourcepos/system/database/drivers/mysqli/mysqli_result.php
--- pos-prod/system/database/drivers/mysqli/mysqli_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysqli/mysqli_result.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,40 +1,65 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQLi Result Class
  *
  * This class extends the parent result class: CI_DB_result
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysqli_result extends CI_DB_result {
 
 	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
 	{
-		return @mysqli_num_rows($this->result_id);
+		return is_int($this->num_rows)
+			? $this->num_rows
+			: $this->num_rows = $this->result_id->num_rows;
 	}
 
 	// --------------------------------------------------------------------
@@ -42,12 +67,11 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
-		return @mysqli_num_fields($this->result_id);
+		return $this->result_id->field_count;
 	}
 
 	// --------------------------------------------------------------------
@@ -57,13 +81,13 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
-		while ($field = mysqli_fetch_field($this->result_id))
+		$this->result_id->field_seek(0);
+		while ($field = $this->result_id->fetch_field())
 		{
 			$field_names[] = $field->name;
 		}
@@ -78,27 +102,20 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		while ($field = mysqli_fetch_object($this->result_id))
+		$field_data = $this->result_id->fetch_fields();
+		for ($i = 0, $c = count($field_data); $i < $c; $i++)
 		{
-			preg_match('/([a-zA-Z]+)(\(\d+\))?/', $field->Type, $matches);
-
-			$type = (array_key_exists(1, $matches)) ? $matches[1] : NULL;
-			$length = (array_key_exists(2, $matches)) ? preg_replace('/[^\d]/', '', $matches[2]) : NULL;
-
-			$F				= new stdClass();
-			$F->name		= $field->Field;
-			$F->type		= $type;
-			$F->default		= $field->Default;
-			$F->max_length	= $length;
-			$F->primary_key = ( $field->Key == 'PRI' ? 1 : 0 );
-
-			$retval[] = $F;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $field_data[$i]->name;
+			$retval[$i]->type		= $field_data[$i]->type;
+			$retval[$i]->max_length		= $field_data[$i]->max_length;
+			$retval[$i]->primary_key	= (int) ($field_data[$i]->flags & 2);
+			$retval[$i]->default		= $field_data[$i]->def;
 		}
 
 		return $retval;
@@ -109,13 +126,13 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_object($this->result_id))
 		{
-			mysqli_free_result($this->result_id);
+			$this->result_id->free();
 			$this->result_id = FALSE;
 		}
 	}
@@ -127,14 +144,14 @@
 	 *
 	 * Moves the internal pointer to the desired offset.  We call
 	 * this internally before fetching results to make sure the
-	 * result set starts at zero
+	 * result set starts at zero.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	int	$n
+	 * @return	bool
 	 */
-	function _data_seek($n = 0)
+	public function data_seek($n = 0)
 	{
-		return mysqli_data_seek($this->result_id, $n);
+		return $this->result_id->data_seek($n);
 	}
 
 	// --------------------------------------------------------------------
@@ -144,12 +161,11 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
-		return mysqli_fetch_assoc($this->result_id);
+		return $this->result_id->fetch_assoc();
 	}
 
 	// --------------------------------------------------------------------
@@ -159,16 +175,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		return mysqli_fetch_object($this->result_id);
+		return $this->result_id->fetch_object($class_name);
 	}
 
 }
-
-
-/* End of file mysqli_result.php */
-/* Location: ./system/database/drivers/mysqli/mysqli_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/mysqli/mysqli_utility.php opensourcepos/system/database/drivers/mysqli/mysqli_utility.php
--- pos-prod/system/database/drivers/mysqli/mysqli_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/mysqli/mysqli_utility.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,87 +1,213 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * MySQLi Utility Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_mysqli_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
+	 * List databases statement
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	string
 	 */
-	function _list_databases()
-	{
-		return "SHOW DATABASES";
-	}
-
-	// --------------------------------------------------------------------
+	protected $_list_databases	= 'SHOW DATABASES';
 
 	/**
-	 * Optimize table query
+	 * OPTIMIZE TABLE statement
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _optimize_table($table)
-	{
-		return "OPTIMIZE TABLE ".$this->db->_escape_identifiers($table);
-	}
-
-	// --------------------------------------------------------------------
+	protected $_optimize_table	= 'OPTIMIZE TABLE %s';
 
 	/**
-	 * Repair table query
+	 * REPAIR TABLE statement
 	 *
-	 * Generates a platform-specific query so that a table can be repaired
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _repair_table($table)
-	{
-		return "REPAIR TABLE ".$this->db->_escape_identifiers($table);
-	}
+	protected $_repair_table	= 'REPAIR TABLE %s';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * MySQLi Export
+	 * Export
 	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
+	{
+		if (count($params) === 0)
 	{
-		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
+			return FALSE;
 	}
+
+		// Extract the prefs for simplicity
+		extract($params);
+
+		// Build the output
+		$output = '';
+
+		// Do we need to include a statement to disable foreign key checks?
+		if ($foreign_key_checks === FALSE)
+		{
+			$output .= 'SET foreign_key_checks = 0;'.$newline;
+		}
+
+		foreach ( (array) $tables as $table)
+		{
+			// Is the table in the "ignore" list?
+			if (in_array($table, (array) $ignore, TRUE))
+			{
+				continue;
+			}
+
+			// Get the table schema
+			$query = $this->db->query('SHOW CREATE TABLE '.$this->db->escape_identifiers($this->db->database.'.'.$table));
+
+			// No result means the table name was invalid
+			if ($query === FALSE)
+			{
+				continue;
 }
 
-/* End of file mysqli_utility.php */
-/* Location: ./system/database/drivers/mysqli/mysqli_utility.php */
\ No newline at end of file
+			// Write out the table schema
+			$output .= '#'.$newline.'# TABLE STRUCTURE FOR: '.$table.$newline.'#'.$newline.$newline;
+
+			if ($add_drop === TRUE)
+			{
+				$output .= 'DROP TABLE IF EXISTS '.$this->db->protect_identifiers($table).';'.$newline.$newline;
+			}
+
+			$i = 0;
+			$result = $query->result_array();
+			foreach ($result[0] as $val)
+			{
+				if ($i++ % 2)
+				{
+					$output .= $val.';'.$newline.$newline;
+				}
+			}
+
+			// If inserts are not needed we're done...
+			if ($add_insert === FALSE)
+			{
+				continue;
+			}
+
+			// Grab all the data from the current table
+			$query = $this->db->query('SELECT * FROM '.$this->db->protect_identifiers($table));
+
+			if ($query->num_rows() === 0)
+			{
+				continue;
+			}
+
+			// Fetch the field names and determine if the field is an
+			// integer type. We use this info to decide whether to
+			// surround the data with quotes or not
+
+			$i = 0;
+			$field_str = '';
+			$is_int = array();
+			while ($field = $query->result_id->fetch_field())
+			{
+				// Most versions of MySQL store timestamp as a string
+				$is_int[$i] = in_array(strtolower($field->type),
+							array('tinyint', 'smallint', 'mediumint', 'int', 'bigint'), //, 'timestamp'),
+							TRUE);
+
+				// Create a string of field names
+				$field_str .= $this->db->escape_identifiers($field->name).', ';
+				$i++;
+			}
+
+			// Trim off the end comma
+			$field_str = preg_replace('/, $/' , '', $field_str);
+
+			// Build the insert string
+			foreach ($query->result_array() as $row)
+			{
+				$val_str = '';
+
+				$i = 0;
+				foreach ($row as $v)
+				{
+					// Is the value NULL?
+					if ($v === NULL)
+					{
+						$val_str .= 'NULL';
+					}
+					else
+					{
+						// Escape the data if it's not an integer
+						$val_str .= ($is_int[$i] === FALSE) ? $this->db->escape($v) : $v;
+					}
+
+					// Append a comma
+					$val_str .= ', ';
+					$i++;
+				}
+
+				// Remove the comma at the end of the string
+				$val_str = preg_replace('/, $/' , '', $val_str);
+
+				// Build the INSERT string
+				$output .= 'INSERT INTO '.$this->db->protect_identifiers($table).' ('.$field_str.') VALUES ('.$val_str.');'.$newline;
+			}
+
+			$output .= $newline.$newline;
+		}
+
+		// Do we need to include a statement to re-enable foreign key checks?
+		if ($foreign_key_checks === FALSE)
+		{
+			$output .= 'SET foreign_key_checks = 1;'.$newline;
+		}
+
+		return $output;
+	}
+
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/oci8/index.html opensourcepos/system/database/drivers/oci8/index.html
--- pos-prod/system/database/drivers/oci8/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/oci8/index.html	2016-05-23 15:32:31.938838898 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/oci8/oci8_driver.php opensourcepos/system/database/drivers/oci8/oci8_driver.php
--- pos-prod/system/database/drivers/oci8/oci8_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/oci8/oci8_driver.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,32 +1,54 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright   Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.4.1
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * oci8 Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage  Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 
 /**
@@ -36,185 +58,244 @@
  * permit access to oracle databases
  *
  * @author	  Kelly McArdle
- *
  */
-
 class CI_DB_oci8_driver extends CI_DB {
 
-	var $dbdriver = 'oci8';
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver = 'oci8';
 
-	// The character used for excaping
-	var $_escape_char = '"';
+	/**
+	 * Statement ID
+	 *
+	 * @var	resource
+	 */
+	public $stmt_id;
 
-	// clause and character used for LIKE escape sequences
-	var $_like_escape_str = " escape '%s' ";
-	var $_like_escape_chr = '!';
+	/**
+	 * Cursor ID
+	 *
+	 * @var	resource
+	 */
+	public $curs_id;
 
 	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
+	 * Commit mode flag
+	 *
+	 * @var	int
 	 */
-	var $_count_string = "SELECT COUNT(1) AS ";
-	var $_random_keyword = ' ASC'; // not currently supported
+	public $commit_mode = OCI_COMMIT_ON_SUCCESS;
 
-	// Set "auto commit" by default
-	var $_commit = OCI_COMMIT_ON_SUCCESS;
+	/**
+	 * Limit used flag
+	 *
+	 * If we use LIMIT, we'll add a field that will
+	 * throw off num_fields later.
+	 *
+	 * @var	bool
+	 */
+	public $limit_used;
 
-	// need to track statement id and cursor id
-	var $stmt_id;
-	var $curs_id;
+	// --------------------------------------------------------------------
 
-	// if we use a limit, we will add a field that will
-	// throw off num_fields later
-	var $limit_used;
+	/**
+	 * Reset $stmt_id flag
+	 *
+	 * Used by stored_procedure() to prevent _execute() from
+	 * re-setting the statement ID.
+	 */
+	protected $_reset_stmt_id = TRUE;
 
 	/**
-	 * Non-persistent database connection
+	 * List of reserved identifiers
 	 *
-	 * @access  private called by the base class
-	 * @return  resource
+	 * Identifiers that must NOT be escaped.
+	 *
+	 * @var	string[]
 	 */
-	public function db_connect()
-	{
-		return @oci_connect($this->username, $this->password, $this->hostname, $this->char_set);
-	}
+	protected $_reserved_identifiers = array('*', 'rownum');
 
-	// --------------------------------------------------------------------
+	/**
+	 * ORDER BY random keyword
+	 *
+	 * @var	array
+	 */
+	protected $_random_keyword = array('ASC', 'ASC'); // not currently supported
 
 	/**
-	 * Persistent database connection
+	 * COUNT string
 	 *
-	 * @access  private called by the base class
-	 * @return  resource
+	 * @used-by	CI_DB_driver::count_all()
+	 * @used-by	CI_DB_query_builder::count_all_results()
+	 *
+	 * @var	string
 	 */
-	public function db_pconnect()
-	{
-		return @oci_pconnect($this->username, $this->password, $this->hostname, $this->char_set);
-	}
+	protected $_count_string = 'SELECT COUNT(1) AS ';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Reconnect
-	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
+	 * Class constructor
 	 *
-	 * @access	public
+	 * @param	array	$params
 	 * @return	void
 	 */
-	public function reconnect()
+	public function __construct($params)
+	{
+		parent::__construct($params);
+
+		$valid_dsns = array(
+			'tns'	=> '/^\(DESCRIPTION=(\(.+\)){2,}\)$/', // TNS
+			// Easy Connect string (Oracle 10g+)
+			'ec'	=> '/^(\/\/)?[a-z0-9.:_-]+(:[1-9][0-9]{0,4})?(\/[a-z0-9$_]+)?(:[^\/])?(\/[a-z0-9$_]+)?$/i',
+			'in'	=> '/^[a-z0-9$_]+$/i' // Instance name (defined in tnsnames.ora)
+		);
+
+		/* Space characters don't have any effect when actually
+		 * connecting, but can be a hassle while validating the DSN.
+		 */
+		$this->dsn = str_replace(array("\n", "\r", "\t", ' '), '', $this->dsn);
+
+		if ($this->dsn !== '')
+		{
+			foreach ($valid_dsns as $regexp)
+			{
+				if (preg_match($regexp, $this->dsn))
 	{
-		// not implemented in oracle
 		return;
 	}
+			}
+		}
 
-	// --------------------------------------------------------------------
+		// Legacy support for TNS in the hostname configuration field
+		$this->hostname = str_replace(array("\n", "\r", "\t", ' '), '', $this->hostname);
+		if (preg_match($valid_dsns['tns'], $this->hostname))
+		{
+			$this->dsn = $this->hostname;
+			return;
+		}
+		elseif ($this->hostname !== '' && strpos($this->hostname, '/') === FALSE && strpos($this->hostname, ':') === FALSE
+			&& (( ! empty($this->port) && ctype_digit($this->port)) OR $this->database !== ''))
+		{
+			/* If the hostname field isn't empty, doesn't contain
+			 * ':' and/or '/' and if port and/or database aren't
+			 * empty, then the hostname field is most likely indeed
+			 * just a hostname. Therefore we'll try and build an
+			 * Easy Connect string from these 3 settings, assuming
+			 * that the database field is a service name.
+			 */
+			$this->dsn = $this->hostname
+				.(( ! empty($this->port) && ctype_digit($this->port)) ? ':'.$this->port : '')
+				.($this->database !== '' ? '/'.ltrim($this->database, '/') : '');
 
-	/**
-	 * Select the database
-	 *
-	 * @access  private called by the base class
-	 * @return  resource
+			if (preg_match($valid_dsns['ec'], $this->dsn))
+			{
+				return;
+			}
+		}
+
+		/* At this point, we can only try and validate the hostname and
+		 * database fields separately as DSNs.
 	 */
-	public function db_select()
+		if (preg_match($valid_dsns['ec'], $this->hostname) OR preg_match($valid_dsns['in'], $this->hostname))
 	{
-		// Not in Oracle - schemas are actually usernames
-		return TRUE;
+			$this->dsn = $this->hostname;
+			return;
 	}
 
-	// --------------------------------------------------------------------
+		$this->database = str_replace(array("\n", "\r", "\t", ' '), '', $this->database);
+		foreach ($valid_dsns as $regexp)
+		{
+			if (preg_match($regexp, $this->database))
+			{
+				return;
+			}
+		}
 
-	/**
-	 * Set client character set
-	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
+		/* Well - OK, an empty string should work as well.
+		 * PHP will try to use environment variables to
+		 * determine which Oracle instance to connect to.
 	 */
-	public function db_set_charset($charset, $collation)
-	{
-		// @todo - add support if needed
-		return TRUE;
+		$this->dsn = '';
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Version number query string
+	 * Non-persistent database connection
 	 *
-	 * @access  protected
-	 * @return  string
+	 * @param	bool	$persistent
+	 * @return	resource
 	 */
-	protected function _version()
+	public function db_connect($persistent = FALSE)
 	{
-		return oci_server_version($this->conn_id);
+		$func = ($persistent === TRUE) ? 'oci_pconnect' : 'oci_connect';
+		return empty($this->char_set)
+			? $func($this->username, $this->password, $this->dsn)
+			: $func($this->username, $this->password, $this->dsn, $this->char_set);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Execute the query
+	 * Database version number
 	 *
-	 * @access  protected  called by the base class
-	 * @param   string  an SQL query
-	 * @return  resource
+	 * @return	string
 	 */
-	protected function _execute($sql)
+	public function version()
 	{
-		// oracle must parse the query before it is run. All of the actions with
-		// the query are based on the statement id returned by ociparse
-		$this->stmt_id = FALSE;
-		$this->_set_stmt_id($sql);
-		oci_set_prefetch($this->stmt_id, 1000);
-		return @oci_execute($this->stmt_id, $this->_commit);
+		if (isset($this->data_cache['version']))
+		{
+			return $this->data_cache['version'];
 	}
 
-	/**
-	 * Generate a statement ID
-	 *
-	 * @access  private
-	 * @param   string  an SQL query
-	 * @return  none
-	 */
-	private function _set_stmt_id($sql)
+		if ( ! $this->conn_id OR ($version_string = oci_server_version($this->conn_id)) === FALSE)
 	{
-		if ( ! is_resource($this->stmt_id))
+			return FALSE;
+		}
+		elseif (preg_match('#Release\s(\d+(?:\.\d+)+)#', $version_string, $match))
 		{
-			$this->stmt_id = oci_parse($this->conn_id, $this->_prep_query($sql));
+			return $this->data_cache['version'] = $match[1];
 		}
+
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
+	 * Execute the query
 	 *
-	 * @access  private called by execute()
-	 * @param   string  an SQL query
-	 * @return  string
+	 * @param	string	$sql	an SQL query
+	 * @return	resource
+	 */
+	protected function _execute($sql)
+	{
+		/* Oracle must parse the query before it is run. All of the actions with
+		 * the query are based on the statement id returned by oci_parse().
 	 */
-	private function _prep_query($sql)
+		if ($this->_reset_stmt_id === TRUE)
 	{
-		return $sql;
+			$this->stmt_id = oci_parse($this->conn_id, $sql);
+		}
+
+		oci_set_prefetch($this->stmt_id, 1000);
+		return oci_execute($this->stmt_id, $this->commit_mode);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * getCursor.  Returns a cursor from the datbase
+	 * Get cursor. Returns a cursor from the database
 	 *
-	 * @access  public
-	 * @return  cursor id
+	 * @return	resource
 	 */
 	public function get_cursor()
 	{
-		$this->curs_id = oci_new_cursor($this->conn_id);
-		return $this->curs_id;
+		return $this->curs_id = oci_new_cursor($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -222,11 +303,10 @@
 	/**
 	 * Stored Procedure.  Executes a stored procedure
 	 *
-	 * @access  public
-	 * @param   package	 package stored procedure is in
-	 * @param   procedure   stored procedure to execute
-	 * @param   params	  array of parameters
-	 * @return  array
+	 * @param	string	package name in which the stored procedure is in
+	 * @param	string	stored procedure name to execute
+	 * @param	array	parameters
+	 * @return	mixed
 	 *
 	 * params array keys
 	 *
@@ -237,37 +317,35 @@
 	 * type		yes		the type of the parameter
 	 * length	yes		the max size of the parameter
 	 */
-	public function stored_procedure($package, $procedure, $params)
+	public function stored_procedure($package, $procedure, array $params)
 	{
-		if ($package == '' OR $procedure == '' OR ! is_array($params))
-		{
-			if ($this->db_debug)
+		if ($package === '' OR $procedure === '')
 			{
 				log_message('error', 'Invalid query: '.$package.'.'.$procedure);
-				return $this->display_error('db_invalid_query');
-			}
-			return FALSE;
+			return ($this->db_debug) ? $this->display_error('db_invalid_query') : FALSE;
 		}
 
 		// build the query string
-		$sql = "begin $package.$procedure(";
+		$sql = 'BEGIN '.$package.'.'.$procedure.'(';
 
 		$have_cursor = FALSE;
 		foreach ($params as $param)
 		{
-			$sql .= $param['name'] . ",";
+			$sql .= $param['name'].',';
 
-			if (array_key_exists('type', $param) && ($param['type'] === OCI_B_CURSOR))
+			if (isset($param['type']) && $param['type'] === OCI_B_CURSOR)
 			{
 				$have_cursor = TRUE;
 			}
 		}
-		$sql = trim($sql, ",") . "); end;";
+		$sql = trim($sql, ',').'); END;';
 
-		$this->stmt_id = FALSE;
-		$this->_set_stmt_id($sql);
+		$this->_reset_stmt_id = FALSE;
+		$this->stmt_id = oci_parse($this->conn_id, $sql);
 		$this->_bind_params($params);
-		$this->query($sql, FALSE, $have_cursor);
+		$result = $this->query($sql, FALSE, $have_cursor);
+		$this->_reset_stmt_id = TRUE;
+		return $result;
 	}
 
 	// --------------------------------------------------------------------
@@ -275,10 +353,10 @@
 	/**
 	 * Bind parameters
 	 *
-	 * @access  private
-	 * @return  none
+	 * @param	array	$params
+	 * @return	void
 	 */
-	private function _bind_params($params)
+	protected function _bind_params($params)
 	{
 		if ( ! is_array($params) OR ! is_resource($this->stmt_id))
 		{
@@ -304,28 +382,11 @@
 	/**
 	 * Begin Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	public function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_begin()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		$this->_commit = OCI_DEFAULT;
+		$this->commit_mode = is_php('5.3.2') ? OCI_NO_AUTO_COMMIT : OCI_DEFAULT;
 		return TRUE;
 	}
 
@@ -334,25 +395,13 @@
 	/**
 	 * Commit Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	public function trans_commit()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_commit()
 		{
-			return TRUE;
-		}
+		$this->commit_mode = OCI_COMMIT_ON_SUCCESS;
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		$ret = oci_commit($this->conn_id);
-		$this->_commit = OCI_COMMIT_ON_SUCCESS;
-		return $ret;
+		return oci_commit($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -360,60 +409,12 @@
 	/**
 	 * Rollback Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	public function trans_rollback()
+	protected function _trans_rollback()
 	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		$ret = oci_rollback($this->conn_id);
-		$this->_commit = OCI_COMMIT_ON_SUCCESS;
-		return $ret;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Escape String
-	 *
-	 * @access  public
-	 * @param   string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
-	 * @return  string
-	 */
-	public function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
-		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
-		}
-
-		$str = remove_invisible_characters($str);
-
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
-		{
-			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
-								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
-								$str);
-		}
-
-		return $str;
+		$this->commit_mode = OCI_COMMIT_ON_SUCCESS;
+		return oci_rollback($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -421,12 +422,11 @@
 	/**
 	 * Affected Rows
 	 *
-	 * @access  public
-	 * @return  integer
+	 * @return	int
 	 */
 	public function affected_rows()
 	{
-		return @oci_num_rows($this->stmt_id);
+		return oci_num_rows($this->stmt_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -434,8 +434,7 @@
 	/**
 	 * Insert ID
 	 *
-	 * @access  public
-	 * @return  integer
+	 * @return	int
 	 */
 	public function insert_id()
 	{
@@ -446,52 +445,21 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
-	 *
-	 * @access  public
-	 * @param   string
-	 * @return  string
-	 */
-	public function count_all($table = '')
-	{
-		if ($table == '')
-		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query == FALSE)
-		{
-			return 0;
-		}
-
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
 	 * Show table query
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	protected
-	 * @param	boolean
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
 	protected function _list_tables($prefix_limit = FALSE)
 	{
-		$sql = "SELECT TABLE_NAME FROM ALL_TABLES";
+		$sql = 'SELECT "TABLE_NAME" FROM "ALL_TABLES"';
 
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 		{
-			$sql .= " WHERE TABLE_NAME LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
+			return $sql.' WHERE "TABLE_NAME" LIKE \''.$this->escape_like_str($this->dbprefix)."%' "
+				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
 		}
 
 		return $sql;
@@ -504,154 +472,122 @@
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access  protected
-	 * @param   string  the table name
+	 * @param	string	$table
 	 * @return  string
 	 */
 	protected function _list_columns($table = '')
 	{
-		return "SELECT COLUMN_NAME FROM all_tab_columns WHERE table_name = '$table'";
+		if (strpos($table, '.') !== FALSE)
+		{
+			sscanf($table, '%[^.].%s', $owner, $table);
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
-	 *
-	 * @access  public
-	 * @param   string  the table name
-	 * @return  object
-	 */
-	protected function _field_data($table)
+		else
 	{
-		return "SELECT * FROM ".$table." where rownum = 1";
+			$owner = $this->username;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access  protected
-	 * @return  string
-	 */
-	protected function _error_message()
-	{
-		// If the error was during connection, no conn_id should be passed
-		$error = is_resource($this->conn_id) ? oci_error($this->conn_id) : oci_error();
-		return $error['message'];
+		return 'SELECT COLUMN_NAME FROM ALL_TAB_COLUMNS
+			WHERE UPPER(OWNER) = '.$this->escape(strtoupper($owner)).'
+				AND UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * The error message number
+	 * Returns an object with field data
 	 *
-	 * @access  protected
-	 * @return  integer
+	 * @param	string	$table
+	 * @return	array
 	 */
-	protected function _error_number()
+	public function field_data($table)
+	{
+		if (strpos($table, '.') !== FALSE)
+		{
+			sscanf($table, '%[^.].%s', $owner, $table);
+		}
+		else
 	{
-		// Same as _error_message()
-		$error = is_resource($this->conn_id) ? oci_error($this->conn_id) : oci_error();
-		return $error['code'];
+			$owner = $this->username;
 	}
 
-	// --------------------------------------------------------------------
+		$sql = 'SELECT COLUMN_NAME, DATA_TYPE, CHAR_LENGTH, DATA_PRECISION, DATA_LENGTH, DATA_DEFAULT, NULLABLE
+			FROM ALL_TAB_COLUMNS
+			WHERE UPPER(OWNER) = '.$this->escape(strtoupper($owner)).'
+				AND UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
 
-	/**
-	 * Escape the SQL Identifiers
-	 *
-	 * This function escapes column and table names
-	 *
-	 * @access	protected
-	 * @param	string
-	 * @return	string
-	 */
-	protected function _escape_identifiers($item)
+		if (($query = $this->query($sql)) === FALSE)
 	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
+			return FALSE;
 		}
+		$query = $query->result_object();
 
-		foreach ($this->_reserved_identifiers as $id)
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->COLUMN_NAME;
+			$retval[$i]->type		= $query[$i]->DATA_TYPE;
 
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
+			$length = ($query[$i]->CHAR_LENGTH > 0)
+				? $query[$i]->CHAR_LENGTH : $query[$i]->DATA_PRECISION;
+			if ($length === NULL)
+			{
+				$length = $query[$i]->DATA_LENGTH;
 		}
+			$retval[$i]->max_length		= $length;
 
-		if (strpos($item, '.') !== FALSE)
+			$default = $query[$i]->DATA_DEFAULT;
+			if ($default === NULL && $query[$i]->NULLABLE === 'N')
 		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
+				$default = '';
 		}
-		else
-		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
+			$retval[$i]->default = $default;
 		}
 
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * From Tables
+	 * Error
 	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	protected
-	 * @param	type
-	 * @return	type
+	 * @return	array
 	 */
-	protected function _from_tables($tables)
+	public function error()
 	{
-		if ( ! is_array($tables))
+		/* oci_error() returns an array that already contains the
+		 * 'code' and 'message' keys, so we can just return it.
+		 */
+		if (is_resource($this->curs_id))
 		{
-			$tables = array($tables);
+			return oci_error($this->curs_id);
 		}
-
-		return implode(', ', $tables);
+		elseif (is_resource($this->stmt_id))
+		{
+			return oci_error($this->stmt_id);
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access  public
-	 * @param   string  the table name
-	 * @param   array   the insert keys
-	 * @param   array   the insert values
-	 * @return  string
-	 */
-	protected function _insert($table, $keys, $values)
+		elseif (is_resource($this->conn_id))
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+			return oci_error($this->conn_id);
+		}
+
+		return oci_error();
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert_batch statement
+	 * Insert batch statement
 	 *
 	 * Generates a platform-specific insert string from the supplied data
 	 *
-	 * @access      protected
-	 * @param       string  the table name
-	 * @param       array   the insert keys
-	 * @param       array   the insert values
+	 * @param	string	$table	Table name
+	 * @param	array	$keys	INSERT keys
+	 * @param 	array	$values	INSERT values
 	 * @return      string
 	 */
 	protected function _insert_batch($table, $keys, $values)
@@ -664,44 +600,7 @@
 			$sql .= '	INTO ' . $table . ' (' . $keys . ') VALUES ' . $values[$i] . "\n";
 		}
 
-		$sql .= 'SELECT * FROM dual';
-
-		return $sql;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Update statement
-	 *
-	 * Generates a platform-specific update string from the supplied data
-	 *
-	 * @access	protected
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
-	 * @return	string
-	 */
-	protected function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
-	{
-		foreach ($values as $key => $val)
-		{
-			$valstr[] = $key." = ".$val;
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
+		return $sql.'SELECT * FROM dual';
 	}
 
 	// --------------------------------------------------------------------
@@ -710,16 +609,16 @@
 	 * Truncate statement
 	 *
 	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
 	 *
-	 * @access	protected
-	 * @param	string	the table name
+	 * If the database does not support the TRUNCATE statement,
+	 * then this method maps to 'DELETE FROM table'
+	 *
+	 * @param	string	$table
 	 * @return	string
 	 */
 	protected function _truncate($table)
 	{
-		return "TRUNCATE TABLE ".$table;
+		return 'TRUNCATE TABLE '.$table;
 	}
 
 	// --------------------------------------------------------------------
@@ -729,60 +628,43 @@
 	 *
 	 * Generates a platform-specific delete string from the supplied data
 	 *
-	 * @access	protected
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	protected function _delete($table, $where = array(), $like = array(), $limit = FALSE)
-	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
+	protected function _delete($table)
 		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
+		if ($this->qb_limit)
 			{
-				$conditions .= " AND ";
+			$this->where('rownum <= ',$this->qb_limit, FALSE);
+			$this->qb_limit = FALSE;
 			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
 
-		return "DELETE FROM ".$table.$conditions.$limit;
+		return parent::_delete($table);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Limit string
+	 * LIMIT
 	 *
 	 * Generates a platform-specific LIMIT clause
 	 *
-	 * @access  protected
-	 * @param   string  the sql query string
-	 * @param   integer the number of rows to limit the query to
-	 * @param   integer the offset value
+	 * @param	string	$sql	SQL Query
 	 * @return  string
 	 */
-	protected function _limit($sql, $limit, $offset)
+	protected function _limit($sql)
 	{
-		$limit = $offset + $limit;
-		$newsql = "SELECT * FROM (select inner_query.*, rownum rnum FROM ($sql) inner_query WHERE rownum < $limit)";
-
-		if ($offset != 0)
+		if (version_compare($this->version(), '12.1', '>='))
 		{
-			$newsql .= " WHERE rnum >= $offset";
+			// OFFSET-FETCH can be used only with the ORDER BY clause
+			empty($this->qb_orderby) && $sql .= ' ORDER BY 1';
+
+			return $sql.' OFFSET '.(int) $this->qb_offset.' ROWS FETCH NEXT '.$this->qb_limit.' ROWS ONLY';
 		}
 
-		// remember that we used limits
 		$this->limit_used = TRUE;
-
-		return $newsql;
+		return 'SELECT * FROM (SELECT inner_query.*, rownum rnum FROM ('.$sql.') inner_query WHERE rownum < '.($this->qb_offset + $this->qb_limit + 1).')'
+			.($this->qb_offset ? ' WHERE rnum >= '.($this->qb_offset + 1) : '');
 	}
 
 	// --------------------------------------------------------------------
@@ -790,19 +672,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access  protected
-	 * @param   resource
 	 * @return  void
 	 */
-	protected function _close($conn_id)
+	protected function _close()
 	{
-		@oci_close($conn_id);
+		oci_close($this->conn_id);
 	}
 
-
 }
-
-
-
-/* End of file oci8_driver.php */
-/* Location: ./system/database/drivers/oci8/oci8_driver.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/oci8/oci8_forge.php opensourcepos/system/database/drivers/oci8/oci8_forge.php
--- pos-prod/system/database/drivers/oci8/oci8_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/oci8/oci8_forge.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,248 +1,149 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.4.1
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Oracle Forge Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_oci8_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE DATABASE statement
 	 *
-	 * @access	public
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database($name)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_create_database	= FALSE;
 
 	/**
-	 * Drop database
+	 * DROP DATABASE statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _drop_database($name)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_drop_database	= FALSE;
 
 	/**
-	 * Create Table
+	 * DROP TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
-	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
-		{
-			$sql .= 'IF NOT EXISTS ';
-		}
-
-		$sql .= $this->db->_escape_identifiers($table)." (";
-		$current_field_count = 0;
-
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				$sql .=  ' '.$attributes['TYPE'];
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
-				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
-				{
-					$sql .= ' NULL';
-				}
-				else
-				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' AUTO_INCREMENT';
-				}
-			}
-
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
-			{
-				$sql .= ',';
-			}
-		}
-
-		if (count($primary_keys) > 0)
-		{
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
-				}
-
-				$sql .= ",\n\tUNIQUE COLUMNS (" . implode(', ', $key) . ")";
-			}
-		}
-
-		$sql .= "\n)";
-
-		return $sql;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_drop_table_if	= FALSE;
 
 	/**
-	 * Drop Table
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	bool|array
 	 */
-	function _drop_table($table)
-	{
-		return FALSE;
-	}
+	protected $_unsigned		= FALSE;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
-	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * ALTER TABLE
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
 	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
+	protected function _alter_table($alter_type, $table, $field)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
+		if ($alter_type === 'DROP')
 		{
-			return $sql;
+			return parent::_alter_table($alter_type, $table, $field);
 		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
+		elseif ($alter_type === 'CHANGE')
 		{
-			$sql .= " DEFAULT \"$default_value\"";
+			$alter_type = 'MODIFY';
 		}
 
-		if ($null === NULL)
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
+		$sqls = array();
+		for ($i = 0, $c = count($field); $i < $c; $i++)
+		{
+			if ($field[$i]['_literal'] !== FALSE)
 		{
-			$sql .= ' NULL';
+				$field[$i] = "\n\t".$field[$i]['_literal'];
 		}
 		else
 		{
-			$sql .= ' NOT NULL';
+				$field[$i]['_literal'] = "\n\t".$this->_process_column($field[$i]);
+
+				if ( ! empty($field[$i]['comment']))
+				{
+					$sqls[] = 'COMMENT ON COLUMN '
+						.$this->db->escape_identifiers($table).'.'.$this->db->escape_identifiers($field[$i]['name'])
+						.' IS '.$field[$i]['comment'];
 		}
 
-		if ($after_field != '')
+				if ($alter_type === 'MODIFY' && ! empty($field[$i]['new_name']))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+					$sqls[] = $sql.' RENAME COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
+						.' '.$this->db->escape_identifiers($field[$i]['new_name']);
+				}
+			}
 		}
 
-		return $sql;
+		$sql .= ' '.$alter_type.' ';
+		$sql .= (count($field) === 1)
+				? $field[0]
+				: '('.implode(',', $field).')';
 
+		// RENAME COLUMN must be executed after MODIFY
+		array_unshift($sqls, $sql);
+		return $sql;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rename a table
-	 *
-	 * Generates a platform-specific query so that a table can be renamed
+	 * Field attribute AUTO_INCREMENT
 	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
 	 */
-	function _rename_table($table_name, $new_table_name)
+	protected function _attr_auto_increment(&$attributes, &$field)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
-		return $sql;
+		// Not supported - sequences and triggers must be used instead
 	}
 
-
 }
-
-/* End of file oci8_forge.php */
-/* Location: ./system/database/drivers/oci8/oci8_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/oci8/oci8_result.php opensourcepos/system/database/drivers/oci8/oci8_result.php
--- pos-prod/system/database/drivers/oci8/oci8_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/oci8/oci8_result.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright   Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.4.1
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * oci8 Result Class
@@ -21,37 +43,56 @@
  * This class extends the parent result class: CI_DB_result
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_oci8_result extends CI_DB_result {
 
+	/**
+	 * Statement ID
+	 *
+	 * @var	resource
+	 */
 	public $stmt_id;
+
+	/**
+	 * Cursor ID
+	 *
+	 * @var	resource
+	 */
 	public $curs_id;
-	public $limit_used;
 
 	/**
-	 * Number of rows in the result set.
+	 * Limit used flag
 	 *
-	 * Oracle doesn't have a graceful way to retun the number of rows
-	 * so we have to use what amounts to a hack.
+	 * @var	bool
+	 */
+	public $limit_used;
+
+	/**
+	 * Commit mode flag
 	 *
-	 * @return  integer
+	 * @var	int
 	 */
-	public function num_rows()
-	{
-		if ($this->num_rows === 0 && count($this->result_array()) > 0)
-		{
-			$this->num_rows = count($this->result_array());
-			@oci_execute($this->stmt_id, OCI_DEFAULT);
+	public $commit_mode;
 
-			if ($this->curs_id)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
+	 *
+	 * @param	object	&$driver_object
+	 * @return	void
+	 */
+	public function __construct(&$driver_object)
 			{
-				@oci_execute($this->curs_id, OCI_DEFAULT);
-			}
-		}
+		parent::__construct($driver_object);
 
-		return $this->num_rows;
+		$this->stmt_id = $driver_object->stmt_id;
+		$this->curs_id = $driver_object->curs_id;
+		$this->limit_used = $driver_object->limit_used;
+		$this->commit_mode =& $driver_object->commit_mode;
+		$driver_object->stmt_id = FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -59,20 +100,14 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access  public
-	 * @return  integer
+	 * @return	int
 	 */
 	public function num_fields()
 	{
-		$count = @oci_num_fields($this->stmt_id);
+		$count = oci_num_fields($this->stmt_id);
 
 		// if we used a limit we subtract it
-		if ($this->limit_used)
-		{
-			$count = $count - 1;
-		}
-
-		return $count;
+		return ($this->limit_used) ? $count - 1 : $count;
 	}
 
 	// --------------------------------------------------------------------
@@ -82,7 +117,6 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
 	public function list_fields()
@@ -102,7 +136,6 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access  public
 	 * @return  array
 	 */
 	public function field_data()
@@ -126,7 +159,7 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
 	public function free_result()
 	{
@@ -135,6 +168,17 @@
 			oci_free_statement($this->result_id);
 			$this->result_id = FALSE;
 		}
+
+		if (is_resource($this->stmt_id))
+		{
+			oci_free_statement($this->stmt_id);
+		}
+
+		if (is_resource($this->curs_id))
+		{
+			oci_cancel($this->curs_id);
+			$this->curs_id = NULL;
+		}
 	}
 
 	// --------------------------------------------------------------------
@@ -144,7 +188,6 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access  protected
 	 * @return  array
 	 */
 	protected function _fetch_assoc()
@@ -160,58 +203,27 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access  protected
+	 * @param	string	$class_name
 	 * @return  object
 	 */
-	protected function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		$id = ($this->curs_id) ? $this->curs_id : $this->stmt_id;
-		return @oci_fetch_object($id);
-	}
-
-	// --------------------------------------------------------------------
+		$row = ($this->curs_id)
+			? oci_fetch_object($this->curs_id)
+			: oci_fetch_object($this->stmt_id);
 
-	/**
-	 * Query result.  "array" version.
-	 *
-	 * @access  public
-	 * @return  array
-	 */
-	public function result_array()
+		if ($class_name === 'stdClass' OR ! $row)
 	{
-		if (count($this->result_array) > 0)
-		{
-			return $this->result_array;
+			return $row;
 		}
 
-		$row = NULL;
-		while ($row = $this->_fetch_assoc())
+		$class_name = new $class_name();
+		foreach ($row as $key => $value)
 		{
-			$this->result_array[] = $row;
+			$class_name->$key = $value;
 		}
 
-		return $this->result_array;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Data Seek
-	 *
-	 * Moves the internal pointer to the desired offset.  We call
-	 * this internally before fetching results to make sure the
-	 * result set starts at zero
-	 *
-	 * @access	protected
-	 * @return	array
-	 */
-	protected function _data_seek($n = 0)
-	{
-		return FALSE; // Not needed
+		return $class_name;
 	}
 
 }
-
-
-/* End of file oci8_result.php */
-/* Location: ./system/database/drivers/oci8/oci8_result.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/oci8/oci8_utility.php opensourcepos/system/database/drivers/oci8/oci8_utility.php
--- pos-prod/system/database/drivers/oci8/oci8_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/oci8/oci8_utility.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,87 +1,68 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.4.1
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Oracle Utility Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_oci8_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
+	 * List databases statement
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	string
 	 */
-	function _list_databases()
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_list_databases	= 'SELECT username FROM dba_users'; // Schemas are actual usernames
 
 	/**
-	 * Optimize table query
+	 * Export
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _optimize_table($table)
-	{
-		return FALSE; // Is this supported in Oracle?
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Repair table query
-	 *
-	 * Generates a platform-specific query so that a table can be repaired
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		return FALSE; // Is this supported in Oracle?
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Oracle Export
-	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
-	}
+		return $this->db->display_error('db_unsupported_feature');
 }
 
-/* End of file oci8_utility.php */
-/* Location: ./system/database/drivers/oci8/oci8_utility.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/odbc/index.html opensourcepos/system/database/drivers/odbc/index.html
--- pos-prod/system/database/drivers/odbc/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/odbc/index.html	2016-05-23 15:32:31.938838898 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/odbc/odbc_driver.php opensourcepos/system/database/drivers/odbc/odbc_driver.php
--- pos-prod/system/database/drivers/odbc/odbc_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/odbc/odbc_driver.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,172 +1,141 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * ODBC Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_odbc_driver extends CI_DB {
 
-	var $dbdriver = 'odbc';
-
-	// the character used to excape - not necessary for ODBC
-	var $_escape_char = '';
-
-	// clause and character used for LIKE escape sequences
-	var $_like_escape_str = " {escape '%s'} ";
-	var $_like_escape_chr = '!';
-
-	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
-	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword;
-
-
-	function __construct($params)
-	{
-		parent::__construct($params);
-
-		$this->_random_keyword = ' RND('.time().')'; // database specific random keyword
-	}
-
 	/**
-	 * Non-persistent database connection
+	 * Database driver
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	string
 	 */
-	function db_connect()
-	{
-		return @odbc_connect($this->hostname, $this->username, $this->password);
-	}
-
-	// --------------------------------------------------------------------
+	public $dbdriver = 'odbc';
 
 	/**
-	 * Persistent database connection
+	 * Database schema
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	string
 	 */
-	function db_pconnect()
-	{
-		return @odbc_pconnect($this->hostname, $this->username, $this->password);
-	}
+	public $schema = 'public';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Reconnect
+	 * Identifier escape character
 	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
+	 * Must be empty for ODBC.
 	 *
-	 * @access	public
-	 * @return	void
+	 * @var	string
 	 */
-	function reconnect()
-	{
-		// not implemented in odbc
-	}
-
-	// --------------------------------------------------------------------
+	protected $_escape_char = '';
 
 	/**
-	 * Select the database
+	 * ESCAPE statement string
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	string
 	 */
-	function db_select()
-	{
-		// Not needed for ODBC
-		return TRUE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_like_escape_str = " {escape '%s'} ";
 
 	/**
-	 * Set client character set
+	 * ORDER BY random keyword
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
+	 * @var	array
 	 */
-	function db_set_charset($charset, $collation)
-	{
-		// @todo - add support if needed
-		return TRUE;
-	}
+	protected $_random_keyword = array('RND()', 'RND(%d)');
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Version number query string
+	 * Class constructor
 	 *
-	 * @access	public
-	 * @return	string
+	 * @param	array	$params
+	 * @return	void
 	 */
-	function _version()
+	public function __construct($params)
+	{
+		parent::__construct($params);
+
+		// Legacy support for DSN in the hostname field
+		if (empty($this->dsn))
 	{
-		return "SELECT version() AS ver";
+			$this->dsn = $this->hostname;
+		}
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Execute the query
+	 * Non-persistent database connection
 	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
+	 * @param	bool	$persistent
 	 * @return	resource
 	 */
-	function _execute($sql)
+	public function db_connect($persistent = FALSE)
 	{
-		$sql = $this->_prep_query($sql);
-		return @odbc_exec($this->conn_id, $sql);
+		return ($persistent === TRUE)
+			? odbc_pconnect($this->dsn, $this->username, $this->password)
+			: odbc_connect($this->dsn, $this->username, $this->password);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
+	 * Execute the query
 	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
+	 * @param	string	$sql	an SQL query
+	 * @return	resource
 	 */
-	function _prep_query($sql)
+	protected function _execute($sql)
 	{
-		return $sql;
+		return odbc_exec($this->conn_id, $sql);
 	}
 
 	// --------------------------------------------------------------------
@@ -174,27 +143,10 @@
 	/**
 	 * Begin Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+	protected function _trans_begin()
 		{
-			return TRUE;
-		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
 		return odbc_autocommit($this->conn_id, FALSE);
 	}
 
@@ -203,25 +155,17 @@
 	/**
 	 * Commit Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_commit()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_commit()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if (odbc_commit($this->conn_id))
 		{
+			odbc_autocommit($this->conn_id, TRUE);
 			return TRUE;
 		}
 
-		$ret = odbc_commit($this->conn_id);
-		odbc_autocommit($this->conn_id, TRUE);
-		return $ret;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -229,118 +173,72 @@
 	/**
 	 * Rollback Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_rollback()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_rollback()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if (odbc_rollback($this->conn_id))
 		{
+			odbc_autocommit($this->conn_id, TRUE);
 			return TRUE;
 		}
 
-		$ret = odbc_rollback($this->conn_id);
-		odbc_autocommit($this->conn_id, TRUE);
-		return $ret;
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Determines if a query is a "write" type.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
-	 * @return	string
+	 * @param	string	An SQL query string
+	 * @return	bool
 	 */
-	function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
-		{
-			foreach ($str as $key => $val)
+	public function is_write_type($sql)
 			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
-		}
-
-		// ODBC doesn't require escaping
-		$str = remove_invisible_characters($str);
-
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
+		if (preg_match('#^(INSERT|UPDATE).*RETURNING\s.+(\,\s?.+)*$#i', $sql))
 		{
-			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
-								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
-								$str);
+			return FALSE;
 		}
 
-		return $str;
+		return parent::is_write_type($sql);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Affected Rows
+	 * Platform-dependant string escape
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @param	string
+	 * @return	string
 	 */
-	function affected_rows()
+	protected function _escape_str($str)
 	{
-		return @odbc_num_rows($this->conn_id);
+		return remove_invisible_characters($str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert ID
+	 * Affected Rows
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function insert_id()
+	public function affected_rows()
 	{
-		return @odbc_insert_id($this->conn_id);
+		return odbc_num_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
+	 * Insert ID
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
+	 * @return	bool
 	 */
-	function count_all($table = '')
+	public function insert_id()
 	{
-		if ($table == '')
-		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
-		{
-			return 0;
-		}
-
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -350,18 +248,17 @@
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	private
-	 * @param	boolean
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _list_tables($prefix_limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		$sql = "SHOW TABLES FROM `".$this->database."`";
+		$sql = "SELECT table_name FROM information_schema.tables WHERE table_schema = '".$this->schema."'";
 
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 		{
-			//$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
-			return FALSE; // not currently supported
+			return $sql." AND table_name LIKE '".$this->escape_like_str($this->dbprefix)."%' "
+				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
 		}
 
 		return $sql;
@@ -374,13 +271,12 @@
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _list_columns($table = '')
+	protected function _list_columns($table = '')
 	{
-		return "SHOW COLUMNS FROM ".$table;
+		return 'SHOW COLUMNS FROM '.$table;
 	}
 
 	// --------------------------------------------------------------------
@@ -390,121 +286,27 @@
 	 *
 	 * Generates a platform-specific query so that the column data can be retrieved
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _field_data($table)
-	{
-		return "SELECT TOP 1 FROM ".$table;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access	private
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _error_message()
-	{
-		return odbc_errormsg($this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message number
-	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
+	protected function _field_data($table)
 	{
-		return odbc_error($this->conn_id);
+		return 'SELECT TOP 1 FROM '.$table;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape the SQL Identifiers
+	 * Error
 	 *
-	 * This function escapes column and table names
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
+	 * @return	array
 	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
-		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
-		}
-
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
+	public function error()
 		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
-		}
-
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
-	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
-	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
-		{
-			$tables = array($tables);
-		}
-
-		return '('.implode(', ', $tables).')';
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
-	 */
-	function _insert($table, $keys, $values)
-	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		return array('code' => odbc_error($this->conn_id), 'message' => odbc_errormsg($this->conn_id));
 	}
 
 	// --------------------------------------------------------------------
@@ -514,35 +316,17 @@
 	 *
 	 * Generates a platform-specific update string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
+	 * @param	string	$table
+	 * @param	array	$values
 	 * @return	string
 	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
-	{
-		foreach ($values as $key => $val)
+	protected function _update($table, $values)
 		{
-			$valstr[] = $key." = ".$val;
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
+		$this->qb_limit = FALSE;
+		$this->qb_orderby = array();
+		return parent::_update($table, $values);
 	}
 
-
 	// --------------------------------------------------------------------
 
 	/**
@@ -549,16 +333,16 @@
 	 * Truncate statement
 	 *
 	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * If the database does not support the TRUNCATE statement,
+	 * then this method maps to 'DELETE FROM table'
+	 *
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _truncate($table)
+	protected function _truncate($table)
 	{
-		return $this->_delete($table);
+		return 'DELETE FROM '.$table;
 	}
 
 	// --------------------------------------------------------------------
@@ -568,50 +352,13 @@
 	 *
 	 * Generates a platform-specific delete string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
+	protected function _delete($table)
 	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
-		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
-			{
-				$conditions .= " AND ";
-			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		return "DELETE FROM ".$table.$conditions.$limit;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Limit string
-	 *
-	 * Generates a platform-specific LIMIT clause
-	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
-	 * @return	string
-	 */
-	function _limit($sql, $limit, $offset)
-	{
-		// Does ODBC doesn't use the LIMIT clause?
-		return $sql;
+		$this->qb_limit = FALSE;
+		return parent::_delete($table);
 	}
 
 	// --------------------------------------------------------------------
@@ -619,19 +366,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@odbc_close($conn_id);
+		odbc_close($this->conn_id);
 	}
 
-
 }
-
-
-
-/* End of file odbc_driver.php */
-/* Location: ./system/database/drivers/odbc/odbc_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/odbc/odbc_forge.php opensourcepos/system/database/drivers/odbc/odbc_forge.php
--- pos-prod/system/database/drivers/odbc/odbc_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/odbc/odbc_forge.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,266 +1,86 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * ODBC Forge Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/database/
  */
 class CI_DB_odbc_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database()
-	{
-		// ODBC has no "create database" command since it's
-		// designed to connect to an existing database
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_create_table_if	= FALSE;
 
 	/**
-	 * Drop database
+	 * DROP TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _drop_database($name)
-	{
-		// ODBC has no "drop database" command since it's
-		// designed to connect to an existing database
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_drop_table_if	= FALSE;
 
 	/**
-	 * Create Table
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @var	bool|array
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
-	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
-		{
-			$sql .= 'IF NOT EXISTS ';
-		}
-
-		$sql .= $this->db->_escape_identifiers($table)." (";
-		$current_field_count = 0;
-
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				$sql .=  ' '.$attributes['TYPE'];
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
-				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
-				{
-					$sql .= ' NULL';
-				}
-				else
-				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' AUTO_INCREMENT';
-				}
-			}
-
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
-			{
-				$sql .= ',';
-			}
-		}
-
-		if (count($primary_keys) > 0)
-		{
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
-				}
-
-				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
-			}
-		}
-
-		$sql .= "\n)";
-
-		return $sql;
-	}
+	protected $_unsigned		= FALSE;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop Table
+	 * Field attribute AUTO_INCREMENT
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
 	 */
-	function _drop_table($table)
-	{
-		// Not a supported ODBC feature
-		if ($this->db->db_debug)
+	protected function _attr_auto_increment(&$attributes, &$field)
 		{
-			return $this->db->display_error('db_unsuported_feature');
+		// Not supported (in most databases at least)
 		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
 
-	/**
-	 * Alter table query
-	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
-	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
-	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
-		{
-			return $sql;
 		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
-		{
-			$sql .= " DEFAULT \"$default_value\"";
-		}
-
-		if ($null === NULL)
-		{
-			$sql .= ' NULL';
-		}
-		else
-		{
-			$sql .= ' NOT NULL';
-		}
-
-		if ($after_field != '')
-		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
-		}
-
-		return $sql;
-
-	}
-
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Rename a table
-	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
-	 */
-	function _rename_table($table_name, $new_table_name)
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
-		return $sql;
-	}
-
-
-}
-
-/* End of file odbc_forge.php */
-/* Location: ./system/database/drivers/odbc/odbc_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/odbc/odbc_result.php opensourcepos/system/database/drivers/odbc/odbc_result.php
--- pos-prod/system/database/drivers/odbc/odbc_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/odbc/odbc_result.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,40 +1,82 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * ODBC Result Class
  *
  * This class extends the parent result class: CI_DB_result
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_odbc_result extends CI_DB_result {
 
 	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
+	{
+		if (is_int($this->num_rows))
+		{
+			return $this->num_rows;
+		}
+		elseif (($this->num_rows = odbc_num_rows($this->result_id)) !== -1)
+		{
+			return $this->num_rows;
+		}
+
+		// Work-around for ODBC subdrivers that don't support num_rows()
+		if (count($this->result_array) > 0)
 	{
-		return @odbc_num_rows($this->result_id);
+			return $this->num_rows = count($this->result_array);
+		}
+		elseif (count($this->result_object) > 0)
+		{
+			return $this->num_rows = count($this->result_object);
+		}
+
+		return $this->num_rows = count($this->result_array());
 	}
 
 	// --------------------------------------------------------------------
@@ -42,12 +84,11 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
-		return @odbc_num_fields($this->result_id);
+		return odbc_num_fields($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -57,16 +98,20 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
-		for ($i = 0; $i < $this->num_fields(); $i++)
+		$num_fields = $this->num_fields();
+
+		if ($num_fields > 0)
+		{
+			for ($i = 1; $i <= $num_fields; $i++)
 		{
 			$field_names[]	= odbc_field_name($this->result_id, $i);
 		}
+		}
 
 		return $field_names;
 	}
@@ -78,22 +123,19 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		for ($i = 0; $i < $this->num_fields(); $i++)
+		for ($i = 0, $odbc_index = 1, $c = $this->num_fields(); $i < $c; $i++, $odbc_index++)
 		{
-			$F				= new stdClass();
-			$F->name		= odbc_field_name($this->result_id, $i);
-			$F->type		= odbc_field_type($this->result_id, $i);
-			$F->max_length	= odbc_field_len($this->result_id, $i);
-			$F->primary_key = 0;
-			$F->default		= '';
-
-			$retval[] = $F;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= odbc_field_name($this->result_id, $odbc_index);
+			$retval[$i]->type		= odbc_field_type($this->result_id, $odbc_index);
+			$retval[$i]->max_length		= odbc_field_len($this->result_id, $odbc_index);
+			$retval[$i]->primary_key	= 0;
+			$retval[$i]->default		= '';
 		}
 
 		return $retval;
@@ -104,9 +146,9 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_resource($this->result_id))
 		{
@@ -118,41 +160,16 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Data Seek
-	 *
-	 * Moves the internal pointer to the desired offset.  We call
-	 * this internally before fetching results to make sure the
-	 * result set starts at zero
-	 *
-	 * @access	private
-	 * @return	array
-	 */
-	function _data_seek($n = 0)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
 	 * Result - associative array
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
-	{
-		if (function_exists('odbc_fetch_object'))
+	protected function _fetch_assoc()
 		{
 			return odbc_fetch_array($this->result_id);
 		}
-		else
-		{
-			return $this->_odbc_fetch_array($this->result_id);
-		}
-	}
 
 	// --------------------------------------------------------------------
 
@@ -161,68 +178,91 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		if (function_exists('odbc_fetch_object'))
+		$row = odbc_fetch_object($this->result_id);
+
+		if ($class_name === 'stdClass' OR ! $row)
 		{
-			return odbc_fetch_object($this->result_id);
+			return $row;
 		}
-		else
+
+		$class_name = new $class_name();
+		foreach ($row as $key => $value)
 		{
-			return $this->_odbc_fetch_object($this->result_id);
+			$class_name->$key = $value;
 		}
+
+		return $class_name;
 	}
 
+}
+
+// --------------------------------------------------------------------
 
+if ( ! function_exists('odbc_fetch_array'))
+{
 	/**
-	 * Result - object
+	 * ODBC Fetch array
 	 *
-	 * subsititutes the odbc_fetch_object function when
-	 * not available (odbc_fetch_object requires unixODBC)
+	 * Emulates the native odbc_fetch_array() function when
+	 * it is not available (odbc_fetch_array() requires unixODBC)
 	 *
-	 * @access	private
-	 * @return	object
+	 * @param	resource	&$result
+	 * @param	int		$rownumber
+	 * @return	array
 	 */
-	function _odbc_fetch_object(& $odbc_result) {
+	function odbc_fetch_array(&$result, $rownumber = 1)
+	{
 		$rs = array();
-		$rs_obj = FALSE;
-		if (odbc_fetch_into($odbc_result, $rs)) {
-			foreach ($rs as $k=>$v) {
-				$field_name= odbc_field_name($odbc_result, $k+1);
-				$rs_obj->$field_name = $v;
+		if ( ! odbc_fetch_into($result, $rs, $rownumber))
+		{
+			return FALSE;
 			}
+
+		$rs_assoc = array();
+		foreach ($rs as $k => $v)
+		{
+			$field_name = odbc_field_name($result, $k+1);
+			$rs_assoc[$field_name] = $v;
+		}
+
+		return $rs_assoc;
 		}
-		return $rs_obj;
 	}
 
+// --------------------------------------------------------------------
 
+if ( ! function_exists('odbc_fetch_object'))
+{
 	/**
-	 * Result - array
+	 * ODBC Fetch object
 	 *
-	 * subsititutes the odbc_fetch_array function when
-	 * not available (odbc_fetch_array requires unixODBC)
+	 * Emulates the native odbc_fetch_object() function when
+	 * it is not available.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	resource	&$result
+	 * @param	int		$rownumber
+	 * @return	object
 	 */
-	function _odbc_fetch_array(& $odbc_result) {
+	function odbc_fetch_object(&$result, $rownumber = 1)
+	{
 		$rs = array();
-		$rs_assoc = FALSE;
-		if (odbc_fetch_into($odbc_result, $rs)) {
-			$rs_assoc=array();
-			foreach ($rs as $k=>$v) {
-				$field_name= odbc_field_name($odbc_result, $k+1);
-				$rs_assoc[$field_name] = $v;
-			}
-		}
-		return $rs_assoc;
+		if ( ! odbc_fetch_into($result, $rs, $rownumber))
+		{
+			return FALSE;
 	}
 
+		$rs_object = new stdClass();
+		foreach ($rs as $k => $v)
+		{
+			$field_name = odbc_field_name($result, $k+1);
+			$rs_object->$field_name = $v;
 }
 
-
-/* End of file odbc_result.php */
-/* Location: ./system/database/drivers/odbc/odbc_result.php */
\ No newline at end of file
+		return $rs_object;
+	}
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/odbc/odbc_utility.php opensourcepos/system/database/drivers/odbc/odbc_utility.php
--- pos-prod/system/database/drivers/odbc/odbc_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/odbc/odbc_utility.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,103 +1,63 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * ODBC Utility Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/database/
  */
 class CI_DB_odbc_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
-	 *
-	 * @access	private
-	 * @return	bool
-	 */
-	function _list_databases()
-	{
-		// Not sure if ODBC lets you list all databases...
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Optimize table query
+	 * Export
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _optimize_table($table)
-	{
-		// Not a supported ODBC feature
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Repair table query
-	 *
-	 * Generates a platform-specific query so that a table can be repaired
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		// Not a supported ODBC feature
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * ODBC Export
-	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
+		return $this->db->display_error('db_unsupported_feature');
 	}
 
 }
-
-/* End of file odbc_utility.php */
-/* Location: ./system/database/drivers/odbc/odbc_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/pdo/index.html opensourcepos/system/database/drivers/pdo/index.html
--- pos-prod/system/database/drivers/pdo/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/pdo/index.html	2016-05-23 15:32:31.938838898 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/pdo/pdo_driver.php opensourcepos/system/database/drivers/pdo/pdo_driver.php
--- pos-prod/system/database/drivers/pdo/pdo_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/pdo/pdo_driver.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,230 +1,184 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com
- * @since		Version 2.1.2
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * PDO Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_pdo_driver extends CI_DB {
 
-	var $dbdriver = 'pdo';
-
-	// the character used to excape - not necessary for PDO
-	var $_escape_char = '';
-	var $_like_escape_str;
-	var $_like_escape_chr;
-
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver = 'pdo';
 
 	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
+	 * PDO Options
+	 *
+	 * @var	array
 	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword;
+	public $options = array();
 
-	var $options = array();
+	// --------------------------------------------------------------------
 
-	function __construct($params)
+	/**
+	 * Class constructor
+	 *
+	 * Validates the DSN string and/or detects the subdriver.
+	 *
+	 * @param	array	$params
+	 * @return	void
+	 */
+	public function __construct($params)
 	{
 		parent::__construct($params);
 
-		// clause and character used for LIKE escape sequences
-		if (strpos($this->hostname, 'mysql') !== FALSE)
-		{
-			$this->_like_escape_str = '';
-			$this->_like_escape_chr = '';
-
-			//Prior to this version, the charset can't be set in the dsn
-			if(is_php('5.3.6'))
+		if (preg_match('/([^:]+):/', $this->dsn, $match) && count($match) === 2)
 			{
-				$this->hostname .= ";charset={$this->char_set}";
+			// If there is a minimum valid dsn string pattern found, we're done
+			// This is for general PDO users, who tend to have a full DSN string.
+			$this->subdriver = $match[1];
+			return;
 			}
-
-			//Set the charset with the connection options
-			$this->options['PDO::MYSQL_ATTR_INIT_COMMAND'] = "SET NAMES {$this->char_set}";
-		}
-		elseif (strpos($this->hostname, 'odbc') !== FALSE)
+		// Legacy support for DSN specified in the hostname field
+		elseif (preg_match('/([^:]+):/', $this->hostname, $match) && count($match) === 2)
 		{
-			$this->_like_escape_str = " {escape '%s'} ";
-			$this->_like_escape_chr = '!';
+			$this->dsn = $this->hostname;
+			$this->hostname = NULL;
+			$this->subdriver = $match[1];
+			return;
 		}
-		else
+		elseif (in_array($this->subdriver, array('mssql', 'sybase'), TRUE))
 		{
-			$this->_like_escape_str = " ESCAPE '%s' ";
-			$this->_like_escape_chr = '!';
+			$this->subdriver = 'dblib';
 		}
-
-		empty($this->database) OR $this->hostname .= ';dbname='.$this->database;
-
-		$this->trans_enabled = FALSE;
-
-		$this->_random_keyword = ' RND('.time().')'; // database specific random keyword
+		elseif ($this->subdriver === '4D')
+		{
+			$this->subdriver = '4d';
 	}
+		elseif ( ! in_array($this->subdriver, array('4d', 'cubrid', 'dblib', 'firebird', 'ibm', 'informix', 'mysql', 'oci', 'odbc', 'pgsql', 'sqlite', 'sqlsrv'), TRUE))
+		{
+			log_message('error', 'PDO: Invalid or non-existent subdriver');
 
-	/**
-	 * Non-persistent database connection
-	 *
-	 * @access	private called by the base class
-	 * @return	resource
-	 */
-	function db_connect()
+			if ($this->db_debug)
 	{
-		$this->options['PDO::ATTR_ERRMODE'] = PDO::ERRMODE_SILENT;
+				show_error('Invalid or non-existent PDO subdriver');
+			}
+		}
 
-		return new PDO($this->hostname, $this->username, $this->password, $this->options);
+		$this->dsn = NULL;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Persistent database connection
+	 * Database connection
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @param	bool	$persistent
+	 * @return	object
 	 */
-	function db_pconnect()
+	public function db_connect($persistent = FALSE)
 	{
-		$this->options['PDO::ATTR_ERRMODE'] = PDO::ERRMODE_SILENT;
-		$this->options['PDO::ATTR_PERSISTENT'] = TRUE;
+		$this->options[PDO::ATTR_PERSISTENT] = $persistent;
 	
-		return new PDO($this->hostname, $this->username, $this->password, $this->options);
+		try
+		{
+			return new PDO($this->dsn, $this->username, $this->password, $this->options);
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Reconnect
-	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
-	 *
-	 * @access	public
-	 * @return	void
-	 */
-	function reconnect()
+		catch (PDOException $e)
 	{
-		if ($this->db->db_debug)
+			if ($this->db_debug && empty($this->failover))
 		{
-			return $this->db->display_error('db_unsuported_feature');
+				$this->display_error($e->getMessage(), '', TRUE);
 		}
+
 		return FALSE;
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Select the database
-	 *
-	 * @access	private called by the base class
-	 * @return	resource
-	 */
-	function db_select()
-	{
-		// Not needed for PDO
-		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set client character set
+	 * Database version number
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
-	 */
-	function db_set_charset($charset, $collation)
-	{
-		// @todo - add support if needed
-		return TRUE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Version number query string
-	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function _version()
-	{
-		return $this->conn_id->getAttribute(PDO::ATTR_CLIENT_VERSION);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Execute the query
-	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
-	 * @return	object
-	 */
-	function _execute($sql)
-	{
-		$sql = $this->_prep_query($sql);
-		$result_id = $this->conn_id->prepare($sql);
-
-		if (is_object($result_id) && ($result = $result_id->execute()))
+	public function version()
 		{
-			if (is_numeric(stripos($sql, 'SELECT')))
+		if (isset($this->data_cache['version']))
 			{
-				$this->affect_rows = count($result_id->fetchAll());
+			return $this->data_cache['version'];
 			}
-			else
+
+		// Not all subdrivers support the getAttribute() method
+		try
 			{
-				$this->affect_rows = $result_id->rowCount();
-			}
+			return $this->data_cache['version'] = $this->conn_id->getAttribute(PDO::ATTR_SERVER_VERSION);
 		}
-		else
+		catch (PDOException $e)
 		{
-			$this->affect_rows = 0;
-			$result = FALSE;
+			return parent::version();
 		}
-
-		return $result;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
+	 * Execute the query
 	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
+	 * @param	string	$sql	SQL query
+	 * @return	mixed
 	 */
-	function _prep_query($sql)
+	protected function _execute($sql)
 	{
-		return $sql;
+		return $this->conn_id->query($sql);
 	}
 
 	// --------------------------------------------------------------------
@@ -232,27 +186,10 @@
 	/**
 	 * Begin Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+	protected function _trans_begin()
 		{
-			return TRUE;
-		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = (bool) ($test_mode === TRUE);
-
 		return $this->conn_id->beginTransaction();
 	}
 
@@ -261,24 +198,11 @@
 	/**
 	 * Commit Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_commit()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_commit()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		$ret = $this->conn->commit();
-		return $ret;
+		return $this->conn_id->commit();
 	}
 
 	// --------------------------------------------------------------------
@@ -286,66 +210,30 @@
 	/**
 	 * Rollback Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_rollback()
-	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+	protected function _trans_rollback()
 		{
-			return TRUE;
-		}
-
-		$ret = $this->conn_id->rollBack();
-		return $ret;
+		return $this->conn_id->rollBack();
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Platform-dependant string escape
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
 	 * @return	string
 	 */
-	function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
+	protected function _escape_str($str)
 		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
-		}
-		
 		//Escape the string
 		$str = $this->conn_id->quote($str);
 		
 		//If there are duplicated quotes, trim them away
-		if (strpos($str, "'") === 0)
-		{
-			$str = substr($str, 1, -1);
-		}
-		
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
-		{
-			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
-								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
-								$str);
-		}
-
-		return $str;
+		return ($str[0] === "'")
+			? substr($str, 1, -1)
+			: $str;
 	}
 
 	// --------------------------------------------------------------------
@@ -353,12 +241,11 @@
 	/**
 	 * Affected Rows
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function affected_rows()
+	public function affected_rows()
 	{
-		return $this->affect_rows;
+		return is_object($this->result_id) ? $this->result_id->rowCount() : 0;
 	}
 
 	// --------------------------------------------------------------------
@@ -366,102 +253,13 @@
 	/**
 	 * Insert ID
 	 * 
-	 * @access	public
-	 * @return	integer
+	 * @param	string	$name
+	 * @return	int
 	 */
-	function insert_id($name=NULL)
-	{
-		//Convenience method for postgres insertid
-		if (strpos($this->hostname, 'pgsql') !== FALSE)
-		{
-			$v = $this->_version();
-
-			$table	= func_num_args() > 0 ? func_get_arg(0) : NULL;
-
-			if ($table == NULL && $v >= '8.1')
-			{
-				$sql='SELECT LASTVAL() as ins_id';
-			}
-			$query = $this->query($sql);
-			$row = $query->row();
-			return $row->ins_id;
-		}
-		else
+	public function insert_id($name = NULL)
 		{
 			return $this->conn_id->lastInsertId($name);
 		}
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
-	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
-	 */
-	function count_all($table = '')
-	{
-		if ($table == '')
-		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
-		{
-			return 0;
-		}
-
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Show table query
-	 *
-	 * Generates a platform-specific query string so that the table names can be fetched
-	 *
-	 * @access	private
-	 * @param	boolean
-	 * @return	string
-	 */
-	function _list_tables($prefix_limit = FALSE)
-	{
-		$sql = "SHOW TABLES FROM `".$this->database."`";
-
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
-		{
-			//$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
-			return FALSE; // not currently supported
-		}
-
-		return $sql;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Show column query
-	 *
-	 * Generates a platform-specific query string so that the column names can be fetched
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _list_columns($table = '')
-	{
-		return "SHOW COLUMNS FROM ".$table;
-	}
 
 	// --------------------------------------------------------------------
 
@@ -470,176 +268,41 @@
 	 *
 	 * Generates a platform-specific query so that the column data can be retrieved
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _field_data($table)
-	{
-		return "SELECT TOP 1 FROM ".$table;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access	private
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _error_message()
+	protected function _field_data($table)
 	{
-		$error_array = $this->conn_id->errorInfo();
-		return $error_array[2];
+		return 'SELECT TOP 1 * FROM '.$this->protect_identifiers($table);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * The error message number
+	 * Error
 	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
-	{
-		return $this->conn_id->errorCode();
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Escape the SQL Identifiers
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * This function escapes column and table names
-	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
+	 * @return	array
 	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
+	public function error()
 		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
-		}
+		$error = array('code' => '00000', 'message' => '');
+		$pdo_error = $this->conn_id->errorInfo();
 
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-			
-		}
-		else
-		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
-		}
-
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
-	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
-	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
-		{
-			$tables = array($tables);
-		}
-
-		return (count($tables) == 1) ? $tables[0] : '('.implode(', ', $tables).')';
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
-	 */
-	function _insert($table, $keys, $values)
-	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
-	}
-	
-	// --------------------------------------------------------------------
-
-	/**
-	 * Insert_batch statement
-	 *
-	 * Generates a platform-specific insert string from the supplied data
-	 *
-	 * @access  public
-	 * @param   string  the table name
-	 * @param   array   the insert keys
-	 * @param   array   the insert values
-	 * @return  string
-	 */
-	function _insert_batch($table, $keys, $values)
+		if (empty($pdo_error[0]))
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
+			return $error;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Update statement
-	 *
-	 * Generates a platform-specific update string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
-	 * @return	string
-	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
-	{
-		foreach ($values as $key => $val)
+		$error['code'] = isset($pdo_error[1]) ? $pdo_error[0].'/'.$pdo_error[1] : $pdo_error[0];
+		if (isset($pdo_error[2]))
 		{
-			$valstr[] = $key." = ".$val;
+			 $error['message'] = $pdo_error[2];
 		}
 
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
+		return $error;
 	}
 	
 	// --------------------------------------------------------------------
@@ -649,33 +312,28 @@
 	 *
 	 * Generates a platform-specific batch update string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
+	 * @param	string	$table	Table name
+	 * @param	array	$values	Update data
+	 * @param	string	$index	WHERE key
 	 * @return	string
 	 */
-	function _update_batch($table, $values, $index, $where = NULL)
+	protected function _update_batch($table, $values, $index)
 	{
 		$ids = array();
-		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
-
 		foreach ($values as $key => $val)
 		{
 			$ids[] = $val[$index];
 
 			foreach (array_keys($val) as $field)
 			{
-				if ($field != $index)
+				if ($field !== $index)
 				{
 					$final[$field][] =  'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
 				}
 			}
 		}
 
-		$sql = "UPDATE ".$table." SET ";
 		$cases = '';
-
 		foreach ($final as $k => $v)
 		{
 			$cases .= $k.' = CASE '."\n";
@@ -687,14 +346,11 @@
 			$cases .= 'ELSE '.$k.' END, ';
 		}
 
-		$sql .= substr($cases, 0, -2);
-
-		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
+		$this->where($index.' IN('.implode(',', $ids).')', NULL, FALSE);
 
-		return $sql;
+		return 'UPDATE '.$table.' SET '.substr($cases, 0, -2).$this->_compile_wh('qb_where');
 	}
 
-
 	// --------------------------------------------------------------------
 
 	/**
@@ -701,111 +357,16 @@
 	 * Truncate statement
 	 *
 	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _truncate($table)
-	{
-		return $this->_delete($table);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Delete statement
 	 *
-	 * Generates a platform-specific delete string from the supplied data
+	 * If the database does not support the TRUNCATE statement,
+	 * then this method maps to 'DELETE FROM table'
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
-	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
-		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
+	protected function _truncate($table)
 			{
-				$conditions .= " AND ";
+		return 'TRUNCATE TABLE '.$table;
 			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
 
-		return "DELETE FROM ".$table.$conditions.$limit;
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Limit string
-	 *
-	 * Generates a platform-specific LIMIT clause
-	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
-	 * @return	string
-	 */
-	function _limit($sql, $limit, $offset)
-	{
-		if (strpos($this->hostname, 'cubrid') !== FALSE || strpos($this->hostname, 'sqlite') !== FALSE)
-		{
-			if ($offset == 0)
-			{
-				$offset = '';
-			}
-			else
-			{
-				$offset .= ", ";
-			}
-
-			return $sql."LIMIT ".$offset.$limit;
-		}
-		else
-		{
-			$sql .= "LIMIT ".$limit;
-
-			if ($offset > 0)
-			{
-				$sql .= " OFFSET ".$offset;
-			}
-			
-			return $sql;
-		}
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Close DB Connection
-	 *
-	 * @access	public
-	 * @param	resource
-	 * @return	void
-	 */
-	function _close($conn_id)
-	{
-		$this->conn_id = null;
-	}
-
-
-}
-
-
-
-/* End of file pdo_driver.php */
-/* Location: ./system/database/drivers/pdo/pdo_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/pdo/pdo_forge.php opensourcepos/system/database/drivers/pdo/pdo_forge.php
--- pos-prod/system/database/drivers/pdo/pdo_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/pdo/pdo_forge.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,266 +1,65 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com
- * @since		Version 2.1.2
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * PDO Forge Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com/database/
+ * @link		https://codeigniter.com/database/
  */
 class CI_DB_pdo_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
-	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
-	 */
-	function _create_database()
-	{
-		// PDO has no "create database" command since it's
-		// designed to connect to an existing database
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Drop database
-	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
-	 */
-	function _drop_database($name)
-	{
-		// PDO has no "drop database" command since it's
-		// designed to connect to an existing database
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Create Table
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
-	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
-	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
-		{
-			$sql .= 'IF NOT EXISTS ';
-		}
-
-		$sql .= $this->db->_escape_identifiers($table)." (";
-		$current_field_count = 0;
-
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				$sql .=  ' '.$attributes['TYPE'];
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
-				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
-				{
-					$sql .= ' NULL';
-				}
-				else
-				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' AUTO_INCREMENT';
-				}
-			}
-
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
-			{
-				$sql .= ',';
-			}
-		}
-
-		if (count($primary_keys) > 0)
-		{
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
-				}
-
-				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
-			}
-		}
-
-		$sql .= "\n)";
-
-		return $sql;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Drop Table
-	 *
-	 * @access	private
-	 * @return	bool
-	 */
-	function _drop_table($table)
-	{
-		// Not a supported PDO feature
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Alter table query
-	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * CREATE TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @var	string
 	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
-		{
-			return $sql;
-		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
-		{
-			$sql .= " DEFAULT \"$default_value\"";
-		}
-
-		if ($null === NULL)
-		{
-			$sql .= ' NULL';
-		}
-		else
-		{
-			$sql .= ' NOT NULL';
-		}
-
-		if ($after_field != '')
-		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
-		}
-
-		return $sql;
-
-	}
-
-
-	// --------------------------------------------------------------------
+	protected $_create_table_if	= FALSE;
 
 	/**
-	 * Rename a table
-	 *
-	 * Generates a platform-specific query so that a table can be renamed
+	 * DROP TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
+	 * @var	string
 	 */
-	function _rename_table($table_name, $new_table_name)
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
-		return $sql;
-	}
-
+	protected $_drop_table_if	= FALSE;
 
 }
-
-/* End of file pdo_forge.php */
-/* Location: ./system/database/drivers/pdo/pdo_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/pdo/pdo_result.php opensourcepos/system/database/drivers/pdo/pdo_result.php
--- pos-prod/system/database/drivers/pdo/pdo_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/pdo/pdo_result.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,33 +1,55 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com
- * @since		Version 2.1.2
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * PDO Result Class
  *
  * This class extends the parent result class: CI_DB_result
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_pdo_result extends CI_DB_result {
 
-	public $num_rows;
-
 	/**
 	 * Number of rows in the result set
 	 *
@@ -39,14 +61,20 @@
 		{
 			return $this->num_rows;
 		}
-		elseif (($this->num_rows = $this->result_id->rowCount()) > 0)
+		elseif (count($this->result_array) > 0)
 		{
-			return $this->num_rows;
+			return $this->num_rows = count($this->result_array);
+		}
+		elseif (count($this->result_object) > 0)
+		{
+			return $this->num_rows = count($this->result_object);
+		}
+		elseif (($num_rows = $this->result_id->rowCount()) > 0)
+		{
+			return $this->num_rows = $num_rows;
 		}
 
-		$this->num_rows = count($this->result_id->fetchAll());
-		$this->result_id->execute();
-		return $this->num_rows;
+		return $this->num_rows = count($this->result_array());
 	}
 
 	// --------------------------------------------------------------------
@@ -54,10 +82,9 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
 		return $this->result_id->columnCount();
 	}
@@ -69,16 +96,20 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
-	 * @return	array
+	 * @return	bool
 	 */
-	function list_fields()
+	public function list_fields()
 	{
-		if ($this->db->db_debug)
+		$field_names = array();
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
-			return $this->db->display_error('db_unsuported_feature');
+			// Might trigger an E_WARNING due to not all subdrivers
+			// supporting getColumnMeta()
+			$field_names[$i] = @$this->result_id->getColumnMeta($i);
+			$field_names[$i] = $field_names[$i]['name'];
 		}
-		return FALSE;
+
+		return $field_names;
 	}
 
 	// --------------------------------------------------------------------
@@ -88,28 +119,34 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
-		$data = array();
-	
 		try
 		{
-			for($i = 0; $i < $this->num_fields(); $i++)
+			$retval = array();
+
+			for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 			{
-				$data[] = $this->result_id->getColumnMeta($i);
+				$field = $this->result_id->getColumnMeta($i);
+
+				$retval[$i]			= new stdClass();
+				$retval[$i]->name		= $field['name'];
+				$retval[$i]->type		= $field['native_type'];
+				$retval[$i]->max_length		= ($field['len'] > 0) ? $field['len'] : NULL;
+				$retval[$i]->primary_key	= (int) ( ! empty($field['flags']) && in_array('primary_key', $field['flags'], TRUE));
 			}
 			
-			return $data;
+			return $retval;
 		}
 		catch (Exception $e)
 		{
 			if ($this->db->db_debug)
 			{
-				return $this->db->display_error('db_unsuported_feature');
+				return $this->db->display_error('db_unsupported_feature');
 			}
+
 			return FALSE;
 		}
 	}
@@ -119,9 +156,9 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_object($this->result_id))
 		{
@@ -132,31 +169,13 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Data Seek
-	 *
-	 * Moves the internal pointer to the desired offset.  We call
-	 * this internally before fetching results to make sure the
-	 * result set starts at zero
-	 *
-	 * @access	private
-	 * @return	array
-	 */
-	function _data_seek($n = 0)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
 	 * Result - associative array
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return $this->result_id->fetch(PDO::FETCH_ASSOC);
 	}
@@ -168,16 +187,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{	
-		return $this->result_id->fetchObject();
+		return $this->result_id->fetchObject($class_name);
 	}
 
 }
-
-
-/* End of file pdo_result.php */
-/* Location: ./system/database/drivers/pdo/pdo_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/pdo/pdo_utility.php opensourcepos/system/database/drivers/pdo/pdo_utility.php
--- pos-prod/system/database/drivers/pdo/pdo_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/pdo/pdo_utility.php	2016-05-23 15:32:31.938838898 -0700
@@ -1,103 +1,63 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com
- * @since		Version 2.1.2
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.1.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * PDO Utility Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
  * @author		EllisLab Dev Team
- * @link		http://codeigniter.com/database/
+ * @link		https://codeigniter.com/database/
  */
 class CI_DB_pdo_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
-	 *
-	 * @access	private
-	 * @return	bool
-	 */
-	function _list_databases()
-	{
-		// Not sure if PDO lets you list all databases...
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Optimize table query
+	 * Export
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _optimize_table($table)
-	{
-		// Not a supported PDO feature
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Repair table query
-	 *
-	 * Generates a platform-specific query so that a table can be repaired
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		// Not a supported PDO feature
-		if ($this->db->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * PDO Export
-	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
+		return $this->db->display_error('db_unsupported_feature');
 	}
 
 }
-
-/* End of file pdo_utility.php */
-/* Location: ./system/database/drivers/pdo/pdo_utility.php */
\ No newline at end of file
Only in opensourcepos/system/database/drivers/pdo: subdrivers
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/postgre/index.html opensourcepos/system/database/drivers/postgre/index.html
--- pos-prod/system/database/drivers/postgre/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/postgre/index.html	2016-05-23 15:32:31.939838883 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/postgre/postgre_driver.php opensourcepos/system/database/drivers/postgre/postgre_driver.php
--- pos-prod/system/database/drivers/postgre/postgre_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/postgre/postgre_driver.php	2016-05-23 15:32:31.939838883 -0700
@@ -1,102 +1,172 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Postgre Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_postgre_driver extends CI_DB {
 
-	var $dbdriver = 'postgre';
+	/**
+	 * Database driver
+	 *
+	 * @var	string
+	 */
+	public $dbdriver = 'postgre';
 
-	var $_escape_char = '"';
+	/**
+	 * Database schema
+	 *
+	 * @var	string
+	 */
+	public $schema = 'public';
 
-	// clause and character used for LIKE escape sequences
-	var $_like_escape_str = " ESCAPE '%s' ";
-	var $_like_escape_chr = '!';
+	// --------------------------------------------------------------------
 
 	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
+	 * ORDER BY random keyword
+	 *
+	 * @var	array
 	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword = ' RANDOM()'; // database specific random keyword
+	protected $_random_keyword = array('RANDOM()', 'RANDOM()');
+
+	// --------------------------------------------------------------------
 
 	/**
-	 * Connection String
+	 * Class constructor
 	 *
-	 * @access	private
-	 * @return	string
+	 * Creates a DSN string to be used for db_connect() and db_pconnect()
+	 *
+	 * @param	array	$params
+	 * @return	void
 	 */
-	function _connect_string()
+	public function __construct($params)
 	{
-		$components = array(
-								'hostname'	=> 'host',
-								'port'		=> 'port',
-								'database'	=> 'dbname',
-								'username'	=> 'user',
-								'password'	=> 'password'
-							);
+		parent::__construct($params);
 
-		$connect_string = "";
-		foreach ($components as $key => $val)
+		if ( ! empty($this->dsn))
 		{
-			if (isset($this->$key) && $this->$key != '')
+			return;
+		}
+
+		$this->dsn === '' OR $this->dsn = '';
+
+		if (strpos($this->hostname, '/') !== FALSE)
 			{
-				$connect_string .= " $val=".$this->$key;
+			// If UNIX sockets are used, we shouldn't set a port
+			$this->port = '';
 			}
+
+		$this->hostname === '' OR $this->dsn = 'host='.$this->hostname.' ';
+
+		if ( ! empty($this->port) && ctype_digit($this->port))
+		{
+			$this->dsn .= 'port='.$this->port.' ';
 		}
-		return trim($connect_string);
+
+		if ($this->username !== '')
+		{
+			$this->dsn .= 'user='.$this->username.' ';
+
+			/* An empty password is valid!
+			 *
+			 * $db['password'] = NULL must be done in order to ignore it.
+			 */
+			$this->password === NULL OR $this->dsn .= "password='".$this->password."' ";
 	}
 
-	// --------------------------------------------------------------------
+		$this->database === '' OR $this->dsn .= 'dbname='.$this->database.' ';
 
-	/**
-	 * Non-persistent database connection
+		/* We don't have these options as elements in our standard configuration
+		 * array, but they might be set by parse_url() if the configuration was
+		 * provided via string. Example:
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+		 * postgre://username:password@localhost:5432/database?connect_timeout=5&sslmode=1
 	 */
-	function db_connect()
+		foreach (array('connect_timeout', 'options', 'sslmode', 'service') as $key)
+		{
+			if (isset($this->$key) && is_string($this->key) && $this->key !== '')
 	{
-		return @pg_connect($this->_connect_string());
+				$this->dsn .= $key."='".$this->key."' ";
+			}
+		}
+
+		$this->dsn = rtrim($this->dsn);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Persistent database connection
+	 * Database connection
 	 *
-	 * @access	private called by the base class
+	 * @param	bool	$persistent
 	 * @return	resource
 	 */
-	function db_pconnect()
+	public function db_connect($persistent = FALSE)
+	{
+		$this->conn_id = ($persistent === TRUE)
+			? pg_pconnect($this->dsn)
+			: pg_connect($this->dsn);
+
+		if ($this->conn_id !== FALSE)
+		{
+			if ($persistent === TRUE
+				&& pg_connection_status($this->conn_id) === PGSQL_CONNECTION_BAD
+				&& pg_ping($this->conn_id) === FALSE
+			)
 	{
-		return @pg_pconnect($this->_connect_string());
+				return FALSE;
+			}
+
+			empty($this->schema) OR $this->simple_query('SET search_path TO '.$this->schema.',public');
+		}
+
+		return $this->conn_id;
 	}
 
 	// --------------------------------------------------------------------
@@ -107,10 +177,9 @@
 	 * Keep / reestablish the db connection if no queries have been
 	 * sent for a length of time exceeding the server's idle timeout
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function reconnect()
+	public function reconnect()
 	{
 		if (pg_ping($this->conn_id) === FALSE)
 		{
@@ -121,44 +190,43 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * Set client character set
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @param	string	$charset
+	 * @return	bool
 	 */
-	function db_select()
+	protected function _db_set_charset($charset)
 	{
-		// Not needed for Postgre so we'll return TRUE
-		return TRUE;
+		return (pg_set_client_encoding($this->conn_id, $charset) === 0);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set client character set
+	 * Database version number
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
+	 * @return	string
 	 */
-	function db_set_charset($charset, $collation)
+	public function version()
+	{
+		if (isset($this->data_cache['version']))
 	{
-		// @todo - add support if needed
-		return TRUE;
+			return $this->data_cache['version'];
 	}
 
-	// --------------------------------------------------------------------
+		if ( ! $this->conn_id OR ($pg_version = pg_version($this->conn_id)) === FALSE)
+		{
+			return FALSE;
+		}
 
-	/**
-	 * Version number query string
-	 *
-	 * @access	public
-	 * @return	string
+		/* If PHP was compiled with PostgreSQL lib versions earlier
+		 * than 7.4, pg_version() won't return the server version
+		 * and so we'll have to fall back to running a query in
+		 * order to get it.
 	 */
-	function _version()
-	{
-		return "SELECT version() AS ver";
+		return isset($pg_version['server'])
+			? $this->data_cache['version'] = $pg_version['server']
+			: parent::version();
 	}
 
 	// --------------------------------------------------------------------
@@ -166,142 +234,103 @@
 	/**
 	 * Execute the query
 	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
+	 * @param	string	$sql	an SQL query
 	 * @return	resource
 	 */
-	function _execute($sql)
+	protected function _execute($sql)
 	{
-		$sql = $this->_prep_query($sql);
-		return @pg_query($this->conn_id, $sql);
+		return pg_query($this->conn_id, $sql);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
+	 * Begin Transaction
 	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
+	 * @return	bool
 	 */
-	function _prep_query($sql)
+	protected function _trans_begin()
 	{
-		return $sql;
+		return (bool) pg_query($this->conn_id, 'BEGIN');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Begin Transaction
+	 * Commit Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_commit()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		return @pg_exec($this->conn_id, "begin");
+		return (bool) pg_query($this->conn_id, 'COMMIT');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Commit Transaction
+	 * Rollback Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_commit()
+	protected function _trans_rollback()
 	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		return @pg_exec($this->conn_id, "commit");
+		return (bool) pg_query($this->conn_id, 'ROLLBACK');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rollback Transaction
+	 * Determines if a query is a "write" type.
 	 *
-	 * @access	public
+	 * @param	string	An SQL query string
 	 * @return	bool
 	 */
-	function trans_rollback()
+	public function is_write_type($sql)
 	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if (preg_match('#^(INSERT|UPDATE).*RETURNING\s.+(\,\s?.+)*$#i', $sql))
 		{
-			return TRUE;
+			return FALSE;
 		}
 
-		return @pg_exec($this->conn_id, "rollback");
+		return parent::is_write_type($sql);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Platform-dependant string escape
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
 	 * @return	string
 	 */
-	function escape_str($str, $like = FALSE)
+	protected function _escape_str($str)
 	{
-		if (is_array($str))
-		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
+		return pg_escape_string($this->conn_id, $str);
 		}
 
-		$str = pg_escape_string($str);
+	// --------------------------------------------------------------------
 
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
+	/**
+	 * "Smart" Escape String
+	 *
+	 * Escapes data based on type
+	 *
+	 * @param	string	$str
+	 * @return	mixed
+	 */
+	public function escape($str)
+	{
+		if (is_php('5.4.4') && (is_string($str) OR (is_object($str) && method_exists($str, '__toString'))))
+		{
+			return pg_escape_literal($this->conn_id, $str);
+		}
+		elseif (is_bool($str))
 		{
-			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
-								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
-								$str);
+			return ($str) ? 'TRUE' : 'FALSE';
 		}
 
-		return $str;
+		return parent::escape($str);
 	}
 
 	// --------------------------------------------------------------------
@@ -309,12 +338,11 @@
 	/**
 	 * Affected Rows
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function affected_rows()
+	public function affected_rows()
 	{
-		return @pg_affected_rows($this->result_id);
+		return pg_affected_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -322,71 +350,45 @@
 	/**
 	 * Insert ID
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	string
 	 */
-	function insert_id()
+	public function insert_id()
 	{
-		$v = $this->_version();
-		$v = $v['server'];
+		$v = pg_version($this->conn_id);
+		$v = isset($v['server']) ? $v['server'] : 0; // 'server' key is only available since PosgreSQL 7.4
 
-		$table	= func_num_args() > 0 ? func_get_arg(0) : NULL;
-		$column	= func_num_args() > 1 ? func_get_arg(1) : NULL;
+		$table	= (func_num_args() > 0) ? func_get_arg(0) : NULL;
+		$column	= (func_num_args() > 1) ? func_get_arg(1) : NULL;
 
-		if ($table == NULL && $v >= '8.1')
+		if ($table === NULL && $v >= '8.1')
 		{
 			$sql='SELECT LASTVAL() as ins_id';
 		}
-		elseif ($table != NULL && $column != NULL && $v >= '8.0')
+		elseif ($table !== NULL)
 		{
-			$sql = sprintf("SELECT pg_get_serial_sequence('%s','%s') as seq", $table, $column);
-			$query = $this->query($sql);
-			$row = $query->row();
-			$sql = sprintf("SELECT CURRVAL('%s') as ins_id", $row->seq);
-		}
-		elseif ($table != NULL)
+			if ($column !== NULL && $v >= '8.0')
 		{
-			// seq_name passed in table parameter
-			$sql = sprintf("SELECT CURRVAL('%s') as ins_id", $table);
+				$sql = 'SELECT pg_get_serial_sequence(\''.$table."', '".$column."') AS seq";
+				$query = $this->query($sql);
+				$query = $query->row();
+				$seq = $query->seq;
 		}
 		else
 		{
-			return pg_last_oid($this->result_id);
-		}
-		$query = $this->query($sql);
-		$row = $query->row();
-		return $row->ins_id;
+				// seq_name passed in table parameter
+				$seq = $table;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
-	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
-	 */
-	function count_all($table = '')
-	{
-		if ($table == '')
-		{
-			return 0;
+			$sql = 'SELECT CURRVAL(\''.$seq."') AS ins_id";
 		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
+		else
 		{
-			return 0;
+			return pg_last_oid($this->result_id);
 		}
 
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		$query = $this->query($sql);
+		$query = $query->row();
+		return (int) $query->ins_id;
 	}
 
 	// --------------------------------------------------------------------
@@ -396,17 +398,18 @@
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	private
-	 * @param	boolean
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _list_tables($prefix_limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		$sql = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'";
+		$sql = 'SELECT "table_name" FROM "information_schema"."tables" WHERE "table_schema" = \''.$this->schema."'";
 
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
 		{
-			$sql .= " AND table_name LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
+			return $sql.' AND "table_name" LIKE \''
+				.$this->escape_like_str($this->dbprefix)."%' "
+				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
 		}
 
 		return $sql;
@@ -415,212 +418,160 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Show column query
+	 * List column query
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _list_columns($table = '')
+	protected function _list_columns($table = '')
 	{
-		return "SELECT column_name FROM information_schema.columns WHERE table_name ='".$table."'";
+		return 'SELECT "column_name"
+			FROM "information_schema"."columns"
+			WHERE LOWER("table_name") = '.$this->escape(strtolower($table));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
+	 * Returns an object with field data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
+	 * @param	string	$table
+	 * @return	array
 	 */
-	function _field_data($table)
+	public function field_data($table)
 	{
-		return "SELECT * FROM ".$table." LIMIT 1";
-	}
+		$sql = 'SELECT "column_name", "data_type", "character_maximum_length", "numeric_precision", "column_default"
+			FROM "information_schema"."columns"
+			WHERE LOWER("table_name") = '.$this->escape(strtolower($table));
 
-	// --------------------------------------------------------------------
+		if (($query = $this->query($sql)) === FALSE)
+		{
+			return FALSE;
+		}
+		$query = $query->result_object();
 
-	/**
-	 * The error message string
-	 *
-	 * @access	private
-	 * @return	string
-	 */
-	function _error_message()
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 	{
-		return pg_last_error($this->conn_id);
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->column_name;
+			$retval[$i]->type		= $query[$i]->data_type;
+			$retval[$i]->max_length		= ($query[$i]->character_maximum_length > 0) ? $query[$i]->character_maximum_length : $query[$i]->numeric_precision;
+			$retval[$i]->default		= $query[$i]->column_default;
+		}
+
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * The error message number
+	 * Error
 	 *
-	 * @access	private
-	 * @return	integer
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
+	 *
+	 * @return	array
 	 */
-	function _error_number()
+	public function error()
 	{
-		return '';
+		return array('code' => '', 'message' => pg_last_error($this->conn_id));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape the SQL Identifiers
-	 *
-	 * This function escapes column and table names
+	 * ORDER BY
 	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
+	 * @param	string	$orderby
+	 * @param	string	$direction	ASC, DESC or RANDOM
+	 * @param	bool	$escape
+	 * @return	object
 	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
+	public function order_by($orderby, $direction = '', $escape = NULL)
 		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
+		$direction = strtoupper(trim($direction));
+		if ($direction === 'RANDOM')
 		{
-			if (strpos($item, '.'.$id) !== FALSE)
+			if ( ! is_float($orderby) && ctype_digit((string) $orderby))
 			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
+				$orderby = ($orderby > 1)
+					? (float) '0.'.$orderby
+					: (float) $orderby;
 		}
 
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
+			if (is_float($orderby))
 		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
+				$this->simple_query('SET SEED '.$orderby);
 		}
 
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
+			$orderby = $this->_random_keyword[0];
+			$direction = '';
+			$escape = FALSE;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
-	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
-	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
-		{
-			$tables = array($tables);
-		}
-
-		return implode(', ', $tables);
+		return parent::order_by($orderby, $direction, $escape);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert statement
+	 * Update statement
 	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Generates a platform-specific update string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
+	 * @param	string	$table
+	 * @param	array	$values
 	 * @return	string
 	 */
-	function _insert($table, $keys, $values)
+	protected function _update($table, $values)
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		$this->qb_limit = FALSE;
+		$this->qb_orderby = array();
+		return parent::_update($table, $values);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert_batch statement
+	 * Update_Batch statement
 	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Generates a platform-specific batch update string from the supplied data
 	 *
-	 * @access  public
-	 * @param   string  the table name
-	 * @param   array   the insert keys
-	 * @param   array   the insert values
+	 * @param	string	$table	Table name
+	 * @param	array	$values	Update data
+	 * @param	string	$index	WHERE key
 	 * @return  string
 	 */
-	function _insert_batch($table, $keys, $values)
+	protected function _update_batch($table, $values, $index)
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
-	}
-
-	// --------------------------------------------------------------------
+		$ids = array();
+		foreach ($values as $key => $val)
+		{
+			$ids[] = $val[$index];
 
-	/**
-	 * Update statement
-	 *
-	 * Generates a platform-specific update string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
-	 * @return	string
-	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
+			foreach (array_keys($val) as $field)
 	{
-		foreach ($values as $key => $val)
+				if ($field !== $index)
 		{
-			$valstr[] = $key." = ".$val;
+					$final[$field][] = 'WHEN '.$val[$index].' THEN '.$val[$field];
+				}
+			}
 		}
 
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
+		$cases = '';
+		foreach ($final as $k => $v)
+		{
+			$cases .= $k.' = (CASE '.$index."\n"
+				.implode("\n", $v)."\n"
+				.'ELSE '.$k.' END), ';
 	}
 
-	// --------------------------------------------------------------------
+		$this->where($index.' IN('.implode(',', $ids).')', NULL, FALSE);
 
-	/**
-	 * Truncate statement
-	 *
-	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _truncate($table)
-	{
-		return "TRUNCATE ".$table;
+		return 'UPDATE '.$table.' SET '.substr($cases, 0, -2).$this->_compile_wh('qb_where');
 	}
 
 	// --------------------------------------------------------------------
@@ -630,31 +581,13 @@
 	 *
 	 * Generates a platform-specific delete string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
-	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
+	protected function _delete($table)
 		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
-			{
-				$conditions .= " AND ";
-			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		return "DELETE FROM ".$table.$conditions.$limit;
+		$this->qb_limit = FALSE;
+		return parent::_delete($table);
 	}
 
 	// --------------------------------------------------------------------
@@ -658,27 +591,18 @@
 	}
 
 	// --------------------------------------------------------------------
+
 	/**
-	 * Limit string
+	 * LIMIT
 	 *
 	 * Generates a platform-specific LIMIT clause
 	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
+	 * @param	string	$sql	SQL Query
 	 * @return	string
 	 */
-	function _limit($sql, $limit, $offset)
-	{
-		$sql .= "LIMIT ".$limit;
-
-		if ($offset > 0)
+	protected function _limit($sql)
 		{
-			$sql .= " OFFSET ".$offset;
-		}
-
-		return $sql;
+		return $sql.' LIMIT '.$this->qb_limit.($this->qb_offset ? ' OFFSET '.$this->qb_offset : '');
 	}
 
 	// --------------------------------------------------------------------
@@ -686,18 +610,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@pg_close($conn_id);
+		pg_close($this->conn_id);
 	}
 
-
 }
-
-
-/* End of file postgre_driver.php */
-/* Location: ./system/database/drivers/postgre/postgre_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/postgre/postgre_forge.php opensourcepos/system/database/drivers/postgre/postgre_forge.php
--- pos-prod/system/database/drivers/postgre/postgre_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/postgre/postgre_forge.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,299 +1,205 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Postgre Forge Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_postgre_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	array
 	 */
-	function _create_database($name)
-	{
-		return "CREATE DATABASE ".$name;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_unsigned		= array(
+		'INT2'		=> 'INTEGER',
+		'SMALLINT'	=> 'INTEGER',
+		'INT'		=> 'BIGINT',
+		'INT4'		=> 'BIGINT',
+		'INTEGER'	=> 'BIGINT',
+		'INT8'		=> 'NUMERIC',
+		'BIGINT'	=> 'NUMERIC',
+		'REAL'		=> 'DOUBLE PRECISION',
+		'FLOAT'		=> 'DOUBLE PRECISION'
+	);
 
 	/**
-	 * Drop database
+	 * NULL value representation in CREATE/ALTER TABLE statements
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _drop_database($name)
-	{
-		return "DROP DATABASE ".$name;
-	}
+	protected $_null = 'NULL';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * Class constructor
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @param	object	&$db	Database object
+	 * @return	void
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
-	{
-		$sql = 'CREATE TABLE ';
-
-		if ($if_not_exists === TRUE)
+	public function __construct(&$db)
 		{
-			if ($this->db->table_exists($table))
-			{
-				return "SELECT * FROM $table"; // Needs to return innocous but valid SQL statement
-			}
-		}
-
-		$sql .= $this->db->_escape_identifiers($table)." (";
-		$current_field_count = 0;
+		parent::__construct($db);
 
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
+		if (version_compare($this->db->version(), '9.0', '>'))
 			{
-				$sql .= "\n\t$attributes";
+			$this->create_table_if = 'CREATE TABLE IF NOT EXISTS';
 			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				$is_unsigned = (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE);
-
-				// Convert datatypes to be PostgreSQL-compatible
-				switch (strtoupper($attributes['TYPE']))
-				{
-					case 'TINYINT':
-						$attributes['TYPE'] = 'SMALLINT';
-						break;
-					case 'SMALLINT':
-						$attributes['TYPE'] = ($is_unsigned) ? 'INTEGER' : 'SMALLINT';
-						break;
-					case 'MEDIUMINT':
-						$attributes['TYPE'] = 'INTEGER';
-						break;
-					case 'INT':
-						$attributes['TYPE'] = ($is_unsigned) ? 'BIGINT' : 'INTEGER';
-						break;
-					case 'BIGINT':
-						$attributes['TYPE'] = ($is_unsigned) ? 'NUMERIC' : 'BIGINT';
-						break;
-					case 'DOUBLE':
-						$attributes['TYPE'] = 'DOUBLE PRECISION';
-						break;
-					case 'DATETIME':
-						$attributes['TYPE'] = 'TIMESTAMP';
-						break;
-					case 'LONGTEXT':
-						$attributes['TYPE'] = 'TEXT';
-						break;
-					case 'BLOB':
-						$attributes['TYPE'] = 'BYTEA';
-						break;
 				}
 
-				// If this is an auto-incrementing primary key, use the serial data type instead
-				if (in_array($field, $primary_keys) && array_key_exists('AUTO_INCREMENT', $attributes) 
-					&& $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' SERIAL';
-				}
-				else
-				{
-					$sql .=  ' '.$attributes['TYPE'];
-				}
+	// --------------------------------------------------------------------
 
-				// Modified to prevent constraints with integer data types
-				if (array_key_exists('CONSTRAINT', $attributes) && strpos($attributes['TYPE'], 'INT') === false)
+	/**
+	 * ALTER TABLE
+	 *
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
+	 */
+	protected function _alter_table($alter_type, $table, $field)
 				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
+		if (in_array($alter_type, array('DROP', 'ADD'), TRUE))
 				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
+			return parent::_alter_table($alter_type, $table, $field);
 				}
 
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
+		$sqls = array();
+		for ($i = 0, $c = count($field); $i < $c; $i++)
 				{
-					$sql .= ' NULL';
-				}
-				else
+			if ($field[$i]['_literal'] !== FALSE)
 				{
-					$sql .= ' NOT NULL';
+				return FALSE;
 				}
 
-				// Added new attribute to create unqite fields. Also works with MySQL
-				if (array_key_exists('UNIQUE', $attributes) && $attributes['UNIQUE'] === TRUE)
+			if (version_compare($this->db->version(), '8', '>=') && isset($field[$i]['type']))
 				{
-					$sql .= ' UNIQUE';
-				}
+				$sqls[] = $sql.' ALTER COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
+					.' TYPE '.$field[$i]['type'].$field[$i]['length'];
 			}
 
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
+			if ( ! empty($field[$i]['default']))
 			{
-				$sql .= ',';
-			}
+				$sqls[] = $sql.' ALTER COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
+					.' SET DEFAULT '.$field[$i]['default'];
 		}
 
-		if (count($primary_keys) > 0)
-		{
-			// Something seems to break when passing an array to _protect_identifiers()
-			foreach ($primary_keys as $index => $key)
+			if (isset($field[$i]['null']))
 			{
-				$primary_keys[$index] = $this->db->_protect_identifiers($key);
+				$sqls[] = $sql.' ALTER COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
+					.($field[$i]['null'] === TRUE ? ' DROP NOT NULL' : ' SET NOT NULL');
 			}
 
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
-		}
-
-		$sql .= "\n);";
-
-		if (is_array($keys) && count($keys) > 0)
+			if ( ! empty($field[$i]['new_name']))
 		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
+				$sqls[] = $sql.' RENAME COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
+					.' TO '.$this->db->escape_identifiers($field[$i]['new_name']);
 				}
 
-				foreach ($key as $field)
+			if ( ! empty($field[$i]['comment']))
 				{
-					$sql .= "CREATE INDEX " . $table . "_" . str_replace(array('"', "'"), '', $field) . "_index ON $table ($field); ";
-				}
+				$sqls[] = 'COMMENT ON COLUMN '
+					.$this->db->escape_identifiers($table).'.'.$this->db->escape_identifiers($field[$i]['name'])
+					.' IS '.$field[$i]['comment'];
 			}
 		}
 
-		return $sql;
+		return $sqls;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop Table
+	 * Field attribute TYPE
 	 *
-	 * @access    private
-	 * @return    bool
-	 */
-	function _drop_table($table)
-	{
-		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table)." CASCADE";
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Alter table query
-	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * Performs a data type mapping between different databases.
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	array	&$attributes
+	 * @return	void
 	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
+	protected function _attr_type(&$attributes)
 		{
-			return $sql;
-		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
-		{
-			$sql .= " DEFAULT \"$default_value\"";
-		}
-
-		if ($null === NULL)
-		{
-			$sql .= ' NULL';
-		}
-		else
+		// Reset field lenghts for data types that don't support it
+		if (isset($attributes['CONSTRAINT']) && stripos($attributes['TYPE'], 'int') !== FALSE)
 		{
-			$sql .= ' NOT NULL';
+			$attributes['CONSTRAINT'] = NULL;
 		}
 
-		if ($after_field != '')
+		switch (strtoupper($attributes['TYPE']))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+			case 'TINYINT':
+				$attributes['TYPE'] = 'SMALLINT';
+				$attributes['UNSIGNED'] = FALSE;
+				return;
+			case 'MEDIUMINT':
+				$attributes['TYPE'] = 'INTEGER';
+				$attributes['UNSIGNED'] = FALSE;
+				return;
+			default: return;
 		}
-
-		return $sql;
-
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rename a table
+	 * Field attribute AUTO_INCREMENT
 	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
 	 */
-	function _rename_table($table_name, $new_table_name)
+	protected function _attr_auto_increment(&$attributes, &$field)
+	{
+		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
-		return $sql;
+			$field['type'] = ($field['type'] === 'NUMERIC')
+				? 'BIGSERIAL'
+				: 'SERIAL';
 	}
-
-
 }
 
-/* End of file postgre_forge.php */
-/* Location: ./system/database/drivers/postgre/postgre_forge.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/postgre/postgre_result.php opensourcepos/system/database/drivers/postgre/postgre_result.php
--- pos-prod/system/database/drivers/postgre/postgre_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/postgre/postgre_result.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,40 +1,65 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Postgres Result Class
  *
  * This class extends the parent result class: CI_DB_result
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_postgre_result extends CI_DB_result {
 
 	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
 	{
-		return @pg_num_rows($this->result_id);
+		return is_int($this->num_rows)
+			? $this->num_rows
+			: $this->num_rows = pg_num_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -42,12 +67,11 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
-		return @pg_num_fields($this->result_id);
+		return pg_num_fields($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -57,13 +81,12 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
-		for ($i = 0; $i < $this->num_fields(); $i++)
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
 			$field_names[] = pg_field_name($this->result_id, $i);
 		}
@@ -78,22 +101,17 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		for ($i = 0; $i < $this->num_fields(); $i++)
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
-			$F				= new stdClass();
-			$F->name		= pg_field_name($this->result_id, $i);
-			$F->type		= pg_field_type($this->result_id, $i);
-			$F->max_length	= pg_field_size($this->result_id, $i);
-			$F->primary_key = 0;
-			$F->default		= '';
-
-			$retval[] = $F;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= pg_field_name($this->result_id, $i);
+			$retval[$i]->type		= pg_field_type($this->result_id, $i);
+			$retval[$i]->max_length		= pg_field_size($this->result_id, $i);
 		}
 
 		return $retval;
@@ -104,9 +122,9 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_resource($this->result_id))
 		{
@@ -122,12 +140,12 @@
 	 *
 	 * Moves the internal pointer to the desired offset.  We call
 	 * this internally before fetching results to make sure the
-	 * result set starts at zero
+	 * result set starts at zero.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	int	$n
+	 * @return	bool
 	 */
-	function _data_seek($n = 0)
+	public function data_seek($n = 0)
 	{
 		return pg_result_seek($this->result_id, $n);
 	}
@@ -139,10 +157,9 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return pg_fetch_assoc($this->result_id);
 	}
@@ -154,16 +171,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		return pg_fetch_object($this->result_id);
+		return pg_fetch_object($this->result_id, NULL, $class_name);
 	}
 
 }
-
-
-/* End of file postgre_result.php */
-/* Location: ./system/database/drivers/postgre/postgre_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/postgre/postgre_utility.php opensourcepos/system/database/drivers/postgre/postgre_utility.php
--- pos-prod/system/database/drivers/postgre/postgre_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/postgre/postgre_utility.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,88 +1,78 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Postgre Utility Class
  *
+ * @package		CodeIgniter
+ * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_postgre_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
+	 * List databases statement
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	string
 	 */
-	function _list_databases()
-	{
-		return "SELECT datname FROM pg_database";
-	}
-
-	// --------------------------------------------------------------------
+	protected $_list_databases	= 'SELECT datname FROM pg_database';
 
 	/**
-	 * Optimize table query
+	 * OPTIMIZE TABLE statement
 	 *
-	 * Is table optimization supported in Postgre?
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _optimize_table($table)
-	{
-		return FALSE;
-	}
+	protected $_optimize_table	= 'REINDEX TABLE %s';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Repair table query
+	 * Export
 	 *
-	 * Are table repairs supported in Postgre?
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Postgre Export
-	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
+		return $this->db->display_error('db_unsupported_feature');
 	}
 }
-
-
-/* End of file postgre_utility.php */
-/* Location: ./system/database/drivers/postgre/postgre_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlite/index.html opensourcepos/system/database/drivers/sqlite/index.html
--- pos-prod/system/database/drivers/sqlite/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlite/index.html	2016-05-23 15:32:31.940838868 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlite/sqlite_driver.php opensourcepos/system/database/drivers/sqlite/sqlite_driver.php
--- pos-prod/system/database/drivers/sqlite/sqlite_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlite/sqlite_driver.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,158 +1,105 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
-
-
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLite Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlite_driver extends CI_DB {
 
-	var $dbdriver = 'sqlite';
-
-	// The character used to escape with - not needed for SQLite
-	var $_escape_char = '';
-
-	// clause and character used for LIKE escape sequences
-	var $_like_escape_str = " ESCAPE '%s' ";
-	var $_like_escape_chr = '!';
-
-	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
-	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword = ' Random()'; // database specific random keyword
-
-	/**
-	 * Non-persistent database connection
-	 *
-	 * @access	private called by the base class
-	 * @return	resource
-	 */
-	function db_connect()
-	{
-		if ( ! $conn_id = @sqlite_open($this->database, FILE_WRITE_MODE, $error))
-		{
-			log_message('error', $error);
-
-			if ($this->db_debug)
-			{
-				$this->display_error($error, '', TRUE);
-			}
-
-			return FALSE;
-		}
-
-		return $conn_id;
-	}
-
-	// --------------------------------------------------------------------
-
 	/**
-	 * Persistent database connection
+	 * Database driver
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	string
 	 */
-	function db_pconnect()
-	{
-		if ( ! $conn_id = @sqlite_popen($this->database, FILE_WRITE_MODE, $error))
-		{
-			log_message('error', $error);
-
-			if ($this->db_debug)
-			{
-				$this->display_error($error, '', TRUE);
-			}
-
-			return FALSE;
-		}
-
-		return $conn_id;
-	}
+	public $dbdriver = 'sqlite';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Reconnect
+	 * ORDER BY random keyword
 	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
-	 *
-	 * @access	public
-	 * @return	void
+	 * @var	array
 	 */
-	function reconnect()
-	{
-		// not implemented in SQLite
-	}
+	protected $_random_keyword = array('RANDOM()', 'RANDOM()');
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * Non-persistent database connection
 	 *
-	 * @access	private called by the base class
+	 * @param	bool	$persistent
 	 * @return	resource
 	 */
-	function db_select()
+	public function db_connect($persistent = FALSE)
 	{
-		return TRUE;
-	}
+		$error = NULL;
+		$conn_id = ($persistent === TRUE)
+			? sqlite_popen($this->database, 0666, $error)
+			: sqlite_open($this->database, 0666, $error);
 
-	// --------------------------------------------------------------------
+		isset($error) && log_message('error', $error);
 
-	/**
-	 * Set client character set
-	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
-	 */
-	function db_set_charset($charset, $collation)
-	{
-		// @todo - add support if needed
-		return TRUE;
+		return $conn_id;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Version number query string
+	 * Database version number
 	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function _version()
+	public function version()
 	{
-		return sqlite_libversion();
+		return isset($this->data_cache['version'])
+			? $this->data_cache['version']
+			: $this->data_cache['version'] = sqlite_libversion();
 	}
 
 	// --------------------------------------------------------------------
@@ -160,30 +107,14 @@
 	/**
 	 * Execute the query
 	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
+	 * @param	string	$sql	an SQL query
 	 * @return	resource
 	 */
-	function _execute($sql)
+	protected function _execute($sql)
 	{
-		$sql = $this->_prep_query($sql);
-		return @sqlite_query($this->conn_id, $sql);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Prep the query
-	 *
-	 * If needed, each database adapter can prep the query string
-	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
-	 */
-	function _prep_query($sql)
-	{
-		return $sql;
+		return $this->is_write_type($sql)
+			? sqlite_exec($this->conn_id, $sql)
+			: sqlite_query($this->conn_id, $sql);
 	}
 
 	// --------------------------------------------------------------------
@@ -191,29 +122,11 @@
 	/**
 	 * Begin Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_begin()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		$this->simple_query('BEGIN TRANSACTION');
-		return TRUE;
+		return $this->simple_query('BEGIN TRANSACTION');
 	}
 
 	// --------------------------------------------------------------------
@@ -221,24 +134,11 @@
 	/**
 	 * Commit Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_commit()
-	{
-		if ( ! $this->trans_enabled)
-		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+	protected function _trans_commit()
 		{
-			return TRUE;
-		}
-
-		$this->simple_query('COMMIT');
-		return TRUE;
+		return $this->simple_query('COMMIT');
 	}
 
 	// --------------------------------------------------------------------
@@ -246,59 +146,24 @@
 	/**
 	 * Rollback Transaction
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function trans_rollback()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _trans_rollback()
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		$this->simple_query('ROLLBACK');
-		return TRUE;
+		return $this->simple_query('ROLLBACK');
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Platform-dependant string escape
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
 	 * @return	string
 	 */
-	function escape_str($str, $like = FALSE)
-	{
-		if (is_array($str))
-		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = $this->escape_str($val, $like);
-			}
-
-			return $str;
-		}
-
-		$str = sqlite_escape_string($str);
-
-		// escape LIKE condition wildcards
-		if ($like === TRUE)
+	protected function _escape_str($str)
 		{
-			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
-								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
-								$str);
-		}
-
-		return $str;
+		return sqlite_escape_string($str);
 	}
 
 	// --------------------------------------------------------------------
@@ -306,10 +171,9 @@
 	/**
 	 * Affected Rows
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function affected_rows()
+	public function affected_rows()
 	{
 		return sqlite_changes($this->conn_id);
 	}
@@ -319,43 +183,11 @@
 	/**
 	 * Insert ID
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function insert_id()
+	public function insert_id()
 	{
-		return @sqlite_last_insert_rowid($this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
-	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
-	 */
-	function count_all($table = '')
-	{
-		if ($table == '')
-		{
-			return 0;
-		}
-
-		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
-
-		if ($query->num_rows() == 0)
-		{
-			return 0;
-		}
-
-		$row = $query->row();
-		$this->_reset_select();
-		return (int) $row->numrows;
+		return sqlite_last_insert_rowid($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -365,18 +197,18 @@
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	private
-	 * @param	boolean
+	 * @param	bool	$prefix_limit
 	 * @return	string
 	 */
-	function _list_tables($prefix_limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
 		$sql = "SELECT name from sqlite_master WHERE type='table'";
 
-		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
+		if ($prefix_limit !== FALSE && $this->dbprefix != '')
 		{
-			$sql .= " AND 'name' LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
+			return $sql." AND 'name' LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
 		}
+
 		return $sql;
 	}
 
@@ -387,11 +219,10 @@
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
+	 * @param	string	$table
+	 * @return	bool
 	 */
-	function _list_columns($table = '')
+	protected function _list_columns($table = '')
 	{
 		// Not supported
 		return FALSE;
@@ -400,240 +231,88 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
+	 * Returns an object with field data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
+	 * @param	string	$table
+	 * @return	array
 	 */
-	function _field_data($table)
+	public function field_data($table)
 	{
-		return "SELECT * FROM ".$table." LIMIT 1";
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access	private
-	 * @return	string
-	 */
-	function _error_message()
+		if (($query = $this->query('PRAGMA TABLE_INFO('.$this->protect_identifiers($table, TRUE, NULL, FALSE).')')) === FALSE)
 	{
-		return sqlite_error_string(sqlite_last_error($this->conn_id));
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message number
-	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
-	{
-		return sqlite_last_error($this->conn_id);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Escape the SQL Identifiers
-	 *
-	 * This function escapes column and table names
-	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
-	 */
-	function _escape_identifiers($item)
-	{
-		if ($this->_escape_char == '')
-		{
-			return $item;
-		}
-
-		foreach ($this->_reserved_identifiers as $id)
-		{
-			if (strpos($item, '.'.$id) !== FALSE)
-			{
-				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
-
-				// remove duplicates if the user already included the escape
-				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
-			}
+			return FALSE;
 		}
 
-		if (strpos($item, '.') !== FALSE)
-		{
-			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
-		}
-		else
+		$query = $query->result_array();
+		if (empty($query))
 		{
-			$str = $this->_escape_char.$item.$this->_escape_char;
-		}
-
-		// remove duplicates if the user already included the escape
-		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
+			return FALSE;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * From Tables
-	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
-	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
-	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 		{
-			$tables = array($tables);
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]['name'];
+			$retval[$i]->type		= $query[$i]['type'];
+			$retval[$i]->max_length		= NULL;
+			$retval[$i]->default		= $query[$i]['dflt_value'];
+			$retval[$i]->primary_key	= isset($query[$i]['pk']) ? (int) $query[$i]['pk'] : 0;
 		}
 
-		return '('.implode(', ', $tables).')';
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert statement
+	 * Error
 	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
-	 * @return	string
+	 * @return	array
 	 */
-	function _insert($table, $keys, $values)
+	public function error()
 	{
-		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		$error = array('code' => sqlite_last_error($this->conn_id));
+		$error['message'] = sqlite_error_string($error['code']);
+		return $error;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Update statement
+	 * Replace statement
 	 *
-	 * Generates a platform-specific update string from the supplied data
+	 * Generates a platform-specific replace string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
+	 * @param	string	$table	Table name
+	 * @param	array	$keys	INSERT keys
+	 * @param	array	$values	INSERT values
 	 * @return	string
 	 */
-	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
-	{
-		foreach ($values as $key => $val)
+	protected function _replace($table, $keys, $values)
 		{
-			$valstr[] = $key." = ".$val;
+		return 'INSERT OR '.parent::_replace($table, $keys, $values);
 		}
 
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
-
-		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
-
-		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
-
-		$sql .= $orderby.$limit;
-
-		return $sql;
-	}
-
-
 	// --------------------------------------------------------------------
 
 	/**
 	 * Truncate statement
 	 *
 	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	string
-	 */
-	function _truncate($table)
-	{
-		return $this->_delete($table);
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Delete statement
 	 *
-	 * Generates a platform-specific delete string from the supplied data
+	 * If the database does not support the TRUNCATE statement,
+	 * then this function maps to 'DELETE FROM table'
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
+	protected function _truncate($table)
 	{
-		$conditions = '';
-
-		if (count($where) > 0 OR count($like) > 0)
-		{
-			$conditions = "\nWHERE ";
-			$conditions .= implode("\n", $this->ar_where);
-
-			if (count($where) > 0 && count($like) > 0)
-			{
-				$conditions .= " AND ";
-			}
-			$conditions .= implode("\n", $like);
-		}
-
-		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
-
-		return "DELETE FROM ".$table.$conditions.$limit;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Limit string
-	 *
-	 * Generates a platform-specific LIMIT clause
-	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
-	 * @return	string
-	 */
-	function _limit($sql, $limit, $offset)
-	{
-		if ($offset == 0)
-		{
-			$offset = '';
-		}
-		else
-		{
-			$offset .= ", ";
-		}
-
-		return $sql."LIMIT ".$offset.$limit;
+		return 'DELETE FROM '.$table;
 	}
 
 	// --------------------------------------------------------------------
@@ -641,18 +320,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@sqlite_close($conn_id);
+		sqlite_close($this->conn_id);
 	}
 
-
 }
-
-
-/* End of file sqlite_driver.php */
-/* Location: ./system/database/drivers/sqlite/sqlite_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlite/sqlite_forge.php opensourcepos/system/database/drivers/sqlite/sqlite_forge.php
--- pos-prod/system/database/drivers/sqlite/sqlite_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlite/sqlite_forge.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,64 +1,87 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLite Forge Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlite_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE TABLE IF statement
 	 *
-	 * @access	public
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database()
-	{
-		// In SQLite, a database is created when you connect to the database.
-		// We'll return TRUE so that an error isn't generated
-		return TRUE;
-	}
+	protected $_create_table_if	= FALSE;
+
+	/**
+	 * UNSIGNED support
+	 *
+	 * @var	bool|array
+	 */
+	protected $_unsigned		= FALSE;
+
+	/**
+	 * NULL value representation in CREATE/ALTER TABLE statements
+	 *
+	 * @var	string
+	 */
+	protected $_null		= 'NULL';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop database
+	 * Create database
 	 *
-	 * @access	private
-	 * @param	string	the database name
+	 * @param	string	$db_name	(ignored)
 	 * @return	bool
 	 */
-	function _drop_database($name)
+	public function create_database($db_name = '')
 	{
-		if ( ! @file_exists($this->db->database) OR ! @unlink($this->db->database))
-		{
-			if ($this->db->db_debug)
-			{
-				return $this->db->display_error('db_unable_to_drop');
-			}
-			return FALSE;
-		}
+		// In SQLite, a database is created when you connect to the database.
+		// We'll return TRUE so that an error isn't generated
 		return TRUE;
 	}
+
 	// --------------------------------------------------------------------
 
 	/**
@@ -62,204 +85,121 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * Drop database
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
+	 * @param	string	$db_name	(ignored)
 	 * @return	bool
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
-	{
-		$sql = 'CREATE TABLE ';
-
-		// IF NOT EXISTS added to SQLite in 3.3.0
-		if ($if_not_exists === TRUE && version_compare($this->db->_version(), '3.3.0', '>=') === TRUE)
-		{
-			$sql .= 'IF NOT EXISTS ';
-		}
-
-		$sql .= $this->db->_escape_identifiers($table)."(";
-		$current_field_count = 0;
-
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
-			{
-				$sql .= "\n\t$attributes";
-			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
-
-				$sql .=  ' '.$attributes['TYPE'];
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
+	public function drop_database($db_name = '')
 				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
+		if ( ! file_exists($this->db->database) OR ! @unlink($this->db->database))
 				{
-					$sql .= ' NULL';
+			return ($this->db->db_debug) ? $this->db->display_error('db_unable_to_drop') : FALSE;
 				}
-				else
+		elseif ( ! empty($this->db->data_cache['db_names']))
 				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
+			$key = array_search(strtolower($this->db->database), array_map('strtolower', $this->db->data_cache['db_names']), TRUE);
+			if ($key !== FALSE)
 				{
-					$sql .= ' AUTO_INCREMENT';
+				unset($this->db->data_cache['db_names'][$key]);
 				}
 			}
 
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
-			{
-				$sql .= ',';
-			}
+		return TRUE;
 		}
 
-		if (count($primary_keys) > 0)
-		{
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
-		}
+	// --------------------------------------------------------------------
 
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
-				}
+	/**
+	 * ALTER TABLE
+	 *
+	 * @todo	implement drop_column(), modify_column()
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
+	 */
+	protected function _alter_table($alter_type, $table, $field)
+	{
+		if ($alter_type === 'DROP' OR $alter_type === 'CHANGE')
+		{
+			// drop_column():
+			//	BEGIN TRANSACTION;
+			//	CREATE TEMPORARY TABLE t1_backup(a,b);
+			//	INSERT INTO t1_backup SELECT a,b FROM t1;
+			//	DROP TABLE t1;
+			//	CREATE TABLE t1(a,b);
+			//	INSERT INTO t1 SELECT a,b FROM t1_backup;
+			//	DROP TABLE t1_backup;
+			//	COMMIT;
 
-				$sql .= ",\n\tUNIQUE (" . implode(', ', $key) . ")";
-			}
+			return FALSE;
 		}
 
-		$sql .= "\n)";
-
-		return $sql;
+		return parent::_alter_table($alter_type, $table, $field);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Drop Table
-	 *
-	 *  Unsupported feature in SQLite
+	 * Process column
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @param	array	$field
+	 * @return	string
 	 */
-	function _drop_table($table)
-	{
-		if ($this->db->db_debug)
+	protected function _process_column($field)
 		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return array();
+		return $this->db->escape_identifiers($field['name'])
+			.' '.$field['type']
+			.$field['auto_increment']
+			.$field['null']
+			.$field['unique']
+			.$field['default'];
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
+	 * Field attribute TYPE
 	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * Performs a data type mapping between different databases.
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
-	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
-		{
-			// SQLite does not support dropping columns
-			// http://www.sqlite.org/omitted.html
-			// http://www.sqlite.org/faq.html#q11
-			return FALSE;
-		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
-		{
-			$sql .= " DEFAULT \"$default_value\"";
-		}
-
-		if ($null === NULL)
-		{
-			$sql .= ' NULL';
-		}
-		else
+	 * @param	array	&$attributes
+	 * @return	void
+	 */
+	protected function _attr_type(&$attributes)
 		{
-			$sql .= ' NOT NULL';
-		}
-
-		if ($after_field != '')
+		switch (strtoupper($attributes['TYPE']))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+			case 'ENUM':
+			case 'SET':
+				$attributes['TYPE'] = 'TEXT';
+				return;
+			default: return;
 		}
-
-		return $sql;
-
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rename a table
+	 * Field attribute AUTO_INCREMENT
 	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
 	 */
-	function _rename_table($table_name, $new_table_name)
+	protected function _attr_auto_increment(&$attributes, &$field)
+	{
+		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
 	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
-		return $sql;
+			$field['type'] = 'INTEGER PRIMARY KEY';
+			$field['default'] = '';
+			$field['null'] = '';
+			$field['unique'] = '';
+			$field['auto_increment'] = ' AUTOINCREMENT';
+
+			$this->primary_keys = array();
 	}
 }
 
-/* End of file sqlite_forge.php */
-/* Location: ./system/database/drivers/sqlite/sqlite_forge.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlite/sqlite_result.php opensourcepos/system/database/drivers/sqlite/sqlite_result.php
--- pos-prod/system/database/drivers/sqlite/sqlite_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlite/sqlite_result.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLite Result Class
@@ -21,20 +43,21 @@
  * This class extends the parent result class: CI_DB_result
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlite_result extends CI_DB_result {
 
 	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
 	{
-		return @sqlite_num_rows($this->result_id);
+		return is_int($this->num_rows)
+			? $this->num_rows
+			: $this->num_rows = @sqlite_num_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -42,10 +65,9 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
 		return @sqlite_num_fields($this->result_id);
 	}
@@ -57,15 +79,14 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
-		for ($i = 0; $i < $this->num_fields(); $i++)
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
-			$field_names[] = sqlite_field_name($this->result_id, $i);
+			$field_names[$i] = sqlite_field_name($this->result_id, $i);
 		}
 
 		return $field_names;
@@ -78,22 +99,17 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		for ($i = 0; $i < $this->num_fields(); $i++)
+		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
 		{
-			$F				= new stdClass();
-			$F->name		= sqlite_field_name($this->result_id, $i);
-			$F->type		= 'varchar';
-			$F->max_length	= 0;
-			$F->primary_key = 0;
-			$F->default		= '';
-
-			$retval[] = $F;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= sqlite_field_name($this->result_id, $i);
+			$retval[$i]->type		= NULL;
+			$retval[$i]->max_length		= NULL;
 		}
 
 		return $retval;
@@ -102,28 +118,16 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Free the result
-	 *
-	 * @return	null
-	 */
-	function free_result()
-	{
-		// Not implemented in SQLite
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
 	 * Data Seek
 	 *
 	 * Moves the internal pointer to the desired offset.  We call
 	 * this internally before fetching results to make sure the
-	 * result set starts at zero
+	 * result set starts at zero.
 	 *
-	 * @access	private
-	 * @return	array
+	 * @param	int	$n
+	 * @return	bool
 	 */
-	function _data_seek($n = 0)
+	public function data_seek($n = 0)
 	{
 		return sqlite_seek($this->result_id, $n);
 	}
@@ -135,10 +139,9 @@
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return sqlite_fetch_array($this->result_id);
 	}
@@ -150,30 +153,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		if (function_exists('sqlite_fetch_object'))
-		{
-			return sqlite_fetch_object($this->result_id);
-		}
-		else
-		{
-			$arr = sqlite_fetch_array($this->result_id, SQLITE_ASSOC);
-			if (is_array($arr))
-			{
-				$obj = (object) $arr;
-				return $obj;
-			} else {
-				return NULL;
-			}
-		}
+		return sqlite_fetch_object($this->result_id, $class_name);
 	}
 
 }
-
-
-/* End of file sqlite_result.php */
-/* Location: ./system/database/drivers/sqlite/sqlite_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlite/sqlite_utility.php opensourcepos/system/database/drivers/sqlite/sqlite_utility.php
--- pos-prod/system/database/drivers/sqlite/sqlite_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlite/sqlite_utility.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,96 +1,61 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.3.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLite Utility Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlite_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
-	 *
-	 * I don't believe you can do a database listing with SQLite
-	 * since each database is its own file.  I suppose we could
-	 * try reading a directory looking for SQLite files, but
-	 * that doesn't seem like a terribly good idea
-	 *
-	 * @access	private
-	 * @return	bool
-	 */
-	function _list_databases()
-	{
-		if ($this->db_debug)
-		{
-			return $this->db->display_error('db_unsuported_feature');
-		}
-		return array();
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Optimize table query
-	 *
-	 * Is optimization even supported in SQLite?
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _optimize_table($table)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Repair table query
-	 *
-	 * Are table repairs even supported in SQLite?
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		return FALSE;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * SQLite Export
+	 * Export
 	 *
-	 * @access	private
-	 * @param	array	Preferences
+	 * @param	array	$params	Preferences
 	 * @return	mixed
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
-	}
+		return $this->db->display_error('db_unsupported_feature');
 }
 
-/* End of file sqlite_utility.php */
-/* Location: ./system/database/drivers/sqlite/sqlite_utility.php */
\ No newline at end of file
+}
Only in opensourcepos/system/database/drivers: sqlite3
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlsrv/index.html opensourcepos/system/database/drivers/sqlsrv/index.html
--- pos-prod/system/database/drivers/sqlsrv/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlsrv/index.html	2016-05-23 15:32:31.940838868 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlsrv/sqlsrv_driver.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_driver.php
--- pos-prod/system/database/drivers/sqlsrv/sqlsrv_driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlsrv/sqlsrv_driver.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,351 +1,279 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.3
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLSRV Database Adapter Class
  *
  * Note: _DB is an extender class that the app controller
- * creates dynamically based on whether the active record
+ * creates dynamically based on whether the query builder
  * class is being used or not.
  *
  * @package		CodeIgniter
  * @subpackage	Drivers
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlsrv_driver extends CI_DB {
 
-	var $dbdriver = 'sqlsrv';
-
-	// The character used for escaping
-	var $_escape_char = '';
-
-	// clause and character used for LIKE escape sequences
-	var $_like_escape_str = " ESCAPE '%s' ";
-	var $_like_escape_chr = '!';
-
 	/**
-	 * The syntax to count rows is slightly different across different
-	 * database engines, so this string appears in each driver and is
-	 * used for the count_all() and count_all_results() functions.
+	 * Database driver
+	 *
+	 * @var	string
 	 */
-	var $_count_string = "SELECT COUNT(*) AS ";
-	var $_random_keyword = ' ASC'; // not currently supported
+	public $dbdriver = 'sqlsrv';
 
 	/**
-	 * Non-persistent database connection
+	 * Scrollable flag
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * Determines what cursor type to use when executing queries.
+	 *
+	 * FALSE or SQLSRV_CURSOR_FORWARD would increase performance,
+	 * but would disable num_rows() (and possibly insert_id())
+	 *
+	 * @var	mixed
 	 */
-	function db_connect($pooling = false)
-	{
-		// Check for a UTF-8 charset being passed as CI's default 'utf8'.
-		$character_set = (0 === strcasecmp('utf8', $this->char_set)) ? 'UTF-8' : $this->char_set;
-
-		$connection = array(
-			'UID'				=> empty($this->username) ? '' : $this->username,
-			'PWD'				=> empty($this->password) ? '' : $this->password,
-			'Database'			=> $this->database,
-			'ConnectionPooling' => $pooling ? 1 : 0,
-			'CharacterSet'		=> $character_set,
-			'ReturnDatesAsStrings' => 1
-		);
-		
-		// If the username and password are both empty, assume this is a 
-		// 'Windows Authentication Mode' connection.
-		if(empty($connection['UID']) && empty($connection['PWD'])) {
-			unset($connection['UID'], $connection['PWD']);
-		}
-
-		return sqlsrv_connect($this->hostname, $connection);
-	}
+	public $scrollable;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Persistent database connection
+	 * ORDER BY random keyword
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @var	array
 	 */
-	function db_pconnect()
-	{
-		$this->db_connect(TRUE);
-	}
-
-	// --------------------------------------------------------------------
+	protected $_random_keyword = array('NEWID()', 'RAND(%d)');
 
 	/**
-	 * Reconnect
+	 * Quoted identifier flag
 	 *
-	 * Keep / reestablish the db connection if no queries have been
-	 * sent for a length of time exceeding the server's idle timeout
+	 * Whether to use SQL-92 standard quoted identifier
+	 * (double quotes) or brackets for identifier escaping.
 	 *
-	 * @access	public
-	 * @return	void
+	 * @var	bool
 	 */
-	function reconnect()
-	{
-		// not implemented in MSSQL
-	}
+	protected $_quoted_identifier = TRUE;
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Select the database
+	 * Class constructor
 	 *
-	 * @access	private called by the base class
-	 * @return	resource
+	 * @param	array	$params
+	 * @return	void
 	 */
-	function db_select()
+	public function __construct($params)
 	{
-		return $this->_execute('USE ' . $this->database);
-	}
+		parent::__construct($params);
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Set client character set
-	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	resource
-	 */
-	function db_set_charset($charset, $collation)
+		// This is only supported as of SQLSRV 3.0
+		if ($this->scrollable === NULL)
 	{
-		// @todo - add support if needed
-		return TRUE;
+			$this->scrollable = defined('SQLSRV_CURSOR_CLIENT_BUFFERED')
+				? SQLSRV_CURSOR_CLIENT_BUFFERED
+				: FALSE;
 	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Execute the query
-	 *
-	 * @access	private called by the base class
-	 * @param	string	an SQL query
-	 * @return	resource
-	 */
-	function _execute($sql)
-	{
-		$sql = $this->_prep_query($sql);
-		return sqlsrv_query($this->conn_id, $sql, null, array(
-			'Scrollable'				=> SQLSRV_CURSOR_STATIC,
-			'SendStreamParamsAtExec'	=> true
-		));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Prep the query
+	 * Database connection
 	 *
-	 * If needed, each database adapter can prep the query string
-	 *
-	 * @access	private called by execute()
-	 * @param	string	an SQL query
-	 * @return	string
+	 * @param	bool	$pooling
+	 * @return	resource
 	 */
-	function _prep_query($sql)
+	public function db_connect($pooling = FALSE)
 	{
-		return $sql;
-	}
+		$charset = in_array(strtolower($this->char_set), array('utf-8', 'utf8'), TRUE)
+			? 'UTF-8' : SQLSRV_ENC_CHAR;
 
-	// --------------------------------------------------------------------
+		$connection = array(
+			'UID'			=> empty($this->username) ? '' : $this->username,
+			'PWD'			=> empty($this->password) ? '' : $this->password,
+			'Database'		=> $this->database,
+			'ConnectionPooling'	=> ($pooling === TRUE) ? 1 : 0,
+			'CharacterSet'		=> $charset,
+			'Encrypt'		=> ($this->encrypt === TRUE) ? 1 : 0,
+			'ReturnDatesAsStrings'	=> 1
+		);
 
-	/**
-	 * Begin Transaction
-	 *
-	 * @access	public
-	 * @return	bool
-	 */
-	function trans_begin($test_mode = FALSE)
-	{
-		if ( ! $this->trans_enabled)
+		// If the username and password are both empty, assume this is a
+		// 'Windows Authentication Mode' connection.
+		if (empty($connection['UID']) && empty($connection['PWD']))
 		{
-			return TRUE;
+			unset($connection['UID'], $connection['PWD']);
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if (FALSE !== ($this->conn_id = sqlsrv_connect($this->hostname, $connection)))
 		{
-			return TRUE;
+			// Determine how identifiers are escaped
+			$query = $this->query('SELECT CASE WHEN (@@OPTIONS | 256) = @@OPTIONS THEN 1 ELSE 0 END AS qi');
+			$query = $query->row_array();
+			$this->_quoted_identifier = empty($query) ? FALSE : (bool) $query['qi'];
+			$this->_escape_char = ($this->_quoted_identifier) ? '"' : array('[', ']');
 		}
 
-		// Reset the transaction failure flag.
-		// If the $test_mode flag is set to TRUE transactions will be rolled back
-		// even if the queries produce a successful result.
-		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
-
-		return sqlsrv_begin_transaction($this->conn_id);
+		return $this->conn_id;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Commit Transaction
+	 * Select the database
 	 *
-	 * @access	public
+	 * @param	string	$database
 	 * @return	bool
 	 */
-	function trans_commit()
+	public function db_select($database = '')
 	{
-		if ( ! $this->trans_enabled)
+		if ($database === '')
 		{
-			return TRUE;
+			$database = $this->database;
 		}
 
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
+		if ($this->_execute('USE '.$this->escape_identifiers($database)))
 		{
+			$this->database = $database;
 			return TRUE;
 		}
 
-		return sqlsrv_commit($this->conn_id);
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rollback Transaction
+	 * Execute the query
 	 *
-	 * @access	public
-	 * @return	bool
+	 * @param	string	$sql	an SQL query
+	 * @return	resource
 	 */
-	function trans_rollback()
-	{
-		if ( ! $this->trans_enabled)
+	protected function _execute($sql)
 		{
-			return TRUE;
-		}
-
-		// When transactions are nested we only begin/commit/rollback the outermost ones
-		if ($this->_trans_depth > 0)
-		{
-			return TRUE;
-		}
-
-		return sqlsrv_rollback($this->conn_id);
+		return ($this->scrollable === FALSE OR $this->is_write_type($sql))
+			? sqlsrv_query($this->conn_id, $sql)
+			: sqlsrv_query($this->conn_id, $sql, NULL, array('Scrollable' => $this->scrollable));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape String
+	 * Begin Transaction
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	bool	whether or not the string will be used in a LIKE condition
-	 * @return	string
+	 * @return	bool
 	 */
-	function escape_str($str, $like = FALSE)
+	protected function _trans_begin()
 	{
-		// Escape single quotes
-		return str_replace("'", "''", $str);
+		return sqlsrv_begin_transaction($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Affected Rows
+	 * Commit Transaction
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	bool
 	 */
-	function affected_rows()
+	protected function _trans_commit()
 	{
-		return @sqlrv_rows_affected($this->conn_id);
+		return sqlsrv_commit($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* Insert ID
-	*
-	* Returns the last id created in the Identity column.
+	 * Rollback Transaction
 	*
-	* @access public
-	* @return integer
+	 * @return	bool
 	*/
-	function insert_id()
+	protected function _trans_rollback()
 	{
-		return $this->query('select @@IDENTITY as insert_id')->row('insert_id');
+		return sqlsrv_rollback($this->conn_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* Parse major version
-	*
-	* Grabs the major version number from the
-	* database server version string passed in.
+	 * Affected Rows
 	*
-	* @access private
-	* @param string $version
-	* @return int16 major version number
+	 * @return	int
 	*/
-	function _parse_major_version($version)
+	public function affected_rows()
 	{
-		preg_match('/([0-9]+)\.([0-9]+)\.([0-9]+)/', $version, $ver_info);
-		return $ver_info[1]; // return the major version b/c that's all we're interested in.
+		return sqlsrv_rows_affected($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	* Version number query string
+	 * Insert ID
+	 *
+	 * Returns the last id created in the Identity column.
 	*
-	* @access public
 	* @return string
 	*/
-	function _version()
+	public function insert_id()
 	{
-		$info = sqlsrv_server_info($this->conn_id);
-		return sprintf("select '%s' as ver", $info['SQLServerVersion']);
+		return $this->query('SELECT SCOPE_IDENTITY() AS insert_id')->row()->insert_id;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * "Count All" query
-	 *
-	 * Generates a platform-specific query string that counts all records in
-	 * the specified database
+	 * Database version number
 	 *
-	 * @access	public
-	 * @param	string
 	 * @return	string
 	 */
-	function count_all($table = '')
+	public function version()
 	{
-		if ($table == '')
-			return '0';
-	
-		$query = $this->query("SELECT COUNT(*) AS numrows FROM " . $this->dbprefix . $table);
+		if (isset($this->data_cache['version']))
+		{
+			return $this->data_cache['version'];
+		}
 		
-		if ($query->num_rows() == 0)
-			return '0';
+		if ( ! $this->conn_id OR ($info = sqlsrv_server_info($this->conn_id)) === FALSE)
+		{
+			return FALSE;
+		}
 
-		$row = $query->row();
-		$this->_reset_select();
-		return $row->numrows;
+		return $this->data_cache['version'] = $info['SQLServerVersion'];
 	}
 
 	// --------------------------------------------------------------------
@@ -355,13 +283,22 @@
 	 *
 	 * Generates a platform-specific query string so that the table names can be fetched
 	 *
-	 * @access	private
-	 * @param	boolean
-	 * @return	string
+	 * @param	bool
+	 * @return	string	$prefix_limit
 	 */
-	function _list_tables($prefix_limit = FALSE)
+	protected function _list_tables($prefix_limit = FALSE)
 	{
-		return "SELECT name FROM sysobjects WHERE type = 'U' ORDER BY name";
+		$sql = 'SELECT '.$this->escape_identifiers('name')
+			.' FROM '.$this->escape_identifiers('sysobjects')
+			.' WHERE '.$this->escape_identifiers('type')." = 'U'";
+
+		if ($prefix_limit === TRUE && $this->dbprefix !== '')
+		{
+			$sql .= ' AND '.$this->escape_identifiers('name')." LIKE '".$this->escape_like_str($this->dbprefix)."%' "
+				.sprintf($this->_escape_like_str, $this->_escape_like_chr);
+		}
+
+		return $sql.' ORDER BY '.$this->escape_identifiers('name');
 	}
 
 	// --------------------------------------------------------------------
@@ -371,210 +308,223 @@
 	 *
 	 * Generates a platform-specific query string so that the column names can be fetched
 	 *
-	 * @access	private
-	 * @param	string	the table name
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _list_columns($table = '')
+	protected function _list_columns($table = '')
 	{
-		return "SELECT * FROM INFORMATION_SCHEMA.Columns WHERE TABLE_NAME = '".$this->_escape_table($table)."'";
+		return 'SELECT COLUMN_NAME
+			FROM INFORMATION_SCHEMA.Columns
+			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Field data query
-	 *
-	 * Generates a platform-specific query so that the column data can be retrieved
+	 * Returns an object with field data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @return	object
+	 * @param	string	$table
+	 * @return	array
 	 */
-	function _field_data($table)
+	public function field_data($table)
 	{
-		return "SELECT TOP 1 * FROM " . $this->_escape_table($table);	
-	}
+		$sql = 'SELECT COLUMN_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, COLUMN_DEFAULT
+			FROM INFORMATION_SCHEMA.Columns
+			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message string
-	 *
-	 * @access	private
-	 * @return	string
-	 */
-	function _error_message()
+		if (($query = $this->query($sql)) === FALSE)
 	{
-		$error = array_shift(sqlsrv_errors());
-		return !empty($error['message']) ? $error['message'] : null;
+			return FALSE;
 	}
+		$query = $query->result_object();
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * The error message number
-	 *
-	 * @access	private
-	 * @return	integer
-	 */
-	function _error_number()
+		$retval = array();
+		for ($i = 0, $c = count($query); $i < $c; $i++)
 	{
-		$error = array_shift(sqlsrv_errors());
-		return isset($error['SQLSTATE']) ? $error['SQLSTATE'] : null;
+			$retval[$i]			= new stdClass();
+			$retval[$i]->name		= $query[$i]->COLUMN_NAME;
+			$retval[$i]->type		= $query[$i]->DATA_TYPE;
+			$retval[$i]->max_length		= ($query[$i]->CHARACTER_MAXIMUM_LENGTH > 0) ? $query[$i]->CHARACTER_MAXIMUM_LENGTH : $query[$i]->NUMERIC_PRECISION;
+			$retval[$i]->default		= $query[$i]->COLUMN_DEFAULT;
+		}
+
+		return $retval;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Escape Table Name
+	 * Error
 	 *
-	 * This function adds backticks if the table name has a period
-	 * in it. Some DBs will get cranky unless periods are escaped
+	 * Returns an array containing code and message of the last
+	 * database error that has occured.
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	string
+	 * @return	array
 	 */
-	function _escape_table($table)
+	public function error()
+	{
+		$error = array('code' => '00000', 'message' => '');
+		$sqlsrv_errors = sqlsrv_errors(SQLSRV_ERR_ERRORS);
+
+		if ( ! is_array($sqlsrv_errors))
 	{
-		return $table;
+			return $error;
 	}	
 
+		$sqlsrv_error = array_shift($sqlsrv_errors);
+		if (isset($sqlsrv_error['SQLSTATE']))
+		{
+			$error['code'] = isset($sqlsrv_error['code']) ? $sqlsrv_error['SQLSTATE'].'/'.$sqlsrv_error['code'] : $sqlsrv_error['SQLSTATE'];
+		}
+		elseif (isset($sqlsrv_error['code']))
+		{
+			$error['code'] = $sqlsrv_error['code'];
+		}
 
-	/**
-	 * Escape the SQL Identifiers
-	 *
-	 * This function escapes column and table names
-	 *
-	 * @access	private
-	 * @param	string
-	 * @return	string
-	 */
-	function _escape_identifiers($item)
+		if (isset($sqlsrv_error['message']))
 	{
-		return $item;
+			$error['message'] = $sqlsrv_error['message'];
+		}
+
+		return $error;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * From Tables
+	 * Update statement
 	 *
-	 * This function implicitly groups FROM tables so there is no confusion
-	 * about operator precedence in harmony with SQL standards
+	 * Generates a platform-specific update string from the supplied data
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @param	string	$table
+	 * @param	array	$values
+	 * @return	string
 	 */
-	function _from_tables($tables)
-	{
-		if ( ! is_array($tables))
+	protected function _update($table, $values)
 		{
-			$tables = array($tables);
-		}
-
-		return implode(', ', $tables);
+		$this->qb_limit = FALSE;
+		$this->qb_orderby = array();
+		return parent::_update($table, $values);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Insert statement
+	 * Truncate statement
 	 *
-	 * Generates a platform-specific insert string from the supplied data
+	 * Generates a platform-specific truncate string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the insert keys
-	 * @param	array	the insert values
+	 * If the database does not support the TRUNCATE statement,
+	 * then this method maps to 'DELETE FROM table'
+	 *
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _insert($table, $keys, $values)
+	protected function _truncate($table)
 	{	
-		return "INSERT INTO ".$this->_escape_table($table)." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
+		return 'TRUNCATE TABLE '.$table;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Update statement
+	 * Delete statement
 	 *
-	 * Generates a platform-specific update string from the supplied data
+	 * Generates a platform-specific delete string from the supplied data
 	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the update data
-	 * @param	array	the where clause
-	 * @param	array	the orderby clause
-	 * @param	array	the limit clause
+	 * @param	string	$table
 	 * @return	string
 	 */
-	function _update($table, $values, $where)
+	protected function _delete($table)
 	{
-		foreach($values as $key => $val)
+		if ($this->qb_limit)
 		{
-			$valstr[] = $key." = ".$val;
+			return 'WITH ci_delete AS (SELECT TOP '.$this->qb_limit.' * FROM '.$table.$this->_compile_wh('qb_where').') DELETE FROM ci_delete';
 		}
 	
-		return "UPDATE ".$this->_escape_table($table)." SET ".implode(', ', $valstr)." WHERE ".implode(" ", $where);
+		return parent::_delete($table);
 	}
 	
 	// --------------------------------------------------------------------
 
 	/**
-	 * Truncate statement
+	 * LIMIT
 	 *
-	 * Generates a platform-specific truncate string from the supplied data
-	 * If the database does not support the truncate() command
-	 * This function maps to "DELETE FROM table"
+	 * Generates a platform-specific LIMIT clause
 	 *
-	 * @access	public
-	 * @param	string	the table name
+	 * @param	string	$sql	SQL Query
 	 * @return	string
 	 */
-	function _truncate($table)
+	protected function _limit($sql)
+	{
+		// As of SQL Server 2012 (11.0.*) OFFSET is supported
+		if (version_compare($this->version(), '11', '>='))
 	{
-		return "TRUNCATE TABLE ".$table;
+			// SQL Server OFFSET-FETCH can be used only with the ORDER BY clause
+			empty($this->qb_orderby) && $sql .= ' ORDER BY 1';
+
+			return $sql.' OFFSET '.(int) $this->qb_offset.' ROWS FETCH NEXT '.$this->qb_limit.' ROWS ONLY';
 	}
 
-	// --------------------------------------------------------------------
+		$limit = $this->qb_offset + $this->qb_limit;
 
-	/**
-	 * Delete statement
-	 *
-	 * Generates a platform-specific delete string from the supplied data
-	 *
-	 * @access	public
-	 * @param	string	the table name
-	 * @param	array	the where clause
-	 * @param	string	the limit clause
-	 * @return	string
-	 */
-	function _delete($table, $where)
+		// An ORDER BY clause is required for ROW_NUMBER() to work
+		if ($this->qb_offset && ! empty($this->qb_orderby))
+		{
+			$orderby = $this->_compile_order_by();
+
+			// We have to strip the ORDER BY clause
+			$sql = trim(substr($sql, 0, strrpos($sql, $orderby)));
+
+			// Get the fields to select from our subquery, so that we can avoid CI_rownum appearing in the actual results
+			if (count($this->qb_select) === 0)
+			{
+				$select = '*'; // Inevitable
+			}
+			else
+			{
+				// Use only field names and their aliases, everything else is out of our scope.
+				$select = array();
+				$field_regexp = ($this->_quoted_identifier)
+					? '("[^\"]+")' : '(\[[^\]]+\])';
+				for ($i = 0, $c = count($this->qb_select); $i < $c; $i++)
 	{
-		return "DELETE FROM ".$this->_escape_table($table)." WHERE ".implode(" ", $where);
+					$select[] = preg_match('/(?:\s|\.)'.$field_regexp.'$/i', $this->qb_select[$i], $m)
+						? $m[1] : $this->qb_select[$i];
+				}
+				$select = implode(', ', $select);
+			}
+
+			return 'SELECT '.$select." FROM (\n\n"
+				.preg_replace('/^(SELECT( DISTINCT)?)/i', '\\1 ROW_NUMBER() OVER('.trim($orderby).') AS '.$this->escape_identifiers('CI_rownum').', ', $sql)
+				."\n\n) ".$this->escape_identifiers('CI_subquery')
+				."\nWHERE ".$this->escape_identifiers('CI_rownum').' BETWEEN '.($this->qb_offset + 1).' AND '.$limit;
+		}
+
+		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$limit.' ', $sql);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Limit string
+	 * Insert batch statement
 	 *
-	 * Generates a platform-specific LIMIT clause
+	 * Generates a platform-specific insert string from the supplied data.
 	 *
-	 * @access	public
-	 * @param	string	the sql query string
-	 * @param	integer	the number of rows to limit the query to
-	 * @param	integer	the offset value
-	 * @return	string
+	 * @param	string	$table	Table name
+	 * @param	array	$keys	INSERT keys
+	 * @param	array	$values	INSERT values
+	 * @return	string|bool
 	 */
-	function _limit($sql, $limit, $offset)
+	protected function _insert_batch($table, $keys, $values)
+	{
+		// Multiple-value inserts are only supported as of SQL Server 2008
+		if (version_compare($this->version(), '10', '>='))
 	{
-		$i = $limit + $offset;
+			return parent::_insert_batch($table, $keys, $values);
+		}
 	
-		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$i.' ', $sql);		
+		return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -582,18 +532,11 @@
 	/**
 	 * Close DB Connection
 	 *
-	 * @access	public
-	 * @param	resource
 	 * @return	void
 	 */
-	function _close($conn_id)
+	protected function _close()
 	{
-		@sqlsrv_close($conn_id);
+		sqlsrv_close($this->conn_id);
 	}
 
 }
-
-
-
-/* End of file mssql_driver.php */
-/* Location: ./system/database/drivers/mssql/mssql_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlsrv/sqlsrv_forge.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_forge.php
--- pos-prod/system/database/drivers/sqlsrv/sqlsrv_forge.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlsrv/sqlsrv_forge.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,245 +1,144 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.3
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLSRV Forge Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlsrv_forge extends CI_DB_forge {
 
 	/**
-	 * Create database
+	 * CREATE TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _create_database($name)
-	{
-		return "CREATE DATABASE ".$name;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_create_table_if	= "IF NOT EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nCREATE TABLE";
 
 	/**
-	 * Drop database
+	 * DROP TABLE IF statement
 	 *
-	 * @access	private
-	 * @param	string	the database name
-	 * @return	bool
+	 * @var	string
 	 */
-	function _drop_database($name)
-	{
-		return "DROP DATABASE ".$name;
-	}
-
-	// --------------------------------------------------------------------
+	protected $_drop_table_if	= "IF EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nDROP TABLE";
 
 	/**
-	 * Drop Table
+	 * UNSIGNED support
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	array
 	 */
-	function _drop_table($table)
-	{
-		return "IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = '"
-			.$table."')) DROP TABLE [dbo].[".$table."]";
-	}
+	protected $_unsigned		= array(
+		'TINYINT'	=> 'SMALLINT',
+		'SMALLINT'	=> 'INT',
+		'INT'		=> 'BIGINT',
+		'REAL'		=> 'FLOAT'
+	);
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Create Table
+	 * ALTER TABLE
 	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @param	array	the fields
-	 * @param	mixed	primary key(s)
-	 * @param	mixed	key(s)
-	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
-	 * @return	bool
+	 * @param	string	$alter_type	ALTER type
+	 * @param	string	$table		Table name
+	 * @param	mixed	$field		Column definition
+	 * @return	string|string[]
 	 */
-	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
+	protected function _alter_table($alter_type, $table, $field)
 	{
-		$sql = '';
-		if ($if_not_exists === TRUE)
+		if (in_array($alter_type, array('ADD', 'DROP'), TRUE))
 		{
-			$sql = "IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = ";
+			return parent::_alter_table($alter_type, $table, $field);
 		}
-		$sql .= $this->db->_escape_identifiers($table).")) CREATE TABLE ".$this->db->_escape_identifiers($table)." (";
-		$current_field_count = 0;
 
-		foreach ($fields as $field=>$attributes)
-		{
-			// Numeric field names aren't allowed in databases, so if the key is
-			// numeric, we know it was assigned by PHP and the developer manually
-			// entered the field information, so we'll simply add it to the list
-			if (is_numeric($field))
+		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table).' ALTER COLUMN ';
+		$sqls = array();
+		for ($i = 0, $c = count($field); $i < $c; $i++)
 			{
-				$sql .= "\n\t$attributes";
+			$sqls[] = $sql.$this->_process_column($field[$i]);
 			}
-			else
-			{
-				$attributes = array_change_key_case($attributes, CASE_UPPER);
-
-				$sql .= "\n\t".$this->db->_protect_identifiers($field);
 
-				$sql .=  ' '.$attributes['TYPE'];
-
-				if (array_key_exists('CONSTRAINT', $attributes))
-				{
-					$sql .= '('.$attributes['CONSTRAINT'].')';
-				}
-
-				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
-				{
-					$sql .= ' UNSIGNED';
-				}
-
-				if (array_key_exists('DEFAULT', $attributes))
-				{
-					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
-				}
-
-				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
-				{
-					$sql .= ' NULL';
-				}
-				else
-				{
-					$sql .= ' NOT NULL';
-				}
-
-				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
-				{
-					$sql .= ' IDENTITY(1,1)';
-				}
-			}
-
-			// don't add a comma on the end of the last field
-			if (++$current_field_count < count($fields))
-			{
-				$sql .= ',';
-			}
-		}
-
-		if (count($primary_keys) > 0)
-		{
-			$primary_keys = $this->db->_protect_identifiers($primary_keys);
-			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
-		}
-
-		if (is_array($keys) && count($keys) > 0)
-		{
-			foreach ($keys as $key)
-			{
-				if (is_array($key))
-				{
-					$key = $this->db->_protect_identifiers($key);
-				}
-				else
-				{
-					$key = array($this->db->_protect_identifiers($key));
-				}
-
-				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
-			}
-		}
-
-		$sql .= "\n)";
-
-		return $sql;
+		return $sqls;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alter table query
+	 * Field attribute TYPE
 	 *
-	 * Generates a platform-specific query so that a table can be altered
-	 * Called by add_column(), drop_column(), and column_alter(),
+	 * Performs a data type mapping between different databases.
 	 *
-	 * @access	private
-	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
-	 * @param	string	the column name
-	 * @param	string	the table name
-	 * @param	string	the column definition
-	 * @param	string	the default value
-	 * @param	boolean	should 'NOT NULL' be added
-	 * @param	string	the field after which we should add the new field
-	 * @return	object
+	 * @param	array	&$attributes
+	 * @return	void
 	 */
-	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
-	{
-		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
-
-		// DROP has everything it needs now.
-		if ($alter_type == 'DROP')
-		{
-			return $sql;
-		}
-
-		$sql .= " $column_definition";
-
-		if ($default_value != '')
-		{
-			$sql .= " DEFAULT \"$default_value\"";
-		}
-
-		if ($null === NULL)
-		{
-			$sql .= ' NULL';
-		}
-		else
+	protected function _attr_type(&$attributes)
 		{
-			$sql .= ' NOT NULL';
-		}
-
-		if ($after_field != '')
+		switch (strtoupper($attributes['TYPE']))
 		{
-			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
+			case 'MEDIUMINT':
+				$attributes['TYPE'] = 'INTEGER';
+				$attributes['UNSIGNED'] = FALSE;
+				return;
+			case 'INTEGER':
+				$attributes['TYPE'] = 'INT';
+				return;
+			default: return;
 		}
-
-		return $sql;
-
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Rename a table
+	 * Field attribute AUTO_INCREMENT
 	 *
-	 * Generates a platform-specific query so that a table can be renamed
-	 *
-	 * @access	private
-	 * @param	string	the old table name
-	 * @param	string	the new table name
-	 * @return	string
+	 * @param	array	&$attributes
+	 * @param	array	&$field
+	 * @return	void
 	 */
-	function _rename_table($table_name, $new_table_name)
+	protected function _attr_auto_increment(&$attributes, &$field)
+	{
+		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
 	{
-		return 'EXEC sp_rename '.$this->db->_protect_identifiers($table_name).", ".$this->db->_protect_identifiers($new_table_name);
+			$field['auto_increment'] = ' IDENTITY(1,1)';
 	}
-
 }
 
-/* End of file sqlsrv_forge.php */
-/* Location: ./system/database/drivers/sqlsrv/sqlsrv_forge.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlsrv/sqlsrv_result.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_result.php
--- pos-prod/system/database/drivers/sqlsrv/sqlsrv_result.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlsrv/sqlsrv_result.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.3
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLSRV Result Class
@@ -21,20 +43,51 @@
  * This class extends the parent result class: CI_DB_result
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlsrv_result extends CI_DB_result {
 
 	/**
+	 * Scrollable flag
+	 *
+	 * @var	mixed
+	 */
+	public $scrollable;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @param	object	$driver_object
+	 * @return	void
+	 */
+	public function __construct(&$driver_object)
+	{
+		parent::__construct($driver_object);
+
+		$this->scrollable = $driver_object->scrollable;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Number of rows in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_rows()
+	public function num_rows()
+	{
+		// sqlsrv_num_rows() doesn't work with the FORWARD and DYNAMIC cursors (FALSE is the same as FORWARD)
+		if ( ! in_array($this->scrollable, array(FALSE, SQLSRV_CURSOR_FORWARD, SQLSRV_CURSOR_DYNAMIC), TRUE))
 	{
-		return @sqlsrv_num_rows($this->result_id);
+			return parent::num_rows();
+		}
+
+		return is_int($this->num_rows)
+			? $this->num_rows
+			: $this->num_rows = sqlsrv_num_rows($this->result_id);
 	}
 
 	// --------------------------------------------------------------------
@@ -42,10 +95,9 @@
 	/**
 	 * Number of fields in the result set
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function num_fields()
+	public function num_fields()
 	{
 		return @sqlsrv_num_fields($this->result_id);
 	}
@@ -57,10 +109,9 @@
 	 *
 	 * Generates an array of column names
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function list_fields()
+	public function list_fields()
 	{
 		$field_names = array();
 		foreach(sqlsrv_field_metadata($this->result_id) as $offset => $field)
@@ -78,22 +129,17 @@
 	 *
 	 * Generates an array of objects containing field meta-data
 	 *
-	 * @access	public
 	 * @return	array
 	 */
-	function field_data()
+	public function field_data()
 	{
 		$retval = array();
-		foreach(sqlsrv_field_metadata($this->result_id) as $offset => $field)
+		foreach (sqlsrv_field_metadata($this->result_id) as $i => $field)
 		{
-			$F 				= new stdClass();
-			$F->name 		= $field['Name'];
-			$F->type 		= $field['Type'];
-			$F->max_length	= $field['Size'];
-			$F->primary_key = 0;
-			$F->default		= '';
-			
-			$retval[] = $F;
+			$retval[$i]		= new stdClass();
+			$retval[$i]->name	= $field['Name'];
+			$retval[$i]->type	= $field['Type'];
+			$retval[$i]->max_length	= $field['Size'];
 		}
 		
 		return $retval;
@@ -104,9 +150,9 @@
 	/**
 	 * Free the result
 	 *
-	 * @return	null
+	 * @return	void
 	 */
-	function free_result()
+	public function free_result()
 	{
 		if (is_resource($this->result_id))
 		{
@@ -118,31 +164,13 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Data Seek
-	 *
-	 * Moves the internal pointer to the desired offset.  We call
-	 * this internally before fetching results to make sure the
-	 * result set starts at zero
-	 *
-	 * @access	private
-	 * @return	array
-	 */
-	function _data_seek($n = 0)
-	{
-		// Not implemented
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
 	 * Result - associative array
 	 *
 	 * Returns the result set as an array
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _fetch_assoc()
+	protected function _fetch_assoc()
 	{
 		return sqlsrv_fetch_array($this->result_id, SQLSRV_FETCH_ASSOC);
 	}
@@ -154,16 +182,12 @@
 	 *
 	 * Returns the result set as an object
 	 *
-	 * @access	private
+	 * @param	string	$class_name
 	 * @return	object
 	 */
-	function _fetch_object()
+	protected function _fetch_object($class_name = 'stdClass')
 	{
-		return sqlsrv_fetch_object($this->result_id);
+		return sqlsrv_fetch_object($this->result_id, $class_name);
 	}
 
 }
-
-
-/* End of file mssql_result.php */
-/* Location: ./system/database/drivers/mssql/mssql_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/drivers/sqlsrv/sqlsrv_utility.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_utility.php
--- pos-prod/system/database/drivers/sqlsrv/sqlsrv_utility.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/drivers/sqlsrv/sqlsrv_utility.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,88 +1,77 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.3
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * SQLSRV Utility Class
  *
  * @category	Database
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/database/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/database/
  */
 class CI_DB_sqlsrv_utility extends CI_DB_utility {
 
 	/**
-	 * List databases
+	 * List databases statement
 	 *
-	 * @access	private
-	 * @return	bool
+	 * @var	string
 	 */
-	function _list_databases()
-	{
-		return "EXEC sp_helpdb"; // Can also be: EXEC sp_databases
-	}
-
-	// --------------------------------------------------------------------
+	protected $_list_databases	= 'EXEC sp_helpdb'; // Can also be: EXEC sp_databases
 
 	/**
-	 * Optimize table query
+	 * OPTIMIZE TABLE statement
 	 *
-	 * Generates a platform-specific query so that a table can be optimized
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
+	 * @var	string
 	 */
-	function _optimize_table($table)
-	{
-		return FALSE; // Is this supported in MS SQL?
-	}
+	protected $_optimize_table	= 'ALTER INDEX all ON %s REORGANIZE';
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Repair table query
+	 * Export
 	 *
-	 * Generates a platform-specific query so that a table can be repaired
-	 *
-	 * @access	private
-	 * @param	string	the table name
-	 * @return	object
-	 */
-	function _repair_table($table)
-	{
-		return FALSE; // Is this supported in MS SQL?
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * MSSQL Export
-	 *
-	 * @access	private
-	 * @param	array	Preferences
-	 * @return	mixed
+	 * @param	array	$params	Preferences
+	 * @return	bool
 	 */
-	function _backup($params = array())
+	protected function _backup($params = array())
 	{
 		// Currently unsupported
-		return $this->db->display_error('db_unsuported_feature');
+		return $this->db->display_error('db_unsupported_feature');
 	}
 
 }
-
-/* End of file mssql_utility.php */
-/* Location: ./system/database/drivers/mssql/mssql_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/database/index.html opensourcepos/system/database/index.html
--- pos-prod/system/database/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/database/index.html	2016-05-23 15:32:31.940838868 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/fonts/index.html opensourcepos/system/fonts/index.html
--- pos-prod/system/fonts/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/fonts/index.html	2016-05-23 15:32:31.940838868 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/array_helper.php opensourcepos/system/helpers/array_helper.php
--- pos-prod/system/helpers/array_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/array_helper.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Array Helpers
@@ -21,99 +43,73 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/array_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/array_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('element'))
+{
 /**
  * Element
  *
  * Lets you determine whether an array index is set and whether it has a value.
- * If the element is empty it returns FALSE (or whatever you specify as the default value.)
+	 * If the element is empty it returns NULL (or whatever you specify as the default value.)
  *
- * @access	public
  * @param	string
  * @param	array
  * @param	mixed
  * @return	mixed	depends on what the array contains
  */
-if ( ! function_exists('element'))
+	function element($item, array $array, $default = NULL)
 {
-	function element($item, $array, $default = FALSE)
-	{
-		if ( ! isset($array[$item]) OR $array[$item] == "")
-		{
-			return $default;
-		}
-
-		return $array[$item];
+		return array_key_exists($item, $array) ? $array[$item] : $default;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('random_element'))
+{
 /**
  * Random Element - Takes an array as input and returns a random element
  *
- * @access	public
  * @param	array
  * @return	mixed	depends on what the array contains
  */
-if ( ! function_exists('random_element'))
-{
 	function random_element($array)
 	{
-		if ( ! is_array($array))
-		{
-			return $array;
-		}
-
-		return $array[array_rand($array)];
+		return is_array($array) ? $array[array_rand($array)] : $array;
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('elements'))
+{
 /**
  * Elements
  *
  * Returns only the array items specified.  Will return a default value if
  * it is not set.
  *
- * @access	public
  * @param	array
  * @param	array
  * @param	mixed
  * @return	mixed	depends on what the array contains
  */
-if ( ! function_exists('elements'))
-{
-	function elements($items, $array, $default = FALSE)
+	function elements($items, array $array, $default = NULL)
 	{
 		$return = array();
 		
-		if ( ! is_array($items))
-		{
-			$items = array($items);
-		}
+		is_array($items) OR $items = array($items);
 		
 		foreach ($items as $item)
 		{
-			if (isset($array[$item]))
-			{
-				$return[$item] = $array[$item];
-			}
-			else
-			{
-				$return[$item] = $default;
-			}
+			$return[$item] = array_key_exists($item, $array) ? $array[$item] : $default;
 		}
 
 		return $return;
 	}
 }
-
-/* End of file array_helper.php */
-/* Location: ./system/helpers/array_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/captcha_helper.php opensourcepos/system/helpers/captcha_helper.php
--- pos-prod/system/helpers/captcha_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/captcha_helper.php	2016-05-23 15:32:31.940838868 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter CAPTCHA Helper
@@ -21,59 +43,60 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/xml_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/captcha_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('create_captcha'))
+{
 /**
  * Create CAPTCHA
  *
- * @access	public
- * @param	array	array of data for the CAPTCHA
- * @param	string	path to create the image in
- * @param	string	URL to the CAPTCHA image folder
- * @param	string	server path to font
+	 * @param	array	$data		data for the CAPTCHA
+	 * @param	string	$img_path	path to create the image in
+	 * @param	string	$img_url	URL to the CAPTCHA image folder
+	 * @param	string	$font_path	server path to font
  * @return	string
  */
-if ( ! function_exists('create_captcha'))
-{
 	function create_captcha($data = '', $img_path = '', $img_url = '', $font_path = '')
 	{
-		$defaults = array('word' => '', 'img_path' => '', 'img_url' => '', 'img_width' => '150', 'img_height' => '30', 'font_path' => '', 'expiration' => 7200);
+		$defaults = array(
+			'word'		=> '',
+			'img_path'	=> '',
+			'img_url'	=> '',
+			'img_width'	=> '150',
+			'img_height'	=> '30',
+			'font_path'	=> '',
+			'expiration'	=> 7200,
+			'word_length'	=> 8,
+			'font_size'	=> 16,
+			'img_id'	=> '',
+			'pool'		=> '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
+			'colors'	=> array(
+				'background'	=> array(255,255,255),
+				'border'	=> array(153,102,102),
+				'text'		=> array(204,153,153),
+				'grid'		=> array(255,182,182)
+			)
+		);
 
 		foreach ($defaults as $key => $val)
 		{
-			if ( ! is_array($data))
-			{
-				if ( ! isset($$key) OR $$key == '')
+			if ( ! is_array($data) && empty($$key))
 				{
 					$$key = $val;
 				}
-			}
 			else
 			{
-				$$key = ( ! isset($data[$key])) ? $val : $data[$key];
+				$$key = isset($data[$key]) ? $data[$key] : $val;
 			}
 		}
 
-		if ($img_path == '' OR $img_url == '')
-		{
-			return FALSE;
-		}
-
-		if ( ! @is_dir($img_path))
-		{
-			return FALSE;
-		}
-
-		if ( ! is_writable($img_path))
-		{
-			return FALSE;
-		}
-
-		if ( ! extension_loaded('gd'))
+		if ($img_path === '' OR $img_url === ''
+			OR ! is_dir($img_path) OR ! is_really_writable($img_path)
+			OR ! extension_loaded('gd'))
 		{
 			return FALSE;
 		}
@@ -82,23 +105,16 @@
 		// Remove old images
 		// -----------------------------------
 
-		list($usec, $sec) = explode(" ", microtime());
-		$now = ((float)$usec + (float)$sec);
+		$now = microtime(TRUE);
 
 		$current_dir = @opendir($img_path);
-
 		while ($filename = @readdir($current_dir))
 		{
-			if ($filename != "." and $filename != ".." and $filename != "index.html")
-			{
-				$name = str_replace(".jpg", "", $filename);
-
-				if (($name + $expiration) < $now)
+			if (substr($filename, -4) === '.jpg' && (str_replace('.jpg', '', $filename) + $expiration) < $now)
 				{
 					@unlink($img_path.$filename);
 				}
 			}
-		}
 
 		@closedir($current_dir);
 
@@ -106,57 +122,135 @@
 		// Do we have a "word" yet?
 		// -----------------------------------
 
-	   if ($word == '')
+		if (empty($word))
 	   {
-			$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
+			$word = '';
+			$pool_length = strlen($pool);
+			$rand_max = $pool_length - 1;
 
-			$str = '';
-			for ($i = 0; $i < 8; $i++)
+			// PHP7 or a suitable polyfill
+			if (function_exists('random_int'))
 			{
-				$str .= substr($pool, mt_rand(0, strlen($pool) -1), 1);
+				try
+				{
+					for ($i = 0; $i < $word_length; $i++)
+					{
+						$word .= $pool[random_int(0, $rand_max)];
+					}
+				}
+				catch (Exception $e)
+				{
+					// This means fallback to the next possible
+					// alternative to random_int()
+					$word = '';
+				}
+			}
 			}
 
-			$word = $str;
+		if (empty($word))
+		{
+			// Nobody will have a larger character pool than
+			// 256 characters, but let's handle it just in case ...
+			//
+			// No, I do not care that the fallback to mt_rand() can
+			// handle it; if you trigger this, you're very obviously
+			// trying to break it. -- Narf
+			if ($pool_length > 256)
+			{
+				return FALSE;
 	   }
 
-		// -----------------------------------
-		// Determine angle and position
-		// -----------------------------------
+			// We'll try using the operating system's PRNG first,
+			// which we can access through CI_Security::get_random_bytes()
+			$security = get_instance()->security;
 
-		$length	= strlen($word);
-		$angle	= ($length >= 6) ? rand(-($length-6), ($length-6)) : 0;
-		$x_axis	= rand(6, (360/$length)-16);
-		$y_axis = ($angle >= 0 ) ? rand($img_height, $img_width) : rand(6, $img_height);
+			// To avoid numerous get_random_bytes() calls, we'll
+			// just try fetching as much bytes as we need at once.
+			if (($bytes = $security->get_random_bytes($pool_length)) !== FALSE)
+			{
+				$byte_index = $word_index = 0;
+				while ($word_index < $word_length)
+				{
+					// Do we have more random data to use?
+					// It could be exhausted by previous iterations
+					// ignoring bytes higher than $rand_max.
+					if ($byte_index === $pool_length)
+					{
+						// No failures should be possible if the
+						// first get_random_bytes() call didn't
+						// return FALSE, but still ...
+						for ($i = 0; $i < 5; $i++)
+						{
+							if (($bytes = $security->get_random_bytes($pool_length)) === FALSE)
+							{
+								continue;
+							}
 
-		// -----------------------------------
-		// Create image
-		// -----------------------------------
+							$byte_index = 0;
+							break;
+						}
 
-		// PHP.net recommends imagecreatetruecolor(), but it isn't always available
-		if (function_exists('imagecreatetruecolor'))
+						if ($bytes === FALSE)
 		{
-			$im = imagecreatetruecolor($img_width, $img_height);
+							// Sadly, this means fallback to mt_rand()
+							$word = '';
+							break;
 		}
-		else
+					}
+
+					list(, $rand_index) = unpack('C', $bytes[$byte_index++]);
+					if ($rand_index > $rand_max)
 		{
-			$im = imagecreate($img_width, $img_height);
+						continue;
+					}
+
+					$word .= $pool[$rand_index];
+					$word_index++;
+				}
+			}
+		}
+
+		if (empty($word))
+		{
+			for ($i = 0; $i < $word_length; $i++)
+			{
+				$word .= $pool[mt_rand(0, $rand_max)];
+			}
+		}
+		elseif ( ! is_string($word))
+		{
+			$word = (string) $word;
 		}
 
 		// -----------------------------------
-		//  Assign colors
+		// Determine angle and position
 		// -----------------------------------
+		$length	= strlen($word);
+		$angle	= ($length >= 6) ? mt_rand(-($length-6), ($length-6)) : 0;
+		$x_axis	= mt_rand(6, (360/$length)-16);
+		$y_axis = ($angle >= 0) ? mt_rand($img_height, $img_width) : mt_rand(6, $img_height);
 
-		$bg_color		= imagecolorallocate ($im, 255, 255, 255);
-		$border_color	= imagecolorallocate ($im, 153, 102, 102);
-		$text_color		= imagecolorallocate ($im, 204, 153, 153);
-		$grid_color		= imagecolorallocate($im, 255, 182, 182);
-		$shadow_color	= imagecolorallocate($im, 255, 240, 240);
+		// Create image
+		// PHP.net recommends imagecreatetruecolor(), but it isn't always available
+		$im = function_exists('imagecreatetruecolor')
+			? imagecreatetruecolor($img_width, $img_height)
+			: imagecreate($img_width, $img_height);
 
 		// -----------------------------------
-		//  Create the rectangle
-		// -----------------------------------
+		//  Assign colors
+		// ----------------------------------
+
+		is_array($colors) OR $colors = $defaults['colors'];
 
-		ImageFilledRectangle($im, 0, 0, $img_width, $img_height, $bg_color);
+		foreach (array_keys($defaults['colors']) as $key)
+		{
+			// Check for a possible missing value
+			is_array($colors[$key]) OR $colors[$key] = $defaults['colors'][$key];
+			$colors[$key] = imagecolorallocate($im, $colors[$key][0], $colors[$key][1], $colors[$key][2]);
+		}
+
+		// Create the rectangle
+		ImageFilledRectangle($im, 0, 0, $img_width, $img_height, $colors['background']);
 
 		// -----------------------------------
 		//  Create the spiral pattern
@@ -168,79 +261,80 @@
 		$circles	= 20;
 		$points		= 32;
 
-		for ($i = 0; $i < ($circles * $points) - 1; $i++)
+		for ($i = 0, $cp = ($circles * $points) - 1; $i < $cp; $i++)
 		{
-			$theta = $theta + $thetac;
+			$theta += $thetac;
 			$rad = $radius * ($i / $points );
 			$x = ($rad * cos($theta)) + $x_axis;
 			$y = ($rad * sin($theta)) + $y_axis;
-			$theta = $theta + $thetac;
+			$theta += $thetac;
 			$rad1 = $radius * (($i + 1) / $points);
 			$x1 = ($rad1 * cos($theta)) + $x_axis;
 			$y1 = ($rad1 * sin($theta )) + $y_axis;
-			imageline($im, $x, $y, $x1, $y1, $grid_color);
-			$theta = $theta - $thetac;
+			imageline($im, $x, $y, $x1, $y1, $colors['grid']);
+			$theta -= $thetac;
 		}
 
 		// -----------------------------------
 		//  Write the text
 		// -----------------------------------
 
-		$use_font = ($font_path != '' AND file_exists($font_path) AND function_exists('imagettftext')) ? TRUE : FALSE;
-
-		if ($use_font == FALSE)
+		$use_font = ($font_path !== '' && file_exists($font_path) && function_exists('imagettftext'));
+		if ($use_font === FALSE)
 		{
-			$font_size = 5;
-			$x = rand(0, $img_width/($length/3));
+			($font_size > 5) && $font_size = 5;
+			$x = mt_rand(0, $img_width / ($length / 3));
 			$y = 0;
 		}
 		else
 		{
-			$font_size	= 16;
-			$x = rand(0, $img_width/($length/1.5));
+			($font_size > 30) && $font_size = 30;
+			$x = mt_rand(0, $img_width / ($length / 1.5));
 			$y = $font_size+2;
 		}
 
-		for ($i = 0; $i < strlen($word); $i++)
+		for ($i = 0; $i < $length; $i++)
 		{
-			if ($use_font == FALSE)
+			if ($use_font === FALSE)
 			{
-				$y = rand(0 , $img_height/2);
-				imagestring($im, $font_size, $x, $y, substr($word, $i, 1), $text_color);
+				$y = mt_rand(0 , $img_height / 2);
+				imagestring($im, $font_size, $x, $y, $word[$i], $colors['text']);
 				$x += ($font_size*2);
 			}
 			else
 			{
-				$y = rand($img_height/2, $img_height-3);
-				imagettftext($im, $font_size, $angle, $x, $y, $text_color, $font_path, substr($word, $i, 1));
+				$y = mt_rand($img_height / 2, $img_height - 3);
+				imagettftext($im, $font_size, $angle, $x, $y, $colors['text'], $font_path, $word[$i]);
 				$x += $font_size;
 			}
 		}
 
-
-		// -----------------------------------
 		//  Create the border
-		// -----------------------------------
-
-		imagerectangle($im, 0, 0, $img_width-1, $img_height-1, $border_color);
+		imagerectangle($im, 0, 0, $img_width - 1, $img_height - 1, $colors['border']);
 
 		// -----------------------------------
 		//  Generate the image
 		// -----------------------------------
+		$img_url = rtrim($img_url, '/').'/';
 
-		$img_name = $now.'.jpg';
-
-		ImageJPEG($im, $img_path.$img_name);
-
-		$img = "<img src=\"$img_url$img_name\" width=\"$img_width\" height=\"$img_height\" style=\"border:0;\" alt=\" \" />";
+		if (function_exists('imagejpeg'))
+		{
+			$img_filename = $now.'.jpg';
+			imagejpeg($im, $img_path.$img_filename);
+		}
+		elseif (function_exists('imagepng'))
+		{
+			$img_filename = $now.'.png';
+			imagepng($im, $img_path.$img_filename);
+		}
+		else
+		{
+			return FALSE;
+		}
 
+		$img = '<img '.($img_id === '' ? '' : 'id="'.$img_id.'"').' src="'.$img_url.$img_filename.'" style="width: '.$img_width.'; height: '.$img_height .'; border: 0;" alt=" " />';
 		ImageDestroy($im);
 
-		return array('word' => $word, 'time' => $now, 'image' => $img);
+		return array('word' => $word, 'time' => $now, 'image' => $img, 'filename' => $img_filename);
 	}
 }
-
-// ------------------------------------------------------------------------
-
-/* End of file captcha_helper.php */
-/* Location: ./system/heleprs/captcha_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/cookie_helper.php opensourcepos/system/helpers/cookie_helper.php
--- pos-prod/system/helpers/cookie_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/cookie_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Cookie Helpers
@@ -21,66 +43,60 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/cookie_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/cookie_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_cookie'))
+{
 /**
  * Set cookie
  *
- * Accepts six parameter, or you can submit an associative
+	 * Accepts seven parameters, or you can submit an associative
  * array in the first parameter containing all the values.
  *
- * @access	public
  * @param	mixed
  * @param	string	the value of the cookie
  * @param	string	the number of seconds until expiration
  * @param	string	the cookie domain.  Usually:  .yourdomain.com
  * @param	string	the cookie path
  * @param	string	the cookie prefix
+	 * @param	bool	true makes the cookie secure
+	 * @param	bool	true makes the cookie accessible via http(s) only (no javascript)
  * @return	void
  */
-if ( ! function_exists('set_cookie'))
-{
-	function set_cookie($name = '', $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE)
+	function set_cookie($name, $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE, $httponly = FALSE)
 	{
 		// Set the config file options
-		$CI =& get_instance();
-		$CI->input->set_cookie($name, $value, $expire, $domain, $path, $prefix, $secure);
+		get_instance()->input->set_cookie($name, $value, $expire, $domain, $path, $prefix, $secure, $httponly);
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('get_cookie'))
+{
 /**
  * Fetch an item from the COOKIE array
  *
- * @access	public
  * @param	string
  * @param	bool
  * @return	mixed
  */
-if ( ! function_exists('get_cookie'))
+	function get_cookie($index, $xss_clean = NULL)
 {
-	function get_cookie($index = '', $xss_clean = FALSE)
-	{
-		$CI =& get_instance();
-
-		$prefix = '';
-
-		if ( ! isset($_COOKIE[$index]) && config_item('cookie_prefix') != '')
-		{
-			$prefix = config_item('cookie_prefix');
-		}
-
-		return $CI->input->cookie($prefix.$index, $xss_clean);
+		is_bool($xss_clean) OR $xss_clean = (config_item('global_xss_filtering') === TRUE);
+		$prefix = isset($_COOKIE[$index]) ? '' : config_item('cookie_prefix');
+		return get_instance()->input->cookie($prefix.$index, $xss_clean);
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('delete_cookie'))
+{
 /**
  * Delete a COOKIE
  *
@@ -90,14 +106,8 @@
  * @param	string	the cookie prefix
  * @return	void
  */
-if ( ! function_exists('delete_cookie'))
-{
-	function delete_cookie($name = '', $domain = '', $path = '/', $prefix = '')
+	function delete_cookie($name, $domain = '', $path = '/', $prefix = '')
 	{
 		set_cookie($name, '', '', $domain, $path, $prefix);
 	}
 }
-
-
-/* End of file cookie_helper.php */
-/* Location: ./system/helpers/cookie_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/date_helper.php opensourcepos/system/helpers/date_helper.php
--- pos-prod/system/helpers/date_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/date_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Date Helpers
@@ -21,48 +43,46 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/date_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/date_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('now'))
+{
 /**
  * Get "now" time
  *
- * Returns time() or its GMT equivalent based on the config file preference
+	 * Returns time() based on the timezone parameter or on the
+	 * "time_reference" setting
  *
- * @access	public
- * @return	integer
+	 * @param	string
+	 * @return	int
  */
-if ( ! function_exists('now'))
-{
-	function now()
-	{
-		$CI =& get_instance();
-
-		if (strtolower($CI->config->item('time_reference')) == 'gmt')
+	function now($timezone = NULL)
 		{
-			$now = time();
-			$system_time = mktime(gmdate("H", $now), gmdate("i", $now), gmdate("s", $now), gmdate("m", $now), gmdate("d", $now), gmdate("Y", $now));
-
-			if (strlen($system_time) < 10)
+		if (empty($timezone))
 			{
-				$system_time = time();
-				log_message('error', 'The Date class could not set a proper GMT timestamp so the local time() value was used.');
+			$timezone = config_item('time_reference');
 			}
 
-			return $system_time;
-		}
-		else
+		if ($timezone === 'local' OR $timezone === date_default_timezone_get())
 		{
 			return time();
 		}
+
+		$datetime = new DateTime('now', new DateTimeZone($timezone));
+		sscanf($datetime->format('j-n-Y G:i:s'), '%d-%d-%d %d:%d:%d', $day, $month, $year, $hour, $minute, $second);
+
+		return mktime($hour, $minute, $second, $month, $day, $year);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('mdate'))
+{
 /**
  * Convert MySQL Style Datecodes
  *
@@ -75,130 +95,125 @@
  * have to worry about escaping your text letters that
  * match the date codes.
  *
- * @access	public
  * @param	string
- * @param	integer
- * @return	integer
+	 * @param	int
+	 * @return	int
  */
-if ( ! function_exists('mdate'))
-{
 	function mdate($datestr = '', $time = '')
 	{
-		if ($datestr == '')
+		if ($datestr === '')
+		{
 			return '';
-
-		if ($time == '')
+		}
+		elseif (empty($time))
+		{
 			$time = now();
+		}
+
+		$datestr = str_replace(
+			'%\\',
+			'',
+			preg_replace('/([a-z]+?){1}/i', '\\\\\\1', $datestr)
+		);
 
-		$datestr = str_replace('%\\', '', preg_replace("/([a-z]+?){1}/i", "\\\\\\1", $datestr));
 		return date($datestr, $time);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('standard_date'))
+{
 /**
  * Standard Date
  *
  * Returns a date formatted according to the submitted standard.
  *
- * @access	public
- * @param	string	the chosen format
- * @param	integer	Unix timestamp
+	 * As of PHP 5.2, the DateTime extension provides constants that
+	 * serve for the exact same purpose and are used with date().
+	 *
+	 * @todo	Remove in version 3.1+.
+	 * @deprecated	3.0.0	Use PHP's native date() instead.
+	 * @link	http://www.php.net/manual/en/class.datetime.php#datetime.constants.types
+	 *
+	 * @example	date(DATE_RFC822, now()); // default
+	 * @example	date(DATE_W3C, $time); // a different format and time
+	 *
+	 * @param	string	$fmt = 'DATE_RFC822'	the chosen format
+	 * @param	int	$time = NULL		Unix timestamp
  * @return	string
  */
-if ( ! function_exists('standard_date'))
+	function standard_date($fmt = 'DATE_RFC822', $time = NULL)
 {
-	function standard_date($fmt = 'DATE_RFC822', $time = '')
+		if (empty($time))
 	{
-		$formats = array(
-						'DATE_ATOM'		=>	'%Y-%m-%dT%H:%i:%s%Q',
-						'DATE_COOKIE'	=>	'%l, %d-%M-%y %H:%i:%s UTC',
-						'DATE_ISO8601'	=>	'%Y-%m-%dT%H:%i:%s%Q',
-						'DATE_RFC822'	=>	'%D, %d %M %y %H:%i:%s %O',
-						'DATE_RFC850'	=>	'%l, %d-%M-%y %H:%i:%s UTC',
-						'DATE_RFC1036'	=>	'%D, %d %M %y %H:%i:%s %O',
-						'DATE_RFC1123'	=>	'%D, %d %M %Y %H:%i:%s %O',
-						'DATE_RSS'		=>	'%D, %d %M %Y %H:%i:%s %O',
-						'DATE_W3C'		=>	'%Y-%m-%dT%H:%i:%s%Q'
-						);
+			$time = now();
+		}
 
-		if ( ! isset($formats[$fmt]))
+		// Procedural style pre-defined constants from the DateTime extension
+		if (strpos($fmt, 'DATE_') !== 0 OR defined($fmt) === FALSE)
 		{
 			return FALSE;
 		}
 
-		return mdate($formats[$fmt], $time);
+		return date(constant($fmt), $time);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('timespan'))
+{
 /**
  * Timespan
  *
  * Returns a span of seconds in this format:
  *	10 days 14 hours 36 minutes 47 seconds
  *
- * @access	public
- * @param	integer	a number of seconds
- * @param	integer	Unix timestamp
- * @return	integer
+	 * @param	int	a number of seconds
+	 * @param	int	Unix timestamp
+	 * @param	int	a number of display units
+	 * @return	string
  */
-if ( ! function_exists('timespan'))
-{
-	function timespan($seconds = 1, $time = '')
+	function timespan($seconds = 1, $time = '', $units = 7)
 	{
 		$CI =& get_instance();
 		$CI->lang->load('date');
 
-		if ( ! is_numeric($seconds))
-		{
-			$seconds = 1;
-		}
+		is_numeric($seconds) OR $seconds = 1;
+		is_numeric($time) OR $time = time();
+		is_numeric($units) OR $units = 7;
 
-		if ( ! is_numeric($time))
-		{
-			$time = time();
-		}
+		$seconds = ($time <= $seconds) ? 1 : $time - $seconds;
 
-		if ($time <= $seconds)
-		{
-			$seconds = 1;
-		}
-		else
-		{
-			$seconds = $time - $seconds;
-		}
-
-		$str = '';
-		$years = floor($seconds / 31536000);
+		$str = array();
+		$years = floor($seconds / 31557600);
 
 		if ($years > 0)
 		{
-			$str .= $years.' '.$CI->lang->line((($years	> 1) ? 'date_years' : 'date_year')).', ';
+			$str[] = $years.' '.$CI->lang->line($years > 1 ? 'date_years' : 'date_year');
 		}
 
-		$seconds -= $years * 31536000;
-		$months = floor($seconds / 2628000);
+		$seconds -= $years * 31557600;
+		$months = floor($seconds / 2629743);
 
-		if ($years > 0 OR $months > 0)
+		if (count($str) < $units && ($years > 0 OR $months > 0))
 		{
 			if ($months > 0)
 			{
-				$str .= $months.' '.$CI->lang->line((($months	> 1) ? 'date_months' : 'date_month')).', ';
+				$str[] = $months.' '.$CI->lang->line($months > 1 ? 'date_months' : 'date_month');
 			}
 
-			$seconds -= $months * 2628000;
+			$seconds -= $months * 2629743;
 		}
 
 		$weeks = floor($seconds / 604800);
 
-		if ($years > 0 OR $months > 0 OR $weeks > 0)
+		if (count($str) < $units && ($years > 0 OR $months > 0 OR $weeks > 0))
 		{
 			if ($weeks > 0)
 			{
-				$str .= $weeks.' '.$CI->lang->line((($weeks	> 1) ? 'date_weeks' : 'date_week')).', ';
+				$str[] = $weeks.' '.$CI->lang->line($weeks > 1 ? 'date_weeks' : 'date_week');
 			}
 
 			$seconds -= $weeks * 604800;
@@ -206,11 +221,11 @@
 
 		$days = floor($seconds / 86400);
 
-		if ($months > 0 OR $weeks > 0 OR $days > 0)
+		if (count($str) < $units && ($months > 0 OR $weeks > 0 OR $days > 0))
 		{
 			if ($days > 0)
 			{
-				$str .= $days.' '.$CI->lang->line((($days	> 1) ? 'date_days' : 'date_day')).', ';
+				$str[] = $days.' '.$CI->lang->line($days > 1 ? 'date_days' : 'date_day');
 			}
 
 			$seconds -= $days * 86400;
@@ -218,11 +233,11 @@
 
 		$hours = floor($seconds / 3600);
 
-		if ($days > 0 OR $hours > 0)
+		if (count($str) < $units && ($days > 0 OR $hours > 0))
 		{
 			if ($hours > 0)
 			{
-				$str .= $hours.' '.$CI->lang->line((($hours	> 1) ? 'date_hours' : 'date_hour')).', ';
+				$str[] = $hours.' '.$CI->lang->line($hours > 1 ? 'date_hours' : 'date_hour');
 			}
 
 			$seconds -= $hours * 3600;
@@ -230,55 +245,63 @@
 
 		$minutes = floor($seconds / 60);
 
-		if ($days > 0 OR $hours > 0 OR $minutes > 0)
+		if (count($str) < $units && ($days > 0 OR $hours > 0 OR $minutes > 0))
 		{
 			if ($minutes > 0)
 			{
-				$str .= $minutes.' '.$CI->lang->line((($minutes	> 1) ? 'date_minutes' : 'date_minute')).', ';
+				$str[] = $minutes.' '.$CI->lang->line($minutes > 1 ? 'date_minutes' : 'date_minute');
 			}
 
 			$seconds -= $minutes * 60;
 		}
 
-		if ($str == '')
+		if (count($str) === 0)
 		{
-			$str .= $seconds.' '.$CI->lang->line((($seconds	> 1) ? 'date_seconds' : 'date_second')).', ';
+			$str[] = $seconds.' '.$CI->lang->line($seconds > 1 ? 'date_seconds' : 'date_second');
 		}
 
-		return substr(trim($str), 0, -1);
+		return implode(', ', $str);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('days_in_month'))
+{
 /**
  * Number of days in a month
  *
  * Takes a month/year as input and returns the number of days
  * for the given month/year. Takes leap years into consideration.
  *
- * @access	public
- * @param	integer a numeric month
- * @param	integer	a numeric year
- * @return	integer
+	 * @param	int	a numeric month
+	 * @param	int	a numeric year
+	 * @return	int
  */
-if ( ! function_exists('days_in_month'))
-{
 	function days_in_month($month = 0, $year = '')
 	{
 		if ($month < 1 OR $month > 12)
 		{
 			return 0;
 		}
-
-		if ( ! is_numeric($year) OR strlen($year) != 4)
+		elseif ( ! is_numeric($year) OR strlen($year) !== 4)
 		{
 			$year = date('Y');
 		}
 
+		if (defined('CAL_GREGORIAN'))
+		{
+			return cal_days_in_month(CAL_GREGORIAN, $month, $year);
+		}
+
+		if ($year >= 1970)
+		{
+			return (int) date('t', mktime(12, 0, 0, $month, 1, $year));
+		}
+
 		if ($month == 2)
 		{
-			if ($year % 400 == 0 OR ($year % 4 == 0 AND $year % 100 != 0))
+			if ($year % 400 === 0 OR ($year % 4 === 0 && $year % 100 !== 0))
 			{
 				return 29;
 			}
@@ -291,26 +314,36 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('local_to_gmt'))
+{
 /**
  * Converts a local Unix timestamp to GMT
  *
- * @access	public
- * @param	integer Unix timestamp
- * @return	integer
+	 * @param	int	Unix timestamp
+	 * @return	int
  */
-if ( ! function_exists('local_to_gmt'))
-{
 	function local_to_gmt($time = '')
 	{
-		if ($time == '')
+		if ($time === '')
+		{
 			$time = time();
+		}
 
-		return mktime( gmdate("H", $time), gmdate("i", $time), gmdate("s", $time), gmdate("m", $time), gmdate("d", $time), gmdate("Y", $time));
+		return mktime(
+			gmdate('G', $time),
+			gmdate('i', $time),
+			gmdate('s', $time),
+			gmdate('n', $time),
+			gmdate('j', $time),
+			gmdate('Y', $time)
+		);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('gmt_to_local'))
+{
 /**
  * Converts GMT time to a localized value
  *
@@ -318,52 +351,41 @@
  * at the local value based on the timezone and DST setting
  * submitted
  *
- * @access	public
- * @param	integer Unix timestamp
+	 * @param	int	Unix timestamp
  * @param	string	timezone
  * @param	bool	whether DST is active
- * @return	integer
+	 * @return	int
  */
-if ( ! function_exists('gmt_to_local'))
-{
 	function gmt_to_local($time = '', $timezone = 'UTC', $dst = FALSE)
 	{
-		if ($time == '')
+		if ($time === '')
 		{
 			return now();
 		}
 
 		$time += timezones($timezone) * 3600;
 
-		if ($dst == TRUE)
-		{
-			$time += 3600;
-		}
-
-		return $time;
+		return ($dst === TRUE) ? $time + 3600 : $time;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('mysql_to_unix'))
+{
 /**
  * Converts a MySQL Timestamp to Unix
  *
- * @access	public
- * @param	integer Unix timestamp
- * @return	integer
+	 * @param	int	MySQL timestamp YYYY-MM-DD HH:MM:SS
+	 * @return	int	Unix timstamp
  */
-if ( ! function_exists('mysql_to_unix'))
-{
 	function mysql_to_unix($time = '')
 	{
 		// We'll remove certain characters for backward compatibility
 		// since the formatting changed with MySQL 4.1
 		// YYYY-MM-DD HH:MM:SS
 
-		$time = str_replace('-', '', $time);
-		$time = str_replace(':', '', $time);
-		$time = str_replace(' ', '', $time);
+		$time = str_replace(array('-', ':', ' '), '', $time);
 
 		// YYYYMMDDHHMMSS
 		return  mktime(
@@ -379,24 +401,23 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('unix_to_human'))
+{
 /**
  * Unix to "Human"
  *
  * Formats Unix timestamp to the following prototype: 2006-08-21 11:35 PM
  *
- * @access	public
- * @param	integer Unix timestamp
+	 * @param	int	Unix timestamp
  * @param	bool	whether to show seconds
  * @param	string	format: us or euro
  * @return	string
  */
-if ( ! function_exists('unix_to_human'))
-{
 	function unix_to_human($time = '', $seconds = FALSE, $fmt = 'us')
 	{
 		$r  = date('Y', $time).'-'.date('m', $time).'-'.date('d', $time).' ';
 
-		if ($fmt == 'us')
+		if ($fmt === 'us')
 		{
 			$r .= date('h', $time).':'.date('i', $time);
 		}
@@ -410,9 +431,9 @@
 			$r .= ':'.date('s', $time);
 		}
 
-		if ($fmt == 'us')
+		if ($fmt === 'us')
 		{
-			$r .= ' '.date('A', $time);
+			return $r.' '.date('A', $time);
 		}
 
 		return $r;
@@ -421,131 +442,171 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('human_to_unix'))
+{
 /**
  * Convert "human" date to GMT
  *
  * Reverses the above process
  *
- * @access	public
  * @param	string	format: us or euro
- * @return	integer
+	 * @return	int
  */
-if ( ! function_exists('human_to_unix'))
-{
 	function human_to_unix($datestr = '')
 	{
-		if ($datestr == '')
+		if ($datestr === '')
 		{
 			return FALSE;
 		}
 
-		$datestr = trim($datestr);
-		$datestr = preg_replace("/\040+/", ' ', $datestr);
+		$datestr = preg_replace('/\040+/', ' ', trim($datestr));
 
-		if ( ! preg_match('/^[0-9]{2,4}\-[0-9]{1,2}\-[0-9]{1,2}\s[0-9]{1,2}:[0-9]{1,2}(?::[0-9]{1,2})?(?:\s[AP]M)?$/i', $datestr))
+		if ( ! preg_match('/^(\d{2}|\d{4})\-[0-9]{1,2}\-[0-9]{1,2}\s[0-9]{1,2}:[0-9]{1,2}(?::[0-9]{1,2})?(?:\s[AP]M)?$/i', $datestr))
 		{
 			return FALSE;
 		}
 
-		$split = explode(' ', $datestr);
+		sscanf($datestr, '%d-%d-%d %s %s', $year, $month, $day, $time, $ampm);
+		sscanf($time, '%d:%d:%d', $hour, $min, $sec);
+		isset($sec) OR $sec = 0;
 
-		$ex = explode("-", $split['0']);
+		if (isset($ampm))
+		{
+			$ampm = strtolower($ampm);
+
+			if ($ampm[0] === 'p' && $hour < 12)
+			{
+				$hour += 12;
+			}
+			elseif ($ampm[0] === 'a' && $hour === 12)
+			{
+				$hour = 0;
+			}
+		}
 
-		$year  = (strlen($ex['0']) == 2) ? '20'.$ex['0'] : $ex['0'];
-		$month = (strlen($ex['1']) == 1) ? '0'.$ex['1']  : $ex['1'];
-		$day   = (strlen($ex['2']) == 1) ? '0'.$ex['2']  : $ex['2'];
+		return mktime($hour, $min, $sec, $month, $day, $year);
+	}
+}
 
-		$ex = explode(":", $split['1']);
+// ------------------------------------------------------------------------
 
-		$hour = (strlen($ex['0']) == 1) ? '0'.$ex['0'] : $ex['0'];
-		$min  = (strlen($ex['1']) == 1) ? '0'.$ex['1'] : $ex['1'];
+if ( ! function_exists('nice_date'))
+{
+	/**
+	 * Turns many "reasonably-date-like" strings into something
+	 * that is actually useful. This only works for dates after unix epoch.
+	 *
+	 * @param	string	The terribly formatted date-like string
+	 * @param	string	Date format to return (same as php date function)
+	 * @return	string
+	 */
+	function nice_date($bad_date = '', $format = FALSE)
+	{
+		if (empty($bad_date))
+		{
+			return 'Unknown';
+		}
+		elseif (empty($format))
+		{
+			$format = 'U';
+		}
 
-		if (isset($ex['2']) && preg_match('/[0-9]{1,2}/', $ex['2']))
+		// Date like: YYYYMM
+		if (preg_match('/^\d{6}$/i', $bad_date))
 		{
-			$sec  = (strlen($ex['2']) == 1) ? '0'.$ex['2'] : $ex['2'];
+			if (in_array(substr($bad_date, 0, 2), array('19', '20')))
+			{
+				$year  = substr($bad_date, 0, 4);
+				$month = substr($bad_date, 4, 2);
 		}
 		else
 		{
-			// Unless specified, seconds get set to zero.
-			$sec = '00';
+				$month  = substr($bad_date, 0, 2);
+				$year   = substr($bad_date, 2, 4);
 		}
 
-		if (isset($split['2']))
-		{
-			$ampm = strtolower($split['2']);
+			return date($format, strtotime($year.'-'.$month.'-01'));
+		}
 
-			if (substr($ampm, 0, 1) == 'p' AND $hour < 12)
-				$hour = $hour + 12;
+		// Date Like: YYYYMMDD
+		if (preg_match('/^(\d{2})\d{2}(\d{4})$/i', $bad_date, $matches))
+		{
+			return date($format, strtotime($matches[1].'/01/'.$matches[2]));
+		}
 
-			if (substr($ampm, 0, 1) == 'a' AND $hour == 12)
-				$hour =  '00';
+		// Date Like: MM-DD-YYYY __or__ M-D-YYYY (or anything in between)
+		if (preg_match('/^(\d{1,2})-(\d{1,2})-(\d{4})$/i', $bad_date, $matches))
+		{
+			return date($format, strtotime($matches[3].'-'.$matches[1].'-'.$matches[2]));
+		}
 
-			if (strlen($hour) == 1)
-				$hour = '0'.$hour;
+		// Any other kind of string, when converted into UNIX time,
+		// produces "0 seconds after epoc..." is probably bad...
+		// return "Invalid Date".
+		if (date('U', strtotime($bad_date)) === '0')
+		{
+			return 'Invalid Date';
 		}
 
-		return mktime($hour, $min, $sec, $month, $day, $year);
+		// It's probably a valid-ish date format already
+		return date($format, strtotime($bad_date));
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('timezone_menu'))
+{
 /**
  * Timezone Menu
  *
  * Generates a drop-down menu of timezones.
  *
- * @access	public
  * @param	string	timezone
  * @param	string	classname
  * @param	string	menu name
+	 * @param	mixed	attributes
  * @return	string
  */
-if ( ! function_exists('timezone_menu'))
-{
-	function timezone_menu($default = 'UTC', $class = "", $name = 'timezones')
+	function timezone_menu($default = 'UTC', $class = '', $name = 'timezones', $attributes = '')
 	{
 		$CI =& get_instance();
 		$CI->lang->load('date');
 
-		if ($default == 'GMT')
-			$default = 'UTC';
+		$default = ($default === 'GMT') ? 'UTC' : $default;
 
 		$menu = '<select name="'.$name.'"';
 
-		if ($class != '')
+		if ($class !== '')
 		{
 			$menu .= ' class="'.$class.'"';
 		}
 
-		$menu .= ">\n";
+		$menu .= _stringify_attributes($attributes).">\n";
 
 		foreach (timezones() as $key => $val)
 		{
-			$selected = ($default == $key) ? " selected='selected'" : '';
-			$menu .= "<option value='{$key}'{$selected}>".$CI->lang->line($key)."</option>\n";
+			$selected = ($default === $key) ? ' selected="selected"' : '';
+			$menu .= '<option value="'.$key.'"'.$selected.'>'.$CI->lang->line($key)."</option>\n";
 		}
 
-		$menu .= "</select>";
-
-		return $menu;
+		return $menu.'</select>';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('timezones'))
+{
 /**
  * Timezones
  *
  * Returns an array of timezones.  This is a helper function
  * for various other ones in this library
  *
- * @access	public
  * @param	string	timezone
  * @return	string
  */
-if ( ! function_exists('timezones'))
-{
 	function timezones($tz = '')
 	{
 		// Note: Don't change the order of these even though
@@ -594,18 +655,142 @@
 						'UP14'		=> +14
 					);
 
-		if ($tz == '')
+		if ($tz === '')
 		{
 			return $zones;
 		}
 
-		if ($tz == 'GMT')
-			$tz = 'UTC';
+		return isset($zones[$tz]) ? $zones[$tz] : 0;
+	}
+}
+
+// ------------------------------------------------------------------------
 
-		return ( ! isset($zones[$tz])) ? 0 : $zones[$tz];
+if ( ! function_exists('date_range'))
+{
+	/**
+	 * Date range
+	 *
+	 * Returns a list of dates within a specified period.
+	 *
+	 * @param	int	unix_start	UNIX timestamp of period start date
+	 * @param	int	unix_end|days	UNIX timestamp of period end date
+	 *					or interval in days.
+	 * @param	mixed	is_unix		Specifies whether the second parameter
+	 *					is a UNIX timestamp or a day interval
+	 *					 - TRUE or 'unix' for a timestamp
+	 *					 - FALSE or 'days' for an interval
+	 * @param	string  date_format	Output date format, same as in date()
+	 * @return	array
+	 */
+	function date_range($unix_start = '', $mixed = '', $is_unix = TRUE, $format = 'Y-m-d')
+	{
+		if ($unix_start == '' OR $mixed == '' OR $format == '')
+		{
+			return FALSE;
 	}
+
+		$is_unix = ! ( ! $is_unix OR $is_unix === 'days');
+
+		// Validate input and try strtotime() on invalid timestamps/intervals, just in case
+		if ( ( ! ctype_digit((string) $unix_start) && ($unix_start = @strtotime($unix_start)) === FALSE)
+			OR ( ! ctype_digit((string) $mixed) && ($is_unix === FALSE OR ($mixed = @strtotime($mixed)) === FALSE))
+			OR ($is_unix === TRUE && $mixed < $unix_start))
+		{
+			return FALSE;
+		}
+
+		if ($is_unix && ($unix_start == $mixed OR date($format, $unix_start) === date($format, $mixed)))
+		{
+			return array(date($format, $unix_start));
+		}
+
+		$range = array();
+
+		/* NOTE: Even though the DateTime object has many useful features, it appears that
+		 *	 it doesn't always handle properly timezones, when timestamps are passed
+		 *	 directly to its constructor. Neither of the following gave proper results:
+		 *
+		 *		new DateTime('<timestamp>')
+		 *		new DateTime('<timestamp>', '<timezone>')
+		 *
+		 *	 --- available in PHP 5.3:
+		 *
+		 *		DateTime::createFromFormat('<format>', '<timestamp>')
+		 *		DateTime::createFromFormat('<format>', '<timestamp>', '<timezone')
+		 *
+		 *	 ... so we'll have to set the timestamp after the object is instantiated.
+		 *	 Furthermore, in PHP 5.3 we can use DateTime::setTimestamp() to do that and
+		 *	 given that we have UNIX timestamps - we should use it.
+		*/
+		$from = new DateTime();
+
+		if (is_php('5.3'))
+		{
+			$from->setTimestamp($unix_start);
+			if ($is_unix)
+			{
+				$arg = new DateTime();
+				$arg->setTimestamp($mixed);
+			}
+			else
+			{
+				$arg = (int) $mixed;
 }
 
+			$period = new DatePeriod($from, new DateInterval('P1D'), $arg);
+			foreach ($period as $date)
+			{
+				$range[] = $date->format($format);
+			}
 
-/* End of file date_helper.php */
-/* Location: ./system/helpers/date_helper.php */
\ No newline at end of file
+			/* If a period end date was passed to the DatePeriod constructor, it might not
+			 * be in our results. Not sure if this is a bug or it's just possible because
+			 * the end date might actually be less than 24 hours away from the previously
+			 * generated DateTime object, but either way - we have to append it manually.
+			 */
+			if ( ! is_int($arg) && $range[count($range) - 1] !== $arg->format($format))
+			{
+				$range[] = $arg->format($format);
+			}
+
+			return $range;
+		}
+
+		$from->setDate(date('Y', $unix_start), date('n', $unix_start), date('j', $unix_start));
+		$from->setTime(date('G', $unix_start), date('i', $unix_start), date('s', $unix_start));
+		if ($is_unix)
+		{
+			$arg = new DateTime();
+			$arg->setDate(date('Y', $mixed), date('n', $mixed), date('j', $mixed));
+			$arg->setTime(date('G', $mixed), date('i', $mixed), date('s', $mixed));
+		}
+		else
+		{
+			$arg = (int) $mixed;
+		}
+		$range[] = $from->format($format);
+
+		if (is_int($arg)) // Day intervals
+		{
+			do
+			{
+				$from->modify('+1 day');
+				$range[] = $from->format($format);
+			}
+			while (--$arg > 0);
+		}
+		else // end date UNIX timestamp
+		{
+			for ($from->modify('+1 day'), $end_check = $arg->format('Ymd'); $from->format('Ymd') < $end_check; $from->modify('+1 day'))
+			{
+				$range[] = $from->format($format);
+			}
+
+			// Our loop only appended dates prior to our end date
+			$range[] = $arg->format($format);
+		}
+
+		return $range;
+	}
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/directory_helper.php opensourcepos/system/helpers/directory_helper.php
--- pos-prod/system/helpers/directory_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/directory_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Directory Helpers
@@ -21,12 +43,14 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/directory_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/directory_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('directory_map'))
+{
 /**
  * Create a Directory Map
  *
@@ -34,13 +58,12 @@
  * representation of it.  Sub-folders contained with the
  * directory will be mapped as well.
  *
- * @access	public
- * @param	string	path to source
- * @param	int		depth of directories to traverse (0 = fully recursive, 1 = current dir, etc)
+	 * @param	string	$source_dir		Path to source
+	 * @param	int	$directory_depth	Depth of directories to traverse
+	 *						(0 = fully recursive, 1 = current dir, etc)
+	 * @param	bool	$hidden			Whether to show hidden files
  * @return	array
  */
-if ( ! function_exists('directory_map'))
-{
 	function directory_map($source_dir, $directory_depth = 0, $hidden = FALSE)
 	{
 		if ($fp = @opendir($source_dir))
@@ -52,14 +75,16 @@
 			while (FALSE !== ($file = readdir($fp)))
 			{
 				// Remove '.', '..', and hidden files [optional]
-				if ( ! trim($file, '.') OR ($hidden == FALSE && $file[0] == '.'))
+				if ($file === '.' OR $file === '..' OR ($hidden === FALSE && $file[0] === '.'))
 				{
 					continue;
 				}
 
-				if (($directory_depth < 1 OR $new_depth > 0) && @is_dir($source_dir.$file))
+				is_dir($source_dir.$file) && $file .= DIRECTORY_SEPARATOR;
+
+				if (($directory_depth < 1 OR $new_depth > 0) && is_dir($source_dir.$file))
 				{
-					$filedata[$file] = directory_map($source_dir.$file.DIRECTORY_SEPARATOR, $new_depth, $hidden);
+					$filedata[$file] = directory_map($source_dir.$file, $new_depth, $hidden);
 				}
 				else
 				{
@@ -74,7 +99,3 @@
 		return FALSE;
 	}
 }
-
-
-/* End of file directory_helper.php */
-/* Location: ./system/helpers/directory_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/download_helper.php opensourcepos/system/helpers/download_helper.php
--- pos-prod/system/helpers/download_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/download_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Download Helpers
@@ -21,87 +43,116 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/download_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/download_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('force_download'))
+{
 /**
  * Force Download
  *
  * Generates headers that force a download to happen
  *
- * @access	public
  * @param	string	filename
  * @param	mixed	the data to be downloaded
+	 * @param	bool	whether to try and send the actual file MIME type
  * @return	void
  */
-if ( ! function_exists('force_download'))
+	function force_download($filename = '', $data = '', $set_mime = FALSE)
 {
-	function force_download($filename = '', $data = '')
+		if ($filename === '' OR $data === '')
 	{
-		if ($filename == '' OR $data == '')
+			return;
+		}
+		elseif ($data === NULL)
+		{
+			if ( ! @is_file($filename) OR ($filesize = @filesize($filename)) === FALSE)
 		{
-			return FALSE;
+				return;
 		}
 
-		// Try to determine if the filename includes a file extension.
-		// We need it in order to set the MIME type
-		if (FALSE === strpos($filename, '.'))
+			$filepath = $filename;
+			$filename = explode('/', str_replace(DIRECTORY_SEPARATOR, '/', $filename));
+			$filename = end($filename);
+		}
+		else
 		{
-			return FALSE;
+			$filesize = strlen($data);
 		}
 
-		// Grab the file extension
+		// Set the default MIME type to send
+		$mime = 'application/octet-stream';
+
 		$x = explode('.', $filename);
 		$extension = end($x);
 
+		if ($set_mime === TRUE)
+		{
+			if (count($x) === 1 OR $extension === '')
+			{
+				/* If we're going to detect the MIME type,
+				 * we'll need a file extension.
+				 */
+				return;
+			}
+
 		// Load the mime types
-		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
+			$mimes =& get_mimes();
+
+			// Only change the default MIME if we can find one
+			if (isset($mimes[$extension]))
 		{
-			include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
+				$mime = is_array($mimes[$extension]) ? $mimes[$extension][0] : $mimes[$extension];
+			}
 		}
-		elseif (is_file(APPPATH.'config/mimes.php'))
+
+		/* It was reported that browsers on Android 2.1 (and possibly older as well)
+		 * need to have the filename extension upper-cased in order to be able to
+		 * download it.
+		 *
+		 * Reference: http://digiblog.de/2011/04/19/android-and-the-download-file-headers/
+		 */
+		if (count($x) !== 1 && isset($_SERVER['HTTP_USER_AGENT']) && preg_match('/Android\s(1|2\.[01])/', $_SERVER['HTTP_USER_AGENT']))
 		{
-			include(APPPATH.'config/mimes.php');
+			$x[count($x) - 1] = strtoupper($extension);
+			$filename = implode('.', $x);
 		}
 
-		// Set a default mime if we can't find it
-		if ( ! isset($mimes[$extension]))
+		if ($data === NULL && ($fp = @fopen($filepath, 'rb')) === FALSE)
 		{
-			$mime = 'application/octet-stream';
+			return;
 		}
-		else
+
+		// Clean output buffer
+		if (ob_get_level() !== 0 && @ob_end_clean() === FALSE)
 		{
-			$mime = (is_array($mimes[$extension])) ? $mimes[$extension][0] : $mimes[$extension];
+			@ob_clean();
 		}
 
 		// Generate the server headers
-		if (strpos($_SERVER['HTTP_USER_AGENT'], "MSIE") !== FALSE)
-		{
-			header('Content-Type: "'.$mime.'"');
+		header('Content-Type: '.$mime);
 			header('Content-Disposition: attachment; filename="'.$filename.'"');
 			header('Expires: 0');
-			header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
-			header("Content-Transfer-Encoding: binary");
-			header('Pragma: public');
-			header("Content-Length: ".strlen($data));
+		header('Content-Transfer-Encoding: binary');
+		header('Content-Length: '.$filesize);
+		header('Cache-Control: private, no-transform, no-store, must-revalidate');
+
+		// If we have raw data - just dump it
+		if ($data !== NULL)
+		{
+			exit($data);
 		}
-		else
+
+		// Flush 1MB chunks of data
+		while ( ! feof($fp) && ($data = fread($fp, 1048576)) !== FALSE)
 		{
-			header('Content-Type: "'.$mime.'"');
-			header('Content-Disposition: attachment; filename="'.$filename.'"');
-			header("Content-Transfer-Encoding: binary");
-			header('Expires: 0');
-			header('Pragma: no-cache');
-			header("Content-Length: ".strlen($data));
+			echo $data;
 		}
 
-		exit($data);
+		fclose($fp);
+		exit;
 	}
 }
-
-
-/* End of file download_helper.php */
-/* Location: ./system/helpers/download_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/email_helper.php opensourcepos/system/helpers/email_helper.php
--- pos-prod/system/helpers/email_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/email_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Email Helpers
@@ -21,42 +43,42 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/email_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/email_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('valid_email'))
+{
 /**
  * Validate email address
  *
- * @access	public
+	 * @deprecated	3.0.0	Use PHP's filter_var() instead
+	 * @param	string	$email
  * @return	bool
  */
-if ( ! function_exists('valid_email'))
-{
-	function valid_email($address)
+	function valid_email($email)
 	{
-		return ( ! preg_match("/^([a-z0-9\+_\-]+)(\.[a-z0-9\+_\-]+)*@([a-z0-9\-]+\.)+[a-z]{2,6}$/ix", $address)) ? FALSE : TRUE;
+		return (bool) filter_var($email, FILTER_VALIDATE_EMAIL);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('send_email'))
+{
 /**
  * Send an email
  *
- * @access	public
+	 * @deprecated	3.0.0	Use PHP's mail() instead
+	 * @param	string	$recipient
+	 * @param	string	$subject
+	 * @param	string	$message
  * @return	bool
  */
-if ( ! function_exists('send_email'))
-{
-	function send_email($recipient, $subject = 'Test email', $message = 'Hello World')
+	function send_email($recipient, $subject, $message)
 	{
 		return mail($recipient, $subject, $message);
 	}
 }
-
-
-/* End of file email_helper.php */
-/* Location: ./system/helpers/email_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/file_helper.php opensourcepos/system/helpers/file_helper.php
--- pos-prod/system/helpers/file_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/file_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter File Helpers
@@ -21,71 +43,46 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/file_helpers.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/file_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('read_file'))
+{
 /**
  * Read File
  *
- * Opens the file specfied in the path and returns it as a string.
+	 * Opens the file specified in the path and returns it as a string.
  *
- * @access	public
- * @param	string	path to file
- * @return	string
+	 * @todo	Remove in version 3.1+.
+	 * @deprecated	3.0.0	It is now just an alias for PHP's native file_get_contents().
+	 * @param	string	$file	Path to file
+	 * @return	string	File contents
  */
-if ( ! function_exists('read_file'))
-{
 	function read_file($file)
 	{
-		if ( ! file_exists($file))
-		{
-			return FALSE;
-		}
-
-		if (function_exists('file_get_contents'))
-		{
-			return file_get_contents($file);
-		}
-
-		if ( ! $fp = @fopen($file, FOPEN_READ))
-		{
-			return FALSE;
-		}
-
-		flock($fp, LOCK_SH);
-
-		$data = '';
-		if (filesize($file) > 0)
-		{
-			$data =& fread($fp, filesize($file));
-		}
-
-		flock($fp, LOCK_UN);
-		fclose($fp);
-
-		return $data;
+		return @file_get_contents($file);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('write_file'))
+{
 /**
  * Write File
  *
  * Writes data to the file specified in the path.
  * Creates a new file if non-existent.
  *
- * @access	public
- * @param	string	path to file
- * @param	string	file data
+	 * @param	string	$path	File path
+	 * @param	string	$data	Data to write
+	 * @param	string	$mode	fopen() mode (default: 'wb')
  * @return	bool
  */
-if ( ! function_exists('write_file'))
-{
-	function write_file($path, $data, $mode = FOPEN_WRITE_CREATE_DESTRUCTIVE)
+	function write_file($path, $data, $mode = 'wb')
 	{
 		if ( ! $fp = @fopen($path, $mode))
 		{
@@ -93,16 +90,26 @@
 		}
 
 		flock($fp, LOCK_EX);
-		fwrite($fp, $data);
+
+		for ($result = $written = 0, $length = strlen($data); $written < $length; $written += $result)
+		{
+			if (($result = fwrite($fp, substr($data, $written))) === FALSE)
+			{
+				break;
+			}
+		}
+
 		flock($fp, LOCK_UN);
 		fclose($fp);
 
-		return TRUE;
+		return is_int($result);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('delete_files'))
+{
 /**
  * Delete Files
  *
@@ -111,17 +118,16 @@
  * If the second parameter is set to TRUE, any directories contained
  * within the supplied base directory will be nuked as well.
  *
- * @access	public
- * @param	string	path to file
- * @param	bool	whether to delete any directories found in the path
+	 * @param	string	$path		File path
+	 * @param	bool	$del_dir	Whether to delete any directories found in the path
+	 * @param	bool	$htdocs		Whether to skip deleting .htaccess and index page files
+	 * @param	int	$_level		Current directory depth level (default: 0; internal use only)
  * @return	bool
  */
-if ( ! function_exists('delete_files'))
-{
-	function delete_files($path, $del_dir = FALSE, $level = 0)
+	function delete_files($path, $del_dir = FALSE, $htdocs = FALSE, $_level = 0)
 	{
 		// Trim the trailing slash
-		$path = rtrim($path, DIRECTORY_SEPARATOR);
+		$path = rtrim($path, '/\\');
 
 		if ( ! $current_dir = @opendir($path))
 		{
@@ -130,49 +136,42 @@
 
 		while (FALSE !== ($filename = @readdir($current_dir)))
 		{
-			if ($filename != "." and $filename != "..")
+			if ($filename !== '.' && $filename !== '..')
 			{
-				if (is_dir($path.DIRECTORY_SEPARATOR.$filename))
+				if (is_dir($path.DIRECTORY_SEPARATOR.$filename) && $filename[0] !== '.')
 				{
-					// Ignore empty folders
-					if (substr($filename, 0, 1) != '.')
-					{
-						delete_files($path.DIRECTORY_SEPARATOR.$filename, $del_dir, $level + 1);
-					}
+					delete_files($path.DIRECTORY_SEPARATOR.$filename, $del_dir, $htdocs, $_level + 1);
 				}
-				else
+				elseif ($htdocs !== TRUE OR ! preg_match('/^(\.htaccess|index\.(html|htm|php)|web\.config)$/i', $filename))
 				{
-					unlink($path.DIRECTORY_SEPARATOR.$filename);
+					@unlink($path.DIRECTORY_SEPARATOR.$filename);
 				}
 			}
 		}
-		@closedir($current_dir);
 
-		if ($del_dir == TRUE AND $level > 0)
-		{
-			return @rmdir($path);
-		}
+		closedir($current_dir);
 
-		return TRUE;
+		return ($del_dir === TRUE && $_level > 0)
+			? @rmdir($path)
+			: TRUE;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('get_filenames'))
+{
 /**
  * Get Filenames
  *
  * Reads the specified directory and builds an array containing the filenames.
  * Any sub-folders contained within the specified path are read as well.
  *
- * @access	public
  * @param	string	path to source
  * @param	bool	whether to include the path as part of the filename
  * @param	bool	internal variable to determine recursion status - do not use in calls
  * @return	array
  */
-if ( ! function_exists('get_filenames'))
-{
 	function get_filenames($source_dir, $include_path = FALSE, $_recursion = FALSE)
 	{
 		static $_filedata = array();
@@ -188,26 +187,28 @@
 
 			while (FALSE !== ($file = readdir($fp)))
 			{
-				if (@is_dir($source_dir.$file) && strncmp($file, '.', 1) !== 0)
+				if (is_dir($source_dir.$file) && $file[0] !== '.')
 				{
 					get_filenames($source_dir.$file.DIRECTORY_SEPARATOR, $include_path, TRUE);
 				}
-				elseif (strncmp($file, '.', 1) !== 0)
+				elseif ($file[0] !== '.')
 				{
-					$_filedata[] = ($include_path == TRUE) ? $source_dir.$file : $file;
+					$_filedata[] = ($include_path === TRUE) ? $source_dir.$file : $file;
 				}
 			}
+
+			closedir($fp);
 			return $_filedata;
 		}
-		else
-		{
+
 			return FALSE;
 		}
 	}
-}
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('get_dir_file_info'))
+{
 /**
  * Get Directory File Information
  *
@@ -216,14 +217,11 @@
  *
  * Any sub-folders contained within the specified path are read as well.
  *
- * @access	public
  * @param	string	path to source
  * @param	bool	Look only at the top level directory specified?
  * @param	bool	internal variable to determine recursion status - do not use in calls
  * @return	array
  */
-if ( ! function_exists('get_dir_file_info'))
-{
 	function get_dir_file_info($source_dir, $top_level_only = TRUE, $_recursion = FALSE)
 	{
 		static $_filedata = array();
@@ -238,31 +236,32 @@
 				$source_dir = rtrim(realpath($source_dir), DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;
 			}
 
-			// foreach (scandir($source_dir, 1) as $file) // In addition to being PHP5+, scandir() is simply not as fast
+			// Used to be foreach (scandir($source_dir, 1) as $file), but scandir() is simply not as fast
 			while (FALSE !== ($file = readdir($fp)))
 			{
-				if (@is_dir($source_dir.$file) AND strncmp($file, '.', 1) !== 0 AND $top_level_only === FALSE)
+				if (is_dir($source_dir.$file) && $file[0] !== '.' && $top_level_only === FALSE)
 				{
 					get_dir_file_info($source_dir.$file.DIRECTORY_SEPARATOR, $top_level_only, TRUE);
 				}
-				elseif (strncmp($file, '.', 1) !== 0)
+				elseif ($file[0] !== '.')
 				{
 					$_filedata[$file] = get_file_info($source_dir.$file);
 					$_filedata[$file]['relative_path'] = $relative_path;
 				}
 			}
 
+			closedir($fp);
 			return $_filedata;
 		}
-		else
-		{
+
 			return FALSE;
 		}
 	}
-}
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('get_file_info'))
+{
 /**
 * Get File Info
 *
@@ -271,16 +270,12 @@
 * Options are: name, server_path, size, date, readable, writable, executable, fileperms
 * Returns FALSE if the file cannot be found.
 *
-* @access	public
 * @param	string	path to file
 * @param	mixed	array or comma separated string of information returned
 * @return	array
 */
-if ( ! function_exists('get_file_info'))
-{
 	function get_file_info($file, $returned_values = array('name', 'server_path', 'size', 'date'))
 	{
-
 		if ( ! file_exists($file))
 		{
 			return FALSE;
@@ -296,7 +291,7 @@
 			switch ($key)
 			{
 				case 'name':
-					$fileinfo['name'] = substr(strrchr($file, DIRECTORY_SEPARATOR), 1);
+					$fileinfo['name'] = basename($file);
 					break;
 				case 'server_path':
 					$fileinfo['server_path'] = $file;
@@ -311,8 +306,7 @@
 					$fileinfo['readable'] = is_readable($file);
 					break;
 				case 'writable':
-					// There are known problems using is_weritable on IIS.  It may not be reliable - consider fileperms()
-					$fileinfo['writable'] = is_writable($file);
+					$fileinfo['writable'] = is_really_writable($file);
 					break;
 				case 'executable':
 					$fileinfo['executable'] = is_executable($file);
@@ -329,6 +323,8 @@
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('get_mime_by_extension'))
+{
 /**
  * Get Mime by Extension
  *
@@ -338,95 +334,76 @@
  * Note: this is NOT an accurate way of determining file mime types, and is here strictly as a convenience
  * It should NOT be trusted, and should certainly NOT be used for security
  *
- * @access	public
- * @param	string	path to file
- * @return	mixed
+	 * @param	string	$filename	File name
+	 * @return	string
  */
-if ( ! function_exists('get_mime_by_extension'))
-{
-	function get_mime_by_extension($file)
+	function get_mime_by_extension($filename)
 	{
-		$extension = strtolower(substr(strrchr($file, '.'), 1));
-
-		global $mimes;
+		static $mimes;
 
 		if ( ! is_array($mimes))
 		{
-			if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
-			{
-				include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
-			}
-			elseif (is_file(APPPATH.'config/mimes.php'))
-			{
-				include(APPPATH.'config/mimes.php');
-			}
+			$mimes = get_mimes();
 
-			if ( ! is_array($mimes))
+			if (empty($mimes))
 			{
 				return FALSE;
 			}
 		}
 
-		if (array_key_exists($extension, $mimes))
-		{
-			if (is_array($mimes[$extension]))
-			{
-				// Multiple mime types, just give the first one
-				return current($mimes[$extension]);
-			}
-			else
+		$extension = strtolower(substr(strrchr($filename, '.'), 1));
+
+		if (isset($mimes[$extension]))
 			{
-				return $mimes[$extension];
-			}
+			return is_array($mimes[$extension])
+				? current($mimes[$extension]) // Multiple mime types, just give the first one
+				: $mimes[$extension];
 		}
-		else
-		{
+
 			return FALSE;
 		}
 	}
-}
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('symbolic_permissions'))
+{
 /**
  * Symbolic Permissions
  *
  * Takes a numeric value representing a file's permissions and returns
  * standard symbolic notation representing that value
  *
- * @access	public
- * @param	int
+	 * @param	int	$perms	Permissions
  * @return	string
  */
-if ( ! function_exists('symbolic_permissions'))
-{
 	function symbolic_permissions($perms)
 	{
-		if (($perms & 0xC000) == 0xC000)
+		if (($perms & 0xC000) === 0xC000)
 		{
 			$symbolic = 's'; // Socket
 		}
-		elseif (($perms & 0xA000) == 0xA000)
+		elseif (($perms & 0xA000) === 0xA000)
 		{
 			$symbolic = 'l'; // Symbolic Link
 		}
-		elseif (($perms & 0x8000) == 0x8000)
+		elseif (($perms & 0x8000) === 0x8000)
 		{
 			$symbolic = '-'; // Regular
 		}
-		elseif (($perms & 0x6000) == 0x6000)
+		elseif (($perms & 0x6000) === 0x6000)
 		{
 			$symbolic = 'b'; // Block special
 		}
-		elseif (($perms & 0x4000) == 0x4000)
+		elseif (($perms & 0x4000) === 0x4000)
 		{
 			$symbolic = 'd'; // Directory
 		}
-		elseif (($perms & 0x2000) == 0x2000)
+		elseif (($perms & 0x2000) === 0x2000)
 		{
 			$symbolic = 'c'; // Character special
 		}
-		elseif (($perms & 0x1000) == 0x1000)
+		elseif (($perms & 0x1000) === 0x1000)
 		{
 			$symbolic = 'p'; // FIFO pipe
 		}
@@ -436,19 +413,19 @@
 		}
 
 		// Owner
-		$symbolic .= (($perms & 0x0100) ? 'r' : '-');
-		$symbolic .= (($perms & 0x0080) ? 'w' : '-');
-		$symbolic .= (($perms & 0x0040) ? (($perms & 0x0800) ? 's' : 'x' ) : (($perms & 0x0800) ? 'S' : '-'));
+		$symbolic .= (($perms & 0x0100) ? 'r' : '-')
+			.(($perms & 0x0080) ? 'w' : '-')
+			.(($perms & 0x0040) ? (($perms & 0x0800) ? 's' : 'x' ) : (($perms & 0x0800) ? 'S' : '-'));
 
 		// Group
-		$symbolic .= (($perms & 0x0020) ? 'r' : '-');
-		$symbolic .= (($perms & 0x0010) ? 'w' : '-');
-		$symbolic .= (($perms & 0x0008) ? (($perms & 0x0400) ? 's' : 'x' ) : (($perms & 0x0400) ? 'S' : '-'));
+		$symbolic .= (($perms & 0x0020) ? 'r' : '-')
+			.(($perms & 0x0010) ? 'w' : '-')
+			.(($perms & 0x0008) ? (($perms & 0x0400) ? 's' : 'x' ) : (($perms & 0x0400) ? 'S' : '-'));
 
 		// World
-		$symbolic .= (($perms & 0x0004) ? 'r' : '-');
-		$symbolic .= (($perms & 0x0002) ? 'w' : '-');
-		$symbolic .= (($perms & 0x0001) ? (($perms & 0x0200) ? 't' : 'x' ) : (($perms & 0x0200) ? 'T' : '-'));
+		$symbolic .= (($perms & 0x0004) ? 'r' : '-')
+			.(($perms & 0x0002) ? 'w' : '-')
+			.(($perms & 0x0001) ? (($perms & 0x0200) ? 't' : 'x' ) : (($perms & 0x0200) ? 'T' : '-'));
 
 		return $symbolic;
 	}
@@ -456,24 +433,19 @@
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('octal_permissions'))
+{
 /**
  * Octal Permissions
  *
  * Takes a numeric value representing a file's permissions and returns
  * a three character string representing the file's octal permissions
  *
- * @access	public
- * @param	int
+	 * @param	int	$perms	Permissions
  * @return	string
  */
-if ( ! function_exists('octal_permissions'))
-{
 	function octal_permissions($perms)
 	{
 		return substr(sprintf('%o', $perms), -3);
 	}
 }
-
-
-/* End of file file_helper.php */
-/* Location: ./system/helpers/file_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/form_helper.php opensourcepos/system/helpers/form_helper.php
--- pos-prod/system/helpers/form_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/form_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Form Helpers
@@ -21,58 +43,65 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/form_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/form_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_open'))
+{
 /**
  * Form Declaration
  *
  * Creates the opening portion of the form.
  *
- * @access	public
  * @param	string	the URI segments of the form destination
  * @param	array	a key/value pair of attributes
  * @param	array	a key/value pair hidden data
  * @return	string
  */
-if ( ! function_exists('form_open'))
-{
-	function form_open($action = '', $attributes = '', $hidden = array())
+	function form_open($action = '', $attributes = array(), $hidden = array())
 	{
 		$CI =& get_instance();
 
-		if ($attributes == '')
+		// If no action is provided then set to the current url
+		if ( ! $action)
 		{
-			$attributes = 'method="post"';
+			$action = $CI->config->site_url($CI->uri->uri_string());
 		}
-
 		// If an action is not a full URL then turn it into one
-		if ($action && strpos($action, '://') === FALSE)
+		elseif (strpos($action, '://') === FALSE)
 		{
 			$action = $CI->config->site_url($action);
 		}
 
-		// If no action is provided then set to the current url
-		$action OR $action = $CI->config->site_url($CI->uri->uri_string());
+		$attributes = _attributes_to_string($attributes);
 
-		$form = '<form action="'.$action.'"';
+		if (stripos($attributes, 'method=') === FALSE)
+		{
+			$attributes .= ' method="post"';
+		}
 
-		$form .= _attributes_to_string($attributes, TRUE);
+		if (stripos($attributes, 'accept-charset=') === FALSE)
+		{
+			$attributes .= ' accept-charset="'.strtolower(config_item('charset')).'"';
+		}
 
-		$form .= '>';
+		$form = '<form action="'.$action.'"'.$attributes.">\n";
 
 		// Add CSRF field if enabled, but leave it out for GET requests and requests to external websites	
-		if ($CI->config->item('csrf_protection') === TRUE AND ! (strpos($action, $CI->config->base_url()) === FALSE OR strpos($form, 'method="get"')))	
+		if ($CI->config->item('csrf_protection') === TRUE && strpos($action, $CI->config->base_url()) !== FALSE && ! stripos($form, 'method="get"'))
 		{
 			$hidden[$CI->security->get_csrf_token_name()] = $CI->security->get_csrf_hash();
 		}
 
-		if (is_array($hidden) AND count($hidden) > 0)
+		if (is_array($hidden))
+		{
+			foreach ($hidden as $name => $value)
 		{
-			$form .= sprintf("<div style=\"display:none\">%s</div>", form_hidden($hidden));
+				$form .= '<input type="hidden" name="'.$name.'" value="'.html_escape($value).'" style="display:none;" />'."\n";
+			}
 		}
 
 		return $form;
@@ -81,19 +110,18 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_open_multipart'))
+{
 /**
  * Form Declaration - Multipart type
  *
  * Creates the opening portion of the form, but with "multipart/form-data".
  *
- * @access	public
  * @param	string	the URI segments of the form destination
  * @param	array	a key/value pair of attributes
  * @param	array	a key/value pair hidden data
  * @return	string
  */
-if ( ! function_exists('form_open_multipart'))
-{
 	function form_open_multipart($action = '', $attributes = array(), $hidden = array())
 	{
 		if (is_string($attributes))
@@ -111,19 +139,19 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_hidden'))
+{
 /**
  * Hidden Input Field
  *
- * Generates hidden fields.  You can pass a simple key/value string or an associative
- * array with multiple values.
+	 * Generates hidden fields. You can pass a simple key/value string or
+	 * an associative array with multiple values.
  *
- * @access	public
- * @param	mixed
- * @param	string
+	 * @param	mixed	$name		Field name
+	 * @param	string	$value		Field value
+	 * @param	bool	$recursing
  * @return	string
  */
-if ( ! function_exists('form_hidden'))
-{
 	function form_hidden($name, $value = '', $recursing = FALSE)
 	{
 		static $form;
@@ -144,13 +173,13 @@
 
 		if ( ! is_array($value))
 		{
-			$form .= '<input type="hidden" name="'.$name.'" value="'.form_prep($value, $name).'" />'."\n";
+			$form .= '<input type="hidden" name="'.$name.'" value="'.html_escape($value)."\" />\n";
 		}
 		else
 		{
 			foreach ($value as $k => $v)
 			{
-				$k = (is_int($k)) ? '' : $k;
+				$k = is_int($k) ? '' : $k;
 				form_hidden($name.'['.$k.']', $v, TRUE);
 			}
 		}
@@ -161,47 +190,45 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_input'))
+{
 /**
  * Text Input Field
  *
- * @access	public
  * @param	mixed
  * @param	string
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_input'))
-{
 	function form_input($data = '', $value = '', $extra = '')
 	{
-		$defaults = array('type' => 'text', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
+		$defaults = array(
+			'type' => 'text',
+			'name' => is_array($data) ? '' : $data,
+			'value' => $value
+		);
 
-		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
+		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_password'))
+{
 /**
  * Password Field
  *
  * Identical to the input function but adds the "password" type
  *
- * @access	public
  * @param	mixed
  * @param	string
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_password'))
-{
 	function form_password($data = '', $value = '', $extra = '')
 	{
-		if ( ! is_array($data))
-		{
-			$data = array('name' => $data);
-		}
-
+		is_array($data) OR $data = array('name' => $data);
 		$data['type'] = 'password';
 		return form_input($data, $value, $extra);
 	}
@@ -209,47 +236,47 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_upload'))
+{
 /**
  * Upload Field
  *
  * Identical to the input function but adds the "file" type
  *
- * @access	public
  * @param	mixed
  * @param	string
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_upload'))
-{
 	function form_upload($data = '', $value = '', $extra = '')
 	{
-		if ( ! is_array($data))
-		{
-			$data = array('name' => $data);
-		}
-
+		$defaults = array('type' => 'file', 'name' => '');
+		is_array($data) OR $data = array('name' => $data);
 		$data['type'] = 'file';
-		return form_input($data, $value, $extra);
+
+		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_textarea'))
+{
 /**
  * Textarea field
  *
- * @access	public
- * @param	mixed
- * @param	string
- * @param	string
+	 * @param	mixed	$data
+	 * @param	string	$value
+	 * @param	mixed	$extra
  * @return	string
  */
-if ( ! function_exists('form_textarea'))
-{
 	function form_textarea($data = '', $value = '', $extra = '')
 	{
-		$defaults = array('name' => (( ! is_array($data)) ? $data : ''), 'cols' => '40', 'rows' => '10');
+		$defaults = array(
+			'name' => is_array($data) ? '' : $data,
+			'cols' => '40',
+			'rows' => '10'
+		);
 
 		if ( ! is_array($data) OR ! isset($data['value']))
 		{
@@ -261,28 +288,29 @@
 			unset($data['value']); // textareas don't use the value attribute
 		}
 
-		$name = (is_array($data)) ? $data['name'] : $data;
-		return "<textarea "._parse_form_attributes($data, $defaults).$extra.">".form_prep($val, $name)."</textarea>";
+		return '<textarea '._parse_form_attributes($data, $defaults)._attributes_to_string($extra).'>'
+			.html_escape($val)
+			."</textarea>\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_multiselect'))
+{
 /**
  * Multi-select menu
  *
- * @access	public
  * @param	string
  * @param	array
  * @param	mixed
- * @param	string
- * @return	type
+	 * @param	mixed
+	 * @return	string
  */
-if ( ! function_exists('form_multiselect'))
-{
 	function form_multiselect($name = '', $options = array(), $selected = array(), $extra = '')
 	{
-		if ( ! strpos($extra, 'multiple'))
+		$extra = _attributes_to_string($extra);
+		if (stripos($extra, 'multiple') === FALSE)
 		{
 			$extra .= ' multiple="multiple"';
 		}
@@ -293,91 +321,117 @@
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('form_dropdown'))
+{
 /**
  * Drop-down Menu
  *
- * @access	public
- * @param	string
- * @param	array
- * @param	string
- * @param	string
+	 * @param	mixed	$data
+	 * @param	mixed	$options
+	 * @param	mixed	$selected
+	 * @param	mixed	$extra
  * @return	string
  */
-if ( ! function_exists('form_dropdown'))
+	function form_dropdown($data = '', $options = array(), $selected = array(), $extra = '')
+	{
+		$defaults = array();
+
+		if (is_array($data))
+		{
+			if (isset($data['selected']))
 {
-	function form_dropdown($name = '', $options = array(), $selected = array(), $extra = '')
+				$selected = $data['selected'];
+				unset($data['selected']); // select tags don't have a selected attribute
+			}
+
+			if (isset($data['options']))
 	{
-		if ( ! is_array($selected))
+				$options = $data['options'];
+				unset($data['options']); // select tags don't use an options attribute
+			}
+		}
+		else
 		{
-			$selected = array($selected);
+			$defaults = array('name' => $data);
 		}
 
+		is_array($selected) OR $selected = array($selected);
+		is_array($options) OR $options = array($options);
+
 		// If no selected state was submitted we will attempt to set it automatically
-		if (count($selected) === 0)
+		if (empty($selected))
+		{
+			if (is_array($data))
+			{
+				if (isset($data['name'], $_POST[$data['name']]))
 		{
-			// If the form name appears in the $_POST array we have a winner!
-			if (isset($_POST[$name]))
+					$selected = array($_POST[$data['name']]);
+				}
+			}
+			elseif (isset($_POST[$data]))
 			{
-				$selected = array($_POST[$name]);
+				$selected = array($_POST[$data]);
 			}
 		}
 
-		if ($extra != '') $extra = ' '.$extra;
+		$extra = _attributes_to_string($extra);
 
-		$multiple = (count($selected) > 1 && strpos($extra, 'multiple') === FALSE) ? ' multiple="multiple"' : '';
+		$multiple = (count($selected) > 1 && stripos($extra, 'multiple') === FALSE) ? ' multiple="multiple"' : '';
 
-		$form = '<select name="'.$name.'"'.$extra.$multiple.">\n";
+		$form = '<select '.rtrim(_parse_form_attributes($data, $defaults)).$extra.$multiple.">\n";
 
 		foreach ($options as $key => $val)
 		{
 			$key = (string) $key;
 
-			if (is_array($val) && ! empty($val))
+			if (is_array($val))
 			{
-				$form .= '<optgroup label="'.$key.'">'."\n";
+				if (empty($val))
+				{
+					continue;
+				}
+
+				$form .= '<optgroup label="'.$key."\">\n";
 
 				foreach ($val as $optgroup_key => $optgroup_val)
 				{
-					$sel = (in_array($optgroup_key, $selected)) ? ' selected="selected"' : '';
-
-					$form .= '<option value="'.$optgroup_key.'"'.$sel.'>'.(string) $optgroup_val."</option>\n";
+					$sel = in_array($optgroup_key, $selected) ? ' selected="selected"' : '';
+					$form .= '<option value="'.html_escape($optgroup_key).'"'.$sel.'>'
+						.(string) $optgroup_val."</option>\n";
 				}
 
-				$form .= '</optgroup>'."\n";
+				$form .= "</optgroup>\n";
 			}
 			else
 			{
-				$sel = (in_array($key, $selected)) ? ' selected="selected"' : '';
-
-				$form .= '<option value="'.$key.'"'.$sel.'>'.(string) $val."</option>\n";
+				$form .= '<option value="'.html_escape($key).'"'
+					.(in_array($key, $selected) ? ' selected="selected"' : '').'>'
+					.(string) $val."</option>\n";
 			}
 		}
 
-		$form .= '</select>';
-
-		return $form;
+		return $form."</select>\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_checkbox'))
+{
 /**
  * Checkbox Field
  *
- * @access	public
  * @param	mixed
  * @param	string
  * @param	bool
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_checkbox'))
-{
 	function form_checkbox($data = '', $value = '', $checked = FALSE, $extra = '')
 	{
-		$defaults = array('type' => 'checkbox', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
+		$defaults = array('type' => 'checkbox', 'name' => ( ! is_array($data) ? $data : ''), 'value' => $value);
 
-		if (is_array($data) AND array_key_exists('checked', $data))
+		if (is_array($data) && array_key_exists('checked', $data))
 		{
 			$checked = $data['checked'];
 
@@ -400,32 +454,28 @@
 			unset($defaults['checked']);
 		}
 
-		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
+		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_radio'))
+{
 /**
  * Radio Button
  *
- * @access	public
  * @param	mixed
  * @param	string
  * @param	bool
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_radio'))
-{
 	function form_radio($data = '', $value = '', $checked = FALSE, $extra = '')
 	{
-		if ( ! is_array($data))
-		{
-			$data = array('name' => $data);
-		}
-
+		is_array($data) OR $data = array('name' => $data);
 		$data['type'] = 'radio';
+
 		return form_checkbox($data, $value, $checked, $extra);
 	}
 }
@@ -432,97 +482,106 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_submit'))
+{
 /**
  * Submit Button
  *
- * @access	public
  * @param	mixed
  * @param	string
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_submit'))
-{
 	function form_submit($data = '', $value = '', $extra = '')
 	{
-		$defaults = array('type' => 'submit', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
+		$defaults = array(
+			'type' => 'submit',
+			'name' => is_array($data) ? '' : $data,
+			'value' => $value
+		);
 
-		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
+		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_reset'))
+{
 /**
  * Reset Button
  *
- * @access	public
  * @param	mixed
  * @param	string
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_reset'))
-{
 	function form_reset($data = '', $value = '', $extra = '')
 	{
-		$defaults = array('type' => 'reset', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
+		$defaults = array(
+			'type' => 'reset',
+			'name' => is_array($data) ? '' : $data,
+			'value' => $value
+		);
 
-		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
+		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_button'))
+{
 /**
  * Form Button
  *
- * @access	public
  * @param	mixed
  * @param	string
- * @param	string
+	 * @param	mixed
  * @return	string
  */
-if ( ! function_exists('form_button'))
-{
 	function form_button($data = '', $content = '', $extra = '')
 	{
-		$defaults = array('name' => (( ! is_array($data)) ? $data : ''), 'type' => 'button');
+		$defaults = array(
+			'name' => is_array($data) ? '' : $data,
+			'type' => 'button'
+		);
 
-		if ( is_array($data) AND isset($data['content']))
+		if (is_array($data) && isset($data['content']))
 		{
 			$content = $data['content'];
 			unset($data['content']); // content is not an attribute
 		}
 
-		return "<button "._parse_form_attributes($data, $defaults).$extra.">".$content."</button>";
+		return '<button '._parse_form_attributes($data, $defaults)._attributes_to_string($extra).'>'
+			.$content
+			."</button>\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_label'))
+{
 /**
  * Form Label Tag
  *
- * @access	public
  * @param	string	The text to appear onscreen
  * @param	string	The id the label applies to
  * @param	string	Additional attributes
  * @return	string
  */
-if ( ! function_exists('form_label'))
-{
 	function form_label($label_text = '', $id = '', $attributes = array())
 	{
 
 		$label = '<label';
 
-		if ($id != '')
+		if ($id !== '')
 		{
-			$label .= " for=\"$id\"";
+			$label .= ' for="'.$id.'"';
 		}
 
-		if (is_array($attributes) AND count($attributes) > 0)
+		if (is_array($attributes) && count($attributes) > 0)
 		{
 			foreach ($attributes as $key => $val)
 			{
@@ -530,37 +589,30 @@
 			}
 		}
 
-		$label .= ">$label_text</label>";
-
-		return $label;
+		return $label.'>'.$label_text.'</label>';
 	}
 }
 
 // ------------------------------------------------------------------------
+
+if ( ! function_exists('form_fieldset'))
+{
 /**
  * Fieldset Tag
  *
  * Used to produce <fieldset><legend>text</legend>.  To close fieldset
  * use form_fieldset_close()
  *
- * @access	public
  * @param	string	The legend text
- * @param	string	Additional attributes
+	 * @param	array	Additional attributes
  * @return	string
  */
-if ( ! function_exists('form_fieldset'))
-{
 	function form_fieldset($legend_text = '', $attributes = array())
 	{
-		$fieldset = "<fieldset";
-
-		$fieldset .= _attributes_to_string($attributes, FALSE);
-
-		$fieldset .= ">\n";
-
-		if ($legend_text != '')
+		$fieldset = '<fieldset'._attributes_to_string($attributes).">\n";
+		if ($legend_text !== '')
 		{
-			$fieldset .= "<legend>$legend_text</legend>\n";
+			return $fieldset.'<legend>'.$legend_text."</legend>\n";
 		}
 
 		return $fieldset;
@@ -569,96 +621,59 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_fieldset_close'))
+{
 /**
  * Fieldset Close Tag
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('form_fieldset_close'))
-{
 	function form_fieldset_close($extra = '')
 	{
-		return "</fieldset>".$extra;
+		return '</fieldset>'.$extra;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_close'))
+{
 /**
  * Form Close Tag
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('form_close'))
-{
 	function form_close($extra = '')
 	{
-		return "</form>".$extra;
+		return '</form>'.$extra;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_prep'))
+{
 /**
  * Form Prep
  *
  * Formats text so that it can be safely placed in a form field in the event it has HTML tags.
  *
- * @access	public
- * @param	string
- * @return	string
+	 * @deprecated	3.0.0	An alias for html_escape()
+	 * @param	string|string[]	$str		Value to escape
+	 * @return	string|string[]	Escaped values
  */
-if ( ! function_exists('form_prep'))
-{
-	function form_prep($str = '', $field_name = '')
-	{
-		static $prepped_fields = array();
-
-		// if the field name is an array we do this recursively
-		if (is_array($str))
-		{
-			foreach ($str as $key => $val)
-			{
-				$str[$key] = form_prep($val);
-			}
-
-			return $str;
-		}
-
-		if ($str === '')
-		{
-			return '';
-		}
-
-		// we've already prepped a field with this name
-		// @todo need to figure out a way to namespace this so
-		// that we know the *exact* field and not just one with
-		// the same name
-		if (isset($prepped_fields[$field_name]))
-		{
-			return $str;
-		}
-
-		$str = htmlspecialchars($str);
-
-		// In case htmlspecialchars misses these.
-		$str = str_replace(array("'", '"'), array("&#39;", "&quot;"), $str);
-
-		if ($field_name != '')
+	function form_prep($str)
 		{
-			$prepped_fields[$field_name] = $field_name;
-		}
-
-		return $str;
+		return html_escape($str, TRUE);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_value'))
+{
 /**
  * Form Value
  *
@@ -666,209 +681,190 @@
  * re-populate an input field or textarea.  If Form Validation
  * is active it retrieves the info from the validation class
  *
- * @access	public
- * @param	string
- * @return	mixed
+	 * @param	string	$field		Field name
+	 * @param	string	$default	Default value
+	 * @param	bool	$html_escape	Whether to escape HTML special characters or not
+	 * @return	string
  */
-if ( ! function_exists('set_value'))
-{
-	function set_value($field = '', $default = '')
+	function set_value($field, $default = '', $html_escape = TRUE)
 	{
-		if (FALSE === ($OBJ =& _get_validation_object()))
-		{
-			if ( ! isset($_POST[$field]))
-			{
-				return $default;
-			}
+		$CI =& get_instance();
 
-			return form_prep($_POST[$field], $field);
-		}
+		$value = (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
+			? $CI->form_validation->set_value($field, $default)
+			: $CI->input->post($field, FALSE);
 
-		return form_prep($OBJ->set_value($field, $default), $field);
+		isset($value) OR $value = $default;
+		return ($html_escape) ? html_escape($value) : $value;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_select'))
+{
 /**
  * Set Select
  *
  * Let's you set the selected value of a <select> menu via data in the POST array.
  * If Form Validation is active it retrieves the info from the validation class
  *
- * @access	public
  * @param	string
  * @param	string
  * @param	bool
  * @return	string
  */
-if ( ! function_exists('set_select'))
+	function set_select($field, $value = '', $default = FALSE)
 {
-	function set_select($field = '', $value = '', $default = FALSE)
-	{
-		$OBJ =& _get_validation_object();
+		$CI =& get_instance();
 
-		if ($OBJ === FALSE)
-		{
-			if ( ! isset($_POST[$field]))
+		if (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
 			{
-				if (count($_POST) === 0 AND $default == TRUE)
-				{
-					return ' selected="selected"';
+			return $CI->form_validation->set_select($field, $value, $default);
 				}
-				return '';
+		elseif (($input = $CI->input->post($field, FALSE)) === NULL)
+		{
+			return ($default === TRUE) ? ' selected="selected"' : '';
 			}
 
-			$field = $_POST[$field];
-
-			if (is_array($field))
+		$value = (string) $value;
+		if (is_array($input))
 			{
-				if ( ! in_array($value, $field))
+			// Note: in_array('', array(0)) returns TRUE, do not use it
+			foreach ($input as &$v)
 				{
-					return '';
-				}
-			}
-			else
+				if ($value === $v)
 			{
-				if (($field == '' OR $value == '') OR ($field != $value))
-				{
-					return '';
+					return ' selected="selected"';
 				}
 			}
 
-			return ' selected="selected"';
+			return '';
 		}
 
-		return $OBJ->set_select($field, $value, $default);
+		return ($input === $value) ? ' selected="selected"' : '';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_checkbox'))
+{
 /**
  * Set Checkbox
  *
  * Let's you set the selected value of a checkbox via the value in the POST array.
  * If Form Validation is active it retrieves the info from the validation class
  *
- * @access	public
  * @param	string
  * @param	string
  * @param	bool
  * @return	string
  */
-if ( ! function_exists('set_checkbox'))
-{
-	function set_checkbox($field = '', $value = '', $default = FALSE)
+	function set_checkbox($field, $value = '', $default = FALSE)
 	{
-		$OBJ =& _get_validation_object();
+		$CI =& get_instance();
 
-		if ($OBJ === FALSE)
-		{
-			if ( ! isset($_POST[$field]))
-			{
-				if (count($_POST) === 0 AND $default == TRUE)
+		if (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
 				{
-					return ' checked="checked"';
-				}
-				return '';
+			return $CI->form_validation->set_checkbox($field, $value, $default);
 			}
 
-			$field = $_POST[$field];
+		// Form inputs are always strings ...
+		$value = (string) $value;
+		$input = $CI->input->post($field, FALSE);
 
-			if (is_array($field))
+		if (is_array($input))
 			{
-				if ( ! in_array($value, $field))
+			// Note: in_array('', array(0)) returns TRUE, do not use it
+			foreach ($input as &$v)
 				{
-					return '';
+				if ($value === $v)
+				{
+					return ' checked="checked"';
 				}
 			}
-			else
-			{
-				if (($field == '' OR $value == '') OR ($field != $value))
-				{
+
 					return '';
 				}
-			}
 
-			return ' checked="checked"';
+		// Unchecked checkbox and radio inputs are not even submitted by browsers ...
+		if ($CI->input->method() === 'post')
+		{
+			return ($input === $value) ? ' checked="checked"' : '';
 		}
 
-		return $OBJ->set_checkbox($field, $value, $default);
+		return ($default === TRUE) ? ' checked="checked"' : '';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_radio'))
+{
 /**
  * Set Radio
  *
  * Let's you set the selected value of a radio field via info in the POST array.
  * If Form Validation is active it retrieves the info from the validation class
  *
- * @access	public
- * @param	string
- * @param	string
- * @param	bool
+	 * @param	string	$field
+	 * @param	string	$value
+	 * @param	bool	$default
  * @return	string
  */
-if ( ! function_exists('set_radio'))
+	function set_radio($field, $value = '', $default = FALSE)
 {
-	function set_radio($field = '', $value = '', $default = FALSE)
-	{
-		$OBJ =& _get_validation_object();
+		$CI =& get_instance();
 
-		if ($OBJ === FALSE)
-		{
-			if ( ! isset($_POST[$field]))
+		if (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
 			{
-				if (count($_POST) === 0 AND $default == TRUE)
-				{
-					return ' checked="checked"';
-				}
-				return '';
+			return $CI->form_validation->set_radio($field, $value, $default);
 			}
 
-			$field = $_POST[$field];
+		// Form inputs are always strings ...
+		$value = (string) $value;
+		$input = $CI->input->post($field, FALSE);
 
-			if (is_array($field))
+		if (is_array($input))
 			{
-				if ( ! in_array($value, $field))
+			// Note: in_array('', array(0)) returns TRUE, do not use it
+			foreach ($input as &$v)
 				{
-					return '';
+				if ($value === $v)
+				{
+					return ' checked="checked"';
 				}
 			}
-			else
-			{
-				if (($field == '' OR $value == '') OR ($field != $value))
-				{
+
 					return '';
 				}
-			}
 
-			return ' checked="checked"';
+		// Unchecked checkbox and radio inputs are not even submitted by browsers ...
+		if ($CI->input->method() === 'post')
+		{
+			return ($input === $value) ? ' checked="checked"' : '';
 		}
 
-		return $OBJ->set_radio($field, $value, $default);
+		return ($default === TRUE) ? ' checked="checked"' : '';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('form_error'))
+{
 /**
  * Form Error
  *
  * Returns the error for a specific form field.  This is a helper for the
  * form validation class.
  *
- * @access	public
  * @param	string
  * @param	string
  * @param	string
  * @return	string
  */
-if ( ! function_exists('form_error'))
-{
 	function form_error($field = '', $prefix = '', $suffix = '')
 	{
 		if (FALSE === ($OBJ =& _get_validation_object()))
@@ -882,19 +878,18 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('validation_errors'))
+{
 /**
  * Validation Error String
  *
  * Returns all the errors associated with a form submission.  This is a helper
  * function for the form validation class.
  *
- * @access	public
  * @param	string
  * @param	string
  * @return	string
  */
-if ( ! function_exists('validation_errors'))
-{
 	function validation_errors($prefix = '', $suffix = '')
 	{
 		if (FALSE === ($OBJ =& _get_validation_object()))
@@ -908,18 +903,17 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('_parse_form_attributes'))
+{
 /**
  * Parse the form attributes
  *
  * Helper function used by some of the form helpers
  *
- * @access	private
- * @param	array
- * @param	array
+	 * @param	array	$attributes	List of attributes
+	 * @param	array	$default	Default values
  * @return	string
  */
-if ( ! function_exists('_parse_form_attributes'))
-{
 	function _parse_form_attributes($attributes, $default)
 	{
 		if (is_array($attributes))
@@ -943,9 +937,13 @@
 
 		foreach ($default as $key => $val)
 		{
-			if ($key == 'value')
+			if ($key === 'value')
+			{
+				$val = html_escape($val);
+			}
+			elseif ($key === 'name' && ! strlen($default['name']))
 			{
-				$val = form_prep($val, $default['name']);
+				continue;
 			}
 
 			$att .= $key . '="' . $val . '" ';
@@ -957,77 +955,61 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('_attributes_to_string'))
+{
 /**
  * Attributes To String
  *
  * Helper function used by some of the form helpers
  *
- * @access	private
  * @param	mixed
- * @param	bool
  * @return	string
  */
-if ( ! function_exists('_attributes_to_string'))
-{
-	function _attributes_to_string($attributes, $formtag = FALSE)
+	function _attributes_to_string($attributes)
 	{
-		if (is_string($attributes) AND strlen($attributes) > 0)
+		if (empty($attributes))
 		{
-			if ($formtag == TRUE AND strpos($attributes, 'method=') === FALSE)
-			{
-				$attributes .= ' method="post"';
-			}
-
-			if ($formtag == TRUE AND strpos($attributes, 'accept-charset=') === FALSE)
-			{
-				$attributes .= ' accept-charset="'.strtolower(config_item('charset')).'"';
-			}
-
-		return ' '.$attributes;
+			return '';
 		}
 
-		if (is_object($attributes) AND count($attributes) > 0)
+		if (is_object($attributes))
 		{
 			$attributes = (array)$attributes;
 		}
 
-		if (is_array($attributes) AND count($attributes) > 0)
+		if (is_array($attributes))
 		{
 			$atts = '';
 
-			if ( ! isset($attributes['method']) AND $formtag === TRUE)
+			foreach ($attributes as $key => $val)
 			{
-				$atts .= ' method="post"';
+				$atts .= ' '.$key.'="'.$val.'"';
 			}
 
-			if ( ! isset($attributes['accept-charset']) AND $formtag === TRUE)
-			{
-				$atts .= ' accept-charset="'.strtolower(config_item('charset')).'"';
+			return $atts;
 			}
 
-			foreach ($attributes as $key => $val)
+		if (is_string($attributes))
 			{
-				$atts .= ' '.$key.'="'.$val.'"';
+			return ' '.$attributes;
 			}
 
-			return $atts;
-		}
+		return FALSE;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('_get_validation_object'))
+{
 /**
  * Validation Object
  *
  * Determines what the form validation class was instantiated as, fetches
  * the object and returns it.
  *
- * @access	private
  * @return	mixed
  */
-if ( ! function_exists('_get_validation_object'))
-{
 	function &_get_validation_object()
 	{
 		$CI =& get_instance();
@@ -1048,7 +1030,3 @@
 		return $return;
 	}
 }
-
-
-/* End of file form_helper.php */
-/* Location: ./system/helpers/form_helper.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/html_helper.php opensourcepos/system/helpers/html_helper.php
--- pos-prod/system/helpers/html_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/html_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter HTML Helpers
@@ -21,46 +43,43 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/html_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/html_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('heading'))
+{
 /**
  * Heading
  *
- * Generates an HTML heading tag.  First param is the data.
- * Second param is the size of the heading tag.
+	 * Generates an HTML heading tag.
  *
- * @access	public
+	 * @param	string	content
+	 * @param	int	heading level
  * @param	string
- * @param	integer
  * @return	string
  */
-if ( ! function_exists('heading'))
-{
 	function heading($data = '', $h = '1', $attributes = '')
 	{
-		$attributes = ($attributes != '') ? ' '.$attributes : $attributes;
-		return "<h".$h.$attributes.">".$data."</h".$h.">";
+		return '<h'.$h._stringify_attributes($attributes).'>'.$data.'</h'.$h.'>';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('ul'))
+{
 /**
  * Unordered List
  *
  * Generates an HTML unordered list from an single or multi-dimensional array.
  *
- * @access	public
  * @param	array
  * @param	mixed
  * @return	string
  */
-if ( ! function_exists('ul'))
-{
 	function ul($list, $attributes = '')
 	{
 		return _list('ul', $list, $attributes);
@@ -69,18 +88,17 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('ol'))
+{
 /**
  * Ordered List
  *
  * Generates an HTML ordered list from an single or multi-dimensional array.
  *
- * @access	public
  * @param	array
  * @param	mixed
  * @return	string
  */
-if ( ! function_exists('ol'))
-{
 	function ol($list, $attributes = '')
 	{
 		return _list('ol', $list, $attributes);
@@ -89,21 +107,20 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('_list'))
+{
 /**
  * Generates the list
  *
  * Generates an HTML ordered list from an single or multi-dimensional array.
  *
- * @access	private
  * @param	string
  * @param	mixed
  * @param	mixed
- * @param	integer
+	 * @param	int
  * @return	string
  */
-if ( ! function_exists('_list'))
-{
-	function _list($type = 'ul', $list, $attributes = '', $depth = 0)
+	function _list($type = 'ul', $list = array(), $attributes = '', $depth = 0)
 	{
 		// If an array wasn't submitted there's nothing to do...
 		if ( ! is_array($list))
@@ -112,25 +129,10 @@
 		}
 
 		// Set the indentation based on the depth
-		$out = str_repeat(" ", $depth);
-
-		// Were any attributes submitted?  If so generate a string
-		if (is_array($attributes))
-		{
-			$atts = '';
-			foreach ($attributes as $key => $val)
-			{
-				$atts .= ' ' . $key . '="' . $val . '"';
-			}
-			$attributes = $atts;
-		}
-		elseif (is_string($attributes) AND strlen($attributes) > 0)
-		{
-			$attributes = ' '. $attributes;
-		}
-
+		$out = str_repeat(' ', $depth)
 		// Write the opening list tag
-		$out .= "<".$type.$attributes.">\n";
+			.'<'.$type._stringify_attributes($attributes).">\n";
+
 
 		// Cycle through the list elements.  If an array is
 		// encountered we will recursively call _list()
@@ -140,8 +142,7 @@
 		{
 			$_last_list_item = $key;
 
-			$out .= str_repeat(" ", $depth + 2);
-			$out .= "<li>";
+			$out .= str_repeat(' ', $depth + 2).'<li>';
 
 			if ( ! is_array($val))
 			{
@@ -149,55 +150,32 @@
 			}
 			else
 			{
-				$out .= $_last_list_item."\n";
-				$out .= _list($type, $val, '', $depth + 4);
-				$out .= str_repeat(" ", $depth + 2);
+				$out .= $_last_list_item."\n"._list($type, $val, '', $depth + 4).str_repeat(' ', $depth + 2);
 			}
 
 			$out .= "</li>\n";
 		}
 
-		// Set the indentation for the closing tag
-		$out .= str_repeat(" ", $depth);
-
-		// Write the closing list tag
-		$out .= "</".$type.">\n";
-
-		return $out;
+		// Set the indentation for the closing tag and apply it
+		return $out.str_repeat(' ', $depth).'</'.$type.">\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
-/**
- * Generates HTML BR tags based on number supplied
- *
- * @access	public
- * @param	integer
- * @return	string
- */
-if ( ! function_exists('br'))
-{
-	function br($num = 1)
+if ( ! function_exists('img'))
 	{
-		return str_repeat("<br />", $num);
-	}
-}
-
-// ------------------------------------------------------------------------
-
 /**
  * Image
  *
  * Generates an <img /> element
  *
- * @access	public
+	 * @param	mixed
+	 * @param	bool
  * @param	mixed
  * @return	string
  */
-if ( ! function_exists('img'))
-{
-	function img($src = '', $index_page = FALSE)
+	function img($src = '', $index_page = FALSE, $attributes = '')
 	{
 		if ( ! is_array($src) )
 		{
@@ -214,99 +192,89 @@
 
 		foreach ($src as $k=>$v)
 		{
-
-			if ($k == 'src' AND strpos($v, '://') === FALSE)
+			if ($k === 'src' && ! preg_match('#^([a-z]+:)?//#i', $v))
 			{
-				$CI =& get_instance();
-
 				if ($index_page === TRUE)
 				{
-					$img .= ' src="'.$CI->config->site_url($v).'"';
+					$img .= ' src="'.get_instance()->config->site_url($v).'"';
 				}
 				else
 				{
-					$img .= ' src="'.$CI->config->slash_item('base_url').$v.'"';
+					$img .= ' src="'.get_instance()->config->slash_item('base_url').$v.'"';
 				}
 			}
 			else
 			{
-				$img .= " $k=\"$v\"";
+				$img .= ' '.$k.'="'.$v.'"';
 			}
 		}
 
-		$img .= '/>';
-
-		return $img;
+		return $img._stringify_attributes($attributes).' />';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('doctype'))
+{
 /**
  * Doctype
  *
  * Generates a page document type declaration
  *
- * Valid options are xhtml-11, xhtml-strict, xhtml-trans, xhtml-frame,
- * html4-strict, html4-trans, and html4-frame.  Values are saved in the
- * doctypes config file.
+	 * Examples of valid options: html5, xhtml-11, xhtml-strict, xhtml-trans,
+	 * xhtml-frame, html4-strict, html4-trans, and html4-frame.
+	 * All values are saved in the doctypes config file.
  *
- * @access	public
  * @param	string	type	The doctype to be generated
  * @return	string
  */
-if ( ! function_exists('doctype'))
-{
 	function doctype($type = 'xhtml1-strict')
 	{
-		global $_doctypes;
+		static $doctypes;
 
-		if ( ! is_array($_doctypes))
+		if ( ! is_array($doctypes))
 		{
-			if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php'))
-			{
-				include(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php');
-			}
-			elseif (is_file(APPPATH.'config/doctypes.php'))
+			if (file_exists(APPPATH.'config/doctypes.php'))
 			{
 				include(APPPATH.'config/doctypes.php');
 			}
 
-			if ( ! is_array($_doctypes))
+			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php'))
 			{
-				return FALSE;
-			}
+				include(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php');
 		}
 
-		if (isset($_doctypes[$type]))
-		{
-			return $_doctypes[$type];
-		}
-		else
+			if (empty($_doctypes) OR ! is_array($_doctypes))
 		{
+				$doctypes = array();
 			return FALSE;
 		}
+
+			$doctypes = $_doctypes;
+		}
+
+		return isset($doctypes[$type]) ? $doctypes[$type] : FALSE;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('link_tag'))
+{
 /**
  * Link
  *
  * Generates link to a CSS file
  *
- * @access	public
  * @param	mixed	stylesheet hrefs or an array
  * @param	string	rel
  * @param	string	type
  * @param	string	title
  * @param	string	media
- * @param	boolean	should index_page be added to the css path
+	 * @param	bool	should index_page be added to the css path
  * @return	string
  */
-if ( ! function_exists('link_tag'))
-{
 	function link_tag($href = '', $rel = 'stylesheet', $type = 'text/css', $title = '', $media = '', $index_page = FALSE)
 	{
 		$CI =& get_instance();
@@ -317,7 +284,7 @@
 		{
 			foreach ($href as $k=>$v)
 			{
-				if ($k == 'href' AND strpos($v, '://') === FALSE)
+				if ($k === 'href' && ! preg_match('#^([a-z]+:)?//#i', $v))
 				{
 					if ($index_page === TRUE)
 					{
@@ -330,15 +297,13 @@
 				}
 				else
 				{
-					$link .= "$k=\"$v\" ";
+					$link .= $k.'="'.$v.'" ';
 				}
 			}
-
-			$link .= "/>";
 		}
 		else
 		{
-			if ( strpos($href, '://') !== FALSE)
+			if (preg_match('#^([a-z]+:)?//#i', $href))
 			{
 				$link .= 'href="'.$href.'" ';
 			}
@@ -353,35 +318,34 @@
 
 			$link .= 'rel="'.$rel.'" type="'.$type.'" ';
 
-			if ($media	!= '')
+			if ($media !== '')
 			{
 				$link .= 'media="'.$media.'" ';
 			}
 
-			if ($title	!= '')
+			if ($title !== '')
 			{
 				$link .= 'title="'.$title.'" ';
 			}
-
-			$link .= '/>';
 		}
 
-
-		return $link;
+		return $link."/>\n";
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('meta'))
+{
 /**
  * Generates meta tags from an array of key/values
  *
- * @access	public
  * @param	array
+	 * @param	string
+	 * @param	string
+	 * @param	string
  * @return	string
  */
-if ( ! function_exists('meta'))
-{
 	function meta($name = '', $content = '', $type = 'name', $newline = "\n")
 	{
 		// Since we allow the data to be passes as a string, a simple array
@@ -390,22 +354,19 @@
 		{
 			$name = array(array('name' => $name, 'content' => $content, 'type' => $type, 'newline' => $newline));
 		}
-		else
+		elseif (isset($name['name']))
 		{
 			// Turn single array into multidimensional
-			if (isset($name['name']))
-			{
 				$name = array($name);
 			}
-		}
 
 		$str = '';
 		foreach ($name as $meta)
 		{
-			$type		= ( ! isset($meta['type']) OR $meta['type'] == 'name') ? 'name' : 'http-equiv';
-			$name		= ( ! isset($meta['name']))		? ''	: $meta['name'];
-			$content	= ( ! isset($meta['content']))	? ''	: $meta['content'];
-			$newline	= ( ! isset($meta['newline']))	? "\n"	: $meta['newline'];
+			$type		= (isset($meta['type']) && $meta['type'] !== 'name')	? 'http-equiv' : 'name';
+			$name		= isset($meta['name'])					? $meta['name'] : '';
+			$content	= isset($meta['content'])				? $meta['content'] : '';
+			$newline	= isset($meta['newline'])				? $meta['newline'] : "\n";
 
 			$str .= '<meta '.$type.'="'.$name.'" content="'.$content.'" />'.$newline;
 		}
@@ -416,21 +377,34 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('br'))
+{
 /**
- * Generates non-breaking space entities based on number supplied
+	 * Generates HTML BR tags based on number supplied
  *
- * @access	public
- * @param	integer
+	 * @deprecated	3.0.0	Use str_repeat() instead
+	 * @param	int	$count	Number of times to repeat the tag
  * @return	string
  */
+	function br($count = 1)
+	{
+		return str_repeat('<br />', $count);
+	}
+}
+
+// ------------------------------------------------------------------------
+
 if ( ! function_exists('nbs'))
 {
+	/**
+	 * Generates non-breaking space entities based on number supplied
+	 *
+	 * @deprecated	3.0.0	Use str_repeat() instead
+	 * @param	int
+	 * @return	string
+	 */
 	function nbs($num = 1)
 	{
-		return str_repeat("&nbsp;", $num);
+		return str_repeat('&nbsp;', $num);
 	}
 }
-
-
-/* End of file html_helper.php */
-/* Location: ./system/helpers/html_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/index.html opensourcepos/system/helpers/index.html
--- pos-prod/system/helpers/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/index.html	2016-05-23 15:32:31.941838853 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/inflector_helper.php opensourcepos/system/helpers/inflector_helper.php
--- pos-prod/system/helpers/inflector_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/inflector_helper.php	2016-05-23 15:32:31.941838853 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Inflector Helpers
@@ -21,28 +43,31 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/directory_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/inflector_helper.html
  */
 
-
 // --------------------------------------------------------------------
 
+if ( ! function_exists('singular'))
+{
 /**
  * Singular
  *
  * Takes a plural word and makes it singular
  *
- * @access	public
- * @param	string
- * @return	str
+	 * @param	string	$str	Input string
+	 * @return	string
  */
-if ( ! function_exists('singular'))
-{
 	function singular($str)
 	{
 		$result = strval($str);
 
+		if ( ! is_countable($result))
+		{
+			return $result;
+		}
+
 		$singular_rules = array(
 			'/(matr)ices$/'         => '\1ix',
 			'/(vert|ind)ices$/'     => '\1ex',
@@ -70,7 +95,7 @@
 			'/(s)tatuses$/'         => '\1\2tatus',
 			'/(c)hildren$/'         => '\1\2hild',
 			'/(n)ews$/'             => '\1\2ews',
-			'/([^u])s$/'            => '\1',
+			'/([^us])s$/'		=> '\1'
 		);
 		
 		foreach ($singular_rules as $rule => $replacement)
@@ -88,23 +113,27 @@
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('plural'))
+{
 /**
  * Plural
  *
  * Takes a singular word and makes it plural
  *
- * @access	public
- * @param	string
- * @param	bool
- * @return	str
+	 * @param	string	$str	Input string
+	 * @return	string
  */
-if ( ! function_exists('plural'))
-{
-	function plural($str, $force = FALSE)
+	function plural($str)
 	{
 		$result = strval($str);
 	
+		if ( ! is_countable($result))
+		{
+			return $result;
+		}
+
 		$plural_rules = array(
+			'/(quiz)$/'                => '\1zes',      // quizzes
 			'/^(ox)$/'                 => '\1\2en',     // ox
 			'/([m|l])ouse$/'           => '\1ice',      // mouse, louse
 			'/(matr|vert|ind)ix|ex$/'  => '\1ices',     // matrix, vertex, index
@@ -119,7 +148,7 @@
 			'/(c)hild$/'               => '\1hildren',  // child
 			'/(buffal|tomat)o$/'       => '\1\2oes',    // buffalo, tomato
 			'/(bu|campu)s$/'           => '\1\2ses',    // bus, campus
-			'/(alias|status|virus)/'   => '\1es',       // alias
+			'/(alias|status|virus)$/'  => '\1es',       // alias
 			'/(octop)us$/'             => '\1i',        // octopus
 			'/(ax|cris|test)is$/'      => '\1es',       // axis, crisis
 			'/s$/'                     => 's',          // no change (compatibility)
@@ -141,63 +170,77 @@
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('camelize'))
+{
 /**
  * Camelize
  *
  * Takes multiple words separated by spaces or underscores and camelizes them
  *
- * @access	public
- * @param	string
- * @return	str
+	 * @param	string	$str	Input string
+	 * @return	string
  */
-if ( ! function_exists('camelize'))
-{
 	function camelize($str)
 	{
-		$str = 'x'.strtolower(trim($str));
-		$str = ucwords(preg_replace('/[\s_]+/', ' ', $str));
-		return substr(str_replace(' ', '', $str), 1);
+		return strtolower($str[0]).substr(str_replace(' ', '', ucwords(preg_replace('/[\s_]+/', ' ', $str))), 1);
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('underscore'))
+{
 /**
  * Underscore
  *
  * Takes multiple words separated by spaces and underscores them
  *
- * @access	public
- * @param	string
- * @return	str
+	 * @param	string	$str	Input string
+	 * @return	string
  */
-if ( ! function_exists('underscore'))
-{
 	function underscore($str)
 	{
-		return preg_replace('/[\s]+/', '_', strtolower(trim($str)));
+		return preg_replace('/[\s]+/', '_', trim(MB_ENABLED ? mb_strtolower($str) : strtolower($str)));
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('humanize'))
+{
 /**
  * Humanize
  *
- * Takes multiple words separated by underscores and changes them to spaces
+	 * Takes multiple words separated by the separator and changes them to spaces
  *
- * @access	public
- * @param	string
- * @return	str
+	 * @param	string	$str		Input string
+	 * @param 	string	$separator	Input separator
+	 * @return	string
  */
-if ( ! function_exists('humanize'))
+	function humanize($str, $separator = '_')
 {
-	function humanize($str)
-	{
-		return ucwords(preg_replace('/[_]+/', ' ', strtolower(trim($str))));
+		return ucwords(preg_replace('/['.preg_quote($separator).']+/', ' ', trim(MB_ENABLED ? mb_strtolower($str) : strtolower($str))));
 	}
 }
 
+// --------------------------------------------------------------------
 
-/* End of file inflector_helper.php */
-/* Location: ./system/helpers/inflector_helper.php */
\ No newline at end of file
+if ( ! function_exists('is_countable'))
+{
+	/**
+	 * Checks if the given word has a plural version.
+	 *
+	 * @param	string	$word	Word to check
+	 * @return	bool
+	 */
+	function is_countable($word)
+	{
+		return ! in_array(
+			strtolower($word),
+			array(
+				'equipment', 'information', 'rice', 'money',
+				'species', 'series', 'fish', 'meta'
+			)
+		);
+	}
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/language_helper.php opensourcepos/system/helpers/language_helper.php
--- pos-prod/system/helpers/language_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/language_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Language Helpers
@@ -21,38 +43,33 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/language_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/language_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('lang'))
+{
 /**
  * Lang
  *
  * Fetches a language variable and optionally outputs a form label
  *
- * @access	public
- * @param	string	the language line
- * @param	string	the id of the form element
+	 * @param	string	$line		The language line
+	 * @param	string	$for		The "for" value (id of the form element)
+	 * @param	array	$attributes	Any additional HTML attributes
  * @return	string
  */
-if ( ! function_exists('lang'))
+	function lang($line, $for = '', $attributes = array())
 {
-	function lang($line, $id = '')
-	{
-		$CI =& get_instance();
-		$line = $CI->lang->line($line);
+		$line = get_instance()->lang->line($line);
 
-		if ($id != '')
+		if ($for !== '')
 		{
-			$line = '<label for="'.$id.'">'.$line."</label>";
+			$line = '<label for="'.$for.'"'._stringify_attributes($attributes).'>'.$line.'</label>';
 		}
 
 		return $line;
 	}
 }
-
-// ------------------------------------------------------------------------
-/* End of file language_helper.php */
-/* Location: ./system/helpers/language_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/number_helper.php opensourcepos/system/helpers/number_helper.php
--- pos-prod/system/helpers/number_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/number_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Number Helpers
@@ -21,21 +43,21 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/number_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/number_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('byte_format'))
+{
 /**
  * Formats a numbers as bytes, based on size, and adds the appropriate suffix
  *
- * @access	public
- * @param	mixed	// will be cast as int
+	 * @param	mixed	will be cast as int
+	 * @param	int
  * @return	string
  */
-if ( ! function_exists('byte_format'))
-{
 	function byte_format($num, $precision = 1)
 	{
 		$CI =& get_instance();
@@ -70,7 +92,3 @@
 		return number_format($num, $precision).' '.$unit;
 	}
 }
-
-
-/* End of file number_helper.php */
-/* Location: ./system/helpers/number_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/path_helper.php opensourcepos/system/helpers/path_helper.php
--- pos-prod/system/helpers/path_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/path_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Path Helpers
@@ -21,52 +43,40 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/xml_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/path_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('set_realpath'))
+{
 /**
  * Set Realpath
  *
- * @access	public
  * @param	string
  * @param	bool	checks to see if the path exists
  * @return	string
  */
-if ( ! function_exists('set_realpath'))
-{
 	function set_realpath($path, $check_existance = FALSE)
 	{
 		// Security check to make sure the path is NOT a URL.  No remote file inclusion!
-		if (preg_match("#^(http:\/\/|https:\/\/|www\.|ftp|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})#i", $path))
+		if (preg_match('#^(http:\/\/|https:\/\/|www\.|ftp)#i', $path) OR filter_var($path, FILTER_VALIDATE_IP) === $path )
 		{
 			show_error('The path you submitted must be a local server path, not a URL');
 		}
 
 		// Resolve the path
-		if (function_exists('realpath') AND @realpath($path) !== FALSE)
+		if (realpath($path) !== FALSE)
 		{
-			$path = realpath($path).'/';
+			$path = realpath($path);
 		}
-
-		// Add a trailing slash
-		$path = preg_replace("#([^/])/*$#", "\\1/", $path);
-
-		// Make sure the path exists
-		if ($check_existance == TRUE)
-		{
-			if ( ! is_dir($path))
+		elseif ($check_existance && ! is_dir($path) && ! is_file($path))
 			{
 				show_error('Not a valid path: '.$path);
 			}
-		}
 
-		return $path;
+		// Add a trailing slash, if this is a directory
+		return is_dir($path) ? rtrim($path, DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR : $path;
 	}
 }
-
-
-/* End of file path_helper.php */
-/* Location: ./system/helpers/path_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/security_helper.php opensourcepos/system/helpers/security_helper.php
--- pos-prod/system/helpers/security_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/security_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Security Helpers
@@ -21,108 +43,95 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/security_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/security_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('xss_clean'))
+{
 /**
  * XSS Filtering
  *
- * @access	public
  * @param	string
  * @param	bool	whether or not the content is an image file
  * @return	string
  */
-if ( ! function_exists('xss_clean'))
-{
 	function xss_clean($str, $is_image = FALSE)
 	{
-		$CI =& get_instance();
-		return $CI->security->xss_clean($str, $is_image);
+		return get_instance()->security->xss_clean($str, $is_image);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('sanitize_filename'))
+{
 /**
  * Sanitize Filename
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('sanitize_filename'))
-{
 	function sanitize_filename($filename)
 	{
-		$CI =& get_instance();
-		return $CI->security->sanitize_filename($filename);
+		return get_instance()->security->sanitize_filename($filename);
 	}
 }
 
 // --------------------------------------------------------------------
 
+if ( ! function_exists('do_hash'))
+{
 /**
  * Hash encode a string
  *
- * @access	public
- * @param	string
+	 * @todo	Remove in version 3.1+.
+	 * @deprecated	3.0.0	Use PHP's native hash() instead.
+	 * @param	string	$str
+	 * @param	string	$type = 'sha1'
  * @return	string
  */
-if ( ! function_exists('do_hash'))
-{
 	function do_hash($str, $type = 'sha1')
 	{
-		if ($type == 'sha1')
-		{
-			return sha1($str);
-		}
-		else
+		if ( ! in_array(strtolower($type), hash_algos()))
 		{
-			return md5($str);
+			$type = 'md5';
 		}
+
+		return hash($type, $str);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('strip_image_tags'))
+{
 /**
  * Strip Image Tags
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('strip_image_tags'))
-{
 	function strip_image_tags($str)
 	{
-		$str = preg_replace("#<img\s+.*?src\s*=\s*[\"'](.+?)[\"'].*?\>#", "\\1", $str);
-		$str = preg_replace("#<img\s+.*?src\s*=\s*(.+?).*?\>#", "\\1", $str);
-
-		return $str;
+		return get_instance()->security->strip_image_tags($str);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('encode_php_tags'))
+{
 /**
  * Convert PHP tags to entities
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('encode_php_tags'))
-{
 	function encode_php_tags($str)
 	{
-		return str_replace(array('<?php', '<?PHP', '<?', '?>'),  array('&lt;?php', '&lt;?PHP', '&lt;?', '?&gt;'), $str);
+		return str_replace(array('<?', '?>'), array('&lt;?', '?&gt;'), $str);
 	}
 }
-
-
-/* End of file security_helper.php */
-/* Location: ./system/helpers/security_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/smiley_helper.php opensourcepos/system/helpers/smiley_helper.php
--- pos-prod/system/helpers/smiley_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/smiley_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Smiley Helpers
@@ -21,25 +43,26 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/smiley_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/smiley_helper.html
+ * @deprecated	3.0.0	This helper is too specific for CI.
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('smiley_js'))
+{
 /**
  * Smiley Javascript
  *
  * Returns the javascript required for the smiley insertion.  Optionally takes
  * an array of aliases to loosely couple the smiley array to the view.
  *
- * @access	public
  * @param	mixed	alias name or array of alias->field_id pairs
  * @param	string	field_id if alias name was passed in
+	 * @param	bool
  * @return	array
  */
-if ( ! function_exists('smiley_js'))
-{
 	function smiley_js($alias = '', $field_id = '', $inline = TRUE)
 	{
 		static $do_setup = TRUE;
@@ -43,10 +66,9 @@
 	function smiley_js($alias = '', $field_id = '', $inline = TRUE)
 	{
 		static $do_setup = TRUE;
-
 		$r = '';
 
-		if ($alias != '' && ! is_array($alias))
+		if ($alias !== '' && ! is_array($alias))
 		{
 			$alias = array($alias => $field_id);
 		}
@@ -97,46 +118,37 @@
 				}
 EOF;
 		}
-		else
-		{
-			if (is_array($alias))
+		elseif (is_array($alias))
 			{
 				foreach ($alias as $name => $id)
 				{
-					$r .= 'smiley_map["'.$name.'"] = "'.$id.'";'."\n";
-				}
+				$r .= 'smiley_map["'.$name.'"] = "'.$id."\";\n";
 			}
 		}
 
-		if ($inline)
-		{
-			return '<script type="text/javascript" charset="utf-8">/*<![CDATA[ */'.$r.'// ]]></script>';
-		}
-		else
-		{
-			return $r;
-		}
+		return ($inline)
+			? '<script type="text/javascript" charset="utf-8">/*<![CDATA[ */'.$r.'// ]]></script>'
+			: $r;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('get_clickable_smileys'))
+{
 /**
  * Get Clickable Smileys
  *
  * Returns an array of image tag links that can be clicked to be inserted
  * into a form field.
  *
- * @access	public
  * @param	string	the URL to the folder containing the smiley images
+	 * @param	array
  * @return	array
  */
-if ( ! function_exists('get_clickable_smileys'))
-{
-	function get_clickable_smileys($image_url, $alias = '', $smileys = NULL)
+	function get_clickable_smileys($image_url, $alias = '')
 	{
 		// For backward compatibility with js_insert_smiley
-
 		if (is_array($alias))
 		{
 			$smileys = $alias;
@@ -141,13 +153,9 @@
 		{
 			$smileys = $alias;
 		}
-
-		if ( ! is_array($smileys))
+		elseif (FALSE === ($smileys = _get_smiley_array()))
 		{
-			if (FALSE === ($smileys = _get_smiley_array()))
-			{
-				return $smileys;
-			}
+			return FALSE;
 		}
 
 		// Add a trailing slash to the file path if needed
@@ -165,8 +173,7 @@
 				continue;
 			}
 
-			$link[] = "<a href=\"javascript:void(0);\" onclick=\"insert_smiley('".$key."', '".$alias."')\"><img src=\"".$image_url.$smileys[$key][0]."\" width=\"".$smileys[$key][1]."\" height=\"".$smileys[$key][2]."\" alt=\"".$smileys[$key][3]."\" style=\"border:0;\" /></a>";
-
+			$link[] = '<a href="javascript:void(0);" onclick="insert_smiley(\''.$key.'\', \''.$alias.'\')"><img src="'.$image_url.$smileys[$key][0].'" alt="'.$smileys[$key][3].'" style="width: '.$smileys[$key][1].'; height: '.$smileys[$key][2].'; border: 0;" /></a>';
 			$used[$smileys[$key][0]] = TRUE;
 		}
 
@@ -176,39 +183,31 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('parse_smileys'))
+{
 /**
  * Parse Smileys
  *
  * Takes a string as input and swaps any contained smileys for the actual image
  *
- * @access	public
  * @param	string	the text to be parsed
  * @param	string	the URL to the folder containing the smiley images
+	 * @param	array
  * @return	string
  */
-if ( ! function_exists('parse_smileys'))
-{
 	function parse_smileys($str = '', $image_url = '', $smileys = NULL)
 	{
-		if ($image_url == '')
+		if ($image_url === '' OR ( ! is_array($smileys) && FALSE === ($smileys = _get_smiley_array())))
 		{
 			return $str;
 		}
 
-		if ( ! is_array($smileys))
-		{
-			if (FALSE === ($smileys = _get_smiley_array()))
-			{
-				return $str;
-			}
-		}
-
 		// Add a trailing slash to the file path if needed
-		$image_url = preg_replace("/(.+?)\/*$/", "\\1/",  $image_url);
+		$image_url = rtrim($image_url, '/').'/';
 
 		foreach ($smileys as $key => $val)
 		{
-			$str = str_replace($key, "<img src=\"".$image_url.$smileys[$key][0]."\" width=\"".$smileys[$key][1]."\" height=\"".$smileys[$key][2]."\" alt=\"".$smileys[$key][3]."\" style=\"border:0;\" />", $str);
+			$str = str_replace($key, '<img src="'.$image_url.$smileys[$key][0].'" alt="'.$smileys[$key][3].'" style="width: '.$smileys[$key][1].'; height: '.$smileys[$key][2].'; border: 0;" />', $str);
 		}
 
 		return $str;
@@ -217,65 +216,40 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('_get_smiley_array'))
+{
 /**
  * Get Smiley Array
  *
  * Fetches the config/smiley.php file
  *
- * @access	private
  * @return	mixed
  */
-if ( ! function_exists('_get_smiley_array'))
-{
 	function _get_smiley_array()
 	{
-		if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/smileys.php'))
+		static $_smileys;
+
+		if ( ! is_array($_smileys))
 		{
-		    include(APPPATH.'config/'.ENVIRONMENT.'/smileys.php');
-		}
-		elseif (file_exists(APPPATH.'config/smileys.php'))
+			if (file_exists(APPPATH.'config/smileys.php'))
 		{
 			include(APPPATH.'config/smileys.php');
 		}
 		
-		if (isset($smileys) AND is_array($smileys))
+			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/smileys.php'))
 		{
-			return $smileys;
+				include(APPPATH.'config/'.ENVIRONMENT.'/smileys.php');
 		}
 
+			if (empty($smileys) OR ! is_array($smileys))
+			{
+				$_smileys = array();
 		return FALSE;
 	}
-}
-
-// ------------------------------------------------------------------------
 
-/**
- * JS Insert Smiley
- *
- * Generates the javascript function needed to insert smileys into a form field
- *
- * DEPRECATED as of version 1.7.2, use smiley_js instead
- *
- * @access	public
- * @param	string	form name
- * @param	string	field name
- * @return	string
- */
-if ( ! function_exists('js_insert_smiley'))
-{
-	function js_insert_smiley($form_name = '', $form_field = '')
-	{
-		return <<<EOF
-<script type="text/javascript">
-	function insert_smiley(smiley)
-	{
-		document.{$form_name}.{$form_field}.value += " " + smiley;
+			$_smileys = $smileys;
 	}
-</script>
-EOF;
+
+		return $_smileys;
 	}
 }
-
-
-/* End of file smiley_helper.php */
-/* Location: ./system/helpers/smiley_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/string_helper.php opensourcepos/system/helpers/string_helper.php
--- pos-prod/system/helpers/string_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/string_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter String Helpers
@@ -21,12 +43,14 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/string_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/string_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('trim_slashes'))
+{
 /**
  * Trim Slashes
  *
@@ -38,12 +62,12 @@
  *
  * this/that/theother
  *
- * @access	public
+	 * @todo	Remove in version 3.1+.
+	 * @deprecated	3.0.0	This is just an alias for PHP's native trim()
+	 *
  * @param	string
  * @return	string
  */
-if ( ! function_exists('trim_slashes'))
-{
 	function trim_slashes($str)
 	{
 		return trim($str, '/');
@@ -52,30 +76,27 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('strip_slashes'))
+{
 /**
  * Strip Slashes
  *
  * Removes slashes contained in a string or in an array
  *
- * @access	public
  * @param	mixed	string or array
  * @return	mixed	string or array
  */
-if ( ! function_exists('strip_slashes'))
-{
 	function strip_slashes($str)
 	{
-		if (is_array($str))
+		if ( ! is_array($str))
 		{
+			return stripslashes($str);
+		}
+
 			foreach ($str as $key => $val)
 			{
 				$str[$key] = strip_slashes($val);
 			}
-		}
-		else
-		{
-			$str = stripslashes($str);
-		}
 
 		return $str;
 	}
@@ -83,17 +104,16 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('strip_quotes'))
+{
 /**
  * Strip Quotes
  *
  * Removes single and double quotes from a string
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('strip_quotes'))
-{
 	function strip_quotes($str)
 	{
 		return str_replace(array('"', "'"), '', $str);
@@ -102,17 +122,16 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('quotes_to_entities'))
+{
 /**
  * Quotes to Entities
  *
  * Converts single and double quotes to entities
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('quotes_to_entities'))
-{
 	function quotes_to_entities($str)
 	{
 		return str_replace(array("\'","\"","'",'"'), array("&#39;","&quot;","&#39;","&quot;"), $str);
@@ -121,6 +140,8 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('reduce_double_slashes'))
+{
 /**
  * Reduce Double Slashes
  *
@@ -133,20 +154,19 @@
  *
  * http://www.some-site.com/index.php
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('reduce_double_slashes'))
-{
 	function reduce_double_slashes($str)
 	{
-		return preg_replace("#(^|[^:])//+#", "\\1/", $str);
+		return preg_replace('#(^|[^:])//+#', '\\1/', $str);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('reduce_multiples'))
+{
 /**
  * Reduce Multiples
  *
@@ -158,47 +178,37 @@
  *
  * Fred, Bill, Joe, Jimmy
  *
- * @access	public
  * @param	string
  * @param	string	the character you wish to reduce
  * @param	bool	TRUE/FALSE - whether to trim the character from the beginning/end
  * @return	string
  */
-if ( ! function_exists('reduce_multiples'))
-{
 	function reduce_multiples($str, $character = ',', $trim = FALSE)
 	{
 		$str = preg_replace('#'.preg_quote($character, '#').'{2,}#', $character, $str);
-
-		if ($trim === TRUE)
-		{
-			$str = trim($str, $character);
-		}
-
-		return $str;
+		return ($trim === TRUE) ? trim($str, $character) : $str;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('random_string'))
+{
 /**
  * Create a Random String
  *
  * Useful for generating passwords or hashes.
  *
- * @access	public
- * @param	string	type of random string.  basic, alpha, alunum, numeric, nozero, unique, md5, encrypt and sha1
- * @param	integer	number of characters
+	 * @param	string	type of random string.  basic, alpha, alnum, numeric, nozero, unique, md5, encrypt and sha1
+	 * @param	int	number of characters
  * @return	string
  */
-if ( ! function_exists('random_string'))
-{
 	function random_string($type = 'alnum', $len = 8)
 	{
 		switch($type)
 		{
-			case 'basic'	: return mt_rand();
-				break;
+			case 'basic':
+				return mt_rand();
 			case 'alnum'	:
 			case 'numeric'	:
 			case 'nozero'	:
@@ -203,78 +213,68 @@
 			case 'numeric'	:
 			case 'nozero'	:
 			case 'alpha'	:
-
 					switch ($type)
 					{
-						case 'alpha'	:	$pool = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
+					case 'alpha':
+						$pool = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
 							break;
-						case 'alnum'	:	$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
+					case 'alnum':
+						$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
 							break;
-						case 'numeric'	:	$pool = '0123456789';
+					case 'numeric':
+						$pool = '0123456789';
 							break;
-						case 'nozero'	:	$pool = '123456789';
+					case 'nozero':
+						$pool = '123456789';
 							break;
 					}
-
-					$str = '';
-					for ($i=0; $i < $len; $i++)
-					{
-						$str .= substr($pool, mt_rand(0, strlen($pool) -1), 1);
-					}
-					return $str;
-				break;
-			case 'unique'	:
+				return substr(str_shuffle(str_repeat($pool, ceil($len / strlen($pool)))), 0, $len);
+			case 'unique': // todo: remove in 3.1+
 			case 'md5'		:
-
 						return md5(uniqid(mt_rand()));
-				break;
-			case 'encrypt'	:
+			case 'encrypt': // todo: remove in 3.1+
 			case 'sha1'	:
-
-						$CI =& get_instance();
-						$CI->load->helper('security');
-
-						return do_hash(uniqid(mt_rand(), TRUE), 'sha1');
-				break;
+				return sha1(uniqid(mt_rand(), TRUE));
 		}
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('increment_string'))
+{
 /**
  * Add's _1 to a string or increment the ending number to allow _2, _3, etc
  *
- * @param   string  $str  required
- * @param   string  $separator  What should the duplicate number be appended with
- * @param   string  $first  Which number should be used for the first dupe increment
+	 * @param	string	required
+	 * @param	string	What should the duplicate number be appended with
+	 * @param	string	Which number should be used for the first dupe increment
  * @return  string
  */
 function increment_string($str, $separator = '_', $first = 1)
 {
-	preg_match('/(.+)'.$separator.'([0-9]+)$/', $str, $match);
-
+		preg_match('/(.+)'.preg_quote($separator, '/').'([0-9]+)$/', $str, $match);
 	return isset($match[2]) ? $match[1].$separator.($match[2] + 1) : $str.$separator.$first;
 }
+}
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('alternator'))
+{
 /**
  * Alternator
  *
  * Allows strings to be alternated.  See docs...
  *
- * @access	public
  * @param	string (as many parameters as needed)
  * @return	string
  */
-if ( ! function_exists('alternator'))
-{
 	function alternator()
 	{
 		static $i;
 
-		if (func_num_args() == 0)
+		if (func_num_args() === 0)
 		{
 			$i = 0;
 			return '';
@@ -286,22 +287,20 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('repeater'))
+{
 /**
  * Repeater function
  *
- * @access	public
- * @param	string
- * @param	integer	number of repeats
+	 * @todo	Remove in version 3.1+.
+	 * @deprecated	3.0.0	This is just an alias for PHP's native str_repeat()
+	 *
+	 * @param	string	$data	String to repeat
+	 * @param	int	$num	Number of repeats
  * @return	string
  */
-if ( ! function_exists('repeater'))
-{
 	function repeater($data, $num = 1)
 	{
-		return (($num > 0) ? str_repeat($data, $num) : '');
+		return ($num > 0) ? str_repeat($data, $num) : '';
 	}
 }
-
-
-/* End of file string_helper.php */
-/* Location: ./system/helpers/string_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/text_helper.php opensourcepos/system/helpers/text_helper.php
--- pos-prod/system/helpers/text_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/text_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Text Helpers
@@ -21,35 +43,34 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/text_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/text_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('word_limiter'))
+{
 /**
  * Word Limiter
  *
  * Limits a string to X number of words.
  *
- * @access	public
  * @param	string
- * @param	integer
+	 * @param	int
  * @param	string	the end character. Usually an ellipsis
  * @return	string
  */
-if ( ! function_exists('word_limiter'))
-{
 	function word_limiter($str, $limit = 100, $end_char = '&#8230;')
 	{
-		if (trim($str) == '')
+		if (trim($str) === '')
 		{
 			return $str;
 		}
 
 		preg_match('/^\s*+(?:\S++\s*+){1,'.(int) $limit.'}/', $str, $matches);
 
-		if (strlen($str) == strlen($matches[0]))
+		if (strlen($str) === strlen($matches[0]))
 		{
 			$end_char = '';
 		}
@@ -60,43 +81,43 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('character_limiter'))
+{
 /**
  * Character Limiter
  *
  * Limits the string based on the character count.  Preserves complete words
  * so the character count may not be exactly as specified.
  *
- * @access	public
  * @param	string
- * @param	integer
+	 * @param	int
  * @param	string	the end character. Usually an ellipsis
  * @return	string
  */
-if ( ! function_exists('character_limiter'))
-{
 	function character_limiter($str, $n = 500, $end_char = '&#8230;')
 	{
-		if (strlen($str) < $n)
+		if (mb_strlen($str) < $n)
 		{
 			return $str;
 		}
 
-		$str = preg_replace("/\s+/", ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
+		// a bit complicated, but faster than preg_replace with \s+
+		$str = preg_replace('/ {2,}/', ' ', str_replace(array("\r", "\n", "\t", "\x0B", "\x0C"), ' ', $str));
 
-		if (strlen($str) <= $n)
+		if (mb_strlen($str) <= $n)
 		{
 			return $str;
 		}
 
-		$out = "";
+		$out = '';
 		foreach (explode(' ', trim($str)) as $val)
 		{
 			$out .= $val.' ';
 
-			if (strlen($out) >= $n)
+			if (mb_strlen($out) >= $n)
 			{
 				$out = trim($out);
-				return (strlen($out) == strlen($str)) ? $out : $out.$end_char;
+				return (mb_strlen($out) === mb_strlen($str)) ? $out : $out.$end_char;
 			}
 		}
 	}
@@ -104,24 +125,20 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('ascii_to_entities'))
+{
 /**
  * High ASCII to Entities
  *
  * Converts High ascii text and MS Word special characters to character entities
  *
- * @access	public
- * @param	string
+	 * @param	string	$str
  * @return	string
  */
-if ( ! function_exists('ascii_to_entities'))
-{
 	function ascii_to_entities($str)
 	{
-		$count	= 1;
 		$out	= '';
-		$temp	= array();
-
-		for ($i = 0, $s = strlen($str); $i < $s; $i++)
+		for ($i = 0, $s = strlen($str) - 1, $count = 1, $temp = array(); $i <= $s; $i++)
 		{
 			$ordinal = ord($str[$i]);
 
@@ -131,7 +148,7 @@
 					If the $temp array has a value but we have moved on, then it seems only
 					fair that we output that entity and restart $temp before continuing. -Paul
 				*/
-				if (count($temp) == 1)
+				if (count($temp) === 1)
 				{
 					$out  .= '&#'.array_shift($temp).';';
 					$count = 1;
@@ -141,21 +158,28 @@
 			}
 			else
 			{
-				if (count($temp) == 0)
+				if (count($temp) === 0)
 				{
 					$count = ($ordinal < 224) ? 2 : 3;
 				}
 
 				$temp[] = $ordinal;
 
-				if (count($temp) == $count)
+				if (count($temp) === $count)
 				{
-					$number = ($count == 3) ? (($temp['0'] % 16) * 4096) + (($temp['1'] % 64) * 64) + ($temp['2'] % 64) : (($temp['0'] % 32) * 64) + ($temp['1'] % 64);
+					$number = ($count === 3)
+						? (($temp[0] % 16) * 4096) + (($temp[1] % 64) * 64) + ($temp[2] % 64)
+						: (($temp[0] % 32) * 64) + ($temp[1] % 64);
 
 					$out .= '&#'.$number.';';
 					$count = 1;
 					$temp = array();
 				}
+				// If this is the last iteration, just output whatever we have
+				elseif ($i === $s)
+				{
+					$out .= '&#'.implode(';', $temp).';';
+				}
 			}
 		}
 
@@ -165,26 +189,24 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('entities_to_ascii'))
+{
 /**
  * Entities to ASCII
  *
  * Converts character entities back to ASCII
  *
- * @access	public
  * @param	string
  * @param	bool
  * @return	string
  */
-if ( ! function_exists('entities_to_ascii'))
-{
 	function entities_to_ascii($str, $all = TRUE)
 	{
 		if (preg_match_all('/\&#(\d+)\;/', $str, $matches))
 		{
-			for ($i = 0, $s = count($matches['0']); $i < $s; $i++)
+			for ($i = 0, $s = count($matches[0]); $i < $s; $i++)
 			{
-				$digits = $matches['1'][$i];
-
+				$digits = $matches[1][$i];
 				$out = '';
 
 				if ($digits < 128)
@@ -194,25 +216,26 @@
 				}
 				elseif ($digits < 2048)
 				{
-					$out .= chr(192 + (($digits - ($digits % 64)) / 64));
-					$out .= chr(128 + ($digits % 64));
+					$out .= chr(192 + (($digits - ($digits % 64)) / 64)).chr(128 + ($digits % 64));
 				}
 				else
 				{
-					$out .= chr(224 + (($digits - ($digits % 4096)) / 4096));
-					$out .= chr(128 + ((($digits % 4096) - ($digits % 64)) / 64));
-					$out .= chr(128 + ($digits % 64));
+					$out .= chr(224 + (($digits - ($digits % 4096)) / 4096))
+						.chr(128 + ((($digits % 4096) - ($digits % 64)) / 64))
+						.chr(128 + ($digits % 64));
 				}
 
-				$str = str_replace($matches['0'][$i], $out, $str);
+				$str = str_replace($matches[0][$i], $out, $str);
 			}
 		}
 
 		if ($all)
 		{
-			$str = str_replace(array("&amp;", "&lt;", "&gt;", "&quot;", "&apos;", "&#45;"),
-								array("&","<",">","\"", "'", "-"),
-								$str);
+			return str_replace(
+				array('&amp;', '&lt;', '&gt;', '&quot;', '&apos;', '&#45;'),
+				array('&', '<', '>', '"', "'", '-'),
+				$str
+			);
 		}
 
 		return $str;
@@ -221,6 +244,8 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('word_censor'))
+{
 /**
  * Word Censoring Function
  *
@@ -228,14 +253,11 @@
  * matched words will be converted to #### or to the replacement
  * word you've submitted.
  *
- * @access	public
  * @param	string	the text string
- * @param	string	the array of censoered words
+	 * @param	string	the array of censored words
  * @param	string	the optional replacement value
  * @return	string
  */
-if ( ! function_exists('word_censor'))
-{
 	function word_censor($str, $censored, $replacement = '')
 	{
 		if ( ! is_array($censored))
@@ -253,13 +275,28 @@
 
 		foreach ($censored as $badword)
 		{
-			if ($replacement != '')
+			$badword = str_replace('\*', '\w*?', preg_quote($badword, '/'));
+			if ($replacement !== '')
 			{
-				$str = preg_replace("/({$delim})(".str_replace('\*', '\w*?', preg_quote($badword, '/')).")({$delim})/i", "\\1{$replacement}\\3", $str);
+				$str = preg_replace(
+					"/({$delim})(".$badword.")({$delim})/i",
+					"\\1{$replacement}\\3",
+					$str
+				);
+			}
+			elseif (preg_match_all("/{$delim}(".$badword."){$delim}/i", $str, $matches, PREG_PATTERN_ORDER | PREG_OFFSET_CAPTURE))
+			{
+				$matches = $matches[1];
+				for ($i = count($matches) - 1; $i >= 0; $i--)
+				{
+					$length = strlen($matches[$i][0]);
+					$str = substr_replace(
+						$str,
+						str_repeat('#', $length),
+						$matches[$i][1],
+						$length
+					);
 			}
-			else
-			{
-				$str = preg_replace("/({$delim})(".str_replace('\*', '\w*?', preg_quote($badword, '/')).")({$delim})/ie", "'\\1'.str_repeat('#', strlen('\\2')).'\\3'", $str);
 			}
 		}
 
@@ -269,123 +306,128 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('highlight_code'))
+{
 /**
  * Code Highlighter
  *
  * Colorizes code strings
  *
- * @access	public
  * @param	string	the text string
  * @return	string
  */
-if ( ! function_exists('highlight_code'))
-{
 	function highlight_code($str)
 	{
-		// The highlight string function encodes and highlights
-		// brackets so we need them to start raw
-		$str = str_replace(array('&lt;', '&gt;'), array('<', '>'), $str);
-
-		// Replace any existing PHP tags to temporary markers so they don't accidentally
-		// break the string out of PHP, and thus, thwart the highlighting.
-
-		$str = str_replace(array('<?', '?>', '<%', '%>', '\\', '</script>'),
-							array('phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'), $str);
+		/* The highlight string function encodes and highlights
+		 * brackets so we need them to start raw.
+		 *
+		 * Also replace any existing PHP tags to temporary markers
+		 * so they don't accidentally break the string out of PHP,
+		 * and thus, thwart the highlighting.
+		 */
+		$str = str_replace(
+			array('&lt;', '&gt;', '<?', '?>', '<%', '%>', '\\', '</script>'),
+			array('<', '>', 'phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'),
+			$str
+		);
 
 		// The highlight_string function requires that the text be surrounded
 		// by PHP tags, which we will remove later
-		$str = '<?php '.$str.' ?>'; // <?
-
-		// All the magic happens here, baby!
-		$str = highlight_string($str, TRUE);
-
-		// Prior to PHP 5, the highligh function used icky <font> tags
-		// so we'll replace them with <span> tags.
-
-		if (abs(PHP_VERSION) < 5)
-		{
-			$str = str_replace(array('<font ', '</font>'), array('<span ', '</span>'), $str);
-			$str = preg_replace('#color="(.*?)"#', 'style="color: \\1"', $str);
-		}
+		$str = highlight_string('<?php '.$str.' ?>', TRUE);
 
 		// Remove our artificially added PHP, and the syntax highlighting that came with it
-		$str = preg_replace('/<span style="color: #([A-Z0-9]+)">&lt;\?php(&nbsp;| )/i', '<span style="color: #$1">', $str);
-		$str = preg_replace('/(<span style="color: #[A-Z0-9]+">.*?)\?&gt;<\/span>\n<\/span>\n<\/code>/is', "$1</span>\n</span>\n</code>", $str);
-		$str = preg_replace('/<span style="color: #[A-Z0-9]+"\><\/span>/i', '', $str);
+		$str = preg_replace(
+			array(
+				'/<span style="color: #([A-Z0-9]+)">&lt;\?php(&nbsp;| )/i',
+				'/(<span style="color: #[A-Z0-9]+">.*?)\?&gt;<\/span>\n<\/span>\n<\/code>/is',
+				'/<span style="color: #[A-Z0-9]+"\><\/span>/i'
+			),
+			array(
+				'<span style="color: #$1">',
+				"$1</span>\n</span>\n</code>",
+				''
+			),
+			$str
+		);
 
 		// Replace our markers back to PHP tags.
-		$str = str_replace(array('phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'),
-							array('&lt;?', '?&gt;', '&lt;%', '%&gt;', '\\', '&lt;/script&gt;'), $str);
-
-		return $str;
+		return str_replace(
+			array('phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'),
+			array('&lt;?', '?&gt;', '&lt;%', '%&gt;', '\\', '&lt;/script&gt;'),
+			$str
+		);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('highlight_phrase'))
+{
 /**
  * Phrase Highlighter
  *
  * Highlights a phrase within a text string
  *
- * @access	public
- * @param	string	the text string
- * @param	string	the phrase you'd like to highlight
- * @param	string	the openging tag to precede the phrase with
- * @param	string	the closing tag to end the phrase with
+	 * @param	string	$str		the text string
+	 * @param	string	$phrase		the phrase you'd like to highlight
+	 * @param	string	$tag_open	the openging tag to precede the phrase with
+	 * @param	string	$tag_close	the closing tag to end the phrase with
  * @return	string
  */
-if ( ! function_exists('highlight_phrase'))
-{
-	function highlight_phrase($str, $phrase, $tag_open = '<strong>', $tag_close = '</strong>')
+	function highlight_phrase($str, $phrase, $tag_open = '<mark>', $tag_close = '</mark>')
 	{
-		if ($str == '')
-		{
-			return '';
-		}
-
-		if ($phrase != '')
-		{
-			return preg_replace('/('.preg_quote($phrase, '/').')/i', $tag_open."\\1".$tag_close, $str);
-		}
-
-		return $str;
+		return ($str !== '' && $phrase !== '')
+			? preg_replace('/('.preg_quote($phrase, '/').')/i'.(UTF8_ENABLED ? 'u' : ''), $tag_open.'\\1'.$tag_close, $str)
+			: $str;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('convert_accented_characters'))
+{
 /**
  * Convert Accented Foreign Characters to ASCII
  *
- * @access	public
- * @param	string	the text string
+	 * @param	string	$str	Input string
  * @return	string
  */
-if ( ! function_exists('convert_accented_characters'))
-{
 	function convert_accented_characters($str)
 	{
-		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php'))
+		static $array_from, $array_to;
+
+		if ( ! is_array($array_from))
 		{
-			include(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php');
-		}
-		elseif (is_file(APPPATH.'config/foreign_chars.php'))
+			if (file_exists(APPPATH.'config/foreign_chars.php'))
 		{
 			include(APPPATH.'config/foreign_chars.php');
 		}
 
-		if ( ! isset($foreign_characters))
+			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php'))
+			{
+				include(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php');
+			}
+
+			if (empty($foreign_characters) OR ! is_array($foreign_characters))
 		{
+				$array_from = array();
+				$array_to = array();
+
 			return $str;
 		}
 
-		return preg_replace(array_keys($foreign_characters), array_values($foreign_characters), $str);
+			$array_from = array_keys($foreign_characters);
+			$array_to = array_values($foreign_characters);
+		}
+
+		return preg_replace($array_from, $array_to, $str);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('word_wrap'))
+{
 /**
  * Word Wrap
  *
@@ -393,21 +435,17 @@
  * Anything placed between {unwrap}{/unwrap} will not be word wrapped, nor
  * will URLs.
  *
- * @access	public
- * @param	string	the text string
- * @param	integer	the number of characters to wrap at
+	 * @param	string	$str		the text string
+	 * @param	int	$charlim = 76	the number of characters to wrap at
  * @return	string
  */
-if ( ! function_exists('word_wrap'))
-{
-	function word_wrap($str, $charlim = '76')
+	function word_wrap($str, $charlim = 76)
 	{
-		// Se the character limit
-		if ( ! is_numeric($charlim))
-			$charlim = 76;
+		// Set the character limit
+		is_numeric($charlim) OR $charlim = 76;
 
 		// Reduce multiple spaces
-		$str = preg_replace("| +|", " ", $str);
+		$str = preg_replace('| +|', ' ', $str);
 
 		// Standardize newlines
 		if (strpos($str, "\r") !== FALSE)
@@ -418,12 +456,12 @@
 		// If the current word is surrounded by {unwrap} tags we'll
 		// strip the entire chunk and replace it with a marker.
 		$unwrap = array();
-		if (preg_match_all("|(\{unwrap\}.+?\{/unwrap\})|s", $str, $matches))
+		if (preg_match_all('|\{unwrap\}(.+?)\{/unwrap\}|s', $str, $matches))
 		{
-			for ($i = 0; $i < count($matches['0']); $i++)
+			for ($i = 0, $c = count($matches[0]); $i < $c; $i++)
 			{
-				$unwrap[] = $matches['1'][$i];
-				$str = str_replace($matches['1'][$i], "{{unwrapped".$i."}}", $str);
+				$unwrap[] = $matches[1][$i];
+				$str = str_replace($matches[0][$i], '{{unwrapped'.$i.'}}', $str);
 			}
 		}
 
@@ -433,43 +471,41 @@
 		$str = wordwrap($str, $charlim, "\n", FALSE);
 
 		// Split the string into individual lines of text and cycle through them
-		$output = "";
+		$output = '';
 		foreach (explode("\n", $str) as $line)
 		{
 			// Is the line within the allowed character count?
 			// If so we'll join it to the output and continue
-			if (strlen($line) <= $charlim)
+			if (mb_strlen($line) <= $charlim)
 			{
 				$output .= $line."\n";
 				continue;
 			}
 
 			$temp = '';
-			while ((strlen($line)) > $charlim)
+			while (mb_strlen($line) > $charlim)
 			{
 				// If the over-length word is a URL we won't wrap it
-				if (preg_match("!\[url.+\]|://|wwww.!", $line))
+				if (preg_match('!\[url.+\]|://|www\.!', $line))
 				{
 					break;
 				}
 
 				// Trim the word down
-				$temp .= substr($line, 0, $charlim-1);
-				$line = substr($line, $charlim-1);
+				$temp .= mb_substr($line, 0, $charlim - 1);
+				$line = mb_substr($line, $charlim - 1);
 			}
 
 			// If $temp contains data it means we had to split up an over-length
 			// word into smaller chunks so we'll add it back to our current line
-			if ($temp != '')
+			if ($temp !== '')
 			{
-				$output .= $temp."\n".$line;
+				$output .= $temp."\n".$line."\n";
 			}
 			else
 			{
-				$output .= $line;
+				$output .= $line."\n";
 			}
-
-			$output .= "\n";
 		}
 
 		// Put our markers back
@@ -477,59 +513,52 @@
 		{
 			foreach ($unwrap as $key => $val)
 			{
-				$output = str_replace("{{unwrapped".$key."}}", $val, $output);
+				$output = str_replace('{{unwrapped'.$key.'}}', $val, $output);
 			}
 		}
 
-		// Remove the unwrap tags
-		$output = str_replace(array('{unwrap}', '{/unwrap}'), '', $output);
-
 		return $output;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('ellipsize'))
+{
 /**
  * Ellipsize String
  *
  * This function will strip tags from a string, split it at its max_length and ellipsize
  *
  * @param	string		string to ellipsize
- * @param	integer		max length of string
+	 * @param	int	max length of string
  * @param	mixed		int (1|0) or float, .5, .2, etc for position to split
  * @param	string		ellipsis ; Default '...'
  * @return	string		ellipsized string
  */
-if ( ! function_exists('ellipsize'))
-{
 	function ellipsize($str, $max_length, $position = 1, $ellipsis = '&hellip;')
 	{
 		// Strip tags
 		$str = trim(strip_tags($str));
 
 		// Is the string long enough to ellipsize?
-		if (strlen($str) <= $max_length)
+		if (mb_strlen($str) <= $max_length)
 		{
 			return $str;
 		}
 
-		$beg = substr($str, 0, floor($max_length * $position));
-
+		$beg = mb_substr($str, 0, floor($max_length * $position));
 		$position = ($position > 1) ? 1 : $position;
 
 		if ($position === 1)
 		{
-			$end = substr($str, 0, -($max_length - strlen($beg)));
+			$end = mb_substr($str, 0, -($max_length - mb_strlen($beg)));
 		}
 		else
 		{
-			$end = substr($str, -($max_length - strlen($beg)));
+			$end = mb_substr($str, -($max_length - mb_strlen($beg)));
 		}
 
 		return $beg.$ellipsis.$end;
 	}
 }
-
-/* End of file text_helper.php */
-/* Location: ./system/helpers/text_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/typography_helper.php opensourcepos/system/helpers/typography_helper.php
--- pos-prod/system/helpers/typography_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/typography_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Typography Helpers
@@ -21,21 +43,20 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/typography_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/typography_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('nl2br_except_pre'))
+{
 /**
  * Convert newlines to HTML line breaks except within PRE tags
  *
- * @access	public
  * @param	string
  * @return	string
  */
-if ( ! function_exists('nl2br_except_pre'))
-{
 	function nl2br_except_pre($str)
 	{
 		$CI =& get_instance();
@@ -48,23 +67,20 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('auto_typography'))
+{
 /**
  * Auto Typography Wrapper Function
  *
- *
- * @access	public
- * @param	string
- * @param	bool	whether to allow javascript event handlers
- * @param	bool	whether to reduce multiple instances of double newlines to two
+	 * @param	string	$str
+	 * @param	bool	$reduce_linebreaks = FALSE	whether to reduce multiple instances of double newlines to two
  * @return	string
  */
-if ( ! function_exists('auto_typography'))
-{
-	function auto_typography($str, $strip_js_event_handlers = TRUE, $reduce_linebreaks = FALSE)
+	function auto_typography($str, $reduce_linebreaks = FALSE)
 	{
 		$CI =& get_instance();
 		$CI->load->library('typography');
-		return $CI->typography->auto_typography($str, $strip_js_event_handlers, $reduce_linebreaks);
+		return $CI->typography->auto_typography($str, $reduce_linebreaks);
 	}
 }
 
@@ -68,26 +84,21 @@
 	}
 }
 
-
 // --------------------------------------------------------------------
 
+if ( ! function_exists('entity_decode'))
+{
 /**
  * HTML Entities Decode
  *
  * This function is a replacement for html_entity_decode()
  *
- * @access	public
+	 * @param	string
  * @param	string
  * @return	string
  */
-if ( ! function_exists('entity_decode'))
-{
-	function entity_decode($str, $charset='UTF-8')
+	function entity_decode($str, $charset = NULL)
 	{
-		global $SEC;
-		return $SEC->entity_decode($str, $charset);
+		return get_instance()->security->entity_decode($str, $charset);
 	}
 }
-
-/* End of file typography_helper.php */
-/* Location: ./system/helpers/typography_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/url_helper.php opensourcepos/system/helpers/url_helper.php
--- pos-prod/system/helpers/url_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/url_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter URL Helpers
@@ -21,33 +43,34 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/url_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/url_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('site_url'))
+{
 /**
  * Site URL
  *
  * Create a local URL based on your basepath. Segments can be passed via the
  * first parameter either as a string or an array.
  *
- * @access	public
- * @param	string
+	 * @param	string	$uri
+	 * @param	string	$protocol
  * @return	string
  */
-if ( ! function_exists('site_url'))
-{
-	function site_url($uri = '')
+	function site_url($uri = '', $protocol = NULL)
 	{
-		$CI =& get_instance();
-		return $CI->config->site_url($uri);
+		return get_instance()->config->site_url($uri, $protocol);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('base_url'))
+{
 /**
  * Base URL
  * 
@@ -55,32 +78,28 @@
  * Segments can be passed in as a string or an array, same as site_url
  * or a URL to a file can be passed in, e.g. to an image file.
  *
- * @access	public
- * @param string
+	 * @param	string	$uri
+	 * @param	string	$protocol
  * @return	string
  */
-if ( ! function_exists('base_url'))
+	function base_url($uri = '', $protocol = NULL)
 {
-	function base_url($uri = '')
-	{
-		$CI =& get_instance();
-		return $CI->config->base_url($uri);
+		return get_instance()->config->base_url($uri, $protocol);
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('current_url'))
+{
 /**
  * Current URL
  *
  * Returns the full URL (including segments) of the page where this
  * function is placed
  *
- * @access	public
  * @return	string
  */
-if ( ! function_exists('current_url'))
-{
 	function current_url()
 	{
 		$CI =& get_instance();
@@ -89,78 +108,69 @@
 }
 
 // ------------------------------------------------------------------------
+
+if ( ! function_exists('uri_string'))
+{
 /**
  * URL String
  *
  * Returns the URI segments.
  *
- * @access	public
  * @return	string
  */
-if ( ! function_exists('uri_string'))
-{
 	function uri_string()
 	{
-		$CI =& get_instance();
-		return $CI->uri->uri_string();
+		return get_instance()->uri->uri_string();
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('index_page'))
+{
 /**
  * Index page
  *
  * Returns the "index_page" from your config file
  *
- * @access	public
  * @return	string
  */
-if ( ! function_exists('index_page'))
-{
 	function index_page()
 	{
-		$CI =& get_instance();
-		return $CI->config->item('index_page');
+		return get_instance()->config->item('index_page');
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('anchor'))
+{
 /**
  * Anchor Link
  *
  * Creates an anchor based on the local URL.
  *
- * @access	public
  * @param	string	the URL
  * @param	string	the link title
  * @param	mixed	any attributes
  * @return	string
  */
-if ( ! function_exists('anchor'))
-{
 	function anchor($uri = '', $title = '', $attributes = '')
 	{
 		$title = (string) $title;
 
-		if ( ! is_array($uri))
-		{
-			$site_url = ( ! preg_match('!^\w+://! i', $uri)) ? site_url($uri) : $uri;
-		}
-		else
-		{
-			$site_url = site_url($uri);
-		}
+		$site_url = is_array($uri)
+			? site_url($uri)
+			: (preg_match('#^(\w+:)?//#i', $uri) ? $uri : site_url($uri));
 
-		if ($title == '')
+		if ($title === '')
 		{
 			$title = $site_url;
 		}
 
-		if ($attributes != '')
+		if ($attributes !== '')
 		{
-			$attributes = _parse_attributes($attributes);
+			$attributes = _stringify_attributes($attributes);
 		}
 
 		return '<a href="'.$site_url.'"'.$attributes.'>'.$title.'</a>';
@@ -169,139 +179,141 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('anchor_popup'))
+{
 /**
  * Anchor Link - Pop-up version
  *
  * Creates an anchor based on the local URL. The link
  * opens a new window based on the attributes specified.
  *
- * @access	public
  * @param	string	the URL
  * @param	string	the link title
  * @param	mixed	any attributes
  * @return	string
  */
-if ( ! function_exists('anchor_popup'))
-{
 	function anchor_popup($uri = '', $title = '', $attributes = FALSE)
 	{
 		$title = (string) $title;
+		$site_url = preg_match('#^(\w+:)?//#i', $uri) ? $uri : site_url($uri);
 
-		$site_url = ( ! preg_match('!^\w+://! i', $uri)) ? site_url($uri) : $uri;
-
-		if ($title == '')
+		if ($title === '')
 		{
 			$title = $site_url;
 		}
 
 		if ($attributes === FALSE)
 		{
-			return "<a href='javascript:void(0);' onclick=\"window.open('".$site_url."', '_blank');\">".$title."</a>";
+			return '<a href="'.$site_url.'" onclick="window.open(\''.$site_url."', '_blank'); return false;\">".$title.'</a>';
 		}
 
 		if ( ! is_array($attributes))
 		{
-			$attributes = array();
-		}
+			$attributes = array($attributes);
 
-		foreach (array('width' => '800', 'height' => '600', 'scrollbars' => 'yes', 'status' => 'yes', 'resizable' => 'yes', 'screenx' => '0', 'screeny' => '0', ) as $key => $val)
+			// Ref: http://www.w3schools.com/jsref/met_win_open.asp
+			$window_name = '_blank';
+		}
+		elseif ( ! empty($attributes['window_name']))
 		{
-			$atts[$key] = ( ! isset($attributes[$key])) ? $val : $attributes[$key];
-			unset($attributes[$key]);
+			$window_name = $attributes['window_name'];
+			unset($attributes['window_name']);
+		}
+		else
+		{
+			$window_name = '_blank';
 		}
 
-		if ($attributes != '')
+		foreach (array('width' => '800', 'height' => '600', 'scrollbars' => 'yes', 'menubar' => 'no', 'status' => 'yes', 'resizable' => 'yes', 'screenx' => '0', 'screeny' => '0') as $key => $val)
 		{
-			$attributes = _parse_attributes($attributes);
+			$atts[$key] = isset($attributes[$key]) ? $attributes[$key] : $val;
+			unset($attributes[$key]);
 		}
 
-		return "<a href='javascript:void(0);' onclick=\"window.open('".$site_url."', '_blank', '"._parse_attributes($atts, TRUE)."');\"$attributes>".$title."</a>";
+		$attributes = _stringify_attributes($attributes);
+
+		return '<a href="'.$site_url
+			.'" onclick="window.open(\''.$site_url."', '".$window_name."', '"._stringify_attributes($atts, TRUE)."'); return false;\""
+			.$attributes.'>'.$title.'</a>';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('mailto'))
+{
 /**
  * Mailto Link
  *
- * @access	public
  * @param	string	the email address
  * @param	string	the link title
  * @param	mixed	any attributes
  * @return	string
  */
-if ( ! function_exists('mailto'))
-{
 	function mailto($email, $title = '', $attributes = '')
 	{
 		$title = (string) $title;
 
-		if ($title == "")
+		if ($title === '')
 		{
 			$title = $email;
 		}
 
-		$attributes = _parse_attributes($attributes);
-
-		return '<a href="mailto:'.$email.'"'.$attributes.'>'.$title.'</a>';
+		return '<a href="mailto:'.$email.'"'._stringify_attributes($attributes).'>'.$title.'</a>';
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('safe_mailto'))
+{
 /**
  * Encoded Mailto Link
  *
  * Create a spam-protected mailto link written in Javascript
  *
- * @access	public
  * @param	string	the email address
  * @param	string	the link title
  * @param	mixed	any attributes
  * @return	string
  */
-if ( ! function_exists('safe_mailto'))
-{
 	function safe_mailto($email, $title = '', $attributes = '')
 	{
 		$title = (string) $title;
 
-		if ($title == "")
+		if ($title === '')
 		{
 			$title = $email;
 		}
 
-		for ($i = 0; $i < 16; $i++)
-		{
-			$x[] = substr('<a href="mailto:', $i, 1);
-		}
+		$x = str_split('<a href="mailto:', 1);
 
-		for ($i = 0; $i < strlen($email); $i++)
+		for ($i = 0, $l = strlen($email); $i < $l; $i++)
 		{
-			$x[] = "|".ord(substr($email, $i, 1));
+			$x[] = '|'.ord($email[$i]);
 		}
 
 		$x[] = '"';
 
-		if ($attributes != '')
+		if ($attributes !== '')
 		{
 			if (is_array($attributes))
 			{
 				foreach ($attributes as $key => $val)
 				{
 					$x[] =  ' '.$key.'="';
-					for ($i = 0; $i < strlen($val); $i++)
+					for ($i = 0, $l = strlen($val); $i < $l; $i++)
 					{
-						$x[] = "|".ord(substr($val, $i, 1));
+						$x[] = '|'.ord($val[$i]);
 					}
 					$x[] = '"';
 				}
 			}
 			else
 			{
-				for ($i = 0; $i < strlen($attributes); $i++)
+				for ($i = 0, $l = strlen($attributes); $i < $l; $i++)
 				{
-					$x[] = substr($attributes, $i, 1);
+					$x[] = $attributes[$i];
 				}
 			}
 		}
@@ -309,26 +321,28 @@
 		$x[] = '>';
 
 		$temp = array();
-		for ($i = 0; $i < strlen($title); $i++)
+		for ($i = 0, $l = strlen($title); $i < $l; $i++)
 		{
 			$ordinal = ord($title[$i]);
 
 			if ($ordinal < 128)
 			{
-				$x[] = "|".$ordinal;
+				$x[] = '|'.$ordinal;
 			}
 			else
 			{
-				if (count($temp) == 0)
+				if (count($temp) === 0)
 				{
 					$count = ($ordinal < 224) ? 2 : 3;
 				}
 
 				$temp[] = $ordinal;
-				if (count($temp) == $count)
+				if (count($temp) === $count)
 				{
-					$number = ($count == 3) ? (($temp['0'] % 16) * 4096) + (($temp['1'] % 64) * 64) + ($temp['2'] % 64) : (($temp['0'] % 32) * 64) + ($temp['1'] % 64);
-					$x[] = "|".$number;
+					$number = ($count === 3)
+							? (($temp[0] % 16) * 4096) + (($temp[1] % 64) * 64) + ($temp[2] % 64)
+							: (($temp[0] % 32) * 64) + ($temp[1] % 64);
+					$x[] = '|'.$number;
 					$count = 1;
 					$temp = array();
 				}
@@ -338,29 +352,31 @@
 		$x[] = '<'; $x[] = '/'; $x[] = 'a'; $x[] = '>';
 
 		$x = array_reverse($x);
-		ob_start();
 
-	?><script type="text/javascript">
-	//<![CDATA[
-	var l=new Array();
-	<?php
-	$i = 0;
-	foreach ($x as $val){ ?>l[<?php echo $i++; ?>]='<?php echo $val; ?>';<?php } ?>
+		$output = "<script type=\"text/javascript\">\n"
+			."\t//<![CDATA[\n"
+			."\tvar l=new Array();\n";
+
+		for ($i = 0, $c = count($x); $i < $c; $i++)
+		{
+			$output .= "\tl[".$i."] = '".$x[$i]."';\n";
+		}
 
-	for (var i = l.length-1; i >= 0; i=i-1){
-	if (l[i].substring(0, 1) == '|') document.write("&#"+unescape(l[i].substring(1))+";");
-	else document.write(unescape(l[i]));}
-	//]]>
-	</script><?php
-
-		$buffer = ob_get_contents();
-		ob_end_clean();
-		return $buffer;
+		$output .= "\n\tfor (var i = l.length-1; i >= 0; i=i-1) {\n"
+			."\t\tif (l[i].substring(0, 1) === '|') document.write(\"&#\"+unescape(l[i].substring(1))+\";\");\n"
+			."\t\telse document.write(unescape(l[i]));\n"
+			."\t}\n"
+			."\t//]]>\n"
+			.'</script>';
+
+		return $output;
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('auto_link'))
+{
 /**
  * Auto-linker
  *
@@ -369,58 +385,42 @@
  * URLs or emails that end in a period.  We'll strip these
  * off and add them after the link.
  *
- * @access	public
  * @param	string	the string
  * @param	string	the type: email, url, or both
  * @param	bool	whether to create pop-up links
  * @return	string
  */
-if ( ! function_exists('auto_link'))
-{
 	function auto_link($str, $type = 'both', $popup = FALSE)
 	{
-		if ($type != 'email')
-		{
-			if (preg_match_all("#(^|\s|\()((http(s?)://)|(www\.))(\w+[^\s\)\<]+)#i", $str, $matches))
+		// Find and replace any URLs.
+		if ($type !== 'email' && preg_match_all('#(\w*://|www\.)[^\s()<>;]+\w#i', $str, $matches, PREG_OFFSET_CAPTURE | PREG_SET_ORDER))
 			{
-				$pop = ($popup == TRUE) ? " target=\"_blank\" " : "";
+			// Set our target HTML if using popup links.
+			$target = ($popup) ? ' target="_blank"' : '';
 
-				for ($i = 0; $i < count($matches['0']); $i++)
+			// We process the links in reverse order (last -> first) so that
+			// the returned string offsets from preg_match_all() are not
+			// moved as we add more HTML.
+			foreach (array_reverse($matches) as $match)
 				{
-					$period = '';
-					if (preg_match("|\.$|", $matches['6'][$i]))
-					{
-						$period = '.';
-						$matches['6'][$i] = substr($matches['6'][$i], 0, -1);
-					}
-
-					$str = str_replace($matches['0'][$i],
-										$matches['1'][$i].'<a href="http'.
-										$matches['4'][$i].'://'.
-										$matches['5'][$i].
-										$matches['6'][$i].'"'.$pop.'>http'.
-										$matches['4'][$i].'://'.
-										$matches['5'][$i].
-										$matches['6'][$i].'</a>'.
-										$period, $str);
-				}
+				// $match[0] is the matched string/link
+				// $match[1] is either a protocol prefix or 'www.'
+				//
+				// With PREG_OFFSET_CAPTURE, both of the above is an array,
+				// where the actual value is held in [0] and its offset at the [1] index.
+				$a = '<a href="'.(strpos($match[1][0], '/') ? '' : 'http://').$match[0][0].'"'.$target.'>'.$match[0][0].'</a>';
+				$str = substr_replace($str, $a, $match[0][1], strlen($match[0][0]));
 			}
 		}
 
-		if ($type != 'url')
+		// Find and replace any emails.
+		if ($type !== 'url' && preg_match_all('#([\w\.\-\+]+@[a-z0-9\-]+\.[a-z0-9\-\.]+[^[:punct:]\s])#i', $str, $matches, PREG_OFFSET_CAPTURE))
 		{
-			if (preg_match_all("/([a-zA-Z0-9_\.\-\+]+)@([a-zA-Z0-9\-]+)\.([a-zA-Z0-9\-\.]*)/i", $str, $matches))
+			foreach (array_reverse($matches[0]) as $match)
 			{
-				for ($i = 0; $i < count($matches['0']); $i++)
+				if (filter_var($match[0], FILTER_VALIDATE_EMAIL) !== FALSE)
 				{
-					$period = '';
-					if (preg_match("|\.$|", $matches['3'][$i]))
-					{
-						$period = '.';
-						$matches['3'][$i] = substr($matches['3'][$i], 0, -1);
-					}
-
-					$str = str_replace($matches['0'][$i], safe_mailto($matches['1'][$i].'@'.$matches['2'][$i].'.'.$matches['3'][$i]).$period, $str);
+					$str = substr_replace($str, safe_mailto($match[0]), $match[1], strlen($match[0]));
 				}
 			}
 		}
@@ -431,20 +431,19 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('prep_url'))
+{
 /**
  * Prep URL
  *
  * Simply adds the http:// part if no scheme is included
  *
- * @access	public
  * @param	string	the URL
  * @return	string
  */
-if ( ! function_exists('prep_url'))
-{
 	function prep_url($str = '')
 	{
-		if ($str == 'http://' OR $str == '')
+		if ($str === 'http://' OR $str === '')
 		{
 			return '';
 		}
@@ -453,7 +452,7 @@
 
 		if ( ! $url OR ! isset($url['scheme']))
 		{
-			$str = 'http://'.$str;
+			return 'http://'.$str;
 		}
 
 		return $str;
@@ -462,6 +461,8 @@
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('url_title'))
+{
 /**
  * Create URL Title
  *
@@ -469,29 +470,29 @@
  * human-friendly URL string with a "separator" string 
  * as the word separator.
  *
- * @access	public
- * @param	string	the string
- * @param	string	the separator
+	 * @todo	Remove old 'dash' and 'underscore' usage in 3.1+.
+	 * @param	string	$str		Input string
+	 * @param	string	$separator	Word separator
+	 *			(usually '-' or '_')
+	 * @param	bool	$lowercase	Whether to transform the output string to lowercase
  * @return	string
  */
-if ( ! function_exists('url_title'))
-{
 	function url_title($str, $separator = '-', $lowercase = FALSE)
 	{
-		if ($separator == 'dash') 
+		if ($separator === 'dash')
 		{
 		    $separator = '-';
 		}
-		else if ($separator == 'underscore')
+		elseif ($separator === 'underscore')
 		{
 		    $separator = '_';
 		}
 		
-		$q_separator = preg_quote($separator);
+		$q_separator = preg_quote($separator, '#');
 
 		$trans = array(
 			'&.+?;'                 => '',
-			'[^a-z0-9 _-]'          => '',
+			'[^\w\d _-]'		=> '',
 			'\s+'                   => $separator,
 			'('.$q_separator.')+'   => $separator
 		);
@@ -497,10 +498,9 @@
 		);
 
 		$str = strip_tags($str);
-
 		foreach ($trans as $key => $val)
 		{
-			$str = preg_replace("#".$key."#i", $val, $str);
+			$str = preg_replace('#'.$key.'#i'.(UTF8_ENABLED ? 'u' : ''), $val, $str);
 		}
 
 		if ($lowercase === TRUE)
@@ -508,12 +508,14 @@
 			$str = strtolower($str);
 		}
 
-		return trim($str, $separator);
+		return trim(trim($str, $separator));
 	}
 }
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('redirect'))
+{
 /**
  * Header Redirect
  *
@@ -521,74 +523,47 @@
  * For very fine grained control over headers, you could use the Output
  * Library's set_header() function.
  *
- * @access	public
- * @param	string	the URL
- * @param	string	the method: location or redirect
- * @return	string
+	 * @param	string	$uri	URL
+	 * @param	string	$method	Redirect method
+	 *			'auto', 'location' or 'refresh'
+	 * @param	int	$code	HTTP Response status code
+	 * @return	void
  */
-if ( ! function_exists('redirect'))
-{
-	function redirect($uri = '', $method = 'location', $http_response_code = 302)
+	function redirect($uri = '', $method = 'auto', $code = NULL)
 	{
-		if ( ! preg_match('#^https?://#i', $uri))
+		if ( ! preg_match('#^(\w+:)?//#i', $uri))
 		{
 			$uri = site_url($uri);
 		}
 
-		switch($method)
+		// IIS environment likely? Use 'refresh' for better compatibility
+		if ($method === 'auto' && isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'Microsoft-IIS') !== FALSE)
 		{
-			case 'refresh'	: header("Refresh:0;url=".$uri);
-				break;
-			default			: header("Location: ".$uri, TRUE, $http_response_code);
-				break;
-		}
-		exit;
-	}
+			$method = 'refresh';
 }
-
-// ------------------------------------------------------------------------
-
-/**
- * Parse out the attributes
- *
- * Some of the functions use this
- *
- * @access	private
- * @param	array
- * @param	bool
- * @return	string
- */
-if ( ! function_exists('_parse_attributes'))
-{
-	function _parse_attributes($attributes, $javascript = FALSE)
-	{
-		if (is_string($attributes))
-		{
-			return ($attributes != '') ? ' '.$attributes : '';
-		}
-
-		$att = '';
-		foreach ($attributes as $key => $val)
+		elseif ($method !== 'refresh' && (empty($code) OR ! is_numeric($code)))
 		{
-			if ($javascript == TRUE)
+			if (isset($_SERVER['SERVER_PROTOCOL'], $_SERVER['REQUEST_METHOD']) && $_SERVER['SERVER_PROTOCOL'] === 'HTTP/1.1')
 			{
-				$att .= $key . '=' . $val . ',';
+				$code = ($_SERVER['REQUEST_METHOD'] !== 'GET')
+					? 303	// reference: http://en.wikipedia.org/wiki/Post/Redirect/Get
+					: 307;
 			}
 			else
 			{
-				$att .= ' ' . $key . '="' . $val . '"';
+				$code = 302;
 			}
 		}
 
-		if ($javascript == TRUE AND $att != '')
+		switch ($method)
 		{
-			$att = substr($att, 0, -1);
+			case 'refresh':
+				header('Refresh:0;url='.$uri);
+				break;
+			default:
+				header('Location: '.$uri, TRUE, $code);
+				break;
 		}
-
-		return $att;
+		exit;
 	}
 }
-
-
-/* End of file url_helper.php */
-/* Location: ./system/helpers/url_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/helpers/xml_helper.php opensourcepos/system/helpers/xml_helper.php
--- pos-prod/system/helpers/xml_helper.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/helpers/xml_helper.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter XML Helpers
@@ -21,51 +43,48 @@
  * @package		CodeIgniter
  * @subpackage	Helpers
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/xml_helper.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/helpers/xml_helper.html
  */
 
 // ------------------------------------------------------------------------
 
+if ( ! function_exists('xml_convert'))
+{
 /**
  * Convert Reserved XML characters to Entities
  *
- * @access	public
  * @param	string
+	 * @param	bool
  * @return	string
  */
-if ( ! function_exists('xml_convert'))
-{
 	function xml_convert($str, $protect_all = FALSE)
 	{
 		$temp = '__TEMP_AMPERSANDS__';
 
 		// Replace entities to temporary markers so that
 		// ampersands won't get messed up
-		$str = preg_replace("/&#(\d+);/", "$temp\\1;", $str);
+		$str = preg_replace('/&#(\d+);/', $temp.'\\1;', $str);
 
 		if ($protect_all === TRUE)
 		{
-			$str = preg_replace("/&(\w+);/",  "$temp\\1;", $str);
+			$str = preg_replace('/&(\w+);/', $temp.'\\1;', $str);
 		}
 
-		$str = str_replace(array("&","<",">","\"", "'", "-"),
-							array("&amp;", "&lt;", "&gt;", "&quot;", "&apos;", "&#45;"),
-							$str);
+		$str = str_replace(
+			array('&', '<', '>', '"', "'", '-'),
+			array('&amp;', '&lt;', '&gt;', '&quot;', '&apos;', '&#45;'),
+			$str
+		);
 
 		// Decode the temp markers back to entities
-		$str = preg_replace("/$temp(\d+);/","&#\\1;",$str);
+		$str = preg_replace('/'.$temp.'(\d+);/', '&#\\1;', $str);
 
 		if ($protect_all === TRUE)
 		{
-			$str = preg_replace("/$temp(\w+);/","&\\1;", $str);
+			return preg_replace('/'.$temp.'(\w+);/', '&\\1;', $str);
 		}
 
 		return $str;
 	}
 }
-
-// ------------------------------------------------------------------------
-
-/* End of file xml_helper.php */
-/* Location: ./system/helpers/xml_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/index.html opensourcepos/system/index.html
--- pos-prod/system/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/index.html	2016-05-23 15:32:31.942838838 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/calendar_lang.php opensourcepos/system/language/en/calendar_lang.php
--- pos-prod/system/language/en/calendar_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/calendar_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,51 +1,84 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['cal_su']			= "Su";
-$lang['cal_mo']			= "Mo";
-$lang['cal_tu']			= "Tu";
-$lang['cal_we']			= "We";
-$lang['cal_th']			= "Th";
-$lang['cal_fr']			= "Fr";
-$lang['cal_sa']			= "Sa";
-$lang['cal_sun']		= "Sun";
-$lang['cal_mon']		= "Mon";
-$lang['cal_tue']		= "Tue";
-$lang['cal_wed']		= "Wed";
-$lang['cal_thu']		= "Thu";
-$lang['cal_fri']		= "Fri";
-$lang['cal_sat']		= "Sat";
-$lang['cal_sunday']		= "Sunday";
-$lang['cal_monday']		= "Monday";
-$lang['cal_tuesday']	= "Tuesday";
-$lang['cal_wednesday']	= "Wednesday";
-$lang['cal_thursday']	= "Thursday";
-$lang['cal_friday']		= "Friday";
-$lang['cal_saturday']	= "Saturday";
-$lang['cal_jan']		= "Jan";
-$lang['cal_feb']		= "Feb";
-$lang['cal_mar']		= "Mar";
-$lang['cal_apr']		= "Apr";
-$lang['cal_may']		= "May";
-$lang['cal_jun']		= "Jun";
-$lang['cal_jul']		= "Jul";
-$lang['cal_aug']		= "Aug";
-$lang['cal_sep']		= "Sep";
-$lang['cal_oct']		= "Oct";
-$lang['cal_nov']		= "Nov";
-$lang['cal_dec']		= "Dec";
-$lang['cal_january']	= "January";
-$lang['cal_february']	= "February";
-$lang['cal_march']		= "March";
-$lang['cal_april']		= "April";
-$lang['cal_mayl']		= "May";
-$lang['cal_june']		= "June";
-$lang['cal_july']		= "July";
-$lang['cal_august']		= "August";
-$lang['cal_september']	= "September";
-$lang['cal_october']	= "October";
-$lang['cal_november']	= "November";
-$lang['cal_december']	= "December";
-
-
-/* End of file calendar_lang.php */
-/* Location: ./system/language/english/calendar_lang.php */
+$lang['cal_su'] = 'Su';
+$lang['cal_mo'] = 'Mo';
+$lang['cal_tu'] = 'Tu';
+$lang['cal_we'] = 'We';
+$lang['cal_th'] = 'Th';
+$lang['cal_fr'] = 'Fr';
+$lang['cal_sa'] = 'Sa';
+$lang['cal_sun'] = 'Sun';
+$lang['cal_mon'] = 'Mon';
+$lang['cal_tue'] = 'Tue';
+$lang['cal_wed'] = 'Wed';
+$lang['cal_thu'] = 'Thu';
+$lang['cal_fri'] = 'Fri';
+$lang['cal_sat'] = 'Sat';
+$lang['cal_sunday'] = 'Sunday';
+$lang['cal_monday'] = 'Monday';
+$lang['cal_tuesday'] = 'Tuesday';
+$lang['cal_wednesday'] = 'Wednesday';
+$lang['cal_thursday'] = 'Thursday';
+$lang['cal_friday'] = 'Friday';
+$lang['cal_saturday'] = 'Saturday';
+$lang['cal_jan'] = 'Jan';
+$lang['cal_feb'] = 'Feb';
+$lang['cal_mar'] = 'Mar';
+$lang['cal_apr'] = 'Apr';
+$lang['cal_may'] = 'May';
+$lang['cal_jun'] = 'Jun';
+$lang['cal_jul'] = 'Jul';
+$lang['cal_aug'] = 'Aug';
+$lang['cal_sep'] = 'Sep';
+$lang['cal_oct'] = 'Oct';
+$lang['cal_nov'] = 'Nov';
+$lang['cal_dec'] = 'Dec';
+$lang['cal_january'] = 'January';
+$lang['cal_february'] = 'February';
+$lang['cal_march'] = 'March';
+$lang['cal_april'] = 'April';
+$lang['cal_mayl'] = 'May';
+$lang['cal_june'] = 'June';
+$lang['cal_july'] = 'July';
+$lang['cal_august'] = 'August';
+$lang['cal_september'] = 'September';
+$lang['cal_october'] = 'October';
+$lang['cal_november'] = 'November';
+$lang['cal_december'] = 'December';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/date_lang.php opensourcepos/system/language/en/date_lang.php
--- pos-prod/system/language/en/date_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/date_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,22 +1,59 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['date_year'] = "Year";
-$lang['date_years'] = "Years";
-$lang['date_month'] = "Month";
-$lang['date_months'] = "Months";
-$lang['date_week'] = "Week";
-$lang['date_weeks'] = "Weeks";
-$lang['date_day'] = "Day";
-$lang['date_days'] = "Days";
-$lang['date_hour'] = "Hour";
-$lang['date_hours'] = "Hours";
-$lang['date_minute'] = "Minute";
-$lang['date_minutes'] = "Minutes";
-$lang['date_second'] = "Second";
-$lang['date_seconds'] = "Seconds";
+$lang['date_year'] = 'Year';
+$lang['date_years'] = 'Years';
+$lang['date_month'] = 'Month';
+$lang['date_months'] = 'Months';
+$lang['date_week'] = 'Week';
+$lang['date_weeks'] = 'Weeks';
+$lang['date_day'] = 'Day';
+$lang['date_days'] = 'Days';
+$lang['date_hour'] = 'Hour';
+$lang['date_hours'] = 'Hours';
+$lang['date_minute'] = 'Minute';
+$lang['date_minutes'] = 'Minutes';
+$lang['date_second'] = 'Second';
+$lang['date_seconds'] = 'Seconds';
 
 $lang['UM12']	= '(UTC -12:00) Baker/Howland Island';
-$lang['UM11']	= '(UTC -11:00) Samoa Time Zone, Niue';
+$lang['UM11']	= '(UTC -11:00) Niue';
 $lang['UM10']	= '(UTC -10:00) Hawaii-Aleutian Standard Time, Cook Islands, Tahiti';
 $lang['UM95']	= '(UTC -9:30) Marquesas Islands';
 $lang['UM9']	= '(UTC -9:00) Alaska Standard Time, Gambier Islands';
@@ -33,7 +70,7 @@
 $lang['UTC']	= '(UTC) Greenwich Mean Time, Western European Time';
 $lang['UP1']	= '(UTC +1:00) Central European Time, West Africa Time';
 $lang['UP2']	= '(UTC +2:00) Central Africa Time, Eastern European Time, Kaliningrad Time';
-$lang['UP3']	= '(UTC +3:00) Moscow Time, East Africa Time';
+$lang['UP3']	= '(UTC +3:00) Moscow Time, East Africa Time, Arabia Standard Time';
 $lang['UP35']	= '(UTC +3:30) Iran Standard Time';
 $lang['UP4']	= '(UTC +4:00) Azerbaijan Standard Time, Samara Time';
 $lang['UP45']	= '(UTC +4:30) Afghanistan';
@@ -49,13 +86,9 @@
 $lang['UP95']	= '(UTC +9:30) Australian Central Standard Time';
 $lang['UP10']	= '(UTC +10:00) Australian Eastern Standard Time, Vladivostok Time';
 $lang['UP105']	= '(UTC +10:30) Lord Howe Island';
-$lang['UP11']	= '(UTC +11:00) Magadan Time, Solomon Islands, Vanuatu';
+$lang['UP11']	= '(UTC +11:00) Srednekolymsk Time, Solomon Islands, Vanuatu';
 $lang['UP115']	= '(UTC +11:30) Norfolk Island';
 $lang['UP12']	= '(UTC +12:00) Fiji, Gilbert Islands, Kamchatka Time, New Zealand Standard Time';
 $lang['UP1275']	= '(UTC +12:45) Chatham Islands Standard Time';
-$lang['UP13']	= '(UTC +13:00) Phoenix Islands Time, Tonga';
+$lang['UP13']	= '(UTC +13:00) Samoa Time Zone, Phoenix Islands Time, Tonga';
 $lang['UP14']	= '(UTC +14:00) Line Islands';
-
-
-/* End of file date_lang.php */
-/* Location: ./system/language/english/date_lang.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/db_lang.php opensourcepos/system/language/en/db_lang.php
--- pos-prod/system/language/en/db_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/db_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,4 +1,41 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 $lang['db_invalid_connection_str'] = 'Unable to determine the database settings based on the connection string you submitted.';
 $lang['db_unable_to_connect'] = 'Unable to connect to your database server using the provided settings.';
@@ -15,8 +52,8 @@
 $lang['db_unsupported_function'] = 'This feature is not available for the database you are using.';
 $lang['db_transaction_failure'] = 'Transaction failure: Rollback performed.';
 $lang['db_unable_to_drop'] = 'Unable to drop the specified database.';
-$lang['db_unsuported_feature'] = 'Unsupported feature of the database platform you are using.';
-$lang['db_unsuported_compression'] = 'The file compression format you chose is not supported by your server.';
+$lang['db_unsupported_feature'] = 'Unsupported feature of the database platform you are using.';
+$lang['db_unsupported_compression'] = 'The file compression format you chose is not supported by your server.';
 $lang['db_filepath_error'] = 'Unable to write data to the file path you have submitted.';
 $lang['db_invalid_cache_path'] = 'The cache path you submitted is not valid or writable.';
 $lang['db_table_name_required'] = 'A table name is required for that operation.';
@@ -24,6 +61,3 @@
 $lang['db_column_definition_required'] = 'A column definition is required for that operation.';
 $lang['db_unable_to_set_charset'] = 'Unable to set client connection character set: %s';
 $lang['db_error_heading'] = 'A Database Error Occurred';
-
-/* End of file db_lang.php */
-/* Location: ./system/language/english/db_lang.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/email_lang.php opensourcepos/system/language/en/email_lang.php
--- pos-prod/system/language/en/email_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/email_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,24 +1,58 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['email_must_be_array'] = "The email validation method must be passed an array.";
-$lang['email_invalid_address'] = "Invalid email address: %s";
-$lang['email_attachment_missing'] = "Unable to locate the following email attachment: %s";
-$lang['email_attachment_unreadable'] = "Unable to open this attachment: %s";
-$lang['email_no_recipients'] = "You must include recipients: To, Cc, or Bcc";
-$lang['email_send_failure_phpmail'] = "Unable to send email using PHP mail().  Your server might not be configured to send mail using this method.";
-$lang['email_send_failure_sendmail'] = "Unable to send email using PHP Sendmail.  Your server might not be configured to send mail using this method.";
-$lang['email_send_failure_smtp'] = "Unable to send email using PHP SMTP.  Your server might not be configured to send mail using this method.";
-$lang['email_sent'] = "Your message has been successfully sent using the following protocol: %s";
-$lang['email_no_socket'] = "Unable to open a socket to Sendmail. Please check settings.";
-$lang['email_no_hostname'] = "You did not specify a SMTP hostname.";
-$lang['email_smtp_error'] = "The following SMTP error was encountered: %s";
-$lang['email_no_smtp_unpw'] = "Error: You must assign a SMTP username and password.";
-$lang['email_failed_smtp_login'] = "Failed to send AUTH LOGIN command. Error: %s";
-$lang['email_smtp_auth_un'] = "Failed to authenticate username. Error: %s";
-$lang['email_smtp_auth_pw'] = "Failed to authenticate password. Error: %s";
-$lang['email_smtp_data_failure'] = "Unable to send data: %s";
-$lang['email_exit_status'] = "Exit status code: %s";
-
-
-/* End of file email_lang.php */
-/* Location: ./system/language/english/email_lang.php */
+$lang['email_must_be_array'] = 'The email validation method must be passed an array.';
+$lang['email_invalid_address'] = 'Invalid email address: %s';
+$lang['email_attachment_missing'] = 'Unable to locate the following email attachment: %s';
+$lang['email_attachment_unreadable'] = 'Unable to open this attachment: %s';
+$lang['email_no_from'] = 'Cannot send mail with no "From" header.';
+$lang['email_no_recipients'] = 'You must include recipients: To, Cc, or Bcc';
+$lang['email_send_failure_phpmail'] = 'Unable to send email using PHP mail(). Your server might not be configured to send mail using this method.';
+$lang['email_send_failure_sendmail'] = 'Unable to send email using PHP Sendmail. Your server might not be configured to send mail using this method.';
+$lang['email_send_failure_smtp'] = 'Unable to send email using PHP SMTP. Your server might not be configured to send mail using this method.';
+$lang['email_sent'] = 'Your message has been successfully sent using the following protocol: %s';
+$lang['email_no_socket'] = 'Unable to open a socket to Sendmail. Please check settings.';
+$lang['email_no_hostname'] = 'You did not specify a SMTP hostname.';
+$lang['email_smtp_error'] = 'The following SMTP error was encountered: %s';
+$lang['email_no_smtp_unpw'] = 'Error: You must assign a SMTP username and password.';
+$lang['email_failed_smtp_login'] = 'Failed to send AUTH LOGIN command. Error: %s';
+$lang['email_smtp_auth_un'] = 'Failed to authenticate username. Error: %s';
+$lang['email_smtp_auth_pw'] = 'Failed to authenticate password. Error: %s';
+$lang['email_smtp_data_failure'] = 'Unable to send data: %s';
+$lang['email_exit_status'] = 'Exit status code: %s';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/form_validation_lang.php opensourcepos/system/language/en/form_validation_lang.php
--- pos-prod/system/language/en/form_validation_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/form_validation_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,29 +1,68 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['required']			= "The %s field is required.";
-$lang['isset']				= "The %s field must have a value.";
-$lang['valid_email']		= "The %s field must contain a valid email address.";
-$lang['valid_emails']		= "The %s field must contain all valid email addresses.";
-$lang['valid_url']			= "The %s field must contain a valid URL.";
-$lang['valid_ip']			= "The %s field must contain a valid IP.";
-$lang['min_length']			= "The %s field must be at least %s characters in length.";
-$lang['max_length']			= "The %s field can not exceed %s characters in length.";
-$lang['exact_length']		= "The %s field must be exactly %s characters in length.";
-$lang['alpha']				= "The %s field may only contain alphabetical characters.";
-$lang['alpha_numeric']		= "The %s field may only contain alpha-numeric characters.";
-$lang['alpha_dash']			= "The %s field may only contain alpha-numeric characters, underscores, and dashes.";
-$lang['numeric']			= "The %s field must contain only numbers.";
-$lang['is_numeric']			= "The %s field must contain only numeric characters.";
-$lang['integer']			= "The %s field must contain an integer.";
-$lang['regex_match']		= "The %s field is not in the correct format.";
-$lang['matches']			= "The %s field does not match the %s field.";
-$lang['is_unique'] 			= "The %s field must contain a unique value.";
-$lang['is_natural']			= "The %s field must contain only positive numbers.";
-$lang['is_natural_no_zero']	= "The %s field must contain a number greater than zero.";
-$lang['decimal']			= "The %s field must contain a decimal number.";
-$lang['less_than']			= "The %s field must contain a number less than %s.";
-$lang['greater_than']		= "The %s field must contain a number greater than %s.";
-
-
-/* End of file form_validation_lang.php */
-/* Location: ./system/language/english/form_validation_lang.php */
+$lang['form_validation_required']		= 'The {field} field is required.';
+$lang['form_validation_isset']			= 'The {field} field must have a value.';
+$lang['form_validation_valid_email']		= 'The {field} field must contain a valid email address.';
+$lang['form_validation_valid_emails']		= 'The {field} field must contain all valid email addresses.';
+$lang['form_validation_valid_url']		= 'The {field} field must contain a valid URL.';
+$lang['form_validation_valid_ip']		= 'The {field} field must contain a valid IP.';
+$lang['form_validation_min_length']		= 'The {field} field must be at least {param} characters in length.';
+$lang['form_validation_max_length']		= 'The {field} field cannot exceed {param} characters in length.';
+$lang['form_validation_exact_length']		= 'The {field} field must be exactly {param} characters in length.';
+$lang['form_validation_alpha']			= 'The {field} field may only contain alphabetical characters.';
+$lang['form_validation_alpha_numeric']		= 'The {field} field may only contain alpha-numeric characters.';
+$lang['form_validation_alpha_numeric_spaces']	= 'The {field} field may only contain alpha-numeric characters and spaces.';
+$lang['form_validation_alpha_dash']		= 'The {field} field may only contain alpha-numeric characters, underscores, and dashes.';
+$lang['form_validation_numeric']		= 'The {field} field must contain only numbers.';
+$lang['form_validation_is_numeric']		= 'The {field} field must contain only numeric characters.';
+$lang['form_validation_integer']		= 'The {field} field must contain an integer.';
+$lang['form_validation_regex_match']		= 'The {field} field is not in the correct format.';
+$lang['form_validation_matches']		= 'The {field} field does not match the {param} field.';
+$lang['form_validation_differs']		= 'The {field} field must differ from the {param} field.';
+$lang['form_validation_is_unique'] 		= 'The {field} field must contain a unique value.';
+$lang['form_validation_is_natural']		= 'The {field} field must only contain digits.';
+$lang['form_validation_is_natural_no_zero']	= 'The {field} field must only contain digits and must be greater than zero.';
+$lang['form_validation_decimal']		= 'The {field} field must contain a decimal number.';
+$lang['form_validation_less_than']		= 'The {field} field must contain a number less than {param}.';
+$lang['form_validation_less_than_equal_to']	= 'The {field} field must contain a number less than or equal to {param}.';
+$lang['form_validation_greater_than']		= 'The {field} field must contain a number greater than {param}.';
+$lang['form_validation_greater_than_equal_to']	= 'The {field} field must contain a number greater than or equal to {param}.';
+$lang['form_validation_error_message_not_set']	= 'Unable to access an error message corresponding to your field name {field}.';
+$lang['form_validation_in_list']		= 'The {field} field must be one of: {param}.';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/ftp_lang.php opensourcepos/system/language/en/ftp_lang.php
--- pos-prod/system/language/en/ftp_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/ftp_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,18 +1,51 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['ftp_no_connection']			= "Unable to locate a valid connection ID. Please make sure you are connected before peforming any file routines.";
-$lang['ftp_unable_to_connect']		= "Unable to connect to your FTP server using the supplied hostname.";
-$lang['ftp_unable_to_login']		= "Unable to login to your FTP server. Please check your username and password.";
-$lang['ftp_unable_to_makdir']		= "Unable to create the directory you have specified.";
-$lang['ftp_unable_to_changedir']	= "Unable to change directories.";
-$lang['ftp_unable_to_chmod']		= "Unable to set file permissions. Please check your path. Note: This feature is only available in PHP 5 or higher.";
-$lang['ftp_unable_to_upload']		= "Unable to upload the specified file. Please check your path.";
-$lang['ftp_unable_to_download']		= "Unable to download the specified file. Please check your path.";
-$lang['ftp_no_source_file']			= "Unable to locate the source file. Please check your path.";
-$lang['ftp_unable_to_rename']		= "Unable to rename the file.";
-$lang['ftp_unable_to_delete']		= "Unable to delete the file.";
-$lang['ftp_unable_to_move']			= "Unable to move the file. Please make sure the destination directory exists.";
-
-
-/* End of file ftp_lang.php */
-/* Location: ./system/language/english/ftp_lang.php */
+$lang['ftp_no_connection']		= 'Unable to locate a valid connection ID. Please make sure you are connected before performing any file routines.';
+$lang['ftp_unable_to_connect']		= 'Unable to connect to your FTP server using the supplied hostname.';
+$lang['ftp_unable_to_login']		= 'Unable to login to your FTP server. Please check your username and password.';
+$lang['ftp_unable_to_mkdir']		= 'Unable to create the directory you have specified.';
+$lang['ftp_unable_to_changedir']	= 'Unable to change directories.';
+$lang['ftp_unable_to_chmod']		= 'Unable to set file permissions. Please check your path.';
+$lang['ftp_unable_to_upload']		= 'Unable to upload the specified file. Please check your path.';
+$lang['ftp_unable_to_download']		= 'Unable to download the specified file. Please check your path.';
+$lang['ftp_no_source_file']		= 'Unable to locate the source file. Please check your path.';
+$lang['ftp_unable_to_rename']		= 'Unable to rename the file.';
+$lang['ftp_unable_to_delete']		= 'Unable to delete the file.';
+$lang['ftp_unable_to_move']		= 'Unable to move the file. Please make sure the destination directory exists.';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/imglib_lang.php opensourcepos/system/language/en/imglib_lang.php
--- pos-prod/system/language/en/imglib_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/imglib_lang.php	2016-05-23 15:32:31.942838838 -0700
@@ -1,24 +1,56 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['imglib_source_image_required'] = "You must specify a source image in your preferences.";
-$lang['imglib_gd_required'] = "The GD image library is required for this feature.";
-$lang['imglib_gd_required_for_props'] = "Your server must support the GD image library in order to determine the image properties.";
-$lang['imglib_unsupported_imagecreate'] = "Your server does not support the GD function required to process this type of image.";
-$lang['imglib_gif_not_supported'] = "GIF images are often not supported due to licensing restrictions.  You may have to use JPG or PNG images instead.";
-$lang['imglib_jpg_not_supported'] = "JPG images are not supported.";
-$lang['imglib_png_not_supported'] = "PNG images are not supported.";
-$lang['imglib_jpg_or_png_required'] = "The image resize protocol specified in your preferences only works with JPEG or PNG image types.";
-$lang['imglib_copy_error'] = "An error was encountered while attempting to replace the file.  Please make sure your file directory is writable.";
-$lang['imglib_rotate_unsupported'] = "Image rotation does not appear to be supported by your server.";
-$lang['imglib_libpath_invalid'] = "The path to your image library is not correct.  Please set the correct path in your image preferences.";
-$lang['imglib_image_process_failed'] = "Image processing failed.  Please verify that your server supports the chosen protocol and that the path to your image library is correct.";
-$lang['imglib_rotation_angle_required'] = "An angle of rotation is required to rotate the image.";
-$lang['imglib_writing_failed_gif'] = "GIF image.";
-$lang['imglib_invalid_path'] = "The path to the image is not correct.";
-$lang['imglib_copy_failed'] = "The image copy routine failed.";
-$lang['imglib_missing_font'] = "Unable to find a font to use.";
-$lang['imglib_save_failed'] = "Unable to save the image.  Please make sure the image and file directory are writable.";
-
-
-/* End of file imglib_lang.php */
-/* Location: ./system/language/english/imglib_lang.php */
+$lang['imglib_source_image_required'] = 'You must specify a source image in your preferences.';
+$lang['imglib_gd_required'] = 'The GD image library is required for this feature.';
+$lang['imglib_gd_required_for_props'] = 'Your server must support the GD image library in order to determine the image properties.';
+$lang['imglib_unsupported_imagecreate'] = 'Your server does not support the GD function required to process this type of image.';
+$lang['imglib_gif_not_supported'] = 'GIF images are often not supported due to licensing restrictions. You may have to use JPG or PNG images instead.';
+$lang['imglib_jpg_not_supported'] = 'JPG images are not supported.';
+$lang['imglib_png_not_supported'] = 'PNG images are not supported.';
+$lang['imglib_jpg_or_png_required'] = 'The image resize protocol specified in your preferences only works with JPEG or PNG image types.';
+$lang['imglib_copy_error'] = 'An error was encountered while attempting to replace the file. Please make sure your file directory is writable.';
+$lang['imglib_rotate_unsupported'] = 'Image rotation does not appear to be supported by your server.';
+$lang['imglib_libpath_invalid'] = 'The path to your image library is not correct. Please set the correct path in your image preferences.';
+$lang['imglib_image_process_failed'] = 'Image processing failed. Please verify that your server supports the chosen protocol and that the path to your image library is correct.';
+$lang['imglib_rotation_angle_required'] = 'An angle of rotation is required to rotate the image.';
+$lang['imglib_invalid_path'] = 'The path to the image is not correct.';
+$lang['imglib_copy_failed'] = 'The image copy routine failed.';
+$lang['imglib_missing_font'] = 'Unable to find a font to use.';
+$lang['imglib_save_failed'] = 'Unable to save the image. Please make sure the image and file directory are writable.';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/index.html opensourcepos/system/language/en/index.html
--- pos-prod/system/language/en/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/index.html	2016-05-23 15:32:31.943838823 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/migration_lang.php opensourcepos/system/language/en/migration_lang.php
--- pos-prod/system/language/en/migration_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/migration_lang.php	2016-05-23 15:32:31.943838823 -0700
@@ -1,13 +1,47 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 3.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['migration_none_found']			= "No migrations were found.";
-$lang['migration_not_found']			= "This migration could not be found.";
-$lang['migration_multiple_version']		= "This are multiple migrations with the same version number: %d.";
-$lang['migration_class_doesnt_exist']	= "The migration class \"%s\" could not be found.";
-$lang['migration_missing_up_method']	= "The migration class \"%s\" is missing an 'up' method.";
-$lang['migration_missing_down_method']	= "The migration class \"%s\" is missing an 'up' method.";
-$lang['migration_invalid_filename']		= "Migration \"%s\" has an invalid filename.";
-
-
-/* End of file migration_lang.php */
-/* Location: ./system/language/english/migration_lang.php */
+$lang['migration_none_found'] = 'No migrations were found.';
+$lang['migration_not_found'] = 'No migration could be found with the version number: %s.';
+$lang['migration_sequence_gap'] = 'There is a gap in the migration sequence near version number: %s.';
+$lang['migration_multiple_version'] = 'There are multiple migrations with the same version number: %s.';
+$lang['migration_class_doesnt_exist'] = 'The migration class "%s" could not be found.';
+$lang['migration_missing_up_method'] = 'The migration class "%s" is missing an "up" method.';
+$lang['migration_missing_down_method'] = 'The migration class "%s" is missing a "down" method.';
+$lang['migration_invalid_filename'] = 'Migration "%s" has an invalid filename.';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/number_lang.php opensourcepos/system/language/en/number_lang.php
--- pos-prod/system/language/en/number_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/number_lang.php	2016-05-23 15:32:31.943838823 -0700
@@ -1,10 +1,44 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['terabyte_abbr'] = "TB";
-$lang['gigabyte_abbr'] = "GB";
-$lang['megabyte_abbr'] = "MB";
-$lang['kilobyte_abbr'] = "KB";
-$lang['bytes'] = "Bytes";
-
-/* End of file number_lang.php */
-/* Location: ./system/language/english/number_lang.php */
+$lang['terabyte_abbr'] = 'TB';
+$lang['gigabyte_abbr'] = 'GB';
+$lang['megabyte_abbr'] = 'MB';
+$lang['kilobyte_abbr'] = 'KB';
+$lang['bytes'] = 'Bytes';
Only in opensourcepos/system/language/en: pagination_lang.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/profiler_lang.php opensourcepos/system/language/en/profiler_lang.php
--- pos-prod/system/language/en/profiler_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/profiler_lang.php	2016-05-23 15:32:31.943838823 -0700
@@ -1,4 +1,41 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 $lang['profiler_database']		= 'DATABASE';
 $lang['profiler_controller_info'] = 'CLASS/METHOD';
@@ -20,6 +57,4 @@
 $lang['profiler_no_profiles']	= 'No Profile data - all Profiler sections have been disabled.';
 $lang['profiler_section_hide']	= 'Hide';
 $lang['profiler_section_show']	= 'Show';
-
-/* End of file profiler_lang.php */
-/* Location: ./system/language/english/profiler_lang.php */
+$lang['profiler_seconds'] = 'seconds';
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/unit_test_lang.php opensourcepos/system/language/en/unit_test_lang.php
--- pos-prod/system/language/en/unit_test_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/unit_test_lang.php	2016-05-23 15:32:31.943838823 -0700
@@ -1,4 +1,41 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 $lang['ut_test_name']		= 'Test Name';
 $lang['ut_test_datatype']	= 'Test Datatype';
@@ -19,7 +56,3 @@
 $lang['ut_resource']		= 'Resource';
 $lang['ut_null']			= 'Null';
 $lang['ut_notes']			= 'Notes';
-
-
-/* End of file unit_test_lang.php */
-/* Location: ./system/language/english/unit_test_lang.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/en/upload_lang.php opensourcepos/system/language/en/upload_lang.php
--- pos-prod/system/language/en/upload_lang.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/en/upload_lang.php	2016-05-23 15:32:31.943838823 -0700
@@ -1,22 +1,55 @@
 <?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
-$lang['upload_userfile_not_set'] = "Unable to find a post variable called userfile.";
-$lang['upload_file_exceeds_limit'] = "The uploaded file exceeds the maximum allowed size in your PHP configuration file.";
-$lang['upload_file_exceeds_form_limit'] = "The uploaded file exceeds the maximum size allowed by the submission form.";
-$lang['upload_file_partial'] = "The file was only partially uploaded.";
-$lang['upload_no_temp_directory'] = "The temporary folder is missing.";
-$lang['upload_unable_to_write_file'] = "The file could not be written to disk.";
-$lang['upload_stopped_by_extension'] = "The file upload was stopped by extension.";
-$lang['upload_no_file_selected'] = "You did not select a file to upload.";
-$lang['upload_invalid_filetype'] = "The filetype you are attempting to upload is not allowed.";
-$lang['upload_invalid_filesize'] = "The file you are attempting to upload is larger than the permitted size.";
-$lang['upload_invalid_dimensions'] = "The image you are attempting to upload exceedes the maximum height or width.";
-$lang['upload_destination_error'] = "A problem was encountered while attempting to move the uploaded file to the final destination.";
-$lang['upload_no_filepath'] = "The upload path does not appear to be valid.";
-$lang['upload_no_file_types'] = "You have not specified any allowed file types.";
-$lang['upload_bad_filename'] = "The file name you submitted already exists on the server.";
-$lang['upload_not_writable'] = "The upload destination folder does not appear to be writable.";
-
-
-/* End of file upload_lang.php */
-/* Location: ./system/language/english/upload_lang.php */
+$lang['upload_userfile_not_set'] = 'Unable to find a post variable called userfile.';
+$lang['upload_file_exceeds_limit'] = 'The uploaded file exceeds the maximum allowed size in your PHP configuration file.';
+$lang['upload_file_exceeds_form_limit'] = 'The uploaded file exceeds the maximum size allowed by the submission form.';
+$lang['upload_file_partial'] = 'The file was only partially uploaded.';
+$lang['upload_no_temp_directory'] = 'The temporary folder is missing.';
+$lang['upload_unable_to_write_file'] = 'The file could not be written to disk.';
+$lang['upload_stopped_by_extension'] = 'The file upload was stopped by extension.';
+$lang['upload_no_file_selected'] = 'You did not select a file to upload.';
+$lang['upload_invalid_filetype'] = 'The filetype you are attempting to upload is not allowed.';
+$lang['upload_invalid_filesize'] = 'The file you are attempting to upload is larger than the permitted size.';
+$lang['upload_invalid_dimensions'] = 'The image you are attempting to upload doesn\'t fit into the allowed dimensions.';
+$lang['upload_destination_error'] = 'A problem was encountered while attempting to move the uploaded file to the final destination.';
+$lang['upload_no_filepath'] = 'The upload path does not appear to be valid.';
+$lang['upload_no_file_types'] = 'You have not specified any allowed file types.';
+$lang['upload_bad_filename'] = 'The file name you submitted already exists on the server.';
+$lang['upload_not_writable'] = 'The upload destination folder does not appear to be writable.';
Only in pos-prod/system/language: english
Only in opensourcepos/system/language: es
Only in opensourcepos/system/language: fr
Only in opensourcepos/system/language: id
diff -rBwi --ignore-file-name-case -u pos-prod/system/language/index.html opensourcepos/system/language/index.html
--- pos-prod/system/language/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/language/index.html	2016-05-23 15:32:31.943838823 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in pos-prod/system/language: indonesia
Only in opensourcepos/system/language: ru
Only in pos-prod/system/language: spanish
Only in opensourcepos/system/language: th
Only in opensourcepos/system/language: tr
Only in opensourcepos/system/language: zh
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/Cache.php opensourcepos/system/libraries/Cache/Cache.php
--- pos-prod/system/libraries/Cache/Cache.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/Cache.php	2016-05-23 15:32:31.944838808 -0700
@@ -1,19 +1,41 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 2.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Caching Class
@@ -21,31 +43,82 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Core
- * @author		ExpressionEngine Dev Team
+ * @author		EllisLab Dev Team
  * @link
  */
 class CI_Cache extends CI_Driver_Library {
 
+	/**
+	 * Valid cache drivers
+	 *
+	 * @var array
+	 */
 	protected $valid_drivers 	= array(
-		'cache_apc', 'cache_file', 'cache_memcached', 'cache_dummy'
+		'apc',
+		'dummy',
+		'file',
+		'memcached',
+		'redis',
+		'wincache'
 	);
 
-	protected $_cache_path		= NULL;		// Path of cache files (if file-based cache)
+	/**
+	 * Path of cache files (if file-based cache)
+	 *
+	 * @var string
+	 */
+	protected $_cache_path = NULL;
+
+	/**
+	 * Reference to the driver
+	 *
+	 * @var mixed
+	 */
 	protected $_adapter			= 'dummy';
-	protected $_backup_driver;
 
-	// ------------------------------------------------------------------------
+	/**
+	 * Fallback driver
+	 *
+	 * @var string
+	 */
+	protected $_backup_driver = 'dummy';
+
+	/**
+	 * Cache key prefix
+	 *
+	 * @var	string
+	 */
+	public $key_prefix = '';
 
 	/**
 	 * Constructor
 	 *
-	 * @param array
+	 * Initialize class properties based on the configuration array.
+	 *
+	 * @param	array	$config = array()
+	 * @return	void
 	 */
 	public function __construct($config = array())
 	{
-		if ( ! empty($config))
+		isset($config['adapter']) && $this->_adapter = $config['adapter'];
+		isset($config['backup']) && $this->_backup_driver = $config['backup'];
+		isset($config['key_prefix']) && $this->key_prefix = $config['key_prefix'];
+
+		// If the specified adapter isn't available, check the backup.
+		if ( ! $this->is_supported($this->_adapter))
+		{
+			if ( ! $this->is_supported($this->_backup_driver))
 		{
-			$this->_initialize($config);
+				// Backup isn't supported either. Default to 'Dummy' driver.
+				log_message('error', 'Cache adapter "'.$this->_adapter.'" and backup "'.$this->_backup_driver.'" are both unavailable. Cache is now using "Dummy" adapter.');
+				$this->_adapter = 'dummy';
+			}
+			else
+			{
+				// Backup is supported. Set it to primary.
+				log_message('debug', 'Cache adapter "'.$this->_adapter.'" is unavailable. Falling back to "'.$this->_backup_driver.'" backup adapter.');
+				$this->_adapter = $this->_backup_driver;
+			}
 		}
 	}
 
@@ -57,12 +130,12 @@
 	 * Look for a value in the cache.  If it exists, return the data
 	 * if not, return FALSE
 	 *
-	 * @param 	string
-	 * @return 	mixed		value that is stored/FALSE on failure
+	 * @param	string	$id
+	 * @return	mixed	value matching $id or FALSE on failure
 	 */
 	public function get($id)
 	{
-		return $this->{$this->_adapter}->get($id);
+		return $this->{$this->_adapter}->get($this->key_prefix.$id);
 	}
 
 	// ------------------------------------------------------------------------
@@ -70,15 +143,15 @@
 	/**
 	 * Cache Save
 	 *
-	 * @param 	string		Unique Key
-	 * @param 	mixed		Data to store
-	 * @param 	int			Length of time (in seconds) to cache the data
-	 *
-	 * @return 	boolean		true on success/false on failure
+	 * @param	string	$id	Cache ID
+	 * @param	mixed	$data	Data to store
+	 * @param	int	$ttl	Cache TTL (in seconds)
+	 * @param	bool	$raw	Whether to store the raw value
+	 * @return	bool	TRUE on success, FALSE on failure
 	 */
-	public function save($id, $data, $ttl = 60)
+	public function save($id, $data, $ttl = 60, $raw = FALSE)
 	{
-		return $this->{$this->_adapter}->save($id, $data, $ttl);
+		return $this->{$this->_adapter}->save($this->key_prefix.$id, $data, $ttl, $raw);
 	}
 
 	// ------------------------------------------------------------------------
@@ -86,129 +159,97 @@
 	/**
 	 * Delete from Cache
 	 *
-	 * @param 	mixed		unique identifier of the item in the cache
-	 * @return 	boolean		true on success/false on failure
+	 * @param	string	$id	Cache ID
+	 * @return	bool	TRUE on success, FALSE on failure
 	 */
 	public function delete($id)
 	{
-		return $this->{$this->_adapter}->delete($id);
+		return $this->{$this->_adapter}->delete($this->key_prefix.$id);
 	}
 
 	// ------------------------------------------------------------------------
 
 	/**
-	 * Clean the cache
+	 * Increment a raw value
 	 *
-	 * @return 	boolean		false on failure/true on success
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to add
+	 * @return	mixed	New value on success or FALSE on failure
 	 */
-	public function clean()
+	public function increment($id, $offset = 1)
 	{
-		return $this->{$this->_adapter}->clean();
+		return $this->{$this->_adapter}->increment($this->key_prefix.$id, $offset);
 	}
 
 	// ------------------------------------------------------------------------
 
 	/**
-	 * Cache Info
+	 * Decrement a raw value
 	 *
-	 * @param 	string		user/filehits
-	 * @return 	mixed		array on success, false on failure
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to reduce by
+	 * @return	mixed	New value on success or FALSE on failure
 	 */
-	public function cache_info($type = 'user')
+	public function decrement($id, $offset = 1)
 	{
-		return $this->{$this->_adapter}->cache_info($type);
+		return $this->{$this->_adapter}->decrement($this->key_prefix.$id, $offset);
 	}
 
 	// ------------------------------------------------------------------------
 
 	/**
-	 * Get Cache Metadata
+	 * Clean the cache
 	 *
-	 * @param 	mixed		key to get cache metadata on
-	 * @return 	mixed		return value from child method
+	 * @return	bool	TRUE on success, FALSE on failure
 	 */
-	public function get_metadata($id)
+	public function clean()
 	{
-		return $this->{$this->_adapter}->get_metadata($id);
+		return $this->{$this->_adapter}->clean();
 	}
 
 	// ------------------------------------------------------------------------
 
 	/**
-	 * Initialize
-	 *
-	 * Initialize class properties based on the configuration array.
+	 * Cache Info
 	 *
-	 * @param	array
-	 * @return 	void
+	 * @param	string	$type = 'user'	user/filehits
+	 * @return	mixed	array containing cache info on success OR FALSE on failure
 	 */
-	private function _initialize($config)
-	{
-		$default_config = array(
-				'adapter',
-				'memcached'
-			);
-
-		foreach ($default_config as $key)
-		{
-			if (isset($config[$key]))
-			{
-				$param = '_'.$key;
-
-				$this->{$param} = $config[$key];
-			}
-		}
-
-		if (isset($config['backup']))
-		{
-			if (in_array('cache_'.$config['backup'], $this->valid_drivers))
+	public function cache_info($type = 'user')
 			{
-				$this->_backup_driver = $config['backup'];
-			}
-		}
+		return $this->{$this->_adapter}->cache_info($type);
 	}
 
 	// ------------------------------------------------------------------------
 
 	/**
-	 * Is the requested driver supported in this environment?
+	 * Get Cache Metadata
 	 *
-	 * @param 	string	The driver to test.
-	 * @return 	array
+	 * @param	string	$id	key to get cache metadata on
+	 * @return	mixed	cache item metadata
 	 */
-	public function is_supported($driver)
-	{
-		static $support = array();
-
-		if ( ! isset($support[$driver]))
+	public function get_metadata($id)
 		{
-			$support[$driver] = $this->{$driver}->is_supported();
-		}
-
-		return $support[$driver];
+		return $this->{$this->_adapter}->get_metadata($this->key_prefix.$id);
 	}
 
 	// ------------------------------------------------------------------------
 
 	/**
-	 * __get()
+	 * Is the requested driver supported in this environment?
 	 *
-	 * @param 	child
-	 * @return 	object
+	 * @param	string	$driver	The driver to test
+	 * @return	array
 	 */
-	public function __get($child)
+	public function is_supported($driver)
 	{
-		$obj = parent::__get($child);
+		static $support;
 
-		if ( ! $this->is_supported($child))
+		if ( ! isset($support, $support[$driver]))
 		{
-			$this->_adapter = $this->_backup_driver;
+			$support[$driver] = $this->{$driver}->is_supported();
 		}
 
-		return $obj;
+		return $support[$driver];
 	}
-
 }
-
-/* End of file Cache.php */
-/* Location: ./system/libraries/Cache/Cache.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/drivers/Cache_apc.php opensourcepos/system/libraries/Cache/drivers/Cache_apc.php
--- pos-prod/system/libraries/Cache/drivers/Cache_apc.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/drivers/Cache_apc.php	2016-05-23 15:32:31.944838808 -0700
@@ -1,19 +1,41 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 2.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 2.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter APC Caching Class
@@ -21,10 +43,9 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Core
- * @author		ExpressionEngine Dev Team
+ * @author		EllisLab Dev Team
  * @link
  */
-
 class CI_Cache_apc extends CI_Driver {
 
 	/**
@@ -28,6 +49,24 @@
 class CI_Cache_apc extends CI_Driver {
 
 	/**
+	 * Class constructor
+	 *
+	 * Only present so that an error message is logged
+	 * if APC is not available.
+	 *
+	 * @return	void
+	 */
+	public function __construct()
+	{
+		if ( ! $this->is_supported())
+		{
+			log_message('error', 'Cache: Failed to initialize APC; extension not loaded/enabled?');
+		}
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
 	 * Get
 	 *
 	 * Look for a value in the cache.  If it exists, return the data
@@ -38,9 +77,17 @@
 	 */
 	public function get($id)
 	{
-		$data = apc_fetch($id);
+		$success = FALSE;
+		$data = apc_fetch($id, $success);
+
+		if ($success === TRUE)
+		{
+			return is_array($data)
+				? unserialize($data[0])
+				: $data;
+		}
 
-		return (is_array($data)) ? $data[0] : FALSE;
+		return FALSE;
 	}
 
 	// ------------------------------------------------------------------------
@@ -48,15 +95,21 @@
 	/**
 	 * Cache Save
 	 *
-	 * @param 	string		Unique Key
-	 * @param 	mixed		Data to store
-	 * @param 	int			Length of time (in seconds) to cache the data
-	 *
-	 * @return 	boolean		true on success/false on failure
-	 */
-	public function save($id, $data, $ttl = 60)
-	{
-		return apc_store($id, array($data, time(), $ttl), $ttl);
+	 * @param	string	$id	Cache ID
+	 * @param	mixed	$data	Data to store
+	 * @param	int	$ttol	Length of time (in seconds) to cache the data
+	 * @param	bool	$raw	Whether to store the raw value
+	 * @return	bool	TRUE on success, FALSE on failure
+	 */
+	public function save($id, $data, $ttl = 60, $raw = FALSE)
+	{
+		$ttl = (int) $ttl;
+
+		return apc_store(
+			$id,
+			($raw === TRUE ? $data : array(serialize($data), time(), $ttl)),
+			$ttl
+		);
 	}
 
 	// ------------------------------------------------------------------------
@@ -65,7 +118,7 @@
 	 * Delete from Cache
 	 *
 	 * @param 	mixed		unique identifier of the item in the cache
-	 * @param 	boolean		true on success/false on failure
+	 * @return	bool	true on success/false on failure
 	 */
 	public function delete($id)
 	{
@@ -75,9 +128,37 @@
 	// ------------------------------------------------------------------------
 
 	/**
+	 * Increment a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to add
+	 * @return	mixed	New value on success or FALSE on failure
+	 */
+	public function increment($id, $offset = 1)
+	{
+		return apc_inc($id, $offset);
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Decrement a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to reduce by
+	 * @return	mixed	New value on success or FALSE on failure
+	 */
+	public function decrement($id, $offset = 1)
+	{
+		return apc_dec($id, $offset);
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
 	 * Clean the cache
 	 *
-	 * @return 	boolean		false on failure/true on success
+	 * @return	bool	false on failure/true on success
 	 */
 	public function clean()
 	{
@@ -107,9 +188,10 @@
 	 */
 	public function get_metadata($id)
 	{
-		$stored = apc_fetch($id);
+		$success = FALSE;
+		$stored = apc_fetch($id, $success);
 
-		if (count($stored) !== 3)
+		if ($success === FALSE OR count($stored) !== 3)
 		{
 			return FALSE;
 		}
@@ -119,7 +201,7 @@
 		return array(
 			'expire'	=> $time + $ttl,
 			'mtime'		=> $time,
-			'data'		=> $data
+			'data'		=> unserialize($data)
 		);
 	}
 
@@ -129,19 +211,11 @@
 	 * is_supported()
 	 *
 	 * Check to see if APC is available on this system, bail if it isn't.
+	 *
+	 * @return	bool
 	 */
 	public function is_supported()
 	{
-		if ( ! extension_loaded('apc') OR ini_get('apc.enabled') != "1")
-		{
-			log_message('error', 'The APC PHP extension must be loaded to use APC Cache.');
-			return FALSE;
-		}
-
-		return TRUE;
+		return (extension_loaded('apc') && ini_get('apc.enabled'));
 	}
-
 }
-
-/* End of file Cache_apc.php */
-/* Location: ./system/libraries/Cache/drivers/Cache_apc.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/drivers/Cache_dummy.php opensourcepos/system/libraries/Cache/drivers/Cache_dummy.php
--- pos-prod/system/libraries/Cache/drivers/Cache_dummy.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/drivers/Cache_dummy.php	2016-05-23 15:32:31.944838808 -0700
@@ -1,19 +1,41 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
  * @since		Version 2.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Dummy Caching Class
@@ -21,10 +43,9 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Core
- * @author		ExpressionEngine Dev Team
+ * @author		EllisLab Dev Team
  * @link
  */
-
 class CI_Cache_dummy extends CI_Driver {
 
 	/**
@@ -33,7 +54,7 @@
 	 * Since this is the dummy class, it's always going to return FALSE.
 	 *
 	 * @param 	string
-	 * @return 	Boolean		FALSE
+	 * @return	bool	FALSE
 	 */
 	public function get($id)
 	{
@@ -48,10 +69,10 @@
 	 * @param 	string		Unique Key
 	 * @param 	mixed		Data to store
 	 * @param 	int			Length of time (in seconds) to cache the data
-	 *
-	 * @return 	boolean		TRUE, Simulating success
+	 * @param	bool	Whether to store the raw value
+	 * @return	bool	TRUE, Simulating success
 	 */
-	public function save($id, $data, $ttl = 60)
+	public function save($id, $data, $ttl = 60, $raw = FALSE)
 	{
 		return TRUE;
 	}
@@ -62,7 +83,7 @@
 	 * Delete from Cache
 	 *
 	 * @param 	mixed		unique identifier of the item in the cache
-	 * @param 	boolean		TRUE, simulating success
+	 * @return	bool	TRUE, simulating success
 	 */
 	public function delete($id)
 	{
@@ -72,9 +93,37 @@
 	// ------------------------------------------------------------------------
 
 	/**
+	 * Increment a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to add
+	 * @return	mixed	New value on success or FALSE on failure
+	 */
+	public function increment($id, $offset = 1)
+	{
+		return TRUE;
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Decrement a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to reduce by
+	 * @return	mixed	New value on success or FALSE on failure
+	 */
+	public function decrement($id, $offset = 1)
+	{
+		return TRUE;
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
 	 * Clean the cache
 	 *
-	 * @return 	boolean		TRUE, simulating success
+	 * @return	bool	TRUE, simulating success
 	 */
 	public function clean()
 	{
@@ -87,7 +136,7 @@
 	 * Cache Info
 	 *
 	 * @param 	string		user/filehits
-	 * @return 	boolean		FALSE
+	 * @return	bool	FALSE
 	 */
 	 public function cache_info($type = NULL)
 	 {
@@ -100,7 +149,7 @@
 	 * Get Cache Metadata
 	 *
 	 * @param 	mixed		key to get cache metadata on
-	 * @return 	boolean		FALSE
+	 * @return	bool	FALSE
 	 */
 	public function get_metadata($id)
 	{
@@ -113,7 +162,7 @@
 	 * Is this caching driver supported on the system?
 	 * Of course this one is.
 	 *
-	 * @return TRUE;
+	 * @return	bool	TRUE
 	 */
 	public function is_supported()
 	{
@@ -121,6 +170,3 @@
 	}
 
 }
-
-/* End of file Cache_dummy.php */
-/* Location: ./system/libraries/Cache/drivers/Cache_dummy.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/drivers/Cache_file.php opensourcepos/system/libraries/Cache/drivers/Cache_file.php
--- pos-prod/system/libraries/Cache/drivers/Cache_file.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/drivers/Cache_file.php	2016-05-23 15:32:31.944838808 -0700
@@ -1,36 +1,64 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
  * @since		Version 2.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
- * CodeIgniter Memcached Caching Class
+ * CodeIgniter File Caching Class
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Core
- * @author		ExpressionEngine Dev Team
+ * @author		EllisLab Dev Team
  * @link
  */
-
 class CI_Cache_file extends CI_Driver {
 
+	/**
+	 * Directory in which to save cache files
+	 *
+	 * @var string
+	 */
 	protected $_cache_path;
 
 	/**
-	 * Constructor
+	 * Initialize file-based cache
+	 *
+	 * @return	void
 	 */
 	public function __construct()
 	{
@@ -36,10 +64,8 @@
 	{
 		$CI =& get_instance();
 		$CI->load->helper('file');
-
 		$path = $CI->config->item('cache_path');
-
-		$this->_cache_path = ($path == '') ? APPPATH.'cache/' : $path;
+		$this->_cache_path = ($path === '') ? APPPATH.'cache/' : $path;
 	}
 
 	// ------------------------------------------------------------------------
@@ -47,26 +73,13 @@
 	/**
 	 * Fetch from cache
 	 *
-	 * @param 	mixed		unique key id
-	 * @return 	mixed		data on success/false on failure
+	 * @param	string	$id	Cache ID
+	 * @return	mixed	Data on success, FALSE on failure
 	 */
 	public function get($id)
 	{
-		if ( ! file_exists($this->_cache_path.$id))
-		{
-			return FALSE;
-		}
-
-		$data = read_file($this->_cache_path.$id);
-		$data = unserialize($data);
-
-		if (time() >  $data['time'] + $data['ttl'])
-		{
-			unlink($this->_cache_path.$id);
-			return FALSE;
-		}
-
-		return $data['data'];
+		$data = $this->_get($id);
+		return is_array($data) ? $data['data'] : FALSE;
 	}
 
 	// ------------------------------------------------------------------------
@@ -74,13 +87,13 @@
 	/**
 	 * Save into cache
 	 *
-	 * @param 	string		unique key
-	 * @param 	mixed		data to store
-	 * @param 	int		length of time (in seconds) the cache is valid
-	 *					- Default is 60 seconds
-	 * @return 	boolean		true on success/false on failure
+	 * @param	string	$id	Cache ID
+	 * @param	mixed	$data	Data to store
+	 * @param	int	$ttl	Time to live in seconds
+	 * @param	bool	$raw	Whether to store the raw value (unused)
+	 * @return	bool	TRUE on success, FALSE on failure
 	 */
-	public function save($id, $data, $ttl = 60)
+	public function save($id, $data, $ttl = 60, $raw = FALSE)
 	{
 		$contents = array(
 				'time'		=> time(),
@@ -90,7 +103,7 @@
 
 		if (write_file($this->_cache_path.$id, serialize($contents)))
 		{
-			@chmod($this->_cache_path.$id, 0777);
+			chmod($this->_cache_path.$id, 0640);
 			return TRUE;
 		}
 
@@ -103,11 +116,67 @@
 	 * Delete from Cache
 	 *
 	 * @param 	mixed		unique identifier of item in cache
-	 * @return 	boolean		true on success/false on failure
+	 * @return	bool	true on success/false on failure
 	 */
 	public function delete($id)
 	{
-		return unlink($this->_cache_path.$id);
+		return file_exists($this->_cache_path.$id) ? unlink($this->_cache_path.$id) : FALSE;
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Increment a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to add
+	 * @return	New value on success, FALSE on failure
+	 */
+	public function increment($id, $offset = 1)
+	{
+		$data = $this->_get($id);
+
+		if ($data === FALSE)
+		{
+			$data = array('data' => 0, 'ttl' => 60);
+		}
+		elseif ( ! is_int($data['data']))
+		{
+			return FALSE;
+		}
+
+		$new_value = $data['data'] + $offset;
+		return $this->save($id, $new_value, $data['ttl'])
+			? $new_value
+			: FALSE;
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Decrement a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to reduce by
+	 * @return	New value on success, FALSE on failure
+	 */
+	public function decrement($id, $offset = 1)
+	{
+		$data = $this->_get($id);
+
+		if ($data === FALSE)
+		{
+			$data = array('data' => 0, 'ttl' => 60);
+		}
+		elseif ( ! is_int($data['data']))
+		{
+			return FALSE;
+		}
+
+		$new_value = $data['data'] - $offset;
+		return $this->save($id, $new_value, $data['ttl'])
+			? $new_value
+			: FALSE;
 	}
 
 	// ------------------------------------------------------------------------
@@ -115,11 +184,11 @@
 	/**
 	 * Clean the Cache
 	 *
-	 * @return 	boolean		false on failure/true on success
+	 * @return	bool	false on failure/true on success
 	 */
 	public function clean()
 	{
-		return delete_files($this->_cache_path);
+		return delete_files($this->_cache_path, FALSE, TRUE);
 	}
 
 	// ------------------------------------------------------------------------
@@ -152,8 +221,7 @@
 			return FALSE;
 		}
 
-		$data = read_file($this->_cache_path.$id);
-		$data = unserialize($data);
+		$data = unserialize(file_get_contents($this->_cache_path.$id));
 
 		if (is_array($data))
 		{
@@ -180,14 +248,39 @@
 	 *
 	 * In the file driver, check to see that the cache directory is indeed writable
 	 *
-	 * @return boolean
+	 * @return	bool
 	 */
 	public function is_supported()
 	{
 		return is_really_writable($this->_cache_path);
 	}
 
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Get all data
+	 *
+	 * Internal method to get all the relevant data about a cache item
+	 *
+	 * @param	string	$id	Cache ID
+	 * @return	mixed	Data array on success or FALSE on failure
+	 */
+	protected function _get($id)
+	{
+		if ( ! is_file($this->_cache_path.$id))
+		{
+			return FALSE;
 }
 
-/* End of file Cache_file.php */
-/* Location: ./system/libraries/Cache/drivers/Cache_file.php */
\ No newline at end of file
+		$data = unserialize(file_get_contents($this->_cache_path.$id));
+
+		if ($data['ttl'] > 0 && time() > $data['time'] + $data['ttl'])
+		{
+			unlink($this->_cache_path.$id);
+			return FALSE;
+		}
+
+		return $data;
+	}
+
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/drivers/Cache_memcached.php opensourcepos/system/libraries/Cache/drivers/Cache_memcached.php
--- pos-prod/system/libraries/Cache/drivers/Cache_memcached.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/drivers/Cache_memcached.php	2016-05-23 15:32:31.944838808 -0700
@@ -1,19 +1,41 @@
-<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
  * @since		Version 2.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Memcached Caching Class
@@ -21,35 +43,113 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Core
- * @author		ExpressionEngine Dev Team
+ * @author		EllisLab Dev Team
  * @link
  */
-
 class CI_Cache_memcached extends CI_Driver {
 
-	private $_memcached;	// Holds the memcached object
+	/**
+	 * Holds the memcached object
+	 *
+	 * @var object
+	 */
+	protected $_memcached;
 
+	/**
+	 * Memcached configuration
+	 *
+	 * @var array
+	 */
 	protected $_memcache_conf 	= array(
 					'default' => array(
-						'default_host'		=> '127.0.0.1',
-						'default_port'		=> 11211,
-						'default_weight'	=> 1
+			'host'		=> '127.0.0.1',
+			'port'		=> 11211,
+			'weight'	=> 1
 					)
 				);
 
 	// ------------------------------------------------------------------------
 
 	/**
+	 * Class constructor
+	 *
+	 * Setup Memcache(d)
+	 *
+	 * @return	void
+	 */
+	public function __construct()
+	{
+		// Try to load memcached server info from the config file.
+		$CI =& get_instance();
+		$defaults = $this->_memcache_conf['default'];
+
+		if ($CI->config->load('memcached', TRUE, TRUE))
+		{
+			if (is_array($CI->config->config['memcached']))
+			{
+				$this->_memcache_conf = array();
+
+				foreach ($CI->config->config['memcached'] as $name => $conf)
+				{
+					$this->_memcache_conf[$name] = $conf;
+				}
+			}
+		}
+
+		if (class_exists('Memcached', FALSE))
+		{
+			$this->_memcached = new Memcached();
+		}
+		elseif (class_exists('Memcache', FALSE))
+		{
+			$this->_memcached = new Memcache();
+		}
+		else
+		{
+			log_message('error', 'Cache: Failed to create Memcache(d) object; extension not loaded?');
+			return;
+		}
+
+		foreach ($this->_memcache_conf as $cache_server)
+		{
+			isset($cache_server['hostname']) OR $cache_server['hostname'] = $defaults['host'];
+			isset($cache_server['port']) OR $cache_server['port'] = $defaults['port'];
+			isset($cache_server['weight']) OR $cache_server['weight'] = $defaults['weight'];
+
+			if (get_class($this->_memcached) === 'Memcache')
+			{
+				// Third parameter is persistance and defaults to TRUE.
+				$this->_memcached->addServer(
+					$cache_server['hostname'],
+					$cache_server['port'],
+					TRUE,
+					$cache_server['weight']
+				);
+			}
+			else
+			{
+				$this->_memcached->addServer(
+					$cache_server['hostname'],
+					$cache_server['port'],
+					$cache_server['weight']
+				);
+			}
+		}
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
 	 * Fetch from cache
 	 *
-	 * @param 	mixed		unique key id
-	 * @return 	mixed		data on success/false on failure
+	 * @param	string	$id	Cache ID
+	 * @return	mixed	Data on success, FALSE on failure
 	 */
 	public function get($id)
 	{
 		$data = $this->_memcached->get($id);
 
-		return (is_array($data)) ? $data[0] : FALSE;
+		return is_array($data) ? $data[0] : $data;
 	}
 
 	// ------------------------------------------------------------------------
@@ -57,20 +157,26 @@
 	/**
 	 * Save
 	 *
-	 * @param 	string		unique identifier
-	 * @param 	mixed		data being cached
-	 * @param 	int			time to live
-	 * @return 	boolean 	true on success, false on failure
+	 * @param	string	$id	Cache ID
+	 * @param	mixed	$data	Data being cached
+	 * @param	int	$ttl	Time to live
+	 * @param	bool	$raw	Whether to store the raw value
+	 * @return	bool	TRUE on success, FALSE on failure
 	 */
-	public function save($id, $data, $ttl = 60)
+	public function save($id, $data, $ttl = 60, $raw = FALSE)
 	{
-		if (get_class($this->_memcached) == 'Memcached')
+		if ($raw !== TRUE)
+		{
+			$data = array($data, time(), $ttl);
+		}
+
+		if (get_class($this->_memcached) === 'Memcached')
 		{
-			return $this->_memcached->set($id, array($data, time(), $ttl), $ttl);
+			return $this->_memcached->set($id, $data, $ttl);
 		}
-		else if (get_class($this->_memcached) == 'Memcache')
+		elseif (get_class($this->_memcached) === 'Memcache')
 		{
-			return $this->_memcached->set($id, array($data, time(), $ttl), 0, $ttl);
+			return $this->_memcached->set($id, $data, 0, $ttl);
 		}
 
 		return FALSE;
@@ -82,7 +188,7 @@
 	 * Delete from Cache
 	 *
 	 * @param 	mixed		key to be deleted.
-	 * @return 	boolean 	true on success, false on failure
+	 * @return	bool	true on success, false on failure
 	 */
 	public function delete($id)
 	{
@@ -92,9 +198,37 @@
 	// ------------------------------------------------------------------------
 
 	/**
+	 * Increment a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to add
+	 * @return	mixed	New value on success or FALSE on failure
+	 */
+	public function increment($id, $offset = 1)
+	{
+		return $this->_memcached->increment($id, $offset);
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
+	 * Decrement a raw value
+	 *
+	 * @param	string	$id	Cache ID
+	 * @param	int	$offset	Step/value to reduce by
+	 * @return	mixed	New value on success or FALSE on failure
+	 */
+	public function decrement($id, $offset = 1)
+	{
+		return $this->_memcached->decrement($id, $offset);
+	}
+
+	// ------------------------------------------------------------------------
+
+	/**
 	 * Clean the Cache
 	 *
-	 * @return 	boolean		false on failure/true on success
+	 * @return	bool	false on failure/true on success
 	 */
 	public function clean()
 	{
@@ -106,10 +240,9 @@
 	/**
 	 * Cache Info
 	 *
-	 * @param 	null		type not supported in memcached
 	 * @return 	mixed 		array on success, false on failure
 	 */
-	public function cache_info($type = NULL)
+	public function cache_info()
 	{
 		return $this->_memcached->getStats();
 	}
@@ -143,72 +276,15 @@
 	// ------------------------------------------------------------------------
 
 	/**
-	 * Setup memcached.
-	 */
-	private function _setup_memcached()
-	{
-		// Try to load memcached server info from the config file.
-		$CI =& get_instance();
-		if ($CI->config->load('memcached', TRUE, TRUE))
-		{
-			if (is_array($CI->config->config['memcached']))
-			{
-				$this->_memcache_conf = NULL;
-
-				foreach ($CI->config->config['memcached'] as $name => $conf)
-				{
-					$this->_memcache_conf[$name] = $conf;
-				}
-			}
-		}
-
-		$this->_memcached = new Memcached();
-
-		foreach ($this->_memcache_conf as $name => $cache_server)
-		{
-			if ( ! array_key_exists('hostname', $cache_server))
-			{
-				$cache_server['hostname'] = $this->_default_options['default_host'];
-			}
-
-			if ( ! array_key_exists('port', $cache_server))
-			{
-				$cache_server['port'] = $this->_default_options['default_port'];
-			}
-	
-			if ( ! array_key_exists('weight', $cache_server))
-			{
-				$cache_server['weight'] = $this->_default_options['default_weight'];
-			}
-	
-			$this->_memcached->addServer(
-					$cache_server['hostname'], $cache_server['port'], $cache_server['weight']
-			);
-		}
-	}
-
-	// ------------------------------------------------------------------------
-
-
-	/**
 	 * Is supported
 	 *
 	 * Returns FALSE if memcached is not supported on the system.
 	 * If it is, we setup the memcached object & return TRUE
+	 *
+	 * @return	bool
 	 */
 	public function is_supported()
 	{
-		if ( ! extension_loaded('memcached'))
-		{
-			log_message('error', 'The Memcached Extension must be loaded to use Memcached Cache.');
-			return FALSE;
+		return (extension_loaded('memcached') OR extension_loaded('memcache'));
 		}
-
-		$this->_setup_memcached();
-		return TRUE;
 	}
-
-}
-
-/* End of file Cache_memcached.php */
-/* Location: ./system/libraries/Cache/drivers/Cache_memcached.php */
\ No newline at end of file
Only in opensourcepos/system/libraries/Cache/drivers: Cache_redis.php
Only in opensourcepos/system/libraries/Cache/drivers: Cache_wincache.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/drivers/index.html opensourcepos/system/libraries/Cache/drivers/index.html
--- pos-prod/system/libraries/Cache/drivers/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/drivers/index.html	2016-05-23 15:32:31.944838808 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cache/index.html opensourcepos/system/libraries/Cache/index.html
--- pos-prod/system/libraries/Cache/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cache/index.html	2016-05-23 15:32:31.944838808 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Calendar.php opensourcepos/system/libraries/Calendar.php
--- pos-prod/system/libraries/Calendar.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Calendar.php	2016-05-23 15:32:31.944838808 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Calendar Class
@@ -23,43 +45,96 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/calendar.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/calendar.html
  */
 class CI_Calendar {
 
-	var $CI;
-	var $lang;
-	var $local_time;
-	var $template		= '';
-	var $start_day		= 'sunday';
-	var $month_type		= 'long';
-	var $day_type		= 'abr';
-	var $show_next_prev	= FALSE;
-	var $next_prev_url	= '';
+	/**
+	 * Calendar layout template
+	 *
+	 * @var mixed
+	 */
+	public $template = '';
+
+	/**
+	 * Replacements array for template
+	 *
+	 * @var array
+	 */
+	public $replacements = array();
+
+	/**
+	 * Day of the week to start the calendar on
+	 *
+	 * @var string
+	 */
+	public $start_day = 'sunday';
+
+	/**
+	 * How to display months
+	 *
+	 * @var string
+	 */
+	public $month_type = 'long';
+
+	/**
+	 * How to display names of days
+	 *
+	 * @var string
+	 */
+	public $day_type = 'abr';
+
+	/**
+	 * Whether to show next/prev month links
+	 *
+	 * @var bool
+	 */
+	public $show_next_prev = FALSE;
+
+	/**
+	 * Url base to use for next/prev month links
+	 *
+	 * @var bool
+	 */
+	public $next_prev_url = '';
+
+	/**
+	 * Show days of other months
+	 *
+	 * @var bool
+	 */
+	public $show_other_days = FALSE;
+
+	// --------------------------------------------------------------------
 
 	/**
-	 * Constructor
+	 * CI Singleton
 	 *
-	 * Loads the calendar language file and sets the default time reference
+	 * @var object
+	 */
+	protected $CI;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
+	 *
+	 * Loads the calendar language file and sets the default time reference.
+	 *
+	 * @uses	CI_Lang::$is_loaded
+	 *
+	 * @param	array	$config	Calendar options
+	 * @return	void
 	 */
 	public function __construct($config = array())
 	{
 		$this->CI =& get_instance();
-
-		if ( ! in_array('calendar_lang.php', $this->CI->lang->is_loaded, TRUE))
-		{
 			$this->CI->lang->load('calendar');
-		}
-
-		$this->local_time = time();
 
-		if (count($config) > 0)
-		{
-			$this->initialize($config);
-		}
+		empty($config) OR $this->initialize($config);
 
-		log_message('debug', "Calendar Class Initialized");
+		log_message('info', 'Calendar Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -69,11 +144,10 @@
 	 *
 	 * Accepts an associative array as input, containing display preferences
 	 *
-	 * @access	public
 	 * @param	array	config preferences
-	 * @return	void
+	 * @return	CI_Calendar
 	 */
-	function initialize($config = array())
+	public function initialize($config = array())
 	{
 		foreach ($config as $key => $val)
 		{
@@ -82,6 +156,14 @@
 				$this->$key = $val;
 			}
 		}
+
+		// Set the next_prev_url to the controller if required but not defined
+		if ($this->show_next_prev === TRUE && empty($this->next_prev_url))
+		{
+			$this->next_prev_url = $this->CI->config->site_url($this->CI->router->class.'/'.$this->CI->router->method);
+		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -89,29 +171,37 @@
 	/**
 	 * Generate the calendar
 	 *
-	 * @access	public
-	 * @param	integer	the year
-	 * @param	integer	the month
+	 * @param	int	the year
+	 * @param	int	the month
 	 * @param	array	the data to be shown in the calendar cells
 	 * @return	string
 	 */
-	function generate($year = '', $month = '', $data = array())
+	public function generate($year = '', $month = '', $data = array())
 	{
-		// Set and validate the supplied month/year
-		if ($year == '')
-			$year  = date("Y", $this->local_time);
+		$local_time = time();
 
-		if ($month == '')
-			$month = date("m", $this->local_time);
-
-		if (strlen($year) == 1)
+		// Set and validate the supplied month/year
+		if (empty($year))
+		{
+			$year = date('Y', $local_time);
+		}
+		elseif (strlen($year) === 1)
+		{
 			$year = '200'.$year;
-
-		if (strlen($year) == 2)
+		}
+		elseif (strlen($year) === 2)
+		{
 			$year = '20'.$year;
+		}
 
-		if (strlen($month) == 1)
+		if (empty($month))
+		{
+			$month = date('m', $local_time);
+		}
+		elseif (strlen($month) === 1)
+		{
 			$month = '0'.$month;
+		}
 
 		$adjusted_date = $this->adjust_date($month, $year);
 
@@ -123,12 +213,12 @@
 
 		// Set the starting day of the week
 		$start_days	= array('sunday' => 0, 'monday' => 1, 'tuesday' => 2, 'wednesday' => 3, 'thursday' => 4, 'friday' => 5, 'saturday' => 6);
-		$start_day = ( ! isset($start_days[$this->start_day])) ? 0 : $start_days[$this->start_day];
+		$start_day	= isset($start_days[$this->start_day]) ? $start_days[$this->start_day] : 0;
 
 		// Set the starting day number
 		$local_date = mktime(12, 0, 0, $month, 1, $year);
 		$date = getdate($local_date);
-		$day  = $start_day + 1 - $date["wday"];
+		$day  = $start_day + 1 - $date['wday'];
 
 		while ($day > 1)
 		{
@@ -137,115 +227,116 @@
 
 		// Set the current month/year/day
 		// We use this to determine the "today" date
-		$cur_year	= date("Y", $this->local_time);
-		$cur_month	= date("m", $this->local_time);
-		$cur_day	= date("j", $this->local_time);
+		$cur_year	= date('Y', $local_time);
+		$cur_month	= date('m', $local_time);
+		$cur_day	= date('j', $local_time);
 
-		$is_current_month = ($cur_year == $year AND $cur_month == $month) ? TRUE : FALSE;
+		$is_current_month = ($cur_year == $year && $cur_month == $month);
 
 		// Generate the template data array
 		$this->parse_template();
 
 		// Begin building the calendar output
-		$out = $this->temp['table_open'];
-		$out .= "\n";
-
-		$out .= "\n";
-		$out .= $this->temp['heading_row_start'];
-		$out .= "\n";
+		$out = $this->replacements['table_open']."\n\n".$this->replacements['heading_row_start']."\n";
 
 		// "previous" month link
-		if ($this->show_next_prev == TRUE)
+		if ($this->show_next_prev === TRUE)
 		{
 			// Add a trailing slash to the  URL if needed
-			$this->next_prev_url = preg_replace("/(.+?)\/*$/", "\\1/",  $this->next_prev_url);
+			$this->next_prev_url = preg_replace('/(.+?)\/*$/', '\\1/', $this->next_prev_url);
 
 			$adjusted_date = $this->adjust_date($month - 1, $year);
-			$out .= str_replace('{previous_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->temp['heading_previous_cell']);
-			$out .= "\n";
+			$out .= str_replace('{previous_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->replacements['heading_previous_cell'])."\n";
 		}
 
 		// Heading containing the month/year
-		$colspan = ($this->show_next_prev == TRUE) ? 5 : 7;
+		$colspan = ($this->show_next_prev === TRUE) ? 5 : 7;
 
-		$this->temp['heading_title_cell'] = str_replace('{colspan}', $colspan, $this->temp['heading_title_cell']);
-		$this->temp['heading_title_cell'] = str_replace('{heading}', $this->get_month_name($month)."&nbsp;".$year, $this->temp['heading_title_cell']);
+		$this->replacements['heading_title_cell'] = str_replace('{colspan}', $colspan,
+								str_replace('{heading}', $this->get_month_name($month).'&nbsp;'.$year, $this->replacements['heading_title_cell']));
 
-		$out .= $this->temp['heading_title_cell'];
-		$out .= "\n";
+		$out .= $this->replacements['heading_title_cell']."\n";
 
 		// "next" month link
-		if ($this->show_next_prev == TRUE)
+		if ($this->show_next_prev === TRUE)
 		{
 			$adjusted_date = $this->adjust_date($month + 1, $year);
-			$out .= str_replace('{next_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->temp['heading_next_cell']);
+			$out .= str_replace('{next_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->replacements['heading_next_cell']);
 		}
 
-		$out .= "\n";
-		$out .= $this->temp['heading_row_end'];
-		$out .= "\n";
-
+		$out .= "\n".$this->replacements['heading_row_end']."\n\n"
 		// Write the cells containing the days of the week
-		$out .= "\n";
-		$out .= $this->temp['week_row_start'];
-		$out .= "\n";
+			.$this->replacements['week_row_start']."\n";
 
 		$day_names = $this->get_day_names();
 
 		for ($i = 0; $i < 7; $i ++)
 		{
-			$out .= str_replace('{week_day}', $day_names[($start_day + $i) %7], $this->temp['week_day_cell']);
+			$out .= str_replace('{week_day}', $day_names[($start_day + $i) %7], $this->replacements['week_day_cell']);
 		}
 
-		$out .= "\n";
-		$out .= $this->temp['week_row_end'];
-		$out .= "\n";
+		$out .= "\n".$this->replacements['week_row_end']."\n";
 
 		// Build the main body of the calendar
 		while ($day <= $total_days)
 		{
-			$out .= "\n";
-			$out .= $this->temp['cal_row_start'];
-			$out .= "\n";
+			$out .= "\n".$this->replacements['cal_row_start']."\n";
 
 			for ($i = 0; $i < 7; $i++)
 			{
-				$out .= ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_start_today'] : $this->temp['cal_cell_start'];
-
-				if ($day > 0 AND $day <= $total_days)
+				if ($day > 0 && $day <= $total_days)
 				{
+					$out .= ($is_current_month === TRUE && $day == $cur_day) ? $this->replacements['cal_cell_start_today'] : $this->replacements['cal_cell_start'];
+
 					if (isset($data[$day]))
 					{
 						// Cells with content
-						$temp = ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_content_today'] : $this->temp['cal_cell_content'];
-						$out .= str_replace('{day}', $day, str_replace('{content}', $data[$day], $temp));
+						$temp = ($is_current_month === TRUE && $day == $cur_day) ?
+								$this->replacements['cal_cell_content_today'] : $this->replacements['cal_cell_content'];
+						$out .= str_replace(array('{content}', '{day}'), array($data[$day], $day), $temp);
 					}
 					else
 					{
 						// Cells with no content
-						$temp = ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_no_content_today'] : $this->temp['cal_cell_no_content'];
+						$temp = ($is_current_month === TRUE && $day == $cur_day) ?
+								$this->replacements['cal_cell_no_content_today'] : $this->replacements['cal_cell_no_content'];
 						$out .= str_replace('{day}', $day, $temp);
 					}
+
+					$out .= ($is_current_month === TRUE && $day == $cur_day) ? $this->replacements['cal_cell_end_today'] : $this->replacements['cal_cell_end'];
+				}
+				elseif ($this->show_other_days === TRUE)
+				{
+					$out .= $this->replacements['cal_cell_start_other'];
+
+					if ($day <= 0)
+					{
+						// Day of previous month
+						$prev_month = $this->adjust_date($month - 1, $year);
+						$prev_month_days = $this->get_total_days($prev_month['month'], $prev_month['year']);
+						$out .= str_replace('{day}', $prev_month_days + $day, $this->replacements['cal_cell_other']);
+					}
+					else
+					{
+						// Day of next month
+						$out .= str_replace('{day}', $day - $total_days, $this->replacements['cal_cell_other']);
+					}
+
+					$out .= $this->replacements['cal_cell_end_other'];
 				}
 				else
 				{
 					// Blank cells
-					$out .= $this->temp['cal_cell_blank'];
+					$out .= $this->replacements['cal_cell_start'].$this->replacements['cal_cell_blank'].$this->replacements['cal_cell_end'];
 				}
 
-				$out .= ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_end_today'] : $this->temp['cal_cell_end'];					
 				$day++;
 			}
 
-			$out .= "\n";
-			$out .= $this->temp['cal_row_end'];
-			$out .= "\n";
+			$out .= "\n".$this->replacements['cal_row_end']."\n";
 		}
 
-		$out .= "\n";
-		$out .= $this->temp['table_close'];
-
-		return $out;
+		return $out .= "\n".$this->replacements['table_close'];
 	}
 
 	// --------------------------------------------------------------------
@@ -256,13 +347,12 @@
 	 * Generates a textual month name based on the numeric
 	 * month provided.
 	 *
-	 * @access	public
-	 * @param	integer	the month
+	 * @param	int	the month
 	 * @return	string
 	 */
-	function get_month_name($month)
+	public function get_month_name($month)
 	{
-		if ($this->month_type == 'short')
+		if ($this->month_type === 'short')
 		{
 			$month_names = array('01' => 'cal_jan', '02' => 'cal_feb', '03' => 'cal_mar', '04' => 'cal_apr', '05' => 'cal_may', '06' => 'cal_jun', '07' => 'cal_jul', '08' => 'cal_aug', '09' => 'cal_sep', '10' => 'cal_oct', '11' => 'cal_nov', '12' => 'cal_dec');
 		}
@@ -271,14 +361,9 @@
 			$month_names = array('01' => 'cal_january', '02' => 'cal_february', '03' => 'cal_march', '04' => 'cal_april', '05' => 'cal_mayl', '06' => 'cal_june', '07' => 'cal_july', '08' => 'cal_august', '09' => 'cal_september', '10' => 'cal_october', '11' => 'cal_november', '12' => 'cal_december');
 		}
 
-		$month = $month_names[$month];
-
-		if ($this->CI->lang->line($month) === FALSE)
-		{
-			return ucfirst(str_replace('cal_', '', $month));
-		}
-
-		return $this->CI->lang->line($month);
+		return ($this->CI->lang->line($month_names[$month]) === FALSE)
+			? ucfirst(substr($month_names[$month], 4))
+			: $this->CI->lang->line($month_names[$month]);
 	}
 
 	// --------------------------------------------------------------------
@@ -287,22 +372,23 @@
 	 * Get Day Names
 	 *
 	 * Returns an array of day names (Sunday, Monday, etc.) based
-	 * on the type.  Options: long, short, abrev
+	 * on the type. Options: long, short, abr
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	array
 	 */
-	function get_day_names($day_type = '')
+	public function get_day_names($day_type = '')
+	{
+		if ($day_type !== '')
 	{
-		if ($day_type != '')
 			$this->day_type = $day_type;
+		}
 
-		if ($this->day_type == 'long')
+		if ($this->day_type === 'long')
 		{
 			$day_names = array('sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday');
 		}
-		elseif ($this->day_type == 'short')
+		elseif ($this->day_type === 'short')
 		{
 			$day_names = array('sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat');
 		}
@@ -312,9 +398,9 @@
 		}
 
 		$days = array();
-		foreach ($day_names as $val)
+		for ($i = 0, $c = count($day_names); $i < $c; $i++)
 		{
-			$days[] = ($this->CI->lang->line('cal_'.$val) === FALSE) ? ucfirst($val) : $this->CI->lang->line('cal_'.$val);
+			$days[] = ($this->CI->lang->line('cal_'.$day_names[$i]) === FALSE) ? ucfirst($day_names[$i]) : $this->CI->lang->line('cal_'.$day_names[$i]);
 		}
 
 		return $days;
@@ -329,12 +415,11 @@
 	 * For example, if you submit 13 as the month, the year will
 	 * increment and the month will become January.
 	 *
-	 * @access	public
-	 * @param	integer	the month
-	 * @param	integer	the year
+	 * @param	int	the month
+	 * @param	int	the year
 	 * @return	array
 	 */
-	function adjust_date($month, $year)
+	public function adjust_date($month, $year)
 	{
 		$date = array();
 
@@ -353,7 +438,7 @@
 			$date['year']--;
 		}
 
-		if (strlen($date['month']) == 1)
+		if (strlen($date['month']) === 1)
 		{
 			$date['month'] = '0'.$date['month'];
 		}
@@ -366,30 +451,14 @@
 	/**
 	 * Total days in a given month
 	 *
-	 * @access	public
-	 * @param	integer	the month
-	 * @param	integer	the year
-	 * @return	integer
+	 * @param	int	the month
+	 * @param	int	the year
+	 * @return	int
 	 */
-	function get_total_days($month, $year)
+	public function get_total_days($month, $year)
 	{
-		$days_in_month	= array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
-
-		if ($month < 1 OR $month > 12)
-		{
-			return 0;
-		}
-
-		// Is the year a leap year?
-		if ($month == 2)
-		{
-			if ($year % 400 == 0 OR ($year % 4 == 0 AND $year % 100 != 0))
-			{
-				return 29;
-			}
-		}
-
-		return $days_in_month[$month - 1];
+		$this->CI->load->helper('date');
+		return days_in_month($month, $year);
 	}
 
 	// --------------------------------------------------------------------
@@ -399,10 +468,9 @@
 	 *
 	 * This is used in the event that the user has not created their own template
 	 *
-	 * @access	public
 	 * @return array
 	 */
-	function default_template()
+	public function default_template()
 	{
 		return  array (
 						'table_open'				=> '<table border="0" cellpadding="4" cellspacing="0">',
@@ -417,13 +485,16 @@
 						'cal_row_start'				=> '<tr>',
 						'cal_cell_start'			=> '<td>',
 						'cal_cell_start_today'		=> '<td>',
+			'cal_cell_start_other'		=> '<td style="color: #666;">',
 						'cal_cell_content'			=> '<a href="{content}">{day}</a>',
 						'cal_cell_content_today'	=> '<a href="{content}"><strong>{day}</strong></a>',
 						'cal_cell_no_content'		=> '{day}',
 						'cal_cell_no_content_today'	=> '<strong>{day}</strong>',
 						'cal_cell_blank'			=> '&nbsp;',
+			'cal_cell_other'			=> '{day}',
 						'cal_cell_end'				=> '</td>',
 						'cal_cell_end_today'		=> '</td>',
+			'cal_cell_end_other'		=> '</td>',
 						'cal_row_end'				=> '</tr>',
 						'table_close'				=> '</table>'
 					);
@@ -437,39 +508,39 @@
 	 * Harvests the data within the template {pseudo-variables}
 	 * used to display the calendar
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	CI_Calendar
 	 */
-	function parse_template()
+	public function parse_template()
 	{
-		$this->temp = $this->default_template();
+		$this->replacements = $this->default_template();
 
-		if ($this->template == '')
+		if (empty($this->template))
 		{
-			return;
+			return $this;
 		}
 
+		if (is_string($this->template))
+		{
 		$today = array('cal_cell_start_today', 'cal_cell_content_today', 'cal_cell_no_content_today', 'cal_cell_end_today');
 
-		foreach (array('table_open', 'table_close', 'heading_row_start', 'heading_previous_cell', 'heading_title_cell', 'heading_next_cell', 'heading_row_end', 'week_row_start', 'week_day_cell', 'week_row_end', 'cal_row_start', 'cal_cell_start', 'cal_cell_content', 'cal_cell_no_content',  'cal_cell_blank', 'cal_cell_end', 'cal_row_end', 'cal_cell_start_today', 'cal_cell_content_today', 'cal_cell_no_content_today', 'cal_cell_end_today') as $val)
+			foreach (array('table_open', 'table_close', 'heading_row_start', 'heading_previous_cell', 'heading_title_cell', 'heading_next_cell', 'heading_row_end', 'week_row_start', 'week_day_cell', 'week_row_end', 'cal_row_start', 'cal_cell_start', 'cal_cell_content', 'cal_cell_no_content', 'cal_cell_blank', 'cal_cell_end', 'cal_row_end', 'cal_cell_start_today', 'cal_cell_content_today', 'cal_cell_no_content_today', 'cal_cell_end_today', 'cal_cell_start_other', 'cal_cell_other', 'cal_cell_end_other') as $val)
 		{
-			if (preg_match("/\{".$val."\}(.*?)\{\/".$val."\}/si", $this->template, $match))
+				if (preg_match('/\{'.$val.'\}(.*?)\{\/'.$val.'\}/si', $this->template, $match))
 			{
-				$this->temp[$val] = $match['1'];
+					$this->replacements[$val] = $match[1];
 			}
-			else
-			{
-				if (in_array($val, $today, TRUE))
+				elseif (in_array($val, $today, TRUE))
 				{
-					$this->temp[$val] = $this->temp[str_replace('_today', '', $val)];
+					$this->replacements[$val] = $this->replacements[substr($val, 0, -6)];
 				}
 			}
 		}
+		elseif (is_array($this->template))
+		{
+			$this->replacements = array_merge($this->replacements, $this->template);
 	}
 
+		return $this;
 }
 
-// END CI_Calendar class
-
-/* End of file Calendar.php */
-/* Location: ./system/libraries/Calendar.php */
\ No newline at end of file
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Cart.php opensourcepos/system/libraries/Cart.php
--- pos-prod/system/libraries/Cart.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Cart.php	2016-05-23 15:32:31.945838793 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2006 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Shopping Cart Class
@@ -21,24 +43,58 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Shopping Cart
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/cart.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/cart.html
+ * @deprecated	3.0.0	This class is too specific for CI.
  */
 class CI_Cart {
 
-	// These are the regular expression rules that we use to validate the product ID and product name
-	var $product_id_rules	= '\.a-z0-9_-'; // alpha-numeric, dashes, underscores, or periods
-	var $product_name_rules	= '\.\:\-_ a-z0-9'; // alpha-numeric, dashes, underscores, colons or periods
-
-	// Private variables.  Do not change!
-	var $CI;
-	var $_cart_contents	= array();
+	/**
+	 * These are the regular expression rules that we use to validate the product ID and product name
+	 * alpha-numeric, dashes, underscores, or periods
+	 *
+	 * @var string
+	 */
+	public $product_id_rules = '\.a-z0-9_-';
 
+	/**
+	 * These are the regular expression rules that we use to validate the product ID and product name
+	 * alpha-numeric, dashes, underscores, colons or periods
+	 *
+	 * @var string
+	 */
+	public $product_name_rules = '\w \-\.\:';
+
+	/**
+	 * only allow safe product names
+	 *
+	 * @var bool
+	 */
+	public $product_name_safe = TRUE;
+
+	// --------------------------------------------------------------------------
+
+	/**
+	 * Reference to CodeIgniter instance
+	 *
+	 * @var object
+	 */
+	protected $CI;
+
+	/**
+	 * Contents of the cart
+	 *
+	 * @var array
+	 */
+	protected $_cart_contents = array();
 
 	/**
 	 * Shopping Class Constructor
 	 *
 	 * The constructor loads the Session class, used to store the shopping cart contents.
+	 *
+	 * @param	array
+	 * @return	void
 	 */
 	public function __construct($params = array())
 	{
@@ -46,31 +102,20 @@
 		$this->CI =& get_instance();
 
 		// Are any config settings being passed manually?  If so, set them
-		$config = array();
-		if (count($params) > 0)
-		{
-			foreach ($params as $key => $val)
-			{
-				$config[$key] = $val;
-			}
-		}
+		$config = is_array($params) ? $params : array();
 
 		// Load the Sessions class
-		$this->CI->load->library('session', $config);
+		$this->CI->load->driver('session', $config);
 
-		// Grab the shopping cart array from the session table, if it exists
-		if ($this->CI->session->userdata('cart_contents') !== FALSE)
-		{
+		// Grab the shopping cart array from the session table
 			$this->_cart_contents = $this->CI->session->userdata('cart_contents');
-		}
-		else
+		if ($this->_cart_contents === NULL)
 		{
 			// No cart exists so we'll set some base values
-			$this->_cart_contents['cart_total'] = 0;
-			$this->_cart_contents['total_items'] = 0;
+			$this->_cart_contents = array('cart_total' => 0, 'total_items' => 0);
 		}
 
-		log_message('debug', "Cart Class Initialized");
+		log_message('info', 'Cart Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -78,14 +123,13 @@
 	/**
 	 * Insert items into the cart and save it to the session table
 	 *
-	 * @access	public
 	 * @param	array
 	 * @return	bool
 	 */
-	function insert($items = array())
+	public function insert($items = array())
 	{
 		// Was any cart data passed? No? Bah...
-		if ( ! is_array($items) OR count($items) == 0)
+		if ( ! is_array($items) OR count($items) === 0)
 		{
 			log_message('error', 'The insert method must be passed an array containing data.');
 			return FALSE;
@@ -108,7 +152,7 @@
 		{
 			foreach ($items as $val)
 			{
-				if (is_array($val) AND isset($val['id']))
+				if (is_array($val) && isset($val['id']))
 				{
 					if ($this->_insert($val))
 					{
@@ -119,7 +163,7 @@
 		}
 
 		// Save the cart data if the insert was successful
-		if ($save_cart == TRUE)
+		if ($save_cart === TRUE)
 		{
 			$this->_save_cart();
 			return isset($rowid) ? $rowid : TRUE;
@@ -133,14 +177,13 @@
 	/**
 	 * Insert
 	 *
-	 * @access	private
 	 * @param	array
 	 * @return	bool
 	 */
-	function _insert($items = array())
+	protected function _insert($items = array())
 	{
 		// Was any cart data passed? No? Bah...
-		if ( ! is_array($items) OR count($items) == 0)
+		if ( ! is_array($items) OR count($items) === 0)
 		{
 			log_message('error', 'The insert method must be passed an array containing data.');
 			return FALSE;
@@ -149,7 +192,7 @@
 		// --------------------------------------------------------------------
 
 		// Does the $items array contain an id, quantity, price, and name?  These are required
-		if ( ! isset($items['id']) OR ! isset($items['qty']) OR ! isset($items['price']) OR ! isset($items['name']))
+		if ( ! isset($items['id'], $items['qty'], $items['price'], $items['name']))
 		{
 			log_message('error', 'The cart array must contain a product ID, quantity, price, and name.');
 			return FALSE;
@@ -157,13 +200,11 @@
 
 		// --------------------------------------------------------------------
 
-		// Prep the quantity. It can only be a number.  Duh...
-		$items['qty'] = trim(preg_replace('/([^0-9])/i', '', $items['qty']));
-		// Trim any leading zeros
-		$items['qty'] = trim(preg_replace('/(^[0]+)/i', '', $items['qty']));
+		// Prep the quantity. It can only be a number.  Duh... also trim any leading zeros
+		$items['qty'] = (float) $items['qty'];
 
 		// If the quantity is zero or blank there's nothing for us to do
-		if ( ! is_numeric($items['qty']) OR $items['qty'] == 0)
+		if ($items['qty'] == 0)
 		{
 			return FALSE;
 		}
@@ -173,7 +214,7 @@
 		// Validate the product ID. It can only be alpha-numeric, dashes, underscores or periods
 		// Not totally sure we should impose this rule, but it seems prudent to standardize IDs.
 		// Note: These can be user-specified by setting the $this->product_id_rules variable.
-		if ( ! preg_match("/^[".$this->product_id_rules."]+$/i", $items['id']))
+		if ( ! preg_match('/^['.$this->product_id_rules.']+$/i', $items['id']))
 		{
 			log_message('error', 'Invalid product ID.  The product ID can only contain alpha-numeric characters, dashes, and underscores');
 			return FALSE;
@@ -183,7 +224,7 @@
 
 		// Validate the product name. It can only be alpha-numeric, dashes, underscores, colons or periods.
 		// Note: These can be user-specified by setting the $this->product_name_rules variable.
-		if ( ! preg_match("/^[".$this->product_name_rules."]+$/i", $items['name']))
+		if ($this->product_name_safe && ! preg_match('/^['.$this->product_name_rules.']+$/i'.(UTF8_ENABLED ? 'u' : ''), $items['name']))
 		{
 			log_message('error', 'An invalid name was submitted as the product name: '.$items['name'].' The name can only contain alpha-numeric characters, dashes, underscores, colons, and spaces');
 			return FALSE;
@@ -191,19 +232,8 @@
 
 		// --------------------------------------------------------------------
 
-		// Prep the price.  Remove anything that isn't a number or decimal point.
-		$items['price'] = trim(preg_replace('/([^0-9\.])/i', '', $items['price']));
-		// Trim any leading zeros
-		$items['price'] = trim(preg_replace('/(^[0]+)/i', '', $items['price']));
-
-		// Is the price a valid number?
-		if ( ! is_numeric($items['price']))
-		{
-			log_message('error', 'An invalid price was submitted for product ID: '.$items['id']);
-			return FALSE;
-		}
-
-		// --------------------------------------------------------------------
+		// Prep the price. Remove leading zeros and anything that isn't a number or decimal point.
+		$items['price'] = (float) $items['price'];
 
 		// We now need to create a unique identifier for the item being inserted into the cart.
 		// Every time something is added to the cart it is stored in the master cart array.
@@ -215,9 +245,9 @@
 		// Internally, we need to treat identical submissions, but with different options, as a unique product.
 		// Our solution is to convert the options array to a string and MD5 it along with the product ID.
 		// This becomes the unique "row ID"
-		if (isset($items['options']) AND count($items['options']) > 0)
+		if (isset($items['options']) && count($items['options']) > 0)
 		{
-			$rowid = md5($items['id'].implode('', $items['options']));
+			$rowid = md5($items['id'].serialize($items['options']));
 		}
 		else
 		{
@@ -230,20 +260,14 @@
 		// --------------------------------------------------------------------
 
 		// Now that we have our unique "row ID", we'll add our cart items to the master array
+		// grab quantity if it's already there and add it on
+		$old_quantity = isset($this->_cart_contents[$rowid]['qty']) ? (int) $this->_cart_contents[$rowid]['qty'] : 0;
 
-		// let's unset this first, just to make sure our index contains only the data from this submission
-		unset($this->_cart_contents[$rowid]);
-
-		// Create a new index with our new row ID
-		$this->_cart_contents[$rowid]['rowid'] = $rowid;
-
-		// And add the new items to the cart array
-		foreach ($items as $key => $val)
-		{
-			$this->_cart_contents[$rowid][$key] = $val;
-		}
+		// Re-create the entry, just to make sure our index contains only the data from this submission
+		$items['rowid'] = $rowid;
+		$items['qty'] += $old_quantity;
+		$this->_cart_contents[$rowid] = $items;
 
-		// Woot!
 		return $rowid;
 	}
 
@@ -257,27 +281,25 @@
 	 * changes to the quantity before checkout. That array must contain the
 	 * product ID and quantity for each item.
 	 *
-	 * @access	public
 	 * @param	array
-	 * @param	string
 	 * @return	bool
 	 */
-	function update($items = array())
+	public function update($items = array())
 	{
 		// Was any cart data passed?
-		if ( ! is_array($items) OR count($items) == 0)
+		if ( ! is_array($items) OR count($items) === 0)
 		{
 			return FALSE;
 		}
 
 		// You can either update a single product using a one-dimensional array,
 		// or multiple products using a multi-dimensional one.  The way we
-		// determine the array type is by looking for a required array key named "id".
+		// determine the array type is by looking for a required array key named "rowid".
 		// If it's not found we assume it's a multi-dimensional array
 		$save_cart = FALSE;
-		if (isset($items['rowid']) AND isset($items['qty']))
+		if (isset($items['rowid']))
 		{
-			if ($this->_update($items) == TRUE)
+			if ($this->_update($items) === TRUE)
 			{
 				$save_cart = TRUE;
 			}
@@ -286,9 +308,9 @@
 		{
 			foreach ($items as $val)
 			{
-				if (is_array($val) AND isset($val['rowid']) AND isset($val['qty']))
+				if (is_array($val) && isset($val['rowid']))
 				{
-					if ($this->_update($val) == TRUE)
+					if ($this->_update($val) === TRUE)
 					{
 						$save_cart = TRUE;
 					}
@@ -297,7 +319,7 @@
 		}
 
 		// Save the cart data if the insert was successful
-		if ($save_cart == TRUE)
+		if ($save_cart === TRUE)
 		{
 			$this->_save_cart();
 			return TRUE;
@@ -311,48 +333,47 @@
 	/**
 	 * Update the cart
 	 *
-	 * This function permits the quantity of a given item to be changed.
+	 * This function permits changing item properties.
 	 * Typically it is called from the "view cart" page if a user makes
 	 * changes to the quantity before checkout. That array must contain the
-	 * product ID and quantity for each item.
+	 * rowid and quantity for each item.
 	 *
-	 * @access	private
 	 * @param	array
 	 * @return	bool
 	 */
-	function _update($items = array())
+	protected function _update($items = array())
 	{
 		// Without these array indexes there is nothing we can do
-		if ( ! isset($items['qty']) OR ! isset($items['rowid']) OR ! isset($this->_cart_contents[$items['rowid']]))
+		if ( ! isset($items['rowid'], $this->_cart_contents[$items['rowid']]))
 		{
 			return FALSE;
 		}
 
 		// Prep the quantity
-		$items['qty'] = preg_replace('/([^0-9])/i', '', $items['qty']);
-
-		// Is the quantity a number?
-		if ( ! is_numeric($items['qty']))
-		{
-			return FALSE;
-		}
-
-		// Is the new quantity different than what is already saved in the cart?
-		// If it's the same there's nothing to do
-		if ($this->_cart_contents[$items['rowid']]['qty'] == $items['qty'])
+		if (isset($items['qty']))
 		{
-			return FALSE;
-		}
-
+			$items['qty'] = (float) $items['qty'];
 		// Is the quantity zero?  If so we will remove the item from the cart.
 		// If the quantity is greater than zero we are updating
 		if ($items['qty'] == 0)
 		{
 			unset($this->_cart_contents[$items['rowid']]);
+				return TRUE;
 		}
-		else
+		}
+
+		// find updatable keys
+		$keys = array_intersect(array_keys($this->_cart_contents[$items['rowid']]), array_keys($items));
+		// if a price was passed, make sure it contains valid data
+		if (isset($items['price']))
 		{
-			$this->_cart_contents[$items['rowid']]['qty'] = $items['qty'];
+			$items['price'] = (float) $items['price'];
+		}
+
+		// product id & name shouldn't be changed
+		foreach (array_diff($keys, array('id', 'name')) as $key)
+		{
+			$this->_cart_contents[$items['rowid']][$key] = $items[$key];
 		}
 
 		return TRUE;
@@ -363,37 +384,25 @@
 	/**
 	 * Save the cart array to the session DB
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	function _save_cart()
+	protected function _save_cart()
 	{
-		// Unset these so our total can be calculated correctly below
-		unset($this->_cart_contents['total_items']);
-		unset($this->_cart_contents['cart_total']);
-
-		// Lets add up the individual prices and set the cart sub-total
-		$total = 0;
-		$items = 0;
+		// Let's add up the individual prices and set the cart sub-total
+		$this->_cart_contents['total_items'] = $this->_cart_contents['cart_total'] = 0;
 		foreach ($this->_cart_contents as $key => $val)
 		{
 			// We make sure the array contains the proper indexes
-			if ( ! is_array($val) OR ! isset($val['price']) OR ! isset($val['qty']))
+			if ( ! is_array($val) OR ! isset($val['price'], $val['qty']))
 			{
 				continue;
 			}
 
-			$total += ($val['price'] * $val['qty']);
-			$items += $val['qty'];
-
-			// Set the subtotal
+			$this->_cart_contents['cart_total'] += ($val['price'] * $val['qty']);
+			$this->_cart_contents['total_items'] += $val['qty'];
 			$this->_cart_contents[$key]['subtotal'] = ($this->_cart_contents[$key]['price'] * $this->_cart_contents[$key]['qty']);
 		}
 
-		// Set the cart total and total items.
-		$this->_cart_contents['total_items'] = $items;
-		$this->_cart_contents['cart_total'] = $total;
-
 		// Is our cart empty?  If so we delete it from the session
 		if (count($this->_cart_contents) <= 2)
 		{
@@ -416,10 +425,9 @@
 	/**
 	 * Cart Total
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function total()
+	public function total()
 	{
 		return $this->_cart_contents['cart_total'];
 	}
@@ -427,14 +435,31 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * Remove Item
+	 *
+	 * Removes an item from the cart
+	 *
+	 * @param	int
+	 * @return	bool
+	 */
+	 public function remove($rowid)
+	 {
+		// unset & save
+		unset($this->_cart_contents[$rowid]);
+		$this->_save_cart();
+		return TRUE;
+	 }
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Total Items
 	 *
 	 * Returns the total item count
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @return	int
 	 */
-	function total_items()
+	public function total_items()
 	{
 		return $this->_cart_contents['total_items'];
 	}
@@ -446,12 +471,13 @@
 	 *
 	 * Returns the entire cart array
 	 *
-	 * @access	public
+	 * @param	bool
 	 * @return	array
 	 */
-	function contents()
+	public function contents($newest_first = FALSE)
 	{
-		$cart = $this->_cart_contents;
+		// do we want the newest first?
+		$cart = ($newest_first) ? array_reverse($this->_cart_contents) : $this->_cart_contents;
 
 		// Remove these so they don't create a problem when showing the cart table
 		unset($cart['total_items']);
@@ -463,22 +489,34 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Has options
+	 * Get cart item
 	 *
-	 * Returns TRUE if the rowid passed to this function correlates to an item
-	 * that has options associated with it.
+	 * Returns the details of a specific item in the cart
 	 *
-	 * @access	public
+	 * @param	string	$row_id
 	 * @return	array
 	 */
-	function has_options($rowid = '')
-	{
-		if ( ! isset($this->_cart_contents[$rowid]['options']) OR count($this->_cart_contents[$rowid]['options']) === 0)
+	public function get_item($row_id)
 		{
-			return FALSE;
+		return (in_array($row_id, array('total_items', 'cart_total'), TRUE) OR ! isset($this->_cart_contents[$row_id]))
+			? FALSE
+			: $this->_cart_contents[$row_id];
 		}
 
-		return TRUE;
+	// --------------------------------------------------------------------
+
+	/**
+	 * Has options
+	 *
+	 * Returns TRUE if the rowid passed to this function correlates to an item
+	 * that has options associated with it.
+	 *
+	 * @param	string	$row_id = ''
+	 * @return	bool
+	 */
+	public function has_options($row_id = '')
+	{
+		return (isset($this->_cart_contents[$row_id]['options']) && count($this->_cart_contents[$row_id]['options']) !== 0);
 	}
 
 	// --------------------------------------------------------------------
@@ -488,17 +526,12 @@
 	 *
 	 * Returns the an array of options, for a particular product row ID
 	 *
-	 * @access	public
+	 * @param	string	$row_id = ''
 	 * @return	array
 	 */
-	function product_options($rowid = '')
+	public function product_options($row_id = '')
 	{
-		if ( ! isset($this->_cart_contents[$rowid]['options']))
-		{
-			return array();
-		}
-
-		return $this->_cart_contents[$rowid]['options'];
+		return isset($this->_cart_contents[$row_id]['options']) ? $this->_cart_contents[$row_id]['options'] : array();
 	}
 
 	// --------------------------------------------------------------------
@@ -508,20 +541,12 @@
 	 *
 	 * Returns the supplied number with commas and a decimal point.
 	 *
-	 * @access	public
-	 * @return	integer
+	 * @param	float
+	 * @return	string
 	 */
-	function format_number($n = '')
-	{
-		if ($n == '')
+	public function format_number($n = '')
 		{
-			return '';
-		}
-
-		// Remove anything that isn't a number or decimal point.
-		$n = trim(preg_replace('/([^0-9\.])/i', '', $n));
-
-		return number_format($n, 2, '.', ',');
+		return ($n === '') ? '' : number_format( (float) $n, 2, '.', ',');
 	}
 
 	// --------------------------------------------------------------------
@@ -531,16 +556,11 @@
 	 *
 	 * Empties the cart and kills the session
 	 *
-	 * @access	public
-	 * @return	null
+	 * @return	void
 	 */
-	function destroy()
+	public function destroy()
 	{
-		unset($this->_cart_contents);
-
-		$this->_cart_contents['cart_total'] = 0;
-		$this->_cart_contents['total_items'] = 0;
-
+		$this->_cart_contents = array('cart_total' => 0, 'total_items' => 0);
 		$this->CI->session->unset_userdata('cart_contents');
 	}
 
@@ -544,8 +564,4 @@
 		$this->CI->session->unset_userdata('cart_contents');
 	}
 
-
 }
-
-/* End of file Cart.php */
-/* Location: ./system/libraries/Cart.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Driver.php opensourcepos/system/libraries/Driver.php
--- pos-prod/system/libraries/Driver.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Driver.php	2016-05-23 15:32:31.945838793 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
  * @author		EllisLab Dev Team
- * @copyright	Copyright (c) 2006 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Driver Library Class
@@ -29,70 +51,147 @@
  */
 class CI_Driver_Library {
 
+	/**
+	 * Array of drivers that are available to use with the driver class
+	 *
+	 * @var array
+	 */
 	protected $valid_drivers	= array();
+
+	/**
+	 * Name of the current class - usually the driver class
+	 *
+	 * @var string
+	 */
 	protected $lib_name;
 
-	// The first time a child is used it won't exist, so we instantiate it
-	// subsequents calls will go straight to the proper child.
-	function __get($child)
+	/**
+	 * Get magic method
+	 *
+	 * The first time a child is used it won't exist, so we instantiate it
+	 * subsequents calls will go straight to the proper child.
+	 *
+	 * @param	string	Child class name
+	 * @return	object	Child class
+	 */
+	public function __get($child)
+	{
+		// Try to load the driver
+		return $this->load_driver($child);
+	}
+
+	/**
+	 * Load driver
+	 *
+	 * Separate load_driver call to support explicit driver load by library or user
+	 *
+	 * @param	string	Driver name (w/o parent prefix)
+	 * @return	object	Child class
+	 */
+	public function load_driver($child)
 	{
+		// Get CodeIgniter instance and subclass prefix
+		$prefix = config_item('subclass_prefix');
+
 		if ( ! isset($this->lib_name))
 		{
-			$this->lib_name = get_class($this);
+			// Get library name without any prefix
+			$this->lib_name = str_replace(array('CI_', $prefix), '', get_class($this));
 		}
 
-		// The class will be prefixed with the parent lib
-		$child_class = $this->lib_name.'_'.$child;
+		// The child will be prefixed with the parent lib
+		$child_name = $this->lib_name.'_'.$child;
 
-		// Remove the CI_ prefix and lowercase
-		$lib_name = ucfirst(strtolower(str_replace('CI_', '', $this->lib_name)));
-		$driver_name = strtolower(str_replace('CI_', '', $child_class));
+		// See if requested child is a valid driver
+		if ( ! in_array($child, $this->valid_drivers))
+		{
+			// The requested driver isn't valid!
+			$msg = 'Invalid driver requested: '.$child_name;
+			log_message('error', $msg);
+			show_error($msg);
+		}
+
+		// Get package paths and filename case variations to search
+		$CI = get_instance();
+		$paths = $CI->load->get_package_paths(TRUE);
 
-		if (in_array($driver_name, array_map('strtolower', $this->valid_drivers)))
+		// Is there an extension?
+		$class_name = $prefix.$child_name;
+		$found = class_exists($class_name, FALSE);
+		if ( ! $found)
 		{
-			// check and see if the driver is in a separate file
-			if ( ! class_exists($child_class))
+			// Check for subclass file
+			foreach ($paths as $path)
 			{
-				// check application path first
-				foreach (get_instance()->load->get_package_paths(TRUE) as $path)
+				// Does the file exist?
+				$file = $path.'libraries/'.$this->lib_name.'/drivers/'.$prefix.$child_name.'.php';
+				if (file_exists($file))
 				{
-					// loves me some nesting!
-					foreach (array(ucfirst($driver_name), $driver_name) as $class)
+					// Yes - require base class from BASEPATH
+					$basepath = BASEPATH.'libraries/'.$this->lib_name.'/drivers/'.$child_name.'.php';
+					if ( ! file_exists($basepath))
 					{
-						$filepath = $path.'libraries/'.$lib_name.'/drivers/'.$class.'.php';
+						$msg = 'Unable to load the requested class: CI_'.$child_name;
+						log_message('error', $msg);
+						show_error($msg);
+					}
 
-						if (file_exists($filepath))
+					// Include both sources and mark found
+					include_once($basepath);
+					include_once($file);
+					$found = TRUE;
+					break;
+				}
+			}
+		}
+
+		// Do we need to search for the class?
+		if ( ! $found)
+		{
+			// Use standard class name
+			$class_name = 'CI_'.$child_name;
+			if ( ! class_exists($class_name, FALSE))
+			{
+				// Check package paths
+				foreach ($paths as $path)
+				{
+					// Does the file exist?
+					$file = $path.'libraries/'.$this->lib_name.'/drivers/'.$child_name.'.php';
+					if (file_exists($file))
 						{
-							include_once $filepath;
+						// Include source
+						include_once($file);
 							break;
 						}
 					}
 				}
+		}
 
-				// it's a valid driver, but the file simply can't be found
-				if ( ! class_exists($child_class))
+		// Did we finally find the class?
+		if ( ! class_exists($class_name, FALSE))
+		{
+			if (class_exists($child_name, FALSE))
 				{
-					log_message('error', "Unable to load the requested driver: ".$child_class);
-					show_error("Unable to load the requested driver: ".$child_class);
+				$class_name = $child_name;
+			}
+			else
+			{
+				$msg = 'Unable to load the requested driver: '.$class_name;
+				log_message('error', $msg);
+				show_error($msg);
 				}
 			}
 
-			$obj = new $child_class;
+		// Instantiate, decorate and add child
+		$obj = new $class_name();
 			$obj->decorate($this);
 			$this->$child = $obj;
 			return $this->$child;
 		}
 
-		// The requested driver isn't valid!
-		log_message('error', "Invalid driver requested: ".$child_class);
-		show_error("Invalid driver requested: ".$child_class);
 	}
 
-	// --------------------------------------------------------------------
-
-}
-// END CI_Driver_Library CLASS
-
+// --------------------------------------------------------------------------
 
 /**
  * CodeIgniter Driver Class
@@ -107,12 +206,35 @@
  * @link
  */
 class CI_Driver {
-	protected $parent;
 
-	private $methods = array();
-	private $properties = array();
+	/**
+	 * Instance of the parent class
+	 *
+	 * @var object
+	 */
+	protected $_parent;
+
+	/**
+	 * List of methods in the parent class
+	 *
+	 * @var array
+	 */
+	protected $_methods = array();
+
+	/**
+	 * List of properties in the parent class
+	 *
+	 * @var array
+	 */
+	protected $_properties = array();
 
-	private static $reflections = array();
+	/**
+	 * Array of methods and properties for the parent class(es)
+	 *
+	 * @static
+	 * @var	array
+	 */
+	protected static $_reflections = array();
 
 	/**
 	 * Decorate
@@ -124,14 +246,14 @@
 	 */
 	public function decorate($parent)
 	{
-		$this->parent = $parent;
+		$this->_parent = $parent;
 
 		// Lock down attributes to what is defined in the class
 		// and speed up references in magic methods
 
 		$class_name = get_class($parent);
 
-		if ( ! isset(self::$reflections[$class_name]))
+		if ( ! isset(self::$_reflections[$class_name]))
 		{
 			$r = new ReflectionObject($parent);
 
@@ -139,7 +261,7 @@
 			{
 				if ($method->isPublic())
 				{
-					$this->methods[] = $method->getName();
+					$this->_methods[] = $method->getName();
 				}
 			}
 
@@ -147,15 +269,15 @@
 			{
 				if ($prop->isPublic())
 				{
-					$this->properties[] = $prop->getName();
+					$this->_properties[] = $prop->getName();
 				}
 			}
 
-			self::$reflections[$class_name] = array($this->methods, $this->properties);
+			self::$_reflections[$class_name] = array($this->_methods, $this->_properties);
 		}
 		else
 		{
-			list($this->methods, $this->properties) = self::$reflections[$class_name];
+			list($this->_methods, $this->_properties) = self::$_reflections[$class_name];
 		}
 	}
 
@@ -166,21 +288,18 @@
 	 *
 	 * Handles access to the parent driver library's methods
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	array
 	 * @return	mixed
 	 */
 	public function __call($method, $args = array())
 	{
-		if (in_array($method, $this->methods))
+		if (in_array($method, $this->_methods))
 		{
-			return call_user_func_array(array($this->parent, $method), $args);
+			return call_user_func_array(array($this->_parent, $method), $args);
 		}
 
-		$trace = debug_backtrace();
-		_exception_handler(E_ERROR, "No such method '{$method}'", $trace[1]['file'], $trace[1]['line']);
-		exit;
+		throw new BadMethodCallException('No such method: '.$method.'()');
 	}
 
 	// --------------------------------------------------------------------
@@ -195,9 +314,9 @@
 	 */
 	public function __get($var)
 	{
-		if (in_array($var, $this->properties))
+		if (in_array($var, $this->_properties))
 		{
-			return $this->parent->$var;
+			return $this->_parent->$var;
 		}
 	}
 
@@ -214,14 +333,10 @@
 	 */
 	public function __set($var, $val)
 	{
-		if (in_array($var, $this->properties))
+		if (in_array($var, $this->_properties))
 		{
-			$this->parent->$var = $val;
+			$this->_parent->$var = $val;
 		}
 	}
 
 }
-// END CI_Driver CLASS
-
-/* End of file Driver.php */
-/* Location: ./system/libraries/Driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Email.php opensourcepos/system/libraries/Email.php
--- pos-prod/system/libraries/Email.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Email.php	2016-05-23 15:32:31.945838793 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Email Class
@@ -23,79 +45,398 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/email.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/email.html
  */
 class CI_Email {
 
-	var	$useragent		= "CodeIgniter";
-	var	$mailpath		= "/usr/sbin/sendmail";	// Sendmail path
-	var	$protocol		= "mail";	// mail/sendmail/smtp
-	var	$smtp_host		= "";		// SMTP Server.  Example: mail.earthlink.net
-	var	$smtp_user		= "";		// SMTP Username
-	var	$smtp_pass		= "";		// SMTP Password
-	var	$smtp_port		= "25";		// SMTP Port
-	var	$smtp_timeout	= 5;		// SMTP Timeout in seconds
-	var	$smtp_crypto	= "";		// SMTP Encryption. Can be null, tls or ssl.
-	var	$wordwrap		= TRUE;		// TRUE/FALSE  Turns word-wrap on/off
-	var	$wrapchars		= "76";		// Number of characters to wrap at.
-	var	$mailtype		= "text";	// text/html  Defines email formatting
-	var	$charset		= "utf-8";	// Default char set: iso-8859-1 or us-ascii
-	var	$multipart		= "mixed";	// "mixed" (in the body) or "related" (separate)
-	var $alt_message	= '';		// Alternative message for HTML emails
-	var	$validate		= FALSE;	// TRUE/FALSE.  Enables email validation
-	var	$priority		= "3";		// Default priority (1 - 5)
-	var	$newline		= "\n";		// Default newline. "\r\n" or "\n" (Use "\r\n" to comply with RFC 822)
-	var $crlf			= "\n";		// The RFC 2045 compliant CRLF for quoted-printable is "\r\n".  Apparently some servers,
-									// even on the receiving end think they need to muck with CRLFs, so using "\n", while
-									// distasteful, is the only thing that seems to work for all environments.
-	var $send_multipart	= TRUE;		// TRUE/FALSE - Yahoo does not like multipart alternative, so this is an override.  Set to FALSE for Yahoo.
-	var	$bcc_batch_mode	= FALSE;	// TRUE/FALSE  Turns on/off Bcc batch feature
-	var	$bcc_batch_size	= 200;		// If bcc_batch_mode = TRUE, sets max number of Bccs in each batch
-	var $_safe_mode		= FALSE;
-	var	$_subject		= "";
-	var	$_body			= "";
-	var	$_finalbody		= "";
-	var	$_alt_boundary	= "";
-	var	$_atc_boundary	= "";
-	var	$_header_str	= "";
-	var	$_smtp_connect	= "";
-	var	$_encoding		= "8bit";
-	var $_IP			= FALSE;
-	var	$_smtp_auth		= FALSE;
-	var $_replyto_flag	= FALSE;
-	var	$_debug_msg		= array();
-	var	$_recipients	= array();
-	var	$_cc_array		= array();
-	var	$_bcc_array		= array();
-	var	$_headers		= array();
-	var	$_attach_name	= array();
-	var	$_attach_type	= array();
-	var	$_attach_disp	= array();
-	var	$_protocols		= array('mail', 'sendmail', 'smtp');
-	var	$_base_charsets	= array('us-ascii', 'iso-2022-');	// 7-bit charsets (excluding language suffix)
-	var	$_bit_depths	= array('7bit', '8bit');
-	var	$_priorities	= array('1 (Highest)', '2 (High)', '3 (Normal)', '4 (Low)', '5 (Lowest)');
+	/**
+	 * Used as the User-Agent and X-Mailer headers' value.
+	 *
+	 * @var	string
+	 */
+	public $useragent	= 'CodeIgniter';
+
+	/**
+	 * Path to the Sendmail binary.
+	 *
+	 * @var	string
+	 */
+	public $mailpath	= '/usr/sbin/sendmail';	// Sendmail path
+
+	/**
+	 * Which method to use for sending e-mails.
+	 *
+	 * @var	string	'mail', 'sendmail' or 'smtp'
+	 */
+	public $protocol	= 'mail';		// mail/sendmail/smtp
+
+	/**
+	 * STMP Server host
+	 *
+	 * @var	string
+	 */
+	public $smtp_host	= '';
+
+	/**
+	 * SMTP Username
+	 *
+	 * @var	string
+	 */
+	public $smtp_user	= '';
+
+	/**
+	 * SMTP Password
+	 *
+	 * @var	string
+	 */
+	public $smtp_pass	= '';
+
+	/**
+	 * SMTP Server port
+	 *
+	 * @var	int
+	 */
+	public $smtp_port	= 25;
+
+	/**
+	 * SMTP connection timeout in seconds
+	 *
+	 * @var	int
+	 */
+	public $smtp_timeout	= 5;
+
+	/**
+	 * SMTP persistent connection
+	 *
+	 * @var	bool
+	 */
+	public $smtp_keepalive	= FALSE;
+
+	/**
+	 * SMTP Encryption
+	 *
+	 * @var	string	empty, 'tls' or 'ssl'
+	 */
+	public $smtp_crypto	= '';
 
+	/**
+	 * Whether to apply word-wrapping to the message body.
+	 *
+	 * @var	bool
+	 */
+	public $wordwrap	= TRUE;
+
+	/**
+	 * Number of characters to wrap at.
+	 *
+	 * @see	CI_Email::$wordwrap
+	 * @var	int
+	 */
+	public $wrapchars	= 76;
+
+	/**
+	 * Message format.
+	 *
+	 * @var	string	'text' or 'html'
+	 */
+	public $mailtype	= 'text';
+
+	/**
+	 * Character set (default: utf-8)
+	 *
+	 * @var	string
+	 */
+	public $charset		= 'utf-8';
+
+	/**
+	 * Multipart message
+	 *
+	 * @var	string	'mixed' (in the body) or 'related' (separate)
+	 */
+	public $multipart	= 'mixed';		// "mixed" (in the body) or "related" (separate)
+
+	/**
+	 * Alternative message (for HTML messages only)
+	 *
+	 * @var	string
+	 */
+	public $alt_message	= '';
+
+	/**
+	 * Whether to validate e-mail addresses.
+	 *
+	 * @var	bool
+	 */
+	public $validate	= FALSE;
+
+	/**
+	 * X-Priority header value.
+	 *
+	 * @var	int	1-5
+	 */
+	public $priority	= 3;			// Default priority (1 - 5)
+
+	/**
+	 * Newline character sequence.
+	 * Use "\r\n" to comply with RFC 822.
+	 *
+	 * @link	http://www.ietf.org/rfc/rfc822.txt
+	 * @var	string	"\r\n" or "\n"
+	 */
+	public $newline		= "\n";			// Default newline. "\r\n" or "\n" (Use "\r\n" to comply with RFC 822)
+
+	/**
+	 * CRLF character sequence
+	 *
+	 * RFC 2045 specifies that for 'quoted-printable' encoding,
+	 * "\r\n" must be used. However, it appears that some servers
+	 * (even on the receiving end) don't handle it properly and
+	 * switching to "\n", while improper, is the only solution
+	 * that seems to work for all environments.
+	 *
+	 * @link	http://www.ietf.org/rfc/rfc822.txt
+	 * @var	string
+	 */
+	public $crlf		= "\n";
+
+	/**
+	 * Whether to use Delivery Status Notification.
+	 *
+	 * @var	bool
+	 */
+	public $dsn		= FALSE;
+
+	/**
+	 * Whether to send multipart alternatives.
+	 * Yahoo! doesn't seem to like these.
+	 *
+	 * @var	bool
+	 */
+	public $send_multipart	= TRUE;
+
+	/**
+	 * Whether to send messages to BCC recipients in batches.
+	 *
+	 * @var	bool
+	 */
+	public $bcc_batch_mode	= FALSE;
+
+	/**
+	 * BCC Batch max number size.
+	 *
+	 * @see	CI_Email::$bcc_batch_mode
+	 * @var	int
+	 */
+	public $bcc_batch_size	= 200;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Whether PHP is running in safe mode. Initialized by the class constructor.
+	 *
+	 * @var	bool
+	 */
+	protected $_safe_mode		= FALSE;
+
+	/**
+	 * Subject header
+	 *
+	 * @var	string
+	 */
+	protected $_subject		= '';
+
+	/**
+	 * Message body
+	 *
+	 * @var	string
+	 */
+	protected $_body		= '';
+
+	/**
+	 * Final message body to be sent.
+	 *
+	 * @var	string
+	 */
+	protected $_finalbody		= '';
+
+	/**
+	 * multipart/alternative boundary
+	 *
+	 * @var	string
+	 */
+	protected $_alt_boundary	= '';
+
+	/**
+	 * Attachment boundary
+	 *
+	 * @var	string
+	 */
+	protected $_atc_boundary	= '';
+
+	/**
+	 * Final headers to send
+	 *
+	 * @var	string
+	 */
+	protected $_header_str		= '';
+
+	/**
+	 * SMTP Connection socket placeholder
+	 *
+	 * @var	resource
+	 */
+	protected $_smtp_connect	= '';
+
+	/**
+	 * Mail encoding
+	 *
+	 * @var	string	'8bit' or '7bit'
+	 */
+	protected $_encoding		= '8bit';
+
+	/**
+	 * Whether to perform SMTP authentication
+	 *
+	 * @var	bool
+	 */
+	protected $_smtp_auth		= FALSE;
+
+	/**
+	 * Whether to send a Reply-To header
+	 *
+	 * @var	bool
+	 */
+	protected $_replyto_flag	= FALSE;
+
+	/**
+	 * Debug messages
+	 *
+	 * @see	CI_Email::print_debugger()
+	 * @var	string
+	 */
+	protected $_debug_msg		= array();
+
+	/**
+	 * Recipients
+	 *
+	 * @var	string[]
+	 */
+	protected $_recipients		= array();
+
+	/**
+	 * CC Recipients
+	 *
+	 * @var	string[]
+	 */
+	protected $_cc_array		= array();
+
+	/**
+	 * BCC Recipients
+	 *
+	 * @var	string[]
+	 */
+	protected $_bcc_array		= array();
+
+	/**
+	 * Message headers
+	 *
+	 * @var	string[]
+	 */
+	protected $_headers		= array();
+
+	/**
+	 * Attachment data
+	 *
+	 * @var	array
+	 */
+	protected $_attachments		= array();
+
+	/**
+	 * Valid $protocol values
+	 *
+	 * @see	CI_Email::$protocol
+	 * @var	string[]
+	 */
+	protected $_protocols		= array('mail', 'sendmail', 'smtp');
+
+	/**
+	 * Base charsets
+	 *
+	 * Character sets valid for 7-bit encoding,
+	 * excluding language suffix.
+	 *
+	 * @var	string[]
+	 */
+	protected $_base_charsets	= array('us-ascii', 'iso-2022-');
+
+	/**
+	 * Bit depths
+	 *
+	 * Valid mail encodings
+	 *
+	 * @see	CI_Email::$_encoding
+	 * @var	string[]
+	 */
+	protected $_bit_depths		= array('7bit', '8bit');
+
+	/**
+	 * $priority translations
+	 *
+	 * Actual values to send with the X-Priority header
+	 *
+	 * @var	string[]
+	 */
+	protected $_priorities = array(
+		1 => '1 (Highest)',
+		2 => '2 (High)',
+		3 => '3 (Normal)',
+		4 => '4 (Low)',
+		5 => '5 (Lowest)'
+	);
+
+	// --------------------------------------------------------------------
 
 	/**
 	 * Constructor - Sets Email Preferences
 	 *
 	 * The constructor can be passed an array of config values
+	 *
+	 * @param	array	$config = array()
+	 * @return	void
 	 */
-	public function __construct($config = array())
+	public function __construct(array $config = array())
 	{
+		$this->charset = config_item('charset');
+
 		if (count($config) > 0)
 		{
 			$this->initialize($config);
 		}
 		else
 		{
-			$this->_smtp_auth = ($this->smtp_user == '' AND $this->smtp_pass == '') ? FALSE : TRUE;
-			$this->_safe_mode = ((boolean)@ini_get("safe_mode") === FALSE) ? FALSE : TRUE;
+			$this->_smtp_auth = ! ($this->smtp_user === '' && $this->smtp_pass === '');
 		}
 
-		log_message('debug', "Email Class Initialized");
+		$this->_safe_mode = ( ! is_php('5.4') && ini_get('safe_mode'));
+		$this->charset = strtoupper($this->charset);
+
+		log_message('info', 'Email Class Initialized');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Destructor - Releases Resources
+	 *
+	 * @return	void
+	 */
+	public function __destruct()
+	{
+		if (is_resource($this->_smtp_connect))
+		{
+			$this->_send_command('quit');
+		}
 	}
 
 	// --------------------------------------------------------------------
@@ -103,9 +444,8 @@
 	/**
 	 * Initialize preferences
 	 *
-	 * @access	public
 	 * @param	array
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function initialize($config = array())
 	{
@@ -127,8 +467,7 @@
 		}
 		$this->clear();
 
-		$this->_smtp_auth = ($this->smtp_user == '' AND $this->smtp_pass == '') ? FALSE : TRUE;
-		$this->_safe_mode = ((boolean)@ini_get("safe_mode") === FALSE) ? FALSE : TRUE;
+		$this->_smtp_auth = ! ($this->smtp_user === '' && $this->smtp_pass === '');
 
 		return $this;
 	}
@@ -138,15 +477,15 @@
 	/**
 	 * Initialize the Email Data
 	 *
-	 * @access	public
-	 * @return	void
+	 * @param	bool
+	 * @return	CI_Email
 	 */
 	public function clear($clear_attachments = FALSE)
 	{
-		$this->_subject		= "";
-		$this->_body		= "";
-		$this->_finalbody	= "";
-		$this->_header_str	= "";
+		$this->_subject		= '';
+		$this->_body		= '';
+		$this->_finalbody	= '';
+		$this->_header_str	= '';
 		$this->_replyto_flag = FALSE;
 		$this->_recipients	= array();
 		$this->_cc_array	= array();
@@ -154,14 +493,12 @@
 		$this->_headers		= array();
 		$this->_debug_msg	= array();
 
-		$this->_set_header('User-Agent', $this->useragent);
-		$this->_set_header('Date', $this->_set_date());
+		$this->set_header('User-Agent', $this->useragent);
+		$this->set_header('Date', $this->_set_date());
 
 		if ($clear_attachments !== FALSE)
 		{
-			$this->_attach_name = array();
-			$this->_attach_type = array();
-			$this->_attach_disp = array();
+			$this->_attachments = array();
 		}
 
 		return $this;
@@ -172,25 +509,29 @@
 	/**
 	 * Set FROM
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @return	void
+	 * @param	string	$from
+	 * @param	string	$name
+	 * @param	string	$return_path = NULL	Return-Path
+	 * @return	CI_Email
 	 */
-	public function from($from, $name = '')
+	public function from($from, $name = '', $return_path = NULL)
 	{
 		if (preg_match( '/\<(.*)\>/', $from, $match))
 		{
-			$from = $match['1'];
+			$from = $match[1];
 		}
 
 		if ($this->validate)
 		{
 			$this->validate_email($this->_str_to_array($from));
+			if ($return_path)
+			{
+				$this->validate_email($this->_str_to_array($return_path));
+			}
 		}
 
 		// prepare the display name
-		if ($name != '')
+		if ($name !== '')
 		{
 			// only use Q encoding if there are characters that would require it
 			if ( ! preg_match('/[\200-\377]/', $name))
@@ -200,12 +541,14 @@
 			}
 			else
 			{
-				$name = $this->_prep_q_encoding($name, TRUE);
+				$name = $this->_prep_q_encoding($name);
 			}
 		}
 
-		$this->_set_header('From', $name.' <'.$from.'>');
-		$this->_set_header('Return-Path', '<'.$from.'>');
+		$this->set_header('From', $name.' <'.$from.'>');
+
+		isset($return_path) OR $return_path = $from;
+		$this->set_header('Return-Path', '<'.$return_path.'>');
 
 		return $this;
 	}
@@ -215,16 +558,15 @@
 	/**
 	 * Set Reply-to
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function reply_to($replyto, $name = '')
 	{
 		if (preg_match( '/\<(.*)\>/', $replyto, $match))
 		{
-			$replyto = $match['1'];
+			$replyto = $match[1];
 		}
 
 		if ($this->validate)
@@ -232,17 +574,21 @@
 			$this->validate_email($this->_str_to_array($replyto));
 		}
 
-		if ($name == '')
+		if ($name !== '')
 		{
-			$name = $replyto;
+			// only use Q encoding if there are characters that would require it
+			if ( ! preg_match('/[\200-\377]/', $name))
+			{
+				// add slashes for non-printing characters, slashes, and double quotes, and surround it in double quotes
+				$name = '"'.addcslashes($name, "\0..\37\177'\"\\").'"';
 		}
-
-		if (strncmp($name, '"', 1) != 0)
+			else
 		{
-			$name = '"'.$name.'"';
+				$name = $this->_prep_q_encoding($name);
+			}
 		}
 
-		$this->_set_header('Reply-To', $name.' <'.$replyto.'>');
+		$this->set_header('Reply-To', $name.' <'.$replyto.'>');
 		$this->_replyto_flag = TRUE;
 
 		return $this;
@@ -253,9 +599,8 @@
 	/**
 	 * Set Recipients
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function to($to)
 	{
@@ -267,21 +612,12 @@
 			$this->validate_email($to);
 		}
 
-		if ($this->_get_protocol() != 'mail')
+		if ($this->_get_protocol() !== 'mail')
 		{
-			$this->_set_header('To', implode(", ", $to));
+			$this->set_header('To', implode(', ', $to));
 		}
 
-		switch ($this->_get_protocol())
-		{
-			case 'smtp'		:
 				$this->_recipients = $to;
-			break;
-			case 'sendmail'	:
-			case 'mail'		:
-				$this->_recipients = implode(", ", $to);
-			break;
-		}
 
 		return $this;
 	}
@@ -291,23 +627,21 @@
 	/**
 	 * Set CC
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function cc($cc)
 	{
-		$cc = $this->_str_to_array($cc);
-		$cc = $this->clean_email($cc);
+		$cc = $this->clean_email($this->_str_to_array($cc));
 
 		if ($this->validate)
 		{
 			$this->validate_email($cc);
 		}
 
-		$this->_set_header('Cc', implode(", ", $cc));
+		$this->set_header('Cc', implode(', ', $cc));
 
-		if ($this->_get_protocol() == "smtp")
+		if ($this->_get_protocol() === 'smtp')
 		{
 			$this->_cc_array = $cc;
 		}
@@ -320,34 +654,32 @@
 	/**
 	 * Set BCC
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function bcc($bcc, $limit = '')
 	{
-		if ($limit != '' && is_numeric($limit))
+		if ($limit !== '' && is_numeric($limit))
 		{
 			$this->bcc_batch_mode = TRUE;
 			$this->bcc_batch_size = $limit;
 		}
 
-		$bcc = $this->_str_to_array($bcc);
-		$bcc = $this->clean_email($bcc);
+		$bcc = $this->clean_email($this->_str_to_array($bcc));
 
 		if ($this->validate)
 		{
 			$this->validate_email($bcc);
 		}
 
-		if (($this->_get_protocol() == "smtp") OR ($this->bcc_batch_mode && count($bcc) > $this->bcc_batch_size))
+		if ($this->_get_protocol() === 'smtp' OR ($this->bcc_batch_mode && count($bcc) > $this->bcc_batch_size))
 		{
 			$this->_bcc_array = $bcc;
 		}
 		else
 		{
-			$this->_set_header('Bcc', implode(", ", $bcc));
+			$this->set_header('Bcc', implode(', ', $bcc));
 		}
 
 		return $this;
@@ -358,14 +690,13 @@
 	/**
 	 * Set Email Subject
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function subject($subject)
 	{
 		$subject = $this->_prep_q_encoding($subject);
-		$this->_set_header('Subject', $subject);
+		$this->set_header('Subject', $subject);
 		return $this;
 	}
 
@@ -374,13 +705,12 @@
 	/**
 	 * Set Body
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function message($body)
 	{
-		$this->_body = rtrim(str_replace("\r", "", $body));
+		$this->_body = rtrim(str_replace("\r", '', $body));
 
 		/* strip slashes only if magic quotes is ON
 		   if we do it with magic quotes OFF, it strips real, user-inputted chars.
@@ -401,31 +731,89 @@
 	/**
 	 * Assign file attachments
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	void
+	 * @param	string	$file	Can be local path, URL or buffered content
+	 * @param	string	$disposition = 'attachment'
+	 * @param	string	$newname = NULL
+	 * @param	string	$mime = ''
+	 * @return	CI_Email
 	 */
-	public function attach($filename, $disposition = 'attachment')
+	public function attach($file, $disposition = '', $newname = NULL, $mime = '')
+	{
+		if ($mime === '')
+		{
+			if (strpos($file, '://') === FALSE && ! file_exists($file))
 	{
-		$this->_attach_name[] = $filename;
-		$this->_attach_type[] = $this->_mime_types(pathinfo($filename, PATHINFO_EXTENSION));
-		$this->_attach_disp[] = $disposition; // Can also be 'inline'  Not sure if it matters
+				$this->_set_error_message('lang:email_attachment_missing', $file);
+				return FALSE;
+			}
+
+			if ( ! $fp = @fopen($file, 'rb'))
+			{
+				$this->_set_error_message('lang:email_attachment_unreadable', $file);
+				return FALSE;
+			}
+
+			$file_content = stream_get_contents($fp);
+			$mime = $this->_mime_types(pathinfo($file, PATHINFO_EXTENSION));
+			fclose($fp);
+		}
+		else
+		{
+			$file_content =& $file; // buffered file
+		}
+
+		$this->_attachments[] = array(
+			'name'		=> array($file, $newname),
+			'disposition'	=> empty($disposition) ? 'attachment' : $disposition,  // Can also be 'inline'  Not sure if it matters
+			'type'		=> $mime,
+			'content'	=> chunk_split(base64_encode($file_content))
+		);
+
 		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
+	 * Set and return attachment Content-ID
+	 *
+	 * Useful for attached inline pictures
+	 *
+	 * @param	string	$filename
+	 * @return	string
+	 */
+	public function attachment_cid($filename)
+	{
+		if ($this->multipart !== 'related')
+		{
+			$this->multipart = 'related'; // Thunderbird need this for inline images
+		}
+
+		for ($i = 0, $c = count($this->_attachments); $i < $c; $i++)
+		{
+			if ($this->_attachments[$i]['name'][0] === $filename)
+			{
+				$this->_attachments[$i]['cid'] = uniqid(basename($this->_attachments[$i]['name'][0]).'@');
+				return $this->_attachments[$i]['cid'];
+			}
+		}
+
+		return FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Add a Header Item
 	 *
-	 * @access	protected
 	 * @param	string
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
-	protected function _set_header($header, $value)
+	public function set_header($header, $value)
 	{
-		$this->_headers[$header] = $value;
+		$this->_headers[$header] = str_replace(array("\n", "\r"), '', $value);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -433,7 +821,6 @@
 	/**
 	 * Convert a String to an Array
 	 *
-	 * @access	protected
 	 * @param	string
 	 * @return	array
 	 */
@@ -441,16 +828,11 @@
 	{
 		if ( ! is_array($email))
 		{
-			if (strpos($email, ',') !== FALSE)
-			{
-				$email = preg_split('/[\s,]/', $email, -1, PREG_SPLIT_NO_EMPTY);
-			}
-			else
-			{
-				$email = trim($email);
-				settype($email, "array");
-			}
+			return (strpos($email, ',') !== FALSE)
+				? preg_split('/[\s,]/', $email, -1, PREG_SPLIT_NO_EMPTY)
+				: (array) trim($email);
 		}
+
 		return $email;
 	}
 
@@ -459,13 +841,12 @@
 	/**
 	 * Set Multipart Value
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
-	public function set_alt_message($str = '')
+	public function set_alt_message($str)
 	{
-		$this->alt_message = $str;
+		$this->alt_message = (string) $str;
 		return $this;
 	}
 
@@ -474,13 +855,12 @@
 	/**
 	 * Set Mailtype
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function set_mailtype($type = 'text')
 	{
-		$this->mailtype = ($type == 'html') ? 'html' : 'text';
+		$this->mailtype = ($type === 'html') ? 'html' : 'text';
 		return $this;
 	}
 
@@ -489,13 +869,12 @@
 	/**
 	 * Set Wordwrap
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	void
+	 * @param	bool
+	 * @return	CI_Email
 	 */
 	public function set_wordwrap($wordwrap = TRUE)
 	{
-		$this->wordwrap = ($wordwrap === FALSE) ? FALSE : TRUE;
+		$this->wordwrap = (bool) $wordwrap;
 		return $this;
 	}
 
@@ -504,13 +883,12 @@
 	/**
 	 * Set Protocol
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function set_protocol($protocol = 'mail')
 	{
-		$this->protocol = ( ! in_array($protocol, $this->_protocols, TRUE)) ? 'mail' : strtolower($protocol);
+		$this->protocol = in_array($protocol, $this->_protocols, TRUE) ? strtolower($protocol) : 'mail';
 		return $this;
 	}
 
@@ -519,25 +897,12 @@
 	/**
 	 * Set Priority
 	 *
-	 * @access	public
-	 * @param	integer
-	 * @return	void
+	 * @param	int
+	 * @return	CI_Email
 	 */
 	public function set_priority($n = 3)
 	{
-		if ( ! is_numeric($n))
-		{
-			$this->priority = 3;
-			return;
-		}
-
-		if ($n < 1 OR $n > 5)
-		{
-			$this->priority = 3;
-			return;
-		}
-
-		$this->priority = $n;
+		$this->priority = preg_match('/^[1-5]$/', $n) ? (int) $n : 3;
 		return $this;
 	}
 
@@ -546,20 +911,12 @@
 	/**
 	 * Set Newline Character
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function set_newline($newline = "\n")
 	{
-		if ($newline != "\n" AND $newline != "\r\n" AND $newline != "\r")
-		{
-			$this->newline	= "\n";
-			return;
-		}
-
-		$this->newline	= $newline;
-
+		$this->newline = in_array($newline, array("\n", "\r\n", "\r")) ? $newline : "\n";
 		return $this;
 	}
 
@@ -568,20 +925,12 @@
 	/**
 	 * Set CRLF
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Email
 	 */
 	public function set_crlf($crlf = "\n")
 	{
-		if ($crlf != "\n" AND $crlf != "\r\n" AND $crlf != "\r")
-		{
-			$this->crlf	= "\n";
-			return;
-		}
-
-		$this->crlf	= $crlf;
-
+		$this->crlf = ($crlf !== "\n" && $crlf !== "\r\n" && $crlf !== "\r") ? "\n" : $crlf;
 		return $this;
 	}
 
@@ -590,13 +939,12 @@
 	/**
 	 * Set Message Boundary
 	 *
-	 * @access	protected
 	 * @return	void
 	 */
 	protected function _set_boundaries()
 	{
-		$this->_alt_boundary = "B_ALT_".uniqid(''); // multipart/alternative
-		$this->_atc_boundary = "B_ATC_".uniqid(''); // attachment boundary
+		$this->_alt_boundary = 'B_ALT_'.uniqid(''); // multipart/alternative
+		$this->_atc_boundary = 'B_ATC_'.uniqid(''); // attachment boundary
 	}
 
 	// --------------------------------------------------------------------
@@ -604,16 +952,12 @@
 	/**
 	 * Get the Message ID
 	 *
-	 * @access	protected
 	 * @return	string
 	 */
 	protected function _get_message_id()
 	{
-		$from = $this->_headers['Return-Path'];
-		$from = str_replace(">", "", $from);
-		$from = str_replace("<", "", $from);
-
-		return  "<".uniqid('').strstr($from, '@').">";
+		$from = str_replace(array('>', '<'), '', $this->_headers['Return-Path']);
+		return '<'.uniqid('').strstr($from, '@').'>';
 	}
 
 	// --------------------------------------------------------------------
@@ -621,16 +965,15 @@
 	/**
 	 * Get Mail Protocol
 	 *
-	 * @access	protected
 	 * @param	bool
-	 * @return	string
+	 * @return	mixed
 	 */
 	protected function _get_protocol($return = TRUE)
 	{
 		$this->protocol = strtolower($this->protocol);
-		$this->protocol = ( ! in_array($this->protocol, $this->_protocols, TRUE)) ? 'mail' : $this->protocol;
+		in_array($this->protocol, $this->_protocols, TRUE) OR $this->protocol = 'mail';
 
-		if ($return == TRUE)
+		if ($return === TRUE)
 		{
 			return $this->protocol;
 		}
@@ -641,23 +984,22 @@
 	/**
 	 * Get Mail Encoding
 	 *
-	 * @access	protected
 	 * @param	bool
 	 * @return	string
 	 */
 	protected function _get_encoding($return = TRUE)
 	{
-		$this->_encoding = ( ! in_array($this->_encoding, $this->_bit_depths)) ? '8bit' : $this->_encoding;
+		in_array($this->_encoding, $this->_bit_depths) OR $this->_encoding = '8bit';
 
 		foreach ($this->_base_charsets as $charset)
 		{
-			if (strncmp($charset, $this->charset, strlen($charset)) == 0)
+			if (strpos($charset, $this->charset) === 0)
 			{
 				$this->_encoding = '7bit';
 			}
 		}
 
-		if ($return == TRUE)
+		if ($return === TRUE)
 		{
 			return $this->_encoding;
 		}
@@ -668,20 +1010,15 @@
 	/**
 	 * Get content type (text/html/attachment)
 	 *
-	 * @access	protected
 	 * @return	string
 	 */
 	protected function _get_content_type()
 	{
-		if	($this->mailtype == 'html' &&  count($this->_attach_name) == 0)
-		{
-			return 'html';
-		}
-		elseif	($this->mailtype == 'html' &&  count($this->_attach_name)  > 0)
+		if ($this->mailtype === 'html')
 		{
-			return 'html-attach';
+			return (count($this->_attachments) === 0) ? 'html' : 'html-attach';
 		}
-		elseif	($this->mailtype == 'text' &&  count($this->_attach_name)  > 0)
+		elseif	($this->mailtype === 'text' && count($this->_attachments) > 0)
 		{
 			return 'plain-attach';
 		}
@@ -696,17 +1033,16 @@
 	/**
 	 * Set RFC 822 Date
 	 *
-	 * @access	protected
 	 * @return	string
 	 */
 	protected function _set_date()
 	{
-		$timezone = date("Z");
-		$operator = (strncmp($timezone, '-', 1) == 0) ? '-' : '+';
+		$timezone = date('Z');
+		$operator = ($timezone[0] === '-') ? '-' : '+';
 		$timezone = abs($timezone);
 		$timezone = floor($timezone/3600) * 100 + ($timezone % 3600 ) / 60;
 
-		return sprintf("%s %s%04d", date("D, j M Y H:i:s"), $operator, $timezone);
+		return sprintf('%s %s%04d', date('D, j M Y H:i:s'), $operator, $timezone);
 	}
 
 	// --------------------------------------------------------------------
@@ -714,12 +1050,11 @@
 	/**
 	 * Mime message
 	 *
-	 * @access	protected
 	 * @return	string
 	 */
 	protected function _get_mime_message()
 	{
-		return "This is a multi-part message in MIME format.".$this->newline."Your email application may not support this format.";
+		return 'This is a multi-part message in MIME format.'.$this->newline.'Your email application may not support this format.';
 	}
 
 	// --------------------------------------------------------------------
@@ -727,7 +1062,6 @@
 	/**
 	 * Validate Email Address
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
@@ -756,13 +1090,17 @@
 	/**
 	 * Email Validation
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	public function valid_email($address)
+	public function valid_email($email)
 	{
-		return ( ! preg_match("/^([a-z0-9\+_\-]+)(\.[a-z0-9\+_\-]+)*@([a-z0-9\-]+\.)+[a-z]{2,6}$/ix", $address)) ? FALSE : TRUE;
+		if (function_exists('idn_to_ascii') && $atpos = strpos($email, '@'))
+		{
+			$email = substr($email, 0, ++$atpos).idn_to_ascii(substr($email, $atpos));
+		}
+
+		return (bool) filter_var($email, FILTER_VALIDATE_EMAIL);
 	}
 
 	// --------------------------------------------------------------------
@@ -770,7 +1108,6 @@
 	/**
 	 * Clean Extended Email Address: Joe Smith <joe@smith.com>
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
@@ -778,28 +1115,14 @@
 	{
 		if ( ! is_array($email))
 		{
-			if (preg_match('/\<(.*)\>/', $email, $match))
-			{
-				return $match['1'];
-			}
-			else
-			{
-				return $email;
-			}
+			return preg_match('/\<(.*)\>/', $email, $match) ? $match[1] : $email;
 		}
 
 		$clean_email = array();
 
 		foreach ($email as $addy)
 		{
-			if (preg_match( '/\<(.*)\>/', $addy, $match))
-			{
-				$clean_email[] = $match['1'];
-			}
-			else
-			{
-				$clean_email[] = $addy;
-			}
+			$clean_email[] = preg_match('/\<(.*)\>/', $addy, $match) ? $match[1] : $addy;
 		}
 
 		return $clean_email;
@@ -810,47 +1133,36 @@
 	/**
 	 * Build alternative plain text message
 	 *
-	 * This public function provides the raw message for use
-	 * in plain-text headers of HTML-formatted emails.
+	 * Provides the raw message for use in plain-text headers of
+	 * HTML-formatted emails.
 	 * If the user hasn't specified his own alternative message
 	 * it creates one by stripping the HTML
 	 *
-	 * @access	protected
 	 * @return	string
 	 */
 	protected function _get_alt_message()
 	{
-		if ($this->alt_message != "")
+		if ( ! empty($this->alt_message))
 		{
-			return $this->word_wrap($this->alt_message, '76');
+			return ($this->wordwrap)
+				? $this->word_wrap($this->alt_message, 76)
+				: $this->alt_message;
 		}
 
-		if (preg_match('/\<body.*?\>(.*)\<\/body\>/si', $this->_body, $match))
-		{
-			$body = $match['1'];
-		}
-		else
-		{
-			$body = $this->_body;
-		}
-
-		$body = trim(strip_tags($body));
-		$body = preg_replace( '#<!--(.*)--\>#', "", $body);
-		$body = str_replace("\t", "", $body);
+		$body = preg_match('/\<body.*?\>(.*)\<\/body\>/si', $this->_body, $match) ? $match[1] : $this->_body;
+		$body = str_replace("\t", '', preg_replace('#<!--(.*)--\>#', '', trim(strip_tags($body))));
 
 		for ($i = 20; $i >= 3; $i--)
 		{
-			$n = "";
-
-			for ($x = 1; $x <= $i; $x ++)
-			{
-				$n .= "\n";
+			$body = str_replace(str_repeat("\n", $i), "\n\n", $body);
 			}
 
-			$body = str_replace($n, "\n\n", $body);
-		}
+		// Reduce multiple spaces
+		$body = preg_replace('| +|', ' ', $body);
 
-		return $this->word_wrap($body, '76');
+		return ($this->wordwrap)
+			? $this->word_wrap($body, 76)
+			: $body;
 	}
 
 	// --------------------------------------------------------------------
@@ -858,83 +1170,79 @@
 	/**
 	 * Word Wrap
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	integer
+	 * @param	int	line-length limit
 	 * @return	string
 	 */
-	public function word_wrap($str, $charlim = '')
+	public function word_wrap($str, $charlim = NULL)
 	{
-		// Se the character limit
-		if ($charlim == '')
+		// Set the character limit, if not already present
+		if (empty($charlim))
 		{
-			$charlim = ($this->wrapchars == "") ? "76" : $this->wrapchars;
+			$charlim = empty($this->wrapchars) ? 76 : $this->wrapchars;
 		}
 
-		// Reduce multiple spaces
-		$str = preg_replace("| +|", " ", $str);
-
 		// Standardize newlines
 		if (strpos($str, "\r") !== FALSE)
 		{
 			$str = str_replace(array("\r\n", "\r"), "\n", $str);
 		}
 
+		// Reduce multiple spaces at end of line
+		$str = preg_replace('| +\n|', "\n", $str);
+
 		// If the current word is surrounded by {unwrap} tags we'll
 		// strip the entire chunk and replace it with a marker.
 		$unwrap = array();
-		if (preg_match_all("|(\{unwrap\}.+?\{/unwrap\})|s", $str, $matches))
+		if (preg_match_all('|\{unwrap\}(.+?)\{/unwrap\}|s', $str, $matches))
 		{
-			for ($i = 0; $i < count($matches['0']); $i++)
+			for ($i = 0, $c = count($matches[0]); $i < $c; $i++)
 			{
-				$unwrap[] = $matches['1'][$i];
-				$str = str_replace($matches['1'][$i], "{{unwrapped".$i."}}", $str);
+				$unwrap[] = $matches[1][$i];
+				$str = str_replace($matches[0][$i], '{{unwrapped'.$i.'}}', $str);
 			}
 		}
 
-		// Use PHP's native public function to do the initial wordwrap.
+		// Use PHP's native function to do the initial wordwrap.
 		// We set the cut flag to FALSE so that any individual words that are
 		// too long get left alone.  In the next step we'll deal with them.
 		$str = wordwrap($str, $charlim, "\n", FALSE);
 
 		// Split the string into individual lines of text and cycle through them
-		$output = "";
+		$output = '';
 		foreach (explode("\n", $str) as $line)
 		{
 			// Is the line within the allowed character count?
 			// If so we'll join it to the output and continue
-			if (strlen($line) <= $charlim)
+			if (mb_strlen($line) <= $charlim)
 			{
 				$output .= $line.$this->newline;
 				continue;
 			}
 
 			$temp = '';
-			while ((strlen($line)) > $charlim)
+			do
 			{
 				// If the over-length word is a URL we won't wrap it
-				if (preg_match("!\[url.+\]|://|wwww.!", $line))
+				if (preg_match('!\[url.+\]|://|www\.!', $line))
 				{
 					break;
 				}
 
 				// Trim the word down
-				$temp .= substr($line, 0, $charlim-1);
-				$line = substr($line, $charlim-1);
+				$temp .= mb_substr($line, 0, $charlim - 1);
+				$line = mb_substr($line, $charlim - 1);
 			}
+			while (mb_strlen($line) > $charlim);
 
 			// If $temp contains data it means we had to split up an over-length
 			// word into smaller chunks so we'll add it back to our current line
-			if ($temp != '')
-			{
-				$output .= $temp.$this->newline.$line;
-			}
-			else
+			if ($temp !== '')
 			{
-				$output .= $line;
+				$output .= $temp.$this->newline;
 			}
 
-			$output .= $this->newline;
+			$output .= $line.$this->newline;
 		}
 
 		// Put our markers back
@@ -942,7 +1250,7 @@
 		{
 			foreach ($unwrap as $key => $val)
 			{
-				$output = str_replace("{{unwrapped".$key."}}", $val, $output);
+				$output = str_replace('{{unwrapped'.$key.'}}', $val, $output);
 			}
 		}
 
@@ -954,17 +1262,15 @@
 	/**
 	 * Build final headers
 	 *
-	 * @access	protected
-	 * @param	string
 	 * @return	string
 	 */
 	protected function _build_headers()
 	{
-		$this->_set_header('X-Sender', $this->clean_email($this->_headers['From']));
-		$this->_set_header('X-Mailer', $this->useragent);
-		$this->_set_header('X-Priority', $this->_priorities[$this->priority - 1]);
-		$this->_set_header('Message-ID', $this->_get_message_id());
-		$this->_set_header('Mime-Version', '1.0');
+		$this->set_header('X-Sender', $this->clean_email($this->_headers['From']));
+		$this->set_header('X-Mailer', $this->useragent);
+		$this->set_header('X-Priority', $this->_priorities[$this->priority]);
+		$this->set_header('Message-ID', $this->_get_message_id());
+		$this->set_header('Mime-Version', '1.0');
 	}
 
 	// --------------------------------------------------------------------
@@ -972,31 +1278,33 @@
 	/**
 	 * Write Headers as a string
 	 *
-	 * @access	protected
 	 * @return	void
 	 */
 	protected function _write_headers()
 	{
-		if ($this->protocol == 'mail')
+		if ($this->protocol === 'mail')
+		{
+			if (isset($this->_headers['Subject']))
 		{
 			$this->_subject = $this->_headers['Subject'];
 			unset($this->_headers['Subject']);
 		}
+		}
 
 		reset($this->_headers);
-		$this->_header_str = "";
+		$this->_header_str = '';
 
 		foreach ($this->_headers as $key => $val)
 		{
 			$val = trim($val);
 
-			if ($val != "")
+			if ($val !== '')
 			{
-				$this->_header_str .= $key.": ".$val.$this->newline;
+				$this->_header_str .= $key.': '.$val.$this->newline;
 			}
 		}
 
-		if ($this->_get_protocol() == 'mail')
+		if ($this->_get_protocol() === 'mail')
 		{
 			$this->_header_str = rtrim($this->_header_str);
 		}
@@ -1007,12 +1315,11 @@
 	/**
 	 * Build Final Body and attachments
 	 *
-	 * @access	protected
-	 * @return	void
+	 * @return	bool
 	 */
 	protected function _build_message()
 	{
-		if ($this->wordwrap === TRUE  AND  $this->mailtype != 'html')
+		if ($this->wordwrap === TRUE && $this->mailtype !== 'html')
 		{
 			$this->_body = $this->word_wrap($this->_body);
 		}
@@ -1020,19 +1327,19 @@
 		$this->_set_boundaries();
 		$this->_write_headers();
 
-		$hdr = ($this->_get_protocol() == 'mail') ? $this->newline : '';
+		$hdr = ($this->_get_protocol() === 'mail') ? $this->newline : '';
 		$body = '';
 
 		switch ($this->_get_content_type())
 		{
 			case 'plain' :
 
-				$hdr .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
-				$hdr .= "Content-Transfer-Encoding: " . $this->_get_encoding();
+				$hdr .= 'Content-Type: text/plain; charset='.$this->charset.$this->newline
+					.'Content-Transfer-Encoding: '.$this->_get_encoding();
 
-				if ($this->_get_protocol() == 'mail')
+				if ($this->_get_protocol() === 'mail')
 				{
-					$this->_header_str .= rtrim($hdr);
+					$this->_header_str .= $hdr;
 					$this->_finalbody = $this->_body;
 				}
 				else
@@ -1042,144 +1349,115 @@
 
 				return;
 
-			break;
 			case 'html' :
 
 				if ($this->send_multipart === FALSE)
 				{
-					$hdr .= "Content-Type: text/html; charset=" . $this->charset . $this->newline;
-					$hdr .= "Content-Transfer-Encoding: quoted-printable";
+					$hdr .= 'Content-Type: text/html; charset='.$this->charset.$this->newline
+						.'Content-Transfer-Encoding: quoted-printable';
 				}
 				else
 				{
-					$hdr .= "Content-Type: multipart/alternative; boundary=\"" . $this->_alt_boundary . "\"" . $this->newline . $this->newline;
+					$hdr .= 'Content-Type: multipart/alternative; boundary="'.$this->_alt_boundary.'"';
 
-					$body .= $this->_get_mime_message() . $this->newline . $this->newline;
-					$body .= "--" . $this->_alt_boundary . $this->newline;
+					$body .= $this->_get_mime_message().$this->newline.$this->newline
+						.'--'.$this->_alt_boundary.$this->newline
 
-					$body .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
-					$body .= "Content-Transfer-Encoding: " . $this->_get_encoding() . $this->newline . $this->newline;
-					$body .= $this->_get_alt_message() . $this->newline . $this->newline . "--" . $this->_alt_boundary . $this->newline;
+						.'Content-Type: text/plain; charset='.$this->charset.$this->newline
+						.'Content-Transfer-Encoding: '.$this->_get_encoding().$this->newline.$this->newline
+						.$this->_get_alt_message().$this->newline.$this->newline.'--'.$this->_alt_boundary.$this->newline
 
-					$body .= "Content-Type: text/html; charset=" . $this->charset . $this->newline;
-					$body .= "Content-Transfer-Encoding: quoted-printable" . $this->newline . $this->newline;
+						.'Content-Type: text/html; charset='.$this->charset.$this->newline
+						.'Content-Transfer-Encoding: quoted-printable'.$this->newline.$this->newline;
 				}
 
 				$this->_finalbody = $body . $this->_prep_quoted_printable($this->_body) . $this->newline . $this->newline;
 
-
-				if ($this->_get_protocol() == 'mail')
+				if ($this->_get_protocol() === 'mail')
 				{
-					$this->_header_str .= rtrim($hdr);
+					$this->_header_str .= $hdr;
 				}
 				else
 				{
-					$this->_finalbody = $hdr . $this->_finalbody;
+					$this->_finalbody = $hdr.$this->newline.$this->newline.$this->_finalbody;
 				}
 
-
 				if ($this->send_multipart !== FALSE)
 				{
-					$this->_finalbody .= "--" . $this->_alt_boundary . "--";
+					$this->_finalbody .= '--'.$this->_alt_boundary.'--';
 				}
 
 				return;
 
-			break;
 			case 'plain-attach' :
 
-				$hdr .= "Content-Type: multipart/".$this->multipart."; boundary=\"" . $this->_atc_boundary."\"" . $this->newline . $this->newline;
+				$hdr .= 'Content-Type: multipart/'.$this->multipart.'; boundary="'.$this->_atc_boundary.'"';
 
-				if ($this->_get_protocol() == 'mail')
+				if ($this->_get_protocol() === 'mail')
 				{
-					$this->_header_str .= rtrim($hdr);
+					$this->_header_str .= $hdr;
 				}
 
-				$body .= $this->_get_mime_message() . $this->newline . $this->newline;
-				$body .= "--" . $this->_atc_boundary . $this->newline;
-
-				$body .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
-				$body .= "Content-Transfer-Encoding: " . $this->_get_encoding() . $this->newline . $this->newline;
-
-				$body .= $this->_body . $this->newline . $this->newline;
+				$body .= $this->_get_mime_message().$this->newline
+					.$this->newline
+					.'--'.$this->_atc_boundary.$this->newline
+					.'Content-Type: text/plain; charset='.$this->charset.$this->newline
+					.'Content-Transfer-Encoding: '.$this->_get_encoding().$this->newline
+					.$this->newline
+					.$this->_body.$this->newline.$this->newline;
 
 			break;
 			case 'html-attach' :
 
-				$hdr .= "Content-Type: multipart/".$this->multipart."; boundary=\"" . $this->_atc_boundary."\"" . $this->newline . $this->newline;
+				$hdr .= 'Content-Type: multipart/'.$this->multipart.'; boundary="'.$this->_atc_boundary.'"';
 
-				if ($this->_get_protocol() == 'mail')
+				if ($this->_get_protocol() === 'mail')
 				{
-					$this->_header_str .= rtrim($hdr);
+					$this->_header_str .= $hdr;
 				}
 
-				$body .= $this->_get_mime_message() . $this->newline . $this->newline;
-				$body .= "--" . $this->_atc_boundary . $this->newline;
+				$body .= $this->_get_mime_message().$this->newline.$this->newline
+					.'--'.$this->_atc_boundary.$this->newline
 
-				$body .= "Content-Type: multipart/alternative; boundary=\"" . $this->_alt_boundary . "\"" . $this->newline .$this->newline;
-				$body .= "--" . $this->_alt_boundary . $this->newline;
+					.'Content-Type: multipart/alternative; boundary="'.$this->_alt_boundary.'"'.$this->newline.$this->newline
+					.'--'.$this->_alt_boundary.$this->newline
 
-				$body .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
-				$body .= "Content-Transfer-Encoding: " . $this->_get_encoding() . $this->newline . $this->newline;
-				$body .= $this->_get_alt_message() . $this->newline . $this->newline . "--" . $this->_alt_boundary . $this->newline;
+					.'Content-Type: text/plain; charset='.$this->charset.$this->newline
+					.'Content-Transfer-Encoding: '.$this->_get_encoding().$this->newline.$this->newline
+					.$this->_get_alt_message().$this->newline.$this->newline.'--'.$this->_alt_boundary.$this->newline
 
-				$body .= "Content-Type: text/html; charset=" . $this->charset . $this->newline;
-				$body .= "Content-Transfer-Encoding: quoted-printable" . $this->newline . $this->newline;
+					.'Content-Type: text/html; charset='.$this->charset.$this->newline
+					.'Content-Transfer-Encoding: quoted-printable'.$this->newline.$this->newline
 
-				$body .= $this->_prep_quoted_printable($this->_body) . $this->newline . $this->newline;
-				$body .= "--" . $this->_alt_boundary . "--" . $this->newline . $this->newline;
+					.$this->_prep_quoted_printable($this->_body).$this->newline.$this->newline
+					.'--'.$this->_alt_boundary.'--'.$this->newline.$this->newline;
 
 			break;
 		}
 
 		$attachment = array();
-
-		$z = 0;
-
-		for ($i=0; $i < count($this->_attach_name); $i++)
-		{
-			$filename = $this->_attach_name[$i];
-			$basename = basename($filename);
-			$ctype = $this->_attach_type[$i];
-
-			if ( ! file_exists($filename))
-			{
-				$this->_set_error_message('lang:email_attachment_missing', $filename);
-				return FALSE;
-			}
-
-			$h  = "--".$this->_atc_boundary.$this->newline;
-			$h .= "Content-type: ".$ctype."; ";
-			$h .= "name=\"".$basename."\"".$this->newline;
-			$h .= "Content-Disposition: ".$this->_attach_disp[$i].";".$this->newline;
-			$h .= "Content-Transfer-Encoding: base64".$this->newline;
-
-			$attachment[$z++] = $h;
-			$file = filesize($filename) +1;
-
-			if ( ! $fp = fopen($filename, FOPEN_READ))
-			{
-				$this->_set_error_message('lang:email_attachment_unreadable', $filename);
-				return FALSE;
-			}
-
-			$attachment[$z++] = chunk_split(base64_encode(fread($fp, $file)));
-			fclose($fp);
-		}
-
-		$body .= implode($this->newline, $attachment).$this->newline."--".$this->_atc_boundary."--";
-
-
-		if ($this->_get_protocol() == 'mail')
+		for ($i = 0, $c = count($this->_attachments), $z = 0; $i < $c; $i++)
 		{
-			$this->_finalbody = $body;
-		}
-		else
-		{
-			$this->_finalbody = $hdr . $body;
-		}
+			$filename = $this->_attachments[$i]['name'][0];
+			$basename = ($this->_attachments[$i]['name'][1] === NULL)
+				? basename($filename) : $this->_attachments[$i]['name'][1];
+
+			$attachment[$z++] = '--'.$this->_atc_boundary.$this->newline
+				.'Content-type: '.$this->_attachments[$i]['type'].'; '
+				.'name="'.$basename.'"'.$this->newline
+				.'Content-Disposition: '.$this->_attachments[$i]['disposition'].';'.$this->newline
+				.'Content-Transfer-Encoding: base64'.$this->newline
+				.(empty($this->_attachments[$i]['cid']) ? '' : 'Content-ID: <'.$this->_attachments[$i]['cid'].'>'.$this->newline);
+
+			$attachment[$z++] = $this->_attachments[$i]['content'];
+		}
+
+		$body .= implode($this->newline, $attachment).$this->newline.'--'.$this->_atc_boundary.'--';
+		$this->_finalbody = ($this->_get_protocol() === 'mail')
+			? $body
+			: $hdr.$this->newline.$this->newline.$body;
 
-		return;
+		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
@@ -1190,26 +1468,47 @@
 	 * Prepares string for Quoted-Printable Content-Transfer-Encoding
 	 * Refer to RFC 2045 http://www.ietf.org/rfc/rfc2045.txt
 	 *
-	 * @access	protected
 	 * @param	string
-	 * @param	integer
 	 * @return	string
 	 */
-	protected function _prep_quoted_printable($str, $charlim = '')
+	protected function _prep_quoted_printable($str)
+	{
+		// ASCII code numbers for "safe" characters that can always be
+		// used literally, without encoding, as described in RFC 2049.
+		// http://www.ietf.org/rfc/rfc2049.txt
+		static $ascii_safe_chars = array(
+			// ' (  )   +   ,   -   .   /   :   =   ?
+			39, 40, 41, 43, 44, 45, 46, 47, 58, 61, 63,
+			// numbers
+			48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
+			// upper-case letters
+			65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
+			// lower-case letters
+			97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122
+		);
+
+		// We are intentionally wrapping so mail servers will encode characters
+		// properly and MUAs will behave, so {unwrap} must go!
+		$str = str_replace(array('{unwrap}', '{/unwrap}'), '', $str);
+
+		// RFC 2045 specifies CRLF as "\r\n".
+		// However, many developers choose to override that and violate
+		// the RFC rules due to (apparently) a bug in MS Exchange,
+		// which only works with "\n".
+		if ($this->crlf === "\r\n")
 	{
-		// Set the character limit
-		// Don't allow over 76, as that will make servers and MUAs barf
-		// all over quoted-printable data
-		if ($charlim == '' OR $charlim > '76')
+			if (is_php('5.3'))
 		{
-			$charlim = '76';
+				return quoted_printable_encode($str);
+			}
+			elseif (function_exists('imap_8bit'))
+			{
+				return imap_8bit($str);
+			}
 		}
 
-		// Reduce multiple spaces
-		$str = preg_replace("| +|", " ", $str);
-
-		// kill nulls
-		$str = preg_replace('/\x00+/', '', $str);
+		// Reduce multiple spaces & remove nulls
+		$str = preg_replace(array('| +|', '/\x00+/'), array(' ', ''), $str);
 
 		// Standardize newlines
 		if (strpos($str, "\r") !== FALSE)
@@ -1217,17 +1516,10 @@
 			$str = str_replace(array("\r\n", "\r"), "\n", $str);
 		}
 
-		// We are intentionally wrapping so mail servers will encode characters
-		// properly and MUAs will behave, so {unwrap} must go!
-		$str = str_replace(array('{unwrap}', '{/unwrap}'), '', $str);
-
-		// Break into an array of lines
-		$lines = explode("\n", $str);
-
 		$escape = '=';
 		$output = '';
 
-		foreach ($lines as $line)
+		foreach (explode("\n", $str) as $line)
 		{
 			$length = strlen($line);
 			$temp = '';
@@ -1238,24 +1530,33 @@
 			for ($i = 0; $i < $length; $i++)
 			{
 				// Grab the next character
-				$char = substr($line, $i, 1);
+				$char = $line[$i];
 				$ascii = ord($char);
 
 				// Convert spaces and tabs but only if it's the end of the line
-				if ($i == ($length - 1))
+				if ($ascii === 32 OR $ascii === 9)
 				{
-					$char = ($ascii == '32' OR $ascii == '9') ? $escape.sprintf('%02s', dechex($ascii)) : $char;
+					if ($i === ($length - 1))
+					{
+						$char = $escape.sprintf('%02s', dechex($ascii));
 				}
-
-				// encode = signs
-				if ($ascii == '61')
+				}
+				// DO NOT move this below the $ascii_safe_chars line!
+				//
+				// = (equals) signs are allowed by RFC2049, but must be encoded
+				// as they are the encoding delimiter!
+				elseif ($ascii === 61)
 				{
 					$char = $escape.strtoupper(sprintf('%02s', dechex($ascii)));  // =3D
 				}
+				elseif ( ! in_array($ascii, $ascii_safe_chars, TRUE))
+				{
+					$char = $escape.strtoupper(sprintf('%02s', dechex($ascii)));
+				}
 
 				// If we're at the character limit, add the line to the output,
 				// reset our temp variable, and keep on chuggin'
-				if ((strlen($temp) + strlen($char)) >= $charlim)
+				if ((strlen($temp) + strlen($char)) >= 76)
 				{
 					$output .= $temp.$escape.$this->crlf;
 					$temp = '';
@@ -1270,9 +1571,7 @@
 		}
 
 		// get rid of extra CRLF tacked onto the end
-		$output = substr($output, 0, strlen($this->crlf) * -1);
-
-		return $output;
+		return substr($output, 0, strlen($this->crlf) * -1);
 	}
 
 	// --------------------------------------------------------------------
@@ -1280,71 +1579,78 @@
 	/**
 	 * Prep Q Encoding
 	 *
-	 * Performs "Q Encoding" on a string for use in email headers.  It's related
-	 * but not identical to quoted-printable, so it has its own method
+	 * Performs "Q Encoding" on a string for use in email headers.
+	 * It's related but not identical to quoted-printable, so it has its
+	 * own method.
 	 *
-	 * @access	public
-	 * @param	str
-	 * @param	bool	// set to TRUE for processing From: headers
-	 * @return	str
+	 * @param	string
+	 * @return	string
 	 */
-	protected function _prep_q_encoding($str, $from = FALSE)
+	protected function _prep_q_encoding($str)
 	{
-		$str = str_replace(array("\r", "\n"), array('', ''), $str);
-
-		// Line length must not exceed 76 characters, so we adjust for
-		// a space, 7 extra characters =??Q??=, and the charset that we will add to each line
-		$limit = 75 - 7 - strlen($this->charset);
+		$str = str_replace(array("\r", "\n"), '', $str);
 
-		// these special characters must be converted too
-		$convert = array('_', '=', '?');
+		if ($this->charset === 'UTF-8')
+		{
+			// Note: We used to have mb_encode_mimeheader() as the first choice
+			//       here, but it turned out to be buggy and unreliable. DO NOT
+			//       re-add it! -- Narf
+			if (ICONV_ENABLED === TRUE)
+			{
+				$output = @iconv_mime_encode('', $str,
+					array(
+						'scheme' => 'Q',
+						'line-length' => 76,
+						'input-charset' => $this->charset,
+						'output-charset' => $this->charset,
+						'line-break-chars' => $this->crlf
+					)
+				);
 
-		if ($from === TRUE)
+				// There are reports that iconv_mime_encode() might fail and return FALSE
+				if ($output !== FALSE)
 		{
-			$convert[] = ',';
-			$convert[] = ';';
+					// iconv_mime_encode() will always put a header field name.
+					// We've passed it an empty one, but it still prepends our
+					// encoded string with ': ', so we need to strip it.
+					return substr($output, 2);
 		}
 
-		$output = '';
-		$temp = '';
-
-		for ($i = 0, $length = strlen($str); $i < $length; $i++)
+				$chars = iconv_strlen($str, 'UTF-8');
+			}
+			elseif (MB_ENABLED === TRUE)
 		{
-			// Grab the next character
-			$char = substr($str, $i, 1);
-			$ascii = ord($char);
+				$chars = mb_strlen($str, 'UTF-8');
+			}
+		}
 
-			// convert ALL non-printable ASCII characters and our specials
-			if ($ascii < 32 OR $ascii > 126 OR in_array($char, $convert))
+		// We might already have this set for UTF-8
+		isset($chars) OR $chars = strlen($str);
+
+		$output = '=?'.$this->charset.'?Q?';
+		for ($i = 0, $length = strlen($output); $i < $chars; $i++)
 			{
-				$char = '='.dechex($ascii);
-			}
+			$chr = ($this->charset === 'UTF-8' && ICONV_ENABLED === TRUE)
+				? '='.implode('=', str_split(strtoupper(bin2hex(iconv_substr($str, $i, 1, $this->charset))), 2))
+				: '='.strtoupper(bin2hex($str[$i]));
 
-			// handle regular spaces a bit more compactly than =20
-			if ($ascii == 32)
+			// RFC 2045 sets a limit of 76 characters per line.
+			// We'll append ?= to the end of each line though.
+			if ($length + ($l = strlen($chr)) > 74)
 			{
-				$char = '_';
+				$output .= '?='.$this->crlf // EOL
+					.' =?'.$this->charset.'?Q?'.$chr; // New line
+				$length = 6 + strlen($this->charset) + $l; // Reset the length for the new line
 			}
-
-			// If we're at the character limit, add the line to the output,
-			// reset our temp variable, and keep on chuggin'
-			if ((strlen($temp) + strlen($char)) >= $limit)
+			else
 			{
-				$output .= $temp.$this->crlf;
-				$temp = '';
+				$output .= $chr;
+				$length += $l;
 			}
-
-			// Add the character to our temporary line
-			$temp .= $char;
 		}
 
-		$str = $output.$temp;
-
-		// wrap each line with the shebang, charset, and transfer encoding
-		// the preceding space on successive lines is required for header "folding"
-		$str = trim(preg_replace('/^(.*)$/m', ' =?'.$this->charset.'?Q?$1?=', $str));
-
-		return $str;
+		// End the header
+		return $output.'?=';
 	}
 
 	// --------------------------------------------------------------------
@@ -1352,19 +1658,25 @@
 	/**
 	 * Send Email
 	 *
-	 * @access	public
+	 * @param	bool	$auto_clear = TRUE
 	 * @return	bool
 	 */
-	public function send()
+	public function send($auto_clear = TRUE)
+	{
+		if ( ! isset($this->_headers['From']))
 	{
-		if ($this->_replyto_flag == FALSE)
+			$this->_set_error_message('lang:email_no_from');
+			return FALSE;
+		}
+
+		if ($this->_replyto_flag === FALSE)
 		{
 			$this->reply_to($this->_headers['From']);
 		}
 
-		if (( ! isset($this->_recipients) AND ! isset($this->_headers['To']))  AND
-			( ! isset($this->_bcc_array) AND ! isset($this->_headers['Bcc'])) AND
-			( ! isset($this->_headers['Cc'])))
+		if ( ! isset($this->_recipients) && ! isset($this->_headers['To'])
+			&& ! isset($this->_bcc_array) && ! isset($this->_headers['Bcc'])
+			&& ! isset($this->_headers['Cc']))
 		{
 			$this->_set_error_message('lang:email_no_recipients');
 			return FALSE;
@@ -1372,22 +1684,31 @@
 
 		$this->_build_headers();
 
-		if ($this->bcc_batch_mode  AND  count($this->_bcc_array) > 0)
+		if ($this->bcc_batch_mode && count($this->_bcc_array) > $this->bcc_batch_size)
+		{
+			$result = $this->batch_bcc_send();
+
+			if ($result && $auto_clear)
 		{
-			if (count($this->_bcc_array) > $this->bcc_batch_size)
-				return $this->batch_bcc_send();
+				$this->clear();
 		}
 
-		$this->_build_message();
+			return $result;
+		}
 
-		if ( ! $this->_spool_email())
+		if ($this->_build_message() === FALSE)
 		{
 			return FALSE;
 		}
-		else
+
+		$result = $this->_spool_email();
+
+		if ($result && $auto_clear)
 		{
-			return TRUE;
+			$this->clear();
 		}
+
+		return $result;
 	}
 
 	// --------------------------------------------------------------------
@@ -1395,55 +1716,54 @@
 	/**
 	 * Batch Bcc Send.  Sends groups of BCCs in batches
 	 *
-	 * @access	public
-	 * @return	bool
+	 * @return	void
 	 */
 	public function batch_bcc_send()
 	{
 		$float = $this->bcc_batch_size -1;
-
-		$set = "";
-
+		$set = '';
 		$chunk = array();
 
-		for ($i = 0; $i < count($this->_bcc_array); $i++)
+		for ($i = 0, $c = count($this->_bcc_array); $i < $c; $i++)
 		{
 			if (isset($this->_bcc_array[$i]))
 			{
-				$set .= ", ".$this->_bcc_array[$i];
+				$set .= ', '.$this->_bcc_array[$i];
 			}
 
-			if ($i == $float)
+			if ($i === $float)
 			{
 				$chunk[] = substr($set, 1);
-				$float = $float + $this->bcc_batch_size;
-				$set = "";
+				$float += $this->bcc_batch_size;
+				$set = '';
 			}
 
-			if ($i == count($this->_bcc_array)-1)
+			if ($i === $c-1)
 			{
 				$chunk[] = substr($set, 1);
 			}
 		}
 
-		for ($i = 0; $i < count($chunk); $i++)
+		for ($i = 0, $c = count($chunk); $i < $c; $i++)
 		{
 			unset($this->_headers['Bcc']);
-			unset($bcc);
 
-			$bcc = $this->_str_to_array($chunk[$i]);
-			$bcc = $this->clean_email($bcc);
+			$bcc = $this->clean_email($this->_str_to_array($chunk[$i]));
 
-			if ($this->protocol != 'smtp')
+			if ($this->protocol !== 'smtp')
 			{
-				$this->_set_header('Bcc', implode(", ", $bcc));
+				$this->set_header('Bcc', implode(', ', $bcc));
 			}
 			else
 			{
 				$this->_bcc_array = $bcc;
 			}
 
-			$this->_build_message();
+			if ($this->_build_message() === FALSE)
+			{
+				return FALSE;
+			}
+
 			$this->_spool_email();
 		}
 	}
@@ -1453,12 +1773,11 @@
 	/**
 	 * Unwrap special elements
 	 *
-	 * @access	protected
 	 * @return	void
 	 */
 	protected function _unwrap_specials()
 	{
-		$this->_finalbody = preg_replace_callback("/\{unwrap\}(.*?)\{\/unwrap\}/si", array($this, '_remove_nl_callback'), $this->_finalbody);
+		$this->_finalbody = preg_replace_callback('/\{unwrap\}(.*?)\{\/unwrap\}/si', array($this, '_remove_nl_callback'), $this->_finalbody);
 	}
 
 	// --------------------------------------------------------------------
@@ -1466,7 +1785,7 @@
 	/**
 	 * Strip line-breaks via callback
 	 *
-	 * @access	protected
+	 * @param	string	$matches
 	 * @return	string
 	 */
 	protected function _remove_nl_callback($matches)
@@ -1484,41 +1803,18 @@
 	/**
 	 * Spool mail to the mail server
 	 *
-	 * @access	protected
 	 * @return	bool
 	 */
 	protected function _spool_email()
 	{
 		$this->_unwrap_specials();
 
-		switch ($this->_get_protocol())
-		{
-			case 'mail'	:
-
-					if ( ! $this->_send_with_mail())
-					{
-						$this->_set_error_message('lang:email_send_failure_phpmail');
-						return FALSE;
-					}
-			break;
-			case 'sendmail'	:
-
-					if ( ! $this->_send_with_sendmail())
-					{
-						$this->_set_error_message('lang:email_send_failure_sendmail');
-						return FALSE;
-					}
-			break;
-			case 'smtp'	:
-
-					if ( ! $this->_send_with_smtp())
+		$method = '_send_with_'.$this->_get_protocol();
+		if ( ! $this->$method())
 					{
-						$this->_set_error_message('lang:email_send_failure_smtp');
+			$this->_set_error_message('lang:email_send_failure_'.($this->_get_protocol() === 'mail' ? 'phpmail' : $this->_get_protocol()));
 						return FALSE;
 					}
-			break;
-
-		}
 
 		$this->_set_error_message('lang:email_sent', $this->_get_protocol());
 		return TRUE;
@@ -1529,35 +1825,24 @@
 	/**
 	 * Send using mail()
 	 *
-	 * @access	protected
 	 * @return	bool
 	 */
 	protected function _send_with_mail()
 	{
-		if ($this->_safe_mode == TRUE)
+		if (is_array($this->_recipients))
 		{
-			if ( ! mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str))
-			{
-				return FALSE;
+			$this->_recipients = implode(', ', $this->_recipients);
 			}
-			else
+
+		if ($this->_safe_mode === TRUE)
 			{
-				return TRUE;
-			}
+			return mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str);
 		}
 		else
 		{
 			// most documentation of sendmail using the "-f" flag lacks a space after it, however
 			// we've encountered servers that seem to require it to be in place.
-
-			if ( ! mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str, "-f ".$this->clean_email($this->_headers['From'])))
-			{
-				return FALSE;
-			}
-			else
-			{
-				return TRUE;
-			}
+			return mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str, '-f '.$this->clean_email($this->_headers['Return-Path']));
 		}
 	}
 
@@ -1566,16 +1851,17 @@
 	/**
 	 * Send using Sendmail
 	 *
-	 * @access	protected
 	 * @return	bool
 	 */
 	protected function _send_with_sendmail()
 	{
-		$fp = @popen($this->mailpath . " -oi -f ".$this->clean_email($this->_headers['From'])." -t", 'w');
-
-		if ($fp === FALSE OR $fp === NULL)
+		// is popen() enabled?
+		if ( ! function_usable('popen')
+			OR FALSE === ($fp = @popen(
+						$this->mailpath.' -oi -f '.$this->clean_email($this->_headers['From']).' -t'
+						, 'w'))
+		) // server probably has popen disabled, so nothing we can do to get a verbose error.
 		{
-			// server probably has popen disabled, so nothing we can do to get a verbose error.
 			return FALSE;
 		}
 
@@ -1584,12 +1870,7 @@
 
 		$status = pclose($fp);
 
-		if (version_compare(PHP_VERSION, '4.2.3') == -1)
-		{
-			$status = $status >> 8 & 0xFF;
-		}
-
-		if ($status != 0)
+		if ($status !== 0)
 		{
 			$this->_set_error_message('lang:email_exit_status', $status);
 			$this->_set_error_message('lang:email_no_socket');
@@ -1604,34 +1885,41 @@
 	/**
 	 * Send using SMTP
 	 *
-	 * @access	protected
 	 * @return	bool
 	 */
 	protected function _send_with_smtp()
 	{
-		if ($this->smtp_host == '')
+		if ($this->smtp_host === '')
 		{
 			$this->_set_error_message('lang:email_no_hostname');
 			return FALSE;
 		}
 
-		$this->_smtp_connect();
-		$this->_smtp_authenticate();
+		if ( ! $this->_smtp_connect() OR ! $this->_smtp_authenticate())
+		{
+			return FALSE;
+		}
 
-		$this->_send_command('from', $this->clean_email($this->_headers['From']));
+		if ( ! $this->_send_command('from', $this->clean_email($this->_headers['From'])))
+		{
+			return FALSE;
+		}
 
 		foreach ($this->_recipients as $val)
 		{
-			$this->_send_command('to', $val);
+			if ( ! $this->_send_command('to', $val))
+			{
+				return FALSE;
+			}
 		}
 
 		if (count($this->_cc_array) > 0)
 		{
 			foreach ($this->_cc_array as $val)
 			{
-				if ($val != "")
+				if ($val !== '' && ! $this->_send_command('to', $val))
 				{
-					$this->_send_command('to', $val);
+					return FALSE;
 				}
 			}
 		}
@@ -1640,14 +1928,17 @@
 		{
 			foreach ($this->_bcc_array as $val)
 			{
-				if ($val != "")
+				if ($val !== '' && ! $this->_send_command('to', $val))
 				{
-					$this->_send_command('to', $val);
+					return FALSE;
 				}
 			}
 		}
 
-		$this->_send_command('data');
+		if ( ! $this->_send_command('data'))
+		{
+			return FALSE;
+		}
 
 		// perform dot transformation on any lines that begin with a dot
 		$this->_send_data($this->_header_str . preg_replace('/^\./m', '..$1', $this->_finalbody));
@@ -1658,13 +1949,21 @@
 
 		$this->_set_error_message($reply);
 
-		if (strncmp($reply, '250', 3) != 0)
+		if (strpos($reply, '250') !== 0)
 		{
 			$this->_set_error_message('lang:email_smtp_error', $reply);
 			return FALSE;
 		}
 
+		if ($this->smtp_keepalive)
+		{
+			$this->_send_command('reset');
+		}
+		else
+		{
 		$this->_send_command('quit');
+		}
+
 		return TRUE;
 	}
 
@@ -1673,15 +1972,17 @@
 	/**
 	 * SMTP Connect
 	 *
-	 * @access	protected
-	 * @param	string
 	 * @return	string
 	 */
 	protected function _smtp_connect()
 	{
-		$ssl = NULL;
-		if ($this->smtp_crypto == 'ssl')
-			$ssl = 'ssl://';
+		if (is_resource($this->_smtp_connect))
+		{
+			return TRUE;
+		}
+
+		$ssl = ($this->smtp_crypto === 'ssl') ? 'ssl://' : '';
+
 		$this->_smtp_connect = fsockopen($ssl.$this->smtp_host,
 										$this->smtp_port,
 										$errno,
@@ -1690,17 +1991,25 @@
 
 		if ( ! is_resource($this->_smtp_connect))
 		{
-			$this->_set_error_message('lang:email_smtp_error', $errno." ".$errstr);
+			$this->_set_error_message('lang:email_smtp_error', $errno.' '.$errstr);
 			return FALSE;
 		}
 
+		stream_set_timeout($this->_smtp_connect, $this->smtp_timeout);
 		$this->_set_error_message($this->_get_smtp_data());
 
-		if ($this->smtp_crypto == 'tls')
+		if ($this->smtp_crypto === 'tls')
 		{
 			$this->_send_command('hello');
 			$this->_send_command('starttls');
-			stream_socket_enable_crypto($this->_smtp_connect, TRUE, STREAM_CRYPTO_METHOD_TLS_CLIENT);
+
+			$crypto = stream_socket_enable_crypto($this->_smtp_connect, TRUE, STREAM_CRYPTO_METHOD_TLS_CLIENT);
+
+			if ($crypto !== TRUE)
+			{
+				$this->_set_error_message('lang:email_smtp_error', $this->_get_smtp_data());
+				return FALSE;
+			}
 		}
 
 		return $this->_send_command('hello');
@@ -1711,7 +2020,6 @@
 	/**
 	 * Send SMTP command
 	 *
-	 * @access	protected
 	 * @param	string
 	 * @param	string
 	 * @return	string
@@ -1722,10 +2030,14 @@
 		{
 			case 'hello' :
 
-					if ($this->_smtp_auth OR $this->_get_encoding() == '8bit')
+						if ($this->_smtp_auth OR $this->_get_encoding() === '8bit')
+						{
 						$this->_send_data('EHLO '.$this->_get_hostname());
+						}
 					else
+						{
 						$this->_send_data('HELO '.$this->_get_hostname());
+						}
 
 						$resp = 250;
 			break;
@@ -1743,7 +2053,14 @@
 			break;
 			case 'to'	:
 
+						if ($this->dsn)
+						{
+							$this->_send_data('RCPT TO:<'.$data.'> NOTIFY=SUCCESS,DELAY,FAILURE ORCPT=rfc822;'.$data);
+						}
+						else
+						{
 						$this->_send_data('RCPT TO:<'.$data.'>');
+						}
 
 						$resp = 250;
 			break;
@@ -1750,9 +2067,13 @@
 			case 'data'	:
 
 						$this->_send_data('DATA');
-
 						$resp = 354;
 			break;
+			case 'reset':
+
+						$this->_send_data('RSET');
+						$resp = 250;
+			break;
 			case 'quit'	:
 
 						$this->_send_data('QUIT');
@@ -1763,15 +2083,15 @@
 
 		$reply = $this->_get_smtp_data();
 
-		$this->_debug_msg[] = "<pre>".$cmd.": ".$reply."</pre>";
+		$this->_debug_msg[] = '<pre>'.$cmd.': '.$reply.'</pre>';
 
-		if (substr($reply, 0, 3) != $resp)
+		if ((int) substr($reply, 0, 3) !== $resp)
 		{
 			$this->_set_error_message('lang:email_smtp_error', $reply);
 			return FALSE;
 		}
 
-		if ($cmd == 'quit')
+		if ($cmd === 'quit')
 		{
 			fclose($this->_smtp_connect);
 		}
@@ -1784,7 +2104,6 @@
 	/**
 	 *  SMTP Authenticate
 	 *
-	 * @access	protected
 	 * @return	bool
 	 */
 	protected function _smtp_authenticate()
@@ -1794,7 +2113,7 @@
 			return TRUE;
 		}
 
-		if ($this->smtp_user == ""  AND  $this->smtp_pass == "")
+		if ($this->smtp_user === '' && $this->smtp_pass === '')
 		{
 			$this->_set_error_message('lang:email_no_smtp_unpw');
 			return FALSE;
@@ -1804,7 +2123,11 @@
 
 		$reply = $this->_get_smtp_data();
 
-		if (strncmp($reply, '334', 3) != 0)
+		if (strpos($reply, '503') === 0)	// Already authenticated
+		{
+			return TRUE;
+		}
+		elseif (strpos($reply, '334') !== 0)
 		{
 			$this->_set_error_message('lang:email_failed_smtp_login', $reply);
 			return FALSE;
@@ -1814,7 +2137,7 @@
 
 		$reply = $this->_get_smtp_data();
 
-		if (strncmp($reply, '334', 3) != 0)
+		if (strpos($reply, '334') !== 0)
 		{
 			$this->_set_error_message('lang:email_smtp_auth_un', $reply);
 			return FALSE;
@@ -1824,7 +2147,7 @@
 
 		$reply = $this->_get_smtp_data();
 
-		if (strncmp($reply, '235', 3) != 0)
+		if (strpos($reply, '235') !== 0)
 		{
 			$this->_set_error_message('lang:email_smtp_auth_pw', $reply);
 			return FALSE;
@@ -1838,20 +2161,47 @@
 	/**
 	 * Send SMTP data
 	 *
-	 * @access	protected
+	 * @param	string	$data
 	 * @return	bool
 	 */
 	protected function _send_data($data)
 	{
-		if ( ! fwrite($this->_smtp_connect, $data . $this->newline))
+		$data .= $this->newline;
+		for ($written = $timestamp = 0, $length = strlen($data); $written < $length; $written += $result)
 		{
-			$this->_set_error_message('lang:email_smtp_data_failure', $data);
-			return FALSE;
+			if (($result = fwrite($this->_smtp_connect, substr($data, $written))) === FALSE)
+			{
+				break;
+			}
+			// See https://bugs.php.net/bug.php?id=39598 and http://php.net/manual/en/function.fwrite.php#96951
+			elseif ($result === 0)
+			{
+				if ($timestamp === 0)
+				{
+					$timestamp = time();
+				}
+				elseif ($timestamp < (time() - $this->smtp_timeout))
+				{
+					$result = FALSE;
+					break;
+				}
+
+				usleep(250000);
+				continue;
 		}
 		else
 		{
-			return TRUE;
+				$timestamp = 0;
+			}
+		}
+
+		if ($result === FALSE)
+		{
+			$this->_set_error_message('lang:email_smtp_data_failure', $data);
+			return FALSE;
 		}
+
+		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
@@ -1859,18 +2209,17 @@
 	/**
 	 * Get SMTP data
 	 *
-	 * @access	protected
 	 * @return	string
 	 */
 	protected function _get_smtp_data()
 	{
-		$data = "";
+		$data = '';
 
 		while ($str = fgets($this->_smtp_connect, 512))
 		{
 			$data .= $str;
 
-			if (substr($str, 3, 1) == " ")
+			if ($str[3] === ' ')
 			{
 				break;
 			}
@@ -1884,54 +2233,22 @@
 	/**
 	 * Get Hostname
 	 *
-	 * @access	protected
-	 * @return	string
-	 */
-	protected function _get_hostname()
-	{
-		return (isset($_SERVER['SERVER_NAME'])) ? $_SERVER['SERVER_NAME'] : 'localhost.localdomain';
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * Get IP
+	 * There are only two legal types of hostname - either a fully
+	 * qualified domain name (eg: "mail.example.com") or an IP literal
+	 * (eg: "[1.2.3.4]").
 	 *
-	 * @access	protected
+	 * @link	https://tools.ietf.org/html/rfc5321#section-2.3.5
+	 * @link	http://cbl.abuseat.org/namingproblems.html
 	 * @return	string
 	 */
-	protected function _get_ip()
-	{
-		if ($this->_IP !== FALSE)
-		{
-			return $this->_IP;
-		}
-
-		$cip = (isset($_SERVER['HTTP_CLIENT_IP']) AND $_SERVER['HTTP_CLIENT_IP'] != "") ? $_SERVER['HTTP_CLIENT_IP'] : FALSE;
-		$rip = (isset($_SERVER['REMOTE_ADDR']) AND $_SERVER['REMOTE_ADDR'] != "") ? $_SERVER['REMOTE_ADDR'] : FALSE;
-		$fip = (isset($_SERVER['HTTP_X_FORWARDED_FOR']) AND $_SERVER['HTTP_X_FORWARDED_FOR'] != "") ? $_SERVER['HTTP_X_FORWARDED_FOR'] : FALSE;
-
-		if ($cip && $rip)	$this->_IP = $cip;
-		elseif ($rip)		$this->_IP = $rip;
-		elseif ($cip)		$this->_IP = $cip;
-		elseif ($fip)		$this->_IP = $fip;
-
-		if (strpos($this->_IP, ',') !== FALSE)
+	protected function _get_hostname()
 		{
-			$x = explode(',', $this->_IP);
-			$this->_IP = end($x);
-		}
-
-		if ( ! preg_match( "/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/", $this->_IP))
+		if (isset($_SERVER['SERVER_NAME']))
 		{
-			$this->_IP = '0.0.0.0';
+			return $_SERVER['SERVER_NAME'];
 		}
 
-		unset($cip);
-		unset($rip);
-		unset($fip);
-
-		return $this->_IP;
+		return isset($_SERVER['SERVER_ADDR']) ? '['.$_SERVER['SERVER_ADDR'].']' : '[127.0.0.1]';
 	}
 
 	// --------------------------------------------------------------------
@@ -1939,10 +2256,11 @@
 	/**
 	 * Get Debug Message
 	 *
-	 * @access	public
+	 * @param	array	$include	List of raw data chunks to include in the output
+	 *					Valid options are: 'headers', 'subject', 'body'
 	 * @return	string
 	 */
-	public function print_debugger()
+	public function print_debugger($include = array('headers', 'subject', 'body'))
 	{
 		$msg = '';
 
@@ -1954,8 +2272,26 @@
 			}
 		}
 
-		$msg .= "<pre>".htmlspecialchars($this->_header_str)."\n".htmlspecialchars($this->_subject)."\n".htmlspecialchars($this->_finalbody).'</pre>';
-		return $msg;
+		// Determine which parts of our raw data needs to be printed
+		$raw_data = '';
+		is_array($include) OR $include = array($include);
+
+		if (in_array('headers', $include, TRUE))
+		{
+			$raw_data = htmlspecialchars($this->_header_str)."\n";
+		}
+
+		if (in_array('subject', $include, TRUE))
+		{
+			$raw_data .= htmlspecialchars($this->_subject)."\n";
+		}
+
+		if (in_array('body', $include, TRUE))
+		{
+			$raw_data .= htmlspecialchars($this->_finalbody);
+		}
+
+		return $msg.($raw_data === '' ? '' : '<pre>'.$raw_data.'</pre>');
 	}
 
 	// --------------------------------------------------------------------
@@ -1963,22 +2299,22 @@
 	/**
 	 * Set Message
 	 *
-	 * @access	protected
-	 * @param	string
-	 * @return	string
+	 * @param	string	$msg
+	 * @param	string	$val = ''
+	 * @return	void
 	 */
 	protected function _set_error_message($msg, $val = '')
 	{
 		$CI =& get_instance();
 		$CI->lang->load('email');
 
-		if (substr($msg, 0, 5) != 'lang:' || FALSE === ($line = $CI->lang->line(substr($msg, 5))))
+		if (sscanf($msg, 'lang:%s', $line) !== 1 OR FALSE === ($line = $CI->lang->line($line)))
 		{
-			$this->_debug_msg[] = str_replace('%s', $val, $msg)."<br />";
+			$this->_debug_msg[] = str_replace('%s', $val, $msg).'<br />';
 		}
 		else
 		{
-			$this->_debug_msg[] = str_replace('%s', $val, $line)."<br />";
+			$this->_debug_msg[] = str_replace('%s', $val, $line).'<br />';
 		}
 	}
 
@@ -1987,106 +2323,23 @@
 	/**
 	 * Mime Types
 	 *
-	 * @access	protected
 	 * @param	string
 	 * @return	string
 	 */
-	protected function _mime_types($ext = "")
+	protected function _mime_types($ext = '')
 	{
-		$mimes = array(	'hqx'	=>	'application/mac-binhex40',
-						'cpt'	=>	'application/mac-compactpro',
-						'doc'	=>	'application/msword',
-						'bin'	=>	'application/macbinary',
-						'dms'	=>	'application/octet-stream',
-						'lha'	=>	'application/octet-stream',
-						'lzh'	=>	'application/octet-stream',
-						'exe'	=>	'application/octet-stream',
-						'class'	=>	'application/octet-stream',
-						'psd'	=>	'application/octet-stream',
-						'so'	=>	'application/octet-stream',
-						'sea'	=>	'application/octet-stream',
-						'dll'	=>	'application/octet-stream',
-						'oda'	=>	'application/oda',
-						'pdf'	=>	'application/pdf',
-						'ai'	=>	'application/postscript',
-						'eps'	=>	'application/postscript',
-						'ps'	=>	'application/postscript',
-						'smi'	=>	'application/smil',
-						'smil'	=>	'application/smil',
-						'mif'	=>	'application/vnd.mif',
-						'xls'	=>	'application/vnd.ms-excel',
-						'ppt'	=>	'application/vnd.ms-powerpoint',
-						'wbxml'	=>	'application/vnd.wap.wbxml',
-						'wmlc'	=>	'application/vnd.wap.wmlc',
-						'dcr'	=>	'application/x-director',
-						'dir'	=>	'application/x-director',
-						'dxr'	=>	'application/x-director',
-						'dvi'	=>	'application/x-dvi',
-						'gtar'	=>	'application/x-gtar',
-						'php'	=>	'application/x-httpd-php',
-						'php4'	=>	'application/x-httpd-php',
-						'php3'	=>	'application/x-httpd-php',
-						'phtml'	=>	'application/x-httpd-php',
-						'phps'	=>	'application/x-httpd-php-source',
-						'js'	=>	'application/x-javascript',
-						'swf'	=>	'application/x-shockwave-flash',
-						'sit'	=>	'application/x-stuffit',
-						'tar'	=>	'application/x-tar',
-						'tgz'	=>	'application/x-tar',
-						'xhtml'	=>	'application/xhtml+xml',
-						'xht'	=>	'application/xhtml+xml',
-						'zip'	=>	'application/zip',
-						'mid'	=>	'audio/midi',
-						'midi'	=>	'audio/midi',
-						'mpga'	=>	'audio/mpeg',
-						'mp2'	=>	'audio/mpeg',
-						'mp3'	=>	'audio/mpeg',
-						'aif'	=>	'audio/x-aiff',
-						'aiff'	=>	'audio/x-aiff',
-						'aifc'	=>	'audio/x-aiff',
-						'ram'	=>	'audio/x-pn-realaudio',
-						'rm'	=>	'audio/x-pn-realaudio',
-						'rpm'	=>	'audio/x-pn-realaudio-plugin',
-						'ra'	=>	'audio/x-realaudio',
-						'rv'	=>	'video/vnd.rn-realvideo',
-						'wav'	=>	'audio/x-wav',
-						'bmp'	=>	'image/bmp',
-						'gif'	=>	'image/gif',
-						'jpeg'	=>	'image/jpeg',
-						'jpg'	=>	'image/jpeg',
-						'jpe'	=>	'image/jpeg',
-						'png'	=>	'image/png',
-						'tiff'	=>	'image/tiff',
-						'tif'	=>	'image/tiff',
-						'css'	=>	'text/css',
-						'html'	=>	'text/html',
-						'htm'	=>	'text/html',
-						'shtml'	=>	'text/html',
-						'txt'	=>	'text/plain',
-						'text'	=>	'text/plain',
-						'log'	=>	'text/plain',
-						'rtx'	=>	'text/richtext',
-						'rtf'	=>	'text/rtf',
-						'xml'	=>	'text/xml',
-						'xsl'	=>	'text/xml',
-						'mpeg'	=>	'video/mpeg',
-						'mpg'	=>	'video/mpeg',
-						'mpe'	=>	'video/mpeg',
-						'qt'	=>	'video/quicktime',
-						'mov'	=>	'video/quicktime',
-						'avi'	=>	'video/x-msvideo',
-						'movie'	=>	'video/x-sgi-movie',
-						'doc'	=>	'application/msword',
-						'word'	=>	'application/msword',
-						'xl'	=>	'application/excel',
-						'eml'	=>	'message/rfc822'
-					);
+		$ext = strtolower($ext);
+
+		$mimes =& get_mimes();
 
-		return ( ! isset($mimes[strtolower($ext)])) ? "application/x-unknown-content-type" : $mimes[strtolower($ext)];
+		if (isset($mimes[$ext]))
+		{
+			return is_array($mimes[$ext])
+				? current($mimes[$ext])
+				: $mimes[$ext];
 	}
 
+		return 'application/x-unknown-content-type';
 }
-// END CI_Email class
 
-/* End of file Email.php */
-/* Location: ./system/libraries/Email.php */
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Encrypt.php opensourcepos/system/libraries/Encrypt.php
--- pos-prod/system/libraries/Encrypt.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Encrypt.php	2016-05-23 15:32:31.945838793 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Encryption Class
@@ -23,35 +45,59 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/encryption.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/encryption.html
  */
 class CI_Encrypt {
 
-	var $CI;
-	var $encryption_key	= '';
-	var $_hash_type	= 'sha1';
-	var $_mcrypt_exists = FALSE;
-	var $_mcrypt_cipher;
-	var $_mcrypt_mode;
+	/**
+	 * Reference to the user's encryption key
+	 *
+	 * @var string
+	 */
+	public $encryption_key		= '';
+
+	/**
+	 * Type of hash operation
+	 *
+	 * @var string
+	 */
+	protected $_hash_type		= 'sha1';
+
+	/**
+	 * Flag for the existence of mcrypt
+	 *
+	 * @var bool
+	 */
+	protected $_mcrypt_exists	= FALSE;
+
+	/**
+	 * Current cipher to be used with mcrypt
+	 *
+	 * @var string
+	 */
+	protected $_mcrypt_cipher;
 
 	/**
-	 * Constructor
+	 * Method for encrypting/decrypting data
 	 *
-	 * Simply determines whether the mcrypt library exists.
+	 * @var int
+	 */
+	protected $_mcrypt_mode;
+
+	/**
+	 * Initialize Encryption class
 	 *
+	 * @return	void
 	 */
 	public function __construct()
 	{
-		$this->CI =& get_instance();
-		$this->_mcrypt_exists = ( ! function_exists('mcrypt_encrypt')) ? FALSE : TRUE;
-
-		if ($this->_mcrypt_exists === FALSE)
+		if (($this->_mcrypt_exists = function_exists('mcrypt_encrypt')) === FALSE)
 		{
 			show_error('The Encrypt library requires the Mcrypt extension.');
 		}
 
-		log_message('debug', "Encrypt Class Initialized");
+		log_message('info', 'Encrypt Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -62,23 +108,21 @@
 	 * Returns it as MD5 in order to have an exact-length 128 bit key.
 	 * Mcrypt is sensitive to keys that are not the correct length
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function get_key($key = '')
+	public function get_key($key = '')
 	{
-		if ($key == '')
+		if ($key === '')
 		{
-			if ($this->encryption_key != '')
+			if ($this->encryption_key !== '')
 			{
 				return $this->encryption_key;
 			}
 
-			$CI =& get_instance();
-			$key = $CI->config->item('encryption_key');
+			$key = config_item('encryption_key');
 
-			if ($key == FALSE)
+			if ( ! strlen($key))
 			{
 				show_error('In order to use the encryption class requires that you set an encryption key in your config file.');
 			}
@@ -92,13 +136,13 @@
 	/**
 	 * Set the encryption key
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Encrypt
 	 */
-	function set_key($key = '')
+	public function set_key($key = '')
 	{
 		$this->encryption_key = $key;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -114,17 +158,13 @@
 	 * with each call to this function, even if the supplied
 	 * message and key are the same.
 	 *
-	 * @access	public
 	 * @param	string	the string to encode
 	 * @param	string	the key
 	 * @return	string
 	 */
-	function encode($string, $key = '')
+	public function encode($string, $key = '')
 	{
-		$key = $this->get_key($key);
-		$enc = $this->mcrypt_encode($string, $key);
-
-		return base64_encode($enc);
+		return base64_encode($this->mcrypt_encode($string, $this->get_key($key)));
 	}
 
 	// --------------------------------------------------------------------
@@ -134,28 +174,18 @@
 	 *
 	 * Reverses the above process
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function decode($string, $key = '')
-	{
-		$key = $this->get_key($key);
-
-		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string))
+	public function decode($string, $key = '')
 		{
-			return FALSE;
-		}
-
-		$dec = base64_decode($string);
-
-		if (($dec = $this->mcrypt_decode($dec, $key)) === FALSE)
+		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string) OR base64_encode(base64_decode($string)) !== $string)
 		{
 			return FALSE;
 		}
 
-		return $dec;
+		return $this->mcrypt_decode(base64_decode($string), $this->get_key($key));
 	}
 
 	// --------------------------------------------------------------------
@@ -168,16 +198,20 @@
 	 * This allows for backwards compatibility and a method to transition to the
 	 * new encryption algorithms.
 	 *
-	 * For more details, see http://codeigniter.com/user_guide/installation/upgrade_200.html#encryption
+	 * For more details, see https://codeigniter.com/user_guide/installation/upgrade_200.html#encryption
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	int		(mcrypt mode constant)
 	 * @param	string
 	 * @return	string
 	 */
-	function encode_from_legacy($string, $legacy_mode = MCRYPT_MODE_ECB, $key = '')
+	public function encode_from_legacy($string, $legacy_mode = MCRYPT_MODE_ECB, $key = '')
+	{
+		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string))
 	{
+			return FALSE;
+		}
+
 		// decode it first
 		// set mode temporarily to what it was when string was encoded with the legacy
 		// algorithm - typically MCRYPT_MODE_ECB
@@ -185,16 +219,10 @@
 		$this->set_mode($legacy_mode);
 
 		$key = $this->get_key($key);
-
-		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string))
-		{
-			return FALSE;
-		}
-
 		$dec = base64_decode($string);
-
 		if (($dec = $this->mcrypt_decode($dec, $key)) === FALSE)
 		{
+			$this->set_mode($current_mode);
 			return FALSE;
 		}
 
@@ -215,19 +243,18 @@
 	 * Takes an encoded string and key as input and generates the
 	 * plain-text original message
 	 *
-	 * @access	private
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function _xor_decode($string, $key)
+	protected function _xor_decode($string, $key)
 	{
 		$string = $this->_xor_merge($string, $key);
 
 		$dec = '';
-		for ($i = 0; $i < strlen($string); $i++)
+		for ($i = 0, $l = strlen($string); $i < $l; $i++)
 		{
-			$dec .= (substr($string, $i++, 1) ^ substr($string, $i, 1));
+			$dec .= ($string[$i++] ^ $string[$i]);
 		}
 
 		return $dec;
@@ -240,18 +267,17 @@
 	 *
 	 * Takes a string and key as input and computes the difference using XOR
 	 *
-	 * @access	private
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function _xor_merge($string, $key)
+	protected function _xor_merge($string, $key)
 	{
 		$hash = $this->hash($key);
 		$str = '';
-		for ($i = 0; $i < strlen($string); $i++)
+		for ($i = 0, $ls = strlen($string), $lh = strlen($hash); $i < $ls; $i++)
 		{
-			$str .= substr($string, $i, 1) ^ substr($hash, ($i % strlen($hash)), 1);
+			$str .= $string[$i] ^ $hash[($i % $lh)];
 		}
 
 		return $str;
@@ -262,12 +288,11 @@
 	/**
 	 * Encrypt using Mcrypt
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function mcrypt_encode($data, $key)
+	public function mcrypt_encode($data, $key)
 	{
 		$init_size = mcrypt_get_iv_size($this->_get_cipher(), $this->_get_mode());
 		$init_vect = mcrypt_create_iv($init_size, MCRYPT_RAND);
@@ -279,12 +304,11 @@
 	/**
 	 * Decrypt using Mcrypt
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function mcrypt_decode($data, $key)
+	public function mcrypt_decode($data, $key)
 	{
 		$data = $this->_remove_cipher_noise($data, $key);
 		$init_size = mcrypt_get_iv_size($this->_get_cipher(), $this->_get_mode());
@@ -306,27 +330,23 @@
 	 * against Man-in-the-middle attacks on CBC mode ciphers
 	 * http://www.ciphersbyritter.com/GLOSSARY.HTM#IV
 	 *
-	 * Function description
-	 *
-	 * @access	private
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function _add_cipher_noise($data, $key)
+	protected function _add_cipher_noise($data, $key)
 	{
-		$keyhash = $this->hash($key);
-		$keylen = strlen($keyhash);
+		$key = $this->hash($key);
 		$str = '';
 
-		for ($i = 0, $j = 0, $len = strlen($data); $i < $len; ++$i, ++$j)
+		for ($i = 0, $j = 0, $ld = strlen($data), $lk = strlen($key); $i < $ld; ++$i, ++$j)
 		{
-			if ($j >= $keylen)
+			if ($j >= $lk)
 			{
 				$j = 0;
 			}
 
-			$str .= chr((ord($data[$i]) + ord($keyhash[$j])) % 256);
+			$str .= chr((ord($data[$i]) + ord($key[$j])) % 256);
 		}
 
 		return $str;
@@ -340,28 +360,27 @@
 	 *
 	 * Function description
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @param	string	$data
+	 * @param	string	$key
+	 * @return	string
 	 */
-	function _remove_cipher_noise($data, $key)
+	protected function _remove_cipher_noise($data, $key)
 	{
-		$keyhash = $this->hash($key);
-		$keylen = strlen($keyhash);
+		$key = $this->hash($key);
 		$str = '';
 
-		for ($i = 0, $j = 0, $len = strlen($data); $i < $len; ++$i, ++$j)
+		for ($i = 0, $j = 0, $ld = strlen($data), $lk = strlen($key); $i < $ld; ++$i, ++$j)
 		{
-			if ($j >= $keylen)
+			if ($j >= $lk)
 			{
 				$j = 0;
 			}
 
-			$temp = ord($data[$i]) - ord($keyhash[$j]);
+			$temp = ord($data[$i]) - ord($key[$j]);
 
 			if ($temp < 0)
 			{
-				$temp = $temp + 256;
+				$temp += 256;
 			}
 
 			$str .= chr($temp);
@@ -375,13 +394,13 @@
 	/**
 	 * Set the Mcrypt Cipher
 	 *
-	 * @access	public
-	 * @param	constant
-	 * @return	string
+	 * @param	int
+	 * @return	CI_Encrypt
 	 */
-	function set_cipher($cipher)
+	public function set_cipher($cipher)
 	{
 		$this->_mcrypt_cipher = $cipher;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -389,13 +408,13 @@
 	/**
 	 * Set the Mcrypt Mode
 	 *
-	 * @access	public
-	 * @param	constant
-	 * @return	string
+	 * @param	int
+	 * @return	CI_Encrypt
 	 */
-	function set_mode($mode)
+	public function set_mode($mode)
 	{
 		$this->_mcrypt_mode = $mode;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -403,14 +422,13 @@
 	/**
 	 * Get Mcrypt cipher Value
 	 *
-	 * @access	private
-	 * @return	string
+	 * @return	int
 	 */
-	function _get_cipher()
+	protected function _get_cipher()
 	{
-		if ($this->_mcrypt_cipher == '')
+		if ($this->_mcrypt_cipher === NULL)
 		{
-			$this->_mcrypt_cipher = MCRYPT_RIJNDAEL_256;
+			return $this->_mcrypt_cipher = MCRYPT_RIJNDAEL_256;
 		}
 
 		return $this->_mcrypt_cipher;
@@ -421,14 +439,13 @@
 	/**
 	 * Get Mcrypt Mode Value
 	 *
-	 * @access	private
-	 * @return	string
+	 * @return	int
 	 */
-	function _get_mode()
+	protected function _get_mode()
 	{
-		if ($this->_mcrypt_mode == '')
+		if ($this->_mcrypt_mode === NULL)
 		{
-			$this->_mcrypt_mode = MCRYPT_MODE_CBC;
+			return $this->_mcrypt_mode = MCRYPT_MODE_CBC;
 		}
 
 		return $this->_mcrypt_mode;
@@ -439,13 +456,12 @@
 	/**
 	 * Set the Hash type
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	string
+	 * @return	void
 	 */
-	function set_hash($type = 'sha1')
+	public function set_hash($type = 'sha1')
 	{
-		$this->_hash_type = ($type != 'sha1' AND $type != 'md5') ? 'sha1' : $type;
+		$this->_hash_type = in_array($type, hash_algos()) ? $type : 'sha1';
 	}
 
 	// --------------------------------------------------------------------
@@ -453,48 +469,12 @@
 	/**
 	 * Hash encode a string
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function hash($str)
+	public function hash($str)
 	{
-		return ($this->_hash_type == 'sha1') ? $this->sha1($str) : md5($str);
+		return hash($this->_hash_type, $str);
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Generate an SHA1 Hash
-	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
-	 */
-	function sha1($str)
-	{
-		if ( ! function_exists('sha1'))
-		{
-			if ( ! function_exists('mhash'))
-			{
-				require_once(BASEPATH.'libraries/Sha1.php');
-				$SH = new CI_SHA;
-				return $SH->generate($str);
 			}
-			else
-			{
-				return bin2hex(mhash(MHASH_SHA1, $str));
-			}
-		}
-		else
-		{
-			return sha1($str);
-		}
-	}
-
-}
-
-// END CI_Encrypt class
-
-/* End of file Encrypt.php */
-/* Location: ./system/libraries/Encrypt.php */
Only in opensourcepos/system/libraries: Encryption.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Form_validation.php opensourcepos/system/libraries/Form_validation.php
--- pos-prod/system/libraries/Form_validation.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Form_validation.php	2016-05-23 15:32:31.945838793 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Form Validation Class
@@ -21,41 +43,110 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Validation
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/form_validation.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/form_validation.html
  */
 class CI_Form_validation {
 
+	/**
+	 * Reference to the CodeIgniter instance
+	 *
+	 * @var object
+	 */
 	protected $CI;
+
+	/**
+	 * Validation data for the current form submission
+	 *
+	 * @var array
+	 */
 	protected $_field_data			= array();
+
+	/**
+	 * Validation rules for the current form
+	 *
+	 * @var array
+	 */
 	protected $_config_rules		= array();
+
+	/**
+	 * Array of validation errors
+	 *
+	 * @var array
+	 */
 	protected $_error_array			= array();
+
+	/**
+	 * Array of custom error messages
+	 *
+	 * @var array
+	 */
 	protected $_error_messages		= array();
+
+	/**
+	 * Start tag for error wrapping
+	 *
+	 * @var string
+	 */
 	protected $_error_prefix		= '<p>';
+
+	/**
+	 * End tag for error wrapping
+	 *
+	 * @var string
+	 */
 	protected $_error_suffix		= '</p>';
+
+	/**
+	 * Custom error message
+	 *
+	 * @var string
+	 */
 	protected $error_string			= '';
+
+	/**
+	 * Whether the form data has been validated as safe
+	 *
+	 * @var bool
+	 */
 	protected $_safe_form_data		= FALSE;
 
 	/**
-	 * Constructor
+	 * Custom data to validate
+	 *
+	 * @var array
+	 */
+	public $validation_data	= array();
+
+	/**
+	 * Initialize Form_Validation class
+	 *
+	 * @param	array	$rules
+	 * @return	void
 	 */
 	public function __construct($rules = array())
 	{
 		$this->CI =& get_instance();
 
+		// applies delimiters set in config file.
+		if (isset($rules['error_prefix']))
+		{
+			$this->_error_prefix = $rules['error_prefix'];
+			unset($rules['error_prefix']);
+		}
+		if (isset($rules['error_suffix']))
+		{
+			$this->_error_suffix = $rules['error_suffix'];
+			unset($rules['error_suffix']);
+		}
+
 		// Validation rules can be stored in a config file.
 		$this->_config_rules = $rules;
 
 		// Automatically load the form helper
 		$this->CI->load->helper('form');
 
-		// Set the character encoding in MB.
-		if (function_exists('mb_internal_encoding'))
-		{
-			mb_internal_encoding($this->CI->config->item('charset'));
-		}
-
-		log_message('debug', "Form Validation Class Initialized");
+		log_message('info', 'Form Validation Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -64,39 +155,46 @@
 	 * Set Rules
 	 *
 	 * This function takes an array of field names and validation
-	 * rules as input, validates the info, and stores it
+	 * rules as input, any custom error messages, validates the info,
+	 * and stores it
 	 *
-	 * @access	public
-	 * @param	mixed
-	 * @param	string
-	 * @return	void
+	 * @param	mixed	$field
+	 * @param	string	$label
+	 * @param	mixed	$rules
+	 * @param	array	$errors
+	 * @return	CI_Form_validation
 	 */
-	public function set_rules($field, $label = '', $rules = '')
+	public function set_rules($field, $label = '', $rules = array(), $errors = array())
 	{
 		// No reason to set rules if we have no POST data
-		if (count($_POST) == 0)
+		// or a validation array has not been specified
+		if ($this->CI->input->method() !== 'post' && empty($this->validation_data))
 		{
 			return $this;
 		}
 
-		// If an array was passed via the first parameter instead of indidual string
+		// If an array was passed via the first parameter instead of individual string
 		// values we cycle through it and recursively call this function.
 		if (is_array($field))
 		{
 			foreach ($field as $row)
 			{
 				// Houston, we have a problem...
-				if ( ! isset($row['field']) OR ! isset($row['rules']))
+				if ( ! isset($row['field'], $row['rules']))
 				{
 					continue;
 				}
 
 				// If the field label wasn't passed we use the field name
-				$label = ( ! isset($row['label'])) ? $row['field'] : $row['label'];
+				$label = isset($row['label']) ? $row['label'] : $row['field'];
+
+				// Add the custom error message array
+				$errors = (isset($row['errors']) && is_array($row['errors'])) ? $row['errors'] : array();
 
 				// Here we go!
-				$this->set_rules($row['field'], $label, $row['rules']);
+				$this->set_rules($row['field'], $label, $row['rules'], $errors);
 			}
+
 			return $this;
 		}
 
@@ -100,39 +198,40 @@
 			return $this;
 		}
 
-		// No fields? Nothing to do...
-		if ( ! is_string($field) OR  ! is_string($rules) OR $field == '')
+		// No fields or no rules? Nothing to do...
+		if ( ! is_string($field) OR $field === '' OR empty($rules))
+		{
+			return $this;
+		}
+		elseif ( ! is_array($rules))
+		{
+			// BC: Convert pipe-separated rules string to an array
+			if ( ! is_string($rules))
 		{
 			return $this;
 		}
 
+			$rules = preg_split('/\|(?![^\[]*\])/', $rules);
+		}
+
 		// If the field label wasn't passed we use the field name
-		$label = ($label == '') ? $field : $label;
+		$label = ($label === '') ? $field : $label;
 
-		// Is the field name an array?  We test for the existence of a bracket "[" in
-		// the field name to determine this.  If it is an array, we break it apart
+		$indexes = array();
+
+		// Is the field name an array? If it is an array, we break it apart
 		// into its components so that we can fetch the corresponding POST data later
-		if (strpos($field, '[') !== FALSE AND preg_match_all('/\[(.*?)\]/', $field, $matches))
+		if (($is_array = (bool) preg_match_all('/\[(.*?)\]/', $field, $matches)) === TRUE)
 		{
-			// Note: Due to a bug in current() that affects some versions
-			// of PHP we can not pass function call directly into it
-			$x = explode('[', $field);
-			$indexes[] = current($x);
+			sscanf($field, '%[^[][', $indexes[0]);
 
-			for ($i = 0; $i < count($matches['0']); $i++)
+			for ($i = 0, $c = count($matches[0]); $i < $c; $i++)
 			{
-				if ($matches['1'][$i] != '')
+				if ($matches[1][$i] !== '')
 				{
-					$indexes[] = $matches['1'][$i];
+					$indexes[] = $matches[1][$i];
 				}
 			}
-
-			$is_array = TRUE;
-		}
-		else
-		{
-			$indexes	= array();
-			$is_array	= FALSE;
 		}
 
 		// Build our master array
@@ -140,6 +239,7 @@
 			'field'				=> $field,
 			'label'				=> $label,
 			'rules'				=> $rules,
+			'errors'	=> $errors,
 			'is_array'			=> $is_array,
 			'keys'				=> $indexes,
 			'postdata'			=> NULL,
@@ -152,15 +252,39 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * By default, form validation uses the $_POST array to validate
+	 *
+	 * If an array is set through this method, then this array will
+	 * be used instead of the $_POST array
+	 *
+	 * Note that if you are validating multiple arrays, then the
+	 * reset_validation() function should be called after validating
+	 * each array due to the limitations of CI's singleton
+	 *
+	 * @param	array	$data
+	 * @return	CI_Form_validation
+	 */
+	public function set_data(array $data)
+	{
+		if ( ! empty($data))
+		{
+			$this->validation_data = $data;
+		}
+
+		return $this;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Set Error Message
 	 *
-	 * Lets users set their own error messages on the fly.  Note:  The key
-	 * name has to match the  function name that it corresponds to.
+	 * Lets users set their own error messages on the fly. Note:
+	 * The key name has to match the function name that it corresponds to.
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	array
 	 * @param	string
-	 * @return	string
+	 * @return	CI_Form_validation
 	 */
 	public function set_message($lang, $val = '')
 	{
@@ -181,10 +304,9 @@
 	 *
 	 * Permits a prefix/suffix to be added to each error message
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
-	 * @return	void
+	 * @return	CI_Form_validation
 	 */
 	public function set_error_delimiters($prefix = '<p>', $suffix = '</p>')
 	{
@@ -201,23 +322,24 @@
 	 *
 	 * Gets the error message associated with a particular field
 	 *
-	 * @access	public
-	 * @param	string	the field name
-	 * @return	void
+	 * @param	string	$field	Field name
+	 * @param	string	$prefix	HTML start tag
+	 * @param 	string	$suffix	HTML end tag
+	 * @return	string
 	 */
-	public function error($field = '', $prefix = '', $suffix = '')
+	public function error($field, $prefix = '', $suffix = '')
 	{
-		if ( ! isset($this->_field_data[$field]['error']) OR $this->_field_data[$field]['error'] == '')
+		if (empty($this->_field_data[$field]['error']))
 		{
 			return '';
 		}
 
-		if ($prefix == '')
+		if ($prefix === '')
 		{
 			$prefix = $this->_error_prefix;
 		}
 
-		if ($suffix == '')
+		if ($suffix === '')
 		{
 			$suffix = $this->_error_suffix;
 		}
@@ -228,29 +350,42 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * Get Array of Error Messages
+	 *
+	 * Returns the error messages as an array
+	 *
+	 * @return	array
+	 */
+	public function error_array()
+	{
+		return $this->_error_array;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Error String
 	 *
 	 * Returns the error messages as a string, wrapped in the error delimiters
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
-	 * @return	str
+	 * @return	string
 	 */
 	public function error_string($prefix = '', $suffix = '')
 	{
-		// No errrors, validation passes!
+		// No errors, validation passes!
 		if (count($this->_error_array) === 0)
 		{
 			return '';
 		}
 
-		if ($prefix == '')
+		if ($prefix === '')
 		{
 			$prefix = $this->_error_prefix;
 		}
 
-		if ($suffix == '')
+		if ($suffix === '')
 		{
 			$suffix = $this->_error_suffix;
 		}
@@ -259,7 +394,7 @@
 		$str = '';
 		foreach ($this->_error_array as $val)
 		{
-			if ($val != '')
+			if ($val !== '')
 			{
 				$str .= $prefix.$val.$suffix."\n";
 			}
@@ -275,43 +410,38 @@
 	 *
 	 * This function does all the work.
 	 *
-	 * @access	public
+	 * @param	string	$group
 	 * @return	bool
 	 */
 	public function run($group = '')
 	{
-		// Do we even have any data to process?  Mm?
-		if (count($_POST) == 0)
-		{
-			return FALSE;
-		}
+		$validation_array = empty($this->validation_data)
+			? $_POST
+			: $this->validation_data;
 
 		// Does the _field_data array containing the validation rules exist?
 		// If not, we look to see if they were assigned via a config file
-		if (count($this->_field_data) == 0)
+		if (count($this->_field_data) === 0)
 		{
 			// No validation rules?  We're done...
-			if (count($this->_config_rules) == 0)
+			if (count($this->_config_rules) === 0)
 			{
 				return FALSE;
 			}
 
-			// Is there a validation rule for the particular URI being accessed?
-			$uri = ($group == '') ? trim($this->CI->uri->ruri_string(), '/') : $group;
-
-			if ($uri != '' AND isset($this->_config_rules[$uri]))
+			if (empty($group))
 			{
-				$this->set_rules($this->_config_rules[$uri]);
-			}
-			else
-			{
-				$this->set_rules($this->_config_rules);
+				// Is there a validation rule for the particular URI being accessed?
+				$group = trim($this->CI->uri->ruri_string(), '/');
+				isset($this->_config_rules[$group]) OR $group = $this->CI->router->class.'/'.$this->CI->router->method;
 			}
 
-			// We're we able to set the rules correctly?
-			if (count($this->_field_data) == 0)
+			$this->set_rules(isset($this->_config_rules[$group]) ? $this->_config_rules[$group] : $this->_config_rules);
+
+			// Were we able to set the rules correctly?
+			if (count($this->_field_data) === 0)
 			{
-				log_message('debug', "Unable to find validation rules");
+				log_message('debug', 'Unable to find validation rules');
 				return FALSE;
 			}
 		}
@@ -319,26 +449,33 @@
 		// Load the language file containing error messages
 		$this->CI->lang->load('form_validation');
 
-		// Cycle through the rules for each field, match the
-		// corresponding $_POST item and test for errors
+		// Cycle through the rules for each field and match the corresponding $validation_data item
 		foreach ($this->_field_data as $field => $row)
 		{
-			// Fetch the data from the corresponding $_POST array and cache it in the _field_data array.
+			// Fetch the data from the validation_data array item and cache it in the _field_data array.
 			// Depending on whether the field name is an array or a string will determine where we get it from.
-
-			if ($row['is_array'] == TRUE)
+			if ($row['is_array'] === TRUE)
 			{
-				$this->_field_data[$field]['postdata'] = $this->_reduce_array($_POST, $row['keys']);
+				$this->_field_data[$field]['postdata'] = $this->_reduce_array($validation_array, $row['keys']);
 			}
-			else
-			{
-				if (isset($_POST[$field]) AND $_POST[$field] != "")
+			elseif (isset($validation_array[$field]))
 				{
-					$this->_field_data[$field]['postdata'] = $_POST[$field];
+				$this->_field_data[$field]['postdata'] = $validation_array[$field];
 				}
 			}
 
-			$this->_execute($row, explode('|', $row['rules']), $this->_field_data[$field]['postdata']);
+		// Execute validation rules
+		// Note: A second foreach (for now) is required in order to avoid false-positives
+		//	 for rules like 'matches', which correlate to other validation fields.
+		foreach ($this->_field_data as $field => $row)
+		{
+			// Don't try to validate if we have no rules set
+			if (empty($row['rules']))
+			{
+				continue;
+			}
+
+			$this->_execute($row, $row['rules'], $this->_field_data[$field]['postdata']);
 		}
 
 		// Did we end up with any errors?
@@ -352,14 +488,7 @@
 		// Now we need to re-set the POST data with the new, processed data
 		$this->_reset_post_array();
 
-		// No errors, validation passes!
-		if ($total_errors == 0)
-		{
-			return TRUE;
-		}
-
-		// Validation fails
-		return FALSE;
+		return ($total_errors === 0);
 	}
 
 	// --------------------------------------------------------------------
@@ -367,34 +496,20 @@
 	/**
 	 * Traverse a multidimensional $_POST array index until the data is found
 	 *
-	 * @access	private
 	 * @param	array
 	 * @param	array
-	 * @param	integer
+	 * @param	int
 	 * @return	mixed
 	 */
 	protected function _reduce_array($array, $keys, $i = 0)
 	{
-		if (is_array($array))
-		{
-			if (isset($keys[$i]))
-			{
-				if (isset($array[$keys[$i]]))
-				{
-					$array = $this->_reduce_array($array[$keys[$i]], $keys, ($i+1));
-				}
-				else
+		if (is_array($array) && isset($keys[$i]))
 				{
-					return NULL;
-				}
-			}
-			else
-			{
-				return $array;
-			}
+			return isset($array[$keys[$i]]) ? $this->_reduce_array($array[$keys[$i]], $keys, ($i+1)) : NULL;
 		}
 
-		return $array;
+		// NULL must be returned for empty fields
+		return ($array === '') ? NULL : $array;
 	}
 
 	// --------------------------------------------------------------------
@@ -402,20 +517,19 @@
 	/**
 	 * Re-populate the _POST array with our finalized and processed data
 	 *
-	 * @access	private
-	 * @return	null
+	 * @return	void
 	 */
 	protected function _reset_post_array()
 	{
 		foreach ($this->_field_data as $field => $row)
 		{
-			if ( ! is_null($row['postdata']))
+			if ($row['postdata'] !== NULL)
 			{
-				if ($row['is_array'] == FALSE)
+				if ($row['is_array'] === FALSE)
 				{
 					if (isset($_POST[$row['field']]))
 					{
-						$_POST[$row['field']] = $this->prep_for_form($row['postdata']);
+						$_POST[$row['field']] = $row['postdata'];
 					}
 				}
 				else
@@ -424,7 +538,7 @@
 					$post_ref =& $_POST;
 
 					// before we assign values, make a reference to the right POST key
-					if (count($row['keys']) == 1)
+					if (count($row['keys']) === 1)
 					{
 						$post_ref =& $post_ref[current($row['keys'])];
 					}
@@ -441,14 +555,14 @@
 						$array = array();
 						foreach ($row['postdata'] as $k => $v)
 						{
-							$array[$k] = $this->prep_for_form($v);
+							$array[$k] = $v;
 						}
 
 						$post_ref = $array;
 					}
 					else
 					{
-						$post_ref = $this->prep_for_form($row['postdata']);
+						$post_ref = $row['postdata'];
 					}
 				}
 			}
@@ -460,11 +574,10 @@
 	/**
 	 * Executes the Validation routines
 	 *
-	 * @access	private
 	 * @param	array
 	 * @param	array
 	 * @param	mixed
-	 * @param	integer
+	 * @param	int
 	 * @return	mixed
 	 */
 	protected function _execute($row, $rules, $postdata = NULL, $cycles = 0)
@@ -474,55 +587,60 @@
 		{
 			foreach ($postdata as $key => $val)
 			{
-				$this->_execute($row, $rules, $val, $cycles);
-				$cycles++;
+				$this->_execute($row, $rules, $val, $key);
 			}
 
 			return;
 		}
 
-		// --------------------------------------------------------------------
-
 		// If the field is blank, but NOT required, no further tests are necessary
 		$callback = FALSE;
-		if ( ! in_array('required', $rules) AND is_null($postdata))
+		if ( ! in_array('required', $rules) && ($postdata === NULL OR $postdata === ''))
 		{
 			// Before we bail out, does the rule contain a callback?
-			if (preg_match("/(callback_\w+(\[.*?\])?)/", implode(' ', $rules), $match))
+			foreach ($rules as &$rule)
+			{
+				if (is_string($rule))
+				{
+					if (strncmp($rule, 'callback_', 9) === 0)
 			{
 				$callback = TRUE;
-				$rules = (array('1' => $match[1]));
+						$rules = array(1 => $rule);
+						break;
 			}
-			else
+				}
+				elseif (is_callable($rule))
 			{
-				return;
+					$callback = TRUE;
+					$rules = array(1 => $rule);
+					break;
+				}
+				elseif (is_array($rule) && isset($rule[0], $rule[1]) && is_callable($rule[1]))
+				{
+					$callback = TRUE;
+					$rules = array(array($rule[0], $rule[1]));
+					break;
 			}
 		}
 
-		// --------------------------------------------------------------------
+			if ( ! $callback)
+			{
+				return;
+			}
+		}
 
 		// Isset Test. Typically this rule will only apply to checkboxes.
-		if (is_null($postdata) AND $callback == FALSE)
+		if (($postdata === NULL OR $postdata === '') && ! $callback)
 		{
 			if (in_array('isset', $rules, TRUE) OR in_array('required', $rules))
 			{
 				// Set the message type
-				$type = (in_array('required', $rules)) ? 'required' : 'isset';
+				$type = in_array('required', $rules) ? 'required' : 'isset';
 
-				if ( ! isset($this->_error_messages[$type]))
-				{
-					if (FALSE === ($line = $this->CI->lang->line($type)))
-					{
-						$line = 'The field was not set';
-					}
-				}
-				else
-				{
-					$line = $this->_error_messages[$type];
-				}
+				$line = $this->_get_error_message($type, $row['field']);
 
 				// Build the error message
-				$message = sprintf($line, $this->_translate_fieldname($row['label']));
+				$message = $this->_build_error_msg($line, $this->_translate_fieldname($row['label']));
 
 				// Save the error message
 				$this->_field_data[$row['field']]['error'] = $message;
@@ -545,7 +663,7 @@
 
 			// We set the $postdata variable with the current data in our master array so that
 			// each cycle of the loop is dealing with the processed data from the last cycle
-			if ($row['is_array'] == TRUE AND is_array($this->_field_data[$row['field']]['postdata']))
+			if ($row['is_array'] === TRUE && is_array($this->_field_data[$row['field']]['postdata']))
 			{
 				// We shouldn't need this safety, but just in case there isn't an array index
 				// associated with this cycle we'll bail out
@@ -559,118 +677,149 @@
 			}
 			else
 			{
-				$postdata = $this->_field_data[$row['field']]['postdata'];
+				// If we get an array field, but it's not expected - then it is most likely
+				// somebody messing with the form on the client side, so we'll just consider
+				// it an empty field
+				$postdata = is_array($this->_field_data[$row['field']]['postdata'])
+					? NULL
+					: $this->_field_data[$row['field']]['postdata'];
 			}
 
-			// --------------------------------------------------------------------
-
 			// Is the rule a callback?
-			$callback = FALSE;
-			if (substr($rule, 0, 9) == 'callback_')
+			$callback = $callable = FALSE;
+			if (is_string($rule))
+			{
+				if (strpos($rule, 'callback_') === 0)
 			{
 				$rule = substr($rule, 9);
 				$callback = TRUE;
 			}
+			}
+			elseif (is_callable($rule))
+			{
+				$callable = TRUE;
+			}
+			elseif (is_array($rule) && isset($rule[0], $rule[1]) && is_callable($rule[1]))
+			{
+				// We have a "named" callable, so save the name
+				$callable = $rule[0];
+				$rule = $rule[1];
+			}
 
 			// Strip the parameter (if exists) from the rule
 			// Rules can contain a parameter: max_length[5]
 			$param = FALSE;
-			if (preg_match("/(.*?)\[(.*)\]/", $rule, $match))
+			if ( ! $callable && preg_match('/(.*?)\[(.*)\]/', $rule, $match))
 			{
 				$rule	= $match[1];
 				$param	= $match[2];
 			}
 
 			// Call the function that corresponds to the rule
-			if ($callback === TRUE)
+			if ($callback OR $callable !== FALSE)
+			{
+				if ($callback)
 			{
 				if ( ! method_exists($this->CI, $rule))
 				{
-					continue;
+						log_message('debug', 'Unable to find callback validation rule: '.$rule);
+						$result = FALSE;
 				}
-
+					else
+					{
 				// Run the function and grab the result
 				$result = $this->CI->$rule($postdata, $param);
+					}
+				}
+				else
+				{
+					$result = is_array($rule)
+						? $rule[0]->{$rule[1]}($postdata)
+						: $rule($postdata);
+
+					// Is $callable set to a rule name?
+					if ($callable !== FALSE)
+					{
+						$rule = $callable;
+					}
+				}
 
 				// Re-assign the result to the master data array
-				if ($_in_array == TRUE)
+				if ($_in_array === TRUE)
 				{
-					$this->_field_data[$row['field']]['postdata'][$cycles] = (is_bool($result)) ? $postdata : $result;
+					$this->_field_data[$row['field']]['postdata'][$cycles] = is_bool($result) ? $postdata : $result;
 				}
 				else
 				{
-					$this->_field_data[$row['field']]['postdata'] = (is_bool($result)) ? $postdata : $result;
+					$this->_field_data[$row['field']]['postdata'] = is_bool($result) ? $postdata : $result;
 				}
 
 				// If the field isn't required and we just processed a callback we'll move on...
-				if ( ! in_array('required', $rules, TRUE) AND $result !== FALSE)
+				if ( ! in_array('required', $rules, TRUE) && $result !== FALSE)
 				{
 					continue;
 				}
 			}
-			else
-			{
-				if ( ! method_exists($this, $rule))
+			elseif ( ! method_exists($this, $rule))
 				{
 					// If our own wrapper function doesn't exist we see if a native PHP function does.
 					// Users can use any native PHP function call that has one param.
 					if (function_exists($rule))
 					{
-						$result = $rule($postdata);
+					// Native PHP functions issue warnings if you pass them more parameters than they use
+					$result = ($param !== FALSE) ? $rule($postdata, $param) : $rule($postdata);
 
-						if ($_in_array == TRUE)
+					if ($_in_array === TRUE)
 						{
-							$this->_field_data[$row['field']]['postdata'][$cycles] = (is_bool($result)) ? $postdata : $result;
+						$this->_field_data[$row['field']]['postdata'][$cycles] = is_bool($result) ? $postdata : $result;
 						}
 						else
 						{
-							$this->_field_data[$row['field']]['postdata'] = (is_bool($result)) ? $postdata : $result;
+						$this->_field_data[$row['field']]['postdata'] = is_bool($result) ? $postdata : $result;
 						}
 					}
 					else
 					{
-						log_message('debug', "Unable to find validation rule: ".$rule);
+					log_message('debug', 'Unable to find validation rule: '.$rule);
+					$result = FALSE;
 					}
-
-					continue;
 				}
-
+			else
+			{
 				$result = $this->$rule($postdata, $param);
 
-				if ($_in_array == TRUE)
+				if ($_in_array === TRUE)
 				{
-					$this->_field_data[$row['field']]['postdata'][$cycles] = (is_bool($result)) ? $postdata : $result;
+					$this->_field_data[$row['field']]['postdata'][$cycles] = is_bool($result) ? $postdata : $result;
 				}
 				else
 				{
-					$this->_field_data[$row['field']]['postdata'] = (is_bool($result)) ? $postdata : $result;
+					$this->_field_data[$row['field']]['postdata'] = is_bool($result) ? $postdata : $result;
 				}
 			}
 
 			// Did the rule test negatively?  If so, grab the error.
 			if ($result === FALSE)
 			{
-				if ( ! isset($this->_error_messages[$rule]))
-				{
-					if (FALSE === ($line = $this->CI->lang->line($rule)))
+				// Callable rules might not have named error messages
+				if ( ! is_string($rule))
 					{
-						$line = 'Unable to access an error message corresponding to your field name.';
-					}
+					$line = $this->CI->lang->line('form_validation_error_message_not_set').'(Anonymous function)';
 				}
 				else
 				{
-					$line = $this->_error_messages[$rule];
+					$line = $this->_get_error_message($rule, $row['field']);
 				}
 
 				// Is the parameter we are inserting into the error message the name
 				// of another field?  If so we need to grab its "field label"
-				if (isset($this->_field_data[$param]) AND isset($this->_field_data[$param]['label']))
+				if (isset($this->_field_data[$param], $this->_field_data[$param]['label']))
 				{
 					$param = $this->_translate_fieldname($this->_field_data[$param]['label']);
 				}
 
 				// Build the error message
-				$message = sprintf($line, $this->_translate_fieldname($row['label']), $param);
+				$message = $this->_build_error_msg($line, $this->_translate_fieldname($row['label']), $param);
 
 				// Save the error message
 				$this->_field_data[$row['field']]['error'] = $message;
@@ -688,29 +837,91 @@
 	// --------------------------------------------------------------------
 
 	/**
+	 * Get the error message for the rule
+	 *
+	 * @param 	string $rule 	The rule name
+	 * @param 	string $field	The field name
+	 * @return 	string
+	 */
+	protected function _get_error_message($rule, $field)
+	{
+		// check if a custom message is defined through validation config row.
+		if (isset($this->_field_data[$field]['errors'][$rule]))
+		{
+			return $this->_field_data[$field]['errors'][$rule];
+		}
+		// check if a custom message has been set using the set_message() function
+		elseif (isset($this->_error_messages[$rule]))
+		{
+			return $this->_error_messages[$rule];
+		}
+		elseif (FALSE !== ($line = $this->CI->lang->line('form_validation_'.$rule)))
+		{
+			return $line;
+		}
+		// DEPRECATED support for non-prefixed keys, lang file again
+		elseif (FALSE !== ($line = $this->CI->lang->line($rule, FALSE)))
+		{
+			return $line;
+		}
+
+		return $this->CI->lang->line('form_validation_error_message_not_set').'('.$rule.')';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Translate a field name
 	 *
-	 * @access	private
 	 * @param	string	the field name
 	 * @return	string
 	 */
 	protected function _translate_fieldname($fieldname)
 	{
-		// Do we need to translate the field name?
-		// We look for the prefix lang: to determine this
-		if (substr($fieldname, 0, 5) == 'lang:')
+		// Do we need to translate the field name? We look for the prefix 'lang:' to determine this
+		// If we find one, but there's no translation for the string - just return it
+		if (sscanf($fieldname, 'lang:%s', $line) === 1 && FALSE === ($fieldname = $this->CI->lang->line($line, FALSE)))
 		{
-			// Grab the variable
-			$line = substr($fieldname, 5);
+			return $line;
+		}
+
+		return $fieldname;
+	}
 
-			// Were we able to translate the field name?  If not we use $line
-			if (FALSE === ($fieldname = $this->CI->lang->line($line)))
+	// --------------------------------------------------------------------
+
+	/**
+	 * Build an error message using the field and param.
+	 *
+	 * @param	string	The error message line
+	 * @param	string	A field's human name
+	 * @param	mixed	A rule's optional parameter
+	 * @return	string
+	 */
+	protected function _build_error_msg($line, $field = '', $param = '')
 			{
-				return $line;
+		// Check for %s in the string for legacy support.
+		if (strpos($line, '%s') !== FALSE)
+		{
+			return sprintf($line, $field, $param);
 			}
+
+		return str_replace(array('{field}', '{param}'), array($field, $param), $line);
 		}
 
-		return $fieldname;
+	// --------------------------------------------------------------------
+
+	/**
+	 * Checks if the rule is present within the validator
+	 *
+	 * Permits you to check if a rule is present within the validator
+	 *
+	 * @param	string	the field name
+	 * @return	bool
+	 */
+	public function has_rule($field)
+	{
+		return isset($this->_field_data[$field]);
 	}
 
 	// --------------------------------------------------------------------
@@ -721,14 +932,13 @@
 	 * Permits you to repopulate a form field with the value it was submitted
 	 * with, or, if that value doesn't exist, with the default
 	 *
-	 * @access	public
 	 * @param	string	the field name
 	 * @param	string
-	 * @return	void
+	 * @return	string
 	 */
 	public function set_value($field = '', $default = '')
 	{
-		if ( ! isset($this->_field_data[$field]))
+		if ( ! isset($this->_field_data[$field], $this->_field_data[$field]['postdata']))
 		{
 			return $default;
 		}
@@ -751,37 +961,36 @@
 	 * Enables pull-down lists to be set to the value the user
 	 * selected in the event of an error
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
+	 * @param	bool
 	 * @return	string
 	 */
 	public function set_select($field = '', $value = '', $default = FALSE)
 	{
-		if ( ! isset($this->_field_data[$field]) OR ! isset($this->_field_data[$field]['postdata']))
-		{
-			if ($default === TRUE AND count($this->_field_data) === 0)
+		if ( ! isset($this->_field_data[$field], $this->_field_data[$field]['postdata']))
 			{
-				return ' selected="selected"';
-			}
-			return '';
+			return ($default === TRUE && count($this->_field_data) === 0) ? ' selected="selected"' : '';
 		}
 
 		$field = $this->_field_data[$field]['postdata'];
-
+		$value = (string) $value;
 		if (is_array($field))
 		{
-			if ( ! in_array($value, $field))
+			// Note: in_array('', array(0)) returns TRUE, do not use it
+			foreach ($field as &$v)
 			{
-				return '';
+				if ($value === $v)
+				{
+					return ' selected="selected"';
 			}
 		}
-		else
-		{
-			if (($field == '' OR $value == '') OR ($field != $value))
-			{
+
 				return '';
 			}
+		elseif (($field === '' OR $value === '') OR ($field !== $value))
+		{
+			return '';
 		}
 
 		return ' selected="selected"';
@@ -795,37 +1004,36 @@
 	 * Enables radio buttons to be set to the value the user
 	 * selected in the event of an error
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
+	 * @param	bool
 	 * @return	string
 	 */
 	public function set_radio($field = '', $value = '', $default = FALSE)
 	{
-		if ( ! isset($this->_field_data[$field]) OR ! isset($this->_field_data[$field]['postdata']))
-		{
-			if ($default === TRUE AND count($this->_field_data) === 0)
+		if ( ! isset($this->_field_data[$field], $this->_field_data[$field]['postdata']))
 			{
-				return ' checked="checked"';
-			}
-			return '';
+			return ($default === TRUE && count($this->_field_data) === 0) ? ' checked="checked"' : '';
 		}
 
 		$field = $this->_field_data[$field]['postdata'];
-
+		$value = (string) $value;
 		if (is_array($field))
 		{
-			if ( ! in_array($value, $field))
+			// Note: in_array('', array(0)) returns TRUE, do not use it
+			foreach ($field as &$v)
 			{
-				return '';
+				if ($value === $v)
+				{
+					return ' checked="checked"';
 			}
 		}
-		else
-		{
-			if (($field == '' OR $value == '') OR ($field != $value))
-			{
+
 				return '';
 			}
+		elseif (($field === '' OR $value === '') OR ($field !== $value))
+		{
+			return '';
 		}
 
 		return ' checked="checked"';
@@ -839,40 +1047,15 @@
 	 * Enables checkboxes to be set to the value the user
 	 * selected in the event of an error
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
+	 * @param	bool
 	 * @return	string
 	 */
 	public function set_checkbox($field = '', $value = '', $default = FALSE)
 	{
-		if ( ! isset($this->_field_data[$field]) OR ! isset($this->_field_data[$field]['postdata']))
-		{
-			if ($default === TRUE AND count($this->_field_data) === 0)
-			{
-				return ' checked="checked"';
-			}
-			return '';
-		}
-
-		$field = $this->_field_data[$field]['postdata'];
-
-		if (is_array($field))
-		{
-			if ( ! in_array($value, $field))
-			{
-				return '';
-			}
-		}
-		else
-		{
-			if (($field == '' OR $value == '') OR ($field != $value))
-			{
-				return '';
-			}
-		}
-
-		return ' checked="checked"';
+		// Logic is exactly the same as for radio fields
+		return $this->set_radio($field, $value, $default);
 	}
 
 	// --------------------------------------------------------------------
@@ -880,20 +1063,12 @@
 	/**
 	 * Required
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function required($str)
 	{
-		if ( ! is_array($str))
-		{
-			return (trim($str) == '') ? FALSE : TRUE;
-		}
-		else
-		{
-			return ( ! empty($str));
-		}
+		return is_array($str) ? (bool) count($str) : (trim($str) !== '');
 	}
 
 	// --------------------------------------------------------------------
@@ -901,19 +1076,13 @@
 	/**
 	 * Performs a Regular Expression match test.
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	regex
+	 * @param	string	regex
 	 * @return	bool
 	 */
 	public function regex_match($str, $regex)
 	{
-		if ( ! preg_match($regex, $str))
-		{
-			return FALSE;
-		}
-
-		return  TRUE;
+		return (bool) preg_match($regex, $str);
 	}
 
 	// --------------------------------------------------------------------
@@ -921,39 +1090,49 @@
 	/**
 	 * Match one field to another
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	field
+	 * @param	string	$str	string to compare against
+	 * @param	string	$field
 	 * @return	bool
 	 */
 	public function matches($str, $field)
 	{
-		if ( ! isset($_POST[$field]))
-		{
-			return FALSE;
+		return isset($this->_field_data[$field], $this->_field_data[$field]['postdata'])
+			? ($str === $this->_field_data[$field]['postdata'])
+			: FALSE;
 		}
 
-		$field = $_POST[$field];
+	// --------------------------------------------------------------------
 
-		return ($str !== $field) ? FALSE : TRUE;
+	/**
+	 * Differs from another field
+	 *
+	 * @param	string
+	 * @param	string	field
+	 * @return	bool
+	 */
+	public function differs($str, $field)
+	{
+		return ! (isset($this->_field_data[$field]) && $this->_field_data[$field]['postdata'] === $str);
 	}
 	
 	// --------------------------------------------------------------------
 
 	/**
-	 * Match one field to another
+	 * Is Unique
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	field
+	 * Check if the input value doesn't already exist
+	 * in the specified database field.
+	 *
+	 * @param	string	$str
+	 * @param	string	$field
 	 * @return	bool
 	 */
 	public function is_unique($str, $field)
 	{
-		list($table, $field)=explode('.', $field);
-		$query = $this->CI->db->limit(1)->get_where($table, array($field => $str));
-		
-		return $query->num_rows() === 0;
+		sscanf($field, '%[^.].%[^.]', $table, $field);
+		return isset($this->CI->db)
+			? ($this->CI->db->limit(1)->get_where($table, array($field => $str))->num_rows() === 0)
+			: FALSE;
     }
 
 	// --------------------------------------------------------------------
@@ -961,24 +1140,18 @@
 	/**
 	 * Minimum Length
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	value
+	 * @param	string
 	 * @return	bool
 	 */
 	public function min_length($str, $val)
 	{
-		if (preg_match("/[^0-9]/", $val))
+		if ( ! is_numeric($val))
 		{
 			return FALSE;
 		}
 
-		if (function_exists('mb_strlen'))
-		{
-			return (mb_strlen($str) < $val) ? FALSE : TRUE;
-		}
-
-		return (strlen($str) < $val) ? FALSE : TRUE;
+		return ($val <= mb_strlen($str));
 	}
 
 	// --------------------------------------------------------------------
@@ -986,24 +1159,18 @@
 	/**
 	 * Max Length
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	value
+	 * @param	string
 	 * @return	bool
 	 */
 	public function max_length($str, $val)
 	{
-		if (preg_match("/[^0-9]/", $val))
+		if ( ! is_numeric($val))
 		{
 			return FALSE;
 		}
 
-		if (function_exists('mb_strlen'))
-		{
-			return (mb_strlen($str) > $val) ? FALSE : TRUE;
-		}
-
-		return (strlen($str) > $val) ? FALSE : TRUE;
+		return ($val >= mb_strlen($str));
 	}
 
 	// --------------------------------------------------------------------
@@ -1011,24 +1178,68 @@
 	/**
 	 * Exact Length
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	value
+	 * @param	string
 	 * @return	bool
 	 */
 	public function exact_length($str, $val)
 	{
-		if (preg_match("/[^0-9]/", $val))
+		if ( ! is_numeric($val))
 		{
 			return FALSE;
 		}
 
-		if (function_exists('mb_strlen'))
+		return (mb_strlen($str) === (int) $val);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Valid URL
+	 *
+	 * @param	string	$str
+	 * @return	bool
+	 */
+	public function valid_url($str)
+	{
+		if (empty($str))
+		{
+			return FALSE;
+		}
+		elseif (preg_match('/^(?:([^:]*)\:)?\/\/(.+)$/', $str, $matches))
+		{
+			if (empty($matches[2]))
+			{
+				return FALSE;
+			}
+			elseif ( ! in_array($matches[1], array('http', 'https'), TRUE))
+			{
+				return FALSE;
+			}
+
+			$str = $matches[2];
+		}
+
+		// PHP 7 accepts IPv6 addresses within square brackets as hostnames,
+		// but it appears that the PR that came in with https://bugs.php.net/bug.php?id=68039
+		// was never merged into a PHP 5 branch ... https://3v4l.org/8PsSN
+		if (preg_match('/^\[([^\]]+)\]/', $str, $matches) && ! is_php('7') && filter_var($matches[1], FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) !== FALSE)
 		{
-			return (mb_strlen($str) != $val) ? FALSE : TRUE;
+			$str = 'ipv6.host'.substr($str, strlen($matches[1]) + 2);
 		}
 
-		return (strlen($str) != $val) ? FALSE : TRUE;
+		$str = 'http://'.$str;
+
+		// There's a bug affecting PHP 5.2.13, 5.3.2 that considers the
+		// underscore to be a valid hostname character instead of a dash.
+		// Reference: https://bugs.php.net/bug.php?id=51192
+		if (version_compare(PHP_VERSION, '5.2.13', '==') OR version_compare(PHP_VERSION, '5.3.2', '=='))
+		{
+			sscanf($str, 'http://%[^/]', $host);
+			$str = substr_replace($str, strtr($host, array('_' => '-', '-' => '_')), 7, strlen($host));
+		}
+
+		return (filter_var($str, FILTER_VALIDATE_URL) !== FALSE);
 	}
 
 	// --------------------------------------------------------------------
@@ -1036,13 +1247,17 @@
 	/**
 	 * Valid Email
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function valid_email($str)
 	{
-		return ( ! preg_match("/^([a-z0-9\+_\-]+)(\.[a-z0-9\+_\-]+)*@([a-z0-9\-]+\.)+[a-z]{2,6}$/ix", $str)) ? FALSE : TRUE;
+		if (function_exists('idn_to_ascii') && $atpos = strpos($str, '@'))
+		{
+			$str = substr($str, 0, ++$atpos).idn_to_ascii(substr($str, $atpos));
+		}
+
+		return (bool) filter_var($str, FILTER_VALIDATE_EMAIL);
 	}
 
 	// --------------------------------------------------------------------
@@ -1050,7 +1265,6 @@
 	/**
 	 * Valid Emails
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
@@ -1063,7 +1277,7 @@
 
 		foreach (explode(',', $str) as $email)
 		{
-			if (trim($email) != '' && $this->valid_email(trim($email)) === FALSE)
+			if (trim($email) !== '' && $this->valid_email(trim($email)) === FALSE)
 			{
 				return FALSE;
 			}
@@ -1077,10 +1291,9 @@
 	/**
 	 * Validate IP Address
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	string "ipv4" or "ipv6" to validate a specific ip format
-	 * @return	string
+	 * @param	string	'ipv4' or 'ipv6' to validate a specific IP format
+	 * @return	bool
 	 */
 	public function valid_ip($ip, $which = '')
 	{
@@ -1092,13 +1305,12 @@
 	/**
 	 * Alpha
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function alpha($str)
 	{
-		return ( ! preg_match("/^([a-z])+$/i", $str)) ? FALSE : TRUE;
+		return ctype_alpha($str);
 	}
 
 	// --------------------------------------------------------------------
@@ -1106,56 +1318,52 @@
 	/**
 	 * Alpha-numeric
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function alpha_numeric($str)
 	{
-		return ( ! preg_match("/^([a-z0-9])+$/i", $str)) ? FALSE : TRUE;
+		return ctype_alnum((string) $str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Alpha-numeric with underscores and dashes
+	 * Alpha-numeric w/ spaces
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	public function alpha_dash($str)
+	public function alpha_numeric_spaces($str)
 	{
-		return ( ! preg_match("/^([-a-z0-9_-])+$/i", $str)) ? FALSE : TRUE;
+		return (bool) preg_match('/^[A-Z0-9 ]+$/i', $str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Numeric
+	 * Alpha-numeric with underscores and dashes
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	public function numeric($str)
+	public function alpha_dash($str)
 	{
-		return (bool)preg_match( '/^[\-+]?[0-9]*\.?[0-9]+$/', $str);
-
+		return (bool) preg_match('/^[a-z0-9_-]+$/i', $str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Is Numeric
+	 * Numeric
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	public function is_numeric($str)
+	public function numeric($str)
 	{
-		return ( ! is_numeric($str)) ? FALSE : TRUE;
+		return (bool) preg_match('/^[\-+]?[0-9]*\.?[0-9]+$/', $str);
+
 	}
 
 	// --------------------------------------------------------------------
@@ -1163,7 +1371,6 @@
 	/**
 	 * Integer
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
@@ -1177,7 +1384,6 @@
 	/**
 	 * Decimal number
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
@@ -1189,19 +1395,29 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Greather than
+	 * Greater than
 	 *
-	 * @access	public
 	 * @param	string
+	 * @param	int
 	 * @return	bool
 	 */
 	public function greater_than($str, $min)
 	{
-		if ( ! is_numeric($str))
-		{
-			return FALSE;
+		return is_numeric($str) ? ($str > $min) : FALSE;
 		}
-		return $str > $min;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Equal to or Greater than
+	 *
+	 * @param	string
+	 * @param	int
+	 * @return	bool
+	 */
+	public function greater_than_equal_to($str, $min)
+	{
+		return is_numeric($str) ? ($str >= $min) : FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -1209,17 +1425,41 @@
 	/**
 	 * Less than
 	 *
-	 * @access	public
 	 * @param	string
+	 * @param	int
 	 * @return	bool
 	 */
 	public function less_than($str, $max)
 	{
-		if ( ! is_numeric($str))
+		return is_numeric($str) ? ($str < $max) : FALSE;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Equal to or Less than
+	 *
+	 * @param	string
+	 * @param	int
+	 * @return	bool
+	 */
+	public function less_than_equal_to($str, $max)
 		{
-			return FALSE;
+		return is_numeric($str) ? ($str <= $max) : FALSE;
 		}
-		return $str < $max;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Value should be within an array of values
+	 *
+	 * @param	string
+	 * @param	string
+	 * @return	bool
+	 */
+	public function in_list($value, $list)
+	{
+		return in_array($value, explode(',', $list), TRUE);
 	}
 
 	// --------------------------------------------------------------------
@@ -1227,13 +1467,12 @@
 	/**
 	 * Is a Natural number  (0,1,2,3, etc.)
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function is_natural($str)
 	{
-		return (bool) preg_match( '/^[0-9]+$/', $str);
+		return ctype_digit((string) $str);
 	}
 
 	// --------------------------------------------------------------------
@@ -1241,23 +1480,12 @@
 	/**
 	 * Is a Natural number, but not a zero  (1,2,3, etc.)
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function is_natural_no_zero($str)
 	{
-		if ( ! preg_match( '/^[0-9]+$/', $str))
-		{
-			return FALSE;
-		}
-
-		if ($str == 0)
-		{
-			return FALSE;
-		}
-
-		return TRUE;
+		return ($str != 0 && ctype_digit((string) $str));
 	}
 
 	// --------------------------------------------------------------------
@@ -1268,13 +1496,12 @@
 	 * Tests a string for characters outside of the Base64 alphabet
 	 * as defined by RFC 2045 http://www.faqs.org/rfcs/rfc2045
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
 	public function valid_base64($str)
 	{
-		return (bool) ! preg_match('/[^a-zA-Z0-9\/\+=]/', $str);
+		return (base64_encode(base64_decode($str)) === $str);
 	}
 
 	// --------------------------------------------------------------------
@@ -1285,12 +1512,16 @@
 	 * This function allows HTML to be safely shown in a form.
 	 * Special characters are converted.
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
 	public function prep_for_form($data = '')
 	{
+		if ($this->_safe_form_data === FALSE OR empty($data))
+		{
+			return $data;
+		}
+
 		if (is_array($data))
 		{
 			foreach ($data as $key => $val)
@@ -1301,12 +1532,7 @@
 			return $data;
 		}
 
-		if ($this->_safe_form_data == FALSE OR $data === '')
-		{
-			return $data;
-		}
-
-		return str_replace(array("'", '"', '<', '>'), array("&#39;", "&quot;", '&lt;', '&gt;'), stripslashes($data));
+		return str_replace(array("'", '"', '<', '>'), array('&#39;', '&quot;', '&lt;', '&gt;'), stripslashes($data));
 	}
 
 	// --------------------------------------------------------------------
@@ -1314,20 +1540,19 @@
 	/**
 	 * Prep URL
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
 	public function prep_url($str = '')
 	{
-		if ($str == 'http://' OR $str == '')
+		if ($str === 'http://' OR $str === '')
 		{
 			return '';
 		}
 
-		if (substr($str, 0, 7) != 'http://' && substr($str, 0, 8) != 'https://')
+		if (strpos($str, 'http://') !== 0 && strpos($str, 'https://') !== 0)
 		{
-			$str = 'http://'.$str;
+			return 'http://'.$str;
 		}
 
 		return $str;
@@ -1338,45 +1563,44 @@
 	/**
 	 * Strip Image Tags
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
 	public function strip_image_tags($str)
 	{
-		return $this->CI->input->strip_image_tags($str);
+		return $this->CI->security->strip_image_tags($str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * XSS Clean
+	 * Convert PHP tags to entities
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	public function xss_clean($str)
+	public function encode_php_tags($str)
 	{
-		return $this->CI->security->xss_clean($str);
+		return str_replace(array('<?', '?>'), array('&lt;?', '?&gt;'), $str);
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Convert PHP tags to entities
+	 * Reset validation vars
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	string
+	 * Prevents subsequent validation routines from being affected by the
+	 * results of any previous validation routine due to the CI singleton.
+	 *
+	 * @return	CI_Form_validation
 	 */
-	public function encode_php_tags($str)
+	public function reset_validation()
 	{
-		return str_replace(array('<?php', '<?PHP', '<?', '?>'),  array('&lt;?php', '&lt;?PHP', '&lt;?', '?&gt;'), $str);
+		$this->_field_data = array();
+		$this->_error_array = array();
+		$this->_error_messages = array();
+		$this->error_string = '';
+		return $this;
 	}
 
 }
-// END Form Validation Class
-
-/* End of file Form_validation.php */
-/* Location: ./system/libraries/Form_validation.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Ftp.php opensourcepos/system/libraries/Ftp.php
--- pos-prod/system/libraries/Ftp.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Ftp.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * FTP Class
@@ -21,33 +43,76 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/ftp.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/ftp.html
  */
 class CI_FTP {
 
-	var $hostname	= '';
-	var $username	= '';
-	var $password	= '';
-	var $port		= 21;
-	var $passive	= TRUE;
-	var $debug		= FALSE;
-	var $conn_id	= FALSE;
+	/**
+	 * FTP Server hostname
+	 *
+	 * @var	string
+	 */
+	public $hostname = '';
+
+	/**
+	 * FTP Username
+	 *
+	 * @var	string
+	 */
+	public $username = '';
+
+	/**
+	 * FTP Password
+	 *
+	 * @var	string
+	 */
+	public $password = '';
+
+	/**
+	 * FTP Server port
+	 *
+	 * @var	int
+	 */
+	public $port = 21;
+
+	/**
+	 * Passive mode flag
+	 *
+	 * @var	bool
+	 */
+	public $passive = TRUE;
+
+	/**
+	 * Debug flag
+	 *
+	 * Specifies whether to display error messages.
+	 *
+	 * @var	bool
+	 */
+	public $debug = FALSE;
 
+	// --------------------------------------------------------------------
 
 	/**
-	 * Constructor - Sets Preferences
+	 * Connection ID
 	 *
-	 * The constructor can be passed an array of config values
+	 * @var	resource
+	 */
+	protected $conn_id;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @param	array	$config
+	 * @return	void
 	 */
 	public function __construct($config = array())
 	{
-		if (count($config) > 0)
-		{
-			$this->initialize($config);
-		}
-
-		log_message('debug', "FTP Class Initialized");
+		empty($config) OR $this->initialize($config);
+		log_message('info', 'FTP Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -55,11 +120,10 @@
 	/**
 	 * Initialize preferences
 	 *
-	 * @access	public
-	 * @param	array
+	 * @param	array	$config
 	 * @return	void
 	 */
-	function initialize($config = array())
+	public function initialize($config = array())
 	{
 		foreach ($config as $key => $val)
 		{
@@ -78,11 +142,10 @@
 	/**
 	 * FTP Connect
 	 *
-	 * @access	public
-	 * @param	array	 the connection values
+	 * @param	array	 $config	Connection values
 	 * @return	bool
 	 */
-	function connect($config = array())
+	public function connect($config = array())
 	{
 		if (count($config) > 0)
 		{
@@ -91,7 +154,7 @@
 
 		if (FALSE === ($this->conn_id = @ftp_connect($this->hostname, $this->port)))
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_connect');
 			}
@@ -100,7 +164,7 @@
 
 		if ( ! $this->_login())
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_login');
 			}
@@ -108,7 +173,7 @@
 		}
 
 		// Set passive mode if needed
-		if ($this->passive == TRUE)
+		if ($this->passive === TRUE)
 		{
 			ftp_pasv($this->conn_id, TRUE);
 		}
@@ -121,10 +186,9 @@
 	/**
 	 * FTP Login
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	function _login()
+	protected function _login()
 	{
 		return @ftp_login($this->conn_id, $this->username, $this->password);
 	}
@@ -134,14 +198,13 @@
 	/**
 	 * Validates the connection ID
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	function _is_conn()
+	protected function _is_conn()
 	{
 		if ( ! is_resource($this->conn_id))
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_no_connection');
 			}
@@ -162,14 +226,13 @@
 	 * so we do it by trying to change to a particular directory.
 	 * Internally, this parameter is only used by the "mirror" function below.
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	bool
+	 * @param	string	$path
+	 * @param	bool	$suppress_debug
 	 * @return	bool
 	 */
-	function changedir($path = '', $supress_debug = FALSE)
+	public function changedir($path, $suppress_debug = FALSE)
 	{
-		if ($path == '' OR ! $this->_is_conn())
+		if ( ! $this->_is_conn())
 		{
 			return FALSE;
 		}
@@ -178,7 +241,7 @@
 
 		if ($result === FALSE)
 		{
-			if ($this->debug == TRUE AND $supress_debug == FALSE)
+			if ($this->debug === TRUE && $suppress_debug === FALSE)
 			{
 				$this->_error('ftp_unable_to_changedir');
 			}
@@ -193,13 +257,13 @@
 	/**
 	 * Create a directory
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$path
+	 * @param	int	$permissions
 	 * @return	bool
 	 */
-	function mkdir($path = '', $permissions = NULL)
+	public function mkdir($path, $permissions = NULL)
 	{
-		if ($path == '' OR ! $this->_is_conn())
+		if ($path === '' OR ! $this->_is_conn())
 		{
 			return FALSE;
 		}
@@ -208,10 +272,11 @@
 
 		if ($result === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
-				$this->_error('ftp_unable_to_makdir');
+				$this->_error('ftp_unable_to_mkdir');
 			}
+
 			return FALSE;
 		}
 
@@ -216,7 +281,7 @@
 		}
 
 		// Set file permissions if needed
-		if ( ! is_null($permissions))
+		if ($permissions !== NULL)
 		{
 			$this->chmod($path, (int)$permissions);
 		}
@@ -229,13 +294,13 @@
 	/**
 	 * Upload a file to the server
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @param	string
+	 * @param	string	$locpath
+	 * @param	string	$rempath
+	 * @param	string	$mode
+	 * @param	int	$permissions
 	 * @return	bool
 	 */
-	function upload($locpath, $rempath, $mode = 'auto', $permissions = NULL)
+	public function upload($locpath, $rempath, $mode = 'auto', $permissions = NULL)
 	{
 		if ( ! $this->_is_conn())
 		{
@@ -249,20 +314,20 @@
 		}
 
 		// Set the mode if not specified
-		if ($mode == 'auto')
+		if ($mode === 'auto')
 		{
 			// Get the file extension so we can set the upload type
 			$ext = $this->_getext($locpath);
 			$mode = $this->_settype($ext);
 		}
 
-		$mode = ($mode == 'ascii') ? FTP_ASCII : FTP_BINARY;
+		$mode = ($mode === 'ascii') ? FTP_ASCII : FTP_BINARY;
 
 		$result = @ftp_put($this->conn_id, $rempath, $locpath, $mode);
 
 		if ($result === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_upload');
 			}
@@ -270,7 +336,7 @@
 		}
 
 		// Set file permissions if needed
-		if ( ! is_null($permissions))
+		if ($permissions !== NULL)
 		{
 			$this->chmod($rempath, (int)$permissions);
 		}
@@ -283,13 +349,12 @@
 	/**
 	 * Download a file from a remote server to the local server
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @param	string
+	 * @param	string	$rempath
+	 * @param	string	$locpath
+	 * @param	string	$mode
 	 * @return	bool
 	 */
-	function download($rempath, $locpath, $mode = 'auto')
+	public function download($rempath, $locpath, $mode = 'auto')
 	{
 		if ( ! $this->_is_conn())
 		{
@@ -297,20 +362,20 @@
 		}
 
 		// Set the mode if not specified
-		if ($mode == 'auto')
+		if ($mode === 'auto')
 		{
 			// Get the file extension so we can set the upload type
 			$ext = $this->_getext($rempath);
 			$mode = $this->_settype($ext);
 		}
 
-		$mode = ($mode == 'ascii') ? FTP_ASCII : FTP_BINARY;
+		$mode = ($mode === 'ascii') ? FTP_ASCII : FTP_BINARY;
 
 		$result = @ftp_get($this->conn_id, $locpath, $rempath, $mode);
 
 		if ($result === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_download');
 			}
@@ -325,13 +391,12 @@
 	/**
 	 * Rename (or move) a file
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
-	 * @param	bool
+	 * @param	string	$old_file
+	 * @param	string	$new_file
+	 * @param	bool	$move
 	 * @return	bool
 	 */
-	function rename($old_file, $new_file, $move = FALSE)
+	public function rename($old_file, $new_file, $move = FALSE)
 	{
 		if ( ! $this->_is_conn())
 		{
@@ -342,12 +407,11 @@
 
 		if ($result === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
-				$msg = ($move == FALSE) ? 'ftp_unable_to_rename' : 'ftp_unable_to_move';
-
-				$this->_error($msg);
+				$this->_error('ftp_unable_to_'.($move === FALSE ? 'rename' : 'move'));
 			}
+
 			return FALSE;
 		}
 
@@ -359,12 +423,11 @@
 	/**
 	 * Move a file
 	 *
-	 * @access	public
-	 * @param	string
-	 * @param	string
+	 * @param	string	$old_file
+	 * @param	string	$new_file
 	 * @return	bool
 	 */
-	function move($old_file, $new_file)
+	public function move($old_file, $new_file)
 	{
 		return $this->rename($old_file, $new_file, TRUE);
 	}
@@ -374,11 +437,10 @@
 	/**
 	 * Rename (or move) a file
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$filepath
 	 * @return	bool
 	 */
-	function delete_file($filepath)
+	public function delete_file($filepath)
 	{
 		if ( ! $this->_is_conn())
 		{
@@ -389,7 +451,7 @@
 
 		if ($result === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_delete');
 			}
@@ -403,13 +466,12 @@
 
 	/**
 	 * Delete a folder and recursively delete everything (including sub-folders)
-	 * containted within it.
+	 * contained within it.
 	 *
-	 * @access	public
-	 * @param	string
+	 * @param	string	$filepath
 	 * @return	bool
 	 */
-	function delete_dir($filepath)
+	public function delete_dir($filepath)
 	{
 		if ( ! $this->_is_conn())
 		{
@@ -417,28 +479,25 @@
 		}
 
 		// Add a trailing slash to the file path if needed
-		$filepath = preg_replace("/(.+?)\/*$/", "\\1/",  $filepath);
+		$filepath = preg_replace('/(.+?)\/*$/', '\\1/', $filepath);
 
 		$list = $this->list_files($filepath);
-
-		if ($list !== FALSE AND count($list) > 0)
+		if ( ! empty($list))
 		{
-			foreach ($list as $item)
+			for ($i = 0, $c = count($list); $i < $c; $i++)
 			{
-				// If we can't delete the item it's probaly a folder so
-				// we'll recursively call delete_dir()
-				if ( ! @ftp_delete($this->conn_id, $item))
+				// If we can't delete the item it's probaly a directory,
+				// so we'll recursively call delete_dir()
+				if ( ! preg_match('#/\.\.?$#', $list[$i]) && ! @ftp_delete($this->conn_id, $list[$i]))
 				{
-					$this->delete_dir($item);
+					$this->delete_dir($filepath.$list[$i]);
 				}
 			}
 		}
 
-		$result = @ftp_rmdir($this->conn_id, $filepath);
-
-		if ($result === FALSE)
+		if (@ftp_rmdir($this->conn_id, $filepath) === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_delete');
 			}
@@ -453,36 +513,24 @@
 	/**
 	 * Set file permissions
 	 *
-	 * @access	public
-	 * @param	string	the file path
-	 * @param	string	the permissions
+	 * @param	string	$path	File path
+	 * @param	int	$perm	Permissions
 	 * @return	bool
 	 */
-	function chmod($path, $perm)
+	public function chmod($path, $perm)
 	{
 		if ( ! $this->_is_conn())
 		{
 			return FALSE;
 		}
 
-		// Permissions can only be set when running PHP 5
-		if ( ! function_exists('ftp_chmod'))
+		if (@ftp_chmod($this->conn_id, $perm, $path) === FALSE)
 		{
-			if ($this->debug == TRUE)
+			if ($this->debug === TRUE)
 			{
 				$this->_error('ftp_unable_to_chmod');
 			}
-			return FALSE;
-		}
 
-		$result = @ftp_chmod($this->conn_id, $perm, $path);
-
-		if ($result === FALSE)
-		{
-			if ($this->debug == TRUE)
-			{
-				$this->_error('ftp_unable_to_chmod');
-			}
 			return FALSE;
 		}
 
@@ -494,17 +542,14 @@
 	/**
 	 * FTP List files in the specified directory
 	 *
-	 * @access	public
+	 * @param	string	$path
 	 * @return	array
 	 */
-	function list_files($path = '.')
-	{
-		if ( ! $this->_is_conn())
+	public function list_files($path = '.')
 		{
-			return FALSE;
-		}
-
-		return ftp_nlist($this->conn_id, $path);
+		return $this->_is_conn()
+			? ftp_nlist($this->conn_id, $path)
+			: FALSE;
 	}
 
 	// ------------------------------------------------------------------------
@@ -512,16 +557,16 @@
 	/**
 	 * Read a directory and recreate it remotely
 	 *
-	 * This function recursively reads a folder and everything it contains (including
-	 * sub-folders) and creates a mirror via FTP based on it.  Whatever the directory structure
-	 * of the original file path will be recreated on the server.
+	 * This function recursively reads a folder and everything it contains
+	 * (including sub-folders) and creates a mirror via FTP based on it.
+	 * Whatever the directory structure of the original file path will be
+	 * recreated on the server.
 	 *
-	 * @access	public
-	 * @param	string	path to source with trailing slash
-	 * @param	string	path to destination - include the base folder with trailing slash
+	 * @param	string	$locpath	Path to source with trailing slash
+	 * @param	string	$rempath	Path to destination - include the base folder with trailing slash
 	 * @return	bool
 	 */
-	function mirror($locpath, $rempath)
+	public function mirror($locpath, $rempath)
 	{
 		if ( ! $this->_is_conn())
 		{
@@ -531,24 +576,20 @@
 		// Open the local file path
 		if ($fp = @opendir($locpath))
 		{
-			// Attempt to open the remote file path.
-			if ( ! $this->changedir($rempath, TRUE))
-			{
-				// If it doesn't exist we'll attempt to create the direcotory
-				if ( ! $this->mkdir($rempath) OR ! $this->changedir($rempath))
+			// Attempt to open the remote file path and try to create it, if it doesn't exist
+			if ( ! $this->changedir($rempath, TRUE) && ( ! $this->mkdir($rempath) OR ! $this->changedir($rempath)))
 				{
 					return FALSE;
 				}
-			}
 
 			// Recursively read the local directory
 			while (FALSE !== ($file = readdir($fp)))
 			{
-				if (@is_dir($locpath.$file) && substr($file, 0, 1) != '.')
+				if (is_dir($locpath.$file) && $file[0] !== '.')
 				{
-					$this->mirror($locpath.$file."/", $rempath.$file."/");
+					$this->mirror($locpath.$file.'/', $rempath.$file.'/');
 				}
-				elseif (substr($file, 0, 1) != ".")
+				elseif ($file[0] !== '.')
 				{
 					// Get the file extension so we can se the upload type
 					$ext = $this->_getext($file);
@@ -569,51 +610,29 @@
 	/**
 	 * Extract the file extension
 	 *
-	 * @access	private
-	 * @param	string
+	 * @param	string	$filename
 	 * @return	string
 	 */
-	function _getext($filename)
-	{
-		if (FALSE === strpos($filename, '.'))
+	protected function _getext($filename)
 		{
-			return 'txt';
+		return (($dot = strrpos($filename, '.')) === FALSE)
+			? 'txt'
+			: substr($filename, $dot + 1);
 		}
 
-		$x = explode('.', $filename);
-		return end($x);
-	}
-
-
 	// --------------------------------------------------------------------
 
 	/**
 	 * Set the upload type
 	 *
-	 * @access	private
-	 * @param	string
+	 * @param	string	$ext	Filename extension
 	 * @return	string
 	 */
-	function _settype($ext)
+	protected function _settype($ext)
 	{
-		$text_types = array(
-							'txt',
-							'text',
-							'php',
-							'phps',
-							'php4',
-							'js',
-							'css',
-							'htm',
-							'html',
-							'phtml',
-							'shtml',
-							'log',
-							'xml'
-							);
-
-
-		return (in_array($ext, $text_types)) ? 'ascii' : 'binary';
+		return in_array($ext, array('txt', 'text', 'php', 'phps', 'php4', 'js', 'css', 'htm', 'html', 'phtml', 'shtml', 'log', 'xml'), TRUE)
+			? 'ascii'
+			: 'binary';
 	}
 
 	// ------------------------------------------------------------------------
@@ -621,19 +640,13 @@
 	/**
 	 * Close the connection
 	 *
-	 * @access	public
-	 * @param	string	path to source
-	 * @param	string	path to destination
 	 * @return	bool
 	 */
-	function close()
-	{
-		if ( ! $this->_is_conn())
+	public function close()
 		{
-			return FALSE;
-		}
-
-		@ftp_close($this->conn_id);
+		return $this->_is_conn()
+			? @ftp_close($this->conn_id)
+			: FALSE;
 	}
 
 	// ------------------------------------------------------------------------
@@ -641,11 +654,10 @@
 	/**
 	 * Display error message
 	 *
-	 * @access	private
-	 * @param	string
-	 * @return	bool
+	 * @param	string	$line
+	 * @return	void
 	 */
-	function _error($line)
+	protected function _error($line)
 	{
 		$CI =& get_instance();
 		$CI->lang->load('ftp');
@@ -652,9 +664,4 @@
 		show_error($CI->lang->line($line));
 	}
 
-
 }
-// END FTP Class
-
-/* End of file Ftp.php */
-/* Location: ./system/libraries/Ftp.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Image_lib.php opensourcepos/system/libraries/Image_lib.php
--- pos-prod/system/libraries/Image_lib.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Image_lib.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Image Manipulation class
@@ -21,65 +43,346 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Image_lib
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/image_lib.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/image_lib.html
  */
 class CI_Image_lib {
 
-	var $image_library		= 'gd2';	// Can be:  imagemagick, netpbm, gd, gd2
-	var $library_path		= '';
-	var $dynamic_output		= FALSE;	// Whether to send to browser or write to disk
-	var $source_image		= '';
-	var $new_image			= '';
-	var $width				= '';
-	var $height				= '';
-	var $quality			= '90';
-	var $create_thumb		= FALSE;
-	var $thumb_marker		= '_thumb';
-	var $maintain_ratio		= TRUE;		// Whether to maintain aspect ratio when resizing or use hard values
-	var $master_dim			= 'auto';	// auto, height, or width.  Determines what to use as the master dimension
-	var $rotation_angle		= '';
-	var $x_axis				= '';
-	var	$y_axis				= '';
+	/**
+	 * PHP extension/library to use for image manipulation
+	 * Can be: imagemagick, netpbm, gd, gd2
+	 *
+	 * @var string
+	 */
+	public $image_library		= 'gd2';
+
+	/**
+	 * Path to the graphic library (if applicable)
+	 *
+	 * @var string
+	 */
+	public $library_path		= '';
+
+	/**
+	 * Whether to send to browser or write to disk
+	 *
+	 * @var bool
+	 */
+	public $dynamic_output		= FALSE;
+
+	/**
+	 * Path to original image
+	 *
+	 * @var string
+	 */
+	public $source_image		= '';
+
+	/**
+	 * Path to the modified image
+	 *
+	 * @var string
+	 */
+	public $new_image		= '';
+
+	/**
+	 * Image width
+	 *
+	 * @var int
+	 */
+	public $width			= '';
 
+	/**
+	 * Image height
+	 *
+	 * @var int
+	 */
+	public $height			= '';
+
+	/**
+	 * Quality percentage of new image
+	 *
+	 * @var int
+	 */
+	public $quality			= 90;
+
+	/**
+	 * Whether to create a thumbnail
+	 *
+	 * @var bool
+	 */
+	public $create_thumb		= FALSE;
+
+	/**
+	 * String to add to thumbnail version of image
+	 *
+	 * @var string
+	 */
+	public $thumb_marker		= '_thumb';
+
+	/**
+	 * Whether to maintain aspect ratio when resizing or use hard values
+	 *
+	 * @var bool
+	 */
+	public $maintain_ratio		= TRUE;
+
+	/**
+	 * auto, height, or width.  Determines what to use as the master dimension
+	 *
+	 * @var string
+	 */
+	public $master_dim		= 'auto';
+
+	/**
+	 * Angle at to rotate image
+	 *
+	 * @var string
+	 */
+	public $rotation_angle		= '';
+
+	/**
+	 * X Coordinate for manipulation of the current image
+	 *
+	 * @var int
+	 */
+	public $x_axis			= '';
+
+	/**
+	 * Y Coordinate for manipulation of the current image
+	 *
+	 * @var int
+	 */
+	public $y_axis			= '';
+
+	// --------------------------------------------------------------------------
 	// Watermark Vars
-	var $wm_text			= '';			// Watermark text if graphic is not used
-	var $wm_type			= 'text';		// Type of watermarking.  Options:  text/overlay
-	var $wm_x_transp		= 4;
-	var $wm_y_transp		= 4;
-	var $wm_overlay_path	= '';			// Watermark image path
-	var $wm_font_path		= '';			// TT font
-	var $wm_font_size		= 17;			// Font size (different versions of GD will either use points or pixels)
-	var $wm_vrt_alignment	= 'B';			// Vertical alignment:   T M B
-	var $wm_hor_alignment	= 'C';			// Horizontal alignment: L R C
-	var $wm_padding			= 0;			// Padding around text
-	var $wm_hor_offset		= 0;			// Lets you push text to the right
-	var $wm_vrt_offset		= 0;			// Lets you push  text down
-	var $wm_font_color		= '#ffffff';	// Text color
-	var $wm_shadow_color	= '';			// Dropshadow color
-	var $wm_shadow_distance	= 2;			// Dropshadow distance
-	var $wm_opacity			= 50;			// Image opacity: 1 - 100  Only works with image
+	// --------------------------------------------------------------------------
+
+	/**
+	 * Watermark text if graphic is not used
+	 *
+	 * @var string
+	 */
+	public $wm_text			= '';
+
+	/**
+	 * Type of watermarking.  Options:  text/overlay
+	 *
+	 * @var string
+	 */
+	public $wm_type			= 'text';
+
+	/**
+	 * Default transparency for watermark
+	 *
+	 * @var int
+	 */
+	public $wm_x_transp		= 4;
+
+	/**
+	 * Default transparency for watermark
+	 *
+	 * @var int
+	 */
+	public $wm_y_transp		= 4;
 
+	/**
+	 * Watermark image path
+	 *
+	 * @var string
+	 */
+	public $wm_overlay_path		= '';
+
+	/**
+	 * TT font
+	 *
+	 * @var string
+	 */
+	public $wm_font_path		= '';
+
+	/**
+	 * Font size (different versions of GD will either use points or pixels)
+	 *
+	 * @var int
+	 */
+	public $wm_font_size		= 17;
+
+	/**
+	 * Vertical alignment:   T M B
+	 *
+	 * @var string
+	 */
+	public $wm_vrt_alignment	= 'B';
+
+	/**
+	 * Horizontal alignment: L R C
+	 *
+	 * @var string
+	 */
+	public $wm_hor_alignment	= 'C';
+
+	/**
+	 * Padding around text
+	 *
+	 * @var int
+	 */
+	public $wm_padding			= 0;
+
+	/**
+	 * Lets you push text to the right
+	 *
+	 * @var int
+	 */
+	public $wm_hor_offset		= 0;
+
+	/**
+	 * Lets you push text down
+	 *
+	 * @var int
+	 */
+	public $wm_vrt_offset		= 0;
+
+	/**
+	 * Text color
+	 *
+	 * @var string
+	 */
+	protected $wm_font_color	= '#ffffff';
+
+	/**
+	 * Dropshadow color
+	 *
+	 * @var string
+	 */
+	protected $wm_shadow_color	= '';
+
+	/**
+	 * Dropshadow distance
+	 *
+	 * @var int
+	 */
+	public $wm_shadow_distance	= 2;
+
+	/**
+	 * Image opacity: 1 - 100  Only works with image
+	 *
+	 * @var int
+	 */
+	public $wm_opacity		= 50;
+
+	// --------------------------------------------------------------------------
 	// Private Vars
-	var $source_folder		= '';
-	var $dest_folder		= '';
-	var $mime_type			= '';
-	var $orig_width			= '';
-	var $orig_height		= '';
-	var $image_type			= '';
-	var $size_str			= '';
-	var $full_src_path		= '';
-	var $full_dst_path		= '';
-	var $create_fnc			= 'imagecreatetruecolor';
-	var $copy_fnc			= 'imagecopyresampled';
-	var $error_msg			= array();
-	var $wm_use_drop_shadow	= FALSE;
-	var $wm_use_truetype	= FALSE;
+	// --------------------------------------------------------------------------
 
 	/**
-	 * Constructor
+	 * Source image folder
 	 *
-	 * @param	string
+	 * @var string
+	 */
+	public $source_folder		= '';
+
+	/**
+	 * Destination image folder
+	 *
+	 * @var string
+	 */
+	public $dest_folder		= '';
+
+	/**
+	 * Image mime-type
+	 *
+	 * @var string
+	 */
+	public $mime_type		= '';
+
+	/**
+	 * Original image width
+	 *
+	 * @var int
+	 */
+	public $orig_width		= '';
+
+	/**
+	 * Original image height
+	 *
+	 * @var int
+	 */
+	public $orig_height		= '';
+
+	/**
+	 * Image format
+	 *
+	 * @var string
+	 */
+	public $image_type		= '';
+
+	/**
+	 * Size of current image
+	 *
+	 * @var string
+	 */
+	public $size_str		= '';
+
+	/**
+	 * Full path to source image
+	 *
+	 * @var string
+	 */
+	public $full_src_path		= '';
+
+	/**
+	 * Full path to destination image
+	 *
+	 * @var string
+	 */
+	public $full_dst_path		= '';
+
+	/**
+	 * File permissions
+	 *
+	 * @var	int
+	 */
+	public $file_permissions = 0644;
+
+	/**
+	 * Name of function to create image
+	 *
+	 * @var string
+	 */
+	public $create_fnc		= 'imagecreatetruecolor';
+
+	/**
+	 * Name of function to copy image
+	 *
+	 * @var string
+	 */
+	public $copy_fnc		= 'imagecopyresampled';
+
+	/**
+	 * Error messages
+	 *
+	 * @var array
+	 */
+	public $error_msg		= array();
+
+	/**
+	 * Whether to have a drop shadow on watermark
+	 *
+	 * @var bool
+	 */
+	protected $wm_use_drop_shadow	= FALSE;
+
+	/**
+	 * Whether to use truetype fonts
+	 *
+	 * @var bool
+	 */
+	public $wm_use_truetype	= FALSE;
+
+	/**
+	 * Initialize Image Library
+	 *
+	 * @param	array	$props
 	 * @return	void
 	 */
 	public function __construct($props = array())
@@ -89,7 +392,7 @@
 			$this->initialize($props);
 		}
 
-		log_message('debug', "Image Lib Class Initialized");
+		log_message('info', 'Image Lib Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -99,20 +402,41 @@
 	 *
 	 * Resets values in case this class is used in a loop
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function clear()
+	public function clear()
 	{
-		$props = array('source_folder', 'dest_folder', 'source_image', 'full_src_path', 'full_dst_path', 'new_image', 'image_type', 'size_str', 'quality', 'orig_width', 'orig_height', 'width', 'height', 'rotation_angle', 'x_axis', 'y_axis', 'create_fnc', 'copy_fnc', 'wm_overlay_path', 'wm_use_truetype', 'dynamic_output', 'wm_font_size', 'wm_text', 'wm_vrt_alignment', 'wm_hor_alignment', 'wm_padding', 'wm_hor_offset', 'wm_vrt_offset', 'wm_font_color', 'wm_use_drop_shadow', 'wm_shadow_color', 'wm_shadow_distance', 'wm_opacity');
+		$props = array('thumb_marker', 'library_path', 'source_image', 'new_image', 'width', 'height', 'rotation_angle', 'x_axis', 'y_axis', 'wm_text', 'wm_overlay_path', 'wm_font_path', 'wm_shadow_color', 'source_folder', 'dest_folder', 'mime_type', 'orig_width', 'orig_height', 'image_type', 'size_str', 'full_src_path', 'full_dst_path');
 
 		foreach ($props as $val)
 		{
 			$this->$val = '';
 		}
 
-		// special consideration for master_dim
+		$this->image_library 		= 'gd2';
+		$this->dynamic_output 		= FALSE;
+		$this->quality 				= 90;
+		$this->create_thumb 		= FALSE;
+		$this->thumb_marker 		= '_thumb';
+		$this->maintain_ratio 		= TRUE;
 		$this->master_dim = 'auto';
+		$this->wm_type 				= 'text';
+		$this->wm_x_transp 			= 4;
+		$this->wm_y_transp 			= 4;
+		$this->wm_font_size 		= 17;
+		$this->wm_vrt_alignment 	= 'B';
+		$this->wm_hor_alignment 	= 'C';
+		$this->wm_padding 			= 0;
+		$this->wm_hor_offset 		= 0;
+		$this->wm_vrt_offset 		= 0;
+		$this->wm_font_color		= '#ffffff';
+		$this->wm_shadow_distance 	= 2;
+		$this->wm_opacity 			= 50;
+		$this->create_fnc 			= 'imagecreatetruecolor';
+		$this->copy_fnc 			= 'imagecopyresampled';
+		$this->error_msg 			= array();
+		$this->wm_use_drop_shadow 	= FALSE;
+		$this->wm_use_truetype 		= FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -120,42 +444,58 @@
 	/**
 	 * initialize image preferences
 	 *
-	 * @access	public
 	 * @param	array
 	 * @return	bool
 	 */
-	function initialize($props = array())
+	public function initialize($props = array())
 	{
-		/*
-		 * Convert array elements into class variables
-		 */
+		// Convert array elements into class variables
 		if (count($props) > 0)
 		{
 			foreach ($props as $key => $val)
 			{
+				if (property_exists($this, $key))
+				{
+					if (in_array($key, array('wm_font_color', 'wm_shadow_color')))
+					{
+						if (preg_match('/^#?([0-9a-f]{3}|[0-9a-f]{6})$/i', $val, $matches))
+						{
+							/* $matches[1] contains our hex color value, but it might be
+							 * both in the full 6-length format or the shortened 3-length
+							 * value.
+							 * We'll later need the full version, so we keep it if it's
+							 * already there and if not - we'll convert to it. We can
+							 * access string characters by their index as in an array,
+							 * so we'll do that and use concatenation to form the final
+							 * value:
+							 */
+							$val = (strlen($matches[1]) === 6)
+								? '#'.$matches[1]
+								: '#'.$matches[1][0].$matches[1][0].$matches[1][1].$matches[1][1].$matches[1][2].$matches[1][2];
+						}
+						else
+						{
+							continue;
+						}
+					}
+
 				$this->$key = $val;
 			}
 		}
+		}
 
-		/*
-		 * Is there a source image?
-		 *
-		 * If not, there's no reason to continue
-		 *
-		 */
-		if ($this->source_image == '')
+		// Is there a source image? If not, there's no reason to continue
+		if ($this->source_image === '')
 		{
 			$this->set_error('imglib_source_image_required');
 			return FALSE;	
 		}
 
-		/*
-		 * Is getimagesize() Available?
+		/* Is getimagesize() available?
 		 *
 		 * We use it to determine the image properties (width/height).
 		 * Note:  We need to figure out how to determine image
 		 * properties using ImageMagick and NetPBM
-		 *
 		 */
 		if ( ! function_exists('getimagesize'))
 		{
@@ -165,17 +505,15 @@
 
 		$this->image_library = strtolower($this->image_library);
 
-		/*
-		 * Set the full server path
+		/* Set the full server path
 		 *
 		 * The source image may or may not contain a path.
 		 * Either way, we'll try use realpath to generate the
 		 * full server path in order to more reliably read it.
-		 *
 		 */
-		if (function_exists('realpath') AND @realpath($this->source_image) !== FALSE)
+		if (($full_source_path = realpath($this->source_image)) !== FALSE)
 		{
-			$full_source_path = str_replace("\\", "/", realpath($this->source_image));
+			$full_source_path = str_replace('\\', '/', $full_source_path);
 		}
 		else
 		{
@@ -199,25 +537,22 @@
 		 * we are making a copy of the source image. If not
 		 * it means we are altering the original.  We'll
 		 * set the destination filename and path accordingly.
-		 *
 		 */
-		if ($this->new_image == '')
+		if ($this->new_image === '')
 		{
 			$this->dest_image = $this->source_image;
 			$this->dest_folder = $this->source_folder;
 		}
-		else
-		{
-			if (strpos($this->new_image, '/') === FALSE AND strpos($this->new_image, '\\') === FALSE)
+		elseif (strpos($this->new_image, '/') === FALSE)
 			{
 				$this->dest_folder = $this->source_folder;
 				$this->dest_image = $this->new_image;
 			}
 			else
 			{
-				if (function_exists('realpath') AND @realpath($this->new_image) !== FALSE)
+			if (strpos($this->new_image, '/') === FALSE && strpos($this->new_image, '\\') === FALSE)
 				{
-					$full_dest_path = str_replace("\\", "/", realpath($this->new_image));
+				$full_dest_path = str_replace('\\', '/', realpath($this->new_image));
 				}
 				else
 				{
@@ -225,7 +560,7 @@
 				}
 
 				// Is there a file name?
-				if ( ! preg_match("#\.(jpg|jpeg|gif|png)$#i", $full_dest_path))
+			if ( ! preg_match('#\.(jpg|jpeg|gif|png)$#i', $full_dest_path))
 				{
 					$this->dest_folder = $full_dest_path.'/';
 					$this->dest_image = $this->source_image;
@@ -237,19 +572,16 @@
 					$this->dest_folder = str_replace($this->dest_image, '', $full_dest_path);
 				}
 			}
-		}
 
-		/*
-		 * Compile the finalized filenames/paths
+		/* Compile the finalized filenames/paths
 		 *
 		 * We'll create two master strings containing the
 		 * full server path to the source image and the
 		 * full server path to the destination image.
 		 * We'll also split the destination image name
 		 * so we can insert the thumbnail marker if needed.
-		 *
 		 */
-		if ($this->create_thumb === FALSE OR $this->thumb_marker == '')
+		if ($this->create_thumb === FALSE OR $this->thumb_marker === '')
 		{
 			$this->thumb_marker = '';
 		}
@@ -262,71 +594,60 @@
 		$this->full_src_path = $this->source_folder.$this->source_image;
 		$this->full_dst_path = $this->dest_folder.$filename.$this->thumb_marker.$file_ext;
 
-		/*
-		 * Should we maintain image proportions?
+		/* Should we maintain image proportions?
 		 *
 		 * When creating thumbs or copies, the target width/height
 		 * might not be in correct proportion with the source
 		 * image's width/height.  We'll recalculate it here.
-		 *
 		 */
-		if ($this->maintain_ratio === TRUE && ($this->width != '' AND $this->height != ''))
+		if ($this->maintain_ratio === TRUE && ($this->width !== 0 OR $this->height !== 0))
 		{
 			$this->image_reproportion();
 		}
 
-		/*
-		 * Was a width and height specified?
-		 *
-		 * If the destination width/height was
-		 * not submitted we will use the values
-		 * from the actual file
+		/* Was a width and height specified?
 		 *
+		 * If the destination width/height was not submitted we
+		 * will use the values from the actual file
 		 */
-		if ($this->width == '')
+		if ($this->width === '')
+		{
 			$this->width = $this->orig_width;
+		}
 
-		if ($this->height == '')
+		if ($this->height === '')
+		{
 			$this->height = $this->orig_height;
+		}
 
 		// Set the quality
-		$this->quality = trim(str_replace("%", "", $this->quality));
+		$this->quality = trim(str_replace('%', '', $this->quality));
 
-		if ($this->quality == '' OR $this->quality == 0 OR ! is_numeric($this->quality))
+		if ($this->quality === '' OR $this->quality === 0 OR ! ctype_digit($this->quality))
+		{
 			$this->quality = 90;
+		}
 
 		// Set the x/y coordinates
-		$this->x_axis = ($this->x_axis == '' OR ! is_numeric($this->x_axis)) ? 0 : $this->x_axis;
-		$this->y_axis = ($this->y_axis == '' OR ! is_numeric($this->y_axis)) ? 0 : $this->y_axis;
+		is_numeric($this->x_axis) OR $this->x_axis = 0;
+		is_numeric($this->y_axis) OR $this->y_axis = 0;
 
 		// Watermark-related Stuff...
-		if ($this->wm_font_color != '')
-		{
-			if (strlen($this->wm_font_color) == 6)
+		if ($this->wm_overlay_path !== '')
 			{
-				$this->wm_font_color = '#'.$this->wm_font_color;
-			}
+			$this->wm_overlay_path = str_replace('\\', '/', realpath($this->wm_overlay_path));
 		}
 
-		if ($this->wm_shadow_color != '')
-		{
-			if (strlen($this->wm_shadow_color) == 6)
+		if ($this->wm_shadow_color !== '')
 			{
-				$this->wm_shadow_color = '#'.$this->wm_shadow_color;
-			}
-		}
-
-		if ($this->wm_overlay_path != '')
-		{
-			$this->wm_overlay_path = str_replace("\\", "/", realpath($this->wm_overlay_path));
+			$this->wm_use_drop_shadow = TRUE;
 		}
-
-		if ($this->wm_shadow_color != '')
+		elseif ($this->wm_use_drop_shadow === TRUE && $this->wm_shadow_color === '')
 		{
-			$this->wm_use_drop_shadow = TRUE;
+			$this->wm_use_drop_shadow = FALSE;
 		}
 
-		if ($this->wm_font_path != '')
+		if ($this->wm_font_path !== '')
 		{
 			$this->wm_use_truetype = TRUE;
 		}
@@ -342,18 +663,11 @@
 	 * This is a wrapper function that chooses the proper
 	 * resize function based on the protocol specified
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function resize()
+	public function resize()
 	{
-		$protocol = 'image_process_'.$this->image_library;
-
-		if (preg_match('/gd2$/i', $protocol))
-		{
-			$protocol = 'image_process_gd';
-		}
-
+		$protocol = ($this->image_library === 'gd2') ? 'image_process_gd' : 'image_process_'.$this->image_library;
 		return $this->$protocol('resize');
 	}
 
@@ -365,18 +679,11 @@
 	 * This is a wrapper function that chooses the proper
 	 * cropping function based on the protocol specified
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function crop()
+	public function crop()
 	{
-		$protocol = 'image_process_'.$this->image_library;
-
-		if (preg_match('/gd2$/i', $protocol))
-		{
-			$protocol = 'image_process_gd';
-		}
-
+		$protocol = ($this->image_library === 'gd2') ? 'image_process_gd' : 'image_process_'.$this->image_library;
 		return $this->$protocol('crop');
 	}
 
@@ -388,22 +695,21 @@
 	 * This is a wrapper function that chooses the proper
 	 * rotation function based on the protocol specified
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function rotate()
+	public function rotate()
 	{
 		// Allowed rotation values
 		$degs = array(90, 180, 270, 'vrt', 'hor');
 
-		if ($this->rotation_angle == '' OR ! in_array($this->rotation_angle, $degs))
+		if ($this->rotation_angle === '' OR ! in_array($this->rotation_angle, $degs))
 		{
 			$this->set_error('imglib_rotation_angle_required');
 			return FALSE;	
 		}
 
 		// Reassign the width and height
-		if ($this->rotation_angle == 90 OR $this->rotation_angle == 270)
+		if ($this->rotation_angle === 90 OR $this->rotation_angle === 270)
 		{
 			$this->width	= $this->orig_height;
 			$this->height	= $this->orig_width;
@@ -414,12 +720,10 @@
 			$this->height	= $this->orig_height;
 		}
 
-
 		// Choose resizing function
-		if ($this->image_library == 'imagemagick' OR $this->image_library == 'netpbm')
+		if ($this->image_library === 'imagemagick' OR $this->image_library === 'netpbm')
 		{
 			$protocol = 'image_process_'.$this->image_library;
-
 			return $this->$protocol('rotate');
 		}
 
@@ -423,14 +727,9 @@
 			return $this->$protocol('rotate');
 		}
 
-		if ($this->rotation_angle == 'hor' OR $this->rotation_angle == 'vrt')
-		{
-			return $this->image_mirror_gd();
-		}
-		else
-		{
-			return $this->image_rotate_gd();
-		}
+		return ($this->rotation_angle === 'hor' OR $this->rotation_angle === 'vrt')
+			? $this->image_mirror_gd()
+			: $this->image_rotate_gd();
 	}
 
 	// --------------------------------------------------------------------
@@ -440,34 +739,27 @@
 	 *
 	 * This function will resize or crop
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	function image_process_gd($action = 'resize')
+	public function image_process_gd($action = 'resize')
 	{
 		$v2_override = FALSE;
 
 		// If the target width/height match the source, AND if the new file name is not equal to the old file name
 		// we'll simply make a copy of the original with the new name... assuming dynamic rendering is off.
-		if ($this->dynamic_output === FALSE)
+		if ($this->dynamic_output === FALSE && $this->orig_width === $this->width && $this->orig_height === $this->height)
 		{
-			if ($this->orig_width == $this->width AND $this->orig_height == $this->height)
+			if ($this->source_image !== $this->new_image && @copy($this->full_src_path, $this->full_dst_path))
 			{
-				if ($this->source_image != $this->new_image)
-				{
-					if (@copy($this->full_src_path, $this->full_dst_path))
-					{
-						@chmod($this->full_dst_path, FILE_WRITE_MODE);
-					}
+				chmod($this->full_dst_path, $this->file_permissions);
 				}
 
 				return TRUE;
 			}
-		}
 
 		// Let's set up our values based on the action
-		if ($action == 'crop')
+		if ($action === 'crop')
 		{
 			//  Reassign the source width/height if cropping
 			$this->orig_width  = $this->width;
@@ -477,7 +769,7 @@
 			if ($this->gd_version() !== FALSE)
 			{
 				$gd_version = str_replace('0', '', $this->gd_version());
-				$v2_override = ($gd_version == 2) ? TRUE : FALSE;
+				$v2_override = ($gd_version == 2);
 			}
 		}
 		else
@@ -493,14 +785,15 @@
 			return FALSE;
 		}
 
-		//  Create The Image
-		//
-		//  old conditional which users report cause problems with shared GD libs who report themselves as "2.0 or greater"
-		//  it appears that this is no longer the issue that it was in 2004, so we've removed it, retaining it in the comment
-		//  below should that ever prove inaccurate.
-		//
-		//  if ($this->image_library == 'gd2' AND function_exists('imagecreatetruecolor') AND $v2_override == FALSE)
-		if ($this->image_library == 'gd2' AND function_exists('imagecreatetruecolor'))
+		/* Create the image
+		 *
+		 * Old conditional which users report cause problems with shared GD libs who report themselves as "2.0 or greater"
+		 * it appears that this is no longer the issue that it was in 2004, so we've removed it, retaining it in the comment
+		 * below should that ever prove inaccurate.
+		 *
+		 * if ($this->image_library === 'gd2' && function_exists('imagecreatetruecolor') && $v2_override === FALSE)
+		 */
+		if ($this->image_library === 'gd2' && function_exists('imagecreatetruecolor'))
 		{
 			$create	= 'imagecreatetruecolor';
 			$copy	= 'imagecopyresampled';
@@ -513,7 +806,7 @@
 
 		$dst_img = $create($this->width, $this->height);
 
-		if ($this->image_type == 3) // png we can actually preserve transparency
+		if ($this->image_type === 3) // png we can actually preserve transparency
 		{
 			imagealphablending($dst_img, FALSE);
 			imagesavealpha($dst_img, TRUE);
@@ -522,25 +815,20 @@
 		$copy($dst_img, $src_img, 0, 0, $this->x_axis, $this->y_axis, $this->width, $this->height, $this->orig_width, $this->orig_height);
 
 		//  Show the image
-		if ($this->dynamic_output == TRUE)
+		if ($this->dynamic_output === TRUE)
 		{
 			$this->image_display_gd($dst_img);
 		}
-		else
-		{
-			// Or save it
-			if ( ! $this->image_save_gd($dst_img))
+		elseif ( ! $this->image_save_gd($dst_img)) // Or save it
 			{
 				return FALSE;
 			}
-		}
 
 		//  Kill the file handles
 		imagedestroy($dst_img);
 		imagedestroy($src_img);
 
-		// Set the file to 777
-		@chmod($this->full_dst_path, FILE_WRITE_MODE);
+		chmod($this->full_dst_path, $this->file_permissions);
 
 		return TRUE;
 	}
@@ -552,55 +840,55 @@
 	 *
 	 * This function will resize, crop or rotate
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	function image_process_imagemagick($action = 'resize')
+	public function image_process_imagemagick($action = 'resize')
 	{
 		//  Do we have a vaild library path?
-		if ($this->library_path == '')
+		if ($this->library_path === '')
 		{
 			$this->set_error('imglib_libpath_invalid');
 			return FALSE;
 		}
 
-		if ( ! preg_match("/convert$/i", $this->library_path))
+		if ( ! preg_match('/convert$/i', $this->library_path))
 		{
-			$this->library_path = rtrim($this->library_path, '/').'/';
-
-			$this->library_path .= 'convert';
+			$this->library_path = rtrim($this->library_path, '/').'/convert';
 		}
 
 		// Execute the command
-		$cmd = $this->library_path." -quality ".$this->quality;
+		$cmd = $this->library_path.' -quality '.$this->quality;
 
-		if ($action == 'crop')
+		if ($action === 'crop')
 		{
-			$cmd .= " -crop ".$this->width."x".$this->height."+".$this->x_axis."+".$this->y_axis." \"$this->full_src_path\" \"$this->full_dst_path\" 2>&1";
+			$cmd .= ' -crop '.$this->width.'x'.$this->height.'+'.$this->x_axis.'+'.$this->y_axis.' "'.$this->full_src_path.'" "'.$this->full_dst_path .'" 2>&1';
 		}
-		elseif ($action == 'rotate')
-		{
-			switch ($this->rotation_angle)
+		elseif ($action === 'rotate')
 			{
-				case 'hor'	: $angle = '-flop';
-					break;
-				case 'vrt'	: $angle = '-flip';
-					break;
-				default		: $angle = '-rotate '.$this->rotation_angle;
-					break;
-			}
+			$angle = ($this->rotation_angle === 'hor' OR $this->rotation_angle === 'vrt')
+					? '-flop' : '-rotate '.$this->rotation_angle;
 
-			$cmd .= " ".$angle." \"$this->full_src_path\" \"$this->full_dst_path\" 2>&1";
+			$cmd .= ' '.$angle.' "'.$this->full_src_path.'" "'.$this->full_dst_path.'" 2>&1';
 		}
 		else  // Resize
 		{
-			$cmd .= " -resize ".$this->width."x".$this->height." \"$this->full_src_path\" \"$this->full_dst_path\" 2>&1";
+			if($this->maintain_ratio === TRUE)
+			{
+				$cmd .= ' -resize '.$this->width.'x'.$this->height.' "'.$this->full_src_path.'" "'.$this->full_dst_path.'" 2>&1';
+			}
+			else
+			{
+				$cmd .= ' -resize '.$this->width.'x'.$this->height.'\! "'.$this->full_src_path.'" "'.$this->full_dst_path.'" 2>&1';
+			}
 		}
 
 		$retval = 1;
-
+		// exec() might be disabled
+		if (function_usable('exec'))
+		{
 		@exec($cmd, $output, $retval);
+		}
 
 		//	Did it work?
 		if ($retval > 0)
@@ -609,8 +897,7 @@
 			return FALSE;
 		}
 
-		// Set the file to 777
-		@chmod($this->full_dst_path, FILE_WRITE_MODE);
+		chmod($this->full_dst_path, $this->file_permissions);
 
 		return TRUE;
 	}
@@ -622,13 +909,12 @@
 	 *
 	 * This function will resize, crop or rotate
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	bool
 	 */
-	function image_process_netpbm($action = 'resize')
+	public function image_process_netpbm($action = 'resize')
 	{
-		if ($this->library_path == '')
+		if ($this->library_path === '')
 		{
 			$this->set_error('imglib_libpath_invalid');
 			return FALSE;
@@ -651,11 +937,11 @@
 				break;
 		}
 
-		if ($action == 'crop')
+		if ($action === 'crop')
 		{
 			$cmd_inner = 'pnmcut -left '.$this->x_axis.' -top '.$this->y_axis.' -width '.$this->width.' -height '.$this->height;
 		}
-		elseif ($action == 'rotate')
+		elseif ($action === 'rotate')
 		{
 			switch ($this->rotation_angle)
 			{
@@ -681,8 +967,11 @@
 		$cmd = $this->library_path.$cmd_in.' '.$this->full_src_path.' | '.$cmd_inner.' | '.$cmd_out.' > '.$this->dest_folder.'netpbm.tmp';
 
 		$retval = 1;
-
+		// exec() might be disabled
+		if (function_usable('exec'))
+		{
 		@exec($cmd, $output, $retval);
+		}
 
 		//  Did it work?
 		if ($retval > 0)
@@ -696,7 +985,7 @@
 		// we have to rename the temp file.
 		copy ($this->dest_folder.'netpbm.tmp', $this->full_dst_path);
 		unlink ($this->dest_folder.'netpbm.tmp');
-		@chmod($this->full_dst_path, FILE_WRITE_MODE);
+		chmod($this->full_dst_path, $this->file_permissions);
 
 		return TRUE;
 	}
@@ -706,10 +995,9 @@
 	/**
 	 * Image Rotate Using GD
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function image_rotate_gd()
+	public function image_rotate_gd()
 	{
 		//  Create the image handle
 		if ( ! ($src_img = $this->image_create_gd()))
@@ -727,27 +1015,21 @@
 		//  Rotate it!
 		$dst_img = imagerotate($src_img, $this->rotation_angle, $white);
 
-		//  Save the Image
-		if ($this->dynamic_output == TRUE)
+		// Show the image
+		if ($this->dynamic_output === TRUE)
 		{
 			$this->image_display_gd($dst_img);
 		}
-		else
-		{
-			// Or save it
-			if ( ! $this->image_save_gd($dst_img))
+		elseif ( ! $this->image_save_gd($dst_img)) // ... or save it
 			{
 				return FALSE;
 			}
-		}
 
 		//  Kill the file handles
 		imagedestroy($dst_img);
 		imagedestroy($src_img);
 
-		// Set the file to 777
-
-		@chmod($this->full_dst_path, FILE_WRITE_MODE);
+		chmod($this->full_dst_path, $this->file_permissions);
 
 		return TRUE;
 	}
@@ -759,10 +1041,9 @@
 	 *
 	 * This function will flip horizontal or vertical
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function image_mirror_gd()
+	public function image_mirror_gd()
 	{
 		if ( ! $src_img = $this->image_create_gd())
 		{
@@ -772,7 +1053,7 @@
 		$width  = $this->orig_width;
 		$height = $this->orig_height;
 
-		if ($this->rotation_angle == 'hor')
+		if ($this->rotation_angle === 'hor')
 		{
 			for ($i = 0; $i < $height; $i++)
 			{
@@ -797,41 +1078,36 @@
 			for ($i = 0; $i < $width; $i++)
 			{
 				$top = 0;
-				$bot = $height-1;
+				$bottom = $height - 1;
 
-				while ($top < $bot)
+				while ($top < $bottom)
 				{
 					$ct = imagecolorat($src_img, $i, $top);
-					$cb = imagecolorat($src_img, $i, $bot);
+					$cb = imagecolorat($src_img, $i, $bottom);
 
 					imagesetpixel($src_img, $i, $top, $cb);
-					imagesetpixel($src_img, $i, $bot, $ct);
+					imagesetpixel($src_img, $i, $bottom, $ct);
 
 					$top++;
-					$bot--;
+					$bottom--;
 				}
 			}
 		}
 
 		//  Show the image
-		if ($this->dynamic_output == TRUE)
+		if ($this->dynamic_output === TRUE)
 		{
 			$this->image_display_gd($src_img);
 		}
-		else
-		{
-			// Or save it
-			if ( ! $this->image_save_gd($src_img))
+		elseif ( ! $this->image_save_gd($src_img)) // ... or save it
 			{
 				return FALSE;
 			}
-		}
 
 		//  Kill the file handles
 		imagedestroy($src_img);
 
-		// Set the file to 777
-		@chmod($this->full_dst_path, FILE_WRITE_MODE);
+		chmod($this->full_dst_path, $this->file_permissions);
 
 		return TRUE;
 	}
@@ -844,20 +1120,11 @@
 	 * This is a wrapper function that chooses the type
 	 * of watermarking based on the specified preference.
 	 *
-	 * @access	public
-	 * @param	string
 	 * @return	bool
 	 */
-	function watermark()
+	public function watermark()
 	{
-		if ($this->wm_type == 'overlay')
-		{
-			return $this->overlay_watermark();
-		}
-		else
-		{
-			return $this->text_watermark();
-		}
+		return ($this->wm_type === 'overlay') ? $this->overlay_watermark() : $this->text_watermark();
 	}
 
 	// --------------------------------------------------------------------
@@ -865,10 +1132,9 @@
 	/**
 	 * Watermark - Graphic Version
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function overlay_watermark()
+	public function overlay_watermark()
 	{
 		if ( ! function_exists('imagecolortransparent'))
 		{
@@ -896,13 +1162,13 @@
 		// invert the offset.  Same with the horizontal
 		// offset when the image is at the right
 
-		$this->wm_vrt_alignment = strtoupper(substr($this->wm_vrt_alignment, 0, 1));
-		$this->wm_hor_alignment = strtoupper(substr($this->wm_hor_alignment, 0, 1));
+		$this->wm_vrt_alignment = strtoupper($this->wm_vrt_alignment[0]);
+		$this->wm_hor_alignment = strtoupper($this->wm_hor_alignment[0]);
 
-		if ($this->wm_vrt_alignment == 'B')
+		if ($this->wm_vrt_alignment === 'B')
 			$this->wm_vrt_offset = $this->wm_vrt_offset * -1;
 
-		if ($this->wm_hor_alignment == 'R')
+		if ($this->wm_hor_alignment === 'R')
 			$this->wm_hor_offset = $this->wm_hor_offset * -1;
 
 		//  Set the base x and y axis values
@@ -910,29 +1176,27 @@
 		$y_axis = $this->wm_vrt_offset + $this->wm_padding;
 
 		//  Set the vertical position
-		switch ($this->wm_vrt_alignment)
+		if ($this->wm_vrt_alignment === 'M')
 		{
-			case 'T':
-				break;
-			case 'M':	$y_axis += ($this->orig_height / 2) - ($wm_height / 2);
-				break;
-			case 'B':	$y_axis += $this->orig_height - $wm_height;
-				break;
+			$y_axis += ($this->orig_height / 2) - ($wm_height / 2);
+		}
+		elseif ($this->wm_vrt_alignment === 'B')
+		{
+			$y_axis += $this->orig_height - $wm_height;
 		}
 
 		//  Set the horizontal position
-		switch ($this->wm_hor_alignment)
+		if ($this->wm_hor_alignment === 'C')
 		{
-			case 'L':
-				break;
-			case 'C':	$x_axis += ($this->orig_width / 2) - ($wm_width / 2);
-				break;
-			case 'R':	$x_axis += $this->orig_width - $wm_width;
-				break;
+			$x_axis += ($this->orig_width / 2) - ($wm_width / 2);
+		}
+		elseif ($this->wm_hor_alignment === 'R')
+		{
+			$x_axis += $this->orig_width - $wm_width;
 		}
 
 		//  Build the finalized image
-		if ($wm_img_type == 3 AND function_exists('imagealphablending'))
+		if ($wm_img_type === 3 && function_exists('imagealphablending'))
 		{
 			@imagealphablending($src_img, TRUE);
 		}
@@ -954,18 +1218,22 @@
 			imagecopymerge($src_img, $wm_img, $x_axis, $y_axis, 0, 0, $wm_width, $wm_height, $this->wm_opacity);
 		}
 
+		// We can preserve transparency for PNG images
+		if ($this->image_type === 3)
+		{
+			imagealphablending($src_img, FALSE);
+			imagesavealpha($src_img, TRUE);
+		}
+
 		//  Output the image
-		if ($this->dynamic_output == TRUE)
+		if ($this->dynamic_output === TRUE)
 		{
 			$this->image_display_gd($src_img);
 		}
-		else
-		{
-			if ( ! $this->image_save_gd($src_img))
+		elseif ( ! $this->image_save_gd($src_img)) // ... or save it
 			{
 				return FALSE;
 			}
-		}
 
 		imagedestroy($src_img);
 		imagedestroy($wm_img);
@@ -978,17 +1246,16 @@
 	/**
 	 * Watermark - Text Version
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function text_watermark()
+	public function text_watermark()
 	{
 		if ( ! ($src_img = $this->image_create_gd()))
 		{
 			return FALSE;
 		}
 
-		if ($this->wm_use_truetype == TRUE AND ! file_exists($this->wm_font_path))
+		if ($this->wm_use_truetype === TRUE && ! file_exists($this->wm_font_path))
 		{
 			$this->set_error('imglib_missing_font');
 			return FALSE;
@@ -997,21 +1264,6 @@
 		//  Fetch source image properties
 		$this->get_image_properties();
 
-		// Set RGB values for text and shadow
-		$this->wm_font_color	= str_replace('#', '', $this->wm_font_color);
-		$this->wm_shadow_color	= str_replace('#', '', $this->wm_shadow_color);
-
-		$R1 = hexdec(substr($this->wm_font_color, 0, 2));
-		$G1 = hexdec(substr($this->wm_font_color, 2, 2));
-		$B1 = hexdec(substr($this->wm_font_color, 4, 2));
-
-		$R2 = hexdec(substr($this->wm_shadow_color, 0, 2));
-		$G2 = hexdec(substr($this->wm_shadow_color, 2, 2));
-		$B2 = hexdec(substr($this->wm_shadow_color, 4, 2));
-
-		$txt_color	= imagecolorclosest($src_img, $R1, $G1, $B1);
-		$drp_color	= imagecolorclosest($src_img, $R2, $G2, $B2);
-
 		// Reverse the vertical offset
 		// When the image is positioned at the bottom
 		// we don't want the vertical offset to push it
@@ -1019,21 +1271,38 @@
 		// invert the offset.  Note: The horizontal
 		// offset flips itself automatically
 
-		if ($this->wm_vrt_alignment == 'B')
+		if ($this->wm_vrt_alignment === 'B')
+		{
 			$this->wm_vrt_offset = $this->wm_vrt_offset * -1;
+		}
 
-		if ($this->wm_hor_alignment == 'R')
+		if ($this->wm_hor_alignment === 'R')
+		{
 			$this->wm_hor_offset = $this->wm_hor_offset * -1;
+		}
 
 		// Set font width and height
 		// These are calculated differently depending on
 		// whether we are using the true type font or not
-		if ($this->wm_use_truetype == TRUE)
+		if ($this->wm_use_truetype === TRUE)
+		{
+			if (empty($this->wm_font_size))
 		{
-			if ($this->wm_font_size == '')
-				$this->wm_font_size = '17';
+				$this->wm_font_size = 17;
+			}
 
+			if (function_exists('imagettfbbox'))
+			{
+				$temp = imagettfbbox($this->wm_font_size, 0, $this->wm_font_path, $this->wm_text);
+				$temp = $temp[2] - $temp[0];
+
+				$fontwidth = $temp / strlen($this->wm_text);
+			}
+			else
+			{
 			$fontwidth  = $this->wm_font_size-($this->wm_font_size/4);
+			}
+
 			$fontheight = $this->wm_font_size;
 			$this->wm_vrt_offset += $this->wm_font_size;
 		}
@@ -1047,59 +1316,88 @@
 		$x_axis = $this->wm_hor_offset + $this->wm_padding;
 		$y_axis = $this->wm_vrt_offset + $this->wm_padding;
 
-		// Set verticle alignment
-		if ($this->wm_use_drop_shadow == FALSE)
+		if ($this->wm_use_drop_shadow === FALSE)
+		{
 			$this->wm_shadow_distance = 0;
+		}
 
-		$this->wm_vrt_alignment = strtoupper(substr($this->wm_vrt_alignment, 0, 1));
-		$this->wm_hor_alignment = strtoupper(substr($this->wm_hor_alignment, 0, 1));
+		$this->wm_vrt_alignment = strtoupper($this->wm_vrt_alignment[0]);
+		$this->wm_hor_alignment = strtoupper($this->wm_hor_alignment[0]);
 
-		switch ($this->wm_vrt_alignment)
+		// Set vertical alignment
+		if ($this->wm_vrt_alignment === 'M')
 		{
-			case	 "T" :
-				break;
-			case "M":	$y_axis += ($this->orig_height/2)+($fontheight/2);
-				break;
-			case "B":	$y_axis += ($this->orig_height - $fontheight - $this->wm_shadow_distance - ($fontheight/2));
-				break;
+			$y_axis += ($this->orig_height / 2) + ($fontheight / 2);
+		}
+		elseif ($this->wm_vrt_alignment === 'B')
+		{
+			$y_axis += $this->orig_height - $fontheight - $this->wm_shadow_distance - ($fontheight / 2);
+		}
+
+		// Set horizontal alignment
+		if ($this->wm_hor_alignment === 'R')
+		{
+			$x_axis += $this->orig_width - ($fontwidth * strlen($this->wm_text)) - $this->wm_shadow_distance;
+		}
+		elseif ($this->wm_hor_alignment === 'C')
+		{
+			$x_axis += floor(($this->orig_width - ($fontwidth * strlen($this->wm_text))) / 2);
 		}
 
+		if ($this->wm_use_drop_shadow)
+		{
+			// Offset from text
 		$x_shad = $x_axis + $this->wm_shadow_distance;
 		$y_shad = $y_axis + $this->wm_shadow_distance;
 
-		// Set horizontal alignment
-		switch ($this->wm_hor_alignment)
+			/* Set RGB values for shadow
+			 *
+			 * First character is #, so we don't really need it.
+			 * Get the rest of the string and split it into 2-length
+			 * hex values:
+			 */
+			$drp_color = str_split(substr($this->wm_shadow_color, 1, 6), 2);
+			$drp_color = imagecolorclosest($src_img, hexdec($drp_color[0]), hexdec($drp_color[1]), hexdec($drp_color[2]));
+
+			// Add the shadow to the source image
+			if ($this->wm_use_truetype)
 		{
-			case "L":
-				break;
-			case "R":
-						if ($this->wm_use_drop_shadow)
-							$x_shad += ($this->orig_width - $fontwidth*strlen($this->wm_text));
-							$x_axis += ($this->orig_width - $fontwidth*strlen($this->wm_text));
-				break;
-			case "C":
-						if ($this->wm_use_drop_shadow)
-							$x_shad += floor(($this->orig_width - $fontwidth*strlen($this->wm_text))/2);
-							$x_axis += floor(($this->orig_width  -$fontwidth*strlen($this->wm_text))/2);
-				break;
+				imagettftext($src_img, $this->wm_font_size, 0, $x_shad, $y_shad, $drp_color, $this->wm_font_path, $this->wm_text);
+			}
+			else
+			{
+				imagestring($src_img, $this->wm_font_size, $x_shad, $y_shad, $this->wm_text, $drp_color);
+			}
 		}
 
+		/* Set RGB values for text
+		 *
+		 * First character is #, so we don't really need it.
+		 * Get the rest of the string and split it into 2-length
+		 * hex values:
+		 */
+		$txt_color = str_split(substr($this->wm_font_color, 1, 6), 2);
+		$txt_color = imagecolorclosest($src_img, hexdec($txt_color[0]), hexdec($txt_color[1]), hexdec($txt_color[2]));
+
 		//  Add the text to the source image
 		if ($this->wm_use_truetype)
 		{
-			if ($this->wm_use_drop_shadow)
-				imagettftext($src_img, $this->wm_font_size, 0, $x_shad, $y_shad, $drp_color, $this->wm_font_path, $this->wm_text);
 				imagettftext($src_img, $this->wm_font_size, 0, $x_axis, $y_axis, $txt_color, $this->wm_font_path, $this->wm_text);
 		}
 		else
 		{
-			if ($this->wm_use_drop_shadow)
-				imagestring($src_img, $this->wm_font_size, $x_shad, $y_shad, $this->wm_text, $drp_color);
 				imagestring($src_img, $this->wm_font_size, $x_axis, $y_axis, $this->wm_text, $txt_color);
 		}
 
+		// We can preserve transparency for PNG images
+		if ($this->image_type === 3)
+		{
+			imagealphablending($src_img, FALSE);
+			imagesavealpha($src_img, TRUE);
+		}
+
 		//  Output the final image
-		if ($this->dynamic_output == TRUE)
+		if ($this->dynamic_output === TRUE)
 		{
 			$this->image_display_gd($src_img);
 		}
@@ -1121,18 +1419,21 @@
 	 * This simply creates an image resource handle
 	 * based on the type of image being processed
 	 *
-	 * @access	public
+	 * @param	string
 	 * @param	string
 	 * @return	resource
 	 */
-	function image_create_gd($path = '', $image_type = '')
+	public function image_create_gd($path = '', $image_type = '')
+	{
+		if ($path === '')
 	{
-		if ($path == '')
 			$path = $this->full_src_path;
+		}
 
-		if ($image_type == '')
+		if ($image_type === '')
+		{
 			$image_type = $this->image_type;
-
+		}
 
 		switch ($image_type)
 		{
@@ -1144,7 +1445,6 @@
 						}
 
 						return imagecreatefromgif($path);
-				break;
 			case 2 :
 						if ( ! function_exists('imagecreatefromjpeg'))
 						{
@@ -1153,7 +1453,6 @@
 						}
 
 						return imagecreatefromjpeg($path);
-				break;
 			case 3 :
 						if ( ! function_exists('imagecreatefrompng'))
 						{
@@ -1162,13 +1461,11 @@
 						}
 
 						return imagecreatefrompng($path);
-				break;
-
-		}
-
+			default:
 		$this->set_error(array('imglib_unsupported_imagecreate'));
 		return FALSE;
 	}
+	}
 
 	// --------------------------------------------------------------------
 
@@ -1178,11 +1475,10 @@
 	 * Takes an image resource as input and writes the file
 	 * to the specified destination
 	 *
-	 * @access	public
 	 * @param	resource
 	 * @return	bool
 	 */
-	function image_save_gd($resource)
+	public function image_save_gd($resource)
 	{
 		switch ($this->image_type)
 		{
@@ -1239,14 +1535,13 @@
 	/**
 	 * Dynamically outputs an image
 	 *
-	 * @access	public
 	 * @param	resource
 	 * @return	void
 	 */
-	function image_display_gd($resource)
+	public function image_display_gd($resource)
 	{
-		header("Content-Disposition: filename={$this->source_image};");
-		header("Content-Type: {$this->mime_type}");
+		header('Content-Disposition: filename='.$this->source_image.';');
+		header('Content-Type: '.$this->mime_type);
 		header('Content-Transfer-Encoding: binary');
 		header('Last-Modified: '.gmdate('D, d M Y H:i:s', time()).' GMT');
 
@@ -1254,7 +1549,7 @@
 		{
 			case 1		:	imagegif($resource);
 				break;
-			case 2		:	imagejpeg($resource, '', $this->quality);
+			case 2	:	imagejpeg($resource, NULL, $this->quality);
 				break;
 			case 3		:	imagepng($resource);
 				break;
@@ -1275,37 +1570,46 @@
 	 * This function lets us re-proportion the width/height
 	 * if users choose to maintain the aspect ratio when resizing.
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function image_reproportion()
+	public function image_reproportion()
+	{
+		if (($this->width === 0 && $this->height === 0) OR $this->orig_width === 0 OR $this->orig_height === 0
+			OR ( ! ctype_digit((string) $this->width) && ! ctype_digit((string) $this->height))
+			OR ! ctype_digit((string) $this->orig_width) OR ! ctype_digit((string) $this->orig_height))
 	{
-		if ( ! is_numeric($this->width) OR ! is_numeric($this->height) OR $this->width == 0 OR $this->height == 0)
-			return;
-
-		if ( ! is_numeric($this->orig_width) OR ! is_numeric($this->orig_height) OR $this->orig_width == 0 OR $this->orig_height == 0)
 			return;
+		}
 
-		$new_width	= ceil($this->orig_width*$this->height/$this->orig_height);
-		$new_height	= ceil($this->width*$this->orig_height/$this->orig_width);
-
-		$ratio = (($this->orig_height/$this->orig_width) - ($this->height/$this->width));
+		// Sanitize
+		$this->width = (int) $this->width;
+		$this->height = (int) $this->height;
 
-		if ($this->master_dim != 'width' AND $this->master_dim != 'height')
+		if ($this->master_dim !== 'width' && $this->master_dim !== 'height')
+		{
+			if ($this->width > 0 && $this->height > 0)
 		{
-			$this->master_dim = ($ratio < 0) ? 'width' : 'height';
+				$this->master_dim = ((($this->orig_height/$this->orig_width) - ($this->height/$this->width)) < 0)
+							? 'width' : 'height';
 		}
-
-		if (($this->width != $new_width) AND ($this->height != $new_height))
+			else
+			{
+				$this->master_dim = ($this->height === 0) ? 'width' : 'height';
+			}
+		}
+		elseif (($this->master_dim === 'width' && $this->width === 0)
+			OR ($this->master_dim === 'height' && $this->height === 0))
 		{
-			if ($this->master_dim == 'height')
+			return;
+		}
+
+		if ($this->master_dim === 'width')
 			{
-				$this->width = $new_width;
+			$this->height = (int) ceil($this->width*$this->orig_height/$this->orig_width);
 			}
 			else
 			{
-				$this->height = $new_height;
-			}
+			$this->width = (int) ceil($this->orig_width*$this->height/$this->orig_height);
 		}
 	}
 
@@ -1316,17 +1620,19 @@
 	 *
 	 * A helper function that gets info about the file
 	 *
-	 * @access	public
 	 * @param	string
+	 * @param	bool
 	 * @return	mixed
 	 */
-	function get_image_properties($path = '', $return = FALSE)
+	public function get_image_properties($path = '', $return = FALSE)
 	{
 		// For now we require GD but we should
 		// find a way to determine this using IM or NetPBM
 
-		if ($path == '')
+		if ($path === '')
+		{
 			$path = $this->full_src_path;
+		}
 
 		if ( ! file_exists($path))
 		{
@@ -1334,27 +1640,25 @@
 			return FALSE;
 		}
 
-		$vals = @getimagesize($path);
-
+		$vals = getimagesize($path);
 		$types = array(1 => 'gif', 2 => 'jpeg', 3 => 'png');
+		$mime = (isset($types[$vals[2]])) ? 'image/'.$types[$vals[2]] : 'image/jpg';
 
-		$mime = (isset($types[$vals['2']])) ? 'image/'.$types[$vals['2']] : 'image/jpg';
-
-		if ($return == TRUE)
+		if ($return === TRUE)
 		{
-			$v['width']			= $vals['0'];
-			$v['height']		= $vals['1'];
-			$v['image_type']	= $vals['2'];
-			$v['size_str']		= $vals['3'];
-			$v['mime_type']		= $mime;
-
-			return $v;
-		}
-
-		$this->orig_width	= $vals['0'];
-		$this->orig_height	= $vals['1'];
-		$this->image_type	= $vals['2'];
-		$this->size_str		= $vals['3'];
+			return array(
+					'width' =>	$vals[0],
+					'height' =>	$vals[1],
+					'image_type' =>	$vals[2],
+					'size_str' =>	$vals[3],
+					'mime_type' =>	$mime
+				);
+		}
+
+		$this->orig_width	= $vals[0];
+		$this->orig_height	= $vals[1];
+		$this->image_type	= $vals[2];
+		$this->size_str		= $vals[3];
 		$this->mime_type	= $mime;
 
 		return TRUE;
@@ -1376,11 +1680,10 @@
 	 *					'new_height'	=> ''
 	 *				  );
 	 *
-	 * @access	public
 	 * @param	array
 	 * @return	array
 	 */
-	function size_calculator($vals)
+	public function size_calculator($vals)
 	{
 		if ( ! is_array($vals))
 		{
@@ -1391,20 +1694,22 @@
 
 		foreach ($allowed as $item)
 		{
-			if ( ! isset($vals[$item]) OR $vals[$item] == '')
+			if (empty($vals[$item]))
+			{
 				$vals[$item] = 0;
 		}
+		}
 
-		if ($vals['width'] == 0 OR $vals['height'] == 0)
+		if ($vals['width'] === 0 OR $vals['height'] === 0)
 		{
 			return $vals;
 		}
 
-		if ($vals['new_width'] == 0)
+		if ($vals['new_width'] === 0)
 		{
 			$vals['new_width'] = ceil($vals['width']*$vals['new_height']/$vals['height']);
 		}
-		elseif ($vals['new_height'] == 0)
+		elseif ($vals['new_height'] === 0)
 		{
 			$vals['new_height'] = ceil($vals['new_width']*$vals['height']/$vals['width']);
 		}
@@ -1424,11 +1729,10 @@
 	 * $array['ext']  = '.jpg';
 	 * $array['name'] = 'my.cool';
 	 *
-	 * @access	public
 	 * @param	array
 	 * @return	array
 	 */
-	function explode_name($source_image)
+	public function explode_name($source_image)
 	{
 		$ext = strrchr($source_image, '.');
 		$name = ($ext === FALSE) ? $source_image : substr($source_image, 0, -strlen($ext));
@@ -1441,17 +1745,16 @@
 	/**
 	 * Is GD Installed?
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function gd_loaded()
+	public function gd_loaded()
 	{
 		if ( ! extension_loaded('gd'))
 		{
-			if ( ! dl('gd.so'))
-			{
-				return FALSE;
-			}
+			/* As it is stated in the PHP manual, dl() is not always available
+			 * and even if so - it could generate an E_WARNING message on failure
+			 */
+			return (function_exists('dl') && @dl('gd.so'));
 		}
 
 		return TRUE;
@@ -1462,17 +1765,14 @@
 	/**
 	 * Get GD version
 	 *
-	 * @access	public
 	 * @return	mixed
 	 */
-	function gd_version()
+	public function gd_version()
 	{
 		if (function_exists('gd_info'))
 		{
 			$gd_version = @gd_info();
-			$gd_version = preg_replace("/\D/", "", $gd_version['GD Version']);
-
-			return $gd_version;
+			return preg_replace('/\D/', '', $gd_version['GD Version']);
 		}
 
 		return FALSE;
@@ -1483,11 +1783,10 @@
 	/**
 	 * Set error message
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	void
 	 */
-	function set_error($msg)
+	public function set_error($msg)
 	{
 		$CI =& get_instance();
 		$CI->lang->load('imglib');
@@ -1496,15 +1795,14 @@
 		{
 			foreach ($msg as $val)
 			{
-
-				$msg = ($CI->lang->line($val) == FALSE) ? $val : $CI->lang->line($val);
+				$msg = ($CI->lang->line($val) === FALSE) ? $val : $CI->lang->line($val);
 				$this->error_msg[] = $msg;
 				log_message('error', $msg);
 			}
 		}
 		else
 		{
-			$msg = ($CI->lang->line($msg) == FALSE) ? $msg : $CI->lang->line($msg);
+			$msg = ($CI->lang->line($msg) === FALSE) ? $msg : $CI->lang->line($msg);
 			$this->error_msg[] = $msg;
 			log_message('error', $msg);
 		}
@@ -1515,23 +1813,13 @@
 	/**
 	 * Show error messages
 	 *
-	 * @access	public
+	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function display_errors($open = '<p>', $close = '</p>')
-	{
-		$str = '';
-		foreach ($this->error_msg as $val)
+	public function display_errors($open = '<p>', $close = '</p>')
 		{
-			$str .= $open.$val.$close;
+		return (count($this->error_msg) > 0) ? $open.implode($close.$open, $this->error_msg).$close : '';
 		}
 
-		return $str;
 	}
-
-}
-// END Image_lib Class
-
-/* End of file Image_lib.php */
-/* Location: ./system/libraries/Image_lib.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/index.html opensourcepos/system/libraries/index.html
--- pos-prod/system/libraries/index.html	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/index.html	2016-05-23 15:32:31.948838748 -0700
@@ -1,3 +1,4 @@
+<!DOCTYPE html>
 <html>
 <head>
 	<title>403 Forbidden</title>
Only in opensourcepos/system/libraries/Javascript: index.html
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/javascript/Jquery.php opensourcepos/system/libraries/Javascript/Jquery.php
--- pos-prod/system/libraries/javascript/Jquery.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Javascript/Jquery.php	2016-05-23 15:32:31.946838778 -0700
@@ -0,0 +1,1076 @@
+<?php
+/**
+ * CodeIgniter
+ *
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @package	CodeIgniter
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
+ * @filesource
+ */
+defined('BASEPATH') OR exit('No direct script access allowed');
+
+/**
+ * Jquery Class
+ *
+ * @package		CodeIgniter
+ * @subpackage	Libraries
+ * @category	Loader
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/javascript.html
+ */
+class CI_Jquery extends CI_Javascript {
+
+	/**
+	 * JavaScript directory location
+	 *
+	 * @var	string
+	 */
+	protected $_javascript_folder = 'js';
+
+	/**
+	 * JQuery code for load
+	 *
+	 * @var	array
+	 */
+	public $jquery_code_for_load = array();
+
+	/**
+	 * JQuery code for compile
+	 *
+	 * @var	array
+	 */
+	public $jquery_code_for_compile = array();
+
+	/**
+	 * JQuery corner active flag
+	 *
+	 * @var	bool
+	 */
+	public $jquery_corner_active = FALSE;
+
+	/**
+	 * JQuery table sorter active flag
+	 *
+	 * @var	bool
+	 */
+	public $jquery_table_sorter_active = FALSE;
+
+	/**
+	 * JQuery table sorter pager active
+	 *
+	 * @var	bool
+	 */
+	public $jquery_table_sorter_pager_active = FALSE;
+
+	/**
+	 * JQuery AJAX image
+	 *
+	 * @var	string
+	 */
+	public $jquery_ajax_img = '';
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @param	array	$params
+	 * @return	void
+	 */
+	public function __construct($params)
+	{
+		$this->CI =& get_instance();
+		extract($params);
+
+		if ($autoload === TRUE)
+		{
+			$this->script();
+		}
+
+		log_message('info', 'Jquery Class Initialized');
+	}
+
+	// --------------------------------------------------------------------
+	// Event Code
+	// --------------------------------------------------------------------
+
+	/**
+	 * Blur
+	 *
+	 * Outputs a jQuery blur event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _blur($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'blur');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Change
+	 *
+	 * Outputs a jQuery change event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _change($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'change');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Click
+	 *
+	 * Outputs a jQuery click event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @param	bool	whether or not to return false
+	 * @return	string
+	 */
+	protected function _click($element = 'this', $js = '', $ret_false = TRUE)
+	{
+		is_array($js) OR $js = array($js);
+
+		if ($ret_false)
+		{
+			$js[] = 'return false;';
+		}
+
+		return $this->_add_event($element, $js, 'click');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Double Click
+	 *
+	 * Outputs a jQuery dblclick event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _dblclick($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'dblclick');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Error
+	 *
+	 * Outputs a jQuery error event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _error($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'error');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Focus
+	 *
+	 * Outputs a jQuery focus event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _focus($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'focus');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Hover
+	 *
+	 * Outputs a jQuery hover event
+	 *
+	 * @param	string	- element
+	 * @param	string	- Javascript code for mouse over
+	 * @param	string	- Javascript code for mouse out
+	 * @return	string
+	 */
+	protected function _hover($element = 'this', $over = '', $out = '')
+	{
+		$event = "\n\t$(".$this->_prep_element($element).").hover(\n\t\tfunction()\n\t\t{\n\t\t\t{$over}\n\t\t}, \n\t\tfunction()\n\t\t{\n\t\t\t{$out}\n\t\t});\n";
+
+		$this->jquery_code_for_compile[] = $event;
+
+		return $event;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Keydown
+	 *
+	 * Outputs a jQuery keydown event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _keydown($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'keydown');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Keyup
+	 *
+	 * Outputs a jQuery keydown event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _keyup($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'keyup');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Load
+	 *
+	 * Outputs a jQuery load event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _load($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'load');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Mousedown
+	 *
+	 * Outputs a jQuery mousedown event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _mousedown($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'mousedown');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Mouse Out
+	 *
+	 * Outputs a jQuery mouseout event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _mouseout($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'mouseout');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Mouse Over
+	 *
+	 * Outputs a jQuery mouseover event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _mouseover($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'mouseover');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Mouseup
+	 *
+	 * Outputs a jQuery mouseup event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _mouseup($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'mouseup');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Output
+	 *
+	 * Outputs script directly
+	 *
+	 * @param	array	$array_js = array()
+	 * @return	void
+	 */
+	protected function _output($array_js = array())
+	{
+		if ( ! is_array($array_js))
+		{
+			$array_js = array($array_js);
+		}
+
+		foreach ($array_js as $js)
+		{
+			$this->jquery_code_for_compile[] = "\t".$js."\n";
+		}
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Resize
+	 *
+	 * Outputs a jQuery resize event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _resize($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'resize');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Scroll
+	 *
+	 * Outputs a jQuery scroll event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _scroll($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'scroll');
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Unload
+	 *
+	 * Outputs a jQuery unload event
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @return	string
+	 */
+	protected function _unload($element = 'this', $js = '')
+	{
+		return $this->_add_event($element, $js, 'unload');
+	}
+
+	// --------------------------------------------------------------------
+	// Effects
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add Class
+	 *
+	 * Outputs a jQuery addClass event
+	 *
+	 * @param	string	$element
+	 * @param	string	$class
+	 * @return	string
+	 */
+	protected function _addClass($element = 'this', $class = '')
+	{
+		$element = $this->_prep_element($element);
+		return '$('.$element.').addClass("'.$class.'");';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Animate
+	 *
+	 * Outputs a jQuery animate event
+	 *
+	 * @param	string	$element
+	 * @param	array	$params
+	 * @param	string	$speed	'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	$extra
+	 * @return	string
+	 */
+	protected function _animate($element = 'this', $params = array(), $speed = '', $extra = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		$animations = "\t\t\t";
+
+		foreach ($params as $param => $value)
+		{
+			$animations .= $param.": '".$value."', ";
+		}
+
+		$animations = substr($animations, 0, -2); // remove the last ", "
+
+		if ($speed !== '')
+		{
+			$speed = ', '.$speed;
+		}
+
+		if ($extra !== '')
+		{
+			$extra = ', '.$extra;
+		}
+
+		return "$({$element}).animate({\n$animations\n\t\t}".$speed.$extra.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fade In
+	 *
+	 * Outputs a jQuery hide event
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _fadeIn($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return "$({$element}).fadeIn({$speed}{$callback});";
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fade Out
+	 *
+	 * Outputs a jQuery hide event
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _fadeOut($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return '$('.$element.').fadeOut('.$speed.$callback.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Hide
+	 *
+	 * Outputs a jQuery hide action
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _hide($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return "$({$element}).hide({$speed}{$callback});";
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Remove Class
+	 *
+	 * Outputs a jQuery remove class event
+	 *
+	 * @param	string	$element
+	 * @param	string	$class
+	 * @return	string
+	 */
+	protected function _removeClass($element = 'this', $class = '')
+	{
+		$element = $this->_prep_element($element);
+		return '$('.$element.').removeClass("'.$class.'");';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Slide Up
+	 *
+	 * Outputs a jQuery slideUp event
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _slideUp($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return '$('.$element.').slideUp('.$speed.$callback.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Slide Down
+	 *
+	 * Outputs a jQuery slideDown event
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _slideDown($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return '$('.$element.').slideDown('.$speed.$callback.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Slide Toggle
+	 *
+	 * Outputs a jQuery slideToggle event
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _slideToggle($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return '$('.$element.').slideToggle('.$speed.$callback.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Toggle
+	 *
+	 * Outputs a jQuery toggle event
+	 *
+	 * @param	string	- element
+	 * @return	string
+	 */
+	protected function _toggle($element = 'this')
+	{
+		$element = $this->_prep_element($element);
+		return '$('.$element.').toggle();';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Toggle Class
+	 *
+	 * Outputs a jQuery toggle class event
+	 *
+	 * @param	string	$element
+	 * @param	string	$class
+	 * @return	string
+	 */
+	protected function _toggleClass($element = 'this', $class = '')
+	{
+		$element = $this->_prep_element($element);
+		return '$('.$element.').toggleClass("'.$class.'");';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Show
+	 *
+	 * Outputs a jQuery show event
+	 *
+	 * @param	string	- element
+	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	- Javascript callback function
+	 * @return	string
+	 */
+	protected function _show($element = 'this', $speed = '', $callback = '')
+	{
+		$element = $this->_prep_element($element);
+		$speed = $this->_validate_speed($speed);
+
+		if ($callback !== '')
+		{
+			$callback = ", function(){\n{$callback}\n}";
+		}
+
+		return '$('.$element.').show('.$speed.$callback.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Updater
+	 *
+	 * An Ajax call that populates the designated DOM node with
+	 * returned content
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	the controller to run the call against
+	 * @param	string	optional parameters
+	 * @return	string
+	 */
+
+	protected function _updater($container = 'this', $controller = '', $options = '')
+	{
+		$container = $this->_prep_element($container);
+		$controller = (strpos('://', $controller) === FALSE) ? $controller : $this->CI->config->site_url($controller);
+
+		// ajaxStart and ajaxStop are better choices here... but this is a stop gap
+		if ($this->CI->config->item('javascript_ajax_img') === '')
+		{
+			$loading_notifier = 'Loading...';
+		}
+		else
+		{
+			$loading_notifier = '<img src="'.$this->CI->config->slash_item('base_url').$this->CI->config->item('javascript_ajax_img').'" alt="Loading" />';
+		}
+
+		$updater = '$('.$container.").empty();\n" // anything that was in... get it out
+			."\t\t$(".$container.').prepend("'.$loading_notifier."\");\n"; // to replace with an image
+
+		$request_options = '';
+		if ($options !== '')
+		{
+			$request_options .= ', {'
+					.(is_array($options) ? "'".implode("', '", $options)."'" : "'".str_replace(':', "':'", $options)."'")
+					.'}';
+		}
+
+		return $updater."\t\t$($container).load('$controller'$request_options);";
+	}
+
+	// --------------------------------------------------------------------
+	// Pre-written handy stuff
+	// --------------------------------------------------------------------
+
+	/**
+	 * Zebra tables
+	 *
+	 * @param	string	$class
+	 * @param	string	$odd
+	 * @param	string	$hover
+	 * @return	string
+	 */
+	protected function _zebraTables($class = '', $odd = 'odd', $hover = '')
+	{
+		$class = ($class !== '') ? '.'.$class : '';
+		$zebra = "\t\$(\"table{$class} tbody tr:nth-child(even)\").addClass(\"{$odd}\");";
+
+		$this->jquery_code_for_compile[] = $zebra;
+
+		if ($hover !== '')
+		{
+			$hover = $this->hover("table{$class} tbody tr", "$(this).addClass('hover');", "$(this).removeClass('hover');");
+		}
+
+		return $zebra;
+	}
+
+	// --------------------------------------------------------------------
+	// Plugins
+	// --------------------------------------------------------------------
+
+	/**
+	 * Corner Plugin
+	 *
+	 * @link	http://www.malsup.com/jquery/corner/
+	 * @param	string	$element
+	 * @param	string	$corner_style
+	 * @return	string
+	 */
+	public function corner($element = '', $corner_style = '')
+	{
+		// may want to make this configurable down the road
+		$corner_location = '/plugins/jquery.corner.js';
+
+		if ($corner_style !== '')
+		{
+			$corner_style = '"'.$corner_style.'"';
+		}
+
+		return '$('.$this->_prep_element($element).').corner('.$corner_style.');';
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Modal window
+	 *
+	 * Load a thickbox modal window
+	 *
+	 * @param	string	$src
+	 * @param	bool	$relative
+	 * @return	void
+	 */
+	public function modal($src, $relative = FALSE)
+	{
+		$this->jquery_code_for_load[] = $this->external($src, $relative);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Effect
+	 *
+	 * Load an Effect library
+	 *
+	 * @param	string	$src
+	 * @param	bool	$relative
+	 * @return	void
+	 */
+	public function effect($src, $relative = FALSE)
+	{
+		$this->jquery_code_for_load[] = $this->external($src, $relative);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Plugin
+	 *
+	 * Load a plugin library
+	 *
+	 * @param	string	$src
+	 * @param	bool	$relative
+	 * @return	void
+	 */
+	public function plugin($src, $relative = FALSE)
+	{
+		$this->jquery_code_for_load[] = $this->external($src, $relative);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * UI
+	 *
+	 * Load a user interface library
+	 *
+	 * @param	string	$src
+	 * @param	bool	$relative
+	 * @return	void
+	 */
+	public function ui($src, $relative = FALSE)
+	{
+		$this->jquery_code_for_load[] = $this->external($src, $relative);
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Sortable
+	 *
+	 * Creates a jQuery sortable
+	 *
+	 * @param	string	$element
+	 * @param	array	$options
+	 * @return	string
+	 */
+	public function sortable($element, $options = array())
+	{
+		if (count($options) > 0)
+		{
+			$sort_options = array();
+			foreach ($options as $k=>$v)
+			{
+				$sort_options[] = "\n\t\t".$k.': '.$v;
+			}
+			$sort_options = implode(',', $sort_options);
+		}
+		else
+		{
+			$sort_options = '';
+		}
+
+		return '$('.$this->_prep_element($element).').sortable({'.$sort_options."\n\t});";
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Table Sorter Plugin
+	 *
+	 * @param	string	table name
+	 * @param	string	plugin location
+	 * @return	string
+	 */
+	public function tablesorter($table = '', $options = '')
+	{
+		$this->jquery_code_for_compile[] = "\t$(".$this->_prep_element($table).').tablesorter('.$options.");\n";
+	}
+
+	// --------------------------------------------------------------------
+	// Class functions
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add Event
+	 *
+	 * Constructs the syntax for an event, and adds to into the array for compilation
+	 *
+	 * @param	string	The element to attach the event to
+	 * @param	string	The code to execute
+	 * @param	string	The event to pass
+	 * @return	string
+	 */
+	protected function _add_event($element, $js, $event)
+	{
+		if (is_array($js))
+		{
+			$js = implode("\n\t\t", $js);
+		}
+
+		$event = "\n\t$(".$this->_prep_element($element).').'.$event."(function(){\n\t\t{$js}\n\t});\n";
+		$this->jquery_code_for_compile[] = $event;
+		return $event;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Compile
+	 *
+	 * As events are specified, they are stored in an array
+	 * This function compiles them all for output on a page
+	 *
+	 * @param	string	$view_var
+	 * @param	bool	$script_tags
+	 * @return	void
+	 */
+	protected function _compile($view_var = 'script_foot', $script_tags = TRUE)
+	{
+		// External references
+		$external_scripts = implode('', $this->jquery_code_for_load);
+		$this->CI->load->vars(array('library_src' => $external_scripts));
+
+		if (count($this->jquery_code_for_compile) === 0)
+		{
+			// no inline references, let's just return
+			return;
+		}
+
+		// Inline references
+		$script = '$(document).ready(function() {'."\n"
+			.implode('', $this->jquery_code_for_compile)
+			.'});';
+
+		$output = ($script_tags === FALSE) ? $script : $this->inline($script);
+
+		$this->CI->load->vars(array($view_var => $output));
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Clear Compile
+	 *
+	 * Clears the array of script events collected for output
+	 *
+	 * @return	void
+	 */
+	protected function _clear_compile()
+	{
+		$this->jquery_code_for_compile = array();
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Document Ready
+	 *
+	 * A wrapper for writing document.ready()
+	 *
+	 * @param	array	$js
+	 * @return	void
+	 */
+	protected function _document_ready($js)
+	{
+		is_array($js) OR $js = array($js);
+
+		foreach ($js as $script)
+		{
+			$this->jquery_code_for_compile[] = $script;
+		}
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Script Tag
+	 *
+	 * Outputs the script tag that loads the jquery.js file into an HTML document
+	 *
+	 * @param	string	$library_src
+	 * @param	bool	$relative
+	 * @return	string
+	 */
+	public function script($library_src = '', $relative = FALSE)
+	{
+		$library_src = $this->external($library_src, $relative);
+		$this->jquery_code_for_load[] = $library_src;
+		return $library_src;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Prep Element
+	 *
+	 * Puts HTML element in quotes for use in jQuery code
+	 * unless the supplied element is the Javascript 'this'
+	 * object, in which case no quotes are added
+	 *
+	 * @param	string
+	 * @return	string
+	 */
+	protected function _prep_element($element)
+	{
+		if ($element !== 'this')
+		{
+			$element = '"'.$element.'"';
+		}
+
+		return $element;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Validate Speed
+	 *
+	 * Ensures the speed parameter is valid for jQuery
+	 *
+	 * @param	string
+	 * @return	string
+	 */
+	protected function _validate_speed($speed)
+	{
+		if (in_array($speed, array('slow', 'normal', 'fast')))
+		{
+			return '"'.$speed.'"';
+		}
+		elseif (preg_match('/[^0-9]/', $speed))
+		{
+			return '';
+		}
+
+		return $speed;
+	}
+
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Javascript.php opensourcepos/system/libraries/Javascript.php
--- pos-prod/system/libraries/Javascript.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Javascript.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Javascript Class
@@ -21,20 +43,34 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Javascript
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/javascript.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/javascript.html
+ * @deprecated	3.0.0	This was never a good idea in the first place.
  */
 class CI_Javascript {
 
-	var $_javascript_location = 'js';
+	/**
+	 * JavaScript location
+	 *
+	 * @var	string
+	 */
+	protected $_javascript_location = 'js';
+
+	// --------------------------------------------------------------------
 
+	/**
+	 * Constructor
+	 *
+	 * @param	array	$params
+	 * @return	void
+	 */
 	public function __construct($params = array())
 	{
 		$defaults = array('js_library_driver' => 'jquery', 'autoload' => TRUE);
 
 		foreach ($defaults as $key => $val)
 		{
-			if (isset($params[$key]) && $params[$key] !== "")
+			if (isset($params[$key]) && $params[$key] !== '')
 			{
 				$defaults[$key] = $params[$key];
 			}
@@ -49,7 +85,7 @@
 		// make js to refer to current library
 		$this->js =& $this->CI->$js_library_driver;
 
-		log_message('debug', "Javascript Class Initialized and loaded.  Driver used: $js_library_driver");
+		log_message('info', 'Javascript Class Initialized and loaded. Driver used: '.$js_library_driver);
 	}
 
 	// --------------------------------------------------------------------	
@@ -61,12 +97,11 @@
 	 *
 	 * Outputs a javascript library blur event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function blur($element = 'this', $js = '')
+	public function blur($element = 'this', $js = '')
 	{
 		return $this->js->_blur($element, $js);
 	}
@@ -78,12 +113,11 @@
 	 *
 	 * Outputs a javascript library change event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function change($element = 'this', $js = '')
+	public function change($element = 'this', $js = '')
 	{
 		return $this->js->_change($element, $js);
 	}
@@ -95,13 +129,12 @@
 	 *
 	 * Outputs a javascript library click event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
-	 * @param	boolean	whether or not to return false
+	 * @param	bool	whether or not to return false
 	 * @return	string
 	 */
-	function click($element = 'this', $js = '', $ret_false = TRUE)
+	public function click($element = 'this', $js = '', $ret_false = TRUE)
 	{
 		return $this->js->_click($element, $js, $ret_false);
 	}
@@ -113,12 +146,11 @@
 	 *
 	 * Outputs a javascript library dblclick event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function dblclick($element = 'this', $js = '')
+	public function dblclick($element = 'this', $js = '')
 	{
 		return $this->js->_dblclick($element, $js);
 	}
@@ -130,12 +162,11 @@
 	 *
 	 * Outputs a javascript library error event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function error($element = 'this', $js = '')
+	public function error($element = 'this', $js = '')
 	{
 		return $this->js->_error($element, $js);
 	}
@@ -147,14 +178,13 @@
 	 *
 	 * Outputs a javascript library focus event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function focus($element = 'this', $js = '')
+	public function focus($element = 'this', $js = '')
 	{
-		return $this->js->__add_event($focus, $js);
+		return $this->js->_focus($element, $js);
 	}
 
 	// --------------------------------------------------------------------
@@ -164,15 +194,14 @@
 	 *
 	 * Outputs a javascript library hover event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- Javascript code for mouse over
 	 * @param	string	- Javascript code for mouse out
 	 * @return	string
 	 */
-	function hover($element = 'this', $over, $out)
+	public function hover($element = 'this', $over = '', $out = '')
 	{
-		return $this->js->__hover($element, $over, $out);
+		return $this->js->_hover($element, $over, $out);
 	}
 
 	// --------------------------------------------------------------------
@@ -182,12 +211,11 @@
 	 *
 	 * Outputs a javascript library keydown event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function keydown($element = 'this', $js = '')
+	public function keydown($element = 'this', $js = '')
 	{
 		return $this->js->_keydown($element, $js);
 	}
@@ -199,12 +227,11 @@
 	 *
 	 * Outputs a javascript library keydown event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function keyup($element = 'this', $js = '')
+	public function keyup($element = 'this', $js = '')
 	{
 		return $this->js->_keyup($element, $js);
 	}
@@ -216,12 +243,11 @@
 	 *
 	 * Outputs a javascript library load event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function load($element = 'this', $js = '')
+	public function load($element = 'this', $js = '')
 	{
 		return $this->js->_load($element, $js);
 	}
@@ -233,12 +259,11 @@
 	 *
 	 * Outputs a javascript library mousedown event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function mousedown($element = 'this', $js = '')
+	public function mousedown($element = 'this', $js = '')
 	{
 		return $this->js->_mousedown($element, $js);
 	}
@@ -250,12 +275,11 @@
 	 *
 	 * Outputs a javascript library mouseout event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function mouseout($element = 'this', $js = '')
+	public function mouseout($element = 'this', $js = '')
 	{
 		return $this->js->_mouseout($element, $js);
 	}
@@ -267,12 +291,11 @@
 	 *
 	 * Outputs a javascript library mouseover event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function mouseover($element = 'this', $js = '')
+	public function mouseover($element = 'this', $js = '')
 	{
 		return $this->js->_mouseover($element, $js);
 	}
@@ -284,12 +307,11 @@
 	 *
 	 * Outputs a javascript library mouseup event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function mouseup($element = 'this', $js = '')
+	public function mouseup($element = 'this', $js = '')
 	{
 		return $this->js->_mouseup($element, $js);
 	}
@@ -301,11 +323,10 @@
 	 *
 	 * Outputs the called javascript to the screen
 	 *
-	 * @access	public
 	 * @param	string	The code to output
 	 * @return	string
 	 */
-	function output($js)
+	public function output($js)
 	{
 		return $this->js->_output($js);
 	}
@@ -317,12 +338,10 @@
 	 *
 	 * Outputs a javascript library mouseup event
 	 *
-	 * @access	public
-	 * @param	string	The element to attach the event to
-	 * @param	string	The code to execute
+	 * @param	string	$js	Code to execute
 	 * @return	string
 	 */
-	function ready($js)
+	public function ready($js)
 	{
 		return $this->js->_document_ready($js);
 	}
@@ -334,12 +353,11 @@
 	 *
 	 * Outputs a javascript library resize event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function resize($element = 'this', $js = '')
+	public function resize($element = 'this', $js = '')
 	{
 		return $this->js->_resize($element, $js);
 	}
@@ -351,12 +369,11 @@
 	 *
 	 * Outputs a javascript library scroll event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function scroll($element = 'this', $js = '')
+	public function scroll($element = 'this', $js = '')
 	{
 		return $this->js->_scroll($element, $js);
 	}
@@ -368,12 +385,11 @@
 	 *
 	 * Outputs a javascript library unload event
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
 	 * @param	string	The code to execute
 	 * @return	string
 	 */
-	function unload($element = 'this', $js = '')
+	public function unload($element = 'this', $js = '')
 	{
 		return $this->js->_unload($element, $js);
 	}
@@ -388,12 +403,11 @@
 	 *
 	 * Outputs a javascript library addClass event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- Class to add
 	 * @return	string
 	 */
-	function addClass($element = 'this', $class = '')
+	public function addClass($element = 'this', $class = '')
 	{
 		return $this->js->_addClass($element, $class);
 	}
@@ -405,13 +419,13 @@
 	 *
 	 * Outputs a javascript library animate event
 	 *
-	 * @access	public
-	 * @param	string	- element
-	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
-	 * @param	string	- Javascript callback function
+	 * @param	string	$element = 'this'
+	 * @param	array	$params = array()
+	 * @param	mixed	$speed			'slow', 'normal', 'fast', or time in milliseconds
+	 * @param	string	$extra
 	 * @return	string
 	 */
-	function animate($element = 'this', $params = array(), $speed = '', $extra = '')
+	public function animate($element = 'this', $params = array(), $speed = '', $extra = '')
 	{
 		return $this->js->_animate($element, $params, $speed, $extra);
 	}
@@ -423,13 +437,12 @@
 	 *
 	 * Outputs a javascript library hide event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function fadeIn($element = 'this', $speed = '', $callback = '')
+	public function fadeIn($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_fadeIn($element, $speed, $callback);
 	}
@@ -441,13 +454,12 @@
 	 *
 	 * Outputs a javascript library hide event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function fadeOut($element = 'this', $speed = '', $callback = '')
+	public function fadeOut($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_fadeOut($element, $speed, $callback);
 	}
@@ -458,13 +470,12 @@
 	 *
 	 * Outputs a javascript library slideUp event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function slideUp($element = 'this', $speed = '', $callback = '')
+	public function slideUp($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_slideUp($element, $speed, $callback);
 
@@ -477,12 +488,11 @@
 	 *
 	 * Outputs a javascript library removeClass event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- Class to add
 	 * @return	string
 	 */
-	function removeClass($element = 'this', $class = '')
+	public function removeClass($element = 'this', $class = '')
 	{
 		return $this->js->_removeClass($element, $class);
 	}
@@ -494,13 +504,12 @@
 	 *
 	 * Outputs a javascript library slideDown event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function slideDown($element = 'this', $speed = '', $callback = '')
+	public function slideDown($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_slideDown($element, $speed, $callback);
 	}
@@ -512,13 +521,12 @@
 	 *
 	 * Outputs a javascript library slideToggle event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function slideToggle($element = 'this', $speed = '', $callback = '')
+	public function slideToggle($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_slideToggle($element, $speed, $callback);
 
@@ -531,13 +539,12 @@
 	 *
 	 * Outputs a javascript library hide action
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function hide($element = 'this', $speed = '', $callback = '')
+	public function hide($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_hide($element, $speed, $callback);
 	}
@@ -549,11 +556,10 @@
 	 *
 	 * Outputs a javascript library toggle event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @return	string
 	 */
-	function toggle($element = 'this')
+	public function toggle($element = 'this')
 	{
 		return $this->js->_toggle($element);
 
@@ -566,11 +572,11 @@
 	 *
 	 * Outputs a javascript library toggle class event
 	 *
-	 * @access	public
-	 * @param	string	- element
+	 * @param	string	$element = 'this'
+	 * @param	string	$class = ''
 	 * @return	string
 	 */
-	function toggleClass($element = 'this', $class='')
+	public function toggleClass($element = 'this', $class = '')
 	{
 		return $this->js->_toggleClass($element, $class);
 	}
@@ -582,13 +588,12 @@
 	 *
 	 * Outputs a javascript library show event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function show($element = 'this', $speed = '', $callback = '')
+	public function show($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_show($element, $speed, $callback);
 	}
@@ -601,24 +605,25 @@
 	 *
 	 * gather together all script needing to be output
 	 *
-	 * @access	public
-	 * @param	string	The element to attach the event to
+	 * @param	string	$view_var
+	 * @param	bool	$script_tags
 	 * @return	string
 	 */
-	function compile($view_var = 'script_foot', $script_tags = TRUE)
+	public function compile($view_var = 'script_foot', $script_tags = TRUE)
 	{
 		$this->js->_compile($view_var, $script_tags);
 	}
 
+	// --------------------------------------------------------------------
+
 	/**
 	 * Clear Compile
 	 *
 	 * Clears any previous javascript collected for output
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function clear_compile()
+	public function clear_compile()
 	{
 		$this->js->_clear_compile();
 	}
@@ -630,25 +635,22 @@
 	 *
 	 * Outputs a <script> tag with the source as an external js file
 	 *
-	 * @access	public
-	 * @param	string	The element to attach the event to
+	 * @param	string	$external_file
+	 * @param	bool	$relative
 	 * @return	string
 	 */
-	function external($external_file = '', $relative = FALSE)
+	public function external($external_file = '', $relative = FALSE)
 	{
 		if ($external_file !== '')
 		{
 			$this->_javascript_location = $external_file;
 		}
-		else
-		{
-			if ($this->CI->config->item('javascript_location') != '')
+		elseif ($this->CI->config->item('javascript_location') !== '')
 			{
 				$this->_javascript_location = $this->CI->config->item('javascript_location');
 			}
-		}
 
-		if ($relative === TRUE OR strncmp($external_file, 'http://', 7) == 0 OR strncmp($external_file, 'https://', 8) == 0)
+		if ($relative === TRUE OR strpos($external_file, 'http://') === 0 OR strpos($external_file, 'https://') === 0)
 		{
 			$str = $this->_open_script($external_file);
 		}
@@ -661,8 +663,7 @@
 			$str = $this->_open_script($this->CI->config->slash_item('base_url').$this->_javascript_location.$external_file);
 		}
 
-		$str .= $this->_close_script();
-		return $str;
+		return $str.$this->_close_script();
 	}
 
 	// --------------------------------------------------------------------
@@ -672,18 +673,15 @@
 	 *
 	 * Outputs a <script> tag
 	 *
-	 * @access	public
 	 * @param	string	The element to attach the event to
-	 * @param	boolean	If a CDATA section should be added
+	 * @param	bool	If a CDATA section should be added
 	 * @return	string
 	 */
-	function inline($script, $cdata = TRUE)
+	public function inline($script, $cdata = TRUE)
 	{
-		$str = $this->_open_script();
-		$str .= ($cdata) ? "\n// <![CDATA[\n{$script}\n// ]]>\n" : "\n{$script}\n";
-		$str .= $this->_close_script();
-
-		return $str;
+		return $this->_open_script()
+			. ($cdata ? "\n// <![CDATA[\n".$script."\n// ]]>\n" : "\n".$script."\n")
+			. $this->_close_script();
 	}
 	
 	// --------------------------------------------------------------------
@@ -693,15 +691,13 @@
 	 *
 	 * Outputs an opening <script>
 	 *
-	 * @access	private
 	 * @param	string
 	 * @return	string
 	 */
-	function _open_script($src = '')
+	protected function _open_script($src = '')
 	{
-		$str = '<script type="text/javascript" charset="'.strtolower($this->CI->config->item('charset')).'"';
-		$str .= ($src == '') ? '>' : ' src="'.$src.'">';
-		return $str;
+		return '<script type="text/javascript" charset="'.strtolower($this->CI->config->item('charset')).'"'
+			.($src === '' ? '>' : ' src="'.$src.'">');
 	}
 
 	// --------------------------------------------------------------------
@@ -711,34 +707,29 @@
 	 *
 	 * Outputs an closing </script>
 	 *
-	 * @access	private
 	 * @param	string
 	 * @return	string
 	 */
-	function _close_script($extra = "\n")
+	protected function _close_script($extra = "\n")
 	{
-		return "</script>$extra";
+		return '</script>'.$extra;
 	}
 
-
-	// --------------------------------------------------------------------
 	// --------------------------------------------------------------------
 	// AJAX-Y STUFF - still a testbed
 	// --------------------------------------------------------------------
-	// --------------------------------------------------------------------
 
 	/**
 	 * Update
 	 *
 	 * Outputs a javascript library slideDown event
 	 *
-	 * @access	public
 	 * @param	string	- element
 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
 	 * @param	string	- Javascript callback function
 	 * @return	string
 	 */
-	function update($element = 'this', $speed = '', $callback = '')
+	public function update($element = 'this', $speed = '', $callback = '')
 	{
 		return $this->js->_updater($element, $speed, $callback);
 	}
@@ -754,15 +745,15 @@
 	 * @param	bool	match array types (defaults to objects)
 	 * @return	string	a json formatted string
 	 */
-	function generate_json($result = NULL, $match_array_type = FALSE)
+	public function generate_json($result = NULL, $match_array_type = FALSE)
 	{
 		// JSON data can optionally be passed to this function
 		// either as a database result object or an array, or a user supplied array
-		if ( ! is_null($result))
+		if ($result !== NULL)
 		{
 			if (is_object($result))
 			{
-				$json_result = $result->result_array();
+				$json_result = is_callable(array($result, 'result_array')) ? $result->result_array() : (array) $result;
 			}
 			elseif (is_array($result))
 			{
@@ -781,9 +772,9 @@
 		$json = array();
 		$_is_assoc = TRUE;
 
-		if ( ! is_array($json_result) AND empty($json_result))
+		if ( ! is_array($json_result) && empty($json_result))
 		{
-			show_error("Generate JSON Failed - Illegal key, value pair.");
+			show_error('Generate JSON Failed - Illegal key, value pair.');
 		}
 		elseif ($match_array_type)
 		{
@@ -804,7 +795,7 @@
 
 		$json = implode(',', $json);
 
-		return $_is_assoc ? "{".$json."}" : "[".$json."]";
+		return $_is_assoc ? '{'.$json.'}' : '['.$json.']';
 
 	}
 
@@ -815,11 +806,10 @@
 	 *
 	 * Checks for an associative array
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @param	array
+	 * @return	bool
 	 */
-	function _is_associative_array($arr)
+	protected function _is_associative_array($arr)
 	{
 		foreach (array_keys($arr) as $key => $val)
 		{
@@ -839,13 +829,13 @@
 	 *
 	 * Ensures a standard json value and escapes values
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @param	mixed	$result
+	 * @param	bool	$is_key = FALSE
+	 * @return	string
 	 */
-	function _prep_args($result, $is_key = FALSE)
+	protected function _prep_args($result, $is_key = FALSE)
 	{
-		if (is_null($result))
+		if ($result === NULL)
 		{
 			return 'null';
 		}
@@ -863,9 +853,4 @@
 		}
 	}
 
-	// --------------------------------------------------------------------
 }
-// END Javascript Class
-
-/* End of file Javascript.php */
-/* Location: ./system/libraries/Javascript.php */
\ No newline at end of file
Only in pos-prod/system/libraries: Log.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Migration.php opensourcepos/system/libraries/Migration.php
--- pos-prod/system/libraries/Migration.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Migration.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php defined('BASEPATH') OR exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
  * @author		EllisLab Dev Team
- * @copyright	Copyright (c) 2006 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 3.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Migration Class
@@ -29,16 +51,72 @@
  */
 class CI_Migration {
 
+	/**
+	 * Whether the library is enabled
+	 *
+	 * @var bool
+	 */
 	protected $_migration_enabled = FALSE;
+
+	/**
+	 * Migration numbering type
+	 *
+	 * @var	bool
+	 */
+	protected $_migration_type = 'sequential';
+
+	/**
+	 * Path to migration classes
+	 *
+	 * @var string
+	 */
 	protected $_migration_path = NULL;
+
+	/**
+	 * Current migration version
+	 *
+	 * @var mixed
+	 */
 	protected $_migration_version = 0;
 
+	/**
+	 * Database table with migration info
+	 *
+	 * @var string
+	 */
+	protected $_migration_table = 'migrations';
+
+	/**
+	 * Whether to automatically run migrations
+	 *
+	 * @var	bool
+	 */
+	protected $_migration_auto_latest = FALSE;
+
+	/**
+	 * Migration basename regex
+	 *
+	 * @var bool
+	 */
+	protected $_migration_regex = NULL;
+
+	/**
+	 * Error message
+	 *
+	 * @var string
+	 */
 	protected $_error_string = '';
 
+	/**
+	 * Initialize Migration Class
+	 *
+	 * @param	array	$config
+	 * @return	void
+	 */
 	public function __construct($config = array())
 	{
-		# Only run this constructor on main library load
-		if (get_parent_class($this) !== FALSE)
+		// Only run this constructor on main library load
+		if ( ! in_array(get_class($this), array('CI_Migration', config_item('subclass_prefix').'Migration'), TRUE))
 		{
 			return;
 		}
@@ -48,7 +126,7 @@
 			$this->{'_' . $key} = $val;
 		}
 
-		log_message('debug', 'Migrations class initialized');
+		log_message('info', 'Migrations Class Initialized');
 
 		// Are they trying to use migrations while it is disabled?
 		if ($this->_migration_enabled !== TRUE)
@@ -57,7 +135,7 @@
 		}
 
 		// If not set, set it
-		$this->_migration_path == '' AND $this->_migration_path = APPPATH . 'migrations/';
+		$this->_migration_path !== '' OR $this->_migration_path = APPPATH.'migrations/';
 
 		// Add trailing slash if not set
 		$this->_migration_path = rtrim($this->_migration_path, '/').'/';
@@ -68,16 +146,39 @@
 		// They'll probably be using dbforge
 		$this->load->dbforge();
 
+		// Make sure the migration table name was set.
+		if (empty($this->_migration_table))
+		{
+			show_error('Migrations configuration file (migration.php) must have "migration_table" set.');
+		}
+
+		// Migration basename regex
+		$this->_migration_regex = ($this->_migration_type === 'timestamp')
+			? '/^\d{14}_(\w+)$/'
+			: '/^\d{3}_(\w+)$/';
+
+		// Make sure a valid migration numbering type was set.
+		if ( ! in_array($this->_migration_type, array('sequential', 'timestamp')))
+		{
+			show_error('An invalid migration numbering type was specified: '.$this->_migration_type);
+		}
+
 		// If the migrations table is missing, make it
-		if ( ! $this->db->table_exists('migrations'))
+		if ( ! $this->db->table_exists($this->_migration_table))
 		{
 			$this->dbforge->add_field(array(
-				'version' => array('type' => 'INT', 'constraint' => 3),
+				'version' => array('type' => 'BIGINT', 'constraint' => 20),
 			));
 
-			$this->dbforge->create_table('migrations', TRUE);
+			$this->dbforge->create_table($this->_migration_table, TRUE);
 
-			$this->db->insert('migrations', array('version' => 0));
+			$this->db->insert($this->_migration_table, array('version' => 0));
+		}
+
+		// Do we auto migrate to the latest migration?
+		if ($this->_migration_auto_latest === TRUE && ! $this->latest())
+		{
+			show_error($this->error_string());
 		}
 	}
 
@@ -89,118 +190,97 @@
 	 * Calls each migration step required to get to the schema version of
 	 * choice
 	 *
-	 * @param	int	Target schema version
-	 * @return	mixed	TRUE if already latest, FALSE if failed, int if upgraded
+	 * @param	string	$target_version	Target schema version
+	 * @return	mixed	TRUE if no migrations are found, current version string on success, FALSE on failure
 	 */
 	public function version($target_version)
 	{
-		$start = $current_version = $this->_get_version();
-		$stop = $target_version;
+		// Note: We use strings, so that timestamp versions work on 32-bit systems
+		$current_version = $this->_get_version();
 
-		if ($target_version > $current_version)
+		if ($this->_migration_type === 'sequential')
 		{
-			// Moving Up
-			++$start;
-			++$stop;
-			$step = 1;
+			$target_version = sprintf('%03d', $target_version);
 		}
 		else
 		{
-			// Moving Down
-			$step = -1;
+			$target_version = (string) $target_version;
 		}
 
-		$method = ($step === 1) ? 'up' : 'down';
-		$migrations = array();
+		$migrations = $this->find_migrations();
 
-		// We now prepare to actually DO the migrations
-		// But first let's make sure that everything is the way it should be
-		for ($i = $start; $i != $stop; $i += $step)
+		if ($target_version > 0 && ! isset($migrations[$target_version]))
 		{
-			$f = glob(sprintf($this->_migration_path . '%03d_*.php', $i));
-
-			// Only one migration per step is permitted
-			if (count($f) > 1)
-			{
-				$this->_error_string = sprintf($this->lang->line('migration_multiple_version'), $i);
+			$this->_error_string = sprintf($this->lang->line('migration_not_found'), $target_version);
 				return FALSE;
 			}
 
-			// Migration step not found
-			if (count($f) == 0)
+		if ($target_version > $current_version)
 			{
-				// If trying to migrate up to a version greater than the last
-				// existing one, migrate to the last one.
-				if ($step == 1)
+			// Moving Up
+			$method = 'up';
+		}
+		else
 				{
-					break;
+			// Moving Down, apply in reverse order
+			$method = 'down';
+			krsort($migrations);
 				}
 
-				// If trying to migrate down but we're missing a step,
-				// something must definitely be wrong.
-				$this->_error_string = sprintf($this->lang->line('migration_not_found'), $i);
-				return FALSE;
+		if (empty($migrations))
+		{
+			return TRUE;
 			}
 
-			$file = basename($f[0]);
-			$name = basename($f[0], '.php');
+		$previous = FALSE;
 
-			// Filename validations
-			if (preg_match('/^\d{3}_(\w+)$/', $name, $match))
+		// Validate all available migrations, and run the ones within our target range
+		foreach ($migrations as $number => $file)
 			{
-				$match[1] = strtolower($match[1]);
-
-				// Cannot repeat a migration at different steps
-				if (in_array($match[1], $migrations))
+			// Check for sequence gaps
+			if ($this->_migration_type === 'sequential' && $previous !== FALSE && abs($number - $previous) > 1)
 				{
-					$this->_error_string = sprintf($this->lang->line('migration_multiple_version'), $match[1]);
+				$this->_error_string = sprintf($this->lang->line('migration_sequence_gap'), $number);
 					return FALSE;
 				}
 
-				include $f[0];
-				$class = 'Migration_' . ucfirst($match[1]);
+			include_once($file);
+			$class = 'Migration_'.ucfirst(strtolower($this->_get_migration_name(basename($file, '.php'))));
 
-				if ( ! class_exists($class))
+			// Validate the migration file structure
+			if ( ! class_exists($class, FALSE))
 				{
 					$this->_error_string = sprintf($this->lang->line('migration_class_doesnt_exist'), $class);
 					return FALSE;
 				}
 
-				if ( ! is_callable(array($class, $method)))
+			$previous = $number;
+
+			// Run migrations that are inside the target range
+			if (
+				($method === 'up'   && $number > $current_version && $number <= $target_version) OR
+				($method === 'down' && $number <= $current_version && $number > $target_version)
+			)
+			{
+				$instance = new $class();
+				if ( ! is_callable(array($instance, $method)))
 				{
 					$this->_error_string = sprintf($this->lang->line('migration_missing_'.$method.'_method'), $class);
 					return FALSE;
 				}
 
-				$migrations[] = $match[1];
-			}
-			else
-			{
-				$this->_error_string = sprintf($this->lang->line('migration_invalid_filename'), $file);
-				return FALSE;
-			}
+				log_message('debug', 'Migrating '.$method.' from version '.$current_version.' to version '.$number);
+				call_user_func(array($instance, $method));
+				$current_version = $number;
+				$this->_update_version($current_version);
 		}
-
-		log_message('debug', 'Current migration: ' . $current_version);
-
-		$version = $i + ($step == 1 ? -1 : 0);
-
-		// If there is nothing to do so quit
-		if ($migrations === array())
-		{
-			return TRUE;
 		}
 
-		log_message('debug', 'Migrating from ' . $method . ' to version ' . $version);
-
-		// Loop through the migrations
-		foreach ($migrations AS $migration)
+		// This is necessary when moving down, since the the last migration applied
+		// will be the down() method for the next migration up from the target
+		if ($current_version <> $target_version)
 		{
-			// Run the migration class
-			$class = 'Migration_' . ucfirst(strtolower($migration));
-			call_user_func(array(new $class, $method));
-
-			$current_version += $step;
+			$current_version = $target_version;
 			$this->_update_version($current_version);
 		}
 
@@ -212,13 +292,15 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set's the schema to the latest migration
+	 * Sets the schema to the latest migration
 	 *
-	 * @return	mixed	true if already latest, false if failed, int if upgraded
+	 * @return	mixed	Current version string on success, FALSE on failure
 	 */
 	public function latest()
 	{
-		if ( ! $migrations = $this->find_migrations())
+		$migrations = $this->find_migrations();
+
+		if (empty($migrations))
 		{
 			$this->_error_string = $this->lang->line('migration_none_found');
 			return false;
@@ -227,16 +309,16 @@
 		$last_migration = basename(end($migrations));
 
 		// Calculate the last migration step from existing migration
-		// filenames and procceed to the standard version migration
-		return $this->version((int) substr($last_migration, 0, 3));
+		// filenames and proceed to the standard version migration
+		return $this->version($this->_get_migration_number($last_migration));
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set's the schema to the migration version set in config
+	 * Sets the schema to the migration version set in config
 	 *
-	 * @return	mixed	true if already current, false if failed, int if upgraded
+	 * @return	mixed	TRUE if no migrations are found, current version string on success, FALSE on failure
 	 */
 	public function current()
 	{
@@ -258,28 +340,66 @@
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set's the schema to the latest migration
+	 * Retrieves list of available migration scripts
 	 *
-	 * @return	mixed	true if already latest, false if failed, int if upgraded
+	 * @return	array	list of migration file paths sorted by version
 	 */
-	protected function find_migrations()
+	public function find_migrations()
 	{
+		$migrations = array();
+
 		// Load all *_*.php files in the migrations path
-		$files = glob($this->_migration_path . '*_*.php');
-		$file_count = count($files);
+		foreach (glob($this->_migration_path.'*_*.php') as $file)
+		{
+			$name = basename($file, '.php');
 
-		for ($i = 0; $i < $file_count; $i++)
+			// Filter out non-migration files
+			if (preg_match($this->_migration_regex, $name))
 		{
-			// Mark wrongly formatted files as false for later filtering
-			$name = basename($files[$i], '.php');
-			if ( ! preg_match('/^\d{3}_(\w+)$/', $name))
+				$number = $this->_get_migration_number($name);
+
+				// There cannot be duplicate migration numbers
+				if (isset($migrations[$number]))
 			{
-				$files[$i] = FALSE;
+					$this->_error_string = sprintf($this->lang->line('migration_multiple_version'), $number);
+					show_error($this->_error_string);
+				}
+
+				$migrations[$number] = $file;
+			}
+		}
+
+		ksort($migrations);
+		return $migrations;
 			}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Extracts the migration number from a filename
+	 *
+	 * @param	string	$migration
+	 * @return	string	Numeric portion of a migration filename
+	 */
+	protected function _get_migration_number($migration)
+	{
+		return sscanf($migration, '%[0-9]+', $number)
+			? $number : '0';
 		}
 
-		sort($files);
-		return $files;
+	// --------------------------------------------------------------------
+
+	/**
+	 * Extracts the migration class name from a filename
+	 *
+	 * @param	string	$migration
+	 * @return	string	text portion of a migration filename
+	 */
+	protected function _get_migration_name($migration)
+	{
+		$parts = explode('_', $migration);
+		array_shift($parts);
+		return implode('_', $parts);
 	}
 
 	// --------------------------------------------------------------------
@@ -287,12 +407,12 @@
 	/**
 	 * Retrieves current schema version
 	 *
-	 * @return	int	Current Migration
+	 * @return	string	Current migration version
 	 */
 	protected function _get_version()
 	{
-		$row = $this->db->get('migrations')->row();
-		return $row ? $row->version : 0;
+		$row = $this->db->select('version')->get($this->_migration_table)->row();
+		return $row ? $row->version : '0';
 	}
 
 	// --------------------------------------------------------------------
@@ -300,13 +420,13 @@
 	/**
 	 * Stores the current schema version
 	 *
-	 * @param	int	Migration reached
-	 * @return	bool
+	 * @param	string	$migration	Migration reached
+	 * @return	void
 	 */
-	protected function _update_version($migrations)
+	protected function _update_version($migration)
 	{
-		return $this->db->update('migrations', array(
-			'version' => $migrations
+		$this->db->update($this->_migration_table, array(
+			'version' => $migration
 		));
 	}
 
@@ -315,7 +435,7 @@
 	/**
 	 * Enable the use of CI super-global
 	 *
-	 * @param	mixed	$var
+	 * @param	string	$var
 	 * @return	mixed
 	 */
 	public function __get($var)
@@ -324,6 +444,3 @@
 	}
 
 }
-
-/* End of file Migration.php */
-/* Location: ./system/libraries/Migration.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Pagination.php opensourcepos/system/libraries/Pagination.php
--- pos-prod/system/libraries/Pagination.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Pagination.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Pagination Class
@@ -21,64 +43,304 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Pagination
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/pagination.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/pagination.html
  */
 class CI_Pagination {
 
-	var $base_url			= ''; // The page we are linking to
-	var $prefix				= ''; // A custom prefix added to the path.
-	var $suffix				= ''; // A custom suffix added to the path.
-
-	var $total_rows			=  0; // Total number of items (database results)
-	var $per_page			= 10; // Max number of items you want shown per page
-	var $num_links			=  2; // Number of "digit" links to show before/after the currently viewed page
-	var $cur_page			=  0; // The current page being viewed
-	var $use_page_numbers	= FALSE; // Use page number for segment instead of offset
-	var $first_link			= '&lsaquo; First';
-	var $next_link			= '&gt;';
-	var $prev_link			= '&lt;';
-	var $last_link			= 'Last &rsaquo;';
-	var $uri_segment		= 3;
-	var $full_tag_open		= '';
-	var $full_tag_close		= '';
-	var $first_tag_open		= '';
-	var $first_tag_close	= '&nbsp;';
-	var $last_tag_open		= '&nbsp;';
-	var $last_tag_close		= '';
-	var $first_url			= ''; // Alternative URL for the First Page.
-	var $cur_tag_open		= '&nbsp;<strong>';
-	var $cur_tag_close		= '</strong>';
-	var $next_tag_open		= '&nbsp;';
-	var $next_tag_close		= '&nbsp;';
-	var $prev_tag_open		= '&nbsp;';
-	var $prev_tag_close		= '';
-	var $num_tag_open		= '&nbsp;';
-	var $num_tag_close		= '';
-	var $page_query_string	= FALSE;
-	var $query_string_segment = 'per_page';
-	var $display_pages		= TRUE;
-	var $anchor_class		= '';
+	/**
+	 * Base URL
+	 *
+	 * The page that we're linking to
+	 *
+	 * @var	string
+	 */
+	protected $base_url		= '';
+
+	/**
+	 * Prefix
+	 *
+	 * @var	string
+	 */
+	protected $prefix = '';
+
+	/**
+	 * Suffix
+	 *
+	 * @var	string
+	 */
+	protected $suffix = '';
+
+	/**
+	 * Total number of items
+	 *
+	 * @var	int
+	 */
+	protected $total_rows = 0;
+
+	/**
+	 * Number of links to show
+	 *
+	 * Relates to "digit" type links shown before/after
+	 * the currently viewed page.
+	 *
+	 * @var	int
+	 */
+	protected $num_links = 2;
+
+	/**
+	 * Items per page
+	 *
+	 * @var	int
+	 */
+	public $per_page = 10;
+
+	/**
+	 * Current page
+	 *
+	 * @var	int
+	 */
+	public $cur_page = 0;
+
+	/**
+	 * Use page numbers flag
+	 *
+	 * Whether to use actual page numbers instead of an offset
+	 *
+	 * @var	bool
+	 */
+	protected $use_page_numbers = FALSE;
+
+	/**
+	 * First link
+	 *
+	 * @var	string
+	 */
+	protected $first_link = '&lsaquo; First';
+
+	/**
+	 * Next link
+	 *
+	 * @var	string
+	 */
+	protected $next_link = '&gt;';
+
+	/**
+	 * Previous link
+	 *
+	 * @var	string
+	 */
+	protected $prev_link = '&lt;';
+
+	/**
+	 * Last link
+	 *
+	 * @var	string
+	 */
+	protected $last_link = 'Last &rsaquo;';
+
+	/**
+	 * URI Segment
+	 *
+	 * @var	int
+	 */
+	protected $uri_segment = 0;
+
+	/**
+	 * Full tag open
+	 *
+	 * @var	string
+	 */
+	protected $full_tag_open = '';
+
+	/**
+	 * Full tag close
+	 *
+	 * @var	string
+	 */
+	protected $full_tag_close = '';
+
+	/**
+	 * First tag open
+	 *
+	 * @var	string
+	 */
+	protected $first_tag_open = '';
+
+	/**
+	 * First tag close
+	 *
+	 * @var	string
+	 */
+	protected $first_tag_close = '';
+
+	/**
+	 * Last tag open
+	 *
+	 * @var	string
+	 */
+	protected $last_tag_open = '';
+
+	/**
+	 * Last tag close
+	 *
+	 * @var	string
+	 */
+	protected $last_tag_close = '';
+
+	/**
+	 * First URL
+	 *
+	 * An alternative URL for the first page
+	 *
+	 * @var	string
+	 */
+	protected $first_url = '';
+
+	/**
+	 * Current tag open
+	 *
+	 * @var	string
+	 */
+	protected $cur_tag_open = '<strong>';
+
+	/**
+	 * Current tag close
+	 *
+	 * @var	string
+	 */
+	protected $cur_tag_close = '</strong>';
+
+	/**
+	 * Next tag open
+	 *
+	 * @var	string
+	 */
+	protected $next_tag_open = '';
+
+	/**
+	 * Next tag close
+	 *
+	 * @var	string
+	 */
+	protected $next_tag_close = '';
+
+	/**
+	 * Previous tag open
+	 *
+	 * @var	string
+	 */
+	protected $prev_tag_open = '';
+
+	/**
+	 * Previous tag close
+	 *
+	 * @var	string
+	 */
+	protected $prev_tag_close = '';
+
+	/**
+	 * Number tag open
+	 *
+	 * @var	string
+	 */
+	protected $num_tag_open = '';
+
+	/**
+	 * Number tag close
+	 *
+	 * @var	string
+	 */
+	protected $num_tag_close = '';
+
+	/**
+	 * Page query string flag
+	 *
+	 * @var	bool
+	 */
+	protected $page_query_string = FALSE;
+
+	/**
+	 * Query string segment
+	 *
+	 * @var	string
+	 */
+	protected $query_string_segment = 'per_page';
+
+	/**
+	 * Display pages flag
+	 *
+	 * @var	bool
+	 */
+	protected $display_pages = TRUE;
+
+	/**
+	 * Attributes
+	 *
+	 * @var	string
+	 */
+	protected $_attributes = '';
+
+	/**
+	 * Link types
+	 *
+	 * "rel" attribute
+	 *
+	 * @see	CI_Pagination::_attr_rel()
+	 * @var	array
+	 */
+	protected $_link_types = array();
+
+	/**
+	 * Reuse query string flag
+	 *
+	 * @var	bool
+	 */
+	protected $reuse_query_string = FALSE;
+
+	/**
+	 * Use global URL suffix flag
+	 *
+	 * @var	bool
+	 */
+	protected $use_global_url_suffix = FALSE;
+
+	/**
+	 * Data page attribute
+	 *
+	 * @var	string
+	 */
+	protected $data_page_attr = 'data-ci-pagination-page';
+
+	/**
+	 * CI Singleton
+	 *
+	 * @var	object
+	 */
+	protected $CI;
+
+	// --------------------------------------------------------------------
 
 	/**
 	 * Constructor
 	 *
-	 * @access	public
-	 * @param	array	initialization parameters
+	 * @param	array	$params	Initialization parameters
+	 * @return	void
 	 */
 	public function __construct($params = array())
 	{
-		if (count($params) > 0)
+		$this->CI =& get_instance();
+		$this->CI->load->language('pagination');
+		foreach (array('first_link', 'next_link', 'prev_link', 'last_link') as $key)
 		{
-			$this->initialize($params);
-		}
-
-		if ($this->anchor_class != '')
+			if (($val = $this->CI->lang->line('pagination_'.$key)) !== FALSE)
 		{
-			$this->anchor_class = 'class="'.$this->anchor_class.'" ';
+				$this->$key = $val;
+			}
 		}
 
-		log_message('debug', "Pagination Class Initialized");
+		$this->initialize($params);
+		log_message('info', 'Pagination Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -86,22 +348,45 @@
 	/**
 	 * Initialize Preferences
 	 *
-	 * @access	public
-	 * @param	array	initialization parameters
-	 * @return	void
+	 * @param	array	$params	Initialization parameters
+	 * @return	CI_Pagination
 	 */
-	function initialize($params = array())
+	public function initialize(array $params = array())
 	{
-		if (count($params) > 0)
+		isset($params['attributes']) OR $params['attributes'] = array();
+		if (is_array($params['attributes']))
 		{
+			$this->_parse_attributes($params['attributes']);
+			unset($params['attributes']);
+		}
+
+		// Deprecated legacy support for the anchor_class option
+		// Should be removed in CI 3.1+
+		if (isset($params['anchor_class']))
+		{
+			empty($params['anchor_class']) OR $attributes['class'] = $params['anchor_class'];
+			unset($params['anchor_class']);
+		}
+
 			foreach ($params as $key => $val)
 			{
-				if (isset($this->$key))
+			if (property_exists($this, $key))
 				{
 					$this->$key = $val;
 				}
 			}
+
+		if ($this->CI->config->item('enable_query_strings') === TRUE)
+		{
+			$this->page_query_string = TRUE;
 		}
+
+		if ($this->use_global_url_suffix === TRUE)
+		{
+			$this->suffix = $this->CI->config->item('url_suffix');
+		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -109,80 +394,143 @@
 	/**
 	 * Generate the pagination links
 	 *
-	 * @access	public
 	 * @return	string
 	 */
-	function create_links()
+	public function create_links()
 	{
 		// If our item count or per-page total is zero there is no need to continue.
+		// Note: DO NOT change the operator to === here!
 		if ($this->total_rows == 0 OR $this->per_page == 0)
 		{
 			return '';
 		}
 
 		// Calculate the total number of pages
-		$num_pages = ceil($this->total_rows / $this->per_page);
+		$num_pages = (int) ceil($this->total_rows / $this->per_page);
 
 		// Is there only one page? Hm... nothing more to do here then.
-		if ($num_pages == 1)
+		if ($num_pages === 1)
 		{
 			return '';
 		}
 
-		// Set the base page index for starting page number
-		if ($this->use_page_numbers)
+		// Check the user defined number of links.
+		$this->num_links = (int) $this->num_links;
+
+		if ($this->num_links < 0)
 		{
-			$base_page = 1;
+			show_error('Your number of links must be a non-negative number.');
+		}
+
+		// Keep any existing query string items.
+		// Note: Has nothing to do with any other query string option.
+		if ($this->reuse_query_string === TRUE)
+		{
+			$get = $this->CI->input->get();
+
+			// Unset the controll, method, old-school routing options
+			unset($get['c'], $get['m'], $get[$this->query_string_segment]);
 		}
 		else
 		{
-			$base_page = 0;
+			$get = array();
 		}
 
-		// Determine the current page number.
-		$CI =& get_instance();
+		// Put together our base and first URLs.
+		// Note: DO NOT append to the properties as that would break successive calls
+		$base_url = trim($this->base_url);
+		$first_url = $this->first_url;
+
+		$query_string = '';
+		$query_string_sep = (strpos($base_url, '?') === FALSE) ? '?' : '&amp;';
 
-		if ($CI->config->item('enable_query_strings') === TRUE OR $this->page_query_string === TRUE)
+		// Are we using query strings?
+		if ($this->page_query_string === TRUE)
 		{
-			if ($CI->input->get($this->query_string_segment) != $base_page)
+			// If a custom first_url hasn't been specified, we'll create one from
+			// the base_url, but without the page item.
+			if ($first_url === '')
 			{
-				$this->cur_page = $CI->input->get($this->query_string_segment);
+				$first_url = $base_url;
 
-				// Prep the current page - no funny business!
-				$this->cur_page = (int) $this->cur_page;
+				// If we saved any GET items earlier, make sure they're appended.
+				if ( ! empty($get))
+				{
+					$first_url .= $query_string_sep.http_build_query($get);
 			}
 		}
+
+			// Add the page segment to the end of the query string, where the
+			// page number will be appended.
+			$base_url .= $query_string_sep.http_build_query(array_merge($get, array($this->query_string_segment => '')));
+		}
 		else
 		{
-			if ($CI->uri->segment($this->uri_segment) != $base_page)
+			// Standard segment mode.
+			// Generate our saved query string to append later after the page number.
+			if ( ! empty($get))
 			{
-				$this->cur_page = $CI->uri->segment($this->uri_segment);
+				$query_string = $query_string_sep.http_build_query($get);
+				$this->suffix .= $query_string;
+			}
 
-				// Prep the current page - no funny business!
-				$this->cur_page = (int) $this->cur_page;
+			// Does the base_url have the query string in it?
+			// If we're supposed to save it, remove it so we can append it later.
+			if ($this->reuse_query_string === TRUE && ($base_query_pos = strpos($base_url, '?')) !== FALSE)
+			{
+				$base_url = substr($base_url, 0, $base_query_pos);
 			}
+
+			if ($first_url === '')
+			{
+				$first_url = $base_url.$query_string;
 		}
 		
-		// Set current page to 1 if using page numbers instead of offset
-		if ($this->use_page_numbers AND $this->cur_page == 0)
+			$base_url = rtrim($base_url, '/').'/';
+		}
+
+		// Determine the current page number.
+		$base_page = ($this->use_page_numbers) ? 1 : 0;
+
+		// Are we using query strings?
+		if ($this->page_query_string === TRUE)
 		{
-			$this->cur_page = $base_page;
+			$this->cur_page = $this->CI->input->get($this->query_string_segment);
+		}
+		elseif (empty($this->cur_page))
+		{
+			// Default to the last segment number if one hasn't been defined.
+			if ($this->uri_segment === 0)
+			{
+				$this->uri_segment = count($this->CI->uri->segment_array());
 		}
 
-		$this->num_links = (int)$this->num_links;
+			$this->cur_page = $this->CI->uri->segment($this->uri_segment);
 
-		if ($this->num_links < 1)
+			// Remove any specified prefix/suffix from the segment.
+			if ($this->prefix !== '' OR $this->suffix !== '')
+			{
+				$this->cur_page = str_replace(array($this->prefix, $this->suffix), '', $this->cur_page);
+			}
+		}
+		else
 		{
-			show_error('Your number of links must be a positive number.');
+			$this->cur_page = (string) $this->cur_page;
 		}
 
-		if ( ! is_numeric($this->cur_page))
+		// If something isn't quite right, back to the default base page.
+		if ( ! ctype_digit($this->cur_page) OR ($this->use_page_numbers && (int) $this->cur_page === 0))
 		{
 			$this->cur_page = $base_page;
 		}
+		else
+		{
+			// Make sure we're using integers for comparisons later.
+			$this->cur_page = (int) $this->cur_page;
+		}
 
 		// Is the page number beyond the result range?
-		// If so we show the last page
+		// If so, we show the last page.
 		if ($this->use_page_numbers)
 		{
 			if ($this->cur_page > $num_pages)
@@ -190,67 +538,56 @@
 				$this->cur_page = $num_pages;
 			}
 		}
-		else
-		{
-			if ($this->cur_page > $this->total_rows)
+		elseif ($this->cur_page > $this->total_rows)
 			{
 				$this->cur_page = ($num_pages - 1) * $this->per_page;
 			}
-		}
 
 		$uri_page_number = $this->cur_page;
 		
+		// If we're using offset instead of page numbers, convert it
+		// to a page number, so we can generate the surrounding number links.
 		if ( ! $this->use_page_numbers)
 		{
-			$this->cur_page = floor(($this->cur_page/$this->per_page) + 1);
+			$this->cur_page = (int) floor(($this->cur_page/$this->per_page) + 1);
 		}
 
 		// Calculate the start and end numbers. These determine
-		// which number to start and end the digit links with
+		// which number to start and end the digit links with.
 		$start = (($this->cur_page - $this->num_links) > 0) ? $this->cur_page - ($this->num_links - 1) : 1;
 		$end   = (($this->cur_page + $this->num_links) < $num_pages) ? $this->cur_page + $this->num_links : $num_pages;
 
-		// Is pagination being used over GET or POST?  If get, add a per_page query
-		// string. If post, add a trailing slash to the base URL if needed
-		if ($CI->config->item('enable_query_strings') === TRUE OR $this->page_query_string === TRUE)
-		{
-			$this->base_url = rtrim($this->base_url).'&amp;'.$this->query_string_segment.'=';
-		}
-		else
-		{
-			$this->base_url = rtrim($this->base_url, '/') .'/';
-		}
-
 		// And here we go...
 		$output = '';
 
-		// Render the "First" link
-		if  ($this->first_link !== FALSE AND $this->cur_page > ($this->num_links + 1))
+		// Render the "First" link.
+		if ($this->first_link !== FALSE && $this->cur_page > ($this->num_links + 1 + ! $this->num_links))
 		{
-			$first_url = ($this->first_url == '') ? $this->base_url : $this->first_url;
-			$output .= $this->first_tag_open.'<a '.$this->anchor_class.'href="'.$first_url.'">'.$this->first_link.'</a>'.$this->first_tag_close;
-		}
+			// Take the general parameters, and squeeze this pagination-page attr in for JS frameworks.
+			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, 1);
 
-		// Render the "previous" link
-		if  ($this->prev_link !== FALSE AND $this->cur_page != 1)
-		{
-			if ($this->use_page_numbers)
-			{
-				$i = $uri_page_number - 1;
+			$output .= $this->first_tag_open.'<a href="'.$first_url.'"'.$attributes.$this->_attr_rel('start').'>'
+				.$this->first_link.'</a>'.$this->first_tag_close;
 			}
-			else
+
+		// Render the "Previous" link.
+		if ($this->prev_link !== FALSE && $this->cur_page !== 1)
 			{
-				$i = $uri_page_number - $this->per_page;
-			}
+			$i = ($this->use_page_numbers) ? $uri_page_number - 1 : $uri_page_number - $this->per_page;
 
-			if ($i == 0 && $this->first_url != '')
+			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, ($this->cur_page - 1));
+
+			if ($i === $base_page)
 			{
-				$output .= $this->prev_tag_open.'<a '.$this->anchor_class.'href="'.$this->first_url.'">'.$this->prev_link.'</a>'.$this->prev_tag_close;
+				// First page
+				$output .= $this->prev_tag_open.'<a href="'.$first_url.'"'.$attributes.$this->_attr_rel('prev').'>'
+					.$this->prev_link.'</a>'.$this->prev_tag_close;
 			}
 			else
 			{
-				$i = ($i == 0) ? '' : $this->prefix.$i.$this->suffix;
-				$output .= $this->prev_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$i.'">'.$this->prev_link.'</a>'.$this->prev_tag_close;
+				$append = $this->prefix.$i.$this->suffix;
+				$output .= $this->prev_tag_open.'<a href="'.$base_url.$append.'"'.$attributes.$this->_attr_rel('prev').'>'
+					.$this->prev_link.'</a>'.$this->prev_tag_close;
 			}
 
 		}
@@ -261,80 +598,104 @@
 			// Write the digit links
 			for ($loop = $start -1; $loop <= $end; $loop++)
 			{
-				if ($this->use_page_numbers)
-				{
-					$i = $loop;
-				}
-				else
-				{
-					$i = ($loop * $this->per_page) - $this->per_page;
-				}
+				$i = ($this->use_page_numbers) ? $loop : ($loop * $this->per_page) - $this->per_page;
+
+				$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, $loop);
 
 				if ($i >= $base_page)
 				{
-					if ($this->cur_page == $loop)
+					if ($this->cur_page === $loop)
 					{
-						$output .= $this->cur_tag_open.$loop.$this->cur_tag_close; // Current page
+						// Current page
+						$output .= $this->cur_tag_open.$loop.$this->cur_tag_close;
 					}
-					else
+					elseif ($i === $base_page)
 					{
-						$n = ($i == $base_page) ? '' : $i;
-
-						if ($n == '' && $this->first_url != '')
-						{
-							$output .= $this->num_tag_open.'<a '.$this->anchor_class.'href="'.$this->first_url.'">'.$loop.'</a>'.$this->num_tag_close;
+						// First page
+						$output .= $this->num_tag_open.'<a href="'.$first_url.'"'.$attributes.$this->_attr_rel('start').'>'
+							.$loop.'</a>'.$this->num_tag_close;
 						}
 						else
 						{
-							$n = ($n == '') ? '' : $this->prefix.$n.$this->suffix;
-
-							$output .= $this->num_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$n.'">'.$loop.'</a>'.$this->num_tag_close;
-						}
+						$append = $this->prefix.$i.$this->suffix;
+						$output .= $this->num_tag_open.'<a href="'.$base_url.$append.'"'.$attributes.'>'
+							.$loop.'</a>'.$this->num_tag_close;
 					}
 				}
 			}
 		}
 
 		// Render the "next" link
-		if ($this->next_link !== FALSE AND $this->cur_page < $num_pages)
-		{
-			if ($this->use_page_numbers)
-			{
-				$i = $this->cur_page + 1;
-			}
-			else
+		if ($this->next_link !== FALSE && $this->cur_page < $num_pages)
 			{
-				$i = ($this->cur_page * $this->per_page);
-			}
+			$i = ($this->use_page_numbers) ? $this->cur_page + 1 : $this->cur_page * $this->per_page;
+
+			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, $this->cur_page + 1);
 
-			$output .= $this->next_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$this->prefix.$i.$this->suffix.'">'.$this->next_link.'</a>'.$this->next_tag_close;
+			$output .= $this->next_tag_open.'<a href="'.$base_url.$this->prefix.$i.$this->suffix.'"'.$attributes
+				.$this->_attr_rel('next').'>'.$this->next_link.'</a>'.$this->next_tag_close;
 		}
 
 		// Render the "Last" link
-		if ($this->last_link !== FALSE AND ($this->cur_page + $this->num_links) < $num_pages)
-		{
-			if ($this->use_page_numbers)
+		if ($this->last_link !== FALSE && ($this->cur_page + $this->num_links + ! $this->num_links) < $num_pages)
 			{
-				$i = $num_pages;
-			}
-			else
-			{
-				$i = (($num_pages * $this->per_page) - $this->per_page);
-			}
-			$output .= $this->last_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$this->prefix.$i.$this->suffix.'">'.$this->last_link.'</a>'.$this->last_tag_close;
+			$i = ($this->use_page_numbers) ? $num_pages : ($num_pages * $this->per_page) - $this->per_page;
+
+			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, $num_pages);
+
+			$output .= $this->last_tag_open.'<a href="'.$base_url.$this->prefix.$i.$this->suffix.'"'.$attributes.'>'
+				.$this->last_link.'</a>'.$this->last_tag_close;
 		}
 
 		// Kill double slashes.  Note: Sometimes we can end up with a double slash
 		// in the penultimate link so we'll kill all double slashes.
-		$output = preg_replace("#([^:])//+#", "\\1/", $output);
+		$output = preg_replace('#([^:"])//+#', '\\1/', $output);
 
 		// Add the wrapper HTML if exists
-		$output = $this->full_tag_open.$output.$this->full_tag_close;
+		return $this->full_tag_open.$output.$this->full_tag_close;
+	}
+
+	// --------------------------------------------------------------------
 
-		return $output;
+	/**
+	 * Parse attributes
+	 *
+	 * @param	array	$attributes
+	 * @return	void
+	 */
+	protected function _parse_attributes($attributes)
+	{
+		isset($attributes['rel']) OR $attributes['rel'] = TRUE;
+		$this->_link_types = ($attributes['rel'])
+			? array('start' => 'start', 'prev' => 'prev', 'next' => 'next')
+			: array();
+		unset($attributes['rel']);
+
+		$this->_attributes = '';
+		foreach ($attributes as $key => $value)
+		{
+			$this->_attributes .= ' '.$key.'="'.$value.'"';
 	}
 }
-// END Pagination Class
 
-/* End of file Pagination.php */
-/* Location: ./system/libraries/Pagination.php */
\ No newline at end of file
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add "rel" attribute
+	 *
+	 * @link	http://www.w3.org/TR/html5/links.html#linkTypes
+	 * @param	string	$type
+	 * @return	string
+	 */
+	protected function _attr_rel($type)
+	{
+		if (isset($this->_link_types[$type]))
+		{
+			unset($this->_link_types[$type]);
+			return ' rel="'.$type.'"';
+		}
+
+		return '';
+	}
+
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Parser.php opensourcepos/system/libraries/Parser.php
--- pos-prod/system/libraries/Parser.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Parser.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Parser Class
@@ -21,14 +43,46 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Parser
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/parser.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/parser.html
  */
 class CI_Parser {
 
-	var $l_delim = '{';
-	var $r_delim = '}';
-	var $object;
+	/**
+	 * Left delimiter character for pseudo vars
+	 *
+	 * @var string
+	 */
+	public $l_delim = '{';
+
+	/**
+	 * Right delimiter character for pseudo vars
+	 *
+	 * @var string
+	 */
+	public $r_delim = '}';
+
+	/**
+	 * Reference to CodeIgniter instance
+	 *
+	 * @var object
+	 */
+	protected $CI;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Class constructor
+	 *
+	 * @return	void
+	 */
+	public function __construct()
+	{
+		$this->CI =& get_instance();
+		log_message('info', 'Parser Class Initialized');
+	}
+
+	// --------------------------------------------------------------------
 
 	/**
 	 *  Parse a template
@@ -36,7 +90,6 @@
 	 * Parses pseudo-variables contained in the specified template view,
 	 * replacing them with the data in the second param
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	array
 	 * @param	bool
@@ -44,8 +97,7 @@
 	 */
 	public function parse($template, $data, $return = FALSE)
 	{
-		$CI =& get_instance();
-		$template = $CI->load->view($template, $data, TRUE);
+		$template = $this->CI->load->view($template, $data, TRUE);
 
 		return $this->_parse($template, $data, $return);
 	}
@@ -58,13 +110,12 @@
 	 * Parses pseudo-variables contained in the specified string,
 	 * replacing them with the data in the second param
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	array
 	 * @param	bool
 	 * @return	string
 	 */
-	function parse_string($template, $data, $return = FALSE)
+	public function parse_string($template, $data, $return = FALSE)
 	{
 		return $this->_parse($template, $data, $return);
 	}
@@ -77,35 +128,35 @@
 	 * Parses pseudo-variables contained in the specified template,
 	 * replacing them with the data in the second param
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	array
 	 * @param	bool
 	 * @return	string
 	 */
-	function _parse($template, $data, $return = FALSE)
+	protected function _parse($template, $data, $return = FALSE)
 	{
-		if ($template == '')
+		if ($template === '')
 		{
 			return FALSE;
 		}
 
+		$replace = array();
 		foreach ($data as $key => $val)
 		{
-			if (is_array($val))
-			{
-				$template = $this->_parse_pair($key, $val, $template);
-			}
-			else
-			{
-				$template = $this->_parse_single($key, (string)$val, $template);
-			}
+			$replace = array_merge(
+				$replace,
+				is_array($val)
+					? $this->_parse_pair($key, $val, $template)
+					: $this->_parse_single($key, (string) $val, $template)
+			);
 		}
 
-		if ($return == FALSE)
+		unset($data);
+		$template = strtr($template, $replace);
+
+		if ($return === FALSE)
 		{
-			$CI =& get_instance();
-			$CI->output->append_output($template);
+			$this->CI->output->append_output($template);
 		}
 
 		return $template;
@@ -116,12 +167,11 @@
 	/**
 	 *  Set the left/right variable delimiters
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
 	 * @return	void
 	 */
-	function set_delimiters($l = '{', $r = '}')
+	public function set_delimiters($l = '{', $r = '}')
 	{
 		$this->l_delim = $l;
 		$this->r_delim = $r;
@@ -132,15 +182,14 @@
 	/**
 	 *  Parse a single key/value
 	 *
-	 * @access	private
 	 * @param	string
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function _parse_single($key, $val, $string)
+	protected function _parse_single($key, $val, $string)
 	{
-		return str_replace($this->l_delim.$key.$this->r_delim, $val, $string);
+		return array($this->l_delim.$key.$this->r_delim => (string) $val);
 	}
 
 	// --------------------------------------------------------------------
@@ -150,63 +199,50 @@
 	 *
 	 * Parses tag pairs:  {some_tag} string... {/some_tag}
 	 *
-	 * @access	private
 	 * @param	string
 	 * @param	array
 	 * @param	string
 	 * @return	string
 	 */
-	function _parse_pair($variable, $data, $string)
-	{
-		if (FALSE === ($match = $this->_match_pair($string, $variable)))
+	protected function _parse_pair($variable, $data, $string)
 		{
-			return $string;
-		}
+		$replace = array();
+		preg_match_all(
+			'#'.preg_quote($this->l_delim.$variable.$this->r_delim).'(.+?)'.preg_quote($this->l_delim.'/'.$variable.$this->r_delim).'#s',
+			$string,
+			$matches,
+			PREG_SET_ORDER
+		);
 
+		foreach ($matches as $match)
+		{
 		$str = '';
 		foreach ($data as $row)
 		{
-			$temp = $match['1'];
+				$temp = array();
 			foreach ($row as $key => $val)
 			{
-				if ( ! is_array($val))
+					if (is_array($val))
 				{
-					$temp = $this->_parse_single($key, $val, $temp);
-				}
-				else
+						$pair = $this->_parse_pair($key, $val, $match[1]);
+						if ( ! empty($pair))
 				{
-					$temp = $this->_parse_pair($key, $val, $temp);
-				}
+							$temp = array_merge($temp, $pair);
 			}
 
-			$str .= $temp;
+						continue;
 		}
 
-		return str_replace($match['0'], $str, $string);
+					$temp[$this->l_delim.$key.$this->r_delim] = $val;
 	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 *  Matches a variable pair
-	 *
-	 * @access	private
-	 * @param	string
-	 * @param	string
-	 * @return	mixed
-	 */
-	function _match_pair($string, $variable)
-	{
-		if ( ! preg_match("|" . preg_quote($this->l_delim) . $variable . preg_quote($this->r_delim) . "(.+?)". preg_quote($this->l_delim) . '/' . $variable . preg_quote($this->r_delim) . "|s", $string, $match))
-		{
-			return FALSE;
+				$str .= strtr($match[1], $temp);
 		}
 
-		return $match;
+			$replace[$match[0]] = $str;
 	}
 
+		return $replace;
 }
-// END Parser Class
 
-/* End of file Parser.php */
-/* Location: ./system/libraries/Parser.php */
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Profiler.php opensourcepos/system/libraries/Profiler.php
--- pos-prod/system/libraries/Profiler.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Profiler.php	2016-05-23 15:32:31.946838778 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * CodeIgniter Profiler Class
@@ -27,11 +49,16 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Libraries
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/general/profiling.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/general/profiling.html
  */
 class CI_Profiler {
 
+	/**
+	 * List of profiler sections available to show
+	 *
+	 * @var array
+	 */
 	protected $_available_sections = array(
 										'benchmarks',
 										'get',
@@ -45,23 +72,34 @@
 										'config'
 										);
 
+	/**
+	 * Number of queries to show before making the additional queries togglable
+	 *
+	 * @var int
+	 */
 	protected $_query_toggle_count = 25;
 
+	/**
+	 * Reference to the CodeIgniter singleton
+	 *
+	 * @var object
+	 */
 	protected $CI;
 
 	// --------------------------------------------------------------------
 
+	/**
+	 * Class constructor
+	 *
+	 * Initialize Profiler
+	 *
+	 * @param	array	$config	Parameters
+	 */
 	public function __construct($config = array())
 	{
 		$this->CI =& get_instance();
 		$this->CI->load->language('profiler');
 
-		if (isset($config['query_toggle_count']))
-		{
-			$this->_query_toggle_count = (int) $config['query_toggle_count'];
-			unset($config['query_toggle_count']);
-		}
-
 		// default all sections to display
 		foreach ($this->_available_sections as $section)
 		{
@@ -72,6 +110,7 @@
 		}
 
 		$this->set_sections($config);
+		log_message('info', 'Profiler Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -81,16 +120,22 @@
 	 *
 	 * Sets the private _compile_* properties to enable/disable Profiler sections
 	 *
-	 * @param	mixed
+	 * @param	mixed	$config
 	 * @return	void
 	 */
 	public function set_sections($config)
 	{
+		if (isset($config['query_toggle_count']))
+		{
+			$this->_query_toggle_count = (int) $config['query_toggle_count'];
+			unset($config['query_toggle_count']);
+		}
+
 		foreach ($config as $method => $enable)
 		{
 			if (in_array($method, $this->_available_sections))
 			{
-				$this->_compile_{$method} = ($enable !== FALSE) ? TRUE : FALSE;
+				$this->_compile_{$method} = ($enable !== FALSE);
 			}
 		}
 	}
@@ -114,36 +159,32 @@
 		{
 			// We match the "end" marker so that the list ends
 			// up in the order that it was defined
-			if (preg_match("/(.+?)_end/i", $key, $match))
-			{
-				if (isset($this->CI->benchmark->marker[$match[1].'_end']) AND isset($this->CI->benchmark->marker[$match[1].'_start']))
+			if (preg_match('/(.+?)_end$/i', $key, $match)
+				&& isset($this->CI->benchmark->marker[$match[1].'_end'], $this->CI->benchmark->marker[$match[1].'_start']))
 				{
 					$profile[$match[1]] = $this->CI->benchmark->elapsed_time($match[1].'_start', $key);
 				}
 			}
-		}
 
 		// Build a table containing the profile data.
 		// Note: At some point we should turn this into a template that can
 		// be modified.  We also might want to make this data available to be logged
 
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_benchmarks" style="border:1px solid #900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_benchmarks').'&nbsp;&nbsp;</legend>';
-		$output .= "\n";
-		$output .= "\n\n<table style='width:100%'>\n";
+		$output = "\n\n"
+			.'<fieldset id="ci_profiler_benchmarks" style="border:1px solid #900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_benchmarks')."&nbsp;&nbsp;</legend>"
+			."\n\n\n<table style=\"width:100%;\">\n";
 
 		foreach ($profile as $key => $val)
 		{
 			$key = ucwords(str_replace(array('_', '-'), ' ', $key));
-			$output .= "<tr><td style='padding:5px;width:50%;color:#000;font-weight:bold;background-color:#ddd;'>".$key."&nbsp;&nbsp;</td><td style='padding:5px;width:50%;color:#900;font-weight:normal;background-color:#ddd;'>".$val."</td></tr>\n";
+			$output .= '<tr><td style="padding:5px;width:50%;color:#000;font-weight:bold;background-color:#ddd;">'
+					.$key.'&nbsp;&nbsp;</td><td style="padding:5px;width:50%;color:#900;font-weight:normal;background-color:#ddd;">'
+					.$val."</td></tr>\n";
 		}
 
-		$output .= "</table>\n";
-		$output .= "</fieldset>";
-
-		return $output;
+		return $output."</table>\n</fieldset>";
 	}
 
 	// --------------------------------------------------------------------
@@ -158,27 +199,37 @@
 		$dbs = array();
 
 		// Let's determine which databases are currently connected to
-		foreach (get_object_vars($this->CI) as $CI_object)
+		foreach (get_object_vars($this->CI) as $name => $cobject)
+		{
+			if (is_object($cobject))
 		{
-			if (is_object($CI_object) && is_subclass_of(get_class($CI_object), 'CI_DB') )
+				if ($cobject instanceof CI_DB)
 			{
-				$dbs[] = $CI_object;
+					$dbs[get_class($this->CI).':$'.$name] = $cobject;
+				}
+				elseif ($cobject instanceof CI_Model)
+				{
+					foreach (get_object_vars($cobject) as $mname => $mobject)
+					{
+						if ($mobject instanceof CI_DB)
+						{
+							$dbs[get_class($cobject).':$'.$mname] = $mobject;
+						}
+					}
+				}
 			}
 		}
 
-		if (count($dbs) == 0)
+		if (count($dbs) === 0)
 		{
-			$output  = "\n\n";
-			$output .= '<fieldset id="ci_profiler_queries" style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-			$output .= "\n";
-			$output .= '<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries').'&nbsp;&nbsp;</legend>';
-			$output .= "\n";
-			$output .= "\n\n<table style='border:none; width:100%;'>\n";
-			$output .="<tr><td style='width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px'>".$this->CI->lang->line('profiler_no_db')."</td></tr>\n";
-			$output .= "</table>\n";
-			$output .= "</fieldset>";
-
-			return $output;
+			return "\n\n"
+				.'<fieldset id="ci_profiler_queries" style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+				."\n"
+				.'<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries').'&nbsp;&nbsp;</legend>'
+				."\n\n\n<table style=\"border:none; width:100%;\">\n"
+				.'<tr><td style="width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px;">'
+				.$this->CI->lang->line('profiler_no_db')
+				."</td></tr>\n</table>\n</fieldset>";
 		}
 
 		// Load the text helper so we can highlight the SQL
@@ -188,52 +239,52 @@
 		$highlight = array('SELECT', 'DISTINCT', 'FROM', 'WHERE', 'AND', 'LEFT&nbsp;JOIN', 'ORDER&nbsp;BY', 'GROUP&nbsp;BY', 'LIMIT', 'INSERT', 'INTO', 'VALUES', 'UPDATE', 'OR&nbsp;', 'HAVING', 'OFFSET', 'NOT&nbsp;IN', 'IN', 'LIKE', 'NOT&nbsp;LIKE', 'COUNT', 'MAX', 'MIN', 'ON', 'AS', 'AVG', 'SUM', '(', ')');
 
 		$output  = "\n\n";
-
 		$count = 0;
 
-		foreach ($dbs as $db)
+		foreach ($dbs as $name => $db)
 		{
-			$count++;
-
 			$hide_queries = (count($db->queries) > $this->_query_toggle_count) ? ' display:none' : '';
+			$total_time = number_format(array_sum($db->query_times), 4).' '.$this->CI->lang->line('profiler_seconds');
 
 			$show_hide_js = '(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_queries_db_'.$count.'\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_hide').'\'?\''.$this->CI->lang->line('profiler_section_show').'\':\''.$this->CI->lang->line('profiler_section_hide').'\';">'.$this->CI->lang->line('profiler_section_hide').'</span>)';
 
-			if ($hide_queries != '')
+			if ($hide_queries !== '')
 			{
 				$show_hide_js = '(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_queries_db_'.$count.'\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)';
 			}
 
-			$output .= '<fieldset style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-			$output .= "\n";
-			$output .= '<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_database').':&nbsp; '.$db->database.'&nbsp;&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries').': '.count($db->queries).'&nbsp;&nbsp;'.$show_hide_js.'</legend>';
-			$output .= "\n";
-			$output .= "\n\n<table style='width:100%;{$hide_queries}' id='ci_profiler_queries_db_{$count}'>\n";
+			$output .= '<fieldset style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+				."\n"
+				.'<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_database')
+				.':&nbsp; '.$db->database.' ('.$name.')&nbsp;&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries')
+				.': '.count($db->queries).' ('.$total_time.')&nbsp;&nbsp;'.$show_hide_js."</legend>\n\n\n"
+				.'<table style="width:100%;'.$hide_queries.'" id="ci_profiler_queries_db_'.$count."\">\n";
 
-			if (count($db->queries) == 0)
+			if (count($db->queries) === 0)
 			{
-				$output .= "<tr><td style='width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px;'>".$this->CI->lang->line('profiler_no_queries')."</td></tr>\n";
+				$output .= '<tr><td style="width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px;">'
+						.$this->CI->lang->line('profiler_no_queries')."</td></tr>\n";
 			}
 			else
 			{
 				foreach ($db->queries as $key => $val)
 				{
 					$time = number_format($db->query_times[$key], 4);
-
-					$val = highlight_code($val, ENT_QUOTES);
+					$val = highlight_code($val);
 
 					foreach ($highlight as $bold)
 					{
 						$val = str_replace($bold, '<strong>'.$bold.'</strong>', $val);
 					}
 
-					$output .= "<tr><td style='padding:5px; vertical-align: top;width:1%;color:#900;font-weight:normal;background-color:#ddd;'>".$time."&nbsp;&nbsp;</td><td style='padding:5px; color:#000;font-weight:normal;background-color:#ddd;'>".$val."</td></tr>\n";
+					$output .= '<tr><td style="padding:5px;vertical-align:top;width:1%;color:#900;font-weight:normal;background-color:#ddd;">'
+							.$time.'&nbsp;&nbsp;</td><td style="padding:5px;color:#000;font-weight:normal;background-color:#ddd;">'
+							.$val."</td></tr>\n";
 				}
 			}
 
-			$output .= "</table>\n";
-			$output .= "</fieldset>";
-
+			$output .= "</table>\n</fieldset>";
+			$count++;
 		}
 
 		return $output;
@@ -249,44 +299,35 @@
 	 */
 	protected function _compile_get()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_get" style="border:1px solid #cd6e00;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#cd6e00;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_get_data').'&nbsp;&nbsp;</legend>';
-		$output .= "\n";
+		$output = "\n\n"
+			.'<fieldset id="ci_profiler_get" style="border:1px solid #cd6e00;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#cd6e00;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_get_data')."&nbsp;&nbsp;</legend>\n";
 
-		if (count($_GET) == 0)
+		if (count($_GET) === 0)
 		{
-			$output .= "<div style='color:#cd6e00;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_get')."</div>";
+			$output .= '<div style="color:#cd6e00;font-weight:normal;padding:4px 0 4px 0;">'.$this->CI->lang->line('profiler_no_get').'</div>';
 		}
 		else
 		{
-			$output .= "\n\n<table style='width:100%; border:none'>\n";
+			$output .= "\n\n<table style=\"width:100%;border:none;\">\n";
 
 			foreach ($_GET as $key => $val)
 			{
-				if ( ! is_numeric($key))
-				{
-					$key = "'".$key."'";
-				}
-
-				$output .= "<tr><td style='width:50%;color:#000;background-color:#ddd;padding:5px'>&#36;_GET[".$key."]&nbsp;&nbsp; </td><td style='width:50%;padding:5px;color:#cd6e00;font-weight:normal;background-color:#ddd;'>";
-				if (is_array($val))
-				{
-					$output .= "<pre>" . htmlspecialchars(stripslashes(print_r($val, true))) . "</pre>";
-				}
-				else
-				{
-					$output .= htmlspecialchars(stripslashes($val));
-				}
-				$output .= "</td></tr>\n";
+				is_int($key) OR $key = "'".htmlspecialchars($key, ENT_QUOTES, config_item('charset'))."'";
+				$val = (is_array($val) OR is_object($val))
+					? '<pre>'.htmlspecialchars(print_r($val, TRUE), ENT_QUOTES, config_item('charset'))
+					: htmlspecialchars($val, ENT_QUOTES, config_item('charset'));
+
+				$output .= '<tr><td style="width:50%;color:#000;background-color:#ddd;padding:5px;">&#36;_GET['
+					.$key.']&nbsp;&nbsp; </td><td style="width:50%;padding:5px;color:#cd6e00;font-weight:normal;background-color:#ddd;">'
+					.$val."</td></tr>\n";
 			}
 
 			$output .= "</table>\n";
 		}
-		$output .= "</fieldset>";
 
-		return $output;
+		return $output.'</fieldset>';
 	}
 
 	// --------------------------------------------------------------------
@@ -298,44 +339,47 @@
 	 */
 	protected function _compile_post()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_post" style="border:1px solid #009900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#009900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_post_data').'&nbsp;&nbsp;</legend>';
-		$output .= "\n";
+		$output = "\n\n"
+			.'<fieldset id="ci_profiler_post" style="border:1px solid #009900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#009900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_post_data')."&nbsp;&nbsp;</legend>\n";
 
-		if (count($_POST) == 0)
+		if (count($_POST) === 0 && count($_FILES) === 0)
 		{
-			$output .= "<div style='color:#009900;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_post')."</div>";
+			$output .= '<div style="color:#009900;font-weight:normal;padding:4px 0 4px 0;">'.$this->CI->lang->line('profiler_no_post').'</div>';
 		}
 		else
 		{
-			$output .= "\n\n<table style='width:100%'>\n";
+			$output .= "\n\n<table style=\"width:100%;\">\n";
 
 			foreach ($_POST as $key => $val)
 			{
-				if ( ! is_numeric($key))
-				{
-					$key = "'".$key."'";
-				}
-
-				$output .= "<tr><td style='width:50%;padding:5px;color:#000;background-color:#ddd;'>&#36;_POST[".$key."]&nbsp;&nbsp; </td><td style='width:50%;padding:5px;color:#009900;font-weight:normal;background-color:#ddd;'>";
-				if (is_array($val))
-				{
-					$output .= "<pre>" . htmlspecialchars(stripslashes(print_r($val, TRUE))) . "</pre>";
-				}
-				else
-				{
-					$output .= htmlspecialchars(stripslashes($val));
-				}
-				$output .= "</td></tr>\n";
+				is_int($key) OR $key = "'".htmlspecialchars($key, ENT_QUOTES, config_item('charset'))."'";
+				$val = (is_array($val) OR is_object($val))
+					? '<pre>'.htmlspecialchars(print_r($val, TRUE), ENT_QUOTES, config_item('charset'))
+					: htmlspecialchars($val, ENT_QUOTES, config_item('charset'));
+
+				$output .= '<tr><td style="width:50%;padding:5px;color:#000;background-color:#ddd;">&#36;_POST['
+					.$key.']&nbsp;&nbsp; </td><td style="width:50%;padding:5px;color:#009900;font-weight:normal;background-color:#ddd;">'
+					.$val."</td></tr>\n";
+			}
+
+			foreach ($_FILES as $key => $val)
+			{
+				is_int($key) OR $key = "'".htmlspecialchars($key, ENT_QUOTES, config_item('charset'))."'";
+				$val = (is_array($val) OR is_object($val))
+					? '<pre>'.htmlspecialchars(print_r($val, TRUE), ENT_QUOTES, config_item('charset'))
+					: htmlspecialchars($val, ENT_QUOTES, config_item('charset'));
+
+				$output .= '<tr><td style="width:50%;padding:5px;color:#000;background-color:#ddd;">&#36;_FILES['
+					.$key.']&nbsp;&nbsp; </td><td style="width:50%;padding:5px;color:#009900;font-weight:normal;background-color:#ddd;">'
+					.$val."</td></tr>\n";
 			}
 
 			$output .= "</table>\n";
 		}
-		$output .= "</fieldset>";
 
-		return $output;
+		return $output.'</fieldset>';
 	}
 
 	// --------------------------------------------------------------------
@@ -347,24 +391,13 @@
 	 */
 	protected function _compile_uri_string()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_uri_string" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_uri_string').'&nbsp;&nbsp;</legend>';
-		$output .= "\n";
-
-		if ($this->CI->uri->uri_string == '')
-		{
-			$output .= "<div style='color:#000;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_uri')."</div>";
-		}
-		else
-		{
-			$output .= "<div style='color:#000;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->uri->uri_string."</div>";
-		}
-
-		$output .= "</fieldset>";
-
-		return $output;
+		return "\n\n"
+			.'<fieldset id="ci_profiler_uri_string" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_uri_string')."&nbsp;&nbsp;</legend>\n"
+			.'<div style="color:#000;font-weight:normal;padding:4px 0 4px 0;">'
+			.($this->CI->uri->uri_string === '' ? $this->CI->lang->line('profiler_no_uri') : $this->CI->uri->uri_string)
+			.'</div></fieldset>';
 	}
 
 	// --------------------------------------------------------------------
@@ -376,17 +409,12 @@
 	 */
 	protected function _compile_controller_info()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_controller_info" style="border:1px solid #995300;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#995300;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_controller_info').'&nbsp;&nbsp;</legend>';
-		$output .= "\n";
-
-		$output .= "<div style='color:#995300;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->router->fetch_class()."/".$this->CI->router->fetch_method()."</div>";
-
-		$output .= "</fieldset>";
-
-		return $output;
+		return "\n\n"
+			.'<fieldset id="ci_profiler_controller_info" style="border:1px solid #995300;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#995300;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_controller_info')."&nbsp;&nbsp;</legend>\n"
+			.'<div style="color:#995300;font-weight:normal;padding:4px 0 4px 0;">'.$this->CI->router->class.'/'.$this->CI->router->method
+			.'</div></fieldset>';
 	}
 
 	// --------------------------------------------------------------------
@@ -400,24 +428,13 @@
 	 */
 	protected function _compile_memory_usage()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_memory_usage" style="border:1px solid #5a0099;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#5a0099;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_memory_usage').'&nbsp;&nbsp;</legend>';
-		$output .= "\n";
-
-		if (function_exists('memory_get_usage') && ($usage = memory_get_usage()) != '')
-		{
-			$output .= "<div style='color:#5a0099;font-weight:normal;padding:4px 0 4px 0'>".number_format($usage).' bytes</div>';
-		}
-		else
-		{
-			$output .= "<div style='color:#5a0099;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_memory')."</div>";
-		}
-
-		$output .= "</fieldset>";
-
-		return $output;
+		return "\n\n"
+			.'<fieldset id="ci_profiler_memory_usage" style="border:1px solid #5a0099;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#5a0099;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_memory_usage')."&nbsp;&nbsp;</legend>\n"
+			.'<div style="color:#5a0099;font-weight:normal;padding:4px 0 4px 0;">'
+			.(($usage = memory_get_usage()) != '' ? number_format($usage).' bytes' : $this->CI->lang->line('profiler_no_memory'))
+			.'</div></fieldset>';
 	}
 
 	// --------------------------------------------------------------------
@@ -431,24 +448,21 @@
 	 */
 	protected function _compile_http_headers()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_http_headers" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_headers').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_httpheaders_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>';
-		$output .= "\n";
-
-		$output .= "\n\n<table style='width:100%;display:none' id='ci_profiler_httpheaders_table'>\n";
+		$output = "\n\n"
+			.'<fieldset id="ci_profiler_http_headers" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_headers')
+			.'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_httpheaders_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show')."</span>)</legend>\n\n\n"
+			.'<table style="width:100%;display:none;" id="ci_profiler_httpheaders_table">'."\n";
 
-		foreach (array('HTTP_ACCEPT', 'HTTP_USER_AGENT', 'HTTP_CONNECTION', 'SERVER_PORT', 'SERVER_NAME', 'REMOTE_ADDR', 'SERVER_SOFTWARE', 'HTTP_ACCEPT_LANGUAGE', 'SCRIPT_NAME', 'REQUEST_METHOD',' HTTP_HOST', 'REMOTE_HOST', 'CONTENT_TYPE', 'SERVER_PROTOCOL', 'QUERY_STRING', 'HTTP_ACCEPT_ENCODING', 'HTTP_X_FORWARDED_FOR') as $header)
+		foreach (array('HTTP_ACCEPT', 'HTTP_USER_AGENT', 'HTTP_CONNECTION', 'SERVER_PORT', 'SERVER_NAME', 'REMOTE_ADDR', 'SERVER_SOFTWARE', 'HTTP_ACCEPT_LANGUAGE', 'SCRIPT_NAME', 'REQUEST_METHOD',' HTTP_HOST', 'REMOTE_HOST', 'CONTENT_TYPE', 'SERVER_PROTOCOL', 'QUERY_STRING', 'HTTP_ACCEPT_ENCODING', 'HTTP_X_FORWARDED_FOR', 'HTTP_DNT') as $header)
 		{
-			$val = (isset($_SERVER[$header])) ? $_SERVER[$header] : '';
-			$output .= "<tr><td style='vertical-align: top;width:50%;padding:5px;color:#900;background-color:#ddd;'>".$header."&nbsp;&nbsp;</td><td style='width:50%;padding:5px;color:#000;background-color:#ddd;'>".$val."</td></tr>\n";
+			$val = isset($_SERVER[$header]) ? htmlspecialchars($_SERVER[$header], ENT_QUOTES, config_item('charset')) : '';
+			$output .= '<tr><td style="vertical-align:top;width:50%;padding:5px;color:#900;background-color:#ddd;">'
+				.$header.'&nbsp;&nbsp;</td><td style="width:50%;padding:5px;color:#000;background-color:#ddd;">'.$val."</td></tr>\n";
 		}
 
-		$output .= "</table>\n";
-		$output .= "</fieldset>";
-
-		return $output;
+		return $output."</table>\n</fieldset>";
 	}
 
 	// --------------------------------------------------------------------
@@ -462,28 +476,24 @@
 	 */
 	protected function _compile_config()
 	{
-		$output  = "\n\n";
-		$output .= '<fieldset id="ci_profiler_config" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= "\n";
-		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_config').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_config_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>';
-		$output .= "\n";
-
-		$output .= "\n\n<table style='width:100%; display:none' id='ci_profiler_config_table'>\n";
+		$output = "\n\n"
+			.'<fieldset id="ci_profiler_config" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			."\n"
+			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_config').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_config_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show')."</span>)</legend>\n\n\n"
+			.'<table style="width:100%;display:none;" id="ci_profiler_config_table">'."\n";
 
 		foreach ($this->CI->config->config as $config=>$val)
 		{
-			if (is_array($val))
+			if (is_array($val) OR is_object($val))
 			{
 				$val = print_r($val, TRUE);
 			}
 
-			$output .= "<tr><td style='padding:5px; vertical-align: top;color:#900;background-color:#ddd;'>".$config."&nbsp;&nbsp;</td><td style='padding:5px; color:#000;background-color:#ddd;'>".htmlspecialchars($val)."</td></tr>\n";
+			$output .= '<tr><td style="padding:5px;vertical-align:top;color:#900;background-color:#ddd;">'
+				.$config.'&nbsp;&nbsp;</td><td style="padding:5px;color:#000;background-color:#ddd;">'.htmlspecialchars($val)."</td></tr>\n";
 		}
 
-		$output .= "</table>\n";
-		$output .= "</fieldset>";
-
-		return $output;
+		return $output."</table>\n</fieldset>";
 	}
 
 	// --------------------------------------------------------------------
@@ -493,30 +503,29 @@
 	 *
 	 * @return 	string
 	 */
-	private function _compile_session_data()
+	protected function _compile_session_data()
 	{
 		if ( ! isset($this->CI->session))
 		{
 			return;
 		}
 
-		$output = '<fieldset id="ci_profiler_csession" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
-		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_session_data').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_session_data\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>';
-		$output .= "<table style='width:100%;display:none' id='ci_profiler_session_data'>";
+		$output = '<fieldset id="ci_profiler_csession" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
+			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_session_data').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_session_data\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>'
+			.'<table style="width:100%;display:none;" id="ci_profiler_session_data">';
 
-		foreach ($this->CI->session->all_userdata() as $key => $val)
+		foreach ($this->CI->session->userdata() as $key => $val)
 		{
 			if (is_array($val) OR is_object($val))
 			{
 				$val = print_r($val, TRUE);
 			}
 
-			$output .= "<tr><td style='padding:5px; vertical-align: top;color:#900;background-color:#ddd;'>".$key."&nbsp;&nbsp;</td><td style='padding:5px; color:#000;background-color:#ddd;'>".htmlspecialchars($val)."</td></tr>\n";
+			$output .= '<tr><td style="padding:5px;vertical-align:top;color:#900;background-color:#ddd;">'
+				.$key.'&nbsp;&nbsp;</td><td style="padding:5px;color:#000;background-color:#ddd;">'.htmlspecialchars($val)."</td></tr>\n";
 		}
 
-		$output .= '</table>';
-		$output .= "</fieldset>";
-		return $output;
+		return $output."</table>\n</fieldset>";
 	}
 
 	// --------------------------------------------------------------------
@@ -528,31 +537,26 @@
 	 */
 	public function run()
 	{
-		$output = "<div id='codeigniter_profiler' style='clear:both;background-color:#fff;padding:10px;'>";
+		$output = '<div id="codeigniter_profiler" style="clear:both;background-color:#fff;padding:10px;">';
 		$fields_displayed = 0;
 
 		foreach ($this->_available_sections as $section)
 		{
 			if ($this->_compile_{$section} !== FALSE)
 			{
-				$func = "_compile_{$section}";
+				$func = '_compile_'.$section;
 				$output .= $this->{$func}();
 				$fields_displayed++;
 			}
 		}
 
-		if ($fields_displayed == 0)
+		if ($fields_displayed === 0)
 		{
-			$output .= '<p style="border:1px solid #5a0099;padding:10px;margin:20px 0;background-color:#eee">'.$this->CI->lang->line('profiler_no_profiles').'</p>';
+			$output .= '<p style="border:1px solid #5a0099;padding:10px;margin:20px 0;background-color:#eee;">'
+				.$this->CI->lang->line('profiler_no_profiles').'</p>';
 		}
 
-		$output .= '</div>';
-
-		return $output;
+		return $output.'</div>';
 	}
-}
-
-// END CI_Profiler class
 
-/* End of file Profiler.php */
-/* Location: ./system/libraries/Profiler.php */
\ No newline at end of file
+}
Only in opensourcepos/system/libraries: Session
Only in pos-prod/system/libraries: Session.php
Only in pos-prod/system/libraries: Sha1.php
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Table.php opensourcepos/system/libraries/Table.php
--- pos-prod/system/libraries/Table.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Table.php	2016-05-23 15:32:31.947838763 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
  * @since		Version 1.3.1
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * HTML Table Generating Class
@@ -23,23 +45,82 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	HTML Tables
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/uri.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/table.html
  */
 class CI_Table {
 
-	var $rows				= array();
-	var $heading			= array();
-	var $auto_heading		= TRUE;
-	var $caption			= NULL;
-	var $template			= NULL;
-	var $newline			= "\n";
-	var $empty_cells		= "";
-	var	$function			= FALSE;
+	/**
+	 * Data for table rows
+	 *
+	 * @var array
+	 */
+	public $rows		= array();
 
-	public function __construct()
+	/**
+	 * Data for table heading
+	 *
+	 * @var array
+	 */
+	public $heading		= array();
+
+	/**
+	 * Whether or not to automatically create the table header
+	 *
+	 * @var bool
+	 */
+	public $auto_heading	= TRUE;
+
+	/**
+	 * Table caption
+	 *
+	 * @var string
+	 */
+	public $caption		= NULL;
+
+	/**
+	 * Table layout template
+	 *
+	 * @var array
+	 */
+	public $template	= NULL;
+
+	/**
+	 * Newline setting
+	 *
+	 * @var string
+	 */
+	public $newline		= "\n";
+
+	/**
+	 * Contents of empty cells
+	 *
+	 * @var string
+	 */
+	public $empty_cells	= '';
+
+	/**
+	 * Callback for custom table layout
+	 *
+	 * @var function
+	 */
+	public $function	= NULL;
+
+	/**
+	 * Set the template from the table config file if it exists
+	 *
+	 * @param	array	$config	(default: array())
+	 * @return	void
+	 */
+	public function __construct($config = array())
+	{
+		// initialize config
+		foreach ($config as $key => $val)
 	{
-		log_message('debug', "Table Class Initialized");
+			$this->template[$key] = $val;
+		}
+
+		log_message('info', 'Table Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -47,11 +128,10 @@
 	/**
 	 * Set the template
 	 *
-	 * @access	public
-	 * @param	array
-	 * @return	void
+	 * @param	array	$template
+	 * @return	bool
 	 */
-	function set_template($template)
+	public function set_template($template)
 	{
 		if ( ! is_array($template))
 		{
@@ -59,6 +139,7 @@
 		}
 
 		$this->template = $template;
+		return TRUE;
 	}
 
 	// --------------------------------------------------------------------
@@ -68,14 +149,13 @@
 	 *
 	 * Can be passed as an array or discreet params
 	 *
-	 * @access	public
 	 * @param	mixed
-	 * @return	void
+	 * @return	CI_Table
 	 */
-	function set_heading()
+	public function set_heading($args = array())
 	{
-		$args = func_get_args();
-		$this->heading = $this->_prep_args($args);
+		$this->heading = $this->_prep_args(func_get_args());
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -86,14 +166,13 @@
 	 * columns.  This allows a single array with many elements to  be
 	 * displayed in a table that has a fixed column count.
 	 *
-	 * @access	public
-	 * @param	array
-	 * @param	int
-	 * @return	void
+	 * @param	array	$array
+	 * @param	int	$col_limit
+	 * @return	array
 	 */
-	function make_columns($array = array(), $col_limit = 0)
+	public function make_columns($array = array(), $col_limit = 0)
 	{
-		if ( ! is_array($array) OR count($array) == 0)
+		if ( ! is_array($array) OR count($array) === 0 OR ! is_int($col_limit))
 		{
 			return FALSE;
 		}
@@ -102,13 +181,13 @@
 		// will want headings from a one-dimensional array
 		$this->auto_heading = FALSE;
 
-		if ($col_limit == 0)
+		if ($col_limit === 0)
 		{
 			return $array;
 		}
 
 		$new = array();
-		while (count($array) > 0)
+		do
 		{
 			$temp = array_splice($array, 0, $col_limit);
 
@@ -122,6 +201,7 @@
 
 			$new[] = $temp;
 		}
+		while (count($array) > 0);
 
 		return $new;
 	}
@@ -133,13 +213,13 @@
 	 *
 	 * Can be passed as an array or discreet params
 	 *
-	 * @access	public
-	 * @param	mixed
-	 * @return	void
+	 * @param	mixed	$value
+	 * @return	CI_Table
 	 */
-	function set_empty($value)
+	public function set_empty($value)
 	{
 		$this->empty_cells = $value;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -149,14 +229,13 @@
 	 *
 	 * Can be passed as an array or discreet params
 	 *
-	 * @access	public
 	 * @param	mixed
-	 * @return	void
+	 * @return	CI_Table
 	 */
-	function add_row()
+	public function add_row($args = array())
 	{
-		$args = func_get_args();
-		$this->rows[] = $this->_prep_args($args);
+		$this->rows[] = $this->_prep_args(func_get_args());
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -166,42 +245,22 @@
 	 *
 	 * Ensures a standard associative array format for all cell data
 	 *
-	 * @access	public
-	 * @param	type
-	 * @return	type
+	 * @param	array
+	 * @return	array
 	 */
-	function _prep_args($args)
+	protected function _prep_args($args)
 	{
 		// If there is no $args[0], skip this and treat as an associative array
 		// This can happen if there is only a single key, for example this is passed to table->generate
 		// array(array('foo'=>'bar'))
-		if (isset($args[0]) AND (count($args) == 1 && is_array($args[0])))
-		{
-			// args sent as indexed array
-			if ( ! isset($args[0]['data']))
-			{
-				foreach ($args[0] as $key => $val)
+		if (isset($args[0]) && count($args) === 1 && is_array($args[0]) && ! isset($args[0]['data']))
 				{
-					if (is_array($val) && isset($val['data']))
-					{
-						$args[$key] = $val;
+			$args = $args[0];
 					}
-					else
-					{
-						$args[$key] = array('data' => $val);
-					}
-				}
-			}
-		}
-		else
-		{
+
 			foreach ($args as $key => $val)
 			{
-				if ( ! is_array($val))
-				{
-					$args[$key] = array('data' => $val);
-				}
-			}
+			is_array($val) OR $args[$key] = array('data' => $val);
 		}
 
 		return $args;
@@ -212,11 +271,10 @@
 	/**
 	 * Add a table caption
 	 *
-	 * @access	public
-	 * @param	string
-	 * @return	void
+	 * @param	string	$caption
+	 * @return	CI_Table
 	 */
-	function set_caption($caption)
+	public function set_caption($caption)
 	{
 		$this->caption = $caption;
 	}
@@ -226,29 +284,27 @@
 	/**
 	 * Generate the table
 	 *
-	 * @access	public
-	 * @param	mixed
+	 * @param	mixed	$table_data
 	 * @return	string
 	 */
-	function generate($table_data = NULL)
+	public function generate($table_data = NULL)
 	{
 		// The table data can optionally be passed to this function
 		// either as a database result object or an array
-		if ( ! is_null($table_data))
+		if ( ! empty($table_data))
 		{
-			if (is_object($table_data))
+			if ($table_data instanceof CI_DB_result)
 			{
-				$this->_set_from_object($table_data);
+				$this->_set_from_db_result($table_data);
 			}
 			elseif (is_array($table_data))
 			{
-				$set_heading = (count($this->heading) == 0 AND $this->auto_heading == FALSE) ? FALSE : TRUE;
-				$this->_set_from_array($table_data, $set_heading);
+				$this->_set_from_array($table_data);
 			}
 		}
 
 		// Is there anything to display?  No?  Smite them!
-		if (count($this->heading) == 0 AND count($this->rows) == 0)
+		if (empty($this->heading) && empty($this->rows))
 		{
 			return 'Undefined table data';
 		}
@@ -256,29 +312,26 @@
 		// Compile and validate the template date
 		$this->_compile_template();
 
-		// set a custom cell manipulation function to a locally scoped variable so its callable
-		$function = $this->function;
+		// Validate a possibly existing custom cell manipulation function
+		if (isset($this->function) && ! is_callable($this->function))
+		{
+			$this->function = NULL;
+		}
 
 		// Build the table!
 
-		$out = $this->template['table_open'];
-		$out .= $this->newline;
+		$out = $this->template['table_open'].$this->newline;
 
 		// Add any caption here
 		if ($this->caption)
 		{
-			$out .= $this->newline;
-			$out .= '<caption>' . $this->caption . '</caption>';
-			$out .= $this->newline;
+			$out .= '<caption>'.$this->caption.'</caption>'.$this->newline;
 		}
 
 		// Is there a table heading to display?
-		if (count($this->heading) > 0)
+		if ( ! empty($this->heading))
 		{
-			$out .= $this->template['thead_open'];
-			$out .= $this->newline;
-			$out .= $this->template['heading_row_start'];
-			$out .= $this->newline;
+			$out .= $this->template['thead_open'].$this->newline.$this->template['heading_row_start'].$this->newline;
 
 			foreach ($this->heading as $heading)
 			{
@@ -286,28 +339,22 @@
 
 				foreach ($heading as $key => $val)
 				{
-					if ($key != 'data')
+					if ($key !== 'data')
 					{
-						$temp = str_replace('<th', "<th $key='$val'", $temp);
+						$temp = str_replace('<th', '<th '.$key.'="'.$val.'"', $temp);
 					}
 				}
 
-				$out .= $temp;
-				$out .= isset($heading['data']) ? $heading['data'] : '';
-				$out .= $this->template['heading_cell_end'];
+				$out .= $temp.(isset($heading['data']) ? $heading['data'] : '').$this->template['heading_cell_end'];
 			}
 
-			$out .= $this->template['heading_row_end'];
-			$out .= $this->newline;
-			$out .= $this->template['thead_close'];
-			$out .= $this->newline;
+			$out .= $this->template['heading_row_end'].$this->newline.$this->template['thead_close'].$this->newline;
 		}
 
 		// Build the table rows
-		if (count($this->rows) > 0)
+		if ( ! empty($this->rows))
 		{
-			$out .= $this->template['tbody_open'];
-			$out .= $this->newline;
+			$out .= $this->template['tbody_open'].$this->newline;
 
 			$i = 1;
 			foreach ($this->rows as $row)
@@ -318,10 +365,9 @@
 				}
 
 				// We use modulus to alternate the row colors
-				$name = (fmod($i++, 2)) ? '' : 'alt_';
+				$name = fmod($i++, 2) ? '' : 'alt_';
 
-				$out .= $this->template['row_'.$name.'start'];
-				$out .= $this->newline;
+				$out .= $this->template['row_'.$name.'start'].$this->newline;
 
 				foreach ($row as $cell)
 				{
@@ -329,40 +375,35 @@
 
 					foreach ($cell as $key => $val)
 					{
-						if ($key != 'data')
+						if ($key !== 'data')
 						{
-							$temp = str_replace('<td', "<td $key='$val'", $temp);
+							$temp = str_replace('<td', '<td '.$key.'="'.$val.'"', $temp);
 						}
 					}
 
 					$cell = isset($cell['data']) ? $cell['data'] : '';
 					$out .= $temp;
 
-					if ($cell === "" OR $cell === NULL)
+					if ($cell === '' OR $cell === NULL)
 					{
 						$out .= $this->empty_cells;
 					}
-					else
-					{
-						if ($function !== FALSE && is_callable($function))
+					elseif (isset($this->function))
 						{
-							$out .= call_user_func($function, $cell);
+						$out .= call_user_func($this->function, $cell);
 						}
 						else
 						{
 							$out .= $cell;
 						}
-					}
 
 					$out .= $this->template['cell_'.$name.'end'];
 				}
 
-				$out .= $this->template['row_'.$name.'end'];
-				$out .= $this->newline;
+				$out .= $this->template['row_'.$name.'end'].$this->newline;
 			}
 
-			$out .= $this->template['tbody_close'];
-			$out .= $this->newline;
+			$out .= $this->template['tbody_close'].$this->newline;
 		}
 
 		$out .= $this->template['table_close'];
@@ -378,14 +419,14 @@
 	/**
 	 * Clears the table arrays.  Useful if multiple tables are being generated
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	CI_Table
 	 */
-	function clear()
+	public function clear()
 	{
 		$this->rows				= array();
 		$this->heading			= array();
 		$this->auto_heading		= TRUE;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -393,70 +434,42 @@
 	/**
 	 * Set table data from a database result object
 	 *
-	 * @access	public
-	 * @param	object
+	 * @param	CI_DB_result	$db_result	Database result object
 	 * @return	void
 	 */
-	function _set_from_object($query)
-	{
-		if ( ! is_object($query))
+	protected function _set_from_db_result($object)
 		{
-			return FALSE;
-		}
-
 		// First generate the headings from the table column names
-		if (count($this->heading) == 0)
-		{
-			if ( ! method_exists($query, 'list_fields'))
+		if ($this->auto_heading === TRUE && empty($this->heading))
 			{
-				return FALSE;
-			}
-
-			$this->heading = $this->_prep_args($query->list_fields());
+			$this->heading = $this->_prep_args($object->list_fields());
 		}
 
-		// Next blast through the result array and build out the rows
-
-		if ($query->num_rows() > 0)
-		{
-			foreach ($query->result_array() as $row)
+		foreach ($object->result_array() as $row)
 			{
 				$this->rows[] = $this->_prep_args($row);
 			}
 		}
-	}
 
 	// --------------------------------------------------------------------
 
 	/**
 	 * Set table data from an array
 	 *
-	 * @access	public
-	 * @param	array
+	 * @param	array	$data
 	 * @return	void
 	 */
-	function _set_from_array($data, $set_heading = TRUE)
+	protected function _set_from_array($data)
 	{
-		if ( ! is_array($data) OR count($data) == 0)
+		if ($this->auto_heading === TRUE && empty($this->heading))
 		{
-			return FALSE;
+			$this->heading = $this->_prep_args(array_shift($data));
 		}
 
-		$i = 0;
-		foreach ($data as $row)
-		{
-			// If a heading hasn't already been set we'll use the first row of the array as the heading
-			if ($i == 0 AND count($data) > 1 AND count($this->heading) == 0 AND $set_heading == TRUE)
-			{
-				$this->heading = $this->_prep_args($row);
-			}
-			else
+		foreach ($data as &$row)
 			{
 				$this->rows[] = $this->_prep_args($row);
 			}
-
-			$i++;
-		}
 	}
 
 	// --------------------------------------------------------------------
@@ -464,12 +477,11 @@
 	/**
 	 * Compile Template
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	function _compile_template()
+	protected function _compile_template()
 	{
-		if ($this->template == NULL)
+		if ($this->template === NULL)
 		{
 			$this->template = $this->_default_template();
 			return;
@@ -490,10 +502,9 @@
 	/**
 	 * Default Template
 	 *
-	 * @access	private
-	 * @return	void
+	 * @return	array
 	 */
-	function _default_template()
+	protected function _default_template()
 	{
 		return  array (
 						'table_open'			=> '<table border="0" cellpadding="4" cellspacing="0">',
@@ -523,9 +534,4 @@
 					);
 	}
 
-
 }
-
-
-/* End of file Table.php */
-/* Location: ./system/libraries/Table.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Trackback.php opensourcepos/system/libraries/Trackback.php
--- pos-prod/system/libraries/Trackback.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Trackback.php	2016-05-23 15:32:31.947838763 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Trackback Class
@@ -23,26 +45,65 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Trackbacks
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/trackback.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/trackback.html
  */
 class CI_Trackback {
 
-	var $time_format	= 'local';
-	var $charset		= 'UTF-8';
-	var $data			= array('url' => '', 'title' => '', 'excerpt' => '', 'blog_name' => '', 'charset' => '');
-	var $convert_ascii	= TRUE;
-	var $response		= '';
-	var $error_msg		= array();
+	/**
+	 * Character set
+	 *
+	 * @var	string
+	 */
+	public $charset = 'UTF-8';
+
+	/**
+	 * Trackback data
+	 *
+	 * @var	array
+	 */
+	public $data = array(
+		'url' => '',
+		'title' => '',
+		'excerpt' => '',
+		'blog_name' => '',
+		'charset' => ''
+	);
+
+	/**
+	 * Convert ASCII flag
+	 *
+	 * Whether to convert high-ASCII and MS Word
+	 * characters to HTML entities.
+	 *
+	 * @var	bool
+	 */
+	public $convert_ascii = TRUE;
+
+	/**
+	 * Response
+	 *
+	 * @var	string
+	 */
+	public $response = '';
+
+	/**
+	 * Error messages list
+	 *
+	 * @var	string[]
+	 */
+	public $error_msg = array();
+
+	// --------------------------------------------------------------------
 
 	/**
 	 * Constructor
 	 *
-	 * @access	public
+	 * @return	void
 	 */
 	public function __construct()
 	{
-		log_message('debug', "Trackback Class Initialized");
+		log_message('info', 'Trackback Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -50,11 +111,10 @@
 	/**
 	 * Send Trackback
 	 *
-	 * @access	public
 	 * @param	array
 	 * @return	bool
 	 */
-	function send($tb_data)
+	public function send($tb_data)
 	{
 		if ( ! is_array($tb_data))
 		{
@@ -73,38 +133,32 @@
 
 			switch ($item)
 			{
-				case 'ping_url'	: $$item = $this->extract_urls($tb_data[$item]);
+				case 'ping_url':
+					$$item = $this->extract_urls($tb_data[$item]);
 					break;
-				case 'excerpt'	: $$item = $this->limit_characters($this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
+				case 'excerpt':
+					$$item = $this->limit_characters($this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
 					break;
-				case 'url'		: $$item = str_replace('&#45;', '-', $this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
+				case 'url':
+					$$item = str_replace('&#45;', '-', $this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
 					break;
-				default			: $$item = $this->convert_xml(strip_tags(stripslashes($tb_data[$item])));
+				default:
+					$$item = $this->convert_xml(strip_tags(stripslashes($tb_data[$item])));
 					break;
 			}
 
 			// Convert High ASCII Characters
-			if ($this->convert_ascii == TRUE)
-			{
-				if ($item == 'excerpt')
-				{
-					$$item = $this->convert_ascii($$item);
-				}
-				elseif ($item == 'title')
-				{
-					$$item = $this->convert_ascii($$item);
-				}
-				elseif ($item == 'blog_name')
+			if ($this->convert_ascii === TRUE && in_array($item, array('excerpt', 'title', 'blog_name'), TRUE))
 				{
 					$$item = $this->convert_ascii($$item);
 				}
 			}
-		}
 
 		// Build the Trackback data string
-		$charset = ( ! isset($tb_data['charset'])) ? $this->charset : $tb_data['charset'];
+		$charset = isset($tb_data['charset']) ? $tb_data['charset'] : $this->charset;
 
-		$data = "url=".rawurlencode($url)."&title=".rawurlencode($title)."&blog_name=".rawurlencode($blog_name)."&excerpt=".rawurlencode($excerpt)."&charset=".rawurlencode($charset);
+		$data = 'url='.rawurlencode($url).'&title='.rawurlencode($title).'&blog_name='.rawurlencode($blog_name)
+			.'&excerpt='.rawurlencode($excerpt).'&charset='.rawurlencode($charset);
 
 		// Send Trackback(s)
 		$return = TRUE;
@@ -112,7 +166,7 @@
 		{
 			foreach ($ping_url as $url)
 			{
-				if ($this->process($url, $data) == FALSE)
+				if ($this->process($url, $data) === FALSE)
 				{
 					$return = FALSE;
 				}
@@ -132,29 +186,35 @@
 	 * If the data is valid it is set to the $this->data array
 	 * so that it can be inserted into a database.
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
-	function receive()
+	public function receive()
 	{
 		foreach (array('url', 'title', 'blog_name', 'excerpt') as $val)
 		{
-			if ( ! isset($_POST[$val]) OR $_POST[$val] == '')
+			if (empty($_POST[$val]))
 			{
 				$this->set_error('The following required POST variable is missing: '.$val);
 				return FALSE;
 			}
 
-			$this->data['charset'] = ( ! isset($_POST['charset'])) ? 'auto' : strtoupper(trim($_POST['charset']));
+			$this->data['charset'] = isset($_POST['charset']) ? strtoupper(trim($_POST['charset'])) : 'auto';
 
-			if ($val != 'url' && function_exists('mb_convert_encoding'))
+			if ($val !== 'url' && MB_ENABLED === TRUE)
+			{
+				if (MB_ENABLED === TRUE)
 			{
 				$_POST[$val] = mb_convert_encoding($_POST[$val], $this->charset, $this->data['charset']);
 			}
+				elseif (ICONV_ENABLED === TRUE)
+				{
+					$_POST[$val] = @iconv($this->data['charset'], $this->charset.'//IGNORE', $_POST[$val]);
+				}
+			}
 
-			$_POST[$val] = ($val != 'url') ? $this->convert_xml(strip_tags($_POST[$val])) : strip_tags($_POST[$val]);
+			$_POST[$val] = ($val !== 'url') ? $this->convert_xml(strip_tags($_POST[$val])) : strip_tags($_POST[$val]);
 
-			if ($val == 'excerpt')
+			if ($val === 'excerpt')
 			{
 				$_POST['excerpt'] = $this->limit_characters($_POST['excerpt']);
 			}
@@ -174,14 +234,12 @@
 	 * sends the "incomplete information" error, as that's
 	 * the most common one.
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	void
 	 */
-	function send_error($message = 'Incomplete Information')
+	public function send_error($message = 'Incomplete Information')
 	{
-		echo "<?xml version=\"1.0\" encoding=\"utf-8\"?".">\n<response>\n<error>1</error>\n<message>".$message."</message>\n</response>";
-		exit;
+		exit('<?xml version="1.0" encoding="utf-8"?'.">\n<response>\n<error>1</error>\n<message>".$message."</message>\n</response>");
 	}
 
 	// --------------------------------------------------------------------
@@ -192,13 +250,11 @@
 	 * This should be called when a trackback has been
 	 * successfully received and inserted.
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function send_success()
+	public function send_success()
 	{
-		echo "<?xml version=\"1.0\" encoding=\"utf-8\"?".">\n<response>\n<error>0</error>\n</response>";
-		exit;
+		exit('<?xml version="1.0" encoding="utf-8"?'.">\n<response>\n<error>0</error>\n</response>");
 	}
 
 	// --------------------------------------------------------------------
@@ -206,13 +262,12 @@
 	/**
 	 * Fetch a particular item
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function data($item)
+	public function data($item)
 	{
-		return ( ! isset($this->data[$item])) ? '' : $this->data[$item];
+		return isset($this->data[$item]) ? $this->data[$item] : '';
 	}
 
 	// --------------------------------------------------------------------
@@ -223,12 +278,11 @@
 	 * Opens a socket connection and passes the data to
 	 * the server.  Returns TRUE on success, FALSE on failure
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
 	 * @return	bool
 	 */
-	function process($url, $data)
+	public function process($url, $data)
 	{
 		$target = parse_url($url);
 
@@ -240,43 +294,37 @@
 		}
 
 		// Build the path
-		$ppath = ( ! isset($target['path'])) ? $url : $target['path'];
-
-		$path = (isset($target['query']) && $target['query'] != "") ? $ppath.'?'.$target['query'] : $ppath;
+		$path = isset($target['path']) ? $target['path'] : $url;
+		empty($target['query']) OR $path .= '?'.$target['query'];
 
 		// Add the Trackback ID to the data string
 		if ($id = $this->get_id($url))
 		{
-			$data = "tb_id=".$id."&".$data;
+			$data = 'tb_id='.$id.'&'.$data;
 		}
 
 		// Transfer the data
-		fputs ($fp, "POST " . $path . " HTTP/1.0\r\n" );
-		fputs ($fp, "Host: " . $target['host'] . "\r\n" );
+		fputs($fp, 'POST '.$path." HTTP/1.0\r\n");
+		fputs($fp, 'Host: '.$target['host']."\r\n");
 		fputs ($fp, "Content-type: application/x-www-form-urlencoded\r\n" );
-		fputs ($fp, "Content-length: " . strlen($data) . "\r\n" );
+		fputs($fp, 'Content-length: '.strlen($data)."\r\n");
 		fputs ($fp, "Connection: close\r\n\r\n" );
 		fputs ($fp, $data);
 
 		// Was it successful?
-		$this->response = "";
 
+		$this->response = '';
 		while ( ! feof($fp))
 		{
 			$this->response .= fgets($fp, 128);
 		}
 		@fclose($fp);
 
-
-		if (stristr($this->response, '<error>0</error>') === FALSE)
-		{
-			$message = 'An unknown error was encountered';
-
-			if (preg_match("/<message>(.*?)<\/message>/is", $this->response, $match))
+		if (stripos($this->response, '<error>0</error>') === FALSE)
 			{
-				$message = trim($match['1']);
-			}
-
+			$message = preg_match('/<message>(.*?)<\/message>/is', $this->response, $match)
+				? trim($match[1])
+				: 'An unknown error was encountered';
 			$this->set_error($message);
 			return FALSE;
 		}
@@ -293,32 +341,18 @@
 	 * It takes a string of URLs (separated by comma or
 	 * space) and puts each URL into an array
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function extract_urls($urls)
-	{
-		// Remove the pesky white space and replace with a comma.
-		$urls = preg_replace("/\s*(\S+)\s*/", "\\1,", $urls);
-
-		// If they use commas get rid of the doubles.
-		$urls = str_replace(",,", ",", $urls);
-
-		// Remove any comma that might be at the end
-		if (substr($urls, -1) == ",")
+	public function extract_urls($urls)
 		{
-			$urls = substr($urls, 0, -1);
-		}
+		// Remove the pesky white space and replace with a comma, then replace doubles.
+		$urls = str_replace(',,', ',', preg_replace('/\s*(\S+)\s*/', '\\1,', $urls));
 
-		// Break into an array via commas
-		$urls = preg_split('/[,]/', $urls);
-
-		// Removes duplicates
-		$urls = array_unique($urls);
+		// Break into an array via commas and remove duplicates
+		$urls = array_unique(preg_split('/[,]/', rtrim($urls, ',')));
 
 		array_walk($urls, array($this, 'validate_url'));
-
 		return $urls;
 	}
 
@@ -329,17 +363,16 @@
 	 *
 	 * Simply adds "http://" if missing
 	 *
-	 * @access	public
 	 * @param	string
-	 * @return	string
+	 * @return	void
 	 */
-	function validate_url($url)
+	public function validate_url(&$url)
 	{
 		$url = trim($url);
 
-		if (substr($url, 0, 4) != "http")
+		if (strpos($url, 'http') !== 0)
 		{
-			$url = "http://".$url;
+			$url = 'http://'.$url;
 		}
 	}
 
@@ -348,13 +381,12 @@
 	/**
 	 * Find the Trackback URL's ID
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function get_id($url)
+	public function get_id($url)
 	{
-		$tb_id = "";
+		$tb_id = '';
 
 		if (strpos($url, '?') !== FALSE)
 		{
@@ -382,14 +414,7 @@
 			}
 		}
 
-		if ( ! preg_match ("/^([0-9]+)$/", $tb_id))
-		{
-			return FALSE;
-		}
-		else
-		{
-			return $tb_id;
-		}
+		return ctype_digit((string) $tb_id) ? $tb_id : FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -397,25 +422,20 @@
 	/**
 	 * Convert Reserved XML characters to Entities
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function convert_xml($str)
+	public function convert_xml($str)
 	{
 		$temp = '__TEMP_AMPERSANDS__';
 
-		$str = preg_replace("/&#(\d+);/", "$temp\\1;", $str);
-		$str = preg_replace("/&(\w+);/",  "$temp\\1;", $str);
+		$str = preg_replace(array('/&#(\d+);/', '/&(\w+);/'), $temp.'\\1;', $str);
 
-		$str = str_replace(array("&","<",">","\"", "'", "-"),
-							array("&amp;", "&lt;", "&gt;", "&quot;", "&#39;", "&#45;"),
+		$str = str_replace(array('&', '<', '>', '"', "'", '-'),
+					array('&amp;', '&lt;', '&gt;', '&quot;', '&#39;', '&#45;'),
 							$str);
 
-		$str = preg_replace("/$temp(\d+);/","&#\\1;",$str);
-		$str = preg_replace("/$temp(\w+);/","&\\1;", $str);
-
-		return $str;
+		return preg_replace(array('/'.$temp.'(\d+);/', '/'.$temp.'(\w+);/'), array('&#\\1;', '&\\1;'), $str);
 	}
 
 	// --------------------------------------------------------------------
@@ -425,33 +445,32 @@
 	 *
 	 * Limits the string based on the character count. Will preserve complete words.
 	 *
-	 * @access	public
 	 * @param	string
-	 * @param	integer
+	 * @param	int
 	 * @param	string
 	 * @return	string
 	 */
-	function limit_characters($str, $n = 500, $end_char = '&#8230;')
+	public function limit_characters($str, $n = 500, $end_char = '&#8230;')
 	{
 		if (strlen($str) < $n)
 		{
 			return $str;
 		}
 
-		$str = preg_replace("/\s+/", ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
+		$str = preg_replace('/\s+/', ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
 
 		if (strlen($str) <= $n)
 		{
 			return $str;
 		}
 
-		$out = "";
+		$out = '';
 		foreach (explode(' ', trim($str)) as $val)
 		{
 			$out .= $val.' ';
 			if (strlen($out) >= $n)
 			{
-				return trim($out).$end_char;
+				return rtrim($out).$end_char;
 			}
 		}
 	}
@@ -464,11 +483,10 @@
 	 * Converts Hight ascii text and MS Word special chars
 	 * to character entities
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function convert_ascii($str)
+	public function convert_ascii($str)
 	{
 		$count	= 1;
 		$out	= '';
@@ -484,16 +502,18 @@
 			}
 			else
 			{
-				if (count($temp) == 0)
+				if (count($temp) === 0)
 				{
 					$count = ($ordinal < 224) ? 2 : 3;
 				}
 
 				$temp[] = $ordinal;
 
-				if (count($temp) == $count)
+				if (count($temp) === $count)
 				{
-					$number = ($count == 3) ? (($temp['0'] % 16) * 4096) + (($temp['1'] % 64) * 64) + ($temp['2'] % 64) : (($temp['0'] % 32) * 64) + ($temp['1'] % 64);
+					$number = ($count === 3)
+						? (($temp[0] % 16) * 4096) + (($temp[1] % 64) * 64) + ($temp[2] % 64)
+						: (($temp[0] % 32) * 64) + ($temp[1] % 64);
 
 					$out .= '&#'.$number.';';
 					$count = 1;
@@ -510,11 +530,10 @@
 	/**
 	 * Set error message
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	void
 	 */
-	function set_error($msg)
+	public function set_error($msg)
 	{
 		log_message('error', $msg);
 		$this->error_msg[] = $msg;
@@ -525,24 +544,13 @@
 	/**
 	 * Show error messages
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	string
 	 * @return	string
 	 */
-	function display_errors($open = '<p>', $close = '</p>')
-	{
-		$str = '';
-		foreach ($this->error_msg as $val)
+	public function display_errors($open = '<p>', $close = '</p>')
 		{
-			$str .= $open.$val.$close;
-		}
-
-		return $str;
+		return (count($this->error_msg) > 0) ? $open.implode($close.$open, $this->error_msg).$close : '';
 	}
 
 }
-// END Trackback Class
-
-/* End of file Trackback.php */
-/* Location: ./system/libraries/Trackback.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Typography.php opensourcepos/system/libraries/Typography.php
--- pos-prod/system/libraries/Typography.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Typography.php	2016-05-23 15:32:31.947838763 -0700
@@ -1,48 +1,94 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Typography Class
  *
- *
- * @access		private
+ * @package		CodeIgniter
+ * @subpackage	Libraries
  * @category	Helpers
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/helpers/
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/typography.html
  */
 class CI_Typography {
 
-	// Block level elements that should not be wrapped inside <p> tags
-	var $block_elements = 'address|blockquote|div|dl|fieldset|form|h\d|hr|noscript|object|ol|p|pre|script|table|ul';
+	/**
+	 * Block level elements that should not be wrapped inside <p> tags
+	 *
+	 * @var string
+	 */
+	public $block_elements = 'address|blockquote|div|dl|fieldset|form|h\d|hr|noscript|object|ol|p|pre|script|table|ul';
 
-	// Elements that should not have <p> and <br /> tags within them.
-	var $skip_elements	= 'p|pre|ol|ul|dl|object|table|h\d';
+	/**
+	 * Elements that should not have <p> and <br /> tags within them.
+	 *
+	 * @var string
+	 */
+	public $skip_elements	= 'p|pre|ol|ul|dl|object|table|h\d';
 
-	// Tags we want the parser to completely ignore when splitting the string.
-	var $inline_elements = 'a|abbr|acronym|b|bdo|big|br|button|cite|code|del|dfn|em|i|img|ins|input|label|map|kbd|q|samp|select|small|span|strong|sub|sup|textarea|tt|var';
+	/**
+	 * Tags we want the parser to completely ignore when splitting the string.
+	 *
+	 * @var string
+	 */
+	public $inline_elements = 'a|abbr|acronym|b|bdo|big|br|button|cite|code|del|dfn|em|i|img|ins|input|label|map|kbd|q|samp|select|small|span|strong|sub|sup|textarea|tt|var';
 
-	// array of block level elements that require inner content to be within another block level element
-	var $inner_block_required = array('blockquote');
+	/**
+	 * array of block level elements that require inner content to be within another block level element
+	 *
+	 * @var array
+	 */
+	public $inner_block_required = array('blockquote');
 
-	// the last block element parsed
-	var $last_block_element = '';
+	/**
+	 * the last block element parsed
+	 *
+	 * @var string
+	 */
+	public $last_block_element = '';
 
-	// whether or not to protect quotes within { curly braces }
-	var $protect_braced_quotes = FALSE;
+	/**
+	 * whether or not to protect quotes within { curly braces }
+	 *
+	 * @var bool
+	 */
+	public $protect_braced_quotes = FALSE;
 
 	/**
 	 * Auto Typography
@@ -55,14 +101,13 @@
 	 *	- Converts double dashes into em-dashes.
 	 *  - Converts two spaces into entities
 	 *
-	 * @access	public
 	 * @param	string
 	 * @param	bool	whether to reduce more then two consecutive newlines to two
 	 * @return	string
 	 */
-	function auto_typography($str, $reduce_linebreaks = FALSE)
+	public function auto_typography($str, $reduce_linebreaks = FALSE)
 	{
-		if ($str == '')
+		if ($str === '')
 		{
 			return '';
 		}
@@ -82,9 +127,7 @@
 
 		// HTML comment tags don't conform to patterns of normal tags, so pull them out separately, only if needed
 		$html_comments = array();
-		if (strpos($str, '<!--') !== FALSE)
-		{
-			if (preg_match_all("#(<!\-\-.*?\-\->)#s", $str, $matches))
+		if (strpos($str, '<!--') !== FALSE && preg_match_all('#(<!\-\-.*?\-\->)#s', $str, $matches))
 			{
 				for ($i = 0, $total = count($matches[0]); $i < $total; $i++)
 				{
@@ -92,89 +135,84 @@
 					$str = str_replace($matches[0][$i], '{@HC'.$i.'}', $str);
 				}
 			}
-		}
 
 		// match and yank <pre> tags if they exist.  It's cheaper to do this separately since most content will
 		// not contain <pre> tags, and it keeps the PCRE patterns below simpler and faster
 		if (strpos($str, '<pre') !== FALSE)
 		{
-			$str = preg_replace_callback("#<pre.*?>.*?</pre>#si", array($this, '_protect_characters'), $str);
+			$str = preg_replace_callback('#<pre.*?>.*?</pre>#si', array($this, '_protect_characters'), $str);
 		}
 
 		// Convert quotes within tags to temporary markers.
-		$str = preg_replace_callback("#<.+?>#si", array($this, '_protect_characters'), $str);
+		$str = preg_replace_callback('#<.+?>#si', array($this, '_protect_characters'), $str);
 
 		// Do the same with braces if necessary
 		if ($this->protect_braced_quotes === TRUE)
 		{
-			$str = preg_replace_callback("#\{.+?\}#si", array($this, '_protect_characters'), $str);
+			$str = preg_replace_callback('#\{.+?\}#si', array($this, '_protect_characters'), $str);
 		}
 
 		// Convert "ignore" tags to temporary marker.  The parser splits out the string at every tag
 		// it encounters.  Certain inline tags, like image tags, links, span tags, etc. will be
 		// adversely affected if they are split out so we'll convert the opening bracket < temporarily to: {@TAG}
-		$str = preg_replace("#<(/*)(".$this->inline_elements.")([ >])#i", "{@TAG}\\1\\2\\3", $str);
+		$str = preg_replace('#<(/*)('.$this->inline_elements.')([ >])#i', '{@TAG}\\1\\2\\3', $str);
 
-		// Split the string at every tag.  This expression creates an array with this prototype:
-		//
-		//	[array]
-		//	{
-		//		[0] = <opening tag>
-		//		[1] = Content...
-		//		[2] = <closing tag>
-		//		Etc...
-		//	}
+		/* Split the string at every tag. This expression creates an array with this prototype:
+		 *
+		 *	[array]
+		 *	{
+		 *		[0] = <opening tag>
+		 *		[1] = Content...
+		 *		[2] = <closing tag>
+		 *		Etc...
+		 *	}
+		 */
 		$chunks = preg_split('/(<(?:[^<>]+(?:"[^"]*"|\'[^\']*\')?)+>)/', $str, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);
 
 		// Build our finalized string.  We cycle through the array, skipping tags, and processing the contained text
 		$str = '';
 		$process = TRUE;
-		$paragraph = FALSE;
-		$current_chunk = 0;
-		$total_chunks = count($chunks);
 
-		foreach ($chunks as $chunk)
+		for ($i = 0, $c = count($chunks) - 1; $i <= $c; $i++)
 		{
-			$current_chunk++;
-
 			// Are we dealing with a tag? If so, we'll skip the processing for this cycle.
 			// Well also set the "process" flag which allows us to skip <pre> tags and a few other things.
-			if (preg_match("#<(/*)(".$this->block_elements.").*?>#", $chunk, $match))
+			if (preg_match('#<(/*)('.$this->block_elements.').*?>#', $chunks[$i], $match))
 			{
-				if (preg_match("#".$this->skip_elements."#", $match[2]))
+				if (preg_match('#'.$this->skip_elements.'#', $match[2]))
 				{
-					$process =  ($match[1] == '/') ? TRUE : FALSE;
+					$process = ($match[1] === '/');
 				}
 
-				if ($match[1] == '')
+				if ($match[1] === '')
 				{
 					$this->last_block_element = $match[2];
 				}
 
-				$str .= $chunk;
+				$str .= $chunks[$i];
 				continue;
 			}
 
-			if ($process == FALSE)
+			if ($process === FALSE)
 			{
-				$str .= $chunk;
+				$str .= $chunks[$i];
 				continue;
 			}
 
 			//  Force a newline to make sure end tags get processed by _format_newlines()
-			if ($current_chunk == $total_chunks)
+			if ($i === $c)
 			{
-				$chunk .= "\n";
+				$chunks[$i] .= "\n";
 			}
 
 			//  Convert Newlines into <p> and <br /> tags
-			$str .= $this->_format_newlines($chunk);
+			$str .= $this->_format_newlines($chunks[$i]);
 		}
 
 		// No opening block level tag?  Add it if needed.
-		if ( ! preg_match("/^\s*<(?:".$this->block_elements.")/i", $str))
+		if ( ! preg_match('/^\s*<(?:'.$this->block_elements.')/i', $str))
 		{
-			$str = preg_replace("/^(.*?)<(".$this->block_elements.")/i", '<p>$1</p><$2', $str);
+			$str = preg_replace('/^(.*?)<('.$this->block_elements.')/i', '<p>$1</p><$2', $str);
 		}
 
 		// Convert quotes, elipsis, em-dashes, non-breaking spaces, and ampersands
@@ -221,7 +259,7 @@
 
 						// Similarly, there might be cases where a closing </block> will follow
 						// a closing </p> tag, so we'll correct it by adding a newline in between
-						"#</p></#"			=> "</p>\n</"
+						'#</p></#'			=> "</p>\n</"
 						);
 
 		// Do we need to reduce empty lines?
@@ -249,11 +287,10 @@
 	 * to curly entities, but it also converts em-dashes,
 	 * double spaces, and ampersands
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function format_characters($str)
+	public function format_characters($str)
 	{
 		static $table;
 
@@ -313,18 +350,12 @@
 	 *
 	 * Converts newline characters into either <p> tags or <br />
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function _format_newlines($str)
+	protected function _format_newlines($str)
 	{
-		if ($str == '')
-		{
-			return $str;
-		}
-
-		if (strpos($str, "\n") === FALSE  && ! in_array($this->last_block_element, $this->inner_block_required))
+		if ($str === '' OR (strpos($str, "\n") === FALSE && ! in_array($this->last_block_element, $this->inner_block_required)))
 		{
 			return $str;
 		}
@@ -333,10 +364,10 @@
 		$str = str_replace("\n\n", "</p>\n\n<p>", $str);
 
 		// Convert single spaces to <br /> tags
-		$str = preg_replace("/([^\n])(\n)([^\n])/", "\\1<br />\\2\\3", $str);
+		$str = preg_replace("/([^\n])(\n)([^\n])/", '\\1<br />\\2\\3', $str);
 
 		// Wrap the whole enchilada in enclosing paragraphs
-		if ($str != "\n")
+		if ($str !== "\n")
 		{
 			// We trim off the right-side new line so that the closing </p> tag
 			// will be positioned immediately following the string, matching
@@ -346,9 +377,7 @@
 
 		// Remove empty paragraphs if they are on the first line, as this
 		// is a potential unintended consequence of the previous code
-		$str = preg_replace("/<p><\/p>(.*)/", "\\1", $str, 1);
-
-		return $str;
+		return preg_replace('/<p><\/p>(.*)/', '\\1', $str, 1);
 	}
 
 	// ------------------------------------------------------------------------
@@ -361,11 +390,10 @@
 	 * and we don't want double dashes converted to emdash entities, so they are marked with {@DD}
 	 * likewise double spaces are converted to {@NBS} to prevent entity conversion
 	 *
-	 * @access	public
 	 * @param	array
 	 * @return	string
 	 */
-	function _protect_characters($match)
+	protected function _protect_characters($match)
 	{
 		return str_replace(array("'",'"','--','  '), array('{@SQ}', '{@DQ}', '{@DD}', '{@NBS}'), $match[0]);
 	}
@@ -375,36 +403,22 @@
 	/**
 	 * Convert newlines to HTML line breaks except within PRE tags
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	string
 	 */
-	function nl2br_except_pre($str)
-	{
-		$ex = explode("pre>",$str);
-		$ct = count($ex);
-
-		$newstr = "";
-		for ($i = 0; $i < $ct; $i++)
+	public function nl2br_except_pre($str)
 		{
-			if (($i % 2) == 0)
+		$newstr = '';
+		for ($ex = explode('pre>', $str), $ct = count($ex), $i = 0; $i < $ct; $i++)
 			{
-				$newstr .= nl2br($ex[$i]);
-			}
-			else
+			$newstr .= (($i % 2) === 0) ? nl2br($ex[$i]) : $ex[$i];
+			if ($ct - 1 !== $i)
 			{
-				$newstr .= $ex[$i];
+				$newstr .= 'pre>';
 			}
-
-			if ($ct - 1 != $i)
-				$newstr .= "pre>";
 		}
 
 		return $newstr;
 	}
 
 }
-// END Typography Class
-
-/* End of file Typography.php */
-/* Location: ./system/libraries/Typography.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Unit_test.php opensourcepos/system/libraries/Unit_test.php
--- pos-prod/system/libraries/Unit_test.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Unit_test.php	2016-05-23 15:32:31.947838763 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
  * @since		Version 1.3.1
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Unit Testing Class
@@ -23,22 +45,54 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	UnitTesting
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/uri.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/unit_testing.html
  */
 class CI_Unit_test {
 
-	var $active					= TRUE;
-	var $results				= array();
-	var $strict					= FALSE;
-	var $_template				= NULL;
-	var $_template_rows			= NULL;
-	var $_test_items_visible	= array();
+	/**
+	 * Active flag
+	 *
+	 * @var	bool
+	 */
+	public $active = TRUE;
 
-	public function __construct()
-	{
-		// These are the default items visible when a test is run.
-		$this->_test_items_visible = array (
+	/**
+	 * Test results
+	 *
+	 * @var	array
+	 */
+	public $results = array();
+
+	/**
+	 * Strict comparison flag
+	 *
+	 * Whether to use === or == when comparing
+	 *
+	 * @var	bool
+	 */
+	public $strict = FALSE;
+
+	/**
+	 * Template
+	 *
+	 * @var	string
+	 */
+	protected $_template = NULL;
+
+	/**
+	 * Template rows
+	 *
+	 * @var	string
+	 */
+	protected $_template_rows = NULL;
+
+	/**
+	 * List of visible test items
+	 *
+	 * @var	array
+	 */
+	protected $_test_items_visible	= array(
 							'test_name',
 							'test_datatype',
 							'res_datatype',
@@ -48,7 +102,16 @@
 							'notes'
 						);
 
-		log_message('debug', "Unit Testing Class Initialized");
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @return	void
+	 */
+	public function __construct()
+	{
+		log_message('info', 'Unit Testing Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -58,13 +121,12 @@
 	 *
 	 * Runs the supplied tests
 	 *
-	 * @access	public
-	 * @param	array
+	 * @param	array	$items
 	 * @return	void
 	 */
-	function set_test_items($items = array())
+	public function set_test_items($items)
 	{
-		if ( ! empty($items) AND is_array($items))
+		if ( ! empty($items) && is_array($items))
 		{
 			$this->_test_items_visible = $items;
 		}
@@ -77,38 +139,34 @@
 	 *
 	 * Runs the supplied tests
 	 *
-	 * @access	public
-	 * @param	mixed
-	 * @param	mixed
-	 * @param	string
+	 * @param	mixed	$test
+	 * @param	mixed	$expected
+	 * @param	string	$test_name
+	 * @param	string	$notes
 	 * @return	string
 	 */
-	function run($test, $expected = TRUE, $test_name = 'undefined', $notes = '')
+	public function run($test, $expected = TRUE, $test_name = 'undefined', $notes = '')
 	{
-		if ($this->active == FALSE)
+		if ($this->active === FALSE)
 		{
 			return FALSE;
 		}
 
-		if (in_array($expected, array('is_object', 'is_string', 'is_bool', 'is_true', 'is_false', 'is_int', 'is_numeric', 'is_float', 'is_double', 'is_array', 'is_null'), TRUE))
+		if (in_array($expected, array('is_object', 'is_string', 'is_bool', 'is_true', 'is_false', 'is_int', 'is_numeric', 'is_float', 'is_double', 'is_array', 'is_null', 'is_resource'), TRUE))
 		{
-			$expected = str_replace('is_float', 'is_double', $expected);
-			$result = ($expected($test)) ? TRUE : FALSE;
+			$expected = str_replace('is_double', 'is_float', $expected);
+			$result = $expected($test);
 			$extype = str_replace(array('true', 'false'), 'bool', str_replace('is_', '', $expected));
 		}
 		else
 		{
-			if ($this->strict == TRUE)
-				$result = ($test === $expected) ? TRUE : FALSE;
-			else
-				$result = ($test == $expected) ? TRUE : FALSE;
-
+			$result = ($this->strict === TRUE) ? ($test === $expected) : ($test == $expected);
 			$extype = gettype($expected);
 		}
 
 		$back = $this->_backtrace();
 
-		$report[] = array (
+		$report = array (
 							'test_name'			=> $test_name,
 							'test_datatype'		=> gettype($test),
 							'res_datatype'		=> $extype,
@@ -120,7 +178,7 @@
 
 		$this->results[] = $report;
 
-		return($this->report($this->result($report)));
+		return $this->report($this->result(array($report)));
 	}
 
 	// --------------------------------------------------------------------
@@ -130,12 +188,12 @@
 	 *
 	 * Displays a table with the test data
 	 *
-	 * @access	public
+	 * @param	array	 $result
 	 * @return	string
 	 */
-	function report($result = array())
+	public function report($result = array())
 	{
-		if (count($result) == 0)
+		if (count($result) === 0)
 		{
 			$result = $this->result();
 		}
@@ -152,22 +210,19 @@
 
 			foreach ($res as $key => $val)
 			{
-				if ($key == $CI->lang->line('ut_result'))
+				if ($key === $CI->lang->line('ut_result'))
 				{
-					if ($val == $CI->lang->line('ut_passed'))
+					if ($val === $CI->lang->line('ut_passed'))
 					{
 						$val = '<span style="color: #0C0;">'.$val.'</span>';
 					}
-					elseif ($val == $CI->lang->line('ut_failed'))
+					elseif ($val === $CI->lang->line('ut_failed'))
 					{
 						$val = '<span style="color: #C00;">'.$val.'</span>';
 					}
 				}
 
-				$temp = $this->_template_rows;
-				$temp = str_replace('{item}', $key, $temp);
-				$temp = str_replace('{result}', $val, $temp);
-				$table .= $temp;
+				$table .= str_replace(array('{item}', '{result}'), array($key, $val), $this->_template_rows);
 			}
 
 			$r .= str_replace('{rows}', $table, $this->_template);
@@ -183,13 +238,12 @@
 	 *
 	 * Causes the evaluation to use === rather than ==
 	 *
-	 * @access	public
-	 * @param	bool
-	 * @return	null
+	 * @param	bool	$state
+	 * @return	void
 	 */
-	function use_strict($state = TRUE)
+	public function use_strict($state = TRUE)
 	{
-		$this->strict = ($state == FALSE) ? FALSE : TRUE;
+		$this->strict = (bool) $state;
 	}
 
 	// --------------------------------------------------------------------
@@ -199,13 +253,12 @@
 	 *
 	 * Enables/disables unit testing
 	 *
-	 * @access	public
 	 * @param	bool
-	 * @return	null
+	 * @return	void
 	 */
-	function active($state = TRUE)
+	public function active($state = TRUE)
 	{
-		$this->active = ($state == FALSE) ? FALSE : TRUE;
+		$this->active = (bool) $state;
 	}
 
 	// --------------------------------------------------------------------
@@ -215,15 +268,15 @@
 	 *
 	 * Returns the raw result data
 	 *
-	 * @access	public
+	 * @param	array	$results
 	 * @return	array
 	 */
-	function result($results = array())
+	public function result($results = array())
 	{
 		$CI =& get_instance();
 		$CI->load->language('unit_test');
 
-		if (count($results) == 0)
+		if (count($results) === 0)
 		{
 			$results = $this->results;
 		}
@@ -238,26 +291,15 @@
 				{
 					continue;
 				}
-
-				if (is_array($val))
-				{
-					foreach ($val as $k => $v)
-					{
-						if (FALSE !== ($line = $CI->lang->line(strtolower('ut_'.$v))))
-						{
-							$v = $line;
-						}
-						$temp[$CI->lang->line('ut_'.$k)] = $v;
-					}
-				}
-				else
+				elseif (in_array($key, array('test_name', 'test_datatype', 'test_res_datatype', 'result'), TRUE))
 				{
-					if (FALSE !== ($line = $CI->lang->line(strtolower('ut_'.$val))))
+					if (FALSE !== ($line = $CI->lang->line(strtolower('ut_'.$val), FALSE)))
 					{
 						$val = $line;
 					}
-					$temp[$CI->lang->line('ut_'.$key)] = $val;
 				}
+
+				$temp[$CI->lang->line('ut_'.$key, FALSE)] = $val;
 			}
 
 			$retval[] = $temp;
@@ -273,11 +315,10 @@
 	 *
 	 * This lets us set the template to be used to display results
 	 *
-	 * @access	public
 	 * @param	string
 	 * @return	void
 	 */
-	function set_template($template)
+	public function set_template($template)
 	{
 		$this->_template = $template;
 	}
@@ -289,21 +330,15 @@
 	 *
 	 * This lets us show file names and line numbers
 	 *
-	 * @access	private
 	 * @return	array
 	 */
-	function _backtrace()
-	{
-		if (function_exists('debug_backtrace'))
+	protected function _backtrace()
 		{
 			$back = debug_backtrace();
-
-			$file = ( ! isset($back['1']['file'])) ? '' : $back['1']['file'];
-			$line = ( ! isset($back['1']['line'])) ? '' : $back['1']['line'];
-
-			return array('file' => $file, 'line' => $line);
-		}
-		return array('file' => 'Unknown', 'line' => 'Unknown');
+		return array(
+			'file' => (isset($back[1]['file']) ? $back[1]['file'] : ''),
+			'line' => (isset($back[1]['line']) ? $back[1]['line'] : '')
+		);
 	}
 
 	// --------------------------------------------------------------------
@@ -311,19 +346,14 @@
 	/**
 	 * Get Default Template
 	 *
-	 * @access	private
 	 * @return	string
 	 */
-	function _default_template()
+	protected function _default_template()
 	{
-		$this->_template = "\n".'<table style="width:100%; font-size:small; margin:10px 0; border-collapse:collapse; border:1px solid #CCC;">';
-		$this->_template .= '{rows}';
-		$this->_template .= "\n".'</table>';
-
-		$this->_template_rows = "\n\t".'<tr>';
-		$this->_template_rows .= "\n\t\t".'<th style="text-align: left; border-bottom:1px solid #CCC;">{item}</th>';
-		$this->_template_rows .= "\n\t\t".'<td style="border-bottom:1px solid #CCC;">{result}</td>';
-		$this->_template_rows .= "\n\t".'</tr>';
+		$this->_template = "\n".'<table style="width:100%; font-size:small; margin:10px 0; border-collapse:collapse; border:1px solid #CCC;">{rows}'."\n</table>";
+
+		$this->_template_rows = "\n\t<tr>\n\t\t".'<th style="text-align: left; border-bottom:1px solid #CCC;">{item}</th>'
+					."\n\t\t".'<td style="border-bottom:1px solid #CCC;">{result}</td>'."\n\t</tr>";
 	}
 
 	// --------------------------------------------------------------------
@@ -333,51 +363,45 @@
 	 *
 	 * Harvests the data within the template {pseudo-variables}
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	function _parse_template()
+	protected function _parse_template()
 	{
-		if ( ! is_null($this->_template_rows))
+		if ($this->_template_rows !== NULL)
 		{
 			return;
 		}
 
-		if (is_null($this->_template))
-		{
-			$this->_default_template();
-			return;
-		}
-
-		if ( ! preg_match("/\{rows\}(.*?)\{\/rows\}/si", $this->_template, $match))
+		if ($this->_template === NULL OR ! preg_match('/\{rows\}(.*?)\{\/rows\}/si', $this->_template, $match))
 		{
 			$this->_default_template();
 			return;
 		}
 
-		$this->_template_rows = $match['1'];
-		$this->_template = str_replace($match['0'], '{rows}', $this->_template);
+		$this->_template_rows = $match[1];
+		$this->_template = str_replace($match[0], '{rows}', $this->_template);
 	}
 
 }
-// END Unit_test Class
 
 /**
- * Helper functions to test boolean true/false
+ * Helper function to test boolean TRUE
  *
- *
- * @access	private
+ * @param	mixed	$test
  * @return	bool
  */
 function is_true($test)
 {
-	return (is_bool($test) AND $test === TRUE) ? TRUE : FALSE;
+	return ($test === TRUE);
 }
+
+/**
+ * Helper function to test boolean FALSE
+ *
+ * @param	mixed	$test
+ * @return	bool
+ */
 function is_false($test)
 {
-	return (is_bool($test) AND $test === FALSE) ? TRUE : FALSE;
+	return ($test === FALSE);
 }
-
-
-/* End of file Unit_test.php */
-/* Location: ./system/libraries/Unit_test.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Upload.php opensourcepos/system/libraries/Upload.php
--- pos-prod/system/libraries/Upload.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Upload.php	2016-05-23 15:32:31.948838748 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * File Uploading Class
@@ -21,52 +43,260 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Uploads
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/file_uploading.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/file_uploading.html
  */
 class CI_Upload {
 
+	/**
+	 * Maximum file size
+	 *
+	 * @var	int
+	 */
 	public $max_size				= 0;
+
+	/**
+	 * Maximum image width
+	 *
+	 * @var	int
+	 */
 	public $max_width				= 0;
+
+	/**
+	 * Maximum image height
+	 *
+	 * @var	int
+	 */
 	public $max_height				= 0;
+
+	/**
+	 * Minimum image width
+	 *
+	 * @var	int
+	 */
+	public $min_width = 0;
+
+	/**
+	 * Minimum image height
+	 *
+	 * @var	int
+	 */
+	public $min_height = 0;
+
+	/**
+	 * Maximum filename length
+	 *
+	 * @var	int
+	 */
 	public $max_filename			= 0;
-	public $allowed_types			= "";
-	public $file_temp				= "";
-	public $file_name				= "";
-	public $orig_name				= "";
-	public $file_type				= "";
-	public $file_size				= "";
-	public $file_ext				= "";
-	public $upload_path				= "";
+
+	/**
+	 * Maximum duplicate filename increment ID
+	 *
+	 * @var	int
+	 */
+	public $max_filename_increment = 100;
+
+	/**
+	 * Allowed file types
+	 *
+	 * @var	string
+	 */
+	public $allowed_types = '';
+
+	/**
+	 * Temporary filename
+	 *
+	 * @var	string
+	 */
+	public $file_temp = '';
+
+	/**
+	 * Filename
+	 *
+	 * @var	string
+	 */
+	public $file_name = '';
+
+	/**
+	 * Original filename
+	 *
+	 * @var	string
+	 */
+	public $orig_name = '';
+
+	/**
+	 * File type
+	 *
+	 * @var	string
+	 */
+	public $file_type = '';
+
+	/**
+	 * File size
+	 *
+	 * @var	int
+	 */
+	public $file_size = NULL;
+
+	/**
+	 * Filename extension
+	 *
+	 * @var	string
+	 */
+	public $file_ext = '';
+
+	/**
+	 * Force filename extension to lowercase
+	 *
+	 * @var	string
+	 */
+	public $file_ext_tolower = FALSE;
+
+	/**
+	 * Upload path
+	 *
+	 * @var	string
+	 */
+	public $upload_path = '';
+
+	/**
+	 * Overwrite flag
+	 *
+	 * @var	bool
+	 */
 	public $overwrite				= FALSE;
+
+	/**
+	 * Obfuscate filename flag
+	 *
+	 * @var	bool
+	 */
 	public $encrypt_name			= FALSE;
+
+	/**
+	 * Is image flag
+	 *
+	 * @var	bool
+	 */
 	public $is_image				= FALSE;
-	public $image_width				= '';
-	public $image_height			= '';
+
+	/**
+	 * Image width
+	 *
+	 * @var	int
+	 */
+	public $image_width = NULL;
+
+	/**
+	 * Image height
+	 *
+	 * @var	int
+	 */
+	public $image_height = NULL;
+
+	/**
+	 * Image type
+	 *
+	 * @var	string
+	 */
 	public $image_type				= '';
+
+	/**
+	 * Image size string
+	 *
+	 * @var	string
+	 */
 	public $image_size_str			= '';
+
+	/**
+	 * Error messages list
+	 *
+	 * @var	array
+	 */
 	public $error_msg				= array();
-	public $mimes					= array();
+
+	/**
+	 * Remove spaces flag
+	 *
+	 * @var	bool
+	 */
 	public $remove_spaces			= TRUE;
+
+	/**
+	 * MIME detection flag
+	 *
+	 * @var	bool
+	 */
+	public $detect_mime = TRUE;
+
+	/**
+	 * XSS filter flag
+	 *
+	 * @var	bool
+	 */
 	public $xss_clean				= FALSE;
-	public $temp_prefix				= "temp_file_";
+
+	/**
+	 * Apache mod_mime fix flag
+	 *
+	 * @var	bool
+	 */
+	public $mod_mime_fix = TRUE;
+
+	/**
+	 * Temporary filename prefix
+	 *
+	 * @var	string
+	 */
+	public $temp_prefix = 'temp_file_';
+
+	/**
+	 * Filename sent by the client
+	 *
+	 * @var	bool
+	 */
 	public $client_name				= '';
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * Filename override
+	 *
+	 * @var	string
+	 */
 	protected $_file_name_override	= '';
 
 	/**
+	 * MIME types list
+	 *
+	 * @var	array
+	 */
+	protected $_mimes = array();
+
+	/**
+	 * CI Singleton
+	 *
+	 * @var	object
+	 */
+	protected $_CI;
+
+	// --------------------------------------------------------------------
+
+	/**
 	 * Constructor
 	 *
-	 * @access	public
+	 * @param	array	$props
+	 * @return	void
 	 */
-	public function __construct($props = array())
-	{
-		if (count($props) > 0)
+	public function __construct($config = array())
 		{
-			$this->initialize($props);
-		}
+		empty($config) OR $this->initialize($config, FALSE);
+
+		$this->_mimes =& get_mimes();
+		$this->_CI =& get_instance();
 
-		log_message('debug', "Upload Class Initialized");
+		log_message('info', 'Upload Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -74,48 +304,29 @@
 	/**
 	 * Initialize preferences
 	 *
-	 * @param	array
-	 * @return	void
+	 * @param	array	$config
+	 * @param	bool	$reset
+	 * @return	CI_Upload
 	 */
-	public function initialize($config = array())
+	public function initialize(array $config = array(), $reset = TRUE)
 	{
-		$defaults = array(
-							'max_size'			=> 0,
-							'max_width'			=> 0,
-							'max_height'		=> 0,
-							'max_filename'		=> 0,
-							'allowed_types'		=> "",
-							'file_temp'			=> "",
-							'file_name'			=> "",
-							'orig_name'			=> "",
-							'file_type'			=> "",
-							'file_size'			=> "",
-							'file_ext'			=> "",
-							'upload_path'		=> "",
-							'overwrite'			=> FALSE,
-							'encrypt_name'		=> FALSE,
-							'is_image'			=> FALSE,
-							'image_width'		=> '',
-							'image_height'		=> '',
-							'image_type'		=> '',
-							'image_size_str'	=> '',
-							'error_msg'			=> array(),
-							'mimes'				=> array(),
-							'remove_spaces'		=> TRUE,
-							'xss_clean'			=> FALSE,
-							'temp_prefix'		=> "temp_file_",
-							'client_name'		=> ''
-						);
-
+		$reflection = new ReflectionClass($this);
 
-		foreach ($defaults as $key => $val)
+		if ($reset === TRUE)
+		{
+			$defaults = $reflection->getDefaultProperties();
+			foreach (array_keys($defaults) as $key)
+			{
+				if ($key[0] === '_')
 		{
+					continue;
+				}
+
 			if (isset($config[$key]))
 			{
-				$method = 'set_'.$key;
-				if (method_exists($this, $method))
+					if ($reflection->hasMethod('set_'.$key))
 				{
-					$this->$method($config[$key]);
+						$this->{'set_'.$key}($config[$key]);
 				}
 				else
 				{
@@ -124,13 +335,32 @@
 			}
 			else
 			{
-				$this->$key = $val;
+					$this->$key = $defaults[$key];
+				}
+			}
+		}
+		else
+		{
+			foreach ($config as $key => &$value)
+			{
+				if ($key[0] !== '_' && $reflection->hasProperty($key))
+				{
+					if ($reflection->hasMethod('set_'.$key))
+					{
+						$this->{'set_'.$key}($value);
+					}
+					else
+					{
+						$this->$key = $value;
+					}
+				}
 			}
 		}
 
 		// if a file_name was provided in the config, use it instead of the user input
 		// supplied file name for all uploads until initialized again
 		$this->_file_name_override = $this->file_name;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -138,6 +368,7 @@
 	/**
 	 * Perform the file upload
 	 *
+	 * @param	string	$field
 	 * @return	bool
 	 */
 	public function do_upload($field = 'userfile')
@@ -142,11 +373,31 @@
 	 */
 	public function do_upload($field = 'userfile')
 	{
-
 	// Is $_FILES[$field] set? If not, no reason to continue.
-		if ( ! isset($_FILES[$field]))
+		if (isset($_FILES[$field]))
+		{
+			$_file = $_FILES[$field];
+		}
+		// Does the field name contain array notation?
+		elseif (($c = preg_match_all('/(?:^[^\[]+)|\[[^]]*\]/', $field, $matches)) > 1)
+		{
+			$_file = $_FILES;
+			for ($i = 0; $i < $c; $i++)
+			{
+				// We can't track numeric iterations, only full field names are accepted
+				if (($field = trim($matches[0][$i], '[]')) === '' OR ! isset($_file[$field]))
 		{
-			$this->set_error('upload_no_file_selected');
+					$_file = NULL;
+					break;
+				}
+
+				$_file = $_file[$field];
+			}
+		}
+
+		if ( ! isset($_file))
+		{
+			$this->set_error('upload_no_file_selected', 'debug');
 			return FALSE;
 		}
 
@@ -158,34 +409,35 @@
 		}
 
 		// Was the file able to be uploaded? If not, determine the reason why.
-		if ( ! is_uploaded_file($_FILES[$field]['tmp_name']))
+		if ( ! is_uploaded_file($_file['tmp_name']))
 		{
-			$error = ( ! isset($_FILES[$field]['error'])) ? 4 : $_FILES[$field]['error'];
+			$error = isset($_file['error']) ? $_file['error'] : 4;
 
 			switch($error)
 			{
-				case 1:	// UPLOAD_ERR_INI_SIZE
-					$this->set_error('upload_file_exceeds_limit');
+				case UPLOAD_ERR_INI_SIZE:
+					$this->set_error('upload_file_exceeds_limit', 'info');
 					break;
-				case 2: // UPLOAD_ERR_FORM_SIZE
-					$this->set_error('upload_file_exceeds_form_limit');
+				case UPLOAD_ERR_FORM_SIZE:
+					$this->set_error('upload_file_exceeds_form_limit', 'info');
 					break;
-				case 3: // UPLOAD_ERR_PARTIAL
-					$this->set_error('upload_file_partial');
+				case UPLOAD_ERR_PARTIAL:
+					$this->set_error('upload_file_partial', 'debug');
 					break;
-				case 4: // UPLOAD_ERR_NO_FILE
-					$this->set_error('upload_no_file_selected');
+				case UPLOAD_ERR_NO_FILE:
+					$this->set_error('upload_no_file_selected', 'debug');
 					break;
-				case 6: // UPLOAD_ERR_NO_TMP_DIR
-					$this->set_error('upload_no_temp_directory');
+				case UPLOAD_ERR_NO_TMP_DIR:
+					$this->set_error('upload_no_temp_directory', 'error');
 					break;
-				case 7: // UPLOAD_ERR_CANT_WRITE
-					$this->set_error('upload_unable_to_write_file');
+				case UPLOAD_ERR_CANT_WRITE:
+					$this->set_error('upload_unable_to_write_file', 'error');
 					break;
-				case 8: // UPLOAD_ERR_EXTENSION
-					$this->set_error('upload_stopped_by_extension');
+				case UPLOAD_ERR_EXTENSION:
+					$this->set_error('upload_stopped_by_extension', 'debug');
 					break;
-				default :   $this->set_error('upload_no_file_selected');
+				default:
+					$this->set_error('upload_no_file_selected', 'debug');
 					break;
 			}
 
@@ -192,26 +444,31 @@
 			return FALSE;
 		}
 
-
 		// Set the uploaded data as class variables
-		$this->file_temp = $_FILES[$field]['tmp_name'];
-		$this->file_size = $_FILES[$field]['size'];
-		$this->_file_mime_type($_FILES[$field]);
-		$this->file_type = preg_replace("/^(.+?);.*$/", "\\1", $this->file_type);
+		$this->file_temp = $_file['tmp_name'];
+		$this->file_size = $_file['size'];
+
+		// Skip MIME type detection?
+		if ($this->detect_mime !== FALSE)
+		{
+			$this->_file_mime_type($_file);
+		}
+
+		$this->file_type = preg_replace('/^(.+?);.*$/', '\\1', $this->file_type);
 		$this->file_type = strtolower(trim(stripslashes($this->file_type), '"'));
-		$this->file_name = $this->_prep_filename($_FILES[$field]['name']);
+		$this->file_name = $this->_prep_filename($_file['name']);
 		$this->file_ext	 = $this->get_extension($this->file_name);
 		$this->client_name = $this->file_name;
 
 		// Is the file type allowed to be uploaded?
 		if ( ! $this->is_allowed_filetype())
 		{
-			$this->set_error('upload_invalid_filetype');
+			$this->set_error('upload_invalid_filetype', 'debug');
 			return FALSE;
 		}
 
 		// if we're overriding, let's now make sure the new name and type is allowed
-		if ($this->_file_name_override != '')
+		if ($this->_file_name_override !== '')
 		{
 			$this->file_name = $this->_prep_filename($this->_file_name_override);
 
@@ -220,16 +477,15 @@
 			{
 				$this->file_name .= $this->file_ext;
 			}
-
-			// An extension was provided, lets have it!
 			else
 			{
+				// An extension was provided, let's have it!
 				$this->file_ext	 = $this->get_extension($this->_file_name_override);
 			}
 
 			if ( ! $this->is_allowed_filetype(TRUE))
 			{
-				$this->set_error('upload_invalid_filetype');
+				$this->set_error('upload_invalid_filetype', 'debug');
 				return FALSE;
 			}
 		}
@@ -243,20 +499,20 @@
 		// Is the file size within the allowed maximum?
 		if ( ! $this->is_allowed_filesize())
 		{
-			$this->set_error('upload_invalid_filesize');
+			$this->set_error('upload_invalid_filesize', 'info');
 			return FALSE;
 		}
 
 		// Are the image dimensions within the allowed size?
-		// Note: This can fail if the server has an open_basdir restriction.
+		// Note: This can fail if the server has an open_basedir restriction.
 		if ( ! $this->is_allowed_dimensions())
 		{
-			$this->set_error('upload_invalid_dimensions');
+			$this->set_error('upload_invalid_dimensions', 'info');
 			return FALSE;
 		}
 
 		// Sanitize the file name for security
-		$this->file_name = $this->clean_file_name($this->file_name);
+		$this->file_name = $this->_CI->security->sanitize_filename($this->file_name);
 
 		// Truncate the file name if it's too long
 		if ($this->max_filename > 0)
@@ -265,9 +521,15 @@
 		}
 
 		// Remove white spaces in the name
-		if ($this->remove_spaces == TRUE)
+		if ($this->remove_spaces === TRUE)
+		{
+			$this->file_name = preg_replace('/\s+/', '_', $this->file_name);
+		}
+
+		if ($this->file_ext_tolower && ($ext_length = strlen($this->file_ext)))
 		{
-			$this->file_name = preg_replace("/\s+/", "_", $this->file_name);
+			// file_ext was previously lower-cased by a get_extension() call
+			$this->file_name = substr($this->file_name, 0, -$ext_length).$this->file_ext;
 		}
 
 		/*
@@ -277,16 +539,10 @@
 		 * If it returns false there was a problem.
 		 */
 		$this->orig_name = $this->file_name;
-
-		if ($this->overwrite == FALSE)
-		{
-			$this->file_name = $this->set_filename($this->upload_path, $this->file_name);
-
-			if ($this->file_name === FALSE)
+		if (FALSE === ($this->file_name = $this->set_filename($this->upload_path, $this->file_name)))
 			{
 				return FALSE;
 			}
-		}
 
 		/*
 		 * Run the file through the XSS hacking filter
@@ -294,14 +550,11 @@
 		 * embedded within a file.  Scripts can easily
 		 * be disguised as images or other file types.
 		 */
-		if ($this->xss_clean)
-		{
-			if ($this->do_xss_clean() === FALSE)
+		if ($this->xss_clean && $this->do_xss_clean() === FALSE)
 			{
-				$this->set_error('upload_unable_to_write_file');
+			$this->set_error('upload_unable_to_write_file', 'error');
 				return FALSE;
 			}
-		}
 
 		/*
 		 * Move the file to the final destination
@@ -314,7 +567,7 @@
 		{
 			if ( ! @move_uploaded_file($this->file_temp, $this->upload_path.$this->file_name))
 			{
-				$this->set_error('upload_destination_error');
+				$this->set_error('upload_destination_error', 'error');
 				return FALSE;
 			}
 		}
@@ -338,11 +591,12 @@
 	 * Returns an associative array containing all of the information
 	 * related to the upload, allowing the developer easy access in one array.
 	 *
-	 * @return	array
+	 * @param	string	$index
+	 * @return	mixed
 	 */
-	public function data()
+	public function data($index = NULL)
 	{
-		return array (
+		$data = array(
 						'file_name'			=> $this->file_name,
 						'file_type'			=> $this->file_type,
 						'file_path'			=> $this->upload_path,
@@ -358,6 +612,13 @@
 						'image_type'		=> $this->image_type,
 						'image_size_str'	=> $this->image_size_str,
 					);
+
+		if ( ! empty($index))
+		{
+			return isset($data[$index]) ? $data[$index] : NULL;
+		}
+
+		return $data;
 	}
 
 	// --------------------------------------------------------------------
@@ -365,13 +626,14 @@
 	/**
 	 * Set Upload Path
 	 *
-	 * @param	string
-	 * @return	void
+	 * @param	string	$path
+	 * @return	CI_Upload
 	 */
 	public function set_upload_path($path)
 	{
 		// Make sure it has a trailing slash
 		$this->upload_path = rtrim($path, '/').'/';
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -383,19 +645,18 @@
 	 * existence of a file with the same name. If found, it will append a
 	 * number to the end of the filename to avoid overwriting a pre-existing file.
 	 *
-	 * @param	string
-	 * @param	string
+	 * @param	string	$path
+	 * @param	string	$filename
 	 * @return	string
 	 */
 	public function set_filename($path, $filename)
 	{
-		if ($this->encrypt_name == TRUE)
+		if ($this->encrypt_name === TRUE)
 		{
-			mt_srand();
 			$filename = md5(uniqid(mt_rand())).$this->file_ext;
 		}
 
-		if ( ! file_exists($path.$filename))
+		if ($this->overwrite === TRUE OR ! file_exists($path.$filename))
 		{
 			return $filename;
 		}
@@ -403,7 +664,7 @@
 		$filename = str_replace($this->file_ext, '', $filename);
 
 		$new_filename = '';
-		for ($i = 1; $i < 100; $i++)
+		for ($i = 1; $i < $this->max_filename_increment; $i++)
 		{
 			if ( ! file_exists($path.$filename.$i.$this->file_ext))
 			{
@@ -412,9 +673,9 @@
 			}
 		}
 
-		if ($new_filename == '')
+		if ($new_filename === '')
 		{
-			$this->set_error('upload_bad_filename');
+			$this->set_error('upload_bad_filename', 'debug');
 			return FALSE;
 		}
 		else
@@ -428,12 +689,29 @@
 	/**
 	 * Set Maximum File Size
 	 *
-	 * @param	integer
-	 * @return	void
+	 * @param	int	$n
+	 * @return	CI_Upload
 	 */
 	public function set_max_filesize($n)
 	{
-		$this->max_size = ((int) $n < 0) ? 0: (int) $n;
+		$this->max_size = ($n < 0) ? 0 : (int) $n;
+		return $this;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Set Maximum File Size
+	 *
+	 * An internal alias to set_max_filesize() to help with configuration
+	 * as initialize() will look for a set_<property_name>() method ...
+	 *
+	 * @param	int	$n
+	 * @return	CI_Upload
+	 */
+	protected function set_max_size($n)
+	{
+		return $this->set_max_filesize($n);
 	}
 
 	// --------------------------------------------------------------------
@@ -441,12 +719,13 @@
 	/**
 	 * Set Maximum File Name Length
 	 *
-	 * @param	integer
-	 * @return	void
+	 * @param	int	$n
+	 * @return	CI_Upload
 	 */
 	public function set_max_filename($n)
 	{
-		$this->max_filename = ((int) $n < 0) ? 0: (int) $n;
+		$this->max_filename = ($n < 0) ? 0 : (int) $n;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -454,12 +733,13 @@
 	/**
 	 * Set Maximum Image Width
 	 *
-	 * @param	integer
-	 * @return	void
+	 * @param	int	$n
+	 * @return	CI_Upload
 	 */
 	public function set_max_width($n)
 	{
-		$this->max_width = ((int) $n < 0) ? 0: (int) $n;
+		$this->max_width = ($n < 0) ? 0 : (int) $n;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -467,30 +747,57 @@
 	/**
 	 * Set Maximum Image Height
 	 *
-	 * @param	integer
-	 * @return	void
+	 * @param	int	$n
+	 * @return	CI_Upload
 	 */
 	public function set_max_height($n)
 	{
-		$this->max_height = ((int) $n < 0) ? 0: (int) $n;
+		$this->max_height = ($n < 0) ? 0 : (int) $n;
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
 
 	/**
-	 * Set Allowed File Types
+	 * Set minimum image width
 	 *
-	 * @param	string
-	 * @return	void
+	 * @param	int	$n
+	 * @return	CI_Upload
 	 */
-	public function set_allowed_types($types)
+	public function set_min_width($n)
 	{
-		if ( ! is_array($types) && $types == '*')
+		$this->min_width = ($n < 0) ? 0 : (int) $n;
+		return $this;
+	}
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Set minimum image height
+	 *
+	 * @param	int	$n
+	 * @return	CI_Upload
+	 */
+	public function set_min_height($n)
 		{
-			$this->allowed_types = '*';
-			return;
+		$this->min_height = ($n < 0) ? 0 : (int) $n;
+		return $this;
 		}
-		$this->allowed_types = explode('|', $types);
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Set Allowed File Types
+	 *
+	 * @param	mixed	$types
+	 * @return	CI_Upload
+	 */
+	public function set_allowed_types($types)
+	{
+		$this->allowed_types = (is_array($types) OR $types === '*')
+			? $types
+			: explode('|', $types);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -500,28 +807,25 @@
 	 *
 	 * Uses GD to determine the width/height/type of image
 	 *
-	 * @param	string
-	 * @return	void
+	 * @param	string	$path
+	 * @return	CI_Upload
 	 */
 	public function set_image_properties($path = '')
 	{
-		if ( ! $this->is_image())
-		{
-			return;
-		}
-
-		if (function_exists('getimagesize'))
+		if ($this->is_image() && function_exists('getimagesize'))
 		{
 			if (FALSE !== ($D = @getimagesize($path)))
 			{
 				$types = array(1 => 'gif', 2 => 'jpeg', 3 => 'png');
 
-				$this->image_width		= $D['0'];
-				$this->image_height		= $D['1'];
-				$this->image_type		= ( ! isset($types[$D['2']])) ? 'unknown' : $types[$D['2']];
-				$this->image_size_str	= $D['3'];  // string containing height and width
+				$this->image_width	= $D[0];
+				$this->image_height	= $D[1];
+				$this->image_type	= isset($types[$D[2]]) ? $types[$D[2]] : 'unknown';
+				$this->image_size_str	= $D[3]; // string containing height and width
 			}
 		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -532,12 +836,13 @@
 	 * Enables the XSS flag so that the file that was uploaded
 	 * will be run through the XSS filter.
 	 *
-	 * @param	bool
-	 * @return	void
+	 * @param	bool	$flag
+	 * @return	CI_Upload
 	 */
 	public function set_xss_clean($flag = FALSE)
 	{
-		$this->xss_clean = ($flag == TRUE) ? TRUE : FALSE;
+		$this->xss_clean = ($flag === TRUE);
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -559,19 +864,14 @@
 		{
 			$this->file_type = 'image/png';
 		}
-
-		if (in_array($this->file_type, $jpeg_mimes))
+		elseif (in_array($this->file_type, $jpeg_mimes))
 		{
 			$this->file_type = 'image/jpeg';
 		}
 
-		$img_mimes = array(
-							'image/gif',
-							'image/jpeg',
-							'image/png',
-						);
+		$img_mimes = array('image/gif',	'image/jpeg', 'image/png');
 
-		return (in_array($this->file_type, $img_mimes, TRUE)) ? TRUE : FALSE;
+		return in_array($this->file_type, $img_mimes, TRUE);
 	}
 
 	// --------------------------------------------------------------------
@@ -579,56 +879,45 @@
 	/**
 	 * Verify that the filetype is allowed
 	 *
+	 * @param	bool	$ignore_mime
 	 * @return	bool
 	 */
 	public function is_allowed_filetype($ignore_mime = FALSE)
 	{
-		if ($this->allowed_types == '*')
+		if ($this->allowed_types === '*')
 		{
 			return TRUE;
 		}
 
-		if (count($this->allowed_types) == 0 OR ! is_array($this->allowed_types))
+		if (empty($this->allowed_types) OR ! is_array($this->allowed_types))
 		{
-			$this->set_error('upload_no_file_types');
+			$this->set_error('upload_no_file_types', 'debug');
 			return FALSE;
 		}
 
 		$ext = strtolower(ltrim($this->file_ext, '.'));
 
-		if ( ! in_array($ext, $this->allowed_types))
+		if ( ! in_array($ext, $this->allowed_types, TRUE))
 		{
 			return FALSE;
 		}
 
 		// Images get some additional checks
-		$image_types = array('gif', 'jpg', 'jpeg', 'png', 'jpe');
-
-		if (in_array($ext, $image_types))
-		{
-			if (getimagesize($this->file_temp) === FALSE)
+		if (in_array($ext, array('gif', 'jpg', 'jpeg', 'jpe', 'png'), TRUE) && @getimagesize($this->file_temp) === FALSE)
 			{
 				return FALSE;
 			}
-		}
 
 		if ($ignore_mime === TRUE)
 		{
 			return TRUE;
 		}
 
-		$mime = $this->mimes_types($ext);
-
-		if (is_array($mime))
-		{
-			if (in_array($this->file_type, $mime, TRUE))
-			{
-				return TRUE;
-			}
-		}
-		elseif ($mime == $this->file_type)
+		if (isset($this->_mimes[$ext]))
 		{
-				return TRUE;
+			return is_array($this->_mimes[$ext])
+				? in_array($this->file_type, $this->_mimes[$ext], TRUE)
+				: ($this->_mimes[$ext] === $this->file_type);
 		}
 
 		return FALSE;
@@ -643,14 +932,7 @@
 	 */
 	public function is_allowed_filesize()
 	{
-		if ($this->max_size != 0  AND  $this->file_size > $this->max_size)
-		{
-			return FALSE;
-		}
-		else
-		{
-			return TRUE;
-		}
+		return ($this->max_size === 0 OR $this->max_size > $this->file_size);
 	}
 
 	// --------------------------------------------------------------------
@@ -671,17 +953,25 @@
 		{
 			$D = @getimagesize($this->file_temp);
 
-			if ($this->max_width > 0 AND $D['0'] > $this->max_width)
+			if ($this->max_width > 0 && $D[0] > $this->max_width)
 			{
 				return FALSE;
 			}
 
-			if ($this->max_height > 0 AND $D['1'] > $this->max_height)
+			if ($this->max_height > 0 && $D[1] > $this->max_height)
 			{
 				return FALSE;
 			}
 
-			return TRUE;
+			if ($this->min_width > 0 && $D[0] < $this->min_width)
+			{
+				return FALSE;
+			}
+
+			if ($this->min_height > 0 && $D[1] < $this->min_height)
+			{
+				return FALSE;
+			}
 		}
 
 		return TRUE;
@@ -694,35 +984,34 @@
 	 *
 	 * Verifies that it is a valid upload path with proper permissions.
 	 *
-	 *
 	 * @return	bool
 	 */
 	public function validate_upload_path()
 	{
-		if ($this->upload_path == '')
+		if ($this->upload_path === '')
 		{
-			$this->set_error('upload_no_filepath');
+			$this->set_error('upload_no_filepath', 'error');
 			return FALSE;
 		}
 
-		if (function_exists('realpath') AND @realpath($this->upload_path) !== FALSE)
+		if (realpath($this->upload_path) !== FALSE)
 		{
-			$this->upload_path = str_replace("\\", "/", realpath($this->upload_path));
+			$this->upload_path = str_replace('\\', '/', realpath($this->upload_path));
 		}
 
-		if ( ! @is_dir($this->upload_path))
+		if ( ! is_dir($this->upload_path))
 		{
-			$this->set_error('upload_no_filepath');
+			$this->set_error('upload_no_filepath', 'error');
 			return FALSE;
 		}
 
 		if ( ! is_really_writable($this->upload_path))
 		{
-			$this->set_error('upload_not_writable');
+			$this->set_error('upload_not_writable', 'error');
 			return FALSE;
 		}
 
-		$this->upload_path = preg_replace("/(.+?)\/*$/", "\\1/",  $this->upload_path);
+		$this->upload_path = preg_replace('/(.+?)\/*$/', '\\1/',  $this->upload_path);
 		return TRUE;
 	}
 
@@ -731,57 +1020,20 @@
 	/**
 	 * Extract the file extension
 	 *
-	 * @param	string
+	 * @param	string	$filename
 	 * @return	string
 	 */
 	public function get_extension($filename)
 	{
 		$x = explode('.', $filename);
-		return '.'.end($x);
-	}
 
-	// --------------------------------------------------------------------
-
-	/**
-	 * Clean the file name for security
-	 *
-	 * @param	string
-	 * @return	string
-	 */
-	public function clean_file_name($filename)
+		if (count($x) === 1)
 	{
-		$bad = array(
-						"<!--",
-						"-->",
-						"'",
-						"<",
-						">",
-						'"',
-						'&',
-						'$',
-						'=',
-						';',
-						'?',
-						'/',
-						"%20",
-						"%22",
-						"%3c",		// <
-						"%253c",	// <
-						"%3e",		// >
-						"%0e",		// >
-						"%28",		// (
-						"%29",		// )
-						"%2528",	// (
-						"%26",		// &
-						"%24",		// $
-						"%3f",		// ?
-						"%3b",		// ;
-						"%3d"		// =
-					);
-
-		$filename = str_replace($bad, '', $filename);
+			return '';
+		}
 
-		return stripslashes($filename);
+		$ext = ($this->file_ext_tolower) ? strtolower(end($x)) : end($x);
+		return '.'.$ext;
 	}
 
 	// --------------------------------------------------------------------
@@ -789,7 +1041,8 @@
 	/**
 	 * Limit the File Name Length
 	 *
-	 * @param	string
+	 * @param	string	$filename
+	 * @param	int	$length
 	 * @return	string
 	 */
 	public function limit_filename_length($filename, $length)
@@ -819,7 +1072,7 @@
 	 * I'm not sure that it won't negatively affect certain files in unexpected ways,
 	 * but so far I haven't found that it causes trouble.
 	 *
-	 * @return	void
+	 * @return	string
 	 */
 	public function do_xss_clean()
 	{
@@ -830,17 +1083,17 @@
 			return FALSE;
 		}
 
-		if (function_exists('memory_get_usage') && memory_get_usage() && ini_get('memory_limit') != '')
+		if (memory_get_usage() && ($memory_limit = ini_get('memory_limit')))
 		{
-			$current = ini_get('memory_limit') * 1024 * 1024;
+			$memory_limit *= 1024 * 1024;
 
 			// There was a bug/behavioural change in PHP 5.2, where numbers over one million get output
 			// into scientific notation.  number_format() ensures this number is an integer
 			// http://bugs.php.net/bug.php?id=43053
 
-			$new_memory = number_format(ceil(filesize($file) + $current), 0, '.', '');
+			$memory_limit = number_format(ceil(filesize($file) + $memory_limit), 0, '.', '');
 
-			ini_set('memory_limit', $new_memory); // When an integer is used, the value is measured in bytes. - PHP.net
+			ini_set('memory_limit', $memory_limit); // When an integer is used, the value is measured in bytes. - PHP.net
 		}
 
 		// If the file being uploaded is an image, then we should have no problem with XSS attacks (in theory), but
@@ -864,14 +1117,8 @@
 			// <a, <body, <head, <html, <img, <plaintext, <pre, <script, <table, <title
 			// title is basically just in SVG, but we filter it anyhow
 
-			if ( ! preg_match('/<(a|body|head|html|img|plaintext|pre|script|table|title)[\s>]/i', $opening_bytes))
-			{
-				return TRUE; // its an image, no "triggers" detected in the first 256 bytes, we're good
-			}
-			else
-			{
-				return FALSE;
-			}
+			// if it's an image or no "triggers" detected in the first 256 bytes - we're good
+			return ! preg_match('/<(a|body|head|html|img|plaintext|pre|script|table|title)[\s>]/i', $opening_bytes);
 		}
 
 		if (($data = @file_get_contents($file)) === FALSE)
@@ -879,8 +1126,7 @@
 			return FALSE;
 		}
 
-		$CI =& get_instance();
-		return $CI->security->xss_clean($data, TRUE);
+		return $this->_CI->security->xss_clean($data, TRUE);
 	}
 
 	// --------------------------------------------------------------------
@@ -888,29 +1134,22 @@
 	/**
 	 * Set an error message
 	 *
-	 * @param	string
-	 * @return	void
+	 * @param	string	$msg
+	 * @return	CI_Upload
 	 */
-	public function set_error($msg)
+	public function set_error($msg, $log_level = 'error')
 	{
-		$CI =& get_instance();
-		$CI->lang->load('upload');
+		$this->_CI->lang->load('upload');
 
-		if (is_array($msg))
-		{
+		is_array($msg) OR $msg = array($msg);
 			foreach ($msg as $val)
 			{
-				$msg = ($CI->lang->line($val) == FALSE) ? $val : $CI->lang->line($val);
-				$this->error_msg[] = $msg;
-				log_message('error', $msg);
-			}
-		}
-		else
-		{
-			$msg = ($CI->lang->line($msg) == FALSE) ? $msg : $CI->lang->line($msg);
+			$msg = ($this->_CI->lang->line($val) === FALSE) ? $val : $this->_CI->lang->line($val);
 			$this->error_msg[] = $msg;
-			log_message('error', $msg);
+			log_message($log_level, $msg);
 		}
+
+		return $this;
 	}
 
 	// --------------------------------------------------------------------
@@ -918,56 +1157,13 @@
 	/**
 	 * Display the error message
 	 *
-	 * @param	string
-	 * @param	string
+	 * @param	string	$open
+	 * @param	string	$close
 	 * @return	string
 	 */
 	public function display_errors($open = '<p>', $close = '</p>')
 	{
-		$str = '';
-		foreach ($this->error_msg as $val)
-		{
-			$str .= $open.$val.$close;
-		}
-
-		return $str;
-	}
-
-	// --------------------------------------------------------------------
-
-	/**
-	 * List of Mime Types
-	 *
-	 * This is a list of mime types.  We use it to validate
-	 * the "allowed types" set by the developer
-	 *
-	 * @param	string
-	 * @return	string
-	 */
-	public function mimes_types($mime)
-	{
-		global $mimes;
-
-		if (count($this->mimes) == 0)
-		{
-			if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
-			{
-				include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
-			}
-			elseif (is_file(APPPATH.'config/mimes.php'))
-			{
-				include(APPPATH.'config//mimes.php');
-			}
-			else
-			{
-				return FALSE;
-			}
-
-			$this->mimes = $mimes;
-			unset($mimes);
-		}
-
-		return ( ! isset($this->mimes[$mime])) ? FALSE : $this->mimes[$mime];
+		return (count($this->error_msg) > 0) ? $open.implode($close.$open, $this->error_msg).$close : '';
 	}
 
 	// --------------------------------------------------------------------
@@ -975,38 +1171,24 @@
 	/**
 	 * Prep Filename
 	 *
-	 * Prevents possible script execution from Apache's handling of files multiple extensions
-	 * http://httpd.apache.org/docs/1.3/mod/mod_mime.html#multipleext
+	 * Prevents possible script execution from Apache's handling
+	 * of files' multiple extensions.
+	 *
+	 * @link	http://httpd.apache.org/docs/1.3/mod/mod_mime.html#multipleext
 	 *
-	 * @param	string
+	 * @param	string	$filename
 	 * @return	string
 	 */
 	protected function _prep_filename($filename)
 	{
-		if (strpos($filename, '.') === FALSE OR $this->allowed_types == '*')
+		if ($this->mod_mime_fix === FALSE OR $this->allowed_types === '*' OR ($ext_pos = strrpos($filename, '.')) === FALSE)
 		{
 			return $filename;
 		}
 
-		$parts		= explode('.', $filename);
-		$ext		= array_pop($parts);
-		$filename	= array_shift($parts);
-
-		foreach ($parts as $part)
-		{
-			if ( ! in_array(strtolower($part), $this->allowed_types) OR $this->mimes_types(strtolower($part)) === FALSE)
-			{
-				$filename .= '.'.$part.'_';
-			}
-			else
-			{
-				$filename .= '.'.$part;
-			}
-		}
-
-		$filename .= '.'.$ext;
-
-		return $filename;
+		$ext = substr($filename, $ext_pos);
+		$filename = substr($filename, 0, $ext_pos);
+		return str_replace('.', '_', $filename).$ext;
 	}
 
 	// --------------------------------------------------------------------
@@ -1017,7 +1199,7 @@
 	 * Detects the (actual) MIME type of the uploaded file, if possible.
 	 * The input array is expected to be $_FILES[$field]
 	 *
-	 * @param	array
+	 * @param	array	$file
 	 * @return	void
 	 */
 	protected function _file_mime_type($file)
@@ -1032,7 +1214,7 @@
 		 */
 		if (function_exists('finfo_file'))
 		{
-			$finfo = finfo_open(FILEINFO_MIME);
+			$finfo = @finfo_open(FILEINFO_MIME);
 			if (is_resource($finfo)) // It is possible that a FALSE value is returned, if there is no magic MIME database file found on the system
 			{
 				$mime = @finfo_file($finfo, $file['tmp_name']);
@@ -1059,16 +1241,18 @@
 		 * Notes:
 		 *	- the DIRECTORY_SEPARATOR comparison ensures that we're not on a Windows system
 		 *	- many system admins would disable the exec(), shell_exec(), popen() and similar functions
-		 *	  due to security concerns, hence the function_exists() checks
+		 *	  due to security concerns, hence the function_usable() checks
 		 */
 		if (DIRECTORY_SEPARATOR !== '\\')
 		{
-			$cmd = 'file --brief --mime ' . escapeshellarg($file['tmp_name']) . ' 2>&1';
+			$cmd = function_exists('escapeshellarg')
+				? 'file --brief --mime '.escapeshellarg($file['tmp_name']).' 2>&1'
+				: 'file --brief --mime '.$file['tmp_name'].' 2>&1';
 
-			if (function_exists('exec'))
+			if (function_usable('exec'))
 			{
 				/* This might look confusing, as $mime is being populated with all of the output when set in the second parameter.
-				 * However, we only neeed the last line, which is the actual return value of exec(), and as such - it overwrites
+				 * However, we only need the last line, which is the actual return value of exec(), and as such - it overwrites
 				 * anything that could already be set for $mime previously. This effectively makes the second parameter a dummy
 				 * value, which is only put to allow us to get the return status code.
 				 */
@@ -1080,7 +1264,7 @@
 				}
 			}
 
-			if ( (bool) @ini_get('safe_mode') === FALSE && function_exists('shell_exec'))
+			if ( ! ini_get('safe_mode') && function_usable('shell_exec'))
 			{
 				$mime = @shell_exec($cmd);
 				if (strlen($mime) > 0)
@@ -1094,7 +1278,7 @@
 				}
 			}
 
-			if (function_exists('popen'))
+			if (function_usable('popen'))
 			{
 				$proc = @popen($cmd, 'r');
 				if (is_resource($proc))
@@ -1127,10 +1311,4 @@
 		$this->file_type = $file['type'];
 	}
 
-	// --------------------------------------------------------------------
-
 }
-// END Upload Class
-
-/* End of file Upload.php */
-/* Location: ./system/libraries/Upload.php */
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/User_agent.php opensourcepos/system/libraries/User_agent.php
--- pos-prod/system/libraries/User_agent.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/User_agent.php	2016-05-23 15:32:31.948838748 -0700
@@ -1,59 +1,174 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * User Agent Class
  *
- * Identifies the platform, browser, robot, or mobile devise of the browsing agent
+ * Identifies the platform, browser, robot, or mobile device of the browsing agent
  *
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	User Agent
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/user_agent.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/user_agent.html
  */
 class CI_User_agent {
 
-	var $agent		= NULL;
+	/**
+	 * Current user-agent
+	 *
+	 * @var string
+	 */
+	public $agent = NULL;
+
+	/**
+	 * Flag for if the user-agent belongs to a browser
+	 *
+	 * @var bool
+	 */
+	public $is_browser = FALSE;
+
+	/**
+	 * Flag for if the user-agent is a robot
+	 *
+	 * @var bool
+	 */
+	public $is_robot = FALSE;
+
+	/**
+	 * Flag for if the user-agent is a mobile browser
+	 *
+	 * @var bool
+	 */
+	public $is_mobile = FALSE;
+
+	/**
+	 * Languages accepted by the current user agent
+	 *
+	 * @var array
+	 */
+	public $languages = array();
 
-	var $is_browser	= FALSE;
-	var $is_robot	= FALSE;
-	var $is_mobile	= FALSE;
-
-	var $languages	= array();
-	var $charsets	= array();
-
-	var $platforms	= array();
-	var $browsers	= array();
-	var $mobiles	= array();
-	var $robots		= array();
-
-	var $platform	= '';
-	var $browser	= '';
-	var $version	= '';
-	var $mobile		= '';
-	var $robot		= '';
+	/**
+	 * Character sets accepted by the current user agent
+	 *
+	 * @var array
+	 */
+	public $charsets = array();
+
+	/**
+	 * List of platforms to compare against current user agent
+	 *
+	 * @var array
+	 */
+	public $platforms = array();
+
+	/**
+	 * List of browsers to compare against current user agent
+	 *
+	 * @var array
+	 */
+	public $browsers = array();
+
+	/**
+	 * List of mobile browsers to compare against current user agent
+	 *
+	 * @var array
+	 */
+	public $mobiles = array();
+
+	/**
+	 * List of robots to compare against current user agent
+	 *
+	 * @var array
+	 */
+	public $robots = array();
+
+	/**
+	 * Current user-agent platform
+	 *
+	 * @var string
+	 */
+	public $platform = '';
+
+	/**
+	 * Current user-agent browser
+	 *
+	 * @var string
+	 */
+	public $browser = '';
+
+	/**
+	 * Current user-agent version
+	 *
+	 * @var string
+	 */
+	public $version = '';
+
+	/**
+	 * Current user-agent mobile name
+	 *
+	 * @var string
+	 */
+	public $mobile = '';
+
+	/**
+	 * Current user-agent robot name
+	 *
+	 * @var string
+	 */
+	public $robot = '';
+
+	/**
+	 * HTTP Referer
+	 *
+	 * @var	mixed
+	 */
+	public $referer;
+
+	// --------------------------------------------------------------------
 
 	/**
 	 * Constructor
 	 *
 	 * Sets the User Agent and runs the compilation routine
 	 *
-	 * @access	public
 	 * @return	void
 	 */
 	public function __construct()
@@ -63,15 +178,12 @@
 			$this->agent = trim($_SERVER['HTTP_USER_AGENT']);
 		}
 
-		if ( ! is_null($this->agent))
-		{
-			if ($this->_load_agent_file())
+		if ($this->agent !== NULL && $this->_load_agent_file())
 			{
 				$this->_compile_data();
 			}
-		}
 
-		log_message('debug', "User Agent Class Initialized");
+		log_message('info', 'User Agent Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -79,20 +191,22 @@
 	/**
 	 * Compile the User Agent Data
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	private function _load_agent_file()
+	protected function _load_agent_file()
 	{
-		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php'))
+		if (($found = file_exists(APPPATH.'config/user_agents.php')))
 		{
-			include(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php');
+			include(APPPATH.'config/user_agents.php');
 		}
-		elseif (is_file(APPPATH.'config/user_agents.php'))
+
+		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php'))
 		{
-			include(APPPATH.'config/user_agents.php');
+			include(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php');
+			$found = TRUE;
 		}
-		else
+
+		if ($found !== TRUE)
 		{
 			return FALSE;
 		}
@@ -135,10 +249,9 @@
 	/**
 	 * Compile the User Agent Data
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	private function _compile_data()
+	protected function _compile_data()
 	{
 		$this->_set_platform();
 
@@ -156,16 +269,15 @@
 	/**
 	 * Set the Platform
 	 *
-	 * @access	private
-	 * @return	mixed
+	 * @return	bool
 	 */
-	private function _set_platform()
+	protected function _set_platform()
 	{
-		if (is_array($this->platforms) AND count($this->platforms) > 0)
+		if (is_array($this->platforms) && count($this->platforms) > 0)
 		{
 			foreach ($this->platforms as $key => $val)
 			{
-				if (preg_match("|".preg_quote($key)."|i", $this->agent))
+				if (preg_match('|'.preg_quote($key).'|i', $this->agent))
 				{
 					$this->platform = $val;
 					return TRUE;
@@ -172,7 +284,9 @@
 				}
 			}
 		}
+
 		$this->platform = 'Unknown Platform';
+		return FALSE;
 	}
 
 	// --------------------------------------------------------------------
@@ -180,16 +294,15 @@
 	/**
 	 * Set the Browser
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	private function _set_browser()
+	protected function _set_browser()
 	{
-		if (is_array($this->browsers) AND count($this->browsers) > 0)
+		if (is_array($this->browsers) && count($this->browsers) > 0)
 		{
 			foreach ($this->browsers as $key => $val)
 			{
-				if (preg_match("|".preg_quote($key).".*?([0-9\.]+)|i", $this->agent, $match))
+				if (preg_match('|'.$key.'.*?([0-9\.]+)|i', $this->agent, $match))
 				{
 					$this->is_browser = TRUE;
 					$this->version = $match[1];
@@ -207,19 +321,19 @@
 	/**
 	 * Set the Robot
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	private function _set_robot()
+	protected function _set_robot()
 	{
-		if (is_array($this->robots) AND count($this->robots) > 0)
+		if (is_array($this->robots) && count($this->robots) > 0)
 		{
 			foreach ($this->robots as $key => $val)
 			{
-				if (preg_match("|".preg_quote($key)."|i", $this->agent))
+				if (preg_match('|'.preg_quote($key).'|i', $this->agent))
 				{
 					$this->is_robot = TRUE;
 					$this->robot = $val;
+					$this->_set_mobile();
 					return TRUE;
 				}
 			}
@@ -232,16 +347,15 @@
 	/**
 	 * Set the Mobile Device
 	 *
-	 * @access	private
 	 * @return	bool
 	 */
-	private function _set_mobile()
+	protected function _set_mobile()
 	{
-		if (is_array($this->mobiles) AND count($this->mobiles) > 0)
+		if (is_array($this->mobiles) && count($this->mobiles) > 0)
 		{
 			foreach ($this->mobiles as $key => $val)
 			{
-				if (FALSE !== (strpos(strtolower($this->agent), $key)))
+				if (FALSE !== (stripos($this->agent, $key)))
 				{
 					$this->is_mobile = TRUE;
 					$this->mobile = $val;
@@ -257,19 +372,16 @@
 	/**
 	 * Set the accepted languages
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	private function _set_languages()
+	protected function _set_languages()
 	{
-		if ((count($this->languages) == 0) AND isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) AND $_SERVER['HTTP_ACCEPT_LANGUAGE'] != '')
+		if ((count($this->languages) === 0) && ! empty($_SERVER['HTTP_ACCEPT_LANGUAGE']))
 		{
-			$languages = preg_replace('/(;q=[0-9\.]+)/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_LANGUAGE'])));
-
-			$this->languages = explode(',', $languages);
+			$this->languages = explode(',', preg_replace('/(;\s?q=[0-9\.]+)|\s/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_LANGUAGE']))));
 		}
 
-		if (count($this->languages) == 0)
+		if (count($this->languages) === 0)
 		{
 			$this->languages = array('Undefined');
 		}
@@ -280,19 +392,16 @@
 	/**
 	 * Set the accepted character sets
 	 *
-	 * @access	private
 	 * @return	void
 	 */
-	private function _set_charsets()
+	protected function _set_charsets()
 	{
-		if ((count($this->charsets) == 0) AND isset($_SERVER['HTTP_ACCEPT_CHARSET']) AND $_SERVER['HTTP_ACCEPT_CHARSET'] != '')
+		if ((count($this->charsets) === 0) && ! empty($_SERVER['HTTP_ACCEPT_CHARSET']))
 		{
-			$charsets = preg_replace('/(;q=.+)/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_CHARSET'])));
-
-			$this->charsets = explode(',', $charsets);
+			$this->charsets = explode(',', preg_replace('/(;\s?q=.+)|\s/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_CHARSET']))));
 		}
 
-		if (count($this->charsets) == 0)
+		if (count($this->charsets) === 0)
 		{
 			$this->charsets = array('Undefined');
 		}
@@ -303,7 +412,7 @@
 	/**
 	 * Is Browser
 	 *
-	 * @access	public
+	 * @param	string	$key
 	 * @return	bool
 	 */
 	public function is_browser($key = NULL)
@@ -320,7 +429,7 @@
 		}
 
 		// Check for a specific browser
-		return array_key_exists($key, $this->browsers) AND $this->browser === $this->browsers[$key];
+		return (isset($this->browsers[$key]) && $this->browser === $this->browsers[$key]);
 	}
 
 	// --------------------------------------------------------------------
@@ -328,7 +437,7 @@
 	/**
 	 * Is Robot
 	 *
-	 * @access	public
+	 * @param	string	$key
 	 * @return	bool
 	 */
 	public function is_robot($key = NULL)
@@ -345,7 +454,7 @@
 		}
 
 		// Check for a specific robot
-		return array_key_exists($key, $this->robots) AND $this->robot === $this->robots[$key];
+		return (isset($this->robots[$key]) && $this->robot === $this->robots[$key]);
 	}
 
 	// --------------------------------------------------------------------
@@ -353,7 +462,7 @@
 	/**
 	 * Is Mobile
 	 *
-	 * @access	public
+	 * @param	string	$key
 	 * @return	bool
 	 */
 	public function is_mobile($key = NULL)
@@ -370,7 +479,7 @@
 		}
 
 		// Check for a specific robot
-		return array_key_exists($key, $this->mobiles) AND $this->mobile === $this->mobiles[$key];
+		return (isset($this->mobiles[$key]) && $this->mobile === $this->mobiles[$key]);
 	}
 
 	// --------------------------------------------------------------------
@@ -378,16 +487,26 @@
 	/**
 	 * Is this a referral from another site?
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
 	public function is_referral()
 	{
-		if ( ! isset($_SERVER['HTTP_REFERER']) OR $_SERVER['HTTP_REFERER'] == '')
+		if ( ! isset($this->referer))
 		{
-			return FALSE;
+			if (empty($_SERVER['HTTP_REFERER']))
+			{
+				$this->referer = FALSE;
+			}
+			else
+			{
+				$referer_host = @parse_url($_SERVER['HTTP_REFERER'], PHP_URL_HOST);
+				$own_host = parse_url(config_item('base_url'), PHP_URL_HOST);
+
+				$this->referer = ($referer_host && $referer_host !== $own_host);
 		}
-		return TRUE;
+		}
+
+		return $this->referer;
 	}
 
 	// --------------------------------------------------------------------
@@ -395,7 +514,6 @@
 	/**
 	 * Agent String
 	 *
-	 * @access	public
 	 * @return	string
 	 */
 	public function agent_string()
@@ -408,7 +526,6 @@
 	/**
 	 * Get Platform
 	 *
-	 * @access	public
 	 * @return	string
 	 */
 	public function platform()
@@ -421,7 +538,6 @@
 	/**
 	 * Get Browser Name
 	 *
-	 * @access	public
 	 * @return	string
 	 */
 	public function browser()
@@ -434,7 +550,6 @@
 	/**
 	 * Get the Browser Version
 	 *
-	 * @access	public
 	 * @return	string
 	 */
 	public function version()
@@ -447,7 +562,6 @@
 	/**
 	 * Get The Robot Name
 	 *
-	 * @access	public
 	 * @return	string
 	 */
 	public function robot()
@@ -459,7 +573,6 @@
 	/**
 	 * Get the Mobile Device
 	 *
-	 * @access	public
 	 * @return	string
 	 */
 	public function mobile()
@@ -472,12 +585,11 @@
 	/**
 	 * Get the referrer
 	 *
-	 * @access	public
 	 * @return	bool
 	 */
 	public function referrer()
 	{
-		return ( ! isset($_SERVER['HTTP_REFERER']) OR $_SERVER['HTTP_REFERER'] == '') ? '' : trim($_SERVER['HTTP_REFERER']);
+		return empty($_SERVER['HTTP_REFERER']) ? '' : trim($_SERVER['HTTP_REFERER']);
 	}
 
 	// --------------------------------------------------------------------
@@ -485,12 +597,11 @@
 	/**
 	 * Get the accepted languages
 	 *
-	 * @access	public
 	 * @return	array
 	 */
 	public function languages()
 	{
-		if (count($this->languages) == 0)
+		if (count($this->languages) === 0)
 		{
 			$this->_set_languages();
 		}
@@ -503,12 +614,11 @@
 	/**
 	 * Get the accepted Character Sets
 	 *
-	 * @access	public
 	 * @return	array
 	 */
 	public function charsets()
 	{
-		if (count($this->charsets) == 0)
+		if (count($this->charsets) === 0)
 		{
 			$this->_set_charsets();
 		}
@@ -521,12 +631,12 @@
 	/**
 	 * Test for a particular language
 	 *
-	 * @access	public
+	 * @param	string	$lang
 	 * @return	bool
 	 */
 	public function accept_lang($lang = 'en')
 	{
-		return (in_array(strtolower($lang), $this->languages(), TRUE));
+		return in_array(strtolower($lang), $this->languages(), TRUE);
 	}
 
 	// --------------------------------------------------------------------
@@ -534,16 +644,40 @@
 	/**
 	 * Test for a particular character set
 	 *
-	 * @access	public
+	 * @param	string	$charset
 	 * @return	bool
 	 */
 	public function accept_charset($charset = 'utf-8')
 	{
-		return (in_array(strtolower($charset), $this->charsets(), TRUE));
+		return in_array(strtolower($charset), $this->charsets(), TRUE);
 	}
 
-}
+	// --------------------------------------------------------------------
+
+	/**
+	 * Parse a custom user-agent string
+	 *
+	 * @param	string	$string
+	 * @return	void
+	 */
+	public function parse($string)
+	{
+		// Reset values
+		$this->is_browser = FALSE;
+		$this->is_robot = FALSE;
+		$this->is_mobile = FALSE;
+		$this->browser = '';
+		$this->version = '';
+		$this->mobile = '';
+		$this->robot = '';
 
+		// Set the new user-agent string and parse it, unless empty
+		$this->agent = $string;
 
-/* End of file User_agent.php */
-/* Location: ./system/libraries/User_agent.php */
\ No newline at end of file
+		if ( ! empty($string))
+		{
+			$this->_compile_data();
+		}
+	}
+
+}
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Xmlrpc.php opensourcepos/system/libraries/Xmlrpc.php
--- pos-prod/system/libraries/Xmlrpc.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Xmlrpc.php	2016-05-23 15:32:31.948838748 -0700
@@ -1,17 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 if ( ! function_exists('xml_parser_create'))
 {
@@ -27,51 +50,219 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	XML-RPC
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
  */
 class CI_Xmlrpc {
 
-	var $debug			= FALSE;	// Debugging on or off
-	var $xmlrpcI4		= 'i4';
-	var $xmlrpcInt		= 'int';
-	var $xmlrpcBoolean	= 'boolean';
-	var $xmlrpcDouble	= 'double';
-	var $xmlrpcString	= 'string';
-	var $xmlrpcDateTime	= 'dateTime.iso8601';
-	var $xmlrpcBase64	= 'base64';
-	var $xmlrpcArray	= 'array';
-	var $xmlrpcStruct	= 'struct';
-
-	var $xmlrpcTypes	= array();
-	var $valid_parents	= array();
-	var $xmlrpcerr		= array();	// Response numbers
-	var $xmlrpcstr		= array();  // Response strings
-
-	var $xmlrpc_defencoding = 'UTF-8';
-	var $xmlrpcName			= 'XML-RPC for CodeIgniter';
-	var $xmlrpcVersion		= '1.1';
-	var $xmlrpcerruser		= 800; // Start of user errors
-	var $xmlrpcerrxml		= 100; // Start of XML Parse errors
-	var $xmlrpc_backslash	= ''; // formulate backslashes for escaping regexp
-
-	var $client;
-	var $method;
-	var $data;
-	var $message			= '';
-	var $error				= '';		// Error string for request
-	var $result;
-	var $response			= array();  // Response from remote server
+	/**
+	 * Debug flag
+	 *
+	 * @var	bool
+	 */
+	public $debug		= FALSE;
+
+	/**
+	 * I4 data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcI4	= 'i4';
 
-	var $xss_clean			= TRUE;
+	/**
+	 * Integer data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcInt	= 'int';
 
-	//-------------------------------------
-	//  VALUES THAT MULTIPLE CLASSES NEED
-	//-------------------------------------
+	/**
+	 * Boolean data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcBoolean	= 'boolean';
+
+	/**
+	 * Double data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcDouble	= 'double';
+
+	/**
+	 * String data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcString	= 'string';
+
+	/**
+	 * DateTime format
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcDateTime	= 'dateTime.iso8601';
+
+	/**
+	 * Base64 data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcBase64	= 'base64';
+
+	/**
+	 * Array data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcArray	= 'array';
+
+	/**
+	 * Struct data type
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcStruct	= 'struct';
+
+	/**
+	 * Data types list
+	 *
+	 * @var	array
+	 */
+	public $xmlrpcTypes	= array();
+
+	/**
+	 * Valid parents list
+	 *
+	 * @var	array
+	 */
+	public $valid_parents	= array();
+
+	/**
+	 * Response error numbers list
+	 *
+	 * @var	array
+	 */
+	public $xmlrpcerr		= array();
+
+	/**
+	 * Response error messages list
+	 *
+	 * @var	string[]
+	 */
+	public $xmlrpcstr		= array();
+
+	/**
+	 * Encoding charset
+	 *
+	 * @var	string
+	 */
+	public $xmlrpc_defencoding	= 'UTF-8';
+
+	/**
+	 * XML-RPC client name
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcName		= 'XML-RPC for CodeIgniter';
+
+	/**
+	 * XML-RPC version
+	 *
+	 * @var	string
+	 */
+	public $xmlrpcVersion		= '1.1';
+
+	/**
+	 * Start of user errors
+	 *
+	 * @var	int
+	 */
+	public $xmlrpcerruser		= 800;
 
+	/**
+	 * Start of XML parse errors
+	 *
+	 * @var	int
+	 */
+	public $xmlrpcerrxml		= 100;
+
+	/**
+	 * Backslash replacement value
+	 *
+	 * @var	string
+	 */
+	public $xmlrpc_backslash	= '';
+
+	/**
+	 * XML-RPC Client object
+	 *
+	 * @var	object
+	 */
+	public $client;
+
+	/**
+	 * XML-RPC Method name
+	 *
+	 * @var	string
+	 */
+	public $method;
+
+	/**
+	 * XML-RPC Data
+	 *
+	 * @var	array
+	 */
+	public $data;
+
+	/**
+	 * XML-RPC Message
+	 *
+	 * @var	string
+	 */
+	public $message			= '';
+
+	/**
+	 * Request error message
+	 *
+	 * @var	string
+	 */
+	public $error			= '';
+
+	/**
+	 * XML-RPC result object
+	 *
+	 * @var	object
+	 */
+	public $result;
+
+	/**
+	 * XML-RPC Reponse
+	 *
+	 * @var	array
+	 */
+	public $response		= array(); // Response from remote server
+
+	/**
+	 * XSS Filter flag
+	 *
+	 * @var	bool
+	 */
+	public $xss_clean		= TRUE;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * Initializes property default values
+	 *
+	 * @param	array	$config
+	 * @return	void
+	 */
 	public function __construct($config = array())
 	{
-		$this->xmlrpcName		= $this->xmlrpcName;
 		$this->xmlrpc_backslash = chr(92).chr(92);
 
 		// Types for info sent back and forth
@@ -116,7 +306,7 @@
 		$this->xmlrpcerr['incorrect_params'] = '3';
 		$this->xmlrpcstr['incorrect_params'] = 'Incorrect parameters were passed to method';
 		$this->xmlrpcerr['introspect_unknown'] = '4';
-		$this->xmlrpcstr['introspect_unknown'] = "Cannot inspect signature for request: method unknown";
+		$this->xmlrpcstr['introspect_unknown'] = 'Cannot inspect signature for request: method unknown';
 		$this->xmlrpcerr['http_error'] = '5';
 		$this->xmlrpcstr['http_error'] = "Did not receive a '200 OK' response from remote server.";
 		$this->xmlrpcerr['no_data'] = '6';
@@ -124,15 +314,18 @@
 
 		$this->initialize($config);
 
-		log_message('debug', "XML-RPC Class Initialized");
+		log_message('info', 'XML-RPC Class Initialized');
 	}
 
+	// --------------------------------------------------------------------
 
-	//-------------------------------------
-	//  Initialize Prefs
-	//-------------------------------------
-
-	function initialize($config = array())
+	/**
+	 * Initialize
+	 *
+	 * @param	array	$config
+	 * @return	void
+	 */
+	public function initialize($config = array())
 	{
 		if (count($config) > 0)
 		{
@@ -145,64 +338,85 @@
 			}
 		}
 	}
-	// END
 
-	//-------------------------------------
-	//  Take URL and parse it
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function server($url, $port=80)
+	/**
+	 * Parse server URL
+	 *
+	 * @param	string	$url
+	 * @param	int	$port
+	 * @param	string	$proxy
+	 * @param	int	$proxy_port
+	 * @return	void
+	 */
+	public function server($url, $port = 80, $proxy = FALSE, $proxy_port = 8080)
 	{
-		if (substr($url, 0, 4) != "http")
+		if (strpos($url, 'http') !== 0)
 		{
-			$url = "http://".$url;
+			$url = 'http://'.$url;
 		}
 
 		$parts = parse_url($url);
 
-		$path = ( ! isset($parts['path'])) ? '/' : $parts['path'];
+		if (isset($parts['user'], $parts['pass']))
+		{
+			$parts['host'] = $parts['user'].':'.$parts['pass'].'@'.$parts['host'];
+		}
+
+		$path = isset($parts['path']) ? $parts['path'] : '/';
 
-		if (isset($parts['query']) && $parts['query'] != '')
+		if ( ! empty($parts['query']))
 		{
 			$path .= '?'.$parts['query'];
 		}
 
-		$this->client = new XML_RPC_Client($path, $parts['host'], $port);
+		$this->client = new XML_RPC_Client($path, $parts['host'], $port, $proxy, $proxy_port);
 	}
-	// END
 
-	//-------------------------------------
-	//  Set Timeout
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function timeout($seconds=5)
+	/**
+	 * Set Timeout
+	 *
+	 * @param	int	$seconds
+	 * @return	void
+	 */
+	public function timeout($seconds = 5)
 	{
-		if ( ! is_null($this->client) && is_int($seconds))
+		if ($this->client !== NULL && is_int($seconds))
 		{
 			$this->client->timeout = $seconds;
 		}
 	}
-	// END
 
-	//-------------------------------------
-	//  Set Methods
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function method($function)
+	/**
+	 * Set Methods
+	 *
+	 * @param	string	$function	Method name
+	 * @return	void
+	 */
+	public function method($function)
 	{
 		$this->method = $function;
 	}
-	// END
 
-	//-------------------------------------
-	//  Take Array of Data and Create Objects
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function request($incoming)
+	/**
+	 * Take Array of Data and Create Objects
+	 *
+	 * @param	array	$incoming
+	 * @return	void
+	 */
+	public function request($incoming)
 	{
 		if ( ! is_array($incoming))
 		{
 			// Send Error
+			return;
 		}
 
 		$this->data = array();
@@ -212,49 +426,47 @@
 			$this->data[$key] = $this->values_parsing($value);
 		}
 	}
-	// END
 
+	// --------------------------------------------------------------------
 
-	//-------------------------------------
-	//  Set Debug
-	//-------------------------------------
-
-	function set_debug($flag = TRUE)
+	/**
+	 * Set Debug
+	 *
+	 * @param	bool	$flag
+	 * @return	void
+	 */
+	public function set_debug($flag = TRUE)
 	{
-		$this->debug = ($flag == TRUE) ? TRUE : FALSE;
+		$this->debug = ($flag === TRUE);
 	}
 
-	//-------------------------------------
-	//  Values Parsing
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function values_parsing($value, $return = FALSE)
+	/**
+	 * Values Parsing
+	 *
+	 * @param	mixed	$value
+	 * @return	object
+	 */
+	public function values_parsing($value)
 	{
 		if (is_array($value) && array_key_exists(0, $value))
 		{
-			if ( ! isset($value['1']) OR ( ! isset($this->xmlrpcTypes[$value['1']])))
+			if ( ! isset($value[1], $this->xmlrpcTypes[$value[1]]))
 			{
-				if (is_array($value[0]))
-				{
-					$temp = new XML_RPC_Values($value['0'], 'array');
+				$temp = new XML_RPC_Values($value[0], (is_array($value[0]) ? 'array' : 'string'));
 				}
 				else
 				{
-					$temp = new XML_RPC_Values($value['0'], 'string');
-				}
-			}
-			elseif (is_array($value['0']) && ($value['1'] == 'struct' OR $value['1'] == 'array'))
+				if (is_array($value[0]) && ($value[1] === 'struct' OR $value[1] === 'array'))
 			{
-				while (list($k) = each($value['0']))
+					while (list($k) = each($value[0]))
 				{
-					$value['0'][$k] = $this->values_parsing($value['0'][$k], TRUE);
+						$value[0][$k] = $this->values_parsing($value[0][$k]);
 				}
-
-				$temp = new XML_RPC_Values($value['0'], $value['1']);
 			}
-			else
-			{
-				$temp = new XML_RPC_Values($value['0'], $value['1']);
+
+				$temp = new XML_RPC_Values($value[0], $value[1]);
 			}
 		}
 		else
@@ -264,24 +476,20 @@
 
 		return $temp;
 	}
-	// END
-
 
-	//-------------------------------------
-	//  Sends XML-RPC Request
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function send_request()
+	/**
+	 * Sends XML-RPC Request
+	 *
+	 * @return	bool
+	 */
+	public function send_request()
 	{
 		$this->message = new XML_RPC_Message($this->method,$this->data);
 		$this->message->debug = $this->debug;
 
-		if ( ! $this->result = $this->client->send($this->message))
-		{
-			$this->error = $this->result->errstr;
-			return FALSE;
-		}
-		elseif ( ! is_object($this->result->val))
+		if ( ! $this->result = $this->client->send($this->message) OR ! is_object($this->result->val))
 		{
 			$this->error = $this->result->errstr;
 			return FALSE;
@@ -288,56 +496,61 @@
 		}
 
 		$this->response = $this->result->decode();
-
 		return TRUE;
 	}
-	// END
 
-	//-------------------------------------
-	//  Returns Error
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function display_error()
+	/**
+	 * Returns Error
+	 *
+	 * @return	string
+	 */
+	public function display_error()
 	{
 		return $this->error;
 	}
-	// END
 
-	//-------------------------------------
-	//  Returns Remote Server Response
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function display_response()
+	/**
+	 * Returns Remote Server Response
+	 *
+	 * @return	string
+	 */
+	public function display_response()
 	{
 		return $this->response;
 	}
-	// END
 
-	//-------------------------------------
-	//  Sends an Error Message for Server Request
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function send_error_message($number, $message)
+	/**
+	 * Sends an Error Message for Server Request
+	 *
+	 * @param	int	$number
+	 * @param	string	$message
+	 * @return	object
+	 */
+	public function send_error_message($number, $message)
 	{
-		return new XML_RPC_Response('0',$number, $message);
+		return new XML_RPC_Response(0, $number, $message);
 	}
-	// END
 
+	// --------------------------------------------------------------------
 
-	//-------------------------------------
-	//  Send Response for Server Request
-	//-------------------------------------
-
-	function send_response($response)
+	/**
+	 * Send Response for Server Request
+	 *
+	 * @param	array	$response
+	 * @return	object
+	 */
+	public function send_response($response)
 	{
 		// $response should be array of values, which will be parsed
 		// based on their data and type into a valid group of XML-RPC values
-
-		$response = $this->values_parsing($response);
-
-		return new XML_RPC_Response($response);
+		return new XML_RPC_Response($this->values_parsing($response));
 	}
-	// END
 
 } // END XML_RPC Class
 
@@ -347,49 +558,166 @@
  * XML-RPC Client class
  *
  * @category	XML-RPC
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
  */
 class XML_RPC_Client extends CI_Xmlrpc
 {
-	var $path			= '';
-	var $server			= '';
-	var $port			= 80;
-	var $errno			= '';
-	var $errstring		= '';
-	var $timeout		= 5;
-	var $no_multicall	= FALSE;
+	/**
+	 * Path
+	 *
+	 * @var	string
+	 */
+	public $path			= '';
+
+	/**
+	 * Server hostname
+	 *
+	 * @var	string
+	 */
+	public $server			= '';
+
+	/**
+	 * Server port
+	 *
+	 * @var	int
+	 */
+	public $port			= 80;
+
+	/**
+	 *
+	 * Server username
+	 *
+	 * @var	string
+	 */
+	public $username;
+
+	/**
+	 * Server password
+	 *
+	 * @var	string
+	 */
+	public $password;
+
+	/**
+	 * Proxy hostname
+	 *
+	 * @var	string
+	 */
+	public $proxy			= FALSE;
+
+	/**
+	 * Proxy port
+	 *
+	 * @var	int
+	 */
+	public $proxy_port		= 8080;
+
+	/**
+	 * Error number
+	 *
+	 * @var	string
+	 */
+	public $errno			= '';
 
-	public function __construct($path, $server, $port=80)
+	/**
+	 * Error message
+	 *
+	 * @var	string
+	 */
+	public $errstring		= '';
+
+	/**
+	 * Timeout in seconds
+	 *
+	 * @var	int
+	 */
+	public $timeout		= 5;
+
+	/**
+	 * No Multicall flag
+	 *
+	 * @var	bool
+	 */
+	public $no_multicall	= FALSE;
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @param	string	$path
+	 * @param	object	$server
+	 * @param	int	$port
+	 * @param	string	$proxy
+	 * @param	int	$proxy_port
+	 * @return	void
+	 */
+	public function __construct($path, $server, $port = 80, $proxy = FALSE, $proxy_port = 8080)
 	{
 		parent::__construct();
 
+		$url = parse_url('http://'.$server);
+
+		if (isset($url['user'], $url['pass']))
+		{
+			$this->username = $url['user'];
+			$this->password = $url['pass'];
+		}
+
 		$this->port = $port;
-		$this->server = $server;
+		$this->server = $url['host'];
 		$this->path = $path;
+		$this->proxy = $proxy;
+		$this->proxy_port = $proxy_port;
 	}
 
-	function send($msg)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Send message
+	 *
+	 * @param	mixed	$msg
+	 * @return	object
+	 */
+	public function send($msg)
 	{
 		if (is_array($msg))
 		{
 			// Multi-call disabled
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['multicall_recursion'],$this->xmlrpcstr['multicall_recursion']);
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['multicall_recursion'], $this->xmlrpcstr['multicall_recursion']);
 		}
 
 		return $this->sendPayload($msg);
 	}
 
-	function sendPayload($msg)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Send payload
+	 *
+	 * @param	object	$msg
+	 * @return	object
+	 */
+	public function sendPayload($msg)
+	{
+		if ($this->proxy === FALSE)
 	{
-		$fp = @fsockopen($this->server, $this->port,$this->errno, $this->errstr, $this->timeout);
+			$server = $this->server;
+			$port = $this->port;
+		}
+		else
+		{
+			$server = $this->proxy;
+			$port = $this->proxy_port;
+		}
+
+		$fp = @fsockopen($server, $port, $this->errno, $this->errstring, $this->timeout);
 
 		if ( ! is_resource($fp))
 		{
 			error_log($this->xmlrpcstr['http_error']);
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['http_error'],$this->xmlrpcstr['http_error']);
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']);
 		}
 
 		if (empty($msg->payload))
@@ -399,20 +727,48 @@
 		}
 
 		$r = "\r\n";
-		$op  = "POST {$this->path} HTTP/1.0$r";
-		$op .= "Host: {$this->server}$r";
-		$op .= "Content-Type: text/xml$r";
-		$op .= "User-Agent: {$this->xmlrpcName}$r";
-		$op .= "Content-Length: ".strlen($msg->payload). "$r$r";
-		$op .= $msg->payload;
+		$op = 'POST '.$this->path.' HTTP/1.0'.$r
+			.'Host: '.$this->server.$r
+			.'Content-Type: text/xml'.$r
+			.(isset($this->username, $this->password) ? 'Authorization: Basic '.base64_encode($this->username.':'.$this->password).$r : '')
+			.'User-Agent: '.$this->xmlrpcName.$r
+			.'Content-Length: '.strlen($msg->payload).$r.$r
+			.$msg->payload;
 
+		for ($written = $timestamp = 0, $length = strlen($op); $written < $length; $written += $result)
+		{
+			if (($result = fwrite($fp, substr($op, $written))) === FALSE)
+			{
+				break;
+			}
+			// See https://bugs.php.net/bug.php?id=39598 and http://php.net/manual/en/function.fwrite.php#96951
+			elseif ($result === 0)
+			{
+				if ($timestamp === 0)
+				{
+					$timestamp = time();
+				}
+				elseif ($timestamp < (time() - $this->timeout))
+				{
+					$result = FALSE;
+					break;
+				}
+
+				usleep(250000);
+				continue;
+			}
+			else
+			{
+				$timestamp = 0;
+			}
+		}
 
-		if ( ! fputs($fp, $op, strlen($op)))
+		if ($result === FALSE)
 		{
 			error_log($this->xmlrpcstr['http_error']);
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']);
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']);
 		}
+
 		$resp = $msg->parseResponse($fp);
 		fclose($fp);
 		return $resp;
@@ -418,36 +774,77 @@
 		return $resp;
 	}
 
-} // end class XML_RPC_Client
+} // END XML_RPC_Client Class
+
+/**
+ * XML-RPC Response class
+ *
+ * @category	XML-RPC
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
+ */
+class XML_RPC_Response
+{
+
+	/**
+	 * Value
+	 *
+	 * @var	mixed
+	 */
+	public $val		= 0;
+
+	/**
+	 * Error number
+	 *
+	 * @var	int
+	 */
+	public $errno		= 0;
+
+	/**
+	 * Error message
+	 *
+	 * @var	string
+	 */
+	public $errstr		= '';
+
+	/**
+	 * Headers list
+	 *
+	 * @var	array
+	 */
+	public $headers		= array();
+
+	/**
+	 * XSS Filter flag
+	 *
+	 * @var	bool
+	 */
+	public $xss_clean	= TRUE;
 
+	// --------------------------------------------------------------------
 
 /**
- * XML-RPC Response class
+	 * Constructor
  *
- * @category	XML-RPC
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
+	 * @param	mixed	$val
+	 * @param	int	$code
+	 * @param	string	$fstr
+	 * @return	void
  */
-class XML_RPC_Response
-{
-	var $val = 0;
-	var $errno = 0;
-	var $errstr = '';
-	var $headers = array();
-	var $xss_clean = TRUE;
-
 	public function __construct($val, $code = 0, $fstr = '')
 	{
-		if ($code != 0)
+		if ($code !== 0)
 		{
 			// error
 			$this->errno = $code;
-			$this->errstr = htmlentities($fstr);
+			$this->errstr = htmlspecialchars($fstr,
+							(is_php('5.4') ? ENT_XML1 | ENT_NOQUOTES : ENT_NOQUOTES),
+							'UTF-8');
 		}
 		else if ( ! is_object($val))
 		{
 			// programmer error, not an object
-			error_log("Invalid type '" . gettype($val) . "' (value: $val) passed to XML_RPC_Response.  Defaulting to empty value.");
+			error_log("Invalid type '".gettype($val)."' (value: ".$val.') passed to XML_RPC_Response. Defaulting to empty value.');
 			$this->val = new XML_RPC_Values();
 		}
 		else
@@ -456,27 +853,54 @@
 		}
 	}
 
-	function faultCode()
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fault code
+	 *
+	 * @return	int
+	 */
+	public function faultCode()
 	{
 		return $this->errno;
 	}
 
-	function faultString()
+	// --------------------------------------------------------------------
+
+	/**
+	 * Fault string
+	 *
+	 * @return	string
+	 */
+	public function faultString()
 	{
 		return $this->errstr;
 	}
 
-	function value()
+	// --------------------------------------------------------------------
+
+	/**
+	 * Value
+	 *
+	 * @return	mixed
+	 */
+	public function value()
 	{
 		return $this->val;
 	}
 
-	function prepare_response()
-	{
-		$result = "<methodResponse>\n";
-		if ($this->errno)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Prepare response
+	 *
+	 * @return	string	xml
+	 */
+	public function prepare_response()
 		{
-			$result .= '<fault>
+		return "<methodResponse>\n"
+			.($this->errno
+				? '<fault>
 	<value>
 		<struct>
 			<member>
@@ -489,23 +913,24 @@
 			</member>
 		</struct>
 	</value>
-</fault>';
-		}
-		else
-		{
-			$result .= "<params>\n<param>\n" .
-					$this->val->serialize_class() .
-					"</param>\n</params>";
-		}
-		$result .= "\n</methodResponse>";
-		return $result;
+</fault>'
+				: "<params>\n<param>\n".$this->val->serialize_class()."</param>\n</params>")
+			."\n</methodResponse>";
 	}
 
-	function decode($array=FALSE)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Decode
+	 *
+	 * @param	mixed	$array
+	 * @return	array
+	 */
+	public function decode($array = NULL)
 	{
 		$CI =& get_instance();
 		
-		if ($array !== FALSE && is_array($array))
+		if (is_array($array))
 		{
 			while (list($key) = each($array))
 			{
@@ -513,60 +938,58 @@
 				{
 					$array[$key] = $this->decode($array[$key]);
 				}
-				else
+				elseif ($this->xss_clean)
 				{
-					$array[$key] = ($this->xss_clean) ? $CI->security->xss_clean($array[$key]) : $array[$key];
+					$array[$key] = $CI->security->xss_clean($array[$key]);
 				}
 			}
 
-			$result = $array;
+			return $array;
 		}
-		else
-		{
+
 			$result = $this->xmlrpc_decoder($this->val);
 
 			if (is_array($result))
 			{
 				$result = $this->decode($result);
 			}
-			else
+		elseif ($this->xss_clean)
 			{
-				$result = ($this->xss_clean) ? $CI->security->xss_clean($result) : $result;
-			}
+			$result = $CI->security->xss_clean($result);
 		}
 
 		return $result;
 	}
 
+	// --------------------------------------------------------------------
 
-
-	//-------------------------------------
-	//  XML-RPC Object to PHP Types
-	//-------------------------------------
-
-	function xmlrpc_decoder($xmlrpc_val)
+	/**
+	 * XML-RPC Object to PHP Types
+	 *
+	 * @param	object
+	 * @return	array
+	 */
+	public function xmlrpc_decoder($xmlrpc_val)
 	{
 		$kind = $xmlrpc_val->kindOf();
 
-		if ($kind == 'scalar')
+		if ($kind === 'scalar')
 		{
 			return $xmlrpc_val->scalarval();
 		}
-		elseif ($kind == 'array')
+		elseif ($kind === 'array')
 		{
 			reset($xmlrpc_val->me);
-			list($a,$b) = each($xmlrpc_val->me);
-			$size = count($b);
-
+			$b = current($xmlrpc_val->me);
 			$arr = array();
 
-			for ($i = 0; $i < $size; $i++)
+			for ($i = 0, $size = count($b); $i < $size; $i++)
 			{
 				$arr[] = $this->xmlrpc_decoder($xmlrpc_val->me['array'][$i]);
 			}
 			return $arr;
 		}
-		elseif ($kind == 'struct')
+		elseif ($kind === 'struct')
 		{
 			reset($xmlrpc_val->me['struct']);
 			$arr = array();
@@ -579,49 +1002,84 @@
 		}
 	}
 
+	// --------------------------------------------------------------------
 
-	//-------------------------------------
-	//  ISO-8601 time to server or UTC time
-	//-------------------------------------
-
-	function iso8601_decode($time, $utc=0)
+	/**
+	 * ISO-8601 time to server or UTC time
+	 *
+	 * @param	string
+	 * @param	bool
+	 * @return	int	unix timestamp
+	 */
+	public function iso8601_decode($time, $utc = FALSE)
 	{
-		// return a timet in the localtime, or UTC
+		// Return a time in the localtime, or UTC
 		$t = 0;
 		if (preg_match('/([0-9]{4})([0-9]{2})([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})/', $time, $regs))
 		{
-			$fnc = ($utc == 1) ? 'gmmktime' : 'mktime';
+			$fnc = ($utc === TRUE) ? 'gmmktime' : 'mktime';
 			$t = $fnc($regs[4], $regs[5], $regs[6], $regs[2], $regs[3], $regs[1]);
 		}
 		return $t;
 	}
 
-} // End Response Class
-
-
+} // END XML_RPC_Response Class
 
 /**
  * XML-RPC Message class
  *
  * @category	XML-RPC
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
  */
 class XML_RPC_Message extends CI_Xmlrpc
 {
-	var $payload;
-	var $method_name;
-	var $params			= array();
-	var $xh				= array();
 
-	public function __construct($method, $pars=0)
+	/**
+	 * Payload
+	 *
+	 * @var	string
+	 */
+	public $payload;
+
+	/**
+	 * Method name
+	 *
+	 * @var	string
+	 */
+	public $method_name;
+
+	/**
+	 * Parameter list
+	 *
+	 * @var	array
+	 */
+	public $params		= array();
+
+	/**
+	 * XH?
+	 *
+	 * @var	array
+	 */
+	public $xh		= array();
+
+	// --------------------------------------------------------------------
+
+	/**
+	 * Constructor
+	 *
+	 * @param	string	$method
+	 * @param	array	$pars
+	 * @return	void
+	 */
+	public function __construct($method, $pars = FALSE)
 	{
 		parent::__construct();
 
 		$this->method_name = $method;
 		if (is_array($pars) && count($pars) > 0)
 		{
-			for ($i=0; $i<count($pars); $i++)
+			for ($i = 0, $c = count($pars); $i < $c; $i++)
 			{
 				// $pars[$i] = XML_RPC_Values
 				$this->params[] = $pars[$i];
@@ -629,17 +1087,20 @@
 		}
 	}
 
-	//-------------------------------------
-	//  Create Payload to Send
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function createPayload()
+	/**
+	 * Create Payload to Send
+	 *
+	 * @return	void
+	 */
+	public function createPayload()
 	{
-		$this->payload = "<?xml version=\"1.0\"?".">\r\n<methodCall>\r\n";
-		$this->payload .= '<methodName>' . $this->method_name . "</methodName>\r\n";
-		$this->payload .= "<params>\r\n";
+		$this->payload = '<?xml version="1.0"?'.">\r\n<methodCall>\r\n"
+				.'<methodName>'.$this->method_name."</methodName>\r\n"
+				."<params>\r\n";
 
-		for ($i=0; $i<count($this->params); $i++)
+		for ($i = 0, $c = count($this->params); $i < $c; $i++)
 		{
 			// $p = XML_RPC_Values
 			$p = $this->params[$i];
@@ -649,11 +1110,15 @@
 		$this->payload .= "</params>\r\n</methodCall>\r\n";
 	}
 
-	//-------------------------------------
-	//  Parse External XML-RPC Server's Response
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function parseResponse($fp)
+	/**
+	 * Parse External XML-RPC Server's Response
+	 *
+	 * @param	resource
+	 * @return	object
+	 */
+	public function parseResponse($fp)
 	{
 		$data = '';
 
@@ -662,38 +1127,24 @@
 			$data .= $datum;
 		}
 
-		//-------------------------------------
 		//  DISPLAY HTTP CONTENT for DEBUGGING
-		//-------------------------------------
-
 		if ($this->debug === TRUE)
 		{
-			echo "<pre>";
-			echo "---DATA---\n" . htmlspecialchars($data) . "\n---END DATA---\n\n";
-			echo "</pre>";
+			echo "<pre>---DATA---\n".htmlspecialchars($data)."\n---END DATA---\n\n</pre>";
 		}
 
-		//-------------------------------------
 		//  Check for data
-		//-------------------------------------
-
-		if ($data == "")
+		if ($data === '')
 		{
 			error_log($this->xmlrpcstr['no_data']);
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['no_data'], $this->xmlrpcstr['no_data']);
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['no_data'], $this->xmlrpcstr['no_data']);
 		}
 
-
-		//-------------------------------------
 		//  Check for HTTP 200 Response
-		//-------------------------------------
-
-		if (strncmp($data, 'HTTP', 4) == 0 && ! preg_match('/^HTTP\/[0-9\.]+ 200 /', $data))
+		if (strpos($data, 'HTTP') === 0 && ! preg_match('/^HTTP\/[0-9\.]+ 200 /', $data))
 		{
 			$errstr= substr($data, 0, strpos($data, "\n")-1);
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']. ' (' . $errstr . ')');
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error'].' ('.$errstr.')');
 		}
 
 		//-------------------------------------
@@ -701,14 +1152,15 @@
 		//-------------------------------------
 
 		$parser = xml_parser_create($this->xmlrpc_defencoding);
-
-		$this->xh[$parser]					= array();
-		$this->xh[$parser]['isf']			= 0;
-		$this->xh[$parser]['ac']			= '';
-		$this->xh[$parser]['headers']		= array();
-		$this->xh[$parser]['stack']			= array();
-		$this->xh[$parser]['valuestack']	= array();
-		$this->xh[$parser]['isf_reason']	= 0;
+		$pname = (string) $parser;
+		$this->xh[$pname] = array(
+			'isf'		=> 0,
+			'ac'		=> '',
+			'headers'	=> array(),
+			'stack'		=> array(),
+			'valuestack'	=> array(),
+			'isf_reason'	=> 0
+		);
 
 		xml_set_object($parser, $this);
 		xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, true);
@@ -716,11 +1168,7 @@
 		xml_set_character_data_handler($parser, 'character_data');
 		//xml_set_default_handler($parser, 'default_handler');
 
-
-		//-------------------------------------
 		//  GET HEADERS
-		//-------------------------------------
-
 		$lines = explode("\r\n", $data);
 		while (($line = array_shift($lines)))
 		{
@@ -728,87 +1176,67 @@
 			{
 				break;
 			}
-			$this->xh[$parser]['headers'][] = $line;
+			$this->xh[$pname]['headers'][] = $line;
 		}
 		$data = implode("\r\n", $lines);
 
-
-		//-------------------------------------
 		//  PARSE XML DATA
-		//-------------------------------------
-
 		if ( ! xml_parse($parser, $data, count($data)))
 		{
 			$errstr = sprintf('XML error: %s at line %d',
 					xml_error_string(xml_get_error_code($parser)),
 					xml_get_current_line_number($parser));
-			//error_log($errstr);
+
 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'], $this->xmlrpcstr['invalid_return']);
 			xml_parser_free($parser);
 			return $r;
 		}
 		xml_parser_free($parser);
 
-		// ---------------------------------------
 		//  Got Ourselves Some Badness, It Seems
-		// ---------------------------------------
-
-		if ($this->xh[$parser]['isf'] > 1)
+		if ($this->xh[$pname]['isf'] > 1)
 		{
 			if ($this->debug === TRUE)
 			{
-				echo "---Invalid Return---\n";
-				echo $this->xh[$parser]['isf_reason'];
-				echo "---Invalid Return---\n\n";
+				echo "---Invalid Return---\n".$this->xh[$pname]['isf_reason']."---Invalid Return---\n\n";
 			}
 
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'],$this->xmlrpcstr['invalid_return'].' '.$this->xh[$parser]['isf_reason']);
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'], $this->xmlrpcstr['invalid_return'].' '.$this->xh[$pname]['isf_reason']);
 		}
-		elseif ( ! is_object($this->xh[$parser]['value']))
+		elseif ( ! is_object($this->xh[$pname]['value']))
 		{
-			$r = new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'],$this->xmlrpcstr['invalid_return'].' '.$this->xh[$parser]['isf_reason']);
-			return $r;
+			return new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'], $this->xmlrpcstr['invalid_return'].' '.$this->xh[$pname]['isf_reason']);
 		}
 
-		//-------------------------------------
 		//  DISPLAY XML CONTENT for DEBUGGING
-		//-------------------------------------
-
 		if ($this->debug === TRUE)
 		{
-			echo "<pre>";
+			echo '<pre>';
 
-			if (count($this->xh[$parser]['headers'] > 0))
+			if (count($this->xh[$pname]['headers'] > 0))
 			{
 				echo "---HEADERS---\n";
-				foreach ($this->xh[$parser]['headers'] as $header)
+				foreach ($this->xh[$pname]['headers'] as $header)
 				{
-					echo "$header\n";
+					echo $header."\n";
 				}
 				echo "---END HEADERS---\n\n";
 			}
 
-			echo "---DATA---\n" . htmlspecialchars($data) . "\n---END DATA---\n\n";
-
-			echo "---PARSED---\n" ;
-			var_dump($this->xh[$parser]['value']);
+			echo "---DATA---\n".htmlspecialchars($data)."\n---END DATA---\n\n---PARSED---\n";
+			var_dump($this->xh[$pname]['value']);
 			echo "\n---END PARSED---</pre>";
 		}
 
-		//-------------------------------------
 		//  SEND RESPONSE
-		//-------------------------------------
-
-		$v = $this->xh[$parser]['value'];
-
-		if ($this->xh[$parser]['isf'])
+		$v = $this->xh[$pname]['value'];
+		if ($this->xh[$pname]['isf'])
 		{
 			$errno_v = $v->me['struct']['faultCode'];
 			$errstr_v = $v->me['struct']['faultString'];
 			$errno = $errno_v->scalarval();
 
-			if ($errno == 0)
+			if ($errno === 0)
 			{
 				// FAULT returned, errno needs to reflect that
 				$errno = -1;
@@ -821,10 +1249,12 @@
 			$r = new XML_RPC_Response($v);
 		}
 
-		$r->headers = $this->xh[$parser]['headers'];
+		$r->headers = $this->xh[$pname]['headers'];
 		return $r;
 	}
 
+	// --------------------------------------------------------------------
+
 	// ------------------------------------
 	//  Begin Return Message Parsing section
 	// ------------------------------------
@@ -839,46 +1269,46 @@
 	//	 stack - array with parent tree of the xml element,
 	//			 used to validate the nesting of elements
 
-	//-------------------------------------
-	//  Start Element Handler
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function open_tag($the_parser, $name, $attrs)
+	/**
+	 * Start Element Handler
+	 *
+	 * @param	string
+	 * @param	string
+	 * @return	void
+	 */
+	public function open_tag($the_parser, $name)
 	{
+		$the_parser = (string) $the_parser;
+
 		// If invalid nesting, then return
 		if ($this->xh[$the_parser]['isf'] > 1) return;
 
 		// Evaluate and check for correct nesting of XML elements
-
-		if (count($this->xh[$the_parser]['stack']) == 0)
+		if (count($this->xh[$the_parser]['stack']) === 0)
 		{
-			if ($name != 'METHODRESPONSE' && $name != 'METHODCALL')
+			if ($name !== 'METHODRESPONSE' && $name !== 'METHODCALL')
 			{
 				$this->xh[$the_parser]['isf'] = 2;
 				$this->xh[$the_parser]['isf_reason'] = 'Top level XML-RPC element is missing';
 				return;
 			}
 		}
-		else
-		{
 			// not top level element: see if parent is OK
-			if ( ! in_array($this->xh[$the_parser]['stack'][0], $this->valid_parents[$name], TRUE))
+		elseif ( ! in_array($this->xh[$the_parser]['stack'][0], $this->valid_parents[$name], TRUE))
 			{
 				$this->xh[$the_parser]['isf'] = 2;
-				$this->xh[$the_parser]['isf_reason'] = "XML-RPC element $name cannot be child of ".$this->xh[$the_parser]['stack'][0];
+			$this->xh[$the_parser]['isf_reason'] = 'XML-RPC element '.$name.' cannot be child of '.$this->xh[$the_parser]['stack'][0];
 				return;
 			}
-		}
 
 		switch($name)
 		{
 			case 'STRUCT':
 			case 'ARRAY':
 				// Creates array for child elements
-
-				$cur_val = array('value' => array(),
-								 'type'	 => $name);
-
+				$cur_val = array('value' => array(), 'type' => $name);
 				array_unshift($this->xh[$the_parser]['valuestack'], $cur_val);
 			break;
 			case 'METHODNAME':
@@ -903,11 +1333,12 @@
 			case 'DOUBLE':
 			case 'DATETIME.ISO8601':
 			case 'BASE64':
-				if ($this->xh[$the_parser]['vt'] != 'value')
+				if ($this->xh[$the_parser]['vt'] !== 'value')
 				{
 					//two data elements inside a value: an error occurred!
 					$this->xh[$the_parser]['isf'] = 2;
-					$this->xh[$the_parser]['isf_reason'] = "'Twas a $name element following a ".$this->xh[$the_parser]['vt']." element inside a single value";
+					$this->xh[$the_parser]['isf_reason'] = 'There is a '.$name.' element following a '
+										.$this->xh[$the_parser]['vt'].' element inside a single value';
 					return;
 				}
 
@@ -929,24 +1360,29 @@
 			default:
 				/// An Invalid Element is Found, so we have trouble
 				$this->xh[$the_parser]['isf'] = 2;
-				$this->xh[$the_parser]['isf_reason'] = "Invalid XML-RPC element found: $name";
+				$this->xh[$the_parser]['isf_reason'] = 'Invalid XML-RPC element found: '.$name;
 			break;
 		}
 
 		// Add current element name to stack, to allow validation of nesting
 		array_unshift($this->xh[$the_parser]['stack'], $name);
 
-		if ($name != 'VALUE') $this->xh[$the_parser]['lv'] = 0;
+		$name === 'VALUE' OR $this->xh[$the_parser]['lv'] = 0;
 	}
-	// END
-
 
-	//-------------------------------------
-	//  End Element Handler
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function closing_tag($the_parser, $name)
+	/**
+	 * End Element Handler
+	 *
+	 * @param	string
+	 * @param	string
+	 * @return	void
+	 */
+	public function closing_tag($the_parser, $name)
 	{
+		$the_parser = (string) $the_parser;
+
 		if ($this->xh[$the_parser]['isf'] > 1) return;
 
 		// Remove current element from stack and set variable
@@ -961,7 +1397,7 @@
 			case 'STRUCT':
 			case 'ARRAY':
 				$cur_val = array_shift($this->xh[$the_parser]['valuestack']);
-				$this->xh[$the_parser]['value'] = ( ! isset($cur_val['values'])) ? array() : $cur_val['values'];
+				$this->xh[$the_parser]['value'] = isset($cur_val['values']) ? $cur_val['values'] : array();
 				$this->xh[$the_parser]['vt']	= strtolower($name);
 			break;
 			case 'NAME':
@@ -976,56 +1412,39 @@
 			case 'BASE64':
 				$this->xh[$the_parser]['vt'] = strtolower($name);
 
-				if ($name == 'STRING')
+				if ($name === 'STRING')
 				{
 					$this->xh[$the_parser]['value'] = $this->xh[$the_parser]['ac'];
 				}
-				elseif ($name=='DATETIME.ISO8601')
+				elseif ($name === 'DATETIME.ISO8601')
 				{
 					$this->xh[$the_parser]['vt']	= $this->xmlrpcDateTime;
 					$this->xh[$the_parser]['value'] = $this->xh[$the_parser]['ac'];
 				}
-				elseif ($name=='BASE64')
+				elseif ($name === 'BASE64')
 				{
 					$this->xh[$the_parser]['value'] = base64_decode($this->xh[$the_parser]['ac']);
 				}
-				elseif ($name=='BOOLEAN')
+				elseif ($name === 'BOOLEAN')
 				{
 					// Translated BOOLEAN values to TRUE AND FALSE
-					if ($this->xh[$the_parser]['ac'] == '1')
-					{
-						$this->xh[$the_parser]['value'] = TRUE;
-					}
-					else
-					{
-						$this->xh[$the_parser]['value'] = FALSE;
-					}
+					$this->xh[$the_parser]['value'] = (bool) $this->xh[$the_parser]['ac'];
 				}
 				elseif ($name=='DOUBLE')
 				{
 					// we have a DOUBLE
 					// we must check that only 0123456789-.<space> are characters here
-					if ( ! preg_match('/^[+-]?[eE0-9\t \.]+$/', $this->xh[$the_parser]['ac']))
-					{
-						$this->xh[$the_parser]['value'] = 'ERROR_NON_NUMERIC_FOUND';
-					}
-					else
-					{
-						$this->xh[$the_parser]['value'] = (double)$this->xh[$the_parser]['ac'];
-					}
+					$this->xh[$the_parser]['value'] = preg_match('/^[+-]?[eE0-9\t \.]+$/', $this->xh[$the_parser]['ac'])
+										? (float) $this->xh[$the_parser]['ac']
+										: 'ERROR_NON_NUMERIC_FOUND';
 				}
 				else
 				{
 					// we have an I4/INT
 					// we must check that only 0123456789-<space> are characters here
-					if ( ! preg_match('/^[+-]?[0-9\t ]+$/', $this->xh[$the_parser]['ac']))
-					{
-						$this->xh[$the_parser]['value'] = 'ERROR_NON_NUMERIC_FOUND';
-					}
-					else
-					{
-						$this->xh[$the_parser]['value'] = (int)$this->xh[$the_parser]['ac'];
-					}
+					$this->xh[$the_parser]['value'] = preg_match('/^[+-]?[0-9\t ]+$/', $this->xh[$the_parser]['ac'])
+										? (int) $this->xh[$the_parser]['ac']
+										: 'ERROR_NON_NUMERIC_FOUND';
 				}
 				$this->xh[$the_parser]['ac'] = '';
 				$this->xh[$the_parser]['lv'] = 3; // indicate we've found a value
@@ -1041,7 +1460,7 @@
 				// build the XML-RPC value out of the data received, and substitute it
 				$temp = new XML_RPC_Values($this->xh[$the_parser]['value'], $this->xh[$the_parser]['vt']);
 
-				if (count($this->xh[$the_parser]['valuestack']) && $this->xh[$the_parser]['valuestack'][0]['type'] == 'ARRAY')
+				if (count($this->xh[$the_parser]['valuestack']) && $this->xh[$the_parser]['valuestack'][0]['type'] === 'ARRAY')
 				{
 					// Array
 					$this->xh[$the_parser]['valuestack'][0]['values'][] = $temp;
@@ -1085,23 +1504,30 @@
 		}
 	}
 
-	//-------------------------------------
-	//  Parses Character Data
-	//-------------------------------------
+	// --------------------------------------------------------------------
 
-	function character_data($the_parser, $data)
+	/**
+	 * Parse character data
+	 *
+	 * @param	string
+	 * @param	string
+	 * @return	void
+	 */
+	public function character_data($the_parser, $data)
 	{
+		$the_parser = (string) $the_parser;
+
 		if ($this->xh[$the_parser]['isf'] > 1) return; // XML Fault found already
 
 		// If a value has not been found
-		if ($this->xh[$the_parser]['lv'] != 3)
+		if ($this->xh[$the_parser]['lv'] !== 3)
 		{
-			if ($this->xh[$the_parser]['lv'] == 1)
+			if ($this->xh[$the_parser]['lv'] === 1)
 			{
 				$this->xh[$the_parser]['lv'] = 2; // Found a value
 			}
 
-			if ( ! @isset($this->xh[$the_parser]['ac']))
+			if ( ! isset($this->xh[$the_parser]['ac']))
 			{
 				$this->xh[$the_parser]['ac'] = '';
 			}
@@ -1110,14 +1536,32 @@
 		}
 	}
 
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add parameter
+	 *
+	 * @param	mixed
+	 * @return	void
+	 */
+	public function addParam($par)
+	{
+		$this->params[] = $par;
+	}
 
-	function addParam($par) { $this->params[]=$par; }
+	// --------------------------------------------------------------------
 
-	function output_parameters($array=FALSE)
+	/**
+	 * Output parameters
+	 *
+	 * @param	array	$array
+	 * @return	array
+	 */
+	public function output_parameters(array $array = array())
 	{
 		$CI =& get_instance();
 		
-		if ($array !== FALSE && is_array($array))
+		if ( ! empty($array))
 		{
 			while (list($key) = each($array))
 			{
@@ -1125,21 +1569,20 @@
 				{
 					$array[$key] = $this->output_parameters($array[$key]);
 				}
-				else
+				elseif ($key !== 'bits' && $this->xss_clean)
 				{
 					// 'bits' is for the MetaWeblog API image bits
 					// @todo - this needs to be made more general purpose
-					$array[$key] = ($key == 'bits' OR $this->xss_clean == FALSE) ? $array[$key] : $CI->security->xss_clean($array[$key]);
+					$array[$key] = $CI->security->xss_clean($array[$key]);
 				}
 			}
 
-			$parameters = $array;
+			return $array;
 		}
-		else
-		{
+
 			$parameters = array();
 
-			for ($i = 0; $i < count($this->params); $i++)
+		for ($i = 0, $c = count($this->params); $i < $c; $i++)
 			{
 				$a_param = $this->decode_message($this->params[$i]);
 
@@ -1152,38 +1595,42 @@
 					$parameters[] = ($this->xss_clean) ? $CI->security->xss_clean($a_param) : $a_param;
 				}
 			}
-		}
 
 		return $parameters;
 	}
 
+	// --------------------------------------------------------------------
 
-	function decode_message($param)
+	/**
+	 * Decode message
+	 *
+	 * @param	object
+	 * @return	mixed
+	 */
+	public function decode_message($param)
 	{
 		$kind = $param->kindOf();
 
-		if ($kind == 'scalar')
+		if ($kind === 'scalar')
 		{
 			return $param->scalarval();
 		}
-		elseif ($kind == 'array')
+		elseif ($kind === 'array')
 		{
 			reset($param->me);
-			list($a,$b) = each($param->me);
-
+			$b = current($param->me);
 			$arr = array();
 
-			for($i = 0; $i < count($b); $i++)
+			for ($i = 0, $c = count($b); $i < $c; $i++)
 			{
 				$arr[] = $this->decode_message($param->me['array'][$i]);
 			}
 
 			return $arr;
 		}
-		elseif ($kind == 'struct')
+		elseif ($kind === 'struct')
 		{
 			reset($param->me['struct']);
-
 			$arr = array();
 
 			while (list($key,$value) = each($param->me['struct']))
@@ -1195,29 +1642,47 @@
 		}
 	}
 
-} // End XML_RPC_Messages class
-
-
+} // END XML_RPC_Message Class
 
 /**
  * XML-RPC Values class
  *
  * @category	XML-RPC
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
  */
 class XML_RPC_Values extends CI_Xmlrpc
 {
-	var $me		= array();
-	var $mytype	= 0;
+	/**
+	 * Value data
+	 *
+	 * @var	array
+	 */
+	public $me	= array();
+
+	/**
+	 * Value type
+	 *
+	 * @var	int
+	 */
+	public $mytype	= 0;
+
+	// --------------------------------------------------------------------
 
+	/**
+	 * Constructor
+	 *
+	 * @param	mixed	$val
+	 * @param	string	$type
+	 * @return	void
+	 */
 	public function __construct($val=-1, $type='')
 	{
 		parent::__construct();
 
-		if ($val != -1 OR $type != '')
+		if ($val !== -1 OR $type !== '')
 		{
-			$type = $type == '' ? 'string' : $type;
+			$type = $type === '' ? 'string' : $type;
 
 			if ($this->xmlrpcTypes[$type] == 1)
 			{
@@ -1234,11 +1699,20 @@
 		}
 	}
 
-	function addScalar($val, $type='string')
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add scalar value
+	 *
+	 * @param	scalar
+	 * @param	string
+	 * @return	int
+	 */
+	public function addScalar($val, $type = 'string')
 	{
 		$typeof = $this->xmlrpcTypes[$type];
 
-		if ($this->mytype==1)
+		if ($this->mytype === 1)
 		{
 			echo '<strong>XML_RPC_Values</strong>: scalar can have only one value<br />';
 			return 0;
@@ -1250,19 +1724,12 @@
 			return 0;
 		}
 
-		if ($type == $this->xmlrpcBoolean)
-		{
-			if (strcasecmp($val,'true')==0 OR $val==1 OR ($val==true && strcasecmp($val,'false')))
-			{
-				$val = 1;
-			}
-			else
+		if ($type === $this->xmlrpcBoolean)
 			{
-				$val=0;
-			}
+			$val = (int) (strcasecmp($val, 'true') === 0 OR $val === 1 OR ($val === TRUE && strcasecmp($val, 'false')));
 		}
 
-		if ($this->mytype == 2)
+		if ($this->mytype === 2)
 		{
 			// adding to an array here
 			$ar = $this->me['array'];
@@ -1278,9 +1746,17 @@
 		return 1;
 	}
 
-	function addArray($vals)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add array value
+	 *
+	 * @param	array
+	 * @return	int
+	 */
+	public function addArray($vals)
 	{
-		if ($this->mytype != 0)
+		if ($this->mytype !== 0)
 		{
 			echo '<strong>XML_RPC_Values</strong>: already initialized as a [' . $this->kindOf() . ']<br />';
 			return 0;
@@ -1291,9 +1767,17 @@
 		return 1;
 	}
 
-	function addStruct($vals)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Add struct value
+	 *
+	 * @param	object
+	 * @return	int
+	 */
+	public function addStruct($vals)
 	{
-		if ($this->mytype != 0)
+		if ($this->mytype !== 0)
 		{
 			echo '<strong>XML_RPC_Values</strong>: already initialized as a [' . $this->kindOf() . ']<br />';
 			return 0;
@@ -1303,25 +1787,34 @@
 		return 1;
 	}
 
-	function kindOf()
+	// --------------------------------------------------------------------
+
+	/**
+	 * Get value type
+	 *
+	 * @return	string
+	 */
+	public function kindOf()
 	{
 		switch($this->mytype)
 		{
-			case 3:
-				return 'struct';
-				break;
-			case 2:
-				return 'array';
-				break;
-			case 1:
-				return 'scalar';
-				break;
-			default:
-				return 'undef';
+			case 3: return 'struct';
+			case 2: return 'array';
+			case 1: return 'scalar';
+			default: return 'undef';
 		}
 	}
 
-	function serializedata($typ, $val)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Serialize data
+	 *
+	 * @param	string
+	 * @param	mixed
+	 * @return	string
+	 */
+	public function serializedata($typ, $val)
 	{
 		$rs = '';
 
@@ -1333,16 +1826,14 @@
 				reset($val);
 				while (list($key2, $val2) = each($val))
 				{
-					$rs .= "<member>\n<name>{$key2}</name>\n";
-					$rs .= $this->serializeval($val2);
-					$rs .= "</member>\n";
+					$rs .= "<member>\n<name>{$key2}</name>\n".$this->serializeval($val2)."</member>\n";
 				}
 				$rs .= '</struct>';
 			break;
 			case 2:
 				// array
 				$rs .= "<array>\n<data>\n";
-				for($i=0; $i < count($val); $i++)
+				for ($i = 0, $c = count($val); $i < $c; $i++)
 				{
 					$rs .= $this->serializeval($val[$i]);
 				}
@@ -1353,16 +1844,16 @@
 				switch ($typ)
 				{
 					case $this->xmlrpcBase64:
-						$rs .= "<{$typ}>" . base64_encode((string)$val) . "</{$typ}>\n";
+						$rs .= '<'.$typ.'>'.base64_encode( (string) $val).'</'.$typ.">\n";
 					break;
 					case $this->xmlrpcBoolean:
-						$rs .= "<{$typ}>" . ((bool)$val ? '1' : '0') . "</{$typ}>\n";
+						$rs .= '<'.$typ.'>'.( (bool) $val ? '1' : '0').'</'.$typ.">\n";
 					break;
 					case $this->xmlrpcString:
-						$rs .= "<{$typ}>" . htmlspecialchars((string)$val). "</{$typ}>\n";
+						$rs .= '<'.$typ.'>'.htmlspecialchars( (string) $val).'</'.$typ.">\n";
 					break;
 					default:
-						$rs .= "<{$typ}>{$val}</{$typ}>\n";
+						$rs .= '<'.$typ.'>'.$val.'</'.$typ.">\n";
 					break;
 				}
 			default:
@@ -1371,53 +1863,61 @@
 		return $rs;
 	}
 
-	function serialize_class()
+	// --------------------------------------------------------------------
+
+	/**
+	 * Serialize class
+	 *
+	 * @return	string
+	 */
+	public function serialize_class()
 	{
 		return $this->serializeval($this);
 	}
 
-	function serializeval($o)
+	// --------------------------------------------------------------------
+
+	/**
+	 * Serialize value
+	 *
+	 * @param	object
+	 * @return	string
+	 */
+	public function serializeval($o)
 	{
 		$ar = $o->me;
 		reset($ar);
 
 		list($typ, $val) = each($ar);
-		$rs = "<value>\n".$this->serializedata($typ, $val)."</value>\n";
-		return $rs;
+		return "<value>\n".$this->serializedata($typ, $val)."</value>\n";
 	}
 
-	function scalarval()
+	// --------------------------------------------------------------------
+
+	/**
+	 * Scalar value
+	 *
+	 * @return	mixed
+	 */
+	public function scalarval()
 	{
 		reset($this->me);
-		list($a,$b) = each($this->me);
-		return $b;
+		return current($this->me);
 	}
 
+	// --------------------------------------------------------------------
 
-	//-------------------------------------
-	// Encode time in ISO-8601 form.
-	//-------------------------------------
-
-	// Useful for sending time in XML-RPC
-
-	function iso8601_encode($time, $utc=0)
-	{
-		if ($utc == 1)
-		{
-			$t = strftime("%Y%m%dT%H:%i:%s", $time);
-		}
-		else
+	/**
+	 * Encode time in ISO-8601 form.
+	 * Useful for sending time in XML-RPC
+	 *
+	 * @param	int	unix timestamp
+	 * @param	bool
+	 * @return	string
+	*/
+	public function iso8601_encode($time, $utc = FALSE)
 		{
-			if (function_exists('gmstrftime'))
-				$t = gmstrftime("%Y%m%dT%H:%i:%s", $time);
-			else
-				$t = strftime("%Y%m%dT%H:%i:%s", $time - date('Z'));
-		}
-		return $t;
-	}
-
+		return ($utc) ? strftime('%Y%m%dT%H:%i:%s', $time) : gmstrftime('%Y%m%dT%H:%i:%s', $time);
 }
-// END XML_RPC_Values Class
 
-/* End of file Xmlrpc.php */
-/* Location: ./system/libraries/Xmlrpc.php */
\ No newline at end of file
+} // END XML_RPC_Values Class
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Xmlrpcs.php opensourcepos/system/libraries/Xmlrpcs.php
--- pos-prod/system/libraries/Xmlrpcs.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Xmlrpcs.php	2016-05-23 15:32:31.948838748 -0700
@@ -1,24 +1,48 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 if ( ! function_exists('xml_parser_create'))
 {
 	show_error('Your PHP installation does not support XML');
 }
 
-if ( ! class_exists('CI_Xmlrpc'))
+if ( ! class_exists('CI_Xmlrpc', FALSE))
 {
 	show_error('You must load the Xmlrpc class before loading the Xmlrpcs class in order to create a server.');
 }
@@ -31,20 +55,44 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	XML-RPC
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
  */
-class CI_Xmlrpcs extends CI_Xmlrpc
-{
-	var $methods		= array();	//array of methods mapped to function names and signatures
-	var $debug_msg		= '';		// Debug Message
-	var $system_methods = array();	// XML RPC Server methods
-	var $controller_obj;
+class CI_Xmlrpcs extends CI_Xmlrpc {
+
+	/**
+	 * Array of methods mapped to function names and signatures
+	 *
+	 * @var array
+	 */
+	public $methods = array();
+
+	/**
+	 * Debug Message
+	 *
+	 * @var string
+	 */
+	public $debug_msg = '';
+
+	/**
+	 * XML RPC Server methods
+	 *
+	 * @var array
+	 */
+	public $system_methods	= array();
 
-	var $object			= FALSE;
+	/**
+	 * Configuration object
+	 *
+	 * @var object
+	 */
+	public $object = FALSE;
 
 	/**
-	 * Constructor
+	 * Initialize XMLRPC class
+	 *
+	 * @param	array	$config
+	 * @return	void
 	 */
 	public function __construct($config=array())
 	{
@@ -56,7 +104,7 @@
 			$this->methods = array_merge($this->methods, $config['functions']);
 		}
 
-		log_message('debug', "XML-RPC Server Class Initialized");
+		log_message('info', 'XML-RPC Server Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -64,11 +112,10 @@
 	/**
 	 * Initialize Prefs and Serve
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	void
 	 */
-	function initialize($config=array())
+	public function initialize($config = array())
 	{
 		if (isset($config['functions']) && is_array($config['functions']))
 		{
@@ -96,10 +143,9 @@
 	/**
 	 * Setting of System Methods
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function set_system_methods()
+	public function set_system_methods()
 	{
 		$this->methods = array(
 					'system.listMethods'	 => array(
@@ -126,18 +172,15 @@
 	/**
 	 * Main Server Function
 	 *
-	 * @access	public
 	 * @return	void
 	 */
-	function serve()
+	public function serve()
 	{
 		$r = $this->parseRequest();
-		$payload  = '<?xml version="1.0" encoding="'.$this->xmlrpc_defencoding.'"?'.'>'."\n";
-		$payload .= $this->debug_msg;
-		$payload .= $r->prepare_response();
+		$payload = '<?xml version="1.0" encoding="'.$this->xmlrpc_defencoding.'"?'.'>'."\n".$this->debug_msg.$r->prepare_response();
 
-		header("Content-Type: text/xml");
-		header("Content-Length: ".strlen($payload));
+		header('Content-Type: text/xml');
+		header('Content-Length: '.strlen($payload));
 		exit($payload);
 	}
 
@@ -146,14 +189,13 @@
 	/**
 	 * Add Method to Class
 	 *
-	 * @access	public
 	 * @param	string	method name
 	 * @param	string	function
 	 * @param	string	signature
 	 * @param	string	docstring
 	 * @return	void
 	 */
-	function add_to_map($methodname, $function, $sig, $doc)
+	public function add_to_map($methodname, $function, $sig, $doc)
 	{
 		$this->methods[$methodname] = array(
 			'function'  => $function,
@@ -167,21 +209,22 @@
 	/**
 	 * Parse Server Request
 	 *
-	 * @access	public
 	 * @param	string	data
 	 * @return	object	xmlrpc response
 	 */
-	function parseRequest($data='')
+	public function parseRequest($data = '')
 	{
-		global $HTTP_RAW_POST_DATA;
-
 		//-------------------------------------
 		//  Get Data
 		//-------------------------------------
 
-		if ($data == '')
+		if ($data === '')
+		{
+			$CI =& get_instance();
+			if ($CI->input->method() === 'post')
 		{
-			$data = $HTTP_RAW_POST_DATA;
+				$data = $CI->input->raw_input_stream;
+			}
 		}
 
 		//-------------------------------------
@@ -189,15 +232,17 @@
 		//-------------------------------------
 
 		$parser = xml_parser_create($this->xmlrpc_defencoding);
-		$parser_object = new XML_RPC_Message("filler");
+		$parser_object = new XML_RPC_Message('filler');
+		$pname = (string) $parser;
 
-		$parser_object->xh[$parser]					= array();
-		$parser_object->xh[$parser]['isf']			= 0;
-		$parser_object->xh[$parser]['isf_reason']	= '';
-		$parser_object->xh[$parser]['params']		= array();
-		$parser_object->xh[$parser]['stack']		= array();
-		$parser_object->xh[$parser]['valuestack']	= array();
-		$parser_object->xh[$parser]['method']		= '';
+		$parser_object->xh[$pname] = array(
+			'isf' => 0,
+			'isf_reason' => '',
+			'params' => array(),
+			'stack' => array(),
+			'valuestack' => array(),
+			'method' => ''
+		);
 
 		xml_set_object($parser, $parser_object);
 		xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, true);
@@ -220,7 +264,7 @@
 				xml_get_current_line_number($parser)));
 			xml_parser_free($parser);
 		}
-		elseif ($parser_object->xh[$parser]['isf'])
+		elseif ($parser_object->xh[$pname]['isf'])
 		{
 			return new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'], $this->xmlrpcstr['invalid_return']);
 		}
@@ -228,24 +272,22 @@
 		{
 			xml_parser_free($parser);
 
-			$m = new XML_RPC_Message($parser_object->xh[$parser]['method']);
+			$m = new XML_RPC_Message($parser_object->xh[$pname]['method']);
 			$plist='';
 
-			for ($i=0; $i < count($parser_object->xh[$parser]['params']); $i++)
+			for ($i = 0, $c = count($parser_object->xh[$pname]['params']); $i < $c; $i++)
 			{
 				if ($this->debug === TRUE)
 				{
-					$plist .= "$i - " .  print_r(get_object_vars($parser_object->xh[$parser]['params'][$i]), TRUE). ";\n";
+					$plist .= $i.' - '.print_r(get_object_vars($parser_object->xh[$pname]['params'][$i]), TRUE).";\n";
 				}
 
-				$m->addParam($parser_object->xh[$parser]['params'][$i]);
+				$m->addParam($parser_object->xh[$pname]['params'][$i]);
 			}
 
 			if ($this->debug === TRUE)
 			{
-				echo "<pre>";
-				echo "---PLIST---\n" . $plist . "\n---PLIST END---\n\n";
-				echo "</pre>";
+				echo "<pre>---PLIST---\n".$plist."\n---PLIST END---\n\n</pre>";
 			}
 
 			$r = $this->_execute($m);
@@ -268,18 +310,17 @@
 	/**
 	 * Executes the Method
 	 *
-	 * @access	protected
 	 * @param	object
 	 * @return	mixed
 	 */
-	function _execute($m)
+	protected function _execute($m)
 	{
 		$methName = $m->method_name;
 
 		// Check to see if it is a system call
-		$system_call = (strncmp($methName, 'system', 5) == 0) ? TRUE : FALSE;
+		$system_call = (strpos($methName, 'system') === 0);
 
-		if ($this->xss_clean == FALSE)
+		if ($this->xss_clean === FALSE)
 		{
 			$m->xss_clean = FALSE;
 		}
@@ -297,27 +338,22 @@
 		//  Check for Method (and Object)
 		//-------------------------------------
 
-		$method_parts = explode(".", $this->methods[$methName]['function']);
-		$objectCall = (isset($method_parts['1']) && $method_parts['1'] != "") ? TRUE : FALSE;
+		$method_parts = explode('.', $this->methods[$methName]['function']);
+		$objectCall = (isset($method_parts[1]) && $method_parts[1] !== '');
 
 		if ($system_call === TRUE)
 		{
-			if ( ! is_callable(array($this,$method_parts['1'])))
+			if ( ! is_callable(array($this,$method_parts[1])))
 			{
 				return new XML_RPC_Response(0, $this->xmlrpcerr['unknown_method'], $this->xmlrpcstr['unknown_method']);
 			}
 		}
-		else
-		{
-			if ($objectCall && ! is_callable(array($method_parts['0'],$method_parts['1'])))
+		elseif (($objectCall && ! is_callable(array($method_parts[0], $method_parts[1])))
+			OR ( ! $objectCall && ! is_callable($this->methods[$methName]['function']))
+		)
 			{
 				return new XML_RPC_Response(0, $this->xmlrpcerr['unknown_method'], $this->xmlrpcstr['unknown_method']);
 			}
-			elseif ( ! $objectCall && ! is_callable($this->methods[$methName]['function']))
-			{
-				return new XML_RPC_Response(0, $this->xmlrpcerr['unknown_method'], $this->xmlrpcstr['unknown_method']);
-			}
-		}
 
 		//-------------------------------------
 		//  Checking Methods Signature
@@ -326,18 +362,18 @@
 		if (isset($this->methods[$methName]['signature']))
 		{
 			$sig = $this->methods[$methName]['signature'];
-			for ($i=0; $i<count($sig); $i++)
+			for ($i = 0, $c = count($sig); $i < $c; $i++)
 			{
 				$current_sig = $sig[$i];
 
-				if (count($current_sig) == count($m->params)+1)
+				if (count($current_sig) === count($m->params)+1)
 				{
-					for ($n=0; $n < count($m->params); $n++)
+					for ($n = 0, $mc = count($m->params); $n < $mc; $n++)
 					{
 						$p = $m->params[$n];
-						$pt = ($p->kindOf() == 'scalar') ? $p->scalarval() : $p->kindOf();
+						$pt = ($p->kindOf() === 'scalar') ? $p->scalarval() : $p->kindOf();
 
-						if ($pt != $current_sig[$n+1])
+						if ($pt !== $current_sig[$n+1])
 						{
 							$pno = $n+1;
 							$wanted = $current_sig[$n+1];
@@ -345,7 +381,7 @@
 							return new XML_RPC_Response(0,
 								$this->xmlrpcerr['incorrect_params'],
 								$this->xmlrpcstr['incorrect_params'] .
-								": Wanted {$wanted}, got {$pt} at param {$pno})");
+								': Wanted '.$wanted.', got '.$pt.' at param '.$pno.')');
 						}
 					}
 				}
@@ -358,22 +394,17 @@
 
 		if ($objectCall === TRUE)
 		{
-			if ($method_parts[0] == "this" && $system_call == TRUE)
+			if ($method_parts[0] === 'this' && $system_call === TRUE)
 			{
 				return call_user_func(array($this, $method_parts[1]), $m);
 			}
-			else
-			{
-				if ($this->object === FALSE)
+			elseif ($this->object === FALSE)
 				{
-					$CI =& get_instance();
-					return $CI->$method_parts['1']($m);
+				return get_instance()->$method_parts[1]($m);
 				}
 				else
 				{
-					return $this->object->$method_parts['1']($m);
-					//return call_user_func(array(&$method_parts['0'],$method_parts['1']), $m);
-				}
+				return $this->object->$method_parts[1]($m);
 			}
 		}
 		else
@@ -387,11 +418,10 @@
 	/**
 	 * Server Function:  List Methods
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	object
 	 */
-	function listMethods($m)
+	public function listMethods($m)
 	{
 		$v = new XML_RPC_Values();
 		$output = array();
@@ -415,11 +445,10 @@
 	/**
 	 * Server Function:  Return Signature for Method
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	object
 	 */
-	function methodSignature($m)
+	public function methodSignature($m)
 	{
 		$parameters = $m->output_parameters();
 		$method_name = $parameters[0];
@@ -431,28 +460,24 @@
 				$sigs = array();
 				$signature = $this->methods[$method_name]['signature'];
 
-				for ($i=0; $i < count($signature); $i++)
+				for ($i = 0, $c = count($signature); $i < $c; $i++)
 				{
 					$cursig = array();
 					$inSig = $signature[$i];
-					for ($j=0; $j<count($inSig); $j++)
+					for ($j = 0, $jc = count($inSig); $j < $jc; $j++)
 					{
 						$cursig[]= new XML_RPC_Values($inSig[$j], 'string');
 					}
 					$sigs[]= new XML_RPC_Values($cursig, 'array');
 				}
-				$r = new XML_RPC_Response(new XML_RPC_Values($sigs, 'array'));
-			}
-			else
-			{
-				$r = new XML_RPC_Response(new XML_RPC_Values('undef', 'string'));
-			}
+
+				return new XML_RPC_Response(new XML_RPC_Values($sigs, 'array'));
 		}
-		else
-		{
-			$r = new XML_RPC_Response(0,$this->xmlrpcerr['introspect_unknown'], $this->xmlrpcstr['introspect_unknown']);
+
+			return new XML_RPC_Response(new XML_RPC_Values('undef', 'string'));
 		}
-		return $r;
+
+		return new XML_RPC_Response(0, $this->xmlrpcerr['introspect_unknown'], $this->xmlrpcstr['introspect_unknown']);
 	}
 
 	// --------------------------------------------------------------------
@@ -460,11 +485,10 @@
 	/**
 	 * Server Function:  Doc String for Method
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	object
 	 */
-	function methodHelp($m)
+	public function methodHelp($m)
 	{
 		$parameters = $m->output_parameters();
 		$method_name = $parameters[0];
@@ -486,11 +510,10 @@
 	/**
 	 * Server Function:  Multi-call
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	object
 	 */
-	function multicall($m)
+	public function multicall($m)
 	{
 		// Disabled
 		return new XML_RPC_Response(0, $this->xmlrpcerr['unknown_method'], $this->xmlrpcstr['unknown_method']);
@@ -502,19 +525,17 @@
 
 		foreach ($calls as $value)
 		{
-			//$attempt = $this->_execute(new XML_RPC_Message($value[0], $value[1]));
-
 			$m = new XML_RPC_Message($value[0]);
 			$plist='';
 
-			for ($i=0; $i < count($value[1]); $i++)
+			for ($i = 0, $c = count($value[1]); $i < $c; $i++)
 			{
 				$m->addParam(new XML_RPC_Values($value[1][$i], 'string'));
 			}
 
 			$attempt = $this->_execute($m);
 
-			if ($attempt->faultCode() != 0)
+			if ($attempt->faultCode() !== 0)
 			{
 				return $attempt;
 			}
@@ -530,11 +551,10 @@
 	/**
 	 *  Multi-call Function:  Error Handling
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	object
 	 */
-	function multicall_error($err)
+	public function multicall_error($err)
 	{
 		$str  = is_string($err) ? $this->xmlrpcstr["multicall_${err}"] : $err->faultString();
 		$code = is_string($err) ? $this->xmlrpcerr["multicall_${err}"] : $err->faultCode();
@@ -550,13 +570,12 @@
 	/**
 	 *  Multi-call Function:  Processes method
 	 *
-	 * @access	public
 	 * @param	mixed
 	 * @return	object
 	 */
-	function do_multicall($call)
+	public function do_multicall($call)
 	{
-		if ($call->kindOf() != 'struct')
+		if ($call->kindOf() !== 'struct')
 		{
 			return $this->multicall_error('notstruct');
 		}
@@ -566,13 +585,13 @@
 		}
 
 		list($scalar_type,$scalar_value)=each($methName->me);
-		$scalar_type = $scalar_type == $this->xmlrpcI4 ? $this->xmlrpcInt : $scalar_type;
+		$scalar_type = $scalar_type === $this->xmlrpcI4 ? $this->xmlrpcInt : $scalar_type;
 
-		if ($methName->kindOf() != 'scalar' OR $scalar_type != 'string')
+		if ($methName->kindOf() !== 'scalar' OR $scalar_type !== 'string')
 		{
 			return $this->multicall_error('notstring');
 		}
-		elseif ($scalar_value == 'system.multicall')
+		elseif ($scalar_value === 'system.multicall')
 		{
 			return $this->multicall_error('recursion');
 		}
@@ -580,23 +599,22 @@
 		{
 			return $this->multicall_error('noparams');
 		}
-		elseif ($params->kindOf() != 'array')
+		elseif ($params->kindOf() !== 'array')
 		{
 			return $this->multicall_error('notarray');
 		}
 
 		list($a,$b)=each($params->me);
-		$numParams = count($b);
 
 		$msg = new XML_RPC_Message($scalar_value);
-		for ($i = 0; $i < $numParams; $i++)
+		for ($i = 0, $numParams = count($b); $i < $numParams; $i++)
 		{
 			$msg->params[] = $params->me['array'][$i];
 		}
 
 		$result = $this->_execute($msg);
 
-		if ($result->faultCode() != 0)
+		if ($result->faultCode() !== 0)
 		{
 			return $this->multicall_error($result);
 		}
@@ -605,8 +623,3 @@
 	}
 
 }
-// END XML_RPC_Server class
-
-
-/* End of file Xmlrpcs.php */
-/* Location: ./system/libraries/Xmlrpcs.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case -u pos-prod/system/libraries/Zip.php opensourcepos/system/libraries/Zip.php
--- pos-prod/system/libraries/Zip.php	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/system/libraries/Zip.php	2016-05-23 15:32:31.948838748 -0700
@@ -1,19 +1,41 @@
-<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
+<?php
 /**
  * CodeIgniter
  *
- * An open source application development framework for PHP 5.1.6 or newer
+ * An open source application development framework for PHP
+ *
+ * This content is released under the MIT License (MIT)
+ *
+ * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
  *
  * @package		CodeIgniter
- * @author		ExpressionEngine Dev Team
- * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
- * @license		http://codeigniter.com/user_guide/license.html
- * @link		http://codeigniter.com
- * @since		Version 1.0
+ * @author	EllisLab Dev Team
+ * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
+ * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
+ * @license	http://opensource.org/licenses/MIT	MIT License
+ * @link	https://codeigniter.com
+ * @since	Version 1.0.0
  * @filesource
  */
-
-// ------------------------------------------------------------------------
+defined('BASEPATH') OR exit('No direct script access allowed');
 
 /**
  * Zip Compression Class
@@ -27,26 +49,71 @@
  * @package		CodeIgniter
  * @subpackage	Libraries
  * @category	Encryption
- * @author		ExpressionEngine Dev Team
- * @link		http://codeigniter.com/user_guide/libraries/zip.html
+ * @author		EllisLab Dev Team
+ * @link		https://codeigniter.com/user_guide/libraries/zip.html
  */
 class CI_Zip  {
 
-	var $zipdata	= '';
-	var $directory	= '';
-	var $entries	= 0;
-	var $file_num	= 0;
-	var $offset		= 0;
-	var $now;
+	/**
+	 * Zip data in string form
+	 *
+	 * @var string
+	 */
+	public $zipdata = '';
+
+	/**
+	 * Zip data for a directory in string form
+	 *
+	 * @var string
+	 */
+	public $directory = '';
+
+	/**
+	 * Number of files/folder in zip file
+	 *
+	 * @var int
+	 */
+	public $entries = 0;
+
+	/**
+	 * Number of files in zip
+	 *
+	 * @var int
+	 */
+	public $file_num = 0;
+
+	/**
+	 * relative offset of local header
+	 *
+	 * @var int
+	 */
+	public $offset = 0;
+
+	/**
+	 * Reference to time at init
+	 *
+	 * @var int
+	 */
+	public $now;
+
+	/**
+	 * The level of compression
+	 *
+	 * Ranges from 0 to 9, with 9 being the highest level.
+	 *
+	 * @var	int
+	 */
+	public $compression_level = 2;
 
 	/**
-	 * Constructor
+	 * Initialize zip compression class
+	 *
+	 * @return	void
 	 */
 	public function __construct()
 	{
-		log_message('debug', "Zip Compression Class Initialized");
-
 		$this->now = time();
+		log_message('info', 'Zip Compression Class Initialized');
 	}
 
 	// --------------------------------------------------------------------
@@ -56,15 +123,14 @@
 	 *
 	 * Lets you add a virtual directory into which you can place files.
 	 *
-	 * @access	public
-	 * @param	mixed	the directory name. Can be string or array
+	 * @param	mixed	$directory	the directory name. Can be string or array
 	 * @return	void
 	 */
-	function add_dir($directory)
+	public function add_dir($directory)
 	{
 		foreach ((array)$directory as $dir)
 		{
-			if ( ! preg_match("|.+/$|", $dir))
+			if ( ! preg_match('|.+/$|', $dir))
 			{
 				$dir .= '/';
 			}
@@ -82,18 +147,18 @@
 	 *
 	 *	If this is a newly created file/dir, we will set the time to 'now'
 	 *
-	 *	@param string	path to file
+	 * @param	string	$dir	path to file
 	 *	@return array	filemtime/filemdate
 	 */
-	function _get_mod_time($dir)
+	protected function _get_mod_time($dir)
 	{
-		// filemtime() will return false, but it does raise an error.
-		$date = (@filemtime($dir)) ? filemtime($dir) : getdate($this->now);
-
-		$time['file_mtime'] = ($date['hours'] << 11) + ($date['minutes'] << 5) + $date['seconds'] / 2;
-		$time['file_mdate'] = (($date['year'] - 1980) << 9) + ($date['mon'] << 5) + $date['mday'];
+		// filemtime() may return false, but raises an error for non-existing files
+		$date = file_exists($dir) ? getdate(filemtime($dir)) : getdate($this->now);
 
-		return $time;
+		return array(
+			'file_mtime' => ($date['hours'] << 11) + ($date['minutes'] << 5) + $date['seconds'] / 2,
+			'file_mdate' => (($date['year'] - 1980) << 9) + ($date['mon'] << 5) + $date['mday']
+		);
 	}
 
 	// --------------------------------------------------------------------
@@ -101,13 +166,14 @@
 	/**
 	 * Add Directory
 	 *
-	 * @access	private
-	 * @param	string	the directory name
+	 * @param	string	$dir	the directory name
+	 * @param	int	$file_mtime
+	 * @param	int	$file_mdate
 	 * @return	void
 	 */
-	function _add_dir($dir, $file_mtime, $file_mdate)
+	protected function _add_dir($dir, $file_mtime, $file_mdate)
 	{
-		$dir = str_replace("\\", "/", $dir);
+		$dir = str_replace('\\', '/', $dir);
 
 		$this->zipdata .=
 			"\x50\x4b\x03\x04\x0a\x00\x00\x00\x00\x00"
@@ -153,12 +219,11 @@
 	 * in the filename it will be placed within a directory.  Make
 	 * sure you use add_dir() first to create the folder.
 	 *
-	 * @access	public
-	 * @param	mixed
-	 * @param	string
+	 * @param	mixed	$filepath	A single filepath or an array of file => data pairs
+	 * @param	string	$data		Single file contents
 	 * @return	void
 	 */
-	function add_data($filepath, $data = NULL)
+	public function add_data($filepath, $data = NULL)
 	{
 		if (is_array($filepath))
 		{
@@ -182,20 +245,19 @@
 	/**
 	 * Add Data to Zip
 	 *
-	 * @access	private
-	 * @param	string	the file name/path
-	 * @param	string	the data to be encoded
+	 * @param	string	$filepath	the file name/path
+	 * @param	string	$data	the data to be encoded
+	 * @param	int	$file_mtime
+	 * @param	int	$file_mdate
 	 * @return	void
 	 */
-	function _add_data($filepath, $data, $file_mtime, $file_mdate)
+	protected function _add_data($filepath, $data, $file_mtime, $file_mdate)
 	{
-		$filepath = str_replace("\\", "/", $filepath);
+		$filepath = str_replace('\\', '/', $filepath);
 
 		$uncompressed_size = strlen($data);
 		$crc32  = crc32($data);
-
-		$gzdata = gzcompress($data);
-		$gzdata = substr($gzdata, 2, -4);
+		$gzdata = substr(gzcompress($data, $this->compression_level), 2, -4);
 		$compressed_size = strlen($gzdata);
 
 		$this->zipdata .=
@@ -236,23 +298,26 @@
 	/**
 	 * Read the contents of a file and add it to the zip
 	 *
-	 * @access	public
+	 * @param	string	$path
+	 * @param	bool	$archive_filepath
 	 * @return	bool
 	 */
-	function read_file($path, $preserve_filepath = FALSE)
+	public function read_file($path, $archive_filepath = FALSE)
 	{
-		if ( ! file_exists($path))
+		if (file_exists($path) && FALSE !== ($data = file_get_contents($path)))
 		{
-			return FALSE;
+			if (is_string($archive_filepath))
+			{
+				$name = str_replace('\\', '/', $archive_filepath);
 		}
-
-		if (FALSE !== ($data = file_get_contents($path)))
+			else
 		{
-			$name = str_replace("\\", "/", $path);
+				$name = str_replace('\\', '/', $path);
 
-			if ($preserve_filepath === FALSE)
+				if ($archive_filepath === FALSE)
 			{
-				$name = preg_replace("|.*/(.+)|", "\\1", $name);
+					$name = preg_replace('|.*/(.+)|', '\\1', $name);
+				}
 			}
 
 			$this->add_data($name, $data);
@@ -270,12 +336,14 @@
 	 * sub-folders) and creates a zip based on it.  Whatever directory structure
 	 * is in the original file path will be recreated in the zip file.
 	 *
-	 * @access	public
-	 * @param	string	path to source
+	 * @param	string	$path	path to source directory
+	 * @param	bool	$preserve_filepath
+	 * @param	string	$root_path
 	 * @return	bool
 	 */
-	function read_dir($path, $preserve_filepath = TRUE, $root_path = NULL)
+	public function read_dir($path, $preserve_filepath = TRUE, $root_path = NULL)
 	{
+		$path = rtrim($path, '/\\').DIRECTORY_SEPARATOR;
 		if ( ! $fp = @opendir($path))
 		{
 			return FALSE;
@@ -284,26 +352,23 @@
 		// Set the original directory root for child dir's to use as relative
 		if ($root_path === NULL)
 		{
-			$root_path = dirname($path).'/';
+			$root_path = str_replace(array('\\', '/'), DIRECTORY_SEPARATOR, dirname($path)).DIRECTORY_SEPARATOR;
 		}
 
 		while (FALSE !== ($file = readdir($fp)))
 		{
-			if (substr($file, 0, 1) == '.')
+			if ($file[0] === '.')
 			{
 				continue;
 			}
 
-			if (@is_dir($path.$file))
+			if (is_dir($path.$file))
 			{
-				$this->read_dir($path.$file."/", $preserve_filepath, $root_path);
+				$this->read_dir($path.$file.DIRECTORY_SEPARATOR, $preserve_filepath, $root_path);
 			}
-			else
-			{
-				if (FALSE !== ($data = file_get_contents($path.$file)))
+			elseif (FALSE !== ($data = file_get_contents($path.$file)))
 				{
-					$name = str_replace("\\", "/", $path);
-
+				$name = str_replace(array('\\', '/'), DIRECTORY_SEPARATOR, $path);
 					if ($preserve_filepath === FALSE)
 					{
 						$name = str_replace($root_path, '', $name);
@@ -312,8 +377,8 @@
 					$this->add_data($name.$file, $data);
 				}
 			}
-		}
 
+		closedir($fp);
 		return TRUE;
 	}
 
@@ -322,26 +387,23 @@
 	/**
 	 * Get the Zip file
 	 *
-	 * @access	public
-	 * @return	binary string
+	 * @return	string	(binary encoded)
 	 */
-	function get_zip()
+	public function get_zip()
 	{
 		// Is there any data to return?
-		if ($this->entries == 0)
+		if ($this->entries === 0)
 		{
 			return FALSE;
 		}
 
-		$zip_data = $this->zipdata;
-		$zip_data .= $this->directory."\x50\x4b\x05\x06\x00\x00\x00\x00";
-		$zip_data .= pack('v', $this->entries); // total # of entries "on this disk"
-		$zip_data .= pack('v', $this->entries); // total # of entries overall
-		$zip_data .= pack('V', strlen($this->directory)); // size of central dir
-		$zip_data .= pack('V', strlen($this->zipdata)); // offset to start of central dir
-		$zip_data .= "\x00\x00"; // .zip file comment length
-
-		return $zip_data;
+		return $this->zipdata
+			.$this->directory."\x50\x4b\x05\x06\x00\x00\x00\x00"
+			.pack('v', $this->entries) // total # of entries "on this disk"
+			.pack('v', $this->entries) // total # of entries overall
+			.pack('V', strlen($this->directory)) // size of central dir
+			.pack('V', strlen($this->zipdata)) // offset to start of central dir
+			."\x00\x00"; // .zip file comment length
 	}
 
 	// --------------------------------------------------------------------
@@ -351,23 +413,30 @@
 	 *
 	 * Lets you write a file
 	 *
-	 * @access	public
-	 * @param	string	the file name
+	 * @param	string	$filepath	the file name
 	 * @return	bool
 	 */
-	function archive($filepath)
+	public function archive($filepath)
 	{
-		if ( ! ($fp = @fopen($filepath, FOPEN_WRITE_CREATE_DESTRUCTIVE)))
+		if ( ! ($fp = @fopen($filepath, 'w+b')))
 		{
 			return FALSE;
 		}
 
 		flock($fp, LOCK_EX);
-		fwrite($fp, $this->get_zip());
+
+		for ($result = $written = 0, $data = $this->get_zip(), $length = strlen($data); $written < $length; $written += $result)
+		{
+			if (($result = fwrite($fp, substr($data, $written))) === FALSE)
+			{
+				break;
+			}
+		}
+
 		flock($fp, LOCK_UN);
 		fclose($fp);
 
-		return TRUE;
+		return is_int($result);
 	}
 
 	// --------------------------------------------------------------------
@@ -375,23 +444,18 @@
 	/**
 	 * Download
 	 *
-	 * @access	public
-	 * @param	string	the file name
-	 * @param	string	the data to be encoded
-	 * @return	bool
+	 * @param	string	$filename	the file name
+	 * @return	void
 	 */
-	function download($filename = 'backup.zip')
+	public function download($filename = 'backup.zip')
 	{
-		if ( ! preg_match("|.+?\.zip$|", $filename))
+		if ( ! preg_match('|.+?\.zip$|', $filename))
 		{
 			$filename .= '.zip';
 		}
 
-		$CI =& get_instance();
-		$CI->load->helper('download');
-
+		get_instance()->load->helper('download');
 		$get_zip = $this->get_zip();
-
 		$zip_content =& $get_zip;
 
 		force_download($filename, $zip_content);
@@ -405,19 +469,16 @@
 	 * Lets you clear current zip data.  Useful if you need to create
 	 * multiple zips with different data.
 	 *
-	 * @access	public
-	 * @return	void
+	 * @return	CI_Zip
 	 */
-	function clear_data()
+	public function clear_data()
 	{
 		$this->zipdata		= '';
 		$this->directory	= '';
 		$this->entries		= 0;
 		$this->file_num		= 0;
 		$this->offset		= 0;
+		return $this;
 	}
 
 }
-
-/* End of file Zip.php */
-/* Location: ./system/libraries/Zip.php */
\ No newline at end of file
Only in opensourcepos: test
Only in opensourcepos: translations
diff -rBwi --ignore-file-name-case -u pos-prod/UPGRADE.txt opensourcepos/UPGRADE.txt
--- pos-prod/UPGRADE.txt	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/UPGRADE.txt	2016-05-23 15:32:31.795841050 -0700
@@ -1,4 +1,14 @@
 How to Upgrade
 -------------------------
-1. Replace all code from your point of sale installation with the code downloaded
-2. Run the necessary database upgrades from the database folder
+1. Backup all your current database and OSPOS code
+2. Make sure you have a copy of application/config/config.php and application/config/database.php
+3. Remove all directories
+4. Install tne new OSPOS
+5. Run the database upgrade scripts from database/ (check which ones you need according to the version you are upgrading from)
+6. Take the saved old config.php and upgrade the new config.php with any additional changes you made in the old.
+   Take time to understand if new config rules require some changes (e.g. encryption keys)
+7. Copy application/config/database.php.tmpl to application/config/database.php
+8. Take the saved old database.php and change the new database.php to contain all the configuration you had in the old setup.
+   Please try not to use the old layout, use the new one and just copy the content of the config variables
+9. Once new code is in place, database is updated and config files are sorted you are good to start the new OSPOS
+10. If any issue please check GitHub issues as somebody else might have had your problem already or post a question
Only in opensourcepos: uploads
diff -rBwi --ignore-file-name-case -u pos-prod/WHATS_NEW.txt opensourcepos/WHATS_NEW.txt
--- pos-prod/WHATS_NEW.txt	2014-10-07 18:38:13.000000000 -0700
+++ opensourcepos/WHATS_NEW.txt	2016-05-23 15:32:31.795841050 -0700
@@ -1,3 +1,90 @@
+Version 2.4
+-----------
++ *CodeIgniter 3.0.5* Upgrade (please read UPGRADE.txt)
++ Fix for spurious logouts
++ Apache .htaccess mod_expiry caching and security optimizations
++ Bulk item edit fixes (category, tax and supplier fields)
++ Remove f-key shortcuts used for module navigation
++ Allow to use custom invoice numbers when suspending sale
++ PHP7 fixes
++ Specific warnings to distinguish between reorder level and out of stock situation in sales
++ Fix malware detection issues due to usage of base64 encoding for storing session variables
++ Improve language generation scripts (use PHP builtin functionality)
++ Add extra buttons for navigation and printing to receipt and invoice
++ Improve print layout for invoices
++ Make layout consistent for items between receipt and invoice templates
++ Minor bugfixes
+ 
+Version 2.3.4
+-------------
++ Migration script fixes
++ Improved continuous integration setup
++ More integration tests
++ Virtualized container setup (docker install)
++ Live clock functionality + favicon
++ Improved PHP 7 compatbility
++ Added de_CH (German) as language 
++ Minor code cleanup
++ Removal of annoying backup prompt on logout
+
+Version 2.3.3
+-------------
++ Item kit fixes (search, list, ..)
++ Add datepicker widgets in sale/receiving edit forms
++ Add date filter in items module
++ Add barcode generation logic for EAN8, EAN13
++ Add barcode validation + fallback logic for EAN8, EAN13
++ New config option to generate barcodes if item_number empty
++ Add cost + count to inventory reports
++ Giftcard fixes
++ Refactor sales overview (added date filtering + search options)
++ Better locale config support
++ Improve php compatibility
++ Fix invoice numbering bug on suspend
++ Add configurable locale-dependent dateformat
++ Add grunt-cache-breaker plugin
++ Suspend button appeaers before adding a payment
++ Searching of deleted items, filtering part is removed
++ Remove infamous "0" after leaving sale or receiving comments empty
++ Add SQL script to clean zeroes in sales/receivings comments
++ Numerous other bug fixes
+
+Version 2.3.2
+-------------
++ Nominatim (OpenStreetMap) customer address autocompletion
++ Sale invoice templating
++ Configurable barcode generation for items
++ Stock location filtering in detailed sales and receivings reports
++ Giftcards bugfixes
++ Proper pagination support for most modules
++ Language updates
++ Bugfix for decimal taxrates
++ Add gender + company name attributes to customer
++ Stock location config screen refactor
++ Basic travis-ci + phantomJs setup
++ Database backup on admin logout
++ Modifiable item thumbnails
++ Email invoice PDF generation using DomPDF
++ Modifiable company logo
++ jQuery upgrade (1.2 -> 1.8.3)
++ Javascript minification (using grunt)
++ Numerous bugfixes
+
+Version 2.3.1
+-------------
+
++ Extra report permissions (this includes a refactoring of the database model - new grants table)
++ Tax inclusive/exclusive pricing
++ Receivings amount multiplication (can be configured in items section)
++ Customizable sale and receiving numbering
++ Giftcard improvements
++ Fix item import through csv
++ Bug fixes for reports
+
+Version 2.3
+-----------
++ Support for multiple stock locations
+
 Version 2.2.2
 -------------
 + French language added
