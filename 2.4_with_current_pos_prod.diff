Only in opensourcepos: .git
Only in opensourcepos: .gitattributes
diff -rBwi --ignore-file-name-case pos-prod/.gitignore opensourcepos/.gitignore
0a1,3
> node_modules
> bower_components
> application/config/email.php
3a7
> .idea/
6,7c10
< *.sh
< *.swp
---
> .swp
13a17,21
> *~
> *.~
> *.log
> dist/*_bower.*
> application/sessions/*
Only in opensourcepos: .htaccess
Only in opensourcepos: .travis.yml
diff -rBwi --ignore-file-name-case pos-prod/application/.htaccess opensourcepos/application/.htaccess
0a1,4
> <IfModule authz_core_module>
>     Require all denied
> </IfModule>
> <IfModule !authz_core_module>
1a6
> </IfModule>
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/cache/.htaccess opensourcepos/application/cache/.htaccess
0a1,4
> <IfModule authz_core_module>
>     Require all denied
> </IfModule>
> <IfModule !authz_core_module>
1a6
> </IfModule>
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/cache/index.html opensourcepos/application/cache/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/config/autoload.php opensourcepos/application/config/autoload.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
23,26c25,29
< | 3. Helper files
< | 4. Custom config files
< | 5. Language files
< | 6. Models
---
> | 3. Drivers
> | 4. Helper files
> | 5. Custom config files
> | 6. Language files
> | 7. Models
32c35
< |  Auto-load Packges
---
> |  Auto-load Packages
47,48c48,50
< | These are the classes located in the system/libraries folder
< | or in your application/libraries folder.
---
> | These are the classes located in system/libraries/ or your
> | application/libraries/ directory, with the addition of the
> | 'database' library, which is somewhat of a special case.
52c54,59
< |	$autoload['libraries'] = array('database', 'session', 'xmlrpc');
---
> |	$autoload['libraries'] = array('database', 'email', 'session');
> |
> | You can also supply an alternative library name to be assigned
> | in the controller:
> |
> |	$autoload['libraries'] = array('user_agent' => 'ua');
56a63,76
> /*
> | -------------------------------------------------------------------
> |  Auto-load Drivers
> | -------------------------------------------------------------------
> | These classes are located in system/libraries/ or in your
> | application/libraries/ directory, but are also placed inside their
> | own subdirectory and they extend the CI_Driver_Library class. They
> | offer multiple interchangeable driver options.
> |
> | Prototype:
> |
> |	$autoload['drivers'] = array('cache');
> */
> $autoload['drivers'] = array();
66,68c86
< 
< $autoload['helper'] = array('form','url','table','text','currency', 'html', 'download', 'directory');
< 
---
> $autoload['helper'] = array('form', 'url', 'table', 'text', 'currency', 'html', 'download', 'directory', 'dateformat_helper');
108c122,125
< |	$autoload['model'] = array('model1', 'model2');
---
> |	$autoload['model'] = array('first_model', 'second_model');
> |
> | You can also supply an alternative model name to be assigned
> | in the controller:
109a127
> |	$autoload['model'] = array('first_model' => 'first');
111,116c129
< 
< $autoload['model'] = array('Appconfig','Person','Customer','Employee','Module','Item', 'Item_taxes', 'Sale', 'Sale_suspended', 'Supplier','Inventory','Receiving','Giftcard', 'Item_kit', 'Item_kit_items','Stock_locations','Item_quantities');
< 
< 
< /* End of file autoload.php */
< /* Location: ./application/config/autoload.php */
\ No newline at end of file
---
> $autoload['model'] = array('Appconfig', 'Person', 'Customer', 'Employee', 'Module', 'Item', 'Item_taxes', 'Sale', 'Sale_suspended', 'Supplier', 'Inventory', 'Receiving', 'Giftcard', 'Item_kit', 'Item_kit_items', 'Stock_location', 'Item_quantity');
diff -rBwi --ignore-file-name-case pos-prod/application/config/config.php opensourcepos/application/config/config.php
1c1,2
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
12c13
< $config['application_version'] = '2.3';
---
> $config['application_version'] = '2.4.0';
24,25c25,34
< | If this is not set then CodeIgniter will guess the protocol, domain and
< | path to your installation.
---
> | WARNING: You MUST set this value!
> |
> | If it is not set, then CodeIgniter will try guess the protocol and path
> | your installation, but due to security concerns the hostname will be set
> | to $_SERVER['SERVER_ADDR'] if available, or localhost otherwise.
> | The auto-detection mechanism exists only for convenience during
> | development and MUST NOT be used in production!
> |
> | If you need to allow multiple domains, remember that this file is still
> | a PHP script and you can easily do that on your own.
50c59
< | URI string.  The default setting of 'AUTO' works for most servers.
---
> | URI string.  The default setting of 'REQUEST_URI' works for most servers.
53,57c62,64
< | 'AUTO'			Default - auto detects
< | 'PATH_INFO'		Uses the PATH_INFO
< | 'QUERY_STRING'	Uses the QUERY_STRING
< | 'REQUEST_URI'		Uses the REQUEST_URI
< | 'ORIG_PATH_INFO'	Uses the ORIG_PATH_INFO
---
> | 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']
> | 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']
> | 'PATH_INFO'      Uses $_SERVER['PATH_INFO']
58a66
> | WARNING: If you set this to 'PATH_INFO', URIs will always be URL-decoded!
60c68
< $config['uri_protocol']	= 'AUTO';
---
> $config['uri_protocol']	= 'REQUEST_URI';
70c78
< | http://codeigniter.com/user_guide/general/urls.html
---
> | https://codeigniter.com/user_guide/general/urls.html
94a102,103
> | See http://php.net/htmlspecialchars for a list of supported charsets.
> |
118,119c126,127
< | http://codeigniter.com/user_guide/general/core_classes.html
< | http://codeigniter.com/user_guide/general/creating_libraries.html
---
> | https://codeigniter.com/user_guide/general/core_classes.html
> | https://codeigniter.com/user_guide/general/creating_libraries.html
123a132,152
> /*
> |--------------------------------------------------------------------------
> | Composer auto-loading
> |--------------------------------------------------------------------------
> |
> | Enabling this setting will tell CodeIgniter to look for a Composer
> | package auto-loader script in application/vendor/autoload.php.
> |
> |	$config['composer_autoload'] = TRUE;
> |
> | Or if you have your vendor/ directory located somewhere else, you
> | can opt to set a specific path as well:
> |
> |	$config['composer_autoload'] = '/path/to/vendor/autoload.php';
> |
> | For more information about Composer, please visit http://getcomposer.org/
> |
> | Note: This will NOT disable or override the CodeIgniter-specific
> |	autoloading (application/config/autoload.php)
> */
> $config['composer_autoload'] = FALSE;
130,132c159,161
< | This lets you specify with a regular expression which characters are permitted
< | within your URLs.  When someone tries to submit a URL with disallowed
< | characters they will get a warning message.
---
> | This lets you specify which characters are permitted within your URLs.
> | When someone tries to submit a URL with disallowed characters they will
> | get a warning message.
138a168,170
> | The configured value is actually a regular expression character group
> | and it will be executed as: ! preg_match('/^[<permitted_uri_chars>]+$/i
> |
174c205
< $config['directory_trigger']	= 'd'; // experimental not currently in use
---
> $config['directory_trigger'] = 'd';
181,182d211
< | If you have enabled error logging, you can set an error threshold to
< | determine what gets logged. Threshold options are:
191a221,224
> | You can also pass an array with threshold levels to show individual error types
> |
> | 	array(2) = Debug Messages, without Error Messages
> |
204c237,259
< | application/logs/ folder. Use a full server path with trailing slash.
---
> | application/logs/ directory. Use a full server path with trailing slash.
> |
> */
> $config['log_path'] = '';
> 
> /*
> |--------------------------------------------------------------------------
> | Log File Extension
> |--------------------------------------------------------------------------
> |
> | The default filename extension for log files. The default 'php' allows for
> | protecting the log files via basic scripting, when they are to be stored
> | under a publicly accessible directory.
> |
> | Note: Leaving it blank will default to 'php'.
> |
> */
> $config['log_file_extension'] = '';
> 
> /*
> |--------------------------------------------------------------------------
> | Log File Permissions
> |--------------------------------------------------------------------------
205a261,264
> | The file system permissions to be applied on newly created log files.
> |
> | IMPORTANT: This MUST be an integer (no quotes) and you MUST use octal
> |            integer notation (i.e. 0700, 0644, etc.)
207c266
< $config['log_path'] = '/tmp/';
---
> $config['log_file_permissions'] = 0644;
221a281,291
> | Error Views Directory Path
> |--------------------------------------------------------------------------
> |
> | Leave this BLANK unless you would like to set something other than the default
> | application/views/errors/ directory.  Use a full server path with trailing slash.
> |
> */
> $config['error_views_path'] = '';
> 
> /*
> |--------------------------------------------------------------------------
226c296
< | system/cache/ folder.  Use a full server path with trailing slash.
---
> | application/cache/ directory.  Use a full server path with trailing slash.
232a303,320
> | Cache Include Query String
> |--------------------------------------------------------------------------
> |
> | Whether to take the URL query string into consideration when generating
> | output cache files. Valid options are:
> |
> |	FALSE      = Disabled
> |	TRUE       = Enabled, take all query parameters into account.
> |	             Please be aware that this may result in numerous cache
> |	             files generated for the same page over and over again.
> |	array('q') = Enabled, but only take into account the specified list
> |	             of query parameters.
> |
> */
> $config['cache_query_string'] = FALSE;
> 
> /*
> |--------------------------------------------------------------------------
236,237c324,327
< | If you use the Encryption class or the Session class you
< | MUST set an encryption key.  See the user guide for info.
---
> | If you use the Encryption class, you must set an encryption key.
> | See the user guide for more info.
> |
> | https://codeigniter.com/user_guide/libraries/encryption.html
240c330
< $config['encryption_key'] = 'PUT_YOUR_ENCRYPTION_KEY_HERE';
---
> $config['encryption_key'] = '';
247,265c337,386
< | 'sess_cookie_name'		= the name you want for the cookie
< | 'sess_expiration'			= the number of SECONDS you want the session to last.
< |   by default sessions last 7200 seconds (two hours).  Set to zero for no expiration.
< | 'sess_expire_on_close'	= Whether to cause the session to expire automatically
< |   when the browser window is closed
< | 'sess_encrypt_cookie'		= Whether to encrypt the cookie
< | 'sess_use_database'		= Whether to save the session data to a database
< | 'sess_table_name'			= The name of the session database table
< | 'sess_match_ip'			= Whether to match the user's IP address when reading the session data
< | 'sess_match_useragent'	= Whether to match the User Agent when reading the session data
< | 'sess_time_to_update'		= how many seconds between CI refreshing Session Information
< |
< */
< $config['sess_cookie_name']		= 'ci_session';
< $config['sess_expiration']		= 0; // 14400
< $config['sess_expire_on_close']	= FALSE;
< $config['sess_encrypt_cookie']	= FALSE;
< $config['sess_use_database']	= TRUE;
< $config['sess_table_name']		= 'ospos_sessions';
---
> | 'sess_driver'
> |
> |	The storage driver to use: files, database, redis, memcached
> |
> | 'sess_cookie_name'
> |
> |	The session cookie name, must contain only [0-9a-z_-] characters
> |
> | 'sess_expiration'
> |
> |	The number of SECONDS you want the session to last.
> |	Setting to 0 (zero) means expire when the browser is closed.
> |
> | 'sess_save_path'
> |
> |	The location to save sessions to, driver dependent.
> |
> |	For the 'files' driver, it's a path to a writable directory.
> |	WARNING: Only absolute paths are supported!
> |
> |	For the 'database' driver, it's a table name.
> |	Please read up the manual for the format with other session drivers.
> |
> |	IMPORTANT: You are REQUIRED to set a valid save path!
> |
> | 'sess_match_ip'
> |
> |	Whether to match the user's IP address when reading the session data.
> |
> |	WARNING: If you're using the database driver, don't forget to update
> |	         your session table's PRIMARY KEY when changing this setting.
> |
> | 'sess_time_to_update'
> |
> |	How many seconds between CI regenerating the session ID.
> |
> | 'sess_regenerate_destroy'
> |
> |	Whether to destroy session data associated with the old session ID
> |	when auto-regenerating the session ID. When set to FALSE, the data
> |	will be later deleted by the garbage collector.
> |
> | Other session cookie settings are shared with the rest of the application,
> | except for 'cookie_prefix' and 'cookie_httponly', which are ignored here.
> |
> */
> $config['sess_driver'] = 'database';
> $config['sess_cookie_name'] = 'ospos_session';
> $config['sess_expiration'] = 7200;
> $config['sess_save_path'] = 'sessions';
267,268c388,389
< $config['sess_match_useragent']	= FALSE; // TRUE
< $config['sess_time_to_update']	= 86400; // 300
---
> $config['sess_time_to_update'] = 300;
> $config['sess_regenerate_destroy'] = FALSE;
275c396
< | 'cookie_prefix' = Set a prefix if you need to avoid collisions
---
> | 'cookie_prefix'   = Set a cookie name prefix if you need to avoid collisions
278c399,403
< | 'cookie_secure' =  Cookies will only be set if a secure HTTPS connection exists.
---
> | 'cookie_secure'   = Cookie will only be set if a secure HTTPS connection exists.
> | 'cookie_httponly' = Cookie will only be accessible via HTTP(S) (no javascript)
> |
> | Note: These settings (with the exception of 'cookie_prefix' and
> |       'cookie_httponly') will also affect sessions.
281,283c406,408
< $config['cookie_prefix']	= "";
< $config['cookie_domain']	= "";
< $config['cookie_path']		= "/";
---
> $config['cookie_prefix']	= '';
> $config['cookie_domain']	= '';
> $config['cookie_path']		= '/';
284a410,424
> $config['cookie_httponly'] 	= FALSE;
> 
> /*
> |--------------------------------------------------------------------------
> | Standardize newlines
> |--------------------------------------------------------------------------
> |
> | Determines whether to standardize newline characters in input data,
> | meaning to replace \r\n, \r, \n occurrences with the PHP_EOL value.
> |
> | This is particularly useful for portability between UNIX-based OSes,
> | (usually \n) and Windows (\r\n).
> |
> */
> $config['standardize_newlines'] = FALSE;
293a434,436
> | WARNING: This feature is DEPRECATED and currently available only
> |          for backwards compatibility purposes!
> |
307a451,452
> | 'csrf_regenerate' = Regenerate token on every submission
> | 'csrf_exclude_uris' = Array of URIs which ignore CSRF checks
310,311c455,456
< $config['csrf_token_name'] = 'csrf_test_name';
< $config['csrf_cookie_name'] = 'csrf_cookie_name';
---
> $config['csrf_token_name'] = 'csrf_ospos_v24';
> $config['csrf_cookie_name'] = 'csrf_cookie_ospos_v24';
312a458,459
> $config['csrf_regenerate'] = TRUE;
> $config['csrf_exclude_uris'] = array();
323a471,473
> | Only used if zlib.output_compression is turned off in your php.ini.
> | Please do not use it together with httpd-level output compression.
> |
338,341c488,491
< | Options are 'local' or 'gmt'.  This pref tells the system whether to use
< | your server's local time as the master 'now' reference, or convert it to
< | GMT.  See the 'date helper' page of the user guide for information
< | regarding date handling.
---
> | Options are 'local' or any PHP supported timezone. This preference tells
> | the system whether to use your server's local time as the master 'now'
> | reference, or convert it to the configured one timezone. See the 'date
> | helper' page of the user guide for information regarding date handling.
355a505,506
> | Note: You need to have eval() enabled for this to work.
> |
365,368c515,521
< | If your server is behind a reverse proxy, you must whitelist the proxy IP
< | addresses from which CodeIgniter should trust the HTTP_X_FORWARDED_FOR
< | header in order to properly identify the visitor's IP address.
< | Comma-delimited, e.g. '10.0.1.200,10.0.1.201'
---
> | If your server is behind a reverse proxy, you must whitelist the proxy
> | IP addresses from which CodeIgniter should trust headers such as
> | HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify
> | the visitor's IP address.
> |
> | You can use both an array or a comma-separated list of proxy addresses,
> | as well as specifying whole subnets. Here are a few examples:
369a523,524
> | Comma-separated:	'10.0.1.200,192.168.5.0/24'
> | Array:		array('10.0.1.200', '192.168.5.0/24')
372,375d526
< 
< 
< /* End of file config.php */
< /* Location: ./application/config/config.php */
diff -rBwi --ignore-file-name-case pos-prod/application/config/constants.php opensourcepos/application/config/constants.php
1c1,14
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
> /*
> |--------------------------------------------------------------------------
> | Display Debug backtrace
> |--------------------------------------------------------------------------
> |
> | If set to TRUE, a backtrace will be displayed along with php errors. If
> | error_reporting is disabled, the backtrace will not display, regardless
> | of this setting
> |
> */
> defined('SHOW_DEBUG_BACKTRACE') OR define('SHOW_DEBUG_BACKTRACE', TRUE);
16,19c29,32
< define('FILE_READ_MODE', 0644);
< define('FILE_WRITE_MODE', 0666);
< define('DIR_READ_MODE', 0755);
< define('DIR_WRITE_MODE', 0777);
---
> defined('FILE_READ_MODE')  OR define('FILE_READ_MODE', 0644);
> defined('FILE_WRITE_MODE') OR define('FILE_WRITE_MODE', 0666);
> defined('DIR_READ_MODE')   OR define('DIR_READ_MODE', 0755);
> defined('DIR_WRITE_MODE')  OR define('DIR_WRITE_MODE', 0755);
28a42,49
> defined('FOPEN_READ')                           OR define('FOPEN_READ', 'rb');
> defined('FOPEN_READ_WRITE')                     OR define('FOPEN_READ_WRITE', 'r+b');
> defined('FOPEN_WRITE_CREATE_DESTRUCTIVE')       OR define('FOPEN_WRITE_CREATE_DESTRUCTIVE', 'wb'); // truncates existing file data, use with care
> defined('FOPEN_READ_WRITE_CREATE_DESCTRUCTIVE') OR define('FOPEN_READ_WRITE_CREATE_DESTRUCTIVE', 'w+b'); // truncates existing file data, use with care
> defined('FOPEN_WRITE_CREATE')                   OR define('FOPEN_WRITE_CREATE', 'ab');
> defined('FOPEN_READ_WRITE_CREATE')              OR define('FOPEN_READ_WRITE_CREATE', 'a+b');
> defined('FOPEN_WRITE_CREATE_STRICT')            OR define('FOPEN_WRITE_CREATE_STRICT', 'xb');
> defined('FOPEN_READ_WRITE_CREATE_STRICT')       OR define('FOPEN_READ_WRITE_CREATE_STRICT', 'x+b');
30,38c51,85
< define('FOPEN_READ',							'rb');
< define('FOPEN_READ_WRITE',						'r+b');
< define('FOPEN_WRITE_CREATE_DESTRUCTIVE',		'wb'); // truncates existing file data, use with care
< define('FOPEN_READ_WRITE_CREATE_DESTRUCTIVE',	'w+b'); // truncates existing file data, use with care
< define('FOPEN_WRITE_CREATE',					'ab');
< define('FOPEN_READ_WRITE_CREATE',				'a+b');
< define('FOPEN_WRITE_CREATE_STRICT',				'xb');
< define('FOPEN_READ_WRITE_CREATE_STRICT',		'x+b');
< 
---
> /*
> |--------------------------------------------------------------------------
> | Exit Status Codes
> |--------------------------------------------------------------------------
> |
> | Used to indicate the conditions under which the script is exit()ing.
> | While there is no universal standard for error codes, there are some
> | broad conventions.  Three such conventions are mentioned below, for
> | those who wish to make use of them.  The CodeIgniter defaults were
> | chosen for the least overlap with these conventions, while still
> | leaving room for others to be defined in future versions and user
> | applications.
> |
> | The three main conventions used for determining exit status codes
> | are as follows:
> |
> |    Standard C/C++ Library (stdlibc):
> |       http://www.gnu.org/software/libc/manual/html_node/Exit-Status.html
> |       (This link also contains other GNU-specific conventions)
> |    BSD sysexits.h:
> |       http://www.gsp.com/cgi-bin/man.cgi?section=3&topic=sysexits
> |    Bash scripting:
> |       http://tldp.org/LDP/abs/html/exitcodes.html
> |
> */
> defined('EXIT_SUCCESS')        OR define('EXIT_SUCCESS', 0); // no errors
> defined('EXIT_ERROR')          OR define('EXIT_ERROR', 1); // generic error
> defined('EXIT_CONFIG')         OR define('EXIT_CONFIG', 3); // configuration error
> defined('EXIT_UNKNOWN_FILE')   OR define('EXIT_UNKNOWN_FILE', 4); // file not found
> defined('EXIT_UNKNOWN_CLASS')  OR define('EXIT_UNKNOWN_CLASS', 5); // unknown class
> defined('EXIT_UNKNOWN_METHOD') OR define('EXIT_UNKNOWN_METHOD', 6); // unknown class member
> defined('EXIT_USER_INPUT')     OR define('EXIT_USER_INPUT', 7); // invalid user input
> defined('EXIT_DATABASE')       OR define('EXIT_DATABASE', 8); // database error
> defined('EXIT__AUTO_MIN')      OR define('EXIT__AUTO_MIN', 9); // lowest automatically-assigned error code
> defined('EXIT__AUTO_MAX')      OR define('EXIT__AUTO_MAX', 125); // highest automatically-assigned error code
40,41c87,90
< /* End of file constants.php */
< /* Location: ./application/config/constants.php */
\ No newline at end of file
---
> /*
>  | Precision for calculations performed on decimals 
>  */
> define("PRECISION", 5);
Only in pos-prod/application/config: database.php
diff -rBwi --ignore-file-name-case pos-prod/application/config/database.php.tmpl opensourcepos/application/config/database.php.tmpl
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
14a17
> |	['dsn']      The full DSN string describe a connection to the database.
19,20c22,25
< |	['dbdriver'] The database type. ie: mysql.  Currently supported:
< 				 mysql, mysqli, postgre, odbc, mssql, sqlite, oci8
---
> |	['dbdriver'] The database driver. e.g.: mysqli.
> |			Currently supported:
> |				 cubrid, ibase, mssql, mysql, mysqli, oci8,
> |				 odbc, pdo, postgre, sqlite, sqlite3, sqlsrv
22c27
< |				 to the table name when using the  Active Record class
---
> |				 to the table name when using the  Query Builder class
37c42,54
< |	['autoinit'] Whether or not to automatically initialize the database.
---
> |	['encrypt']  Whether or not to use an encrypted connection.
> |
> |			'mysql' (deprecated), 'sqlsrv' and 'pdo/sqlsrv' drivers accept TRUE/FALSE
> |			'mysqli' and 'pdo/mysql' drivers accept an array with the following options:
> |
> |				'ssl_key'    - Path to the private key file
> |				'ssl_cert'   - Path to the public key certificate file
> |				'ssl_ca'     - Path to the certificate authority file
> |				'ssl_capath' - Path to a directory containing trusted CA certificats in PEM format
> |				'ssl_cipher' - List of *allowed* ciphers to be used for the encryption, separated by colons (':')
> |				'ssl_verify' - TRUE/FALSE; Whether verify the server certificate or not ('mysqli' only)
> |
> |	['compress'] Whether or not to use client compression (MySQL only)
39a57,65
> |	['ssl_options']	Used to set various SSL options that can be used when making SSL connections.
> |	['failover'] array - A array with 0 or more data for connections if the main should fail.
> |	['save_queries'] TRUE/FALSE - Whether to "save" all executed queries.
> | 				NOTE: Disabling this will also effectively disable both
> | 				$this->db->last_query() and profiling of DB queries.
> | 				When you run a query, with this setting set to TRUE (default),
> | 				CodeIgniter will store the SQL statement for debugging purposes.
> | 				However, this may cause high memory usage, especially if you run
> | 				a lot of SQL queries ... disable this to avoid that problem.
44,45c70,71
< | The $active_record variables lets you determine whether or not to load
< | the active record class
---
> | The $query_builder variables lets you determine whether or not to load
> | the query builder class.
49,66c74
< $active_record = TRUE;
< 
< $db['default']['hostname'] = 'localhost';
< $db['default']['username'] = '';
< $db['default']['password'] = '';
< $db['default']['database'] = '';
< $db['default']['dbdriver'] = 'mysql';
< $db['default']['dbprefix'] = 'ospos_';
< $db['default']['pconnect'] = FALSE;
< $db['default']['db_debug'] = TRUE;
< $db['default']['cache_on'] = FALSE;
< $db['default']['cachedir'] = '';
< $db['default']['char_set'] = 'utf8';
< $db['default']['dbcollat'] = 'utf8_general_ci';
< $db['default']['swap_pre'] = '';
< $db['default']['autoinit'] = TRUE;
< $db['default']['stricton'] = FALSE;
< 
---
> $query_builder = TRUE;
68,69c76,96
< /* End of file database.php */
< /* Location: ./application/config/database.php */
\ No newline at end of file
---
> $db['default'] = array(
> 	'dsn'	=> '',
> 	'hostname' => 'localhost',
> 	'username' => '',
> 	'password' => '',
> 	'database' => '',
> 	'dbdriver' => 'mysqli',
> 	'dbprefix' => 'ospos_',
> 	'pconnect' => FALSE,
> 	'db_debug' => (ENVIRONMENT !== 'production'),
> 	'cache_on' => FALSE,
> 	'cachedir' => '',
> 	'char_set' => 'utf8',
> 	'dbcollat' => 'utf8_general_ci',
> 	'swap_pre' => '',
> 	'encrypt' => FALSE,
> 	'compress' => FALSE,
> 	'stricton' => FALSE,
> 	'failover' => array(),
> 	'save_queries' => TRUE
> );
diff -rBwi --ignore-file-name-case pos-prod/application/config/doctypes.php opensourcepos/application/config/doctypes.php
1c1,2
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
7a9
> 	'xhtml-basic11' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
11c13,23
< 					'html4-frame'	=> '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">'
---
> 	'html4-frame' => '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">',
> 	'mathml1' => '<!DOCTYPE math SYSTEM "http://www.w3.org/Math/DTD/mathml1/mathml.dtd">',
> 	'mathml2' => '<!DOCTYPE math PUBLIC "-//W3C//DTD MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/mathml2.dtd">',
> 	'svg10' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">',
> 	'svg11' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',
> 	'svg11-basic' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Basic//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-basic.dtd">',
> 	'svg11-tiny' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Tiny//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-tiny.dtd">',
> 	'xhtml-math-svg-xh' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">',
> 	'xhtml-math-svg-sh' => '<!DOCTYPE svg:svg PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">',
> 	'xhtml-rdfa-1' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">',
> 	'xhtml-rdfa-2' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.1//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd">'
13,15d24
< 
< /* End of file doctypes.php */
< /* Location: ./application/config/doctypes.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/foreign_chars.php opensourcepos/application/config/foreign_chars.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
17,18c19,22
< 	'/À|Á|Â|Ã|Ä|Å|Ǻ|Ā|Ă|Ą|Ǎ/' => 'A',
< 	'/à|á|â|ã|å|ǻ|ā|ă|ą|ǎ|ª/' => 'a',
---
> 	'/À|Á|Â|Ã|Ä|Å|Ǻ|Ā|Ă|Ą|Ǎ|Α|Ά|Ả|Ạ|Ầ|Ẫ|Ẩ|Ậ|Ằ|Ắ|Ẵ|Ẳ|Ặ|А/' => 'A',
> 	'/à|á|â|ã|å|ǻ|ā|ă|ą|ǎ|ª|α|ά|ả|ạ|ầ|ấ|ẫ|ẩ|ậ|ằ|ắ|ẵ|ẳ|ặ|а/' => 'a',
> 	'/Б/' => 'B',
> 	'/б/' => 'b',
21,26c25,34
< 	'/Ð|Ď|Đ/' => 'D',
< 	'/ð|ď|đ/' => 'd',
< 	'/È|É|Ê|Ë|Ē|Ĕ|Ė|Ę|Ě/' => 'E',
< 	'/è|é|ê|ë|ē|ĕ|ė|ę|ě/' => 'e',
< 	'/Ĝ|Ğ|Ġ|Ģ/' => 'G',
< 	'/ĝ|ğ|ġ|ģ/' => 'g',
---
> 	'/Д/' => 'D',
> 	'/д/' => 'd',
> 	'/Ð|Ď|Đ|Δ/' => 'Dj',
> 	'/ð|ď|đ|δ/' => 'dj',
> 	'/È|É|Ê|Ë|Ē|Ĕ|Ė|Ę|Ě|Ε|Έ|Ẽ|Ẻ|Ẹ|Ề|Ế|Ễ|Ể|Ệ|Е|Э/' => 'E',
> 	'/è|é|ê|ë|ē|ĕ|ė|ę|ě|έ|ε|ẽ|ẻ|ẹ|ề|ế|ễ|ể|ệ|е|э/' => 'e',
> 	'/Ф/' => 'F',
> 	'/ф/' => 'f',
> 	'/Ĝ|Ğ|Ġ|Ģ|Γ|Г|Ґ/' => 'G',
> 	'/ĝ|ğ|ġ|ģ|γ|г|ґ/' => 'g',
29,30c37,38
< 	'/Ì|Í|Î|Ï|Ĩ|Ī|Ĭ|Ǐ|Į|İ/' => 'I',
< 	'/ì|í|î|ï|ĩ|ī|ĭ|ǐ|į|ı/' => 'i',
---
> 	'/Ì|Í|Î|Ï|Ĩ|Ī|Ĭ|Ǐ|Į|İ|Η|Ή|Ί|Ι|Ϊ|Ỉ|Ị|И|Ы/' => 'I',
> 	'/ì|í|î|ï|ĩ|ī|ĭ|ǐ|į|ı|η|ή|ί|ι|ϊ|ỉ|ị|и|ы|ї/' => 'i',
33,50c41,65
< 	'/Ķ/' => 'K',
< 	'/ķ/' => 'k',
< 	'/Ĺ|Ļ|Ľ|Ŀ|Ł/' => 'L',
< 	'/ĺ|ļ|ľ|ŀ|ł/' => 'l',
< 	'/Ñ|Ń|Ņ|Ň/' => 'N',
< 	'/ñ|ń|ņ|ň|ŉ/' => 'n',
< 	'/Ò|Ó|Ô|Õ|Ō|Ŏ|Ǒ|Ő|Ơ|Ø|Ǿ/' => 'O',
< 	'/ò|ó|ô|õ|ō|ŏ|ǒ|ő|ơ|ø|ǿ|º/' => 'o',
< 	'/Ŕ|Ŗ|Ř/' => 'R',
< 	'/ŕ|ŗ|ř/' => 'r',
< 	'/Ś|Ŝ|Ş|Š/' => 'S',
< 	'/ś|ŝ|ş|š|ſ/' => 's',
< 	'/Ţ|Ť|Ŧ/' => 'T',
< 	'/ţ|ť|ŧ/' => 't',
< 	'/Ù|Ú|Û|Ũ|Ū|Ŭ|Ů|Ű|Ų|Ư|Ǔ|Ǖ|Ǘ|Ǚ|Ǜ/' => 'U',
< 	'/ù|ú|û|ũ|ū|ŭ|ů|ű|ų|ư|ǔ|ǖ|ǘ|ǚ|ǜ/' => 'u',
< 	'/Ý|Ÿ|Ŷ/' => 'Y',
< 	'/ý|ÿ|ŷ/' => 'y',
---
> 	'/Ķ|Κ|К/' => 'K',
> 	'/ķ|κ|к/' => 'k',
> 	'/Ĺ|Ļ|Ľ|Ŀ|Ł|Λ|Л/' => 'L',
> 	'/ĺ|ļ|ľ|ŀ|ł|λ|л/' => 'l',
> 	'/М/' => 'M',
> 	'/м/' => 'm',
> 	'/Ñ|Ń|Ņ|Ň|Ν|Н/' => 'N',
> 	'/ñ|ń|ņ|ň|ŉ|ν|н/' => 'n',
> 	'/Ò|Ó|Ô|Õ|Ō|Ŏ|Ǒ|Ő|Ơ|Ø|Ǿ|Ο|Ό|Ω|Ώ|Ỏ|Ọ|Ồ|Ố|Ỗ|Ổ|Ộ|Ờ|Ớ|Ỡ|Ở|Ợ|О/' => 'O',
> 	'/ò|ó|ô|õ|ō|ŏ|ǒ|ő|ơ|ø|ǿ|º|ο|ό|ω|ώ|ỏ|ọ|ồ|ố|ỗ|ổ|ộ|ờ|ớ|ỡ|ở|ợ|о/' => 'o',
> 	'/П/' => 'P',
> 	'/п/' => 'p',
> 	'/Ŕ|Ŗ|Ř|Ρ|Р/' => 'R',
> 	'/ŕ|ŗ|ř|ρ|р/' => 'r',
> 	'/Ś|Ŝ|Ş|Ș|Š|Σ|С/' => 'S',
> 	'/ś|ŝ|ş|ș|š|ſ|σ|ς|с/' => 's',
> 	'/Ț|Ţ|Ť|Ŧ|τ|Т/' => 'T',
> 	'/ț|ţ|ť|ŧ|т/' => 't',
> 	'/Þ|þ/' => 'th',
> 	'/Ù|Ú|Û|Ũ|Ū|Ŭ|Ů|Ű|Ų|Ư|Ǔ|Ǖ|Ǘ|Ǚ|Ǜ|Ũ|Ủ|Ụ|Ừ|Ứ|Ữ|Ử|Ự|У/' => 'U',
> 	'/ù|ú|û|ũ|ū|ŭ|ů|ű|ų|ư|ǔ|ǖ|ǘ|ǚ|ǜ|υ|ύ|ϋ|ủ|ụ|ừ|ứ|ữ|ử|ự|у/' => 'u',
> 	'/Ý|Ÿ|Ŷ|Υ|Ύ|Ϋ|Ỳ|Ỹ|Ỷ|Ỵ|Й/' => 'Y',
> 	'/ý|ÿ|ŷ|ỳ|ỹ|ỷ|ỵ|й/' => 'y',
> 	'/В/' => 'V',
> 	'/в/' => 'v',
53,54c68,69
< 	'/Ź|Ż|Ž/' => 'Z',
< 	'/ź|ż|ž/' => 'z',
---
> 	'/Ź|Ż|Ž|Ζ|З/' => 'Z',
> 	'/ź|ż|ž|ζ|з/' => 'z',
60c75,102
< 	'/ƒ/' => 'f'
---
> 	'/ƒ/' => 'f',
> 	'/ξ/' => 'ks',
> 	'/π/' => 'p',
> 	'/β/' => 'v',
> 	'/μ/' => 'm',
> 	'/ψ/' => 'ps',
> 	'/Ё/' => 'Yo',
> 	'/ё/' => 'yo',
> 	'/Є/' => 'Ye',
> 	'/є/' => 'ye',
> 	'/Ї/' => 'Yi',
> 	'/Ж/' => 'Zh',
> 	'/ж/' => 'zh',
> 	'/Х/' => 'Kh',
> 	'/х/' => 'kh',
> 	'/Ц/' => 'Ts',
> 	'/ц/' => 'ts',
> 	'/Ч/' => 'Ch',
> 	'/ч/' => 'ch',
> 	'/Ш/' => 'Sh',
> 	'/ш/' => 'sh',
> 	'/Щ/' => 'Shch',
> 	'/щ/' => 'shch',
> 	'/Ъ|ъ|Ь|ь/' => '',
> 	'/Ю/' => 'Yu',
> 	'/ю/' => 'yu',
> 	'/Я/' => 'Ya',
> 	'/я/' => 'ya'
62,64d103
< 
< /* End of file foreign_chars.php */
< /* Location: ./application/config/foreign_chars.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/hooks.php opensourcepos/application/config/hooks.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
9c11
< |	http://codeigniter.com/user_guide/general/hooks.html
---
> |	https://codeigniter.com/user_guide/general/hooks.html
18,21d19
< 
< 
< /* End of file hooks.php */
< /* Location: ./application/config/hooks.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/index.html opensourcepos/application/config/index.html
0a1
> <!DOCTYPE html>
Only in opensourcepos/application/config: memcached.php
diff -rBwi --ignore-file-name-case pos-prod/application/config/migration.php opensourcepos/application/config/migration.php
1c1,3
< <?php defined('BASEPATH') OR exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
7,8c9,11
< | Migrations are disabled by default but should be enabled 
< | whenever you intend to do a schema migration.
---
> | Migrations are disabled by default for security reasons.
> | You should enable migrations whenever you intend to do a schema migration
> | and disable it back when you're done.
12a16,60
> /*
> |--------------------------------------------------------------------------
> | Migration Type
> |--------------------------------------------------------------------------
> |
> | Migration file names may be based on a sequential identifier or on
> | a timestamp. Options are:
> |
> |   'sequential' = Sequential migration naming (001_add_blog.php)
> |   'timestamp'  = Timestamp migration naming (20121031104401_add_blog.php)
> |                  Use timestamp format YYYYMMDDHHIISS.
> |
> | Note: If this configuration value is missing the Migration library
> |       defaults to 'sequential' for backward compatibility with CI2.
> |
> */
> $config['migration_type'] = 'timestamp';
> 
> /*
> |--------------------------------------------------------------------------
> | Migrations table
> |--------------------------------------------------------------------------
> |
> | This is the name of the table that will store the current migrations state.
> | When migrations runs it will store in a database table which migration
> | level the system is at. It then compares the migration level in this
> | table to the $config['migration_version'] if they are not the same it
> | will migrate up. This must be set.
> |
> */
> $config['migration_table'] = 'migrations';
> 
> /*
> |--------------------------------------------------------------------------
> | Auto Migrate To Latest
> |--------------------------------------------------------------------------
> |
> | If this is set to TRUE when you load the migrations class and have
> | $config['migration_enabled'] set to TRUE the system will auto migrate
> | to your latest migration (whatever $config['migration_version'] is
> | set to). This way you do not have to call migrations anywhere else
> | in your code to have the latest migration.
> |
> */
> $config['migration_auto_latest'] = FALSE;
20c68
< | If you run $this->migration->latest() this is the version that schema will
---
> | If you run $this->migration->current() this is the version that schema will
38,40d84
< 
< 
< /* End of file migration.php */
diff -rBwi --ignore-file-name-case pos-prod/application/config/mimes.php opensourcepos/application/config/mimes.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
10,11c12,13
< 
< $mimes = array(	'hqx'	=>	'application/mac-binhex40',
---
> return array(
> 	'hqx'	=>	array('application/mac-binhex40', 'application/mac-binhex', 'application/x-binhex40', 'application/x-mac-binhex40'),
13,14c15,16
< 				'csv'	=>	array('text/x-comma-separated-values', 'text/comma-separated-values', 'application/octet-stream', 'application/vnd.ms-excel', 'application/x-csv', 'text/x-csv', 'text/csv', 'application/csv', 'application/excel', 'application/vnd.msexcel'),
< 				'bin'	=>	'application/macbinary',
---
> 	'csv'	=>	array('text/x-comma-separated-values', 'text/comma-separated-values', 'application/octet-stream', 'application/vnd.ms-excel', 'application/x-csv', 'text/x-csv', 'text/csv', 'application/csv', 'application/excel', 'application/vnd.msexcel', 'text/plain'),
> 	'bin'	=>	array('application/macbinary', 'application/mac-binary', 'application/octet-stream', 'application/x-binary', 'application/x-macbinary'),
20c22
< 				'psd'	=>	'application/x-photoshop',
---
> 	'psd'	=>	array('application/x-photoshop', 'image/vnd.adobe.photoshop'),
25,26c27,28
< 				'pdf'	=>	array('application/pdf', 'application/x-download'),
< 				'ai'	=>	'application/postscript',
---
> 	'pdf'	=>	array('application/pdf', 'application/force-download', 'application/x-download', 'binary/octet-stream'),
> 	'ai'	=>	array('application/pdf', 'application/postscript'),
32,33c34,36
< 				'xls'	=>	array('application/excel', 'application/vnd.ms-excel', 'application/msexcel'),
< 				'ppt'	=>	array('application/powerpoint', 'application/vnd.ms-powerpoint'),
---
> 	'xls'	=>	array('application/vnd.ms-excel', 'application/msexcel', 'application/x-msexcel', 'application/x-ms-excel', 'application/x-excel', 'application/x-dos_ms_excel', 'application/xls', 'application/x-xls', 'application/excel', 'application/download', 'application/vnd.ms-office', 'application/msword'),
> 	'ppt'	=>	array('application/powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-office', 'application/msword'),
> 	'pptx'	=> 	array('application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/x-zip', 'application/zip'),
42c45,46
< 				'php'	=>	'application/x-httpd-php',
---
> 	'gzip'  =>	'application/x-gzip',
> 	'php'	=>	array('application/x-httpd-php', 'application/php', 'application/x-php', 'text/php', 'text/x-php', 'application/x-httpd-php-source'),
47c51
< 				'js'	=>	'application/x-javascript',
---
> 	'js'	=>	array('application/x-javascript', 'text/plain'),
51a56
> 	'z'	=>	'application/x-compress',
54c59,60
< 				'zip'	=>  array('application/x-zip', 'application/zip', 'application/x-zip-compressed'),
---
> 	'zip'	=>	array('application/x-zip', 'application/zip', 'application/x-zip-compressed', 'application/s-compressed', 'multipart/x-zip'),
> 	'rar'	=>	array('application/x-rar', 'application/rar', 'application/x-rar-compressed'),
60,61c66,67
< 				'aif'	=>	'audio/x-aiff',
< 				'aiff'	=>	'audio/x-aiff',
---
> 	'aif'	=>	array('audio/x-aiff', 'audio/aiff'),
> 	'aiff'	=>	array('audio/x-aiff', 'audio/aiff'),
69c75
< 				'bmp'	=>	array('image/bmp', 'image/x-windows-bmp'),
---
> 	'bmp'	=>	array('image/bmp', 'image/x-bmp', 'image/x-bitmap', 'image/x-xbitmap', 'image/x-win-bitmap', 'image/x-windows-bmp', 'image/ms-bmp', 'image/x-ms-bmp', 'application/bmp', 'application/x-bmp', 'application/x-win-bitmap'),
73a80,87
> 	'jp2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'j2k'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'jpf'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'jpg2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'jpx'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'jpm'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'mj2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
> 	'mjp2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),
77,80c91,94
< 				'css'	=>	'text/css',
< 				'html'	=>	'text/html',
< 				'htm'	=>	'text/html',
< 				'shtml'	=>	'text/html',
---
> 	'css'	=>	array('text/css', 'text/plain'),
> 	'html'	=>	array('text/html', 'text/plain'),
> 	'htm'	=>	array('text/html', 'text/plain'),
> 	'shtml'	=>	array('text/html', 'text/plain'),
86,87c100,101
< 				'xml'	=>	'text/xml',
< 				'xsl'	=>	'text/xml',
---
> 	'xml'	=>	array('application/xml', 'text/xml', 'text/plain'),
> 	'xsl'	=>	array('application/xml', 'text/xsl', 'text/xml'),
93c107
< 				'avi'	=>	'video/x-msvideo',
---
> 	'avi'	=>	array('video/x-msvideo', 'video/msvideo', 'video/avi', 'application/x-troff-msvideo'),
95,97c109,113
< 				'doc'	=>	'application/msword',
< 				'docx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip'),
< 				'xlsx'	=>	array('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip'),
---
> 	'doc'	=>	array('application/msword', 'application/vnd.ms-office'),
> 	'docx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip', 'application/msword', 'application/x-zip'),
> 	'dot'	=>	array('application/msword', 'application/vnd.ms-office'),
> 	'dotx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip', 'application/msword'),
> 	'xlsx'	=>	array('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'application/vnd.ms-excel', 'application/msword', 'application/x-zip'),
101c117,166
< 				'json' => array('application/json', 'text/json')
---
> 	'json'  =>	array('application/json', 'text/json'),
> 	'pem'   =>	array('application/x-x509-user-cert', 'application/x-pem-file', 'application/octet-stream'),
> 	'p10'   =>	array('application/x-pkcs10', 'application/pkcs10'),
> 	'p12'   =>	'application/x-pkcs12',
> 	'p7a'   =>	'application/x-pkcs7-signature',
> 	'p7c'   =>	array('application/pkcs7-mime', 'application/x-pkcs7-mime'),
> 	'p7m'   =>	array('application/pkcs7-mime', 'application/x-pkcs7-mime'),
> 	'p7r'   =>	'application/x-pkcs7-certreqresp',
> 	'p7s'   =>	'application/pkcs7-signature',
> 	'crt'   =>	array('application/x-x509-ca-cert', 'application/x-x509-user-cert', 'application/pkix-cert'),
> 	'crl'   =>	array('application/pkix-crl', 'application/pkcs-crl'),
> 	'der'   =>	'application/x-x509-ca-cert',
> 	'kdb'   =>	'application/octet-stream',
> 	'pgp'   =>	'application/pgp',
> 	'gpg'   =>	'application/gpg-keys',
> 	'sst'   =>	'application/octet-stream',
> 	'csr'   =>	'application/octet-stream',
> 	'rsa'   =>	'application/x-pkcs7',
> 	'cer'   =>	array('application/pkix-cert', 'application/x-x509-ca-cert'),
> 	'3g2'   =>	'video/3gpp2',
> 	'3gp'   =>	array('video/3gp', 'video/3gpp'),
> 	'mp4'   =>	'video/mp4',
> 	'm4a'   =>	'audio/x-m4a',
> 	'f4v'   =>	array('video/mp4', 'video/x-f4v'),
> 	'flv'	=>	'video/x-flv',
> 	'webm'	=>	'video/webm',
> 	'aac'   =>	'audio/x-acc',
> 	'm4u'   =>	'application/vnd.mpegurl',
> 	'm3u'   =>	'text/plain',
> 	'xspf'  =>	'application/xspf+xml',
> 	'vlc'   =>	'application/videolan',
> 	'wmv'   =>	array('video/x-ms-wmv', 'video/x-ms-asf'),
> 	'au'    =>	'audio/x-au',
> 	'ac3'   =>	'audio/ac3',
> 	'flac'  =>	'audio/x-flac',
> 	'ogg'   =>	array('audio/ogg', 'video/ogg', 'application/ogg'),
> 	'kmz'	=>	array('application/vnd.google-earth.kmz', 'application/zip', 'application/x-zip'),
> 	'kml'	=>	array('application/vnd.google-earth.kml+xml', 'application/xml', 'text/xml'),
> 	'ics'	=>	'text/calendar',
> 	'ical'	=>	'text/calendar',
> 	'zsh'	=>	'text/x-scriptzsh',
> 	'7zip'	=>	array('application/x-compressed', 'application/x-zip-compressed', 'application/zip', 'multipart/x-zip'),
> 	'cdr'	=>	array('application/cdr', 'application/coreldraw', 'application/x-cdr', 'application/x-coreldraw', 'image/cdr', 'image/x-cdr', 'zz-application/zz-winassoc-cdr'),
> 	'wma'	=>	array('audio/x-ms-wma', 'video/x-ms-asf'),
> 	'jar'	=>	array('application/java-archive', 'application/x-java-application', 'application/x-jar', 'application/x-compressed'),
> 	'svg'	=>	array('image/svg+xml', 'application/xml', 'text/xml'),
> 	'vcf'	=>	'text/x-vcard',
> 	'srt'	=>	array('text/srt', 'text/plain'),
> 	'vtt'	=>	array('text/vtt', 'text/plain'),
> 	'ico'	=>	array('image/x-icon', 'image/x-ico', 'image/vnd.microsoft.icon')
103,106d167
< 
< 
< /* End of file mimes.php */
< /* Location: ./application/config/mimes.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/profiler.php opensourcepos/application/config/profiler.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
10c12
< |	http://codeigniter.com/user_guide/general/profiling.html
---
> |	https://codeigniter.com/user_guide/general/profiling.html
13,17d14
< 
< 
< 
< /* End of file profiler.php */
< /* Location: ./application/config/profiler.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/routes.php opensourcepos/application/config/routes.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
20c22
< |	http://codeigniter.com/user_guide/general/routing.html
---
> |	https://codeigniter.com/user_guide/general/routing.html
26c28
< | There area two reserved routes:
---
> | There are three reserved routes:
36,37c38,47
< | This route will tell the Router what URI segments to use if those provided
< | in the URL cannot be matched to a valid route.
---
> | This route will tell the Router which controller/method to use if those
> | provided in the URL cannot be matched to a valid route.
> |
> |	$route['translate_uri_dashes'] = FALSE;
> |
> | This is not exactly a route, but allows you to automatically route
> | controller and method names that contain dashes. '-' isn't a valid
> | class or method name character, so it requires translation.
> | When you set this option to TRUE, it will replace ALL dashes in the
> | controller and method URI segments.
38a49,50
> | Examples:	my-controller/index	-> my_controller/index
> |		my-controller/my-method	-> my_controller/my_method
41,59c53,66
< $route['default_controller'] = "login";
< $route['no_access/(:any)'] = "no_access/index/$1";
< $route['reports/(summary_:any)/(:any)/(:any)'] = "reports/$1/$2/$3";
< $route['reports/summary_:any'] = "reports/date_input_excel_export";
< $route['reports/(graphical_:any)/(:any)/(:any)'] = "reports/$1/$2/$3";
< $route['reports/graphical_:any'] = "reports/date_input";
< $route['reports/(inventory_:any)/(:any)'] = "reports/$1/$2";
< $route['reports/inventory_:any'] = "reports/excel_export";
< 
< $route['reports/(detailed_sales)/(:any)/(:any)'] = "reports/$1/$2/$3";
< $route['reports/detailed_sales'] = "reports/date_input";
< $route['reports/(detailed_receivings)/(:any)/(:any)'] = "reports/$1/$2/$3";
< $route['reports/detailed_receivings'] = "reports/date_input_recv";
< $route['reports/(specific_:any)/(:any)/(:any)/(:any)'] = "reports/$1/$2/$3/$4";
< $route['reports/specific_customer'] = "reports/specific_customer_input";
< $route['reports/specific_employee'] = "reports/specific_employee_input";
< $route['reports/specific_discount'] = "reports/specific_discount_input";
< 
< $route['scaffolding_trigger'] = "";
---
> $route['default_controller'] = 'login';
> $route['no_access/([^/]+)'] = 'no_access/index/$1';
> $route['no_access/([^/]+)/([^/]+)'] = 'no_access/index/$1/$2';
> $route['sales/index/([^/]+)'] = 'sales/manage/$1';
> $route['sales/index/([^/]+)/([^/]+)'] = 'sales/manage/$1/$2';
> $route['sales/index/([^/]+)/([^/]+)/([^/]+)'] = 'sales/manage/$1/$2/$3';
> $route['reports/(summary_:any)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3';
> $route['reports/summary_:any'] = 'reports/date_input_excel_export';
> $route['reports/(graphical_:any)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3';
> $route['reports/graphical_:any'] = 'reports/date_input';
> $route['reports/(inventory_:any)/([^/]+)'] = 'reports/$1/$2';
> $route['reports/inventory_:any'] = 'reports/excel_export';
> $route['reports/inventory_summary'] = 'reports/inventory_summary_input';
> $route['reports/(inventory_summary)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3/$4';
61c68,75
< $route['404_override'] = 'errors/page_missing';
---
> $route['reports/(detailed_sales)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3$/$4';
> $route['reports/detailed_sales'] = 'reports/date_input_sales';
> $route['reports/(detailed_receivings)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3/$4';
> $route['reports/detailed_receivings'] = 'reports/date_input_recv';
> $route['reports/(specific_:any)/([^/]+)/([^/]+)/([^/]+)'] = 'reports/$1/$2/$3/$4';
> $route['reports/specific_customer'] = 'reports/specific_customer_input';
> $route['reports/specific_employee'] = 'reports/specific_employee_input';
> $route['reports/specific_discount'] = 'reports/specific_discount_input';
63,64c77,78
< /* End of file routes.php */
< /* Location: ./application/config/routes.php */
\ No newline at end of file
---
> $route['404_override'] = '';
> $route['translate_uri_dashes'] = FALSE;
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/smileys.php opensourcepos/application/config/smileys.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
7c9
< | Individual images can be used to replace multiple simileys.  For example:
---
> | Individual images can be used to replace multiple smileys.  For example:
11c13
< | http://codeigniter.com/user_guide/helpers/smiley_helper.html
---
> | https://codeigniter.com/user_guide/helpers/smiley_helper.html
60,61c61,62
< 	':exclaim:'		=>	array('exclaim.gif',		'19',	'19',	'excaim'),
< 	':question:'	=>	array('question.gif',		'19',	'19',	'question') // no comma after last item
---
> 	':exclaim:'		=>	array('exclaim.gif',		'19',	'19',	'exclaim'),
> 	':question:'	=>	array('question.gif',		'19',	'19',	'question')
64,66d64
< 
< /* End of file smileys.php */
< /* Location: ./application/config/smileys.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/config/user_agents.php opensourcepos/application/config/user_agents.php
1c1,3
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
10d11
< |
14c14,18
< 					'windows nt 6.0'	=> 'Windows Longhorn',
---
> 	'windows nt 10.0'	=> 'Windows 10',
> 	'windows nt 6.3'	=> 'Windows 8.1',
> 	'windows nt 6.2'	=> 'Windows 8',
> 	'windows nt 6.1'	=> 'Windows 7',
> 	'windows nt 6.0'	=> 'Windows Vista',
16d19
< 					'windows nt 5.0'	=> 'Windows 2000',
17a21
> 	'windows nt 5.0'	=> 'Windows 2000',
25a30
> 	'windows phone'			=> 'Windows Phone',
26a32,36
> 	'android'			=> 'Android',
> 	'blackberry'		=> 'BlackBerry',
> 	'iphone'			=> 'iOS',
> 	'ipad'				=> 'iOS',
> 	'ipod'				=> 'iOS',
44c54,55
< 					'unix'				=> 'Unknown Unix OS'
---
> 	'unix'				=> 'Unknown Unix OS',
> 	'symbian' 			=> 'Symbian OS'
50a62
> 	'OPR'			=> 'Opera',
51a64
> 	'Edge'			=> 'Spartan',
52a66,67
> 	// Opera 10+ always reports Opera/9.80 and appends Version/<real version> to the user agent string
> 	'Opera.*?Version'	=> 'Opera',
55a71
> 	'Trident.* rv'	=> 'Internet Explorer',
72c88,90
< 					'IBrowse'			=> 'IBrowse'
---
> 	'IBrowse'		=> 'IBrowse',
> 	'Maxthon'		=> 'Maxthon',
> 	'Ubuntu'		=> 'Ubuntu Web Browser'
93,126c111,152
< 					'motorola'			=> "Motorola",
< 					'nokia'				=> "Nokia",
< 					'palm'				=> "Palm",
< 					'iphone'			=> "Apple iPhone",
< 					'ipad'				=> "iPad",
< 					'ipod'				=> "Apple iPod Touch",
< 					'sony'				=> "Sony Ericsson",
< 					'ericsson'			=> "Sony Ericsson",
< 					'blackberry'		=> "BlackBerry",
< 					'cocoon'			=> "O2 Cocoon",
< 					'blazer'			=> "Treo",
< 					'lg'				=> "LG",
< 					'amoi'				=> "Amoi",
< 					'xda'				=> "XDA",
< 					'mda'				=> "MDA",
< 					'vario'				=> "Vario",
< 					'htc'				=> "HTC",
< 					'samsung'			=> "Samsung",
< 					'sharp'				=> "Sharp",
< 					'sie-'				=> "Siemens",
< 					'alcatel'			=> "Alcatel",
< 					'benq'				=> "BenQ",
< 					'ipaq'				=> "HP iPaq",
< 					'mot-'				=> "Motorola",
< 					'playstation portable'	=> "PlayStation Portable",
< 					'hiptop'			=> "Danger Hiptop",
< 					'nec-'				=> "NEC",
< 					'panasonic'			=> "Panasonic",
< 					'philips'			=> "Philips",
< 					'sagem'				=> "Sagem",
< 					'sanyo'				=> "Sanyo",
< 					'spv'				=> "SPV",
< 					'zte'				=> "ZTE",
< 					'sendo'				=> "Sendo",
---
> 	'motorola'		=> 'Motorola',
> 	'nokia'			=> 'Nokia',
> 	'palm'			=> 'Palm',
> 	'iphone'		=> 'Apple iPhone',
> 	'ipad'			=> 'iPad',
> 	'ipod'			=> 'Apple iPod Touch',
> 	'sony'			=> 'Sony Ericsson',
> 	'ericsson'		=> 'Sony Ericsson',
> 	'blackberry'	=> 'BlackBerry',
> 	'cocoon'		=> 'O2 Cocoon',
> 	'blazer'		=> 'Treo',
> 	'lg'			=> 'LG',
> 	'amoi'			=> 'Amoi',
> 	'xda'			=> 'XDA',
> 	'mda'			=> 'MDA',
> 	'vario'			=> 'Vario',
> 	'htc'			=> 'HTC',
> 	'samsung'		=> 'Samsung',
> 	'sharp'			=> 'Sharp',
> 	'sie-'			=> 'Siemens',
> 	'alcatel'		=> 'Alcatel',
> 	'benq'			=> 'BenQ',
> 	'ipaq'			=> 'HP iPaq',
> 	'mot-'			=> 'Motorola',
> 	'playstation portable'	=> 'PlayStation Portable',
> 	'playstation 3'		=> 'PlayStation 3',
> 	'playstation vita'  	=> 'PlayStation Vita',
> 	'hiptop'		=> 'Danger Hiptop',
> 	'nec-'			=> 'NEC',
> 	'panasonic'		=> 'Panasonic',
> 	'philips'		=> 'Philips',
> 	'sagem'			=> 'Sagem',
> 	'sanyo'			=> 'Sanyo',
> 	'spv'			=> 'SPV',
> 	'zte'			=> 'ZTE',
> 	'sendo'			=> 'Sendo',
> 	'nintendo dsi'	=> 'Nintendo DSi',
> 	'nintendo ds'	=> 'Nintendo DS',
> 	'nintendo 3ds'	=> 'Nintendo 3DS',
> 	'wii'			=> 'Nintendo Wii',
> 	'open web'		=> 'Open Web',
> 	'openweb'		=> 'OpenWeb',
129,134c155,160
< 					'symbian'				=> "Symbian",
< 					'SymbianOS'				=> "SymbianOS",
< 					'elaine'				=> "Palm",
< 					'palm'					=> "Palm",
< 					'series60'				=> "Symbian S60",
< 					'windows ce'			=> "Windows CE",
---
> 	'android'		=> 'Android',
> 	'symbian'		=> 'Symbian',
> 	'SymbianOS'		=> 'SymbianOS',
> 	'elaine'		=> 'Palm',
> 	'series60'		=> 'Symbian S60',
> 	'windows ce'	=> 'Windows CE',
137,142c163,170
< 					'obigo'					=> "Obigo",
< 					'netfront'				=> "Netfront Browser",
< 					'openwave'				=> "Openwave Browser",
< 					'mobilexplorer'			=> "Mobile Explorer",
< 					'operamini'				=> "Opera Mini",
< 					'opera mini'			=> "Opera Mini",
---
> 	'obigo'			=> 'Obigo',
> 	'netfront'		=> 'Netfront Browser',
> 	'openwave'		=> 'Openwave Browser',
> 	'mobilexplorer'	=> 'Mobile Explorer',
> 	'operamini'		=> 'Opera Mini',
> 	'opera mini'	=> 'Opera Mini',
> 	'opera mobi'	=> 'Opera Mobile',
> 	'fennec'		=> 'Firefox Mobile',
145,151c173,179
< 					'digital paths'			=> "Digital Paths",
< 					'avantgo'				=> "AvantGo",
< 					'xiino'					=> "Xiino",
< 					'novarra'				=> "Novarra Transcoder",
< 					'vodafone'				=> "Vodafone",
< 					'docomo'				=> "NTT DoCoMo",
< 					'o2'					=> "O2",
---
> 	'digital paths'	=> 'Digital Paths',
> 	'avantgo'		=> 'AvantGo',
> 	'xiino'			=> 'Xiino',
> 	'novarra'		=> 'Novarra Transcoder',
> 	'vodafone'		=> 'Vodafone',
> 	'docomo'		=> 'NTT DoCoMo',
> 	'o2'			=> 'O2',
154,162c182,190
< 					'mobile'				=> "Generic Mobile",
< 					'wireless'				=> "Generic Mobile",
< 					'j2me'					=> "Generic Mobile",
< 					'midp'					=> "Generic Mobile",
< 					'cldc'					=> "Generic Mobile",
< 					'up.link'				=> "Generic Mobile",
< 					'up.browser'			=> "Generic Mobile",
< 					'smartphone'			=> "Generic Mobile",
< 					'cellphone'				=> "Generic Mobile"
---
> 	'mobile'		=> 'Generic Mobile',
> 	'wireless'		=> 'Generic Mobile',
> 	'j2me'			=> 'Generic Mobile',
> 	'midp'			=> 'Generic Mobile',
> 	'cldc'			=> 'Generic Mobile',
> 	'up.link'		=> 'Generic Mobile',
> 	'up.browser'	=> 'Generic Mobile',
> 	'smartphone'	=> 'Generic Mobile',
> 	'cellphone'		=> 'Generic Mobile'
168a197,198
> 	'baiduspider'		=> 'Baiduspider',
> 	'bingbot'		=> 'Bing',
174c204,210
< 					'lycos'				=> 'Lycos'
---
> 	'lycos'			=> 'Lycos',
> 	'yandex'		=> 'YandexBot',
> 	'mediapartners-google'	=> 'MediaPartners Google',
> 	'CRAZYWEBCRAWLER'	=> 'Crazy Webcrawler',
> 	'adsbot-google'		=> 'AdsBot Google',
> 	'feedfetcher-google'	=> 'Feedfetcher Google',
> 	'curious george'	=> 'Curious George'
176,178d211
< 
< /* End of file user_agents.php */
< /* Location: ./application/config/user_agents.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/barcode.php opensourcepos/application/controllers/Barcode.php
2c2,3
< class Barcode extends CI_Controller 
---
> require_once ("Secure_area.php");
> class Barcode extends Secure_area 
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/config.php opensourcepos/application/controllers/Config.php
7a8
> 		$this->load->library('barcode_lib');
13,19c14,16
< 		$locations = $this->Stock_locations->get_location_names();
< 		foreach($locations->result_array() as $array) 
< 		{
< 			array_push($location_names, $array['location_name']);
< 		}
< 		$data['location_names'] = implode(',', $location_names);
< 		$this->load->view("config", $data);
---
> 		$data['stock_locations'] = $this->Stock_location->get_all()->result_array();
> 		$data['support_barcode'] = $this->barcode_lib->get_list_barcodes();
> 		$this->load->view("configs/manage", $data);
23a21,23
> 		$upload_success = $this->_handle_logo_upload();
> 		$upload_data = $this->upload->data();
> 		
35,36d34
< 		'currency_symbol'=>$this->input->post('currency_symbol'),
< 		'currency_side'=>$this->input->post('currency_side'),/**GARRISON ADDED 4/20/2013**/
37a36,70
> 			'tax_included'=>$this->input->post('tax_included') != null,
> 			'recv_invoice_format'=>$this->input->post('recv_invoice_format'),
> 			'sales_invoice_format'=>$this->input->post('sales_invoice_format'),
> 			'receiving_calculate_average_price'=>$this->input->post('receiving_calculate_average_price') != null,
> 			'lines_per_page'=>$this->input->post('lines_per_page'),
> 			'default_sales_discount'=>$this->input->post('default_sales_discount'),
> 			'custom1_name'=>$this->input->post('custom1_name'),
> 			'custom2_name'=>$this->input->post('custom2_name'),
> 			'custom3_name'=>$this->input->post('custom3_name'),
> 			'custom4_name'=>$this->input->post('custom4_name'),
> 			'custom5_name'=>$this->input->post('custom5_name'),
> 			'custom6_name'=>$this->input->post('custom6_name'),
> 			'custom7_name'=>$this->input->post('custom7_name'),
> 			'custom8_name'=>$this->input->post('custom8_name'),
> 			'custom9_name'=>$this->input->post('custom9_name'),
> 			'custom10_name'=>$this->input->post('custom10_name')
> 		);
> 		
> 		if (!empty($upload_data['orig_name']))
> 		{
> 			$batch_save_data['company_logo'] = $upload_data['raw_name'] . $upload_data['file_ext'];
> 		}
> 		
> 		$result = $this->Appconfig->batch_save( $batch_save_data );
> 		$success = $upload_success && $result ? true : false;
> 		$message = $this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully');
> 		$message = $upload_success ? $message : $this->upload->display_errors();
> 		echo json_encode(array('success'=>$success,'message'=>$message));
> 	}
> 	
> 	function save_locale() 
> 	{
> 		$batch_save_data=array(	
> 			'currency_symbol'=>$this->input->post('currency_symbol'),
> 			'currency_side'=>$this->input->post('currency_side') != null,
40,50c73,76
< 		'print_after_sale'=>$this->input->post('print_after_sale'),
< 		'custom1_name'=>$this->input->post('custom1_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom2_name'=>$this->input->post('custom2_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom3_name'=>$this->input->post('custom3_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom4_name'=>$this->input->post('custom4_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom5_name'=>$this->input->post('custom5_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom6_name'=>$this->input->post('custom6_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom7_name'=>$this->input->post('custom7_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom8_name'=>$this->input->post('custom8_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom9_name'=>$this->input->post('custom9_name'),/**GARRISON ADDED 4/20/2013**/
< 		'custom10_name'=>$this->input->post('custom10_name')/**GARRISON ADDED 4/20/2013**/
---
> 			'dateformat'=>$this->input->post('dateformat'),
> 			'timeformat'=>$this->input->post('timeformat'),
> 			'thousands_separator'=>$this->input->post('thousands_separator'),
> 			'decimal_point'=>$this->input->post('decimal_point')
53,55c79,84
< 		$stock_locations = explode( ',', $this->input->post('stock_location'));
<         $stock_locations_trimmed=array();
<         foreach($stock_locations as $location)
---
>         $result = $this->Appconfig->batch_save( $batch_save_data );
>         $success = $result ? true : false;
>         echo json_encode(array('success'=>$success, 'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
> 	}
> 	
> 	function stock_locations() 
57c86,87
<             array_push($stock_locations_trimmed, trim($location, ' '));
---
> 		$stock_locations = $this->Stock_location->get_all()->result_array();
> 		$this->load->view('partial/stock_locations', array('stock_locations' => $stock_locations));
59,60c89,90
<         $current_locations = $this->Stock_locations->concat_location_names()->location_names;
<         if ($this->input->post('stock_locations') != $current_locations) 
---
> 	
> 	function _clear_session_state()
71c101,210
< 		if( $this->Appconfig->batch_save( $batch_save_data ) && $this->Stock_locations->array_save($stock_locations_trimmed))
---
> 	function save_locations() 
> 	{
> 		$this->db->trans_start();
> 		
> 		$deleted_locations = $this->Stock_location->get_allowed_locations();
> 		foreach($this->input->post() as $key => $value)
> 		{
> 			if (strstr($key, 'stock_location'))
> 			{
> 				$location_id = preg_replace("/.*?_(\d+)$/", "$1", $key);
> 				unset($deleted_locations[$location_id]);
> 				// save or update
> 				$location_data = array('location_name' => $value);
> 				if ($this->Stock_location->save($location_data, $location_id))
> 				{
> 					$this->_clear_session_state();
> 				}
> 			}
> 		}
> 		// all locations not available in post will be deleted now
> 		foreach ($deleted_locations as $location_id => $location_name)
> 		{
> 			$this->Stock_location->delete($location_id);
> 		}
> 		$success = $this->db->trans_complete();
> 		echo json_encode(array('success'=>$success,'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
> 	}
> 
>     function save_barcode()
>     {
>         $batch_save_data=array(
> 			'barcode_type'=>$this->input->post('barcode_type'),
> 			'barcode_quality'=>$this->input->post('barcode_quality'),
> 			'barcode_width'=>$this->input->post('barcode_width'),
> 			'barcode_height'=>$this->input->post('barcode_height'),
> 			'barcode_font'=>$this->input->post('barcode_font'),
> 			'barcode_font_size'=>$this->input->post('barcode_font_size'),
> 			'barcode_first_row'=>$this->input->post('barcode_first_row'),
> 			'barcode_second_row'=>$this->input->post('barcode_second_row'),
> 			'barcode_third_row'=>$this->input->post('barcode_third_row'),
> 			'barcode_num_in_row'=>$this->input->post('barcode_num_in_row'),
> 			'barcode_page_width'=>$this->input->post('barcode_page_width'),
> 			'barcode_page_cellspacing'=>$this->input->post('barcode_page_cellspacing'),
> 			'barcode_generate_if_empty'=>$this->input->post('barcode_generate_if_empty') != null,
> 			'barcode_content'=>$this->input->post('barcode_content')
>         );
>         
>         $result = $this->Appconfig->batch_save( $batch_save_data );
>         $success = $result ? true : false;
>         echo json_encode(array('success'=>$success, 'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
>     }
>     
>     function save_receipt()
>     {
>     	$batch_save_data = array (
> 			'use_invoice_template' => $this->input->post ( 'use_invoice_template' ) != null,
> 			'invoice_default_comments' => $this->input->post ( 'invoice_default_comments' ),
> 			'invoice_email_message' => $this->input->post ( 'invoice_email_message' ),
> 			'receipt_show_taxes' => $this->input->post ( 'receipt_show_taxes' ) != null,
> 			'print_silently' => $this->input->post ( 'print_silently' ) != null,
> 			'print_header' => $this->input->post ( 'print_header' ) != null,
> 			'print_footer' => $this->input->post ( 'print_footer' ) != null,
> 			'print_top_margin' => $this->input->post ( 'print_top_margin' ),
> 			'print_left_margin' => $this->input->post ( 'print_left_margin' ),
> 			'print_bottom_margin' => $this->input->post ( 'print_bottom_margin' ),
> 			'print_right_margin' => $this->input->post ( 'print_right_margin' ),
> 			'show_total_discount' => $this->input->post( 'show_total_discount' ) != null
> 		);
>     	$result = $this->Appconfig->batch_save( $batch_save_data );
>     	$success = $result ? true : false;
>     	echo json_encode(array('success'=>$success, 'message'=>$this->lang->line('config_saved_' . ($success ? '' : 'un') . 'successfully')));
>     }
>     
>     function _handle_logo_upload()
>     {
>     	$this->load->helper('directory');
>     	// load upload library
>     	$config = array('upload_path' => './uploads/',
>     			'allowed_types' => 'gif|jpg|png',
>     			'max_size' => '1024',
>     			'max_width' => '800',
>     			'max_height' => '680',
>     			'file_name' => 'company_logo');
>     	$this->load->library('upload', $config);
>     	$this->upload->do_upload('company_logo');
>     	return strlen($this->upload->display_errors()) == 0 || !strcmp($this->upload->display_errors(), '<p>'.$this->lang->line('upload_no_file_selected').'</p>');
>     }
>     
>     function backup_db()
>     {
>     	$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
>     	if($this->Employee->has_module_grant('config',$employee_id))
>     	{
>     		$this->load->dbutil();
>     		$prefs = array(
> 				'format'      => 'zip',
> 				'filename'    => 'ospos.sql'
>     		);
>     		 
>     		$backup =& $this->dbutil->backup($prefs);
>     		 
> 			$file_name = 'ospos-' . date("Y-m-d-H-i-s") .'.zip';
>     		$save = 'uploads/'.$file_name;
>     		$this->load->helper('download');
>     		while (ob_get_level()) {
>     			ob_end_clean();
>     		}
>     		force_download($file_name, $backup);
>     	}
>     	else 
73c212
< 			echo json_encode(array('success'=>true,'message'=>$this->lang->line('config_saved_successfully')));
---
>     		redirect('no_access/config');
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/customers.php opensourcepos/application/controllers/Customers.php
10c11
< 	function index()
---
> 	function index($limit_from=0)
12,18c13
< 		$config['base_url'] = site_url('/customers/index');
< 		$config['total_rows'] = $this->Customer->count_all();
< 		$config['per_page'] = '20';
< 		$config['uri_segment'] = 3;
< 		$this->pagination->initialize($config);
< 		
< 		$data['controller_name']=strtolower(get_class());
---
> 		$data['controller_name'] = $this->get_controller_name();
20c15,18
< 		$data['manage_table']=get_people_manage_table( $this->Customer->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
---
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$customers = $this->Customer->get_all($lines_per_page, $limit_from);
> 		$data['links'] = $this->_initialize_pagination($this->Customer, $lines_per_page, $limit_from);
> 		$data['manage_table'] = get_people_manage_table($customers, $this);
29,31c27,36
< 		$search=$this->input->post('search');
< 		$data_rows=get_people_manage_table_data_rows($this->Customer->search($search),$this);
< 		echo $data_rows;
---
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 		$customers = $this->Customer->search($search, $lines_per_page, $limit_from);
> 		$total_rows = $this->Customer->get_found_rows($search);
> 		$links = $this->_initialize_pagination($this->Customer,$lines_per_page, $limit_from, $total_rows);
> 		$data_rows = get_people_manage_table_data_rows($customers, $this);
> 
> 		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
59a65
> 			'gender'=>$this->input->post('gender'),
72c78,79
< 		'taxable'=>$this->input->post('taxable')=='' ? 0:1,
---
> 			'company_name'=>$this->input->post('company_name') == '' ? null : $this->input->post('company_name'),
> 			'taxable'=>$this->input->post('taxable') != null
74c81
< 		if($this->Customer->save($person_data,$customer_data,$customer_id))
---
> 		if($this->Customer->save_customer($person_data,$customer_data,$customer_id))
94a102,107
> 	function check_account_number()
> 	{
> 		$exists = $this->Customer->account_number_exists($this->input->post('account_number'),$this->input->post('person_id'));
> 		echo !$exists ? 'true' : 'false';
> 	}
> 	
148,156c161,170
< 					'email'=>$data[2],
< 					'phone_number'=>$data[3],
< 					'address_1'=>$data[4],
< 					'address_2'=>$data[5],
< 					'city'=>$data[6],
< 					'state'=>$data[7],
< 					'zip'=>$data[8],
< 					'country'=>$data[9],
< 					'comments'=>$data[10]
---
> 					'gender'=>$data[2],
> 					'email'=>$data[3],
> 					'phone_number'=>$data[4],
> 					'address_1'=>$data[5],
> 					'address_2'=>$data[6],
> 					'city'=>$data[7],
> 					'state'=>$data[8],
> 					'zip'=>$data[9],
> 					'country'=>$data[10],
> 					'comments'=>$data[11]
160,161c174
< 					'account_number'=>$data[11]=='' ? null:$data[11],
< 					'taxable'=>$data[12]=='' ? 0:1,
---
> 					'taxable'=>$data[13]=='' ? 0:1
164c177,185
< 					if(!$this->Customer->save($person_data,$customer_data))
---
> 					$account_number = $data[12];
> 					$invalidated = false;
> 					if ($account_number != "") 
> 					{
> 						$customer_data['account_number'] = $account_number;
> 						$invalidated = $this->Customer->account_number_exists($account_number);
> 					}
> 					
> 					if($invalidated || !$this->Customer->save_customer($person_data,$customer_data))
180c201
< 		if(count($failCodes) > 1)
---
> 		if(count($failCodes) > 0)
198c219
< 		return 350;
---
> 		return 400;
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/employees.php opensourcepos/application/controllers/Employees.php
10c11
< 	function index()
---
> 	function index($limit_from=0)
12,18c13
< 		$config['base_url'] = site_url('/employees/index');
< 		$config['total_rows'] = $this->Employee->count_all();
< 		$config['per_page'] = '20';
< 		$config['uri_segment'] = 3;
< 		$this->pagination->initialize($config);
< 		
< 		$data['controller_name']=strtolower(get_class());
---
> 		$data['controller_name'] = $this->get_controller_name();
20,21c15,19
< 		$data['manage_table']=get_people_manage_table( $this->Employee->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
< 		$this->load->view('people/manage',$data);
---
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$suppliers = $this->Employee->get_all($lines_per_page, $limit_from);
> 		$data['links'] = $this->_initialize_pagination($this->Employee, $lines_per_page, $limit_from);
> 		$data['manage_table'] = get_people_manage_table($suppliers, $this);
> 		$this->load->view('suppliers/manage',$data);
29,31c27,36
< 		$search=$this->input->post('search');
< 		$data_rows=get_people_manage_table_data_rows($this->Employee->search($search),$this);
< 		echo $data_rows;
---
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 		$employees = $this->Employee->search($search, $limit_from, $lines_per_page);
> 		$total_rows = $this->Employee->get_found_rows($search);
> 		$links = $this->_initialize_pagination($this->Employee, $lines_per_page, $limit_from, $total_rows);
> 		$data_rows = get_people_manage_table_data_rows($employees, $this);
> 
> 		echo json_encode(array('rows' => $data_rows, 'pagination' => $links));
49a55
> 		$data['all_subpermissions']=$this->Module->get_all_subpermissions();
60a67
> 			'gender'=>$this->input->post('gender'),
71c78
< 		$permission_data = $this->input->post("permissions")!=false ? $this->input->post("permissions"):array();
---
> 		$grants_data = $this->input->post('grants') != null ? $this->input->post('grants') : array();
86c93
< 		if($this->Employee->save($person_data,$employee_data,$permission_data,$employee_id))
---
> 		if($this->Employee->save_employee($person_data,$employee_data,$grants_data,$employee_id))
129c136
< 		return 650;
---
> 		return 750;
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/giftcards.php opensourcepos/application/controllers/Giftcards.php
11c12
< 	function index()
---
> 	function index($limit_from=0)
13,19c14
< 		$config['base_url'] = site_url('/giftcards/index');
< 		$config['total_rows'] = $this->Giftcard->count_all();
< 		$config['per_page'] = '20';
< 		$config['uri_segment'] = 3;
< 		$this->pagination->initialize($config);
< 		
< 		$data['controller_name']=strtolower(get_class());
---
> 		$data['controller_name'] = $this->get_controller_name();
21c16,19
< 		$data['manage_table']=get_giftcards_manage_table( $this->Giftcard->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
---
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$giftcards = $this->Giftcard->get_all($lines_per_page, $limit_from);
> 		$data['links'] = $this->_initialize_pagination($this->Giftcard, $lines_per_page, $limit_from);
> 		$data['manage_table'] = get_giftcards_manage_table($giftcards, $this);
24a23,25
> 	/*
> 	Returns Giftcards table data rows. This will be called with AJAX.
> 	*/
27,29c28,37
< 		$search=$this->input->post('search');
< 		$data_rows=get_giftcards_manage_table_data_rows($this->Giftcard->search($search),$this);
< 		echo $data_rows;
---
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 		$giftcards = $this->Giftcard->search($search, $lines_per_page, $limit_from);
> 		$total_rows = $this->Giftcard->get_found_rows($search);
> 		$links = $this->_initialize_pagination($this->Giftcard, $lines_per_page, $limit_from, $total_rows);
> 		$data_rows = get_giftcards_manage_table_data_rows($giftcards, $this);
> 
> 		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
40c48
< /** GARRISON ADDED 5/3/2013 **/
---
> 
44c52
< 	function suggest_person()
---
> 	function person_search()
46c54
< 		$suggestions = $this->Giftcard->get_person_search_suggestions($this->input->post('q'),$this->input->post('limit'));
---
> 		$suggestions = $this->Customer->get_customer_search_suggestions($this->input->post('q'), $this->input->post('limit'));
49c57
< /** END GARRISON ADDED **/
---
> 
59,60c67,71
< 		$data['giftcard_info']=$this->Giftcard->get_info($giftcard_id);
< 
---
> 		$giftcard_info = $this->Giftcard->get_info($giftcard_id);
> 		$person_name=$giftcard_id > 0? $giftcard_info->first_name . ' ' . $giftcard_info->last_name : '';
> 		$data['selected_person'] = $giftcard_id > 0 && isset($giftcard_info->person_id) ? $giftcard_info->person_id . "|" . $person_name : "";
> 		$data['giftcard_number'] = $giftcard_id > 0 ? $giftcard_info->giftcard_number : $this->Giftcard->get_max_number()->giftcard_number + 1;
> 		$data['giftcard_info'] = $giftcard_info;
67,69c78,81
< 		'giftcard_number'=>$this->input->post('giftcard_number'),
< 		'value'=>$this->input->post('value'),
< 		'person_id'=>$this->input->post('person_id')/**GARRISON ADDED 4/22/2013**/		
---
> 			'record_time' => date('Y-m-d H:i:s'),
> 			'giftcard_number'=>$this->input->post('giftcard_number', TRUE),
> 			'value'=>$this->input->post('value', TRUE),
> 			'person_id'=>$this->input->post('person_id', TRUE) ? $this->input->post('person_id') : null
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/home.php opensourcepos/application/controllers/Home.php
18d17
< 		log_message('error','Logging out');
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/index.html opensourcepos/application/controllers/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/item_kits.php opensourcepos/application/controllers/Item_kits.php
11c12,18
< 	function index()
---
> 	// add the total cost and retail price to a passed items kit retrieving the data from each singolar item part of the kit
> 	private function add_totals_to_item_kit($item_kit)
> 	{
> 		$item_kit->total_cost_price = 0;
> 		$item_kit->total_unit_price = 0;
> 		
> 		foreach ($this->Item_kit_items->get_info($item_kit->item_kit_id) as $item_kit_item)
13,17c20,27
< 		$config['base_url'] = site_url('/item_kits/index');
< 		$config['total_rows'] = $this->Item_kit->count_all();
< 		$config['per_page'] = '20';
< 		$config['uri_segment'] = 3;
< 		$this->pagination->initialize($config);
---
> 			$item_info = $this->Item->get_info($item_kit_item['item_id']);
> 			
> 			$item_kit->total_cost_price += $item_info->cost_price * $item_kit_item['quantity'];
> 			$item_kit->total_unit_price += $item_info->unit_price * $item_kit_item['quantity'];
> 		}
> 
> 		return $item_kit;
> 	}
19c29,31
< 		$data['controller_name']=strtolower(get_class());
---
> 	function index($limit_from=0)
> 	{
> 		$data['controller_name'] = $this->get_controller_name();
21c33,44
< 		$data['manage_table']=get_item_kits_manage_table( $this->Item_kit->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
---
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$item_kits = $this->Item_kit->get_all($lines_per_page, $limit_from);
> 		
> 		foreach($item_kits->result() as $item_kit)
> 		{
> 			// calculate the total cost and retail price of the Kit so it can be printed out in the manage table
> 			$item_kit = $this->add_totals_to_item_kit($item_kit);
> 		}
> 		
> 		$data['links'] = $this->_initialize_pagination($this->Item_kit, $lines_per_page, $limit_from);
> 		$data['manage_table'] = get_item_kits_manage_table($item_kits, $this);
> 
24a48,50
> 	/*
> 	Returns Item kits table data rows. This will be called with AJAX.
> 	*/
27,29c53,69
< 		$search=$this->input->post('search');
< 		$data_rows=get_item_kits_manage_table_data_rows($this->Item_kit->search($search),$this);
< 		echo $data_rows;
---
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 		$item_kits = $this->Item_kit->search($search, $lines_per_page, $limit_from);
> 		$total_rows = $this->Item_kit->get_found_rows($search);
> 		$links = $this->_initialize_pagination($this->Item_kit, $lines_per_page, $limit_from, $total_rows, 'search');
> 
> 		foreach($item_kits->result() as $item_kit)
> 		{
> 			// calculate the total cost and retail price of the Kit so it can be printed out in the manage table
> 			$item_kit = $this->add_totals_to_item_kit($item_kit);
> 		}
> 
> 		$data_rows = get_item_kits_manage_table_data_rows($item_kits, $this);
> 
> 		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
44,45c85,89
< 		$data_row=get_item_kit_data_row($this->Item_kit->get_info($item_kit_id),$this);
< 		echo $data_row;
---
> 
> 		// calculate the total cost and retail price of the Kit so it can be added to the table refresh
> 		$item_kit = $this->add_totals_to_item_kit($this->Item_kit->get_info($item_kit_id));
> 		
> 		echo (get_item_kit_data_row($item_kit, $this));
66,67d109
< 				echo json_encode(array('success'=>true,'message'=>$this->lang->line('item_kits_successful_adding').' '.
< 				$item_kit_data['name'],'item_kit_id'=>$item_kit_data['item_kit_id']));
68a111,114
> 				
> 				echo json_encode(array('success'=>true,
> 									'message'=>$this->lang->line('item_kits_successful_adding').' '.$item_kit_data['name'],
> 									'item_kit_id'=>$item_kit_id));
72,73c118,120
< 				echo json_encode(array('success'=>true,'message'=>$this->lang->line('item_kits_successful_updating').' '.
< 				$item_kit_data['name'],'item_kit_id'=>$item_kit_id));
---
> 				echo json_encode(array('success'=>true, 
> 									'message'=>$this->lang->line('item_kits_successful_updating').' '.$item_kit_data['name'],
> 									'item_kit_id'=>$item_kit_id));
76c123
< 			if ($this->input->post('item_kit_item'))
---
> 			if ( $this->input->post('item_kit_item') != null )
92,93c139,141
< 			echo json_encode(array('success'=>false,'message'=>$this->lang->line('item_kits_error_adding_updating').' '.
< 			$item_kit_data['name'],'item_kit_id'=>-1));
---
> 			echo json_encode(array('success'=>false, 
> 								'message'=>$this->lang->line('item_kits_error_adding_updating').' '.$item_kit_data['name'],
> 								'item_kit_id'=>-1));
104,105c151,152
< 			echo json_encode(array('success'=>true,'message'=>$this->lang->line('item_kits_successful_deleted').' '.
< 			count($item_kits_to_delete).' '.$this->lang->line('item_kits_one_or_multiple')));
---
> 			echo json_encode(array('success'=>true,
> 								'message'=>$this->lang->line('item_kits_successful_deleted').' '.count($item_kits_to_delete).' '.$this->lang->line('item_kits_one_or_multiple')));
109c156,157
< 			echo json_encode(array('success'=>false,'message'=>$this->lang->line('item_kits_cannot_be_deleted')));
---
> 			echo json_encode(array('success'=>false,
> 								'message'=>$this->lang->line('item_kits_cannot_be_deleted')));
114a163
> 		$this->load->library('barcode_lib');
120c169,170
< 			$item_kit_info = $this->Item_kit->get_info($item_kid_id);
---
> 			// calculate the total cost and retail price of the Kit so it can be added to the barcode text at the bottom
> 			$item_kit = $this->add_totals_to_item_kit($this->Item_kit->get_info($item_kid_id));
122c172
< 			$result[] = array('name' =>$item_kit_info->name, 'id'=> 'KIT '.$item_kid_id);
---
> 			$result[] = array('name'=>$item_kit->name, 'item_id'=>'KIT '.$item_kid_id, 'item_number'=>'KIT '.$item_kid_id, 'cost_price'=>$item_kit->total_cost_price, 'unit_price'=>$item_kit->total_unit_price);
125a176,183
>         $barcode_config = $this->barcode_lib->get_barcode_config();
> 		// in case the selected barcode type is not Code39 or Code128 we set by default Code128
> 		// the rationale for this is that EAN codes cannot have strings as seed, so 'KIT ' is not allowed
> 		if($barcode_config['barcode_type'] != 'Code39' && $barcode_config['barcode_type'] != 'Code128')
> 		{
> 			$barcode_config['barcode_type'] = 'Code128';
> 		}
> 		$data['barcode_config'] = $barcode_config;
135c192
< 		return 360;
---
> 		return 400;
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/items.php opensourcepos/application/controllers/Items.php
8a10
> 		$this->load->library('item_lib');
11c13
< 	function index()
---
> 	function index($limit_from=0)
13,17c15,16
< 		$config['base_url'] = site_url('/items/index');
< 		$config['total_rows'] = $this->Item->count_all();
< 		$config['per_page'] = '20';
< 		$config['uri_segment'] = 3;
< 		$this->pagination->initialize($config);
---
> 		$stock_location = $this->item_lib->get_item_location();
> 		$stock_locations = $this->Stock_location->get_allowed_locations();
19c18
< 		$data['controller_name']=strtolower(get_class());
---
> 		$data['controller_name'] = $this->get_controller_name();
21,23c20,38
< 		$data['manage_table']=get_items_manage_table( $this->Item->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
< 		$this->load->view('items/manage',$data);
< 	}
---
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$items = $this->Item->get_all($stock_location, $lines_per_page, $limit_from);
> 		$data['links'] = $this->_initialize_pagination($this->Item, $lines_per_page, $limit_from);
> 		
> 		// set 01/01/2010 as starting date for OSPOS
> 		$start_of_time = date($this->config->item('dateformat'), mktime(0,0,0,1,1,2010));
> 		$today = date($this->config->item('dateformat'));
> 
> 		$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $start_of_time;
> 		$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
> 		$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
> 		$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
> 		
> 		$data['start_date'] = $start_date_formatter->format($this->config->item('dateformat'));
> 		$data['end_date'] = $end_date_formatter->format($this->config->item('dateformat'));
> 	
> 		$data['stock_location'] = $stock_location;
> 		$data['stock_locations'] = $stock_locations;
> 		$data['manage_table'] = get_items_manage_table( $this->Item->get_all($stock_location, $lines_per_page, $limit_from), $this );
25,39d39
< 	function refresh()
< 	{
< 		$is_serialized=$this->input->post('is_serialized');
< 		$no_description=$this->input->post('no_description');
< 		$search_custom=$this->input->post('search_custom');//GARRISON ADDED 4/13/2013    
<         $is_deleted=$this->input->post('is_deleted'); // Parq 131215	
<         
< 		$data['search_section_state']=$this->input->post('search_section_state');
< 		$data['is_serialized']=$this->input->post('is_serialized');
< 		$data['no_description']=$this->input->post('no_description');
< 		$data['search_custom']=$this->input->post('search_custom');//GARRISON ADDED 4/13/2013
< 		$data['is_deleted']=$this->input->post('is_deleted'); // Parq 131215
< 		$data['controller_name']=strtolower(get_class());
< 		$data['form_width']=$this->get_form_width(); 
< 		$data['manage_table']=get_items_manage_table($this->Item->get_all_filtered($is_serialized,$no_description,$search_custom,$is_deleted),$this);//GARRISON MODIFIED 4/13/2013, Parq 131215
48a49,51
> 	/*
> 	Returns Items table data rows. This will be called with AJAX.
> 	*/
51,53c54,114
< 		$search=$this->input->post('search');
< 		$data_rows=get_items_manage_table_data_rows($this->Item->search($search),$this);
< 		echo $data_rows;
---
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$this->item_lib->set_item_location($this->input->post('stock_location'));
> 
> 		// set 01/01/2010 as starting date for OSPOS
> 		$start_of_time = date($this->config->item('dateformat'), mktime(0,0,0,1,1,2010));
> 		$today = date($this->config->item('dateformat'));
> 
> 		$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $start_of_time;
> 		$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
> 		$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
> 		$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
> 		
> 		$filters = array('start_date' => $start_date_formatter->format('Y-m-d'), 
> 						'end_date' => $end_date_formatter->format('Y-m-d'),
> 						'stock_location_id' => $this->item_lib->get_item_location(),
> 						'empty_upc' => $this->input->post('empty_upc') != null,
> 						'low_inventory' => $this->input->post('low_inventory') != null, 
> 						'is_serialized' => $this->input->post('is_serialized') != null,
> 						'no_description' => $this->input->post('no_description') != null,
> 						'search_custom' => $this->input->post('search_custom') != null,
> 						'is_deleted' => $this->input->post('is_deleted') != null);
> 		
> 		$items = $this->Item->search($search, $filters, $lines_per_page, $limit_from);
> 		$data_rows = get_items_manage_table_data_rows($items, $this);
> 		$total_rows = $this->Item->get_found_rows($search, $filters);
> 		$links = $this->_initialize_pagination($this->Item, $lines_per_page, $limit_from, $total_rows, 'search');
> 		$data_rows = get_items_manage_table_data_rows($items, $this);
> 
> 		// do not move this line to be after the json_encode otherwise the searhc function won't work!!
> 
> 		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
> 	}
> 	
> 	function pic_thumb($pic_id)
> 	{
> 		$this->load->helper('file');
> 		$this->load->library('image_lib');
> 		$base_path = "uploads/item_pics/" . $pic_id ;
> 		$images = glob ($base_path. "*");
> 		if (sizeof($images) > 0)
> 		{
> 			$image_path = $images[0];
> 			$ext = pathinfo($image_path, PATHINFO_EXTENSION);
> 			$thumb_path = $base_path . $this->image_lib->thumb_marker.'.'.$ext;
> 			if (sizeof($images) < 2)
> 			{
> 				$config['image_library'] = 'gd2';
> 				$config['source_image']  = $image_path;
> 				$config['maintain_ratio'] = TRUE;
> 				$config['create_thumb'] = TRUE;
> 				$config['width'] = 52;
> 				$config['height'] = 32;
>  				$this->image_lib->initialize($config);
>  				$image = $this->image_lib->resize();
> 				$thumb_path = $this->image_lib->full_dst_path;
> 			}
> 			$this->output->set_content_type(get_mime_by_extension($thumb_path));
> 			$this->output->set_output(file_get_contents($thumb_path));
> 		}
61c122,124
< 		$suggestions = $this->Item->get_search_suggestions($this->input->post('q'),$this->input->post('limit'));
---
> 		$suggestions = $this->Item->get_search_suggestions($this->input->post('q'), $this->input->post('limit'),
> 															$this->input->post('search_custom'), !empty($this->input->post('is_deleted')));
> 
67c130,131
< 		$suggestions = $this->Item->get_item_search_suggestions($this->input->post('q'),$this->input->post('limit'),'warehouse');
---
> 		$suggestions = $this->Item->get_item_search_suggestions($this->input->post('q'), $this->input->post('limit'));
> 
80d144
< /**GARRISON ADDED 5/18/2013**/	
180,181d254
< /**END GARRISON ADDED**/
< 		
185c258,263
< 		$data_row=get_item_data_row($this->Item->get_info($item_id),$this);
---
> 		$item_info = $this->Item->get_info($item_id);
> 		$stock_location = $this->item_lib->get_item_location();
> 		$item_quantity = $this->Item_quantity->get_item_quantity($item_id,$stock_location);
> 		$item_info->quantity = $item_quantity->quantity; 
> 		$data_row = get_item_data_row($item_info,$this);
> 		
193,201d271
< 
< 		$categories_rs = $this->Item->get_category_suggestions($this->input->post('q'));
< 		$categories = array();
< 		foreach($categories_rs as $category)
< 		{
< 			$categories[$category] = $category;
< 		}
< 		$data['categories']=$categories;
< 		$data['selected_category']=$this->Item->get_info($item_id)->category;
205,206c275
< 			//$suppliers[$row['person_id']] = $row['company_name'] .' ('.$row['first_name'] .' '. $row['last_name'].')';
< 			$suppliers[$row['person_id']] = $row['first_name'] .' '. $row['last_name'];
---
> 			$suppliers[$row['person_id']] = $row['company_name'];
214,215c283
<         $locations_data = $this->Stock_locations->get_undeleted_all()->result_array();
<         $location_array;
---
>         $locations_data = $this->Stock_location->get_undeleted_all()->result_array();
218c286
<            $quantity = $this->Item_quantities->get_item_quantity($item_id, $location['location_id'])->quantity;
---
>            $quantity = $this->Item_quantity->get_item_quantity($item_id,$location['location_id'])->quantity;
220,222c288
<            $location_array[$location['location_id']] =  array('location_name'=>$location['location_name'],
<                                                                        'quantity'=>$quantity);
<         }
---
>            $location_array[$location['location_id']] =  array('location_name'=>$location['location_name'], 'quantity'=>$quantity);
224d289
<                 $this->load->view("items/form",$data);
226a292,293
> 		$this->load->view("items/form", $data);
> 	}
228d294
<         //Ramel Inventory Tracking
234c300
<         $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
---
>         $stock_locations = $this->Stock_location->get_undeleted_all()->result_array();
238c304
<             $data['item_quantities'][$location_data['location_id']] = $this->Item_quantities->get_item_quantity($item_id,$location_data['location_id'])->quantity;
---
>             $data['item_quantities'][$location_data['location_id']] = $this->Item_quantity->get_item_quantity($item_id,$location_data['location_id'])->quantity;
249c315
<         $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();   
---
>         $stock_locations = $this->Stock_location->get_undeleted_all()->result_array();
253c319
<             $data['item_quantities'][$location_data['location_id']] = $this->Item_quantities->get_item_quantity($item_id,$location_data['location_id'])->quantity;
---
>             $data['item_quantities'][$location_data['location_id']] = $this->Item_quantity->get_item_quantity($item_id,$location_data['location_id'])->quantity;
257c323
< 	} //------------------------------------------- Ramel
---
> 	}
260a327
> 		$this->load->library('barcode_lib');
264c331,337
< 		foreach ($item_ids as $item_id)
---
> 		$result = $this->Item->get_multiple_info($item_ids)->result_array();
> 		$config = $this->barcode_lib->get_barcode_config();
> 
> 		$data['barcode_config'] = $config;
> 		
> 		// check the list of items to see if any item_number field is empty
> 		foreach($result as &$item)
266c339,350
< 			$item_info = $this->Item->get_info($item_id);
---
> 			// update the UPC/EAN/ISBN field if empty / null with the newly generated barcode
> 			if (empty($item['item_number']) && $this->Appconfig->get('barcode_generate_if_empty'))
> 			{
> 				// get the newly generated barcode
> 				$barcode_instance = Barcode_lib::barcode_instance($item, $config);
> 				$item['item_number'] = $barcode_instance->getData();
> 				// remove from item any suppliers table info to avoid save failure because of unknown fields
> 				// WARNING: if suppliers table is changed this list needs to be upgraded, which makes the matter a bit tricky to maintain
> 				unset($item['person_id']);
> 				unset($item['company_name']);
> 				unset($item['account_number']);
> 				unset($item['agency_name']);
268c352,354
< 			$result[] = array('name' =>$item_info->name, 'id'=> $item_id);
---
> 				// update the item in the database in order to save the UPC/EAN/ISBN field
> 				$this->Item->save($item, $item['item_id']);
> 			}
271a357
> 		// display barcodes
281c368
< 			$suppliers[$row['person_id']] = $row['first_name'] .' '. $row['last_name'];
---
> 			$suppliers[$row['person_id']] = $row['company_name'];
297a386,387
> 		$upload_success = $this->_handle_image_upload();
> 		$upload_data = $this->upload->data();
308,320c398,411
< 		'allow_alt_description'=>$this->input->post('allow_alt_description'),
< 		'is_serialized'=>$this->input->post('is_serialized'),
< 		'deleted'=>$this->input->post('is_deleted'),  /** Parq 131215 **/
< 		'custom1'=>$this->input->post('custom1'),	/**GARRISON ADDED 4/21/2013**/			
< 		'custom2'=>$this->input->post('custom2'),/**GARRISON ADDED 4/21/2013**/
< 		'custom3'=>$this->input->post('custom3'),/**GARRISON ADDED 4/21/2013**/
< 		'custom4'=>$this->input->post('custom4'),/**GARRISON ADDED 4/21/2013**/
< 		'custom5'=>$this->input->post('custom5'),/**GARRISON ADDED 4/21/2013**/
< 		'custom6'=>$this->input->post('custom6'),/**GARRISON ADDED 4/21/2013**/
< 		'custom7'=>$this->input->post('custom7'),/**GARRISON ADDED 4/21/2013**/
< 		'custom8'=>$this->input->post('custom8'),/**GARRISON ADDED 4/21/2013**/
< 		'custom9'=>$this->input->post('custom9'),/**GARRISON ADDED 4/21/2013**/
< 		'custom10'=>$this->input->post('custom10')/**GARRISON ADDED 4/21/2013**/
---
> 			'receiving_quantity'=>$this->input->post('receiving_quantity'),
> 			'allow_alt_description'=>$this->input->post('allow_alt_description') != null,
> 			'is_serialized'=>$this->input->post('is_serialized') != null,
> 			'deleted'=>$this->input->post('is_deleted') != null,
> 			'custom1'=>$this->input->post('custom1') == null ? '' : $this->input->post('custom1'),
> 			'custom2'=>$this->input->post('custom2') == null ? '' : $this->input->post('custom2'),
> 			'custom3'=>$this->input->post('custom3') == null ? '' : $this->input->post('custom3'),
> 			'custom4'=>$this->input->post('custom4') == null ? '' : $this->input->post('custom4'),
> 			'custom5'=>$this->input->post('custom5') == null ? '' : $this->input->post('custom5'),
> 			'custom6'=>$this->input->post('custom6') == null ? '' : $this->input->post('custom6'),
> 			'custom7'=>$this->input->post('custom7') == null ? '' : $this->input->post('custom7'),
> 			'custom8'=>$this->input->post('custom8') == null ? '' : $this->input->post('custom8'),
> 			'custom9'=>$this->input->post('custom9') == null ? '' : $this->input->post('custom9'),
> 			'custom10'=>$this->input->post('custom10') == null ? '' : $this->input->post('custom10')
322a414,418
> 		if (!empty($upload_data['orig_name']))
> 		{
> 			$item_data['pic_id'] = $upload_data['raw_name'];
> 		}
> 		
328a424,425
> 			$success = TRUE;
> 			$new_item = FALSE;
332,333d428
< 				echo json_encode(array('success'=>true,'message'=>$this->lang->line('items_successful_adding').' '.
< 				$item_data['name'],'item_id'=>$item_data['item_id']));
335,339c430
< 			}
< 			else //previous item
< 			{
< 				echo json_encode(array('success'=>true,'message'=>$this->lang->line('items_successful_updating').' '.
< 				$item_data['name'],'item_id'=>$item_id));
---
> 				$new_item = TRUE;
352,353c443
< 			$this->Item_taxes->save($items_taxes_data, $item_id);
< 
---
> 			$success &= $this->Item_taxes->save($items_taxes_data, $item_id);
356c446
<             $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();          
---
>             $stock_locations = $this->Stock_location->get_undeleted_all()->result_array();
363,364c453,454
<                 $item_quantity = $this->Item_quantities->get_item_quantity($item_id, $location_data['location_id']);
<                 if ($item_quantity->quantity != $updated_quantity) 
---
>                 $item_quantity = $this->Item_quantity->get_item_quantity($item_id, $location_data['location_id']);
>                 if ($item_quantity->quantity != $updated_quantity || $new_item) 
366c456
< 	                $this->Item_quantities->save($location_detail, $item_id, $location_data['location_id']);
---
> 	                $success &= $this->Item_quantity->save($location_detail, $item_id, $location_data['location_id']);
368,369c458
< 	                $inv_data = array
< 	                (
---
> 	                $inv_data = array(
377c466,468
< 	                $this->Inventory->insert($inv_data);       
---
> 
> 	                $success &= $this->Inventory->insert($inv_data);       
>                 }                                            
378a470,482
> 			if ($success && $upload_success)
>             {
>             	$success_message = $this->lang->line('items_successful_' . ($new_item ? 'adding' : 'updating')) .' '. $item_data['name'];
> 
>             	echo json_encode(array('success'=>true, 'message'=>$success_message, 'item_id'=>$item_id));
>             }
>             else
>             {
>             	$error_message = $upload_success ? 
> 	            	$this->lang->line('items_error_adding_updating') .' '. $item_data['name'] : 
>     	        	$this->upload->display_errors(); 
> 
>             	echo json_encode(array('success'=>false, 'message'=>$error_message, 'item_id'=>$item_id)); 
383,384c488,489
< 			echo json_encode(array('success'=>false,'message'=>$this->lang->line('items_error_adding_updating').' '.
< 			$item_data['name'],'item_id'=>-1));
---
> 			echo json_encode(array('success'=>false, 'message'=>$this->lang->line('items_error_adding_updating').' '.$item_data['name'], 'item_id'=>-1));
> 		}
386a492,514
> 	function check_item_number()
> 	{
> 		$exists = $this->Item->item_number_exists($this->input->post('item_number'),$this->input->post('item_id'));
> 		echo !$exists ? 'true' : 'false';
> 	}
> 	
> 	function _handle_image_upload()
> 	{
> 		$this->load->helper('directory');
> 		$map = directory_map('./uploads/item_pics/', 1);
> 		// load upload library
> 		$config = array('upload_path' => './uploads/item_pics/',
> 				'allowed_types' => 'gif|jpg|png',
> 				'max_size' => '100',
> 				'max_width' => '640',
> 				'max_height' => '480',
> 				'file_name' => sizeof($map));
> 		$this->load->library('upload', $config);
> 		$this->upload->do_upload('item_image');           
> 		
> 		return strlen($this->upload->display_errors()) == 0 || 
>             	!strcmp($this->upload->display_errors(), 
>             		'<p>'.$this->lang->line('upload_no_file_selected').'</p>');
389d516
< 	//Ramel Inventory Tracking
395,396c522
< 		$inv_data = array
< 		(
---
> 		$inv_data = array(
405d531
<                 //Update stock quantity
407c533,534
<                 $item_quantity= $this->Item_quantities->get_item_quantity($item_id,$location_id);
---
> 		//Update stock quantity
> 		$item_quantity= $this->Item_quantity->get_item_quantity($item_id,$location_id);
413c540,541
<                 if($this->Item_quantities->save($item_quantity_data,$item_id,$location_id))
---
> 
> 		if($this->Item_quantity->save($item_quantity_data,$item_id,$location_id))
423,424c551
< 
< 	}//---------------------------------------------------------------------Ramel
---
> 	}
434c561
< 			if ($key == 'supplier_id')
---
> 			if($key == 'supplier_id' && $value != '')
436c563
< 				$item_data["$key"]=$value == '' ? null : $value;
---
> 				$item_data["$key"] = $value;
438c565
< 			elseif($value!='' and !(in_array($key, array('item_ids', 'tax_names', 'tax_percents'))))
---
> 			elseif($value != '' && !(in_array($key, array('submit', 'item_ids', 'tax_names', 'tax_percents'))))
449a577
> 			$tax_updated = false;
452c580
< 				if (is_numeric($tax_percents[$k]))
---
> 				if (!empty($tax_names[$k]) && is_numeric($tax_percents[$k]))
453a582,583
> 					$tax_updated = true;
> 					
456a587,589
> 			
> 			if($tax_updated)
> 			{
457a591
> 			}
513a649
> 					if (sizeof($data) >= 23) {
516c652
< 					'description'	=>	$data[13],
---
> 	                        'description'	=>	$data[11],
520,521c656
< 					'quantity'		=>	$data[10],
< 					'reorder_level'	=>	$data[11],
---
> 	                        'reorder_level'	=>	$data[10],
523,534c658,669
< 					'allow_alt_description'	=>	$data[14] != '' ? '1' : '0',
< 					'is_serialized'	=>	$data[15] != '' ? '1' : '0',
< 					'custom1'		=>	$data[16],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom2'		=>	$data[17],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom3'		=>	$data[18],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom4'		=>	$data[19],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom5'		=>	$data[20],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom6'		=>	$data[21],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom7'		=>	$data[22],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom8'		=>	$data[23],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom9'		=>	$data[24],	/** GARRISON ADDED 5/6/2013 **/
< 					'custom10'		=>	$data[25]	/** GARRISON ADDED 5/6/2013 **/
---
> 	                        'allow_alt_description'	=>	$data[12] != '' ? '1' : '0',
> 	                        'is_serialized'	=>	$data[13] != '' ? '1' : '0',
> 	                        'custom1'		=>	$data[14],
> 	                        'custom2'		=>	$data[15],
> 	                        'custom3'		=>	$data[16],
> 	                        'custom4'		=>	$data[17],
> 	                        'custom5'		=>	$data[18],
> 	                        'custom6'		=>	$data[19],
> 	                        'custom7'		=>	$data[20],
> 	                        'custom8'		=>	$data[21],
> 	                        'custom9'		=>	$data[22],
> 	                        'custom10'		=>	$data[23]
537c672
< 
---
> 	                    $invalidated = false;
540a676
> 		                    $invalidated = $this->Item->item_number_exists($item_number);
542,543c678,683
< 
< 					if($this->Item->save($item_data))
---
> 					}
> 					else 
> 					{
> 						$invalidated = true;
> 					}
>                     if(!$invalidated && $this->Item->save($item_data)) 
563a704
>                         // quantities   & inventory Info
566a708,751
> 
>                         $cols = count($data);
> 
>                         // array to store information if location got a quantity
>                         $allowed_locations = $this->Stock_location->get_allowed_locations();
>                         for ($col = 24; $col < $cols; $col = $col + 2)
>                         {
>                             $location_id = $data[$col];
>                             if (array_key_exists($location_id, $allowed_locations))
>                             {
>                                 $item_quantity_data = array (
>                                     'item_id' => $item_data['item_id'],
>                                     'location_id' => $location_id,
>                                     'quantity' => $data[$col + 1],
>                                 );
>                                 $this->Item_quantity->save($item_quantity_data, $item_data['item_id'], $location_id);
> 
>                                 $excel_data = array(
>                                     'trans_items'=>$item_data['item_id'],
>                                     'trans_user'=>$employee_id,
>                                     'trans_comment'=>$comment,
>                                     'trans_location'=>$data[$col],
>                                     'trans_inventory'=>$data[$col + 1]
>                                 );
> 								
>                                 $this->Inventory->insert($excel_data);
>                                 unset($allowed_locations[$location_id]);
>                             }
>                         }
> 
>                         /*
>                          * now iterate through the array and check for which location_id no entry into item_quantities was made yet
>                          * those get an entry with quantity as 0.
>                          * unfortunately a bit duplicate code from above...
>                          */
>                         foreach($allowed_locations as $location_id => $location_name)
>                         {
>                             $item_quantity_data = array(
>                                 'item_id' => $item_data['item_id'],
>                                 'location_id' => $location_id,
>                                 'quantity' => 0,
>                             );
>                             $this->Item_quantity->save($item_quantity_data, $item_data['item_id'], $data[$col]);
> 
572c757,758
< 								'trans_inventory'=>$data[10]
---
>                                     'trans_location'=>$location_id,
>                                     'trans_inventory'=>0
575c761
< 						//------------------------------------------------Ramel
---
>                         }
593c779
< 		if(count($failCodes) > 1)
---
> 		if(count($failCodes) > 0)
611c797
< 		return 560;
---
> 		return 450;
613,618d798
<     
<     function is_sale_store_item($item_number)
<     {  
<         echo $this->Item->is_sale_store_item_exist($item_number);        
<     }
<     
Only in pos-prod/application/controllers: items.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/languagecheck.php opensourcepos/application/controllers/Languagecheck.php
65c65
< 			if ( strpos($reference, '_lang'.EXT) === FALSE )
---
> 			if ( strpos($reference, '_lang.php') === FALSE )
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/login.php opensourcepos/application/controllers/Login.php
33c33
< 		$password = $this->input->post("password");	
---
> 		$password = $this->input->post('password');	
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/no_access.php opensourcepos/application/controllers/No_access.php
9c9
< 	function index($module_id='')
---
> 	function index($module_id='',$permission_id='')
11a12
> 		$data['permission_id']=$permission_id;
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/person_controller.php opensourcepos/application/controllers/Person_controller.php
33c33
< /** GARRISON ADDED 4/25/2013 IN PROGRESS **/	
---
> 	
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/receivings.php opensourcepos/application/controllers/Receivings.php
8a9
> 		$this->load->library('barcode_lib');
31c32,34
< 		$supplier_id = $this->input->post("supplier");
---
> 		$supplier_id = $this->input->post('supplier');
> 		if ($this->Supplier->exists($supplier_id))
> 		{
32a36
> 		}
39c43
<                 $stock_source = $this->input->post("stock_source");
---
> 		$stock_source = $this->input->post('stock_source');
43,44c47,48
<                         $this->receiving_lib->empty_cart();
<                         $mode = $this->input->post("mode");
---
> 			$this->receiving_lib->clear_invoice_number();
> 			$mode = $this->input->post('mode');
47c51
<                 else
---
> 		else if ($this->Stock_location->is_allowed_location($stock_source, 'receivings'))
54a59,78
> 	function set_comment()
> 	{
> 		$this->receiving_lib->set_comment($this->input->post('comment'));
> 	}
> 	
> 	function set_invoice_number_enabled()
> 	{
> 		$this->receiving_lib->set_invoice_number_enabled($this->input->post('recv_invoice_number_enabled'));
> 	}
> 	
> 	function set_print_after_sale()
> 	{
> 		$this->receiving_lib->set_print_after_sale($this->input->post('recv_print_after_sale'));
> 	}
> 	
> 	function set_invoice_number()
> 	{
> 		$this->receiving_lib->set_invoice_number($this->input->post('recv_invoice_number'));
> 	}
> 	
59c83
<                 $item_id_or_number_or_item_kit_or_receipt = $this->input->post("item");
---
> 		$item_id_or_number_or_item_kit_or_receipt = $this->input->post('item');
62c86
<                 if($this->receiving_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt) && $mode=='return')
---
> 		if($mode=='return' && $this->receiving_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt))
64c88
<                         $this->receiving_lib->return_entire_receiving($item_id_or_number_or_item_kit_or_receipt,$item_location);
---
> 			$this->receiving_lib->return_entire_receiving($item_id_or_number_or_item_kit_or_receipt);
83,84c107,108
< 		$this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|integer');
< 		$this->form_validation->set_rules('discount', 'lang:items_discount', 'required|integer');
---
> 		$this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|numeric');
> 		$this->form_validation->set_rules('discount', 'lang:items_discount', 'required|numeric');
86,92c110,115
<     	$description = $this->input->post("description");
<     	$serialnumber = $this->input->post("serialnumber");
< 		$price = $this->input->post("price");
< 		$unit_price = $this->input->post("unit_price");
< 		$quantity = $this->input->post("quantity");
<                 $discount = $this->input->post("discount");
<                 $item_location = $this->input->post("location");
---
>     	$description = $this->input->post('description');
>     	$serialnumber = $this->input->post('serialnumber');
> 		$price = $this->input->post('price');
> 		$quantity = $this->input->post('quantity');
> 		$discount = $this->input->post('discount');
> 		$item_location = $this->input->post('location');
106c129
<      function edit_item_unit($item_id)
---
> 	function edit($receiving_id)
110,114c133,134
<          $this->form_validation->set_rules('quantity', 'lang:items_quantity', 'required|integer');
<          $quantity = $this->input->post("quantity");
<  
<  
<          if ($this->form_validation->run() != FALSE)
---
> 		$data['suppliers'] = array('' => 'No Supplier');
> 		foreach ($this->Supplier->get_all()->result() as $supplier)
116c136
<              $this->receiving_lib->edit_item_unit($item_id,$description,$quantity,0,0);
---
> 			$data['suppliers'][$supplier->person_id] = $supplier->first_name . ' ' . $supplier->last_name;
118c138,140
<          else
---
> 	
> 		$data['employees'] = array();
> 		foreach ($this->Employee->get_all()->result() as $employee)
120c142
<              $data['error']=$this->lang->line('recvs_error_editing_item');
---
> 			$data['employees'][$employee->person_id] = $employee->first_name . ' '. $employee->last_name;
123c145,150
<          $this->_reload($data);
---
> 		$receiving_info = $this->Receiving->get_info($receiving_id)->row_array();
> 		$person_name = $receiving_info['first_name'] . " " . $receiving_info['last_name'];
> 		$data['selected_supplier'] = !empty($receiving_info['supplier_id']) ? $receiving_info['supplier_id'] . "|" . $person_name : "";
> 		$data['receiving_info'] = $receiving_info;
> 	
> 		$this->load->view('receivings/form', $data);
131a159,174
> 	function delete($receiving_id = -1, $update_inventory=TRUE) 
> 	{
> 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
> 		$receiving_ids=$receiving_id == -1 ? $this->input->post('ids') : array($receiving_id);
> 	
> 		if($this->Receiving->delete_list($receiving_ids, $employee_id, $update_inventory))
> 		{
> 			echo json_encode(array('success'=>true,'message'=>$this->lang->line('recvs_successfully_deleted').' '.
> 					count($receiving_ids).' '.$this->lang->line('recvs_one_or_multiple'),'ids'=>$receiving_ids));
> 		}
> 		else
> 		{
> 			echo json_encode(array('success'=>false,'message'=>$this->lang->line('recvs_cannot_be_deleted')));
> 		}
> 	}
> 
133a177
> 		$this->receiving_lib->clear_invoice_number();
143c187
< 		$data['transaction_time']= date('m/d/Y h:i:s a');
---
> 		$data['transaction_time']= date($this->config->item('dateformat').' '.$this->config->item('timeformat'));
145,146c189
<                 $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
<                 $data['show_stock_locations'] = count($stock_locations) > 1;
---
> 		$data['show_stock_locations']=$this->Stock_location->show_locations('receivings');
152d194
< 		$data['payment_type']=$this->input->post('payment_type');
154,155c196
< 
< 		if ($this->input->post('amount_tendered'))
---
> 		if ( $this->input->post('amount_tendered') != null )
161c202
< 
---
> 		$suppl_info	='';
165,170c206
< 			$data['supplier']=$suppl_info->first_name.' '.$suppl_info->last_name;
< 			$data['supplier_2']=$suppl_info->address_1;
< 			$data['supplier_3']=$suppl_info->city.', '.$suppl_info->state.' '.$suppl_info->zip;
< 			if ( $data['supplier_3'] == ',  ' ) $data['supplier_3'] = '';
< 			$data['supplier_4']=$suppl_info->phone_number;
< 			$data['supplier_5']=$suppl_info->account_number;
---
> 			$data['supplier']=$suppl_info->company_name;  //   first_name.' '.$suppl_info->last_name;
172c208,218
< 
---
> 		$invoice_number=$this->_substitute_invoice_number($suppl_info);
> 		if ($this->receiving_lib->is_invoice_number_enabled() && $this->Receiving->invoice_number_exists($invoice_number))
> 		{
> 			$data['error']=$this->lang->line('recvs_invoice_number_duplicate');
> 			$this->_reload($data);
> 		}
> 		else
> 		{
> 			$invoice_number = $this->receiving_lib->is_invoice_number_enabled() ? $invoice_number : null;
> 			$data['invoice_number']=$invoice_number;
> 			$data['payment_type']=$this->input->post('payment_type');
174c220
<                 $data['receiving_id']='RECV '.$this->Receiving->save($data['cart'], $supplier_id,$employee_id,$comment,$payment_type,$data['stock_location']);
---
> 			$data['receiving_id']='RECV '.$this->Receiving->save($data['cart'], $supplier_id,$employee_id,$comment,$invoice_number,$payment_type,$data['stock_location']);
180c226,227
< 
---
> 			$data['barcode']=$this->barcode_lib->generate_receipt_barcode($data['receiving_id']);
> 			$data['print_after_sale'] = $this->receiving_lib->is_print_after_sale();
183c230,276
<                 $this->_remove_duplicate_cookies();
---
> 		}
> 	}
> 	
> 	private function _substitute_variable($text, $variable, $object, $function)
> 	{
> 		// don't query if this variable isn't used
> 		if (strstr($text, $variable))
> 		{
> 			$value = call_user_func(array($object, $function));
> 			$text = str_replace($variable, $value, $text);
> 		}
> 		return $text;
> 	}
> 	
> 	private function _substitute_variables($text,$supplier_info)
> 	{
> 		$text=$this->_substitute_variable($text, '$YCO', $this->Receiving, 'get_invoice_number_for_year');
> 		$text=$this->_substitute_variable($text, '$CO', $this->Receiving , 'get_invoice_count');
> 		$text=strftime($text);
> 		$text=$this->_substitute_supplier($text, $supplier_info);
> 		return $text;
> 	}
> 	
> 
> 	private function _substitute_supplier($text,$supplier_info)
> 	{
> 		$supplier_id=$this->receiving_lib->get_supplier();
> 		if($supplier_id!=-1)
> 		{
> 			$text=str_replace('$SU',$supplier_info->company_name,$text);
> 			$words = preg_split("/\s+/", trim($supplier_info->company_name));
> 			$acronym = "";
> 			foreach ($words as $w) {
> 				$acronym .= $w[0];
> 			}
> 			$text=str_replace('$SI',$acronym,$text);
> 		}
> 		return $text;
> 	}
> 	
> 	private function _substitute_invoice_number($supplier_info='')
> 	{
> 		$invoice_number=$this->receiving_lib->get_invoice_number();
> 		$invoice_number=$this->config->config['recv_invoice_format'];
> 		$invoice_number = $this->_substitute_variables($invoice_number,$supplier_info);
> 		$this->receiving_lib->set_invoice_number($invoice_number);
> 		return $this->receiving_lib->get_invoice_number();
214,216c307,308
<                 $data['transaction_time']= date('m/d/Y h:i:s a', strtotime($receiving_info['receiving_time']));
<                 $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
<                 $data['show_stock_locations'] = count($stock_locations) > 1;
---
> 		$data['transaction_time']= date($this->config->item('dateformat').' '.$this->config->item('timeformat'), strtotime($receiving_info['receiving_time']));
> 		$data['show_stock_locations']=$this->Stock_location->show_locations('receivings');
220c312,314
< 
---
> 		$data['invoice_number']=$this->receiving_lib->get_invoice_number();
> 		$data['receiving_id']='RECV '.$receiving_id;
> 		$data['barcode']=$this->barcode_lib->generate_receipt_barcode($data['receiving_id']);
228c322
< 		$data['receiving_id']='RECV '.$receiving_id;
---
> 		$data['print_after_sale'] = FALSE;
231d324
<                 $this->_remove_duplicate_cookies();
234c327
< 	function _reload($data=array())
---
> 	private function _reload($data=array())
236,239d328
<          $data['stock_locations'] = array();
<          $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
<                 $show_stock_locations = count($stock_locations) > 1;
<  
246,248c334,336
<          if ($show_stock_locations) {
<                 $data['modes']['requisition'] = $this->lang->line('recvs_requisition');
<                 foreach($stock_locations as $location_data)
---
> 		$data['stock_locations']=$this->Stock_location->get_allowed_locations('receivings');
> 		$show_stock_locations = count($data['stock_locations']) > 1;
>         if ($show_stock_locations) 
250,252c338
<                     $data['stock_locations'][$location_data['location_id']] = $location_data['location_name'];
<                 }
<  
---
>         	$data['modes']['requisition']=$this->lang->line('recvs_requisition');
259c345,346
< 		$data['items_module_allowed'] = $this->Employee->has_permission('items', $person_info->person_id);
---
> 		$data['items_module_allowed']=$this->Employee->has_grant('items',$person_info->person_id);
> 		$data['comment']=$this->receiving_lib->get_comment();
264,268c351
< 			$this->lang->line('sales_credit') => $this->lang->line('sales_credit'),
< 			$this->lang->line('sales_layaway_bal') => $this->lang->line('sales_layaway_bal'),
< 			$this->lang->line('sales_oos_pmt') => $this->lang->line('sales_oos_pmt'),
< 			$this->lang->line('sales_deposit') => $this->lang->line('sales_deposit'),
< 			$this->lang->line('sales_house_acct') => $this->lang->line('sales_house_acct')
---
> 			$this->lang->line('sales_credit') => $this->lang->line('sales_credit')
271a355
> 		$suppl_info='';
274,275c358,359
< 			$info=$this->Supplier->get_info($supplier_id);
< 			$data['supplier']=$info->first_name.' '.$info->last_name;
---
> 			$suppl_info=$this->Supplier->get_info($supplier_id);
> 			$data['supplier']=$suppl_info->company_name;  // first_name.' '.$info->last_name;
276a361,363
> 		$data['invoice_number']=$this->_substitute_invoice_number($suppl_info);
> 		$data['invoice_number_enabled']=$this->receiving_lib->is_invoice_number_enabled();
> 		$data['print_after_sale']=$this->receiving_lib->is_print_after_sale();
278c365,369
<                 $this->_remove_duplicate_cookies();
---
> 	}
> 	
> 	function save($receiving_id)
> 	{
> 		$date_formatter = date_create_from_format($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), $this->input->post('date', TRUE));
279a371,394
> 		$receiving_data = array(
> 			'receiving_time' => $date_formatter->format('Y-m-d H:i:s'),
> 			'supplier_id' => empty($this->input->post('supplier_id')) ? NULL : $this->input->post('supplier_id'),
> 			'employee_id' => $this->input->post('employee_id'),
> 			'comment' => $this->input->post('comment'),
> 			'invoice_number' => $this->input->post('invoice_number')
> 		);
> 	
> 		if ($this->Receiving->update($receiving_data, $receiving_id))
> 		{
> 			echo json_encode(array(
> 				'success'=>true,
> 				'message'=>$this->lang->line('recvs_successfully_updated'),
> 				'id'=>$receiving_id)
> 			);
> 		}
> 		else
> 		{
> 			echo json_encode(array(
> 				'success'=>false,
> 				'message'=>$this->lang->line('recvs_unsuccessfully_updated'),
> 				'id'=>$receiving_id)
> 			);
> 		}
287a403,409
>     function check_invoice_number()
>     {
> 		$receiving_id=$this->input->post('receiving_id');
> 		$invoice_number=$this->input->post('invoice_number');
> 		$exists=!empty($invoice_number) && $this->Receiving->invoice_number_exists($invoice_number,$receiving_id);
> 		echo !$exists ? 'true' : 'false';
>     }
Only in pos-prod/application/controllers: receivings.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/reports.php opensourcepos/application/controllers/Reports.php
11a13,23
> 		$method_name = $this->uri->segment(2);
> 		$exploder = explode('_', $method_name);
> 		preg_match("/(?:inventory)|([^_.]*)(?:_graph|_row)?$/", $method_name, $matches);
> 		preg_match("/^(.*?)([sy])?$/", array_pop($matches), $matches);
> 		$submodule_id = $matches[1] . ((count($matches) > 2) ? $matches[2] : "s");
> 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
> 		// check access to report submodule
> 		if (sizeof($exploder) > 1 && !$this->Employee->has_grant('reports_'.$submodule_id,$employee_id))
> 		{
> 			redirect('no_access/reports/reports_' . $submodule_id);
> 		}
18c30,31
< 		$this->load->view("reports/listing",array());	
---
> 		$data['grants']=$this->Employee->get_employee_grants($this->session->userdata('person_id'));
> 		$this->load->view("reports/listing",$data);
42c55
<  	function get_detailed_sales_row($sale_id, $sale_type=1)
---
>  	function get_detailed_sales_row($sale_id)
47c60
< 		$report_data = $model->getDataBySaleId($sale_id, $sale_type);
---
> 		$report_data = $model->getDataBySaleId($sale_id);
58a72
> 				to_currency($report_data['cost']),
62c76,97
< 		echo get_detailed_sales_data_row($summary_data, $this);
---
> 		echo get_detailed_data_row($summary_data, $this);
> 	}
> 
> 	function get_detailed_receivings_row($receiving_id)
> 	{
> 		$this->load->model('reports/Detailed_receivings');
> 		$model = $this->Detailed_receivings;
> 
> 		$report_data = $model->getDataByReceivingId($receiving_id);
> 
> 		$summary_data = array(anchor('receivings/edit/'.$report_data['receiving_id'] . '/width:'.FORM_WIDTH,
> 				'RECV '.$report_data['receiving_id'],
> 				array('class' => 'thickbox')),
> 				$report_data['receiving_date'],
> 				$report_data['items_purchased'],
> 				$report_data['employee_name'],
> 				$report_data['supplier_name'],
> 				to_currency($report_data['total']),
> 				$report_data['payment_type'],
> 				$report_data['invoice_number'],
> 				$report_data['comment']);
> 		echo get_detailed_data_row($summary_data, $this);
67c102
< 		$end_date = $end_date ?: $start_date;
---
> 		$end_date = $end_date ? $end_date : $start_date;
87c122
< 			$tabular_data[] = array($row['sale_date'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
---
> 			$tabular_data[] = array($row['sale_date'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
92c127
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
112c147
< 			$tabular_data[] = array($row['category'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
---
> 			$tabular_data[] = array($row['category'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
117c152
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
137c172
< 			$tabular_data[] = array($row['customer'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
---
> 			$tabular_data[] = array($row['customer'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
142c177
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
162c197
< 			$tabular_data[] = array($row['supplier'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
---
> 			$tabular_data[] = array($row['supplier'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
167c202
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
187c222
< 			$tabular_data[] = array(character_limiter($row['name'], 16), $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
---
> 			$tabular_data[] = array(character_limiter($row['name'], 40), $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
192c227
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
212c247
< 			$tabular_data[] = array($row['employee'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']));
---
> 			$tabular_data[] = array($row['employee'], $row['quantity_purchased'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']));
217c252
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
237c272
< 			$tabular_data[] = array($row['percent'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']));
---
> 			$tabular_data[] = array($row['percent'], $row['count'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']));
242c277
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
267c302
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
276a312
> 	//Summary payments report
286c322
< 			$tabular_data[] = array($row['payment_type'],to_currency($row['payment_amount']));
---
> 			$tabular_data[] = array($row['payment_type'], $row['count'], to_currency($row['payment_amount']));
291c327
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
309c345,346
<     function date_input_recv()
---
> 	//Input for reports that require only a date range. (see routes.php to see that all graphical summary reports route here)
> 	function date_input_sales()
311d347
< 	    //log_message('error',print_r($this,true));
313,321c349,352
< 	    $data['specific_input_name'] = "Suppliers";
<         $data['mode'] = 'receiving';
< 	    $suppliers = array();
< 	    $suppliers[-1]=' ';
< 	    foreach($this->Supplier->get_all()->result() as $supplier)
< 	    {
< 		    $suppliers[$supplier->person_id]=$supplier->first_name." ".$supplier->last_name;
< 	    }
< 	    $data['specific_input_data']=$suppliers;
---
> 		$stock_locations = $this->Stock_location->get_allowed_locations('sales');
> 		$stock_locations['all'] =  $this->lang->line('reports_all');
> 		$data['stock_locations'] = array_reverse($stock_locations, TRUE);
>         $data['mode'] = 'sale';
325c356
<     function date_input_reqs()
---
>     function date_input_recv()
328c359,362
<         $data['mode'] = 'requisition';
---
> 		$stock_locations = $this->Stock_location->get_allowed_locations('receivings');
> 		$stock_locations['all'] =  $this->lang->line('reports_all');
> 		$data['stock_locations'] = array_reverse($stock_locations, TRUE);
>  		$data['mode'] = 'receiving';
341c375
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
358c392
< 			$graph_data[date('m/d/Y', strtotime($row['sale_date']))]= $row['total'];
---
> 			$graph_data[date($this->config->item('dateformat'), strtotime($row['sale_date']))]= $row['total'];
381c415
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
420c454
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
447a482
> 	//Graphical summary suppliers report
456c491
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
483a519
> 	//Graphical summary employees report
492c528
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
519a556
> 	//Graphical summary taxes report
528c565
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
565c602
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
604c641
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
633a671
> 	//Graphical summary payments report
642c680
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
698c737
< 			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']), $row['payment_type'], $row['comment']);
---
> 			$summary_data[] = array(anchor('sales/receipt/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']), $row['payment_type'], $row['comment']);
702c741
< 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),to_currency($drow['profit']), $drow['discount_percent'].'%');
---
> 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']), to_currency($drow['cost']), to_currency($drow['profit']), $drow['discount_percent'].'%');
709c748
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
712a752
> 			"header_width" => intval(100 / count($headers['summary'])),
747c787
< 			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']), $row['payment_type'], $row['comment']);
---
> 			$summary_data[] = array(anchor('sales/receipt/'.$row['sale_id'], 'POS '.$row['sale_id'], array('target' => '_blank')), $row['sale_date'], $row['items_purchased'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']), $row['payment_type'], $row['comment']);
751c791
< 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),to_currency($drow['profit']), $drow['discount_percent'].'%');
---
> 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']), to_currency($drow['cost']), to_currency($drow['profit']), $drow['discount_percent'].'%');
758c798
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
761a802
> 			"header_width" => intval(100 / count($headers)),
800c841
< 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),/*to_currency($drow['profit']),*/ $drow['discount_percent'].'%');
---
> 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),/*to_currency($drow['profit']),*/ $drow['discount_percent'].'%');
806c847
< 					"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 					"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
819c860
< 	function detailed_sales($start_date, $end_date, $sale_type, $export_excel=0)
---
> 	function detailed_sales($start_date, $end_date, $sale_type, $location_id='all', $export_excel=0)
825c866
< 		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type));
---
> 		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type, 'location_id' => $location_id));
829a871,872
> 		$show_locations = $this->Stock_location->multiple_locations();
> 
832c875
< 			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'] . '/width:'.FORM_WIDTH, 'POS '.$row['sale_id'], array('class' => 'thickbox')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']),to_currency($row['profit']), $row['payment_type'], $row['comment']);
---
> 			$summary_data[] = array(anchor('sales/edit/'.$row['sale_id'] . '/width:'.FORM_WIDTH, 'POS '.$row['sale_id'], array('class' => 'thickbox')), $row['sale_date'], $row['items_purchased'], $row['employee_name'], $row['customer_name'], to_currency($row['subtotal']), to_currency($row['total']), to_currency($row['tax']), to_currency($row['cost']), to_currency($row['profit']), $row['payment_type'], $row['comment']);
836c879,884
< 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $drow['quantity_purchased'], to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']),to_currency($drow['profit']), $drow['discount_percent'].'%');
---
> 				$quantity_purchased = $drow['quantity_purchased'];
> 				if ($show_locations)
> 				{
> 					$quantity_purchased .= ' [' . $this->Stock_location->get_location_name($drow['item_location']) . ']';
> 				}
> 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['serialnumber'], $drow['description'], $quantity_purchased, to_currency($drow['subtotal']), to_currency($drow['total']), to_currency($drow['tax']), to_currency($drow['cost']), to_currency($drow['profit']), $drow['discount_percent'].'%');
842c890
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
844c892
< 			"editable" => true,	
---
> 			"editable" => "sales",
848c896
< 			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type)),
---
> 			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'sale_type' => $sale_type, 'location_id' => $location_id)),
855c903
< 	function detailed_receivings($start_date, $end_date, $receiving_type, $supplier_id, $export_excel=0)
---
> 	function detailed_receivings($start_date, $end_date, $receiving_type, $location_id='all', $export_excel=0)
861c909
< 		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type' => $receiving_type, 'supplier_id' => $supplier_id));
---
> 		$report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type'=>$receiving_type, 'location_id' => $location_id));
865a914,915
> 		$show_locations = $this->Stock_location->multiple_locations();
> 
868c918
< 			$summary_data[] = array(anchor('receivings/receipt/'.$row['receiving_id'], 'RECV '.$row['receiving_id'], array('target' => '_blank')), $row['receiving_date'], $row['items_purchased'], $row['employee_name'], $row['supplier_name'], to_currency($row['total']), $row['payment_type'], $row['comment']);
---
> 			$summary_data[] = array(anchor('receivings/edit/'.$row['receiving_id'].'/width:'.FORM_WIDTH, 'RECV '.$row['receiving_id'], array('class' => 'thickbox')), $row['receiving_date'], $row['items_purchased'], $row['employee_name'], $row['supplier_name'], to_currency($row['total']), $row['payment_type'], $row['invoice_number'], $row['comment']);
872c922,927
< 				$details_data[$key][] = array($drow['name'], $drow['category'], $drow['quantity_purchased'], to_currency($drow['total']), $drow['discount_percent'].'%');
---
> 				$quantity_purchased = $drow['receiving_quantity'] > 1 ? $drow['quantity_purchased'] . ' x ' . $drow['receiving_quantity'] : $drow['quantity_purchased'];
> 				if ($show_locations)
> 				{
> 					$quantity_purchased .= ' [' . $this->Stock_location->get_location_name($drow['item_location']) . ']';
> 				}
> 				$details_data[$key][] = array($drow['item_number'], $drow['name'], $drow['category'], $quantity_purchased, to_currency($drow['total']), $drow['discount_percent'].'%');
878c933
< 			"subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
---
> 			"subtitle" => date($this->config->item('dateformat'), strtotime($start_date)) .'-'.date($this->config->item('dateformat'), strtotime($end_date)),
879a935,936
> 			"header_width" => intval(100 / count($headers['summary'])),
> 			"editable" => "receivings",
882c939,940
< 			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type' => $receiving_type, 'supplier_id' => $supplier_id)),
---
> 			"header_width" => intval(100 / count($headers['summary'])),
> 			"overall_summary_data" => $model->getSummaryData(array('start_date'=>$start_date, 'end_date'=>$end_date, 'receiving_type' => $receiving_type, 'location_id' => $location_id)),
889,921d946
<     function detailed_requisition($start_date, $end_date , $export_excel=0)
<     {
<         $this->load->model('reports/Detailed_requisition');
<         $model = $this->Detailed_requisition;
<         $report_data = $model->getData(array('start_date'=>$start_date, 'end_date'=>$end_date));
<         
<         $summary_data = array();
<         $details_data = array();
<         
<         foreach($report_data['summary'] as $key=>$row)
<         {
<             $summary_data[] = array(anchor('receivings/requisition_receipt/'.$row['requisition_id'], 'REQS '.$row['requisition_id'], array('target' => '_blank')), $row['requisition_date'], $row['employee_name'], $row['comment']);
<             
<             foreach($report_data['details'][$key] as $drow)
<             {
<                 $details_data[$key][] = array($drow['name'], $drow['requisition_quantity'], 
<                                                 $drow['related_item_id'], $drow['related_item_quantity'],
<                                                 $drow['related_item_total_quantity']);
<             }
<         }
<              
<         $data = array(
<             "title" =>$this->lang->line('reports_detailed_requisition_report'),
<             "subtitle" => date('m/d/Y', strtotime($start_date)) .'-'.date('m/d/Y', strtotime($end_date)),
<             "headers" => $model->getDataColumns(),
<             "summary_data" => $summary_data,
<             "details_data" => $details_data,
<             "overall_summary_data" => '',
<             "export_excel" => $export_excel
<         );
<         $this->load->view("reports/tabular_details",$data);
<     }
<     
939c964
< 			"title" => $this->lang->line('reports_low_inventory_report'),
---
> 			"title" => $this->lang->line('reports_inventory_low_report'),
950c975,990
< 	function inventory_summary($export_excel=0)
---
> 	function inventory_summary_input()
> 	{
> 		$data = array();
> 
> 		$this->load->model('reports/Inventory_Summary');
> 		$model = $this->Inventory_Summary;
> 		$data['item_count'] = $model->getItemCountDropdownArray();
> 
> 		$stock_locations = $this->Stock_location->get_allowed_locations();
> 		$stock_locations['all'] =  $this->lang->line('reports_all');
> 		$data['stock_locations'] = array_reverse($stock_locations, TRUE);
> 
> 		$this->load->view("reports/inventory_summary_input", $data);
> 	}
> 
> 	function inventory_summary($export_excel=0, $location_id = 'all', $item_count = 'all')
955c995
< 		$report_data = $model->getData(array());
---
> 		$report_data = $model->getData(array('location_id'=>$location_id,'item_count'=>$item_count));
958c998,1006
< 			$tabular_data[] = array($row['name'], $row['item_number'], $row['description'], $row['quantity'], $row['reorder_level'],$row['location_name']);
---
> 			$tabular_data[] = array($row['name'],
> 								$row['item_number'],
> 								$row['description'],
> 								$row['quantity'],
> 								$row['reorder_level'],
> 								$row['location_name'],
> 								to_currency($row['cost_price']),
> 								to_currency($row['unit_price']),
> 								to_currency($row['sub_total_value']));
966c1014
< 			"summary_data" => $model->getSummaryData(array()),
---
> 			"summary_data" => $model->getSummaryData($report_data),
Only in pos-prod/application/controllers: reports.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/sales.php opensourcepos/application/controllers/Sales.php
8a10
> 		$this->load->library('barcode_lib');
15a18,132
> 	function manage($only_invoices = FALSE, $only_cash = FALSE, $limit_from = 0)
> 	{
> 		$person_id = $this->session->userdata('person_id');
> 
> 		if (!$this->Employee->has_grant('reports_sales', $person_id))
> 		{
> 			redirect('no_access/sales/reports_sales');
> 		}
> 		else
> 		{
> 			$this->Sale->create_sales_items_temp_table();
> 
> 			$data['controller_name'] = $this->get_controller_name();
> 			$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 			$today = date($this->config->item('dateformat'));
> 
> 			$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $today;
> 			$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
> 			$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
> 			$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
> 
> 			$sale_type = 'all';
> 			$location_id = 'all';
> 			$is_valid_receipt = FALSE;
> 			$search = null;
> 
> 			$filters = array('sale_type' => $sale_type,
> 							'location_id' => $location_id,
> 							'start_date' => $start_date_formatter->format('Y-m-d'),
> 							'end_date' => $end_date_formatter->format('Y-m-d'),
> 							'only_invoices' => $only_invoices,
> 							'only_cash' => $only_cash,
> 							'is_valid_receipt' => $is_valid_receipt);
> 
> 			$sales = $this->Sale->search($search, $filters, $lines_per_page, $limit_from)->result_array();
> 			$payments = $this->Sale->get_payments_summary($search, $filters);
> 			$total_rows = $this->Sale->get_found_rows($search, $filters);
> 			$data['only_invoices'] = $only_invoices;
> 			$data['only_cash '] = $only_cash;
> 			$data['start_date'] = $start_date_formatter->format($this->config->item('dateformat'));
> 			$data['end_date'] = $end_date_formatter->format($this->config->item('dateformat'));
> 			$data['links'] = $this->_initialize_pagination($this->Sale, $lines_per_page, $limit_from, $total_rows, 'manage', $only_invoices);
> 			$data['manage_table'] = get_sales_manage_table($sales, $this);
> 			$data['payments_summary'] = get_sales_manage_payments_summary($payments, $sales, $this);
> 
> 			$this->load->view($data['controller_name'] . '/manage', $data);
> 		}
> 
> 	}
> 	
> 	function get_row()
> 	{
> 		$this->Sale->create_sales_items_temp_table();
> 
> 		$sale_id = $this->input->post('row_id');
> 		$sale_info = $this->Sale->get_info($sale_id)->result_array();
> 		$data_row = get_sales_manage_sale_data_row($sale_info[0], $this);
> 
> 		echo $data_row;
> 	}
> 	
> 	/**
> 	 *
> 	 * Get the width for the add/edit form.
> 	 * @return number The form width
> 	 */
> 	function get_form_width()
> 	{
> 		return 400;
> 	}
> 
> 	/*
> 	Returns Sales table data rows. This will be called with AJAX.
> 	*/
> 	function search()
> 	{
> 		$this->Sale->create_sales_items_temp_table();
> 
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 		$today = date($this->config->item('dateformat'));
> 
> 		$start_date = $this->input->post('start_date') != null ? $this->input->post('start_date') : $today;
> 		$start_date_formatter = date_create_from_format($this->config->item('dateformat'), $start_date);
> 		$end_date = $this->input->post('end_date') != null ? $this->input->post('end_date') : $today;
> 		$end_date_formatter = date_create_from_format($this->config->item('dateformat'), $end_date);
> 
> 		$is_valid_receipt = isset($search) ? $this->sale_lib->is_valid_receipt($search) : FALSE;
> 
> 		$sale_type = 'all';
> 		$location_id = 'all';
> 		$only_invoices = $this->input->post('only_invoices') != null;
> 		$only_cash = $this->input->post('only_cash') != null;
> 
> 		$filters = array('sale_type' => $sale_type,
> 						'location_id' => $location_id,
> 						'start_date' => $start_date_formatter->format('Y-m-d'),
> 						'end_date' => $end_date_formatter->format('Y-m-d'),
> 						'only_invoices' => $only_invoices,
> 						'only_cash' => $only_cash,
> 						'is_valid_receipt' => $is_valid_receipt);
> 
> 		$sales = $this->Sale->search($search, $filters, $lines_per_page, $limit_from)->result_array();
> 		$payments = $this->Sale->get_payments_summary($search, $filters);
> 		$total_rows = $this->Sale->get_found_rows($search, $filters);
> 		$links = $this->_initialize_pagination($this->Sale, $lines_per_page, $limit_from, $total_rows, 'search', $only_invoices);
> 		$sale_rows = get_sales_manage_table_data_rows($sales, $this);
> 		$payment_summary = get_sales_manage_payments_summary($payments, $sales, $this);
> 
> 		echo json_encode(array('total_rows' => $total_rows, 'rows' => $sale_rows, 'pagination' => $links, 'payment_summary' => $payment_summary));
> 	}
> 
18,19c135,145
< 		$suggestions = $this->Item->get_item_search_suggestions($this->input->post('q'),$this->input->post('limit'));
< 		$suggestions = array_merge($suggestions, $this->Item_kit->get_item_kit_search_suggestions($this->input->post('q'),$this->input->post('limit')));
---
> 		$suggestions = array();
> 		$search = $this->input->post('q');
> 		$limit = $this->input->post('limit');
> 
> 		if ($this->sale_lib->get_mode() == 'return' && $this->sale_lib->is_valid_receipt($search) )
> 		{
> 			$suggestions[] = $search;
> 		}
> 		$suggestions = array_merge($suggestions, $this->Item->get_item_search_suggestions($search , $limit));
> 		$suggestions = array_merge($suggestions, $this->Item_kit->get_item_kit_search_suggestions($search, $limit));
> 
25c151,164
< 		$suggestions = $this->Customer->get_customer_search_suggestions($this->input->post('q'),$this->input->post('limit'));
---
> 		$search = $this->input->post('q');
> 		$limit = $this->input->post('limit');
> 		
> 		$suggestions = $this->Customer->get_customer_search_suggestions($search, $limit);
> 
> 		echo implode("\n", $suggestions);
> 	}
> 
> 	function suggest()
> 	{
> 		$search = $this->input->post('q');
> 		$limit = $this->input->post('limit');
> 		$suggestions = $this->Sale->get_search_suggestions($search, $limit);
> 
31c170,172
< 		$customer_id = $this->input->post("customer");
---
> 		$customer_id = $this->input->post('customer');
> 		if ($this->Customer->exists($customer_id))
> 		{
32a174
> 		}
41d182
< 			$this->sale_lib->clear_all();
45c186
< 		else
---
> 		else if ($this->Stock_location->is_allowed_location($stock_location, 'sales'))
56a198,212
> 	function set_invoice_number()
> 	{
> 		$this->sale_lib->set_invoice_number($this->input->post('sales_invoice_number'));
> 	}
> 	
> 	function set_invoice_number_enabled()
> 	{
> 		$this->sale_lib->set_invoice_number_enabled($this->input->post('sales_invoice_number_enabled'));
> 	}
> 	
> 	function set_print_after_sale()
> 	{
> 		$this->sale_lib->set_print_after_sale($this->input->post('sales_print_after_sale'));
> 	}
> 	
62c218
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
66c222
< 		$this->form_validation->set_rules('amount_tendered', 'lang:sales_amount_tendered', 'numeric');
---
> 		$this->form_validation->set_rules('amount_tendered', 'lang:sales_amount_tendered', 'trim|required|numeric');
70a227
> 			{
71a229
> 			}
72a231
> 			{
73a233
> 			}
88c250
< 				$data['error']='Giftcard balance is '.to_currency( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) ).' !';
---
> 				$data['error'] = $this->lang->line('giftcards_remaining_balance', $this->input->post('amount_tendered'), to_currency( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered'))));
92,96c254,258
< 			elseif ( ( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $this->sale_lib->get_total() ) > 0 )
< 			{
< 				$data['warning']='Giftcard balance is '.to_currency( $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $this->sale_lib->get_total() ).' !';
< 			}
< 			$payment_amount=min( $this->sale_lib->get_total(), $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) );
---
> 			$new_giftcard_value = $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) - $this->sale_lib->get_amount_due();
> 			$new_giftcard_value = ( $new_giftcard_value >= 0 ) ? $new_giftcard_value : 0;
> 			$this->sale_lib->set_giftcard_remainder($new_giftcard_value);
> 			$data['warning'] = $this->lang->line('giftcards_remaining_balance', $this->input->post('amount_tendered'), to_currency( $new_giftcard_value, TRUE ));
> 			$payment_amount = min( $this->sale_lib->get_amount_due( ), $this->Giftcard->get_giftcard_value( $this->input->post('amount_tendered') ) );
111c273
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
122c284
< 		$item_id_or_number_or_item_kit_or_receipt = $this->input->post("item");
---
> 		$item_id_or_number_or_item_kit_or_receipt = $this->input->post('item');
126c288
< 		if($this->sale_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt) && $mode=='return')
---
> 		if($mode == 'return' && $this->sale_lib->is_valid_receipt($item_id_or_number_or_item_kit_or_receipt))
134c296
< 		elseif(!$this->sale_lib->add_item($item_id_or_number_or_item_kit_or_receipt,$quantity,$item_location))
---
> 		else if(!$this->sale_lib->add_item($item_id_or_number_or_item_kit_or_receipt,$quantity,$item_location,$this->config->item('default_sales_discount')))
139,142c301,302
< 		if($this->sale_lib->out_of_stock($item_id_or_number_or_item_kit_or_receipt,$item_location))
< 		{
< 			$data['warning'] = $this->lang->line('sales_quantity_less_than_zero');
< 		}
---
> 		$data['warning'] = $this->sale_lib->out_of_stock($item_id_or_number_or_item_kit_or_receipt,$item_location);
> 
151a312
> 		$this->form_validation->set_rules('discount', 'lang:items_discount', 'required|numeric');
153,159c314,319
<         $description = $this->input->post("description");
<         $serialnumber = $this->input->post("serialnumber");
< 		$price = $this->input->post("price");
< 		$quantity = $this->input->post("quantity");
< 		$discount = $this->input->post("discount");
< 		$item_location = $this->input->post("location");
< 
---
> 		$description = $this->input->post('description');
> 		$serialnumber = $this->input->post('serialnumber');
> 		$price = $this->input->post('price');
> 		$quantity = $this->input->post('quantity');
> 		$discount = $this->input->post('discount');
> 		$item_location = $this->input->post('location');
169,174c329
< 		
< 		if($this->sale_lib->out_of_stock($this->sale_lib->get_item_id($line),$item_location))
< 		{
< 			$data['warning'] = $this->lang->line('sales_quantity_less_than_zero');
< 		}
< 
---
> 		$data['warning'] = $this->sale_lib->out_of_stock($this->sale_lib->get_item_id($line),$item_location);
186a342,343
> 		$this->sale_lib->clear_giftcard_remainder();
> 		$this->sale_lib->clear_invoice_number();
194a352,353
> 		$data['discounted_subtotal'] = $this->sale_lib->get_subtotal(TRUE);
> 		$data['tax_exclusive_subtotal'] = $this->sale_lib->get_subtotal(TRUE, TRUE);
196a356
> 		$data['discount'] = $this->sale_lib->get_discount();
198,200c358,360
< 		$data['transaction_time']= date('m/d/Y h:i:s a');
< 		$stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
< 		$data['show_stock_locations'] = count($stock_locations) > 1;
---
> 		$data['transaction_time'] = date($this->config->item('dateformat').' '.$this->config->item('timeformat'));
> 		$data['transaction_date'] = date($this->config->item('dateformat'));
> 		$data['show_stock_locations'] = $this->Stock_location->show_locations('sales');
203c363
< 		$comment = $this->sale_lib->get_comment();
---
> 		$data['comments'] = $this->sale_lib->get_comment();
206c366,367
< 		$data['amount_change']=to_currency($this->sale_lib->get_amount_due() * -1);
---
> 		$data['amount_change'] = $this->sale_lib->get_amount_due() * -1;
> 		$data['amount_due'] = $this->sale_lib->get_amount_due();
208c369,374
<         
---
> 		$data['company_info'] = implode("\n", array(
> 				$this->config->item('address'),
> 				$this->config->item('phone'),
> 				$this->config->item('account_number')
> 		));
> 		$cust_info = '';
211a378,383
> 			if (isset($cust_info->company_name))
> 			{
> 				$data['customer'] = $cust_info->company_name;
> 			}
> 			else
> 			{
214,216c386,406
< 
< 		//SAVE sale to database
< 		$data['sale_id']='POS '.$this->Sale->save($data['cart'], $customer_id,$employee_id,$comment,$data['payments']);
---
> 			$data['customer_address'] = $cust_info->address_1;
> 			$data['customer_location'] = $cust_info->zip . ' ' . $cust_info->city;
> 			$data['account_number'] = $cust_info->account_number;
> 			$data['customer_info'] = implode("\n", array(
> 				$data['customer'],
> 				$data['customer_address'],
> 				$data['customer_location'],
> 				$data['account_number']
> 			));
> 		}
> 		$invoice_number = $this->_substitute_invoice_number($cust_info);
> 		if ($this->sale_lib->is_invoice_number_enabled() && $this->Sale->invoice_number_exists($invoice_number))
> 		{
> 			$data['error'] = $this->lang->line('sales_invoice_number_duplicate');
> 			$this->_reload($data);
> 		}
> 		else 
> 		{
> 			$invoice_number = $this->sale_lib->is_invoice_number_enabled() ? $invoice_number : null;
> 			$data['invoice_number'] = $invoice_number;
> 			$data['sale_id'] = 'POS ' . $this->Sale->save($data['cart'], $customer_id, $employee_id, $data['comments'], $invoice_number, $data['payments']);
222a413,414
> 				$data['barcode'] = $this->barcode_lib->generate_receipt_barcode($data['sale_id']);
> 				// if we want to email. .. just attach the pdf in there?
231a424,436
> 					if ($this->config->item('use_invoice_template') && $this->sale_lib->is_invoice_number_enabled())
> 					{
> 						$data['image_prefix'] = "";
> 						$filename = $this->_invoice_email_pdf($data);
> 						$this->email->attach($filename);
> 						$text = $this->config->item('invoice_email_message');
> 						$text = str_replace('$INV', $invoice_number, $text);
> 						$text = str_replace('$CO', $data['sale_id'], $text);
> 						$text = $this->_substitute_customer($text, $cust_info);
> 						$this->email->message($text);
> 					}
> 					else
> 					{
232a438
> 					}
235a442,449
> 			$data['cur_giftcard_value'] = $this->sale_lib->get_giftcard_remainder();
> 			$data['print_after_sale'] = $this->sale_lib->is_print_after_sale();
> 			if ($this->sale_lib->is_invoice_number_enabled() && $this->config->item('use_invoice_template'))
> 			{
> 				$this->load->view("sales/invoice", $data);
> 			}
> 			else
> 			{
236a451,452
> 			}
> 
238d453
< 		$this->_remove_duplicate_cookies();
241c456,515
< 	function receipt($sale_id)
---
> 	}
> 	
> 	private function _invoice_email_pdf($data)
> 	{
> 		$data['image_prefix'] = "";
> 		$html = $this->load->view('sales/invoice_email', $data, true);
> 		// load pdf helper
> 		$this->load->helper(array('dompdf', 'file'));
> 		$file_content  = pdf_create($html, '', false);
> 		$filename = sys_get_temp_dir() . '/'. $this->lang->line('sales_invoice') .'-' . str_replace('/', '-' , $data["invoice_number"]) . '.pdf';
> 		write_file($filename, $file_content);
> 
> 		return $filename;
> 	}
> 	
> 	function invoice_email($sale_id)
> 	{
> 		$sale_data = $this->_load_sale_data($sale_id);
> 		$sale_data['image_prefix'] = base_url();
> 		$this->load->view('sales/invoice_email', $sale_data);
> 		$this->sale_lib->clear_all();
> 	}
> 	
> 	function send_invoice($sale_id)
> 	{
> 		$sale_data = $this->_load_sale_data($sale_id);
> 		$text = $this->config->item('invoice_email_message');
> 		$text = str_replace('$INV', $sale_data['invoice_number'], $text);
> 		$text = str_replace('$CO', 'POS ' . $sale_data['sale_id'], $text);
> 		$text = $this->_substitute_customer($text,(object) $sale_data);
> 		$result = FALSE;
> 		$message = $this->lang->line('sales_invoice_no_email');
> 		if (isset($sale_data["customer_email"]) && !empty( $sale_data["customer_email"])) {
> 			$this->load->library('email');
> 			$this->email->from($this->config->item('email'), $this->config->item('company'));
> 			$this->email->to($sale_data['customer_email']);
> 			$this->email->subject($this->lang->line('sales_invoice') . ' ' . $sale_data['invoice_number']);
> 			$this->email->message($text);
> 			$filename = $this->_invoice_email_pdf($sale_data);
> 			$this->email->attach($filename);
> 			$result = $this->email->send();
> 			$message = $this->lang->line($result ? 'sales_invoice_sent' : 'sales_invoice_unsent') . ' ' . $sale_data["customer_email"];
> 		}
> 		echo json_encode(array('success'=>$result, 'message'=>$message, 'id'=>$sale_id));
> 		$this->sale_lib->clear_all();
> 	}
> 	
> 	private function _substitute_variable($text, $variable, $object, $function)
> 	{
> 		// don't query if this variable isn't used
> 		if (strstr($text, $variable))
> 		{
> 			$value = call_user_func(array($object, $function));
> 			$text = str_replace($variable, $value, $text);
> 		}
> 
> 		return $text;
> 	}
> 	
> 	private function _substitute_customer($text, $cust_info)
242a517,564
> 		// substitute customer info
> 		$customer_id = $this->sale_lib->get_customer();
> 		if($customer_id != -1 && $cust_info != '')
> 		{
> 			$text = str_replace('$CU',$cust_info->first_name . ' ' . $cust_info->last_name,$text);
> 			$words = preg_split("/\s+/", trim($cust_info->first_name . ' ' . $cust_info->last_name));
> 			$acronym = "";
> 			foreach ($words as $w)
> 			{
> 				$acronym .= $w[0];
> 			}
> 			$text = str_replace('$CI',$acronym,$text);
> 		}
> 
> 		return $text;
> 	}
> 
> 	private function _is_custom_invoice_number($cust_info)
> 	{
> 		$invoice_number = $this->config->config['sales_invoice_format'];
> 		$invoice_number = $this->_substitute_variables($invoice_number, $cust_info);
> 		return $this->sale_lib->get_invoice_number() != $invoice_number;
> 	}
> 	
> 	private function _substitute_variables($text, $cust_info)
> 	{
> 		$text = $this->_substitute_variable($text, '$YCO', $this->Sale, 'get_invoice_number_for_year');
> 		$text = $this->_substitute_variable($text, '$CO', $this->Sale , 'get_invoice_count');
> 		$text = $this->_substitute_variable($text, '$SCO', $this->Sale_suspended, 'get_invoice_count');
> 		$text = strftime($text);
> 		$text = $this->_substitute_customer($text, $cust_info);
> 
> 		return $text;
> 	}
> 	
> 	private function _substitute_invoice_number($cust_info)
> 	{
> 		$invoice_number = $this->config->config['sales_invoice_format'];
> 		$invoice_number = $this->_substitute_variables($invoice_number, $cust_info);
> 		$this->sale_lib->set_invoice_number($invoice_number, TRUE);
> 		return $this->sale_lib->get_invoice_number();
> 	}
> 
> 	private function _load_sale_data($sale_id)
> 	{
> 		$this->Sale->create_sales_items_temp_table();
> 
> 		$this->sale_lib->clear_all();
245,246d566
< 		$stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
< 		$data['show_stock_locations'] = count($stock_locations) > 1;
249a570,571
> 		$data['discounted_subtotal'] = $this->sale_lib->get_subtotal(TRUE);
> 		$data['tax_exclusive_subtotal'] = $this->sale_lib->get_subtotal(TRUE, TRUE);
251a574
> 		$data['discount'] = $this->sale_lib->get_discount();
253c576,578
< 		$data['transaction_time']= date('m/d/Y h:i:s a', strtotime($sale_info['sale_time']));
---
> 		$data['transaction_time'] = date($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), strtotime($sale_info['sale_time']));
> 		$data['transaction_date'] = date($this->config->item('dateformat'), strtotime($sale_info['sale_time']));
> 		$data['show_stock_locations'] = $this->Stock_location->show_locations('sales');
255,257c580,583
< 		$emp_info=$this->Employee->get_info($sale_info['employee_id']);
< 		$data['payment_type']=$sale_info['payment_type'];
< 		$data['amount_change']=to_currency($this->sale_lib->get_amount_due() * -1);
---
> 		$employee_id = $this->Employee->get_logged_in_employee_info()->person_id;
> 		$emp_info = $this->Employee->get_info($employee_id);
> 		$data['amount_change'] = $this->sale_lib->get_amount_due() * -1;
> 		$data['amount_due'] = $this->sale_lib->get_amount_due();
262a589,594
> 			if (isset($cust_info->company_name))
> 			{
> 				$data['customer'] = $cust_info->company_name;
> 			}
> 			else
> 			{
264a597,609
> 			$data['first_name'] = $cust_info->first_name;
> 			$data['last_name'] = $cust_info->last_name;
> 			$data['customer_address'] = $cust_info->address_1;
> 			$data['customer_location'] = $cust_info->zip . ' ' . $cust_info->city;
> 			$data['customer_email'] = $cust_info->email;
> 			$data['account_number'] = $cust_info->account_number;
> 			$data['customer_info'] = implode("\n", array(
> 				$data['customer'],
> 				$data['customer_address'],
> 				$data['customer_location'],
> 				$data['account_number']
> 			));
> 		}
265a611,626
> 		$data['comments'] = $sale_info['comment'];
> 		$data['invoice_number'] = $sale_info['invoice_number'];
> 		$data['company_info'] = implode("\n", array(
> 			$this->config->item('address'),
> 			$this->config->item('phone'),
> 			$this->config->item('account_number')
> 		));
> 		$data['barcode'] = $this->barcode_lib->generate_receipt_barcode($data['sale_id']);
> 		$data['print_after_sale'] = FALSE;
> 
> 		return $data;
> 	}
> 	
> 	function receipt($sale_id)
> 	{
> 		$data = $this->_load_sale_data($sale_id);	
268d628
< 		$this->_remove_duplicate_cookies();
271c631
< 	function edit($sale_id)
---
> 	function invoice($sale_id, $sale_info='')
273c633,638
< 		$data = array();
---
> 		if ($sale_info == '') {
> 			$sale_info = $this->_load_sale_data($sale_id);
> 		}
> 		$this->load->view("sales/invoice",$sale_info);
> 		$this->sale_lib->clear_all();
> 	}
275,276c640
< 		$data['customers'] = array('' => 'No Customer');
< 		foreach ($this->Customer->get_all()->result() as $customer)
---
> 	function edit($sale_id)
278,279c642
< 			$data['customers'][$customer->person_id] = $customer->first_name . ' '. $customer->last_name;
< 		}
---
> 		$data = array();
285a649
> 		$this->Sale->create_sales_items_temp_table();
295c659,660
< 	function delete($sale_id = -1, $update_inventory=TRUE) {
---
> 	function delete($sale_id = -1, $update_inventory=TRUE)
> 	{
301c666
< 			echo json_encode(array('success'=>true,'message'=>$this->lang->line('sales_delete_successful').' '.
---
> 			echo json_encode(array('success'=>true, 'message'=>$this->lang->line('sales_successfully_deleted').' '.
306c671
< 			echo json_encode(array('success'=>false,'message'=>$this->lang->line('sales_delete_unsuccessful')));
---
> 			echo json_encode(array('success'=>false, 'message'=>$this->lang->line('sales_unsuccessfully_deleted')));
311a677,678
> 		$start_date_formatter = date_create_from_format($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), $this->input->post('date'));
> 
313,314c680,681
< 			'sale_time' => date('Y-m-d', strtotime($this->input->post('date'))),
< 			'customer_id' => $this->input->post('customer_id') ? $this->input->post('customer_id') : null,
---
> 			'sale_time' => $start_date_formatter->format('Y-m-d H:i:s'),
> 			'customer_id' => $this->input->post('customer_id') != '' ? $this->input->post('customer_id') : null,
316c683,684
< 			'comment' => $this->input->post('comment')
---
> 			'comment' => $this->input->post('comment'),
> 			'invoice_number' => $this->input->post('invoice_number') != '' ? $this->input->post('invoice_number') : null
321,325c689
< 			echo json_encode(array(
< 				'success'=>true,
< 				'message'=>$this->lang->line('sales_successfully_updated'),
< 				'id'=>$sale_id)
< 			);
---
> 			echo json_encode(array('success'=>true, 'message'=>$this->lang->line('sales_successfully_updated'), 'id'=>$sale_id));
329,333c693
< 			echo json_encode(array(
< 				'success'=>false,
< 				'message'=>$this->lang->line('sales_unsuccessfully_updated'),
< 				'id'=>$sale_id)
< 			);
---
> 			echo json_encode(array('success'=>false, 'message'=>$this->lang->line('sales_unsuccessfully_updated'), 'id'=>$sale_id));
337c697
< 	function _payments_cover_total()
---
> 	private function _payments_cover_total()
356c716
< 	function _reload($data=array())
---
> 	private function _reload($data=array())
363,370c723
<         $data['stock_locations'] = array();
<         $stock_locations = $this->Stock_locations->get_undeleted_all()->result_array();
<         $show_stock_locations = count($stock_locations) > 1;
<         if ($show_stock_locations) {
< 	        foreach($stock_locations as $location_data)
< 	        {            
< 	            $data['stock_locations'][$location_data['location_id']] = $location_data['location_name'];
< 	        }       		
---
> 		$data['stock_locations'] = $this->Stock_location->get_allowed_locations('sales');
372,373d724
<         }
<         $data['show_stock_locations'] = $show_stock_locations;
375c726,727
< 		$data['subtotal']=$this->sale_lib->get_subtotal();
---
> 		$data['subtotal'] = $this->sale_lib->get_subtotal(TRUE);
> 		$data['tax_exclusive_subtotal'] = $this->sale_lib->get_subtotal(TRUE, TRUE);
376a729
> 		$data['discount'] = $this->sale_lib->get_discount();
378c731
< 		$data['items_module_allowed'] = $this->Employee->has_permission('items', $person_info->person_id);
---
> 		$data['items_module_allowed'] = $this->Employee->has_grant('items', $person_info->person_id);
389,393c742
< 			$this->lang->line('sales_credit') => $this->lang->line('sales_credit'),
< 			$this->lang->line('sales_layaway_bal') => $this->lang->line('sales_layaway_bal'),
< 			$this->lang->line('sales_oos_pmt') => $this->lang->line('sales_oos_pmt'),
< 			$this->lang->line('sales_deposit') => $this->lang->line('sales_deposit'),
< 			$this->lang->line('sales_house_acct') => $this->lang->line('sales_house_acct')
---
> 			$this->lang->line('sales_credit') => $this->lang->line('sales_credit')
396a746
> 		$cust_info = '';
399,401c749,751
< 			$info=$this->Customer->get_info($customer_id);
< 			$data['customer']=$info->first_name.' '.$info->last_name;
< 			$data['customer_email']=$info->email;
---
> 			$cust_info = $this->Customer->get_info($customer_id);
> 			$data['customer'] = $cust_info->first_name . ' ' . $cust_info->last_name;
> 			$data['customer_email'] = $cust_info->email;
402a753,755
> 		$data['invoice_number'] = $this->_substitute_invoice_number($cust_info);
> 		$data['invoice_number_enabled'] = $this->sale_lib->is_invoice_number_enabled();
> 		$data['print_after_sale'] = $this->sale_lib->is_print_after_sale();
405c759
< 		$this->_remove_duplicate_cookies();
---
> 
422c775
< 		$data['transaction_time']= date('m/d/Y h:i:s a');
---
> 		$data['transaction_time'] = date($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'));
425c778,780
< 		$comment = $this->input->post('comment');
---
> 		$comment = $this->sale_lib->get_comment();
> 		$invoice_number = $this->sale_lib->get_invoice_number();
> 
427d781
< 		$payment_type = $this->input->post('payment_type');
429c783
< 		//Alain Multiple payments
---
> 		// Multiple payments
433a788
> 		$cust_info = '';
436a792,797
> 			if (isset($cust_info->company_name))
> 			{
> 				$data['customer'] = $cust_info->company_name;
> 			}
> 			else
> 			{
438a800,803
> 		}
> 
> 		$is_set = $this->_is_custom_invoice_number($cust_info);
> 		$invoice_number = $is_set ? $invoice_number : NULL;
444c809
< 			$total_payments += $payment['payment_amount'];
---
> 			$total_payments = bcadd($total_payments, $payment['payment_amount'], PRECISION);
448c813
< 		$data['sale_id']='POS '.$this->Sale_suspended->save($data['cart'], $customer_id,$employee_id,$comment,$data['payments']);
---
> 		$data['sale_id'] = 'POS ' . $this->Sale_suspended->save($data['cart'], $customer_id, $employee_id, $comment, $invoice_number, $data['payments']);
470a838,845
> 	}
> 	
> 	function check_invoice_number()
> 	{
> 		$sale_id = $this->input->post('sale_id');
> 		$invoice_number = $this->input->post('invoice_number');
> 		$exists = !empty($invoice_number) && $this->Sale->invoice_number_exists($invoice_number,$sale_id);
> 		echo !$exists ? 'true' : 'false';
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/secure_area.php opensourcepos/application/controllers/Secure_area.php
3a4,5
> 	private $controller_name;
> 	
8c10
< 	function __construct($module_id=null)
---
> 	function __construct($module_id=null,$submodule_id=null)
16,17c18,20
< 		
< 		if(!$this->Employee->has_permission($module_id,$this->Employee->get_logged_in_employee_info()->person_id))
---
> 		$employee_id=$this->Employee->get_logged_in_employee_info()->person_id;
> 		if(!$this->Employee->has_module_grant($module_id,$employee_id) || 
> 			(isset($submodule_id) && !$this->Employee->has_module_grant($submodule_id,$employee_id)))
19c22
< 			redirect('no_access/'.$module_id);
---
> 			redirect('no_access/'.$module_id.'/'.$submodule_id);
24a28,32
> 		$data['backup_allowed']=false;
> 		foreach($data['allowed_modules']->result_array() as $module) 
> 		{
> 			$data['backup_allowed']|=$module['module_id']==='config';
> 		}
25a34,35
> 		$data['controller_name']=$module_id;
> 		$this->controller_name=$module_id;
29,42c39
< 	function _remove_duplicate_cookies ()
< 	{
< 		//php < 5.3 doesn't have header remove so this function will fatal error otherwise
< 		if (function_exists('header_remove'))
< 		{
< 			$CI = &get_instance();
< 	
< 			// clean up all the cookies that are set...
< 			$headers             = headers_list();
< 			$cookies_to_output   = array ();
< 			$header_session_cookie = '';
< 			$session_cookie_name = $CI->config->item('sess_cookie_name');
< 	
< 			foreach ($headers as $header)
---
> 	function get_controller_name()
44,46c41,42
< 				list ($header_type, $data) = explode (':', $header, 2);
< 				$header_type = trim ($header_type);
< 				$data        = trim ($data);
---
> 		return strtolower($this->controller_name);
> 	}
48c44
< 				if (strtolower ($header_type) == 'set-cookie')
---
> 	function _initialize_pagination($object, $lines_per_page, $limit_from = 0, $total_rows = -1, $function='index', $filter='')
50c46
< 					header_remove ('Set-Cookie');
---
> 		$this->load->library('pagination');
52,54c48,57
< 					$cookie_value = current(explode (';', $data));
< 					list ($key, $val) = explode ('=', $cookie_value);
< 					$key = trim ($key);
---
> 		$config['base_url'] = site_url($this->get_controller_name() . "/$function/" . $filter);
> 		$config['total_rows'] = $total_rows > -1 ? $total_rows : call_user_func(array($object, 'get_total_rows'));
> 		$config['per_page'] = $lines_per_page;
> 		$config['num_links'] = 2;
> 		$config['last_link'] = $this->lang->line('common_last_page');
> 		$config['first_link'] = $this->lang->line('common_first_page');
> 		// page is calculated here instead of in pagination lib
> 		$config['cur_page'] = $limit_from > 0  ? $limit_from : 0;
> 		$config['page_query_string'] = FALSE;
> 		$config['uri_segment'] = 0;
56,68c59
< 					if ($key == $session_cookie_name)
< 					{
< 						// OVERWRITE IT (yes! do it!)
< 						$header_session_cookie = $data;
< 						continue;
< 					}
< 					else
< 					{
< 						// Not a session related cookie, add it as normal. Might be a CSRF or some other cookie we are setting
< 						$cookies_to_output[] = array ('header_type' => $header_type, 'data' => $data);
< 					}
< 				}
< 			}
---
> 		$this->pagination->initialize($config);
70,72c61
< 			if ( ! empty ($header_session_cookie))
< 			{
< 				$cookies_to_output[] = array ('header_type' => 'Set-Cookie', 'data' => $header_session_cookie);
---
> 		return $this->pagination->create_links();
75,80d63
< 			foreach ($cookies_to_output as $cookie)
< 			{
< 				header ("{$cookie['header_type']}: {$cookie['data']}", false);
< 			}
< 		}
< 	}
diff -rBwi --ignore-file-name-case pos-prod/application/controllers/suppliers.php opensourcepos/application/controllers/Suppliers.php
10c11
< 	function index()
---
> 	function index($limit_from=0)
12,18c13
< 		$config['base_url'] = site_url('/suppliers/index');
< 		$config['total_rows'] = $this->Supplier->count_all();
< 		$config['per_page'] = '20';
< 		$config['uri_segment'] = 3;
< 		$this->pagination->initialize($config);
< 		
< 		$data['controller_name']=strtolower(get_class());
---
> 		$data['controller_name'] = $this->get_controller_name();
20c15,19
< 		$data['manage_table']=get_supplier_manage_table( $this->Supplier->get_all( $config['per_page'], $this->uri->segment( $config['uri_segment'] ) ), $this );
---
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 		$suppliers = $this->Supplier->get_all($lines_per_page);
> 		
> 		$data['links'] = $this->_initialize_pagination($this->Supplier, $lines_per_page, $limit_from);
> 		$data['manage_table'] = get_supplier_manage_table($suppliers, $this);
29,31c28,37
< 		$search=$this->input->post('search');
< 		$data_rows=get_supplier_manage_table_data_rows($this->Supplier->search($search),$this);
< 		echo $data_rows;
---
> 		$search = $this->input->post('search') != '' ? $this->input->post('search') : null;
> 		$limit_from = $this->input->post('limit_from');
> 		$lines_per_page = $this->Appconfig->get('lines_per_page');
> 
> 		$suppliers = $this->Supplier->search($search, $lines_per_page, $limit_from);
> 		$total_rows = $this->Supplier->get_found_rows($search);
> 		$links = $this->_initialize_pagination($this->Supplier, $lines_per_page, $limit_from, $total_rows);
> 		$data_rows = get_supplier_manage_table_data_rows($suppliers, $this);
> 
> 		echo json_encode(array('total_rows' => $total_rows, 'rows' => $data_rows, 'pagination' => $links));
59a66
> 			'gender'=>$this->input->post('gender'),
72c79,80
< 		'account_number'=>$this->input->post('account_number')=='' ? null:$this->input->post('account_number'),
---
> 			'agency_name'=>$this->input->post('agency_name'),
> 			'account_number'=>$this->input->post('account_number') == '' ? null : $this->input->post('account_number')
74c82
< 		if($this->Supplier->save($person_data,$supplier_data,$supplier_id))
---
> 		if($this->Supplier->save_supplier($person_data,$supplier_data,$supplier_id))
diff -rBwi --ignore-file-name-case pos-prod/application/core/index.html opensourcepos/application/core/index.html
0a1
> <!DOCTYPE html>
Only in opensourcepos/application/core: MY_Lang.php
Only in pos-prod/application: errors
diff -rBwi --ignore-file-name-case pos-prod/application/helpers/currency_helper.php opensourcepos/application/helpers/currency_helper.php
2,3c2
< /** GARRISON MODIFIED 4/20/2013 **/
< function to_currency($number)
---
> function to_currency($number,$escape=FALSE)
6a6,8
> 	$currency_symbol = $currency_symbol == '$' && $escape ? '\$' : $currency_symbol; 
> 	$thousands_separator = $CI->config->item('thousands_separator') ? $CI->config->item('thousands_separator') : '';
> 	$decimal_point = $CI->config->item('decimal_point') ? $CI->config->item('decimal_point') : '.';
10c12
< 			return $currency_symbol.number_format($number, 2, '.', '');
---
> 			return $currency_symbol.number_format($number, 2, $decimal_point, $thousands_separator);
12c14
< 			return number_format($number, 2, '.', '').$currency_symbol;
---
> 			return number_format($number, 2, $decimal_point, $thousands_separator).$currency_symbol;
17c19
<     		return '-'.$currency_symbol.number_format(abs($number), 2, '.', '');
---
>     		return '-'.$currency_symbol.number_format(abs($number), 2, $decimal_point, $thousands_separator);
19c21
<     		return '-'.number_format(abs($number), 2, '.', '').$currency_symbol;
---
>     		return '-'.number_format(abs($number), 2, $decimal_point, $thousands_separator).$currency_symbol;
22d23
< /** END MODIFIED **/
Only in opensourcepos/application/helpers: dateformat_helper.php
Only in opensourcepos/application/helpers: dompdf
Only in opensourcepos/application/helpers: dompdf_helper.php
diff -rBwi --ignore-file-name-case pos-prod/application/helpers/index.html opensourcepos/application/helpers/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/helpers/report_helper.php opensourcepos/application/helpers/report_helper.php
6a8
> 	$today_last_year = date('Y-m-d', mktime(0,0,0,date("m"),date("d"),date("Y")-1));
10a13,14
> 	$start_of_this_month_last_year = date('Y-m-d', mktime(0,0,0,date("m"),1,date("Y")-1));
> 	$end_of_this_month_last_year = date('Y-m-d',strtotime('-1 second',strtotime('+1 month',strtotime(date('m').'/01/'.(date('Y')-1).' 00:00:00'))));
20a25
> 		$today_last_year . '/' . $today_last_year => $CI->lang->line('reports_today_last_year'),
22a28
> 		$start_of_this_month . '/' . $today => $CI->lang->line('reports_this_month_to_today'),
23a30,31
> 		$start_of_this_month_last_year . '/' . $today_last_year => $CI->lang->line('reports_this_month_to_today_last_year'),
> 		$start_of_this_month_last_year . '/' . $end_of_this_month_last_year	=> $CI->lang->line('reports_this_month_last_year'),
27c35
< 			$start_of_time . '/' . 	$today						=> $CI->lang->line('reports_all_time'),
---
> 		$start_of_time . '/' . 	$today => $CI->lang->line('reports_all_time')
86a98,122
> }
> 
> function show_report_if_allowed($report_prefix, $report_name, $person_id, $permission_id='')
> {
> 	$CI =& get_instance();
> 	$permission_id = empty($permission_id) ? 'reports_' . $report_name : $permission_id;	
> 	if ($CI->Employee->has_grant($permission_id, $person_id))
> 	{
> 		show_report($report_prefix, $report_name, $permission_id);
> 	}
> }
> 
> function show_report($report_prefix, $report_name, $lang_key='')
> {
> 	$CI =& get_instance();
> 	$lang_key = empty($lang_key) ? $report_name : $lang_key;
> 	$report_label = $CI->lang->line($lang_key);
> 	$report_prefix = empty($report_prefix) ? '' : $report_prefix . '_';
> 	// no summary nor detailed reports for receivings
> 	if (!empty($report_label) && $report_label != $lang_key .  ' (TBD)')
> 	{
> 		?>
> 			<li><a href="<?php echo site_url('reports/' . $report_prefix . preg_replace('/reports_(.*)/', '$1', $report_name));?>"><?php echo $report_label; ?></a></li>
> 		<?php 
> 	}
diff -rBwi --ignore-file-name-case pos-prod/application/helpers/table_helper.php opensourcepos/application/helpers/table_helper.php
1a2,117
> 
> function get_sales_manage_table($sales, $controller)
> {
> 	$CI =& get_instance();
> 	$table='<table class="tablesorter" id="sortable_table">';
> 
> 	$headers = array('&nbsp;',
> 	$CI->lang->line('sales_receipt_number'),
> 	$CI->lang->line('sales_sale_time'),
> 	$CI->lang->line('customers_customer'),
> 	$CI->lang->line('sales_amount_tendered'),
> 	$CI->lang->line('sales_amount_due'),
> 	$CI->lang->line('sales_change_due'),
> 	$CI->lang->line('sales_payment'),
> 	$CI->lang->line('sales_invoice_number'),
> 	'&nbsp');
> 
> 	$table.='<thead><tr>';
> 	foreach($headers as $header)
> 	{
> 		$table.="<th>$header</th>";
> 	}
> 	$table.='</tr></thead><tbody>';
> 	$table.=get_sales_manage_table_data_rows($sales, $controller);
> 	$table.='</tbody></table>';
> 
> 	return $table;
> }
> 
> /*
>  Gets the html data rows for the sales.
>  */
> function get_sales_manage_table_data_rows($sales, $controller)
> {
> 	$CI =& get_instance();
> 	$table_data_rows = '';
> 	$sum_amount_tendered = 0;
> 	$sum_amount_due = 0;
> 	$sum_change_due = 0;
> 
> 	foreach($sales as $key=>$sale)
> 	{
> 		$table_data_rows .= get_sales_manage_sale_data_row($sale, $controller);
> 		
> 		$sum_amount_tendered += $sale['amount_tendered'];
> 		$sum_amount_due += $sale['amount_due'];
> 		$sum_change_due += $sale['change_due'];
> 	}
> 
> 	if($table_data_rows == '')
> 	{
> 		$table_data_rows .= "<tr><td colspan='10'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('sales_no_sales_to_display')."</div></td></tr>";
> 	}
> 	else
> 	{
> 		$table_data_rows .= "<tr class='static-last'><td>&nbsp;</td><td>".$CI->lang->line('sales_total')."</td><td>&nbsp;</td><td>&nbsp;</td><td>".to_currency($sum_amount_tendered)."</td><td>".to_currency($sum_amount_due)."</td><td>".to_currency($sum_change_due)."</td><td colspan=\"3\"></td></tr>";
> 	}
> 
> 	return $table_data_rows;
> }
> 
> function get_sales_manage_sale_data_row($sale, $controller)
> {
> 	$CI =& get_instance();
> 	$controller_name = $CI->uri->segment(1);
> 	$width = $controller->get_form_width();
> 
> 	$table_data_row='<tr>';
> 	$table_data_row.='<td width="3%"><input class="print_hide" type="checkbox" id="sale_' . $sale['sale_id'] . '" value="' . $sale['sale_id']. '" /></td>';
> 	$table_data_row.='<td width="15%">'.'POS ' . $sale['sale_id'] . '</td>';
> 	$table_data_row.='<td width="17%">'.date( $CI->config->item('dateformat') . ' ' . $CI->config->item('timeformat'), strtotime($sale['sale_time']) ).'</td>';
> 	$table_data_row.='<td width="23%">'.character_limiter( $sale['customer_name'], 25).'</td>';
> 	$table_data_row.='<td width="8%">'.to_currency( $sale['amount_tendered'] ).'</td>';
> 	$table_data_row.='<td width="8%">'.to_currency( $sale['amount_due'] ).'</td>';
> 	$table_data_row.='<td width="8%">'.to_currency( $sale['change_due'] ).'</td>';
> 	$table_data_row.='<td width="12%">'.$sale['payment_type'].'</td>';
> 	$table_data_row.='<td width="8%">'.$sale['invoice_number'].'</td>';
> 	$table_data_row.='<td width="8%" class="print_hide">';
> 	$table_data_row.=anchor($controller_name."/edit/" . $sale['sale_id'] . "/width:$width", $CI->lang->line('common_edit'), array('class'=>'thickbox print_hide', 'title'=>$CI->lang->line('common_edit')));
> 	$table_data_row.='&nbsp;&nbsp;&nbsp;&nbsp;';
> 	$table_data_row.=anchor($controller_name."/receipt/" . $sale['sale_id'], $CI->lang->line('sales_show_receipt'), array('class'=>'print_hide', 'title'=>$CI->lang->line('sales_show_receipt')));
> 	$table_data_row.='&nbsp;&nbsp;&nbsp;&nbsp;';
> 	$table_data_row.=anchor($controller_name."/invoice/" . $sale['sale_id'], $CI->lang->line('sales_show_invoice'), array('class'=>'print_hide', 'title'=>$CI->lang->line('sales_show_invoice')));
> 	$table_data_row.='</td>';
> 	$table_data_row.='</tr>';
> 
> 	return $table_data_row;
> }
> 
> /*
> Get the sales payments summary
> */
> function get_sales_manage_payments_summary($payments, $sales, $controller)
> {
> 	$CI =& get_instance();
> 	$table='<div id="report_summary">';
> 
> 	foreach($payments as $key=>$payment)
> 	{
> 		$amount = $payment['payment_amount'];
> 
> 		// WARNING: the strong assumption here is that if a change is due it was a cash transaction always
> 		// therefore we remove from the total cash amount any change due
> 		if( $payment['payment_type'] == $CI->lang->line('sales_cash') )
> 		{
> 			foreach($sales as $key=>$sale)
> 			{
> 				$amount -= $sale['change_due'];
> 			}
> 		}
> 		$table.='<div class="summary_row">'.$payment['payment_type'].': '.to_currency( $amount ) . '</div>';
> 	}
> 	$table.='</div>';
> 	return $table;
> }
> 
67c184
< function get_detailed_sales_data_row($sale, $controller)
---
> function get_detailed_data_row($row, $controller)
71c188
< 	foreach($sale as $cell)
---
> 	foreach($row as $cell)
90,93c208,211
< 	//$CI->lang->line('suppliers_company_name'),
< 	//$CI->lang->line('common_last_name'),
< 	//$CI->lang->line('common_first_name'),
< 	"Name",
---
> 	$CI->lang->line('suppliers_company_name'),
> 	$CI->lang->line('suppliers_agency_name'),
> 	$CI->lang->line('common_last_name'),
> 	$CI->lang->line('common_first_name'),
95a214
> 	$CI->lang->line('suppliers_supplier_id'),
124c244
< 		$table_data_rows.="<tr><td colspan='7'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('common_no_persons_to_display')."</div></tr></tr>";
---
> 		$table_data_rows.="<tr><td colspan='9'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('common_no_persons_to_display')."</div></td></tr>";
138,140c258,261
< 	//$table_data_row.='<td width="17%">'.character_limiter($supplier->company_name,13).'</td>';
< 	//$table_data_row.='<td width="17%">'.character_limiter($supplier->last_name,13).'</td>';
< 	$table_data_row.='<td width="34%">'.character_limiter($supplier->first_name." ".$supplier->last_name,26).'</td>';
---
> 	$table_data_row.='<td width="17%">'.character_limiter($supplier->company_name,13).'</td>';
> 	$table_data_row.='<td width="17%">'.character_limiter($supplier->agency_name,13).'</td>';
> 	$table_data_row.='<td width="17%">'.character_limiter($supplier->last_name,13).'</td>';
> 	$table_data_row.='<td width="17%">'.character_limiter($supplier->first_name,13).'</td>';
142a264
> 	$table_data_row.='<td width="5%">'.character_limiter($supplier->person_id,5).'</td>';
160a283
> 	$CI->lang->line('suppliers_company_name'),
166c289,290
< 	$CI->lang->line('items_inventory')
---
> 	'&nbsp;',
> 	'&nbsp;'	
195c320
< 		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('items_no_items_to_display')."</div></tr></tr>";
---
> 		$table_data_rows.="<tr><td colspan='12'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('items_no_items_to_display')."</div></td></tr>";
215,223d339
<     $locations_data = $CI->Stock_locations->get_undeleted_all()->result_array();
<     foreach($locations_data as $location)
<     {
< 	    if (count($locations_data) > 1) 
< 	    {
<         	$item_quantity .= $location['location_name'].': ';
< 	    }
< 	    $item_quantity .= $CI->Item_quantities->get_item_quantity($item->item_id, $location['location_id'])->quantity . '<br/>';
<     }
229a346
> 	$table_data_row.='<td width="14%">'.$item->company_name.'</td>';
232c349
<     $table_data_row.='<td width="14%">'.$item_quantity.'</td>';
---
>     $table_data_row.='<td width="14%">'.$item->quantity.'</td>';
233a351,360
> 	$image = '';
> 	if (!empty($item->pic_id))
> 	{
> 		$images = glob ("uploads/item_pics/" . $item->pic_id . ".*");
> 		if (sizeof($images) > 0)
> 		{
> 			$image.='<a class="rollover" href="'. base_url($images[0]) .'"><img src="'.site_url('items/pic_thumb/'.$item->pic_id).'"></a>';
> 		}
> 	}
> 	$table_data_row.='<td align="center" width="55px">' . $image . '</td>';
236d362
< 	//Ramel Inventory Tracking
287c414
< 		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('giftcards_no_giftcards_to_display')."</div></tr></tr>";
---
> 		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('giftcards_no_giftcards_to_display')."</div></td></tr>";
293d419
< /** GARRISON MODIFIED 4/25/2013 **/
311d436
< /** END GARRISON MODIFIED **/
322a447
> 	$CI->lang->line('item_kits_kit'),
324a450,451
> 	$CI->lang->line('items_cost_price'),
> 	$CI->lang->line('items_unit_price'),
354c482
< 		$table_data_rows.="<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('item_kits_no_item_kits_to_display')."</div></tr></tr>";
---
> 		$table_data_rows .= "<tr><td colspan='11'><div class='warning_message' style='padding:7px;'>".$CI->lang->line('item_kits_no_item_kits_to_display')."</div></td></tr>";
367a496
> 	$table_data_row.='<td width="15%">'.'KIT '.$item_kit->item_kit_id.'</td>';
369a499,500
> 	$table_data_row.='<td width="15%">'.to_currency($item_kit->total_cost_price).'</td>';
> 	$table_data_row.='<td width="15%">'.to_currency($item_kit->total_unit_price).'</td>';
diff -rBwi --ignore-file-name-case pos-prod/application/hooks/index.html opensourcepos/application/hooks/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/hooks/load_config.php opensourcepos/application/hooks/load_config.php
16a17,22
> 		// fallback to english if language folder does not exist        
> 		$language = $CI->config->item( 'language' );
>         if (!file_exists('./application/language/' . $language)) 
>         {
>         	$language = 'en';
>         }
18,19c24
<         $map = directory_map('./application/language/' . $CI->config->item( 'language' ));
< 
---
>         $map = directory_map('./application/language/' . $language);
22c27
<             if ( substr(strrchr($file,'.'),1) == "php")
---
>             if ( !is_array($file) && substr(strrchr($file,'.'), 1) == "php")
24c29
<                 $CI->lang->load( str_replace( '_lang.php', '', $file ) );    
---
>                 $CI->lang->load( str_replace( '_lang.php', '', $file ),  $language);    
diff -rBwi --ignore-file-name-case pos-prod/application/index.html opensourcepos/application/index.html
0a1
> <!DOCTYPE html>
Only in pos-prod/application/language: Azerbaijan
Only in pos-prod/application/language: BahasaIndonesia
Only in opensourcepos/application/language: de-CH
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/common_lang.php opensourcepos/application/language/en/common_lang.php
2,41c2,57
< $lang['common_common'] = 'common';
< $lang['common_submit'] = 'Submit';
< $lang['common_or'] = 'OR';
< $lang['common_powered_by'] = 'Powered by';
< $lang['common_welcome'] = 'Welcome';
< $lang['common_logout'] = 'Logout';
< $lang['common_list_of'] = 'List of';
< $lang['common_first_name'] = 'First Name';
< $lang['common_last_name'] = 'Last Name';
< $lang['common_email'] = 'E-Mail';
< $lang['common_phone_number'] = 'Phone Number';
< $lang['common_address_1'] = 'Address 1';
< $lang['common_address_2'] = 'Address 2';
< $lang['common_city'] = 'City';
< $lang['common_state'] = 'State';
< $lang['common_zip'] = 'Zip';
< $lang['common_country'] = 'Country';
< $lang['common_comments'] = 'Comments';
< $lang['common_edit'] = 'edit';
< $lang['common_search'] = 'Search';
< $lang['common_delete'] = 'Delete';
< $lang['common_remove'] = 'Remove';
< $lang['common_view_recent_sales'] = 'View Recent Sales';
< $lang['common_you_are_using_ospos'] = 'You are using Open Source Point Of Sale Version';
< $lang['common_please_visit_my'] = 'Please visit my';
< $lang['common_website'] = 'website';
< $lang['common_fields_required_message'] = 'Fields in red are required';
< $lang['common_learn_about_project'] = 'to learn the lastest information about the project';
< $lang['common_searched_for'] = 'Searched for';
< $lang['common_first_name_required'] = 'The first name is a required field.';
< $lang['common_last_name_required'] = 'The last name is a required field';
< $lang['common_email_invalid_format'] = 'The e-mail address is not in the proper format';
< $lang['common_confirm_search'] = 'You have selected one or more rows, these will no longer be selected after your search. Are you sure you want to submit this search?';
< $lang['common_no_persons_to_display'] = 'There are no people to display';
< $lang['common_return_policy'] = 'Return Policy';
< $lang['common_price'] = 'Price';
< $lang['common_welcome_message']= 'Welcome to Open Source Point Of Sale, click a module below to get started!';
< $lang['common_inv'] = 'inv';
< $lang['common_det'] = 'details';
< ?>
---
> 
> $lang["common_address_1"] = "Address 1";
> $lang["common_address_2"] = "Address 2";
> $lang["common_city"] = "City";
> $lang["common_comments"] = "Comments";
> $lang["common_common"] = "common";
> $lang["common_confirm_search"] = "You have selected one or more rows, these will no longer be selected after your search. Are you sure you want to submit this search?";
> $lang["common_country"] = "Country";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "Delete";
> $lang["common_print"] = "Print";
> $lang["common_det"] = "details";
> $lang["common_edit"] = "edit";
> $lang["common_email"] = "E-Mail";
> $lang["common_email_invalid_format"] = "The e-mail address is not in the proper format";
> $lang["common_fields_required_message"] = "Fields in red are required";
> $lang["common_first_name"] = "First Name";
> $lang["common_first_name_required"] = "The first name is a required field.";
> $lang["common_first_page"] = "First";
> $lang["common_gender"] = "Gender";
> $lang["common_gender_female"] = "F";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "inv";
> $lang["common_last_name"] = "Last Name";
> $lang["common_last_name_required"] = "The last name is a required field";
> $lang["common_last_page"] = "Last";
> $lang["common_learn_about_project"] = "to learn the latest information about the project";
> $lang["common_list_of"] = "List of";
> $lang["common_logout"] = "Logout";
> $lang["common_new"] = "New";
> $lang["common_no_persons_to_display"] = "There are no people to display";
> $lang["common_or"] = "OR";
> $lang["common_phone_number"] = "Phone Number";
> $lang["common_phone_number_required"] = "";
> $lang["common_please_visit_my"] = "Please visit my";
> $lang["common_powered_by"] = "Powered by";
> $lang["common_price"] = "Price";
> $lang["common_remove"] = "Remove";
> $lang["common_return_policy"] = "Return Policy";
> $lang["common_search"] = "Search";
> $lang["common_search_options"] = "Search options";
> $lang["common_searched_for"] = "Searched for";
> $lang["common_state"] = "State";
> $lang["common_submit"] = "Submit";
> $lang["common_view_recent_sales"] = "View Recent Sales";
> $lang["common_website"] = "website";
> $lang["common_welcome"] = "Welcome";
> $lang["common_welcome_message"] = "Welcome to Open Source Point Of Sale, click a module below to get started!";
> $lang["common_you_are_using_ospos"] = "You are using Open Source Point Of Sale Version";
> $lang["common_zip"] = "Zip";
> $lang["common_import"] = "Import";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/config_lang.php opensourcepos/application/language/en/config_lang.php
2,34d1
< $lang['config_info'] = 'Store Configuration Information';
< $lang['config_company'] = 'Company Name';
< $lang['config_address'] = 'Company Address';
< $lang['config_phone'] = 'Company Phone';
< $lang['config_website'] = 'Website';
< $lang['config_fax'] = 'Fax';
< $lang['config_default_tax_rate'] = 'Default Tax Rate %';
< $lang['config_default_tax_rate_1'] = 'Tax 1 Rate';
< $lang['config_default_tax_rate_2'] = 'Tax 2 Rate';
< $lang['config_company_required'] = 'Company name is a required field';
< $lang['config_address_required'] = 'Company address is a required field';
< $lang['config_phone_required'] = 'Company phone is a required field';
< $lang['config_default_tax_rate_required'] = 'The default tax rate is a required field';
< $lang['config_default_tax_rate_number'] = 'The default tax rate must be a number';
< $lang['config_company_website_url'] = 'Company website is not a valid URL (http://...)';
< $lang['config_saved_successfully'] = 'Configuration saved successfully';
< $lang['config_saved_unsuccessfully'] = 'Configuration saved unsuccessfully';
< $lang['config_return_policy_required'] = 'Return policy is a required field';
< $lang['config_print_after_sale'] = 'Print receipt after sale';
< $lang['config_language'] = 'Language';
< $lang['config_timezone'] = 'Timezone';
< $lang['config_currency_symbol'] = 'Currency Symbol';
< $lang['config_currency_side'] = 'Right side'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Custom Field 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Custom Field 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Custom Field 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Custom Field 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Custom Field 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Custom Field 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Custom Field 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Custom Field 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Custom Field 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Custom Field 10'; //GARRISON ADDED 4/21/2013
36,38c3,122
< $lang['config_stock_location'] = 'Stock location';
< $lang['config_stock_location_required'] = 'Stock location number is a required field';
< ?>
---
> $lang["config_address"] = "Company Address";
> $lang["config_address_required"] = "Company address is a required field";
> $lang["config_backup_button"] = "Backup";
> $lang["config_backup_database"] = "Backup Database";
> $lang["config_barcode_company"] = "Company Name";
> $lang["config_barcode_configuration"] = "Barcode Configuration";
> $lang["config_barcode_content"] = "Barcode Content";
> $lang["config_barcode_first_row"] = "Row 1";
> $lang["config_barcode_font"] = "Font";
> $lang["config_barcode_height"] = "Height (px)";
> $lang["config_barcode_id"] = "Item Id/Name";
> $lang["config_barcode_info"] = "Barcode Configuration Information";
> $lang["config_barcode_layout"] = "Barcode Layout";
> $lang["config_barcode_name"] = "Name";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Number in row";
> $lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
> $lang["config_barcode_page_width"] = "Display page width";
> $lang["config_barcode_price"] = "Price";
> $lang["config_barcode_quality"] = "Quality (1-100)";
> $lang["config_barcode_second_row"] = "Row 2";
> $lang["config_barcode_third_row"] = "Row 3";
> $lang["config_barcode_type"] = "Barcode Type";
> $lang["config_barcode_width"] = "Width (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "Company Name";
> $lang["config_company_logo"] = "Company Logo";
> $lang["config_company_required"] = "Company name is a required field";
> $lang["config_company_website_url"] = "Company website is not a valid URL (http://...)";
> $lang["config_currency_side"] = "Right side";
> $lang["config_currency_symbol"] = "Currency Symbol";
> $lang["config_custom1"] = "Custom Field 1";
> $lang["config_custom10"] = "Custom Field 10";
> $lang["config_custom2"] = "Custom Field 2";
> $lang["config_custom3"] = "Custom Field 3";
> $lang["config_custom4"] = "Custom Field 4";
> $lang["config_custom5"] = "Custom Field 5";
> $lang["config_custom6"] = "Custom Field 6";
> $lang["config_custom7"] = "Custom Field 7";
> $lang["config_custom8"] = "Custom Field 8";
> $lang["config_custom9"] = "Custom Field 9";
> $lang["config_decimal_point"] = "Decimal Point";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Default Sales Discount %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "Default Tax Rate %";
> $lang["config_default_tax_rate_1"] = "Tax 1 Rate";
> $lang["config_default_tax_rate_2"] = "Tax 2 Rate";
> $lang["config_default_tax_rate_number"] = "The default tax rate must be a number";
> $lang["config_default_tax_rate_required"] = "The default tax rate is a required field";
> $lang["config_fax"] = "Fax";
> $lang["config_general_configuration"] = "General Configuration";
> $lang["config_info"] = "Store Configuration Information";
> $lang["config_invoice_default_comments"] = "Default Invoice Comments";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Invoice Printer";
> $lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
> $lang["config_language"] = "Language";
> $lang["config_lines_per_page"] = "Lines Per Page";
> $lang["config_lines_per_page_number"] = "";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locations";
> $lang["config_location_info"] = "Location Configuration Information";
> $lang["config_logout"] = "Don't you want to make a backup before logging out? Click [OK] to backup, [Cancel] to logout";
> $lang["config_number_format"] = "Number Format";
> $lang["config_phone"] = "Company Phone";
> $lang["config_phone_required"] = "Company phone is a required field";
> $lang["config_print_bottom_margin"] = "Margin Bottom";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Margin Left";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Margin Right";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Show Print Dialog";
> $lang["config_print_top_margin"] = "Margin Top";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Settings";
> $lang["config_receipt_info"] = "Receipt Configuration Information";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Show Taxes";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "Receivings Invoice Format";
> $lang["config_return_policy_required"] = "Return policy is a required field";
> $lang["config_sales_invoice_format"] = "Sales Invoice Format";
> $lang["config_saved_successfully"] = "Configuration saved successfully";
> $lang["config_saved_unsuccessfully"] = "Configuration saved unsuccessfully";
> $lang["config_show_total_discount"] = "Show total discount";
> $lang["config_stock_location"] = "Stock location";
> $lang["config_stock_location_duplicate"] = "Please use an unique location name";
> $lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
> $lang["config_stock_location_required"] = "Stock location number is a required field";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "Tax Included";
> $lang["config_thousands_separator"] = "Thousands Separator";
> $lang["config_timezone"] = "Timezone";
> $lang["config_use_invoice_template"] = "Use invoice template";
> $lang["config_website"] = "Website";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
Only in pos-prod/application/language/en: config_lang.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/customers_lang.php opensourcepos/application/language/en/customers_lang.php
2,16c2,19
< $lang['customers_new'] = 'New Customer';
< $lang['customers_customer'] = 'Customer';
< $lang['customers_update'] = 'Update Customer';
< $lang['customers_confirm_delete'] = 'Are you sure you want to delete the selected customers?';
< $lang['customers_none_selected'] = 'You have not selected any customers to delete';
< $lang['customers_error_adding_updating'] = 'Error adding/updating customer';
< $lang['customers_successful_adding'] = 'You have successfully added customer';
< $lang['customers_successful_updating'] = 'You have successfully updated customer';
< $lang['customers_successful_deleted'] = 'You have successfully deleted';
< $lang['customers_one_or_multiple'] = 'customer(s)';
< $lang['customers_cannot_be_deleted'] = 'Could not deleted selected customers, one or more of the selected customers has sales.';
< $lang['customers_basic_information'] = 'Customer Information';
< $lang['customers_account_number'] = 'Account #';
< $lang['customers_taxable'] = 'Taxable';
< ?>
---
> 
> $lang["customers_account_number"] = "Account #";
> $lang["customers_account_number_duplicate"] = "This account number is already present in the database";
> $lang["customers_basic_information"] = "Customer Information";
> $lang["customers_cannot_be_deleted"] = "Could not deleted selected customers, one or more of the selected customers has sales.";
> $lang["customers_company_name"] = "Company Name";
> $lang["customers_confirm_delete"] = "Are you sure you want to delete the selected customers?";
> $lang["customers_customer"] = "Customer";
> $lang["customers_error_adding_updating"] = "Error adding/updating customer";
> $lang["customers_new"] = "New Customer";
> $lang["customers_none_selected"] = "You have not selected any customers to delete";
> $lang["customers_one_or_multiple"] = "customer(s)";
> $lang["customers_successful_adding"] = "You have successfully added customer";
> $lang["customers_successful_deleted"] = "You have successfully deleted";
> $lang["customers_successful_updating"] = "You have successfully updated customer";
> $lang["customers_taxable"] = "Taxable";
> $lang["customers_update"] = "Update Customer";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/employees_lang.php opensourcepos/application/language/en/employees_lang.php
2,27c2,28
< $lang['employees_employee'] = 'Employee';
< $lang['employees_new'] = 'New Employee';
< $lang['employees_update'] = 'Update Employee';
< $lang['employees_confirm_delete'] = 'Are you sure you want to delete the selected employees?';
< $lang['employees_none_selected'] = 'You have not selected any employees to delete';
< $lang['employees_error_adding_updating'] = 'Error adding/updating employee';
< $lang['employees_successful_adding'] = 'You have successfully added employee';
< $lang['employees_successful_updating'] = 'You have successfully updated employee';
< $lang['employees_successful_deleted'] = 'You have successfully deleted';
< $lang['employees_one_or_multiple'] = 'employee(s)';
< $lang['employees_cannot_be_deleted'] = 'Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
< $lang['employees_username'] = 'Username';
< $lang['employees_password'] = 'Password';
< $lang['employees_repeat_password'] = 'Password Again';
< $lang['employees_username_required'] = 'Username is a required field';
< $lang['employees_username_minlength'] = 'The username must be at least 5 characters';
< $lang['employees_password_required'] = 'Password is required';
< $lang['employees_password_minlength'] = 'Passwords must be at least 8 characters';
< $lang['employees_password_must_match'] = 'Passwords do not match';
< $lang['employees_basic_information'] = 'Employee Basic Information';
< $lang['employees_login_info'] = 'Employee Login Info';
< $lang['employees_permission_info'] = 'Employee Permissions and Access';
< $lang['employees_permission_desc'] = 'Check the boxes below to grant access to modules';
< $lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
< $lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
< ?>
---
> 
> $lang["employees_basic_information"] = "Employee Basic Information";
> $lang["employees_cannot_be_deleted"] = "Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)";
> $lang["employees_confirm_delete"] = "Are you sure you want to delete the selected employees?";
> $lang["employees_employee"] = "Employee";
> $lang["employees_error_adding_updating"] = "Error adding/updating employee";
> $lang["employees_error_deleting_demo_admin"] = "You can not delete the demo admin user";
> $lang["employees_error_updating_demo_admin"] = "You can not change the demo admin user";
> $lang["employees_login_info"] = "Employee Login Info";
> $lang["employees_new"] = "New Employee";
> $lang["employees_none_selected"] = "You have not selected any employees to delete";
> $lang["employees_one_or_multiple"] = "employee(s)";
> $lang["employees_password"] = "Password";
> $lang["employees_password_minlength"] = "Passwords must be at least 8 characters";
> $lang["employees_password_must_match"] = "Passwords do not match";
> $lang["employees_password_required"] = "Password is required";
> $lang["employees_permission_desc"] = "Check the boxes below to grant access to modules";
> $lang["employees_permission_info"] = "Employee Permissions and Access";
> $lang["employees_repeat_password"] = "Password Again";
> $lang["employees_successful_adding"] = "You have successfully added employee";
> $lang["employees_successful_deleted"] = "You have successfully deleted";
> $lang["employees_successful_updating"] = "You have successfully updated employee";
> $lang["employees_update"] = "Update Employee";
> $lang["employees_username"] = "Username";
> $lang["employees_username_minlength"] = "The username must be at least 5 characters";
> $lang["employees_username_required"] = "Username is a required field";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/error_lang.php opensourcepos/application/language/en/error_lang.php
2,4c2,4
< $lang['error_no_permission_module'] = 'You do not have permission to access the module named';
< $lang['error_unknown'] = 'unknown';
< ?>
---
> 
> $lang["error_no_permission_module"] = "You do not have permission to access the module named";
> $lang["error_unknown"] = "unknown";
Only in pos-prod/application/language/en: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/giftcards_lang.php opensourcepos/application/language/en/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = 'Giftcard Number';
< $lang['giftcards_card_value'] = 'Value';
< $lang['giftcards_basic_information'] = 'Giftcard Information';
< $lang['giftcards_number_required'] = 'Giftcard Number is a required field';
< $lang['giftcards_value_required'] = 'Giftcard Value is a required field';
< $lang['giftcards_number'] = 'Giftcard Number must be a number';
< $lang['giftcards_value'] = 'Giftcard Value must be a number';
< $lang['giftcards_person_id'] = 'Customer';
< $lang['giftcards_retrive_giftcard_info'] = 'Retrieve Giftcard Info';
< $lang['giftcards_description'] = 'Description';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'UPC Database';
< $lang['giftcards_cannot_find_giftcard'] = 'Cannot find any information about giftcard';
< $lang['giftcards_info_provided_by'] = 'Info provided by';
< $lang['giftcards_number_information'] = 'Giftcard Number';
< $lang['giftcards_new'] = 'New Giftcard';
< $lang['giftcards_update'] = 'Update Giftcard';
< $lang['giftcards_giftcard'] = 'Giftcard';
< $lang['giftcards_edit_multiple_giftcards'] = 'Editing Multiple Giftcards';
< $lang['giftcards_category'] = 'Category';
< $lang['giftcards_cost_price'] = 'Cost Price';
< $lang['giftcards_unit_price'] = 'Unit Price';
< $lang['giftcards_tax_1'] = 'Tax 1';
< $lang['giftcards_tax_2'] = 'Tax 2';
< $lang['giftcards_sales_tax_1'] = 'Sales Tax';
< $lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
< $lang['giftcards_tax_percent'] = 'Tax Percent';
< $lang['giftcards_tax_percents'] = 'Tax Percent(s)';
< $lang['giftcards_reorder_level'] = 'Reorder Level';
< $lang['giftcards_quantity'] = 'Quantity';
< $lang['giftcards_no_giftcards_to_display'] = 'No Giftcards to display';
< $lang['giftcards_bulk_edit'] = 'Bulk Edit';
< $lang['giftcards_confirm_delete'] = 'Are you sure you want to delete the selected giftcards?';
< $lang['giftcards_none_selected'] = 'You have not selected any giftcards to edit';
< $lang['giftcards_confirm_bulk_edit'] = 'Are you sure you want to edit all the giftcards selected?';
< $lang['giftcards_successful_bulk_edit'] = 'You have successfully updated the selected giftcards';
< $lang['giftcards_error_updating_multiple'] = 'Error updating giftcards';
< $lang['giftcards_edit_fields_you_want_to_update'] = 'Edit the fields you want to edit for ALL selected giftcards';
< $lang['giftcards_error_adding_updating'] = 'Error adding/updating giftcard';
< $lang['giftcards_successful_adding'] = 'You have successfully added giftcard';
< $lang['giftcards_successful_updating'] = 'You have successfully updated giftcard';
< $lang['giftcards_successful_deleted'] = 'You have successfully deleted';
< $lang['giftcards_one_or_multiple'] = 'giftcard(s)';
< $lang['giftcards_cannot_be_deleted'] = 'Could not deleted selected giftcards, one or more of the selected giftcards has sales.';
< $lang['giftcards_none'] = 'None';
< $lang['giftcards_supplier'] = 'Supplier';
< $lang['giftcards_generate_barcodes'] = 'Generate Barcodes';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'You must select at least 1 giftcard to generate barcodes';
< $lang['giftcards_excel_import_failed'] = 'Excel import failed';
< $lang['giftcards_allow_alt_description'] = 'Allow Alt Description';
< $lang['giftcards_is_serialized'] = 'Giftcard has Serial Number';
< $lang['giftcards_low_inventory_giftcards'] = 'Low Inventory Giftcards';
< $lang['giftcards_serialized_giftcards'] = 'Serialized Giftcards';
< $lang['giftcards_no_description_giftcards'] = 'No Description Giftcards';
< $lang['giftcards_inventory_comments'] = 'Comments';
< $lang['giftcards_count'] = 'Update Inventory';
< $lang['giftcards_details_count'] = 'Inventory Count Details';
< $lang['giftcards_add_minus'] = 'Inventory to add/subtract';
< $lang['giftcards_current_quantity'] = 'Current Quantity';
< $lang['giftcards_quantity_required'] = 'Quantity is a required field. Please Close ( X ) to cancel';
< $lang['giftcards_do_nothing'] = 'Do Nothing';
< $lang['giftcards_change_all_to_serialized'] = 'Change All To Serialized';
< $lang['giftcards_change_all_to_unserialized'] = 'Change All To Unserialized';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Allow Alt Desc For All';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
< $lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
< $lang['giftcards_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "Inventory to add/subtract";
> $lang["giftcards_allow_alt_description"] = "Allow Alt Description";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
> $lang["giftcards_basic_information"] = "Giftcard Information";
> $lang["giftcards_bulk_edit"] = "Bulk Edit";
> $lang["giftcards_cannot_be_deleted"] = "Could not deleted selected giftcards, one or more of the selected giftcards has sales.";
> $lang["giftcards_cannot_find_giftcard"] = "Cannot find any information about giftcard";
> $lang["giftcards_card_value"] = "Value";
> $lang["giftcards_category"] = "Category";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "Allow Alt Desc For All";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "Not Allow Alt Desc For All";
> $lang["giftcards_change_all_to_serialized"] = "Change All To Serialized";
> $lang["giftcards_change_all_to_unserialized"] = "Change All To Unserialized";
> $lang["giftcards_confirm_bulk_edit"] = "Are you sure you want to edit all the giftcards selected?";
> $lang["giftcards_confirm_delete"] = "Are you sure you want to delete the selected giftcards?";
> $lang["giftcards_cost_price"] = "Cost Price";
> $lang["giftcards_count"] = "Update Inventory";
> $lang["giftcards_current_quantity"] = "Current Quantity";
> $lang["giftcards_description"] = "Description";
> $lang["giftcards_details_count"] = "Inventory Count Details";
> $lang["giftcards_do_nothing"] = "Do Nothing";
> $lang["giftcards_edit_fields_you_want_to_update"] = "Edit the fields you want to edit for ALL selected giftcards";
> $lang["giftcards_edit_multiple_giftcards"] = "Editing Multiple Giftcards";
> $lang["giftcards_error_adding_updating"] = "Error adding/updating giftcard";
> $lang["giftcards_error_updating_multiple"] = "Error updating giftcards";
> $lang["giftcards_excel_import_failed"] = "Excel import failed";
> $lang["giftcards_generate_barcodes"] = "Generate Barcodes";
> $lang["giftcards_giftcard"] = "Giftcard";
> $lang["giftcards_giftcard_number"] = "Giftcard Number";
> $lang["giftcards_info_provided_by"] = "Info provided by";
> $lang["giftcards_inventory_comments"] = "Comments";
> $lang["giftcards_is_serialized"] = "Giftcard has Serial Number";
> $lang["giftcards_low_inventory_giftcards"] = "Low Inventory Giftcards";
> $lang["giftcards_manually_editing_of_quantity"] = "Manual Edit of Quantity";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "You must select at least 1 giftcard to generate barcodes";
> $lang["giftcards_new"] = "New Giftcard";
> $lang["giftcards_no_description_giftcards"] = "No Description Giftcards";
> $lang["giftcards_no_giftcards_to_display"] = "No Giftcards to display";
> $lang["giftcards_none"] = "None";
> $lang["giftcards_none_selected"] = "You have not selected any giftcards to edit";
> $lang["giftcards_number"] = "Giftcard Number must be a number";
> $lang["giftcards_number_information"] = "Giftcard Number";
> $lang["giftcards_number_required"] = "Giftcard Number is a required field";
> $lang["giftcards_one_or_multiple"] = "giftcard(s)";
> $lang["giftcards_person_id"] = "Customer";
> $lang["giftcards_quantity"] = "Quantity";
> $lang["giftcards_quantity_required"] = "Quantity is a required field. Please Close ( X ) to cancel";
> $lang["giftcards_reorder_level"] = "Reorder Level";
> $lang["giftcards_retrive_giftcard_info"] = "Retrieve Giftcard Info";
> $lang["giftcards_sales_tax_1"] = "Sales Tax";
> $lang["giftcards_sales_tax_2"] = "Sales Tax 2";
> $lang["giftcards_serialized_giftcards"] = "Serialized Giftcards";
> $lang["giftcards_successful_adding"] = "You have successfully added giftcard";
> $lang["giftcards_successful_bulk_edit"] = "You have successfully updated the selected giftcards";
> $lang["giftcards_successful_deleted"] = "You have successfully deleted";
> $lang["giftcards_successful_updating"] = "You have successfully updated giftcard";
> $lang["giftcards_supplier"] = "Supplier";
> $lang["giftcards_tax_1"] = "Tax 1";
> $lang["giftcards_tax_2"] = "Tax 2";
> $lang["giftcards_tax_percent"] = "Tax Percent";
> $lang["giftcards_tax_percents"] = "Tax Percent(s)";
> $lang["giftcards_unit_price"] = "Unit Price";
> $lang["giftcards_upc_database"] = "UPC Database";
> $lang["giftcards_update"] = "Update Giftcard";
> $lang["giftcards_use_inventory_menu"] = "Use Inv. Menu";
> $lang["giftcards_value"] = "Giftcard Value must be a number";
> $lang["giftcards_value_required"] = "Giftcard Value is a required field";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/index.html opensourcepos/application/language/en/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/item_kits_lang.php opensourcepos/application/language/en/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = 'Item Kit Name';
< $lang['item_kits_description'] = 'Item Kit Description';
< $lang['item_kits_no_item_kits_to_display'] = 'No item kits to display';
< $lang['item_kits_update'] = 'Update Item Kit';
< $lang['item_kits_new'] = 'New Item Kit';
< $lang['item_kits_none_selected'] = "You have not selected any item kits";
< $lang['item_kits_info'] = 'Item Kit Info';
< $lang['item_kits_successful_adding'] = 'You have successfully added Item Kit';
< $lang['item_kits_successful_updating'] = 'You have successfully updated Item Kit';
< $lang['item_kits_error_adding_updating'] = 'Error adding/updating Item Kit';
< $lang['item_kits_successful_deleted'] = 'You have successfully deleted';
< $lang['item_kits_confirm_delete'] = 'Are you sure you want to delete the selected item kits?';
< $lang['item_kits_one_or_multiple'] = 'Item Kit(s)';
< $lang['item_kits_cannot_be_deleted'] = 'Could not delete item kit(s)';
< $lang['item_kits_add_item'] = 'Add Item';
< $lang['item_kits_items'] = 'Items';
< $lang['item_kits_item'] = 'Item';
< $lang['item_kits_quantity'] = 'Quantity';
< ?>
---
> 
> $lang["item_kits_add_item"] = "Add Item";
> $lang["item_kits_cannot_be_deleted"] = "Could not delete item kit(s)";
> $lang["item_kits_confirm_delete"] = "Are you sure you want to delete the selected item kits?";
> $lang["item_kits_description"] = "Item Kit Description";
> $lang["item_kits_error_adding_updating"] = "Error adding/updating Item Kit";
> $lang["item_kits_info"] = "Item Kit Info";
> $lang["item_kits_item"] = "Item";
> $lang["item_kits_items"] = "Items";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "Item Kit Name";
> $lang["item_kits_new"] = "New Item Kit";
> $lang["item_kits_no_item_kits_to_display"] = "No item kits to display";
> $lang["item_kits_none_selected"] = "You have not selected any item kits";
> $lang["item_kits_one_or_multiple"] = "Item Kit(s)";
> $lang["item_kits_quantity"] = "Quantity";
> $lang["item_kits_successful_adding"] = "You have successfully added Item Kit";
> $lang["item_kits_successful_deleted"] = "You have successfully deleted";
> $lang["item_kits_successful_updating"] = "You have successfully updated Item Kit";
> $lang["item_kits_update"] = "Update Item Kit";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/items_lang.php opensourcepos/application/language/en/items_lang.php
2,83d1
< $lang['items_item_number']='UPC/EAN/ISBN';
< $lang['items_retrive_item_info']='Retrive Item Info';
< $lang['items_description']='Description';
< $lang['items_amazon']='Amazon';
< $lang['items_upc_database']='UPC Database';
< $lang['items_cannot_find_item']='Cannot find any information about item';
< $lang['items_info_provided_by']='Info provided by';
< $lang['items_basic_information']='Item Information';
< $lang['items_number_information']='Item Number';
< $lang['items_new']='New Item';
< $lang['items_update']='Update Item';
< $lang['items_item']='Item';
< $lang['items_edit_multiple_items']='Editing Multiple Items';
< $lang['items_name']='Item Name';
< $lang['items_category']='Category';
< $lang['items_cost_price']='Cost Price';//GARRISON ADDED 4/21/2013
< $lang['items_unit_price']='Retail Price';//GARRISON ADDED 4/21/2013
< $lang['items_tax_1']='Tax 1';
< $lang['items_tax_2']='Tax 2';
< $lang['items_sales_tax_1'] = 'Sales Tax';
< $lang['items_sales_tax_2'] = 'Sales Tax 2';
< $lang['items_tax_percent']='Tax Percent';
< $lang['items_tax_percents']='Tax Percent(s)';
< $lang['items_reorder_level']='Reorder Level';
< $lang['items_quantity']='Quantity';
< $lang['items_reorder_level']='Reorder Level';
< $lang['items_no_items_to_display']='No Items to display';
< $lang['items_bulk_edit']='Bulk Edit';
< $lang['items_confirm_delete']='Are you sure you want to delete the selected items?';
< $lang['items_none_selected']='You have not selected any items to edit';
< $lang['items_confirm_bulk_edit']='Are you sure you want to edit all the items selected?';
< $lang['items_successful_bulk_edit']='You have successfully updated the selected items';
< $lang['items_error_updating_multiple']='Error updating items';
< $lang['items_edit_fields_you_want_to_update']='Edit the fields you want to edit for ALL selected items';
< $lang['items_error_adding_updating'] = 'Error adding/updating item';
< $lang['items_successful_adding']='You have successfully added item';
< $lang['items_successful_updating']='You have successfully updated item';
< $lang['items_successful_deleted']='You have successfully deleted';
< $lang['items_one_or_multiple']='item(s)';
< $lang['items_cannot_be_deleted']='Could not deleted selected items, one or more of the selected items has sales.';
< $lang['items_name_required']='Item Name is a required field';
< $lang['items_category_required']='Category is a required field';
< $lang['items_buy_price_required']='Purchase price is a required field';		//GARRISON UPDATED 6/3/2013
< $lang['items_unit_price_required']='Retail Price is a required field';		//GARRISON UPDATED 6/3/2013
< $lang['items_cost_price_required']='Cost Price is a required field';	//GARRISON UPDATED 6/3/2013
< $lang['items_tax_percent_required']='Tax Percent is a required field';
< $lang['items_quantity_required']='Quantity is a required field';
< $lang['items_reorder_level_required']='Reorder level is a required field';
< $lang['items_unit_price_number']='Unit price must be a number';
< $lang['items_cost_price_number']='Cost price must be a number';
< $lang['items_quantity_number']='Quantity must be a number';
< $lang['items_reorder_level_number']='Reorder level must be a number';
< $lang['items_none'] = 'None';
< $lang['items_supplier'] = 'Supplier';
< $lang['items_generate_barcodes'] = 'Generate Barcodes';
< $lang['items_must_select_item_for_barcode'] = 'You must select at least 1 item to generate barcodes';
< $lang['items_excel_import_failed'] = 'Excel import failed';
< $lang['items_allow_alt_description'] = 'Allow Alt Description';
< $lang['items_is_serialized'] = 'Item has Serial Number';
< $lang['items_serialized_items'] = 'Serialized Items';
< $lang['items_no_description_items'] = 'No Description Items';
< $lang['items_search_custom_items'] = 'Search Custom Fields';//GARRISON ADDED
< $lang['items_inventory_comments']='Comments';
< $lang['items_count']='Update Inventory';
< $lang['items_details_count']='Inventory Count Details';
< $lang['items_add_minus']='Inventory to add/subtract';
< $lang['items_current_quantity']='Current Quantity';
< $lang['items_quantity_required']='Quantity is a required field. Please Close ( X ) to cancel';
< $lang['items_do_nothing'] = 'Do Nothing';
< $lang['items_change_all_to_serialized'] = 'Change All To Serialized';
< $lang['items_change_all_to_unserialized'] = 'Change All To Unserialized';
< $lang['items_change_all_to_allow_alt_desc'] = ' Allow Alt Desc For All';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
< $lang['items_use_inventory_menu'] = 'Use Inv. Menu';
< $lang['items_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
< $lang['items_inventory'] = 'Inventory';
< $lang['items_location'] = 'Location';
< $lang['items_is_deleted'] = 'Deleted';// Parq 131215
< $lang['items_stock_type_sale'] = 'Sale stock';
< $lang['items_stock_type_warehouse'] = 'Warehouse stock';
< $lang['items_unit_quantity'] = 'Unit quantity';
< $lang['items_related_number'] = 'Related item number';
85,86c3,88
< $lang['items_stock_location']='Stock location';
< ?>
---
> $lang["items_add_minus"] = "Inventory to add/subtract";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "Allow Alt Description";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "Item Information";
> $lang["items_bulk_edit"] = "Bulk Edit";
> $lang["items_buy_price_required"] = "Purchase price is a required field";
> $lang["items_cannot_be_deleted"] = "Could not deleted selected items, one or more of the selected items has sales.";
> $lang["items_cannot_find_item"] = "Cannot find any information about item";
> $lang["items_category"] = "Category";
> $lang["items_category_required"] = "Category is a required field";
> $lang["items_change_all_to_allow_alt_desc"] = " Allow Alt Desc For All";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Not Allow Alt Desc For All";
> $lang["items_change_all_to_serialized"] = "Change All To Serialized";
> $lang["items_change_all_to_unserialized"] = "Change All To Unserialized";
> $lang["items_confirm_bulk_edit"] = "Are you sure you want to edit all the items selected?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "Are you sure you want to delete the selected items?";
> $lang["items_cost_price"] = "Cost Price";
> $lang["items_cost_price_number"] = "Cost price must be a number";
> $lang["items_cost_price_required"] = "Cost Price is a required field";
> $lang["items_count"] = "Update Inventory";
> $lang["items_current_quantity"] = "Current Quantity";
> $lang["items_description"] = "Description";
> $lang["items_details_count"] = "Inventory Count Details";
> $lang["items_do_nothing"] = "Do Nothing";
> $lang["items_edit_fields_you_want_to_update"] = "Edit the fields you want to edit for ALL selected items";
> $lang["items_edit_multiple_items"] = "Editing Multiple Items";
> $lang["items_error_adding_updating"] = "Error adding/updating item";
> $lang["items_error_updating_multiple"] = "Error updating items";
> $lang["items_excel_import_failed"] = "Excel import failed";
> $lang["items_generate_barcodes"] = "Generate Barcodes";
> $lang["items_image"] = "Avatar";
> $lang["items_info_provided_by"] = "Info provided by";
> $lang["items_inventory"] = "Inventory";
> $lang["items_inventory_comments"] = "Comments";
> $lang["items_is_deleted"] = "Deleted";
> $lang["items_is_serialized"] = "Item has Serial Number";
> $lang["items_item"] = "Item";
> $lang["items_item_number"] = "UPC/EAN/ISBN";
> $lang["items_item_number_duplicate"] = "The item number is already present in the database";
> $lang["items_location"] = "Location";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "Out Of Stock Items";
> $lang["items_manually_editing_of_quantity"] = "Manual Edit of Quantity";
> $lang["items_must_select_item_for_barcode"] = "You must select at least 1 item to generate barcodes";
> $lang["items_name"] = "Item Name";
> $lang["items_name_required"] = "Item Name is a required field";
> $lang["items_new"] = "New Item";
> $lang["items_no_description_items"] = "No Description Items";
> $lang["items_no_items_to_display"] = "No Items to display";
> $lang["items_none"] = "None";
> $lang["items_none_selected"] = "You have not selected any items to edit";
> $lang["items_number_information"] = "Item Number";
> $lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
> $lang["items_one_or_multiple"] = "item(s)";
> $lang["items_quantity"] = "Quantity";
> $lang["items_quantity_number"] = "Quantity must be a number";
> $lang["items_quantity_required"] = "Quantity is a required field";
> $lang["items_receiving_quantity"] = "Receiving quantity";
> $lang["items_reorder_level"] = "Reorder Level";
> $lang["items_reorder_level_number"] = "Reorder level must be a number";
> $lang["items_reorder_level_required"] = "Reorder level is a required field";
> $lang["items_retrive_item_info"] = "Retrive Item Info";
> $lang["items_sales_tax_1"] = "Sales Tax";
> $lang["items_sales_tax_2"] = "Sales Tax 2";
> $lang["items_search_custom_items"] = "Search Custom Fields";
> $lang["items_serialized_items"] = "Serialized Items";
> $lang["items_stock_location"] = "Stock location";
> $lang["items_successful_adding"] = "You have successfully added item";
> $lang["items_successful_bulk_edit"] = "You have successfully updated the selected items";
> $lang["items_successful_deleted"] = "You have successfully deleted";
> $lang["items_successful_updating"] = "You have successfully updated item";
> $lang["items_supplier"] = "Supplier";
> $lang["items_tax_1"] = "Tax 1";
> $lang["items_tax_2"] = "Tax 2";
> $lang["items_tax_percent"] = "Tax Percent";
> $lang["items_tax_percent_required"] = "Tax Percent is a required field";
> $lang["items_tax_percents"] = "Tax Percent(s)";
> $lang["items_unit_price"] = "Retail Price";
> $lang["items_unit_price_number"] = "Unit price must be a number";
> $lang["items_unit_price_required"] = "Retail Price is a required field";
> $lang["items_upc_database"] = "UPC Database";
> $lang["items_update"] = "Update Item";
> $lang["items_use_inventory_menu"] = "Use Inv. Menu";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/login_lang.php opensourcepos/application/language/en/login_lang.php
2,8c2,8
< $lang['login_login']='Login';
< $lang['login_username']='Username';
< $lang['login_password']='Password';
< $lang['login_go']='Go';
< $lang['login_invalid_username_and_password']='Invalid username/password';
< $lang['login_welcome_message']='Welcome to the Open Source Point of Sale System. To continue, please login using your username and password below.';
< ?>
---
> 
> $lang["login_go"] = "Go";
> $lang["login_invalid_username_and_password"] = "Invalid username/password";
> $lang["login_login"] = "Login";
> $lang["login_password"] = "Password";
> $lang["login_username"] = "Username";
> $lang["login_welcome_message"] = "Welcome to the Open Source Point of Sale System. To continue, please login using your username and password below.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/module_lang.php opensourcepos/application/language/en/module_lang.php
2d1
< $lang['module_home']='Home';
4,34c3,23
< $lang['module_customers']='Customers';
< $lang['module_customers_desc']='Add, Update, Delete, and Search customers';
< 
< $lang['module_suppliers']='Suppliers';
< $lang['module_suppliers_desc']='Add, Update, Delete, and Search suppliers';
< 
< $lang['module_employees']='Employees';
< $lang['module_employees_desc']='Add, Update, Delete, and Search employees';
< 
< $lang['module_sales']='Sales';
< $lang['module_sales_desc']='Process sales and returns';
< 
< $lang['module_reports']='Reports';
< $lang['module_reports_desc']='View and generate reports';
< 
< $lang['module_items']='Items';
< $lang['module_items_desc']='Add, Update, Delete, and Search items';
< 
< $lang['module_config']='Store Config';
< $lang['module_config_desc']='Change the store\'s configuration';
< 
< $lang['module_receivings']='Receivings';
< $lang['module_receivings_desc']='Process Purchase orders';
< 
< $lang['module_giftcards']='Gift Cards';
< $lang['module_giftcards_desc']='Add, Update, Delete and Search gift cards';
< 
< $lang['module_item_kits']='Item Kits';
< $lang['module_item_kits_desc']='Add, Update, Delete and Search Item Kits';
< 
< ?>
---
> $lang["module_config"] = "Store Config";
> $lang["module_config_desc"] = "Change the store's configuration";
> $lang["module_customers"] = "Customers";
> $lang["module_customers_desc"] = "Add, Update, Delete, and Search customers";
> $lang["module_employees"] = "Employees";
> $lang["module_employees_desc"] = "Add, Update, Delete, and Search employees";
> $lang["module_giftcards"] = "Gift Cards";
> $lang["module_giftcards_desc"] = "Add, Update, Delete and Search gift cards";
> $lang["module_home"] = "Home";
> $lang["module_item_kits"] = "Item Kits";
> $lang["module_item_kits_desc"] = "Add, Update, Delete and Search Item Kits";
> $lang["module_items"] = "Items";
> $lang["module_items_desc"] = "Add, Update, Delete, and Search items";
> $lang["module_receivings"] = "Receivings";
> $lang["module_receivings_desc"] = "Process Purchase orders";
> $lang["module_reports"] = "Reports";
> $lang["module_reports_desc"] = "View and generate reports";
> $lang["module_sales"] = "Sales";
> $lang["module_sales_desc"] = "Process sales and returns";
> $lang["module_suppliers"] = "Suppliers";
> $lang["module_suppliers_desc"] = "Add, Update, Delete, and Search suppliers";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/receivings_lang.php opensourcepos/application/language/en/receivings_lang.php
2,34d1
< $lang['recvs_register']='Items Receiving';
< $lang['recvs_mode']='Receiving Mode';
< $lang['recvs_receiving']='Receive';
< $lang['recvs_return']='Return';
< $lang['recvs_total']='Total';
< $lang['recvs_cost']='Cost';
< $lang['recvs_quantity']='Qty.';
< $lang['recvs_discount']='Disc %';
< $lang['recvs_edit']='Edit';
< $lang['recvs_new_supplier'] = 'New Supplier';
< $lang['recvs_supplier'] = 'Supplier';
< $lang['recvs_select_supplier']='Select Supplier (Optional)';
< $lang['recvs_start_typing_supplier_name']='Start Typing supplier\'s name...';
< $lang['recvs_unable_to_add_item']='Unable to add item to receiving';
< $lang['recvs_error_editing_item']='Error editing item';
< $lang['recvs_receipt']='Receivings Receipt';
< $lang['recvs_complete_receiving']='Finish';
< $lang['recvs_confirm_finish_receiving'] = 'Are you sure you want to submit this receiving? This cannot be undone.';
< $lang['recvs_confirm_cancel_receiving'] = 'Are you sure you want to clear this receiving? All items will cleared.';
< $lang['recvs_find_or_scan_item']='Find/Scan Item';
< $lang['recvs_find_or_scan_item_or_receipt']='Find/Scan Item OR Receipt';
< $lang['recvs_id']='Receiving ID';
< $lang['recvs_item_name'] = 'Item Name';
< $lang['receivings_transaction_failed'] = 'Receivings Transactions Failed';
< $lang['recvs_requisition']='Requisition';
< $lang['reqs_quantity'] ='Qty.';
< $lang['reqs_related_item']='Related item';
< $lang['reqs_unit_quantity']='Unit qty.';
< $lang['reqs_unit_quantity_total']='Total qty.';
< $lang['reqs_related_item_quantity']='Related item qty.';
< $lang['reqs_receipt']='Requisition Receipt';
< $lang['reqs_transaction_failed'] = 'Requisition Transactions Failed';
< $lang['reqs_unable_to_add_item']='Unable to add item to requisition';
36,40c3,51
< $lang['recvs_stock_source']='Stock source';
< $lang['recvs_stock_destination']='Stock destination';
< $lang['recvs_stock_locaiton']='Stock location';
< $lang['recvs_error_requisition']='Unable to move inventory from and to the same stock location';
< ?>
---
> $lang["receivings_transaction_failed"] = "Receivings Transactions Failed";
> $lang["recvs_basic_information"] = "Receiving information";
> $lang["recvs_cancel_receiving"] = "Cancel";
> $lang["recvs_cannot_be_deleted"] = "Receiving(s) could not be deleted";
> $lang["recvs_comments"] = "Comments";
> $lang["recvs_complete_receiving"] = "Finish";
> $lang["recvs_confirm_cancel_receiving"] = "Are you sure you want to clear this receiving? All items will cleared.";
> $lang["recvs_confirm_finish_receiving"] = "Are you sure you want to submit this receiving? This cannot be undone.";
> $lang["recvs_cost"] = "Cost";
> $lang["recvs_date"] = "Receiving Date";
> $lang["recvs_date_required"] = "A correct date needs to be filled in";
> $lang["recvs_date_type"] = "Date field is required";
> $lang["recvs_delete_confirmation"] = "Are you sure you want to delete this receiving, this action cannot be undone";
> $lang["recvs_delete_entire_sale"] = "Delete entire sale";
> $lang["recvs_discount"] = "Disc %";
> $lang["recvs_edit"] = "Edit";
> $lang["recvs_edit_sale"] = "Edit Receiving";
> $lang["recvs_employee"] = "Employee";
> $lang["recvs_error_editing_item"] = "Error editing item";
> $lang["recvs_error_requisition"] = "Unable to move inventory from and to the same stock location";
> $lang["recvs_find_or_scan_item"] = "Find/Scan Item";
> $lang["recvs_find_or_scan_item_or_receipt"] = "Find/Scan Item OR Receipt";
> $lang["recvs_id"] = "Receiving ID";
> $lang["recvs_invoice_enable"] = "Create Invoice";
> $lang["recvs_invoice_number"] = "Invoice #";
> $lang["recvs_invoice_number_duplicate"] = "Please enter an unique invoice number";
> $lang["recvs_item_name"] = "Item Name";
> $lang["recvs_mode"] = "Receiving Mode";
> $lang["recvs_new_supplier"] = "New Supplier";
> $lang["recvs_one_or_multiple"] = "receiving(s)";
> $lang["recvs_print_after_sale"] = "Print after sale";
> $lang["recvs_quantity"] = "Qty.";
> $lang["recvs_receipt"] = "Receivings Receipt";
> $lang["recvs_receipt_number"] = "Receiving #";
> $lang["recvs_receiving"] = "Receive";
> $lang["recvs_register"] = "Items Receiving";
> $lang["recvs_requisition"] = "Requisition";
> $lang["recvs_return"] = "Return";
> $lang["recvs_select_supplier"] = "Select Supplier (Optional)";
> $lang["recvs_start_typing_supplier_name"] = "Start Typing supplier's name...";
> $lang["recvs_stock_destination"] = "Stock destination";
> $lang["recvs_stock_locaiton"] = "Stock location";
> $lang["recvs_stock_source"] = "Stock source";
> $lang["recvs_successfully_deleted"] = "You have successfully deleted";
> $lang["recvs_successfully_updated"] = "Receiving successfully updated";
> $lang["recvs_supplier"] = "Supplier";
> $lang["recvs_total"] = "Total";
> $lang["recvs_unable_to_add_item"] = "Unable to add item to receiving";
> $lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/reports_lang.php opensourcepos/application/language/en/reports_lang.php
2,95c2,108
< $lang['reports_reports'] = 'Reports';
< $lang['reports_report'] = 'Report';
< $lang['reports_welcome_message'] = 'Welcome to the reports panel. Please select a report to view.';
< $lang['reports_sales_summary_report'] = 'Sales Summary Report';
< $lang['reports_categories_summary_report'] = 'Categories Summary Report';
< $lang['reports_customers_summary_report'] = 'Customers Summary Report';
< $lang['reports_suppliers_summary_report'] = 'Suppliers Summary Report';
< $lang['reports_items_summary_report'] = 'Items Summary Report';
< $lang['reports_employees_summary_report'] = 'Employees Summary Report';
< $lang['reports_taxes_summary_report'] = 'Taxes Summary Report';
< $lang['reports_date'] = 'Date';
< $lang['reports_name'] = 'Name';
< $lang['reports_quantity_purchased'] = 'Quantity Purchased';
< $lang['reports_sale_id'] = 'Sale ID';
< $lang['reports_items_purchased'] = 'Items Purchased';
< $lang['reports_sold_by'] = 'Sold By';
< $lang['reports_sold_to'] = 'Sold To';
< $lang['reports_category'] = 'Category';
< $lang['reports_customer'] = 'Customer';
< $lang['reports_employee'] = 'Employee';
< $lang['reports_item'] = 'Item';
< $lang['reports_items'] = 'Items';
< $lang['reports_supplier'] = 'Supplier';
< $lang['reports_employees'] = 'Employees';
< $lang['reports_subtotal'] = 'Subtotal';
< $lang['reports_total'] = 'Total';
< $lang['reports_tax'] = 'Tax';
< $lang['reports_profit'] = 'Profit';
< $lang['reports_report_input'] = 'Report Input';
< $lang['reports_discount'] = 'Discount';
< $lang['reports_type'] = 'Type';
< $lang['reports_discount'] = 'A discount greater than ';
< $lang['reports_date_range'] = 'Date Range';
< $lang['reports_today'] = 'Today';
< $lang['reports_yesterday'] = 'Yesterday';
< $lang['reports_last_7'] = 'Last 7 Days';
< $lang['reports_this_month'] = 'This Month';
< $lang['reports_last_month'] = 'Last Month';
< $lang['reports_this_year'] = 'This Year';
< $lang['reports_last_year'] = 'Last Year';
< $lang['reports_all_time'] = 'All Time';
< $lang['reports_detailed_sales_report'] = 'Detailed Sales Report';
< $lang['reports_comments'] = 'Comments';
< $lang['reports_discount'] = 'Discount';
< $lang['reports_sales']= 'Sale';
< $lang['reports_payment_type'] = 'Payment Type';
< $lang['reports_categories'] = 'Categories';
< $lang['reports_customers'] = 'Customers';
< $lang['reports_suppliers'] = 'Suppliers';
< $lang['reports_items'] = 'Items';
< $lang['reports_employees'] = 'Employees';
< $lang['reports_taxes'] = 'Taxes';
< $lang['reports_customer'] = 'Customer';
< $lang['reports_employee'] = 'Employee';
< $lang['reports_tax_percent'] = 'Tax Percent';
< $lang['reports_quantity_purchased'] = 'Quantity Purchased';
< $lang['reports_serial_number'] = 'Serial #';
< $lang['reports_description'] = 'Description';
< $lang['reports_date'] = 'Date';
< $lang['reports_sales_amount'] = 'Sales amount';
< $lang['reports_revenue'] = 'Revenue';
< $lang['reports_discounts'] = 'Discounts';
< $lang['reports_discounts_summary_report'] = 'Discounts Summary Report';
< $lang['reports_discount_percent'] = 'Discount Percent';
< $lang['reports_count'] = 'Count';
< $lang['reports_summary_reports'] = 'Summary Reports';
< $lang['reports_graphical_reports'] = 'Graphical Reports';
< $lang['reports_detailed_reports'] = 'Detailed Reports';
< $lang['reports_inventory_reports'] = 'Inventory Reports';
< $lang['reports_low_inventory'] = 'Low Inventory';
< $lang['reports_inventory_summary'] = ' Inventory Summary';
< $lang['reports_item_number'] = 'Item Number';
< $lang['reports_reorder_level'] = 'Reorder Level';
< $lang['reports_low_inventory_report'] = 'Low Inventory Report';
< $lang['reports_item_name'] = 'Item Name';
< $lang['reports_inventory_summary_report'] = 'Inventory Summary Report';
< $lang['reports_payment_type'] = 'Payment Type';
< $lang['reports_payments_summary_report'] = 'Payments Summary Report';
< $lang['reports_payments'] = 'Payments';
< $lang['reports_receivings'] = 'Receivings';
< $lang['reports_received_by'] = 'Received By';
< $lang['reports_supplied_by'] = 'Supplied by';
< $lang['reports_items_received'] = 'Items Received';
< $lang['reports_detailed_receivings_report'] = 'Detailed Receivings Report';
< $lang['reports_sale_type'] = 'Sale Type';
< $lang['reports_receiving_type'] = 'Receiving Type';
< $lang['reports_all'] = 'All';
< $lang['reports_returns'] = 'Returns';
< $lang['reports_discount'] = 'Discounts';
< $lang['reports_sales'] = 'Sales';
< $lang['reports_requisitions'] = 'Requisitions';
< $lang['reports_receiving_id'] = 'Receiving ID';
< $lang['reports_stock_location'] = 'Stock location';
< ?>
---
> 
> $lang["reports_all"] = "All";
> $lang["reports_all_time"] = "All Time";
> $lang["reports_categories"] = "Categories";
> $lang["reports_categories_summary_report"] = "Categories Summary Report";
> $lang["reports_category"] = "Category";
> $lang["reports_comments"] = "Comments";
> $lang["reports_count"] = "Count";
> $lang["reports_customer"] = "Customer";
> $lang["reports_customers"] = "Customers";
> $lang["reports_customers_summary_report"] = "Customers Summary Report";
> $lang["reports_date"] = "Date";
> $lang["reports_date_range"] = "Date Range";
> $lang["reports_description"] = "Description";
> $lang["reports_detailed_receivings_report"] = "Detailed Receivings Report";
> $lang["reports_detailed_reports"] = "Detailed Reports";
> $lang["reports_detailed_requisition_report"] = "";
> $lang["reports_detailed_sales_report"] = "Detailed Sales Report";
> $lang["reports_discount"] = "Discount";
> $lang["reports_discount_percent"] = "Discount Percent";
> $lang["reports_discounts"] = "Discounts";
> $lang["reports_discounts_summary_report"] = "Discounts Summary Report";
> $lang["reports_employee"] = "Employee";
> $lang["reports_employees"] = "Employees";
> $lang["reports_employees_summary_report"] = "Employees Summary Report";
> $lang["reports_graphical_reports"] = "Graphical Reports";
> $lang["reports_inventory"] = "Inventory";
> $lang["reports_inventory_low"] = "Low Inventory";
> $lang["reports_inventory_low_report"] = "Low Inventory Report";
> $lang["reports_inventory_reports"] = "Inventory Reports";
> $lang["reports_inventory_summary"] = " Inventory Summary";
> $lang["reports_inventory_summary_report"] = "Inventory Summary Report";
> $lang["reports_item"] = "Item";
> $lang["reports_item_name"] = "Item Name";
> $lang["reports_item_number"] = "Item Number";
> $lang["reports_items"] = "Items";
> $lang["reports_items_purchased"] = "Items Purchased";
> $lang["reports_items_received"] = "Items Received";
> $lang["reports_items_summary_report"] = "Items Summary Report";
> $lang["reports_last_7"] = "Last 7 Days";
> $lang["reports_last_month"] = "Last Month";
> $lang["reports_last_year"] = "Last Year";
> $lang["reports_low_inventory"] = "";
> $lang["reports_low_inventory_report"] = "";
> $lang["reports_name"] = "Name";
> $lang["reports_payment_type"] = "Payment Type";
> $lang["reports_payments"] = "Payments";
> $lang["reports_payments_summary_report"] = "Payments Summary Report";
> $lang["reports_profit"] = "Profit";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "Quantity Purchased";
> $lang["reports_received_by"] = "Received By";
> $lang["reports_receiving_id"] = "Receiving ID";
> $lang["reports_receiving_type"] = "Receiving Type";
> $lang["reports_receivings"] = "Receivings";
> $lang["reports_reorder_level"] = "Reorder Level";
> $lang["reports_report"] = "Report";
> $lang["reports_report_input"] = "Report Input";
> $lang["reports_reports"] = "Reports";
> $lang["reports_requisition"] = "";
> $lang["reports_requisition_by"] = "";
> $lang["reports_requisition_id"] = "";
> $lang["reports_requisition_item"] = "";
> $lang["reports_requisition_item_quantity"] = "";
> $lang["reports_requisition_related_item"] = "";
> $lang["reports_requisition_related_item_total_quantity"] = "";
> $lang["reports_requisition_related_item_unit_quantity"] = "";
> $lang["reports_requisitions"] = "Requisitions";
> $lang["reports_returns"] = "Returns";
> $lang["reports_revenue"] = "Revenue";
> $lang["reports_sale_id"] = "Sale ID";
> $lang["reports_sale_type"] = "Sale Type";
> $lang["reports_sales"] = "Sale";
> $lang["reports_sales_amount"] = "Sales amount";
> $lang["reports_sales_summary_report"] = "Sales Summary Report";
> $lang["reports_serial_number"] = "Serial #";
> $lang["reports_sold_by"] = "Sold By";
> $lang["reports_sold_to"] = "Sold To";
> $lang["reports_stock_location"] = "Stock Location";
> $lang["reports_subtotal"] = "Subtotal";
> $lang["reports_summary_reports"] = "Summary Reports";
> $lang["reports_supplied_by"] = "Supplied by";
> $lang["reports_supplier"] = "Supplier";
> $lang["reports_suppliers"] = "Suppliers";
> $lang["reports_suppliers_summary_report"] = "Suppliers Summary Report";
> $lang["reports_tax"] = "Tax";
> $lang["reports_tax_percent"] = "Tax Percent";
> $lang["reports_taxes"] = "Taxes";
> $lang["reports_taxes_summary_report"] = "Taxes Summary Report";
> $lang["reports_this_month"] = "This Month";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "This Year";
> $lang["reports_today"] = "Today";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "Total";
> $lang["reports_type"] = "Type";
> $lang["reports_welcome_message"] = "Welcome to the reports panel. Please select a report to view.";
> $lang["reports_yesterday"] = "Yesterday";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "Cost Price";
> $lang["reports_unit_price"] = "Retail Price";
> $lang["reports_sub_total_value"] = "Sub Total";
> $lang["reports_total_inventory_value"] = "Total Inventory Value";
> $lang["reports_zero_and_less"] = "Zero and less";
> $lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/sales_lang.php opensourcepos/application/language/en/sales_lang.php
2,89d1
< $lang['sales_giftcard_number']='Gift Card Number';
< $lang['sales_giftcard']='Gift Card';
< $lang['sales_register']='Sales Register';
< $lang['sales_mode']='Register Mode';
< $lang['sales_new_item'] = 'New Item';
< $lang['sales_item_name'] = 'Item Name';
< $lang['sales_item_number'] = 'Item #';
< $lang['sales_new_customer'] = 'New Customer';
< $lang['sales_customer'] = 'Customer';
< $lang['sales_no_items_in_cart']='There are no items in the cart';
< $lang['sales_total']='Total';
< $lang['sales_tax_percent']='Tax %';
< $lang['sales_price']='Price';
< $lang['sales_quantity']='Qty.';
< $lang['sales_discount']='Disc %';
< $lang['sales_edit']='Edit';
< $lang['sales_payment']='Payment Type';
< $lang['sales_edit_item']='Edit Item';
< $lang['sales_find_or_scan_item']='Find/Scan Item';
< $lang['sales_find_or_scan_item_or_receipt']='Find/Scan Item OR Receipt';
< $lang['sales_select_customer']='Select Customer (Optional)';
< $lang['sales_start_typing_item_name']='Start Typing item\'s name or scan barcode...';
< $lang['sales_start_typing_customer_name']='Start Typing customer\'s name...';
< $lang['sales_sub_total']='Sub Total';
< $lang['sales_tax']='Tax';
< $lang['sales_comment']='Comment';
< $lang['sales_unable_to_add_item']='Unable to add item to sale';
< $lang['sales_sale_for_customer']='Customer:';
< $lang['sales_remove_customer']='Remove Customer';
< $lang['sales_error_editing_item']='Error editing item';
< $lang['sales_complete_sale']='Complete Sale';
< $lang['sales_cancel_sale']='Cancel Sale';
< $lang['sales_add_payment']='Add Payment';
< $lang['sales_receipt']='Sales Receipt';
< $lang['sales_id']='Sale ID';
< $lang['sales_return']='Return';
< $lang['sales_confirm_finish_sale'] = 'Are you sure you want to submit this sale? This cannot be undone.';
< $lang['sales_confirm_cancel_sale'] = 'Are you sure you want to clear this sale? All items will cleared.';
< $lang['sales_cash'] = 'Cash';
< $lang['sales_check'] = 'Check';
< $lang['sales_debit'] = 'Debit Card';
< $lang['sales_credit'] = 'Credit Card';
< $lang['sales_giftcard'] = 'Gift Card';
< $lang['sales_oos_pmt'] = 'OOS PMT';
< $lang['sales_house_acct'] = 'House Account';
< $lang['sales_layaway_bal'] = 'Layaway Bal';
< $lang['sales_deposit'] = 'Deposit';
< $lang['sales_amount_tendered'] = 'Amount Tendered';
< $lang['sales_change_due'] = 'Change Due';
< $lang['sales_payment_not_cover_total'] = 'Payment Amount does not cover Total';
< $lang['sales_transaction_failed'] = 'Sales Transaction Failed';
< $lang['sales_must_enter_numeric'] = 'Must enter numeric value for amount tendered';
< $lang['sales_must_enter_numeric_giftcard'] = 'Must enter numeric value for giftcard number';
< $lang['sales_serial'] = 'Serial';
< $lang['sales_description_abbrv'] = 'Desc';
< $lang['sales_item_out_of_stock'] = 'Item is Out of Stock';
< $lang['sales_item_insufficient_of_stock'] = 'Item is Insufficient of Stock';
< $lang['sales_quantity_less_than_zero'] = 'Warning, Desired Quantity is Insufficient. You can still process the sale, but check your inventory';
< $lang['sales_successfully_updated'] = 'Sale successfully updated';
< $lang['sales_unsuccessfully_updated'] = 'Sale unsuccessfully updated';
< $lang['sales_edit_sale'] = 'Edit Sale';
< $lang['sales_employee'] = 'Employee';
< $lang['sales_successfully_deleted'] = 'Sale successfully deleted';
< $lang['sales_unsuccessfully_deleted'] = 'Sale unsuccessfully deleted';
< $lang['sales_delete_entire_sale'] = 'Delete entire sale';
< $lang['sales_delete_confirmation'] = 'Are you sure you want to delete this sale, this action cannot be undone';
< $lang['sales_date'] = 'Sale Date';
< $lang['sales_delete_successful'] = 'You have successfully deleted a sale';
< $lang['sales_delete_unsuccessful'] = 'You have unsuccessfully deleted a sale';
< $lang['sales_suspend_sale'] = 'Suspend Sale';
< $lang['sales_confirm_suspend_sale'] = 'Are you sure you want to suspend this sale?';
< $lang['sales_suspended_sales'] = 'Suspended Sales';
< $lang['sales_suspended_sale_id'] = 'Suspended Sale ID';
< $lang['sales_date'] = 'Date';
< $lang['sales_customer'] = 'Customer';
< $lang['sales_comments'] = 'Comments';
< $lang['sales_unsuspend_and_delete'] = 'Unsuspend and Delete';
< $lang['sales_unsuspend'] = 'Unsuspend';
< $lang['sales_successfully_suspended_sale'] = 'Your sale has been successfully suspended';
< $lang['sales_email_receipt'] = 'E-Mail Receipt';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Discount';
< $lang['sales_sale_time']='Time';
< $lang['sales_payments_total'] = 'Payments Total';
< $lang['sales_amount_due'] = 'Amount Due';
< $lang['sales_payment_type'] = "Type";
< $lang['sales_payment_amount'] = "Amount";
< $lang['sales_basic_information']='Sale information';
91,94c3,117
< $lang['sales_stock_location']='Stock location';
< $lang['sales_sale']='Sale';
< $lang['sales_no_description']='';
< ?>
---
> $lang["sales_add_payment"] = "Add Payment";
> $lang["sales_amount_due"] = "Amount Due";
> $lang["sales_amount_tendered"] = "Amount Tendered";
> $lang["sales_basic_information"] = "Sale information";
> $lang["sales_cancel_sale"] = "Cancel Sale";
> $lang["sales_cash"] = "Cash";
> $lang["sales_change_due"] = "Change Due";
> $lang["sales_check"] = "Check";
> $lang["sales_check_balance"] = "Check remainder";
> $lang["sales_comment"] = "Comment";
> $lang["sales_comments"] = "Comments";
> $lang["sales_complete_sale"] = "Complete Sale";
> $lang["sales_confirm_cancel_sale"] = "Are you sure you want to clear this sale? All items will cleared.";
> $lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
> $lang["sales_confirm_finish_sale"] = "Are you sure you want to submit this sale? This cannot be undone.";
> $lang["sales_confirm_suspend_sale"] = "Are you sure you want to suspend this sale?";
> $lang["sales_credit"] = "Credit Card";
> $lang["sales_customer"] = "Customer";
> $lang["sales_date"] = "Sale Date";
> $lang["sales_date_required"] = "A correct date needs to be filled in";
> $lang["sales_date_type"] = "Date field is required";
> $lang["sales_debit"] = "Debit Card";
> $lang["sales_delete_confirmation"] = "Are you sure you want to delete this sale, this action cannot be undone";
> $lang["sales_delete_entire_sale"] = "Delete entire sale";
> $lang["sales_delete_successful"] = "You have successfully deleted a sale";
> $lang["sales_delete_unsuccessful"] = "You have unsuccessfully deleted a sale";
> $lang["sales_description_abbrv"] = "Desc";
> $lang["sales_discount"] = "Disc %";
> $lang["sales_discount_included"] = "% Discount";
> $lang["sales_discount"] = "Discount";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "Edit";
> $lang["sales_edit_item"] = "Edit Item";
> $lang["sales_edit_sale"] = "Edit Sale";
> $lang["sales_email_receipt"] = "E-Mail Receipt";
> $lang["sales_employee"] = "Employee";
> $lang["sales_error_editing_item"] = "Error editing item";
> $lang["sales_find_or_scan_item"] = "Find/Scan Item";
> $lang["sales_find_or_scan_item_or_receipt"] = "Find/Scan Item OR Receipt";
> $lang["sales_giftcard"] = "Gift Card";
> $lang["sales_giftcard_balance"] = "Giftcard Balance";
> $lang["sales_giftcard_number"] = "Gift Card Number";
> $lang["sales_id"] = "Sale ID";
> $lang["sales_invoice"] = "Invoice";
> $lang["sales_invoice_confirm"] = "This invoice will be sent to";
> $lang["sales_invoice_enable"] = "Create Invoice";
> $lang["sales_invoice_filter"] = "Invoices";
> $lang["sales_cash_filter"] = "Cash";
> $lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
> $lang["sales_invoice_number"] = "Invoice #";
> $lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
> $lang["sales_invoice_sent"] = "Invoice sent to";
> $lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
> $lang["sales_invoice_update"] = "Recount";
> $lang["sales_item_insufficient_of_stock"] = "Item is Insufficient of Stock";
> $lang["sales_item_name"] = "Item Name";
> $lang["sales_item_number"] = "Item #";
> $lang["sales_item_out_of_stock"] = "Item is Out of Stock";
> $lang["sales_mode"] = "Register Mode";
> $lang["sales_must_enter_numeric"] = "Must enter numeric value for amount tendered";
> $lang["sales_must_enter_numeric_giftcard"] = "Must enter numeric value for giftcard number";
> $lang["sales_new_customer"] = "New Customer";
> $lang["sales_new_item"] = "New Item";
> $lang["sales_no_description"] = "None";
> $lang["sales_no_filter"] = "All";
> $lang["sales_no_items_in_cart"] = "There are no items in the cart";
> $lang["sales_no_sales_to_display"] = "No sales to display";
> $lang["sales_one_or_multiple"] = "sale(s)";
> $lang["sales_takings"] = "Takings";
> $lang["sales_payment"] = "Payment Type";
> $lang["sales_payment_amount"] = "Amount";
> $lang["sales_payment_not_cover_total"] = "Payment Amount does not cover Total";
> $lang["sales_payment_type"] = "Type";
> $lang["sales_payments_total"] = "Payments Total";
> $lang["sales_price"] = "Price";
> $lang["sales_print_after_sale"] = "Print after sale";
> $lang["sales_quantity"] = "Qty.";
> $lang["sales_quantity_less_than_zero"] = "Warning, Desired Quantity is Insufficient. You can still process the sale, but check your inventory";
> $lang["sales_quantity_less_than_reorder_level"] = "Warning, Desired Quantity is below reorder level";
> $lang["sales_receipt"] = "Sales Receipt";
> $lang["sales_receipt_number"] = "Sale #";
> $lang["sales_register"] = "Sales Register";
> $lang["sales_remove_customer"] = "Remove Customer";
> $lang["sales_return"] = "Return";
> $lang["sales_sale"] = "Sale";
> $lang["sales_sale_for_customer"] = "Customer:";
> $lang["sales_sale_time"] = "Time";
> $lang["sales_select_customer"] = "Select Customer (Optional)";
> $lang["sales_send_invoice"] = "Send Invoice";
> $lang["sales_serial"] = "Serial";
> $lang["sales_show_invoice"] = "invoice";
> $lang["sales_show_receipt"] = "receipt";
> $lang["sales_start_typing_customer_name"] = "Start Typing customer's name...";
> $lang["sales_start_typing_item_name"] = "Start Typing item's name or scan barcode...";
> $lang["sales_stock_location"] = "Stock location";
> $lang["sales_sub_total"] = "Sub Total";
> $lang["sales_successfully_deleted"] = "You have successfully deleted";
> $lang["sales_successfully_suspended_sale"] = "Your sale has been successfully suspended";
> $lang["sales_successfully_updated"] = "Sale successfully updated";
> $lang["sales_suspend_sale"] = "Suspend Sale";
> $lang["sales_suspended_sale_id"] = "ID";
> $lang["sales_suspended_sales"] = "Suspended Sales";
> $lang["sales_tax"] = "Tax";
> $lang["sales_tax_percent"] = "Tax %";
> $lang["sales_total"] = "Total";
> $lang["sales_total_tax_exclusive"] = "Tax excluded";
> $lang["sales_transaction_failed"] = "Sales Transaction Failed";
> $lang["sales_unable_to_add_item"] = "Unable to add item to sale";
> $lang["sales_unsuccessfully_deleted"] = "Sale(s) could not be deleted";
> $lang["sales_unsuccessfully_updated"] = "Sale unsuccessfully updated";
> $lang["sales_unsuspend"] = "Unsuspend";
> $lang["sales_unsuspend_and_delete"] = "";
> $lang["sales_update"] = "Edit Sale";
> $lang["sales_date_range"] = "Date Range";
> $lang["sales_none_selected"] = "You have not selected any sales to delete";
Only in pos-prod/application/language/en: sales_lang.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/language/en/suppliers_lang.php opensourcepos/application/language/en/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new'] = 'New Supplier';
< $lang['suppliers_supplier'] = 'Supplier';
< $lang['suppliers_update'] = 'Update Supplier';
< $lang['suppliers_confirm_delete'] = 'Are you sure you want to delete the selected suppliers?';
< $lang['suppliers_none_selected'] = 'You have not selected any suppliers to delete';
< $lang['suppliers_error_adding_updating'] = 'Error adding/updating supplier';
< $lang['suppliers_successful_adding'] = 'You have successfully added supplier';
< $lang['suppliers_successful_updating'] = 'You have successfully updated supplier';
< $lang['suppliers_successful_deleted'] = 'You have successfully deleted';
< $lang['suppliers_one_or_multiple'] = 'supplier(s)';
< $lang['suppliers_cannot_be_deleted'] = 'Could not deleted selected suppliers, one or more of the selected suppliers has sales.';
< $lang['suppliers_basic_information'] = 'Supplier Information';
< $lang['suppliers_account_number'] = 'Account #';
< $lang['suppliers_company_name'] = 'Company Name';
< $lang['suppliers_company_name_required'] = 'Company Name is a required field';
< ?>
---
> 
> $lang["suppliers_account_number"] = "Account #";
> $lang["suppliers_basic_information"] = "Supplier Information";
> $lang["suppliers_cannot_be_deleted"] = "Could not deleted selected suppliers, one or more of the selected suppliers has sales.";
> $lang["suppliers_company_name"] = "Company Name";
> $lang["suppliers_company_name_required"] = "Company Name is a required field";
> $lang["suppliers_agency_name"] = "Agency Name";
> $lang["suppliers_confirm_delete"] = "Are you sure you want to delete the selected suppliers?";
> $lang["suppliers_error_adding_updating"] = "Error adding/updating supplier";
> $lang["suppliers_new"] = "New Supplier";
> $lang["suppliers_none_selected"] = "You have not selected any suppliers to delete";
> $lang["suppliers_one_or_multiple"] = "supplier(s)";
> $lang["suppliers_successful_adding"] = "You have successfully added supplier";
> $lang["suppliers_successful_deleted"] = "You have successfully deleted";
> $lang["suppliers_successful_updating"] = "You have successfully updated supplier";
> $lang["suppliers_supplier"] = "Supplier";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "Update Supplier";
Only in pos-prod/application/language: english
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/common_lang.php opensourcepos/application/language/es/common_lang.php
2,41c2,57
< $lang['common_common'] = 'común';
< $lang['common_submit'] = 'Enviar';
< $lang['common_or'] = 'Ó';
< $lang['common_powered_by'] = 'Potenciado por';
< $lang['common_welcome'] = 'Bienvenido(a)';
< $lang['common_logout'] = 'Salir';
< $lang['common_list_of'] = 'Lista de';
< $lang['common_first_name'] = 'Nombre';
< $lang['common_last_name'] = 'Apellidos';
< $lang['common_email'] = 'E-Mail';
< $lang['common_phone_number'] = 'Teléfono';
< $lang['common_address_1'] = 'Dirección 1';
< $lang['common_address_2'] = 'Dirección 2';
< $lang['common_city'] = 'Ciudad';
< $lang['common_state'] = 'Estado';
< $lang['common_zip'] = 'C.P.';
< $lang['common_country'] = 'País';
< $lang['common_comments'] = 'Comentarios';
< $lang['common_edit'] = 'editar';
< $lang['common_search'] = 'Buscar';
< $lang['common_delete'] = 'Borrar';
< $lang['common_remove'] = 'Eliminar';
< $lang['common_view_recent_sales'] = 'Ver Ventas Recientes';
< $lang['common_you_are_using_ospos'] = 'Estás usando Open Source Point Of Sale Versión';
< $lang['common_please_visit_my'] = 'Por favor, visita mi';
< $lang['common_website'] = 'sitio';
< $lang['common_fields_required_message'] = 'Los campos en rojo son requeridos';
< $lang['common_learn_about_project'] = 'para leer la información más reciente acerca del proyecto';
< $lang['common_searched_for'] = 'Buscaste';
< $lang['common_first_name_required'] = 'Nombre es un campo requerido';
< $lang['common_last_name_required'] = 'Apellidos es un campo requerido';
< $lang['common_email_invalid_format'] = 'El e-mail no está en el formato requerido';
< $lang['common_confirm_search'] = 'Has seleccionado una o más filas. Éstas no estarán seleccionadas después de tu búsqueda. ¿Seguro(a) que quieres hacer esta búsqueda?';
< $lang['common_no_persons_to_display'] = 'No hay gente que mostrar';
< $lang['common_return_policy'] = 'Política de Devolución';
< $lang['common_price'] = 'Precio';
< $lang['common_welcome_message']= 'Bienvenido(a) a Open Source Point Of Sale. ¡Haz click en algún módulo debajo, para empezar!';
< $lang['common_inv'] = 'inv';
< $lang['common_det'] = 'detalles';
< ?>
---
> 
> $lang["common_address_1"] = "Dirección 1";
> $lang["common_address_2"] = "Dirección 2";
> $lang["common_city"] = "Ciudad";
> $lang["common_comments"] = "Comentarios";
> $lang["common_common"] = "común";
> $lang["common_confirm_search"] = "Has seleccionado una o más filas. Éstas no estarán seleccionadas después de tu búsqueda. ¿Seguro(a) que quieres hacer esta búsqueda?";
> $lang["common_country"] = "País";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "Borrar";
> $lang["common_print"] = "Print";
> $lang["common_det"] = "detalles";
> $lang["common_edit"] = "editar";
> $lang["common_email"] = "E-Mail";
> $lang["common_email_invalid_format"] = "El e-mail no está en el formato requerido";
> $lang["common_fields_required_message"] = "Los campos en rojo son requeridos";
> $lang["common_first_name"] = "Nombre";
> $lang["common_first_name_required"] = "Nombre es un campo requerido";
> $lang["common_first_page"] = "Primera";
> $lang["common_gender"] = "Género";
> $lang["common_gender_female"] = "F";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "inv";
> $lang["common_last_name"] = "Apellidos";
> $lang["common_last_name_required"] = "Apellidos es un campo requerido";
> $lang["common_last_page"] = "�ltima";
> $lang["common_learn_about_project"] = "para leer la información más reciente acerca del proyecto";
> $lang["common_list_of"] = "Lista de";
> $lang["common_logout"] = "Salir";
> $lang["common_new"] = "Nuevo";
> $lang["common_no_persons_to_display"] = "No hay gente que mostrar";
> $lang["common_or"] = "Ó";
> $lang["common_phone_number"] = "Teléfono";
> $lang["common_phone_number_required"] = "";
> $lang["common_please_visit_my"] = "Por favor, visita mi";
> $lang["common_powered_by"] = "Potenciado por";
> $lang["common_price"] = "Precio";
> $lang["common_remove"] = "Eliminar";
> $lang["common_return_policy"] = "Política de Devolución";
> $lang["common_search"] = "Buscar";
> $lang["common_search_options"] = "Opciones de búsqueda";
> $lang["common_searched_for"] = "Buscaste";
> $lang["common_state"] = "Estado";
> $lang["common_submit"] = "Enviar";
> $lang["common_view_recent_sales"] = "Ver Ventas Recientes";
> $lang["common_website"] = "sitio";
> $lang["common_welcome"] = "Bienvenido(a)";
> $lang["common_welcome_message"] = "Bienvenido(a) a Open Source Point Of Sale. ¡Haz click en algún módulo debajo, para empezar!";
> $lang["common_you_are_using_ospos"] = "Estás usando Open Source Point Of Sale Versión";
> $lang["common_zip"] = "Código Postal";
> $lang["common_import"] = "Importar";
> $lang["common_download_import_template"] = "Descargar Plantilla de Importación de Excel (CSV)";
> $lang["common_import_file_path"] = "Ruta del archivo";
> $lang["common_import_excel"] = "Importar Excel";
> $lang["common_import_full_path"] = "Requerida la ruta completa del archivo";
> $lang["common_required"] = "Requerido";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/config_lang.php opensourcepos/application/language/es/config_lang.php
2,36c2,122
< $lang['config_info'] = 'Información del Comercio';
< $lang['config_company'] = 'Nombre del Comercio';
< $lang['config_address'] = 'Dirección del Comercio';
< $lang['config_phone'] = 'Teléfono del Comercio';
< $lang['config_website'] = 'Sitio Web';
< $lang['config_fax'] = 'Fax';
< $lang['config_default_tax_rate'] = '% de Impuestos Predeterminada';
< $lang['config_default_tax_rate_1'] = 'Impuesto 1';
< $lang['config_default_tax_rate_2'] = 'Impuesto 2';
< $lang['config_company_required'] = 'Nombre del Comercio es requerido';
< $lang['config_address_required'] = 'Dirección del Comercio es requerida';
< $lang['config_phone_required'] = 'Teléfono del Comercio es requerido';
< $lang['config_default_tax_rate_required'] = 'El Impuesto Predeterminado es requerido';
< $lang['config_default_tax_rate_number'] = 'El Impuesto Predeterminado debe ser un número';
< $lang['config_company_website_url'] = 'Sitio Web no es una URL estándard (http://...)';
< $lang['config_saved_successfully'] = 'Configuración guardada satisfactoriamente';
< $lang['config_saved_unsuccessfully'] = 'Configuración no guardada';
< $lang['config_return_policy_required'] = 'Política de Devolución es requerida';
< $lang['config_print_after_sale'] = 'Imprimir recibo después de una venta';
< $lang['config_language'] = 'Idioma';
< $lang['config_timezone'] = 'Zona Horaria';
< $lang['config_currency_symbol'] = 'Símbolo de divisa';
< $lang['config_currency_side'] = 'Lado derecho'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Campo Libre 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Campo Libre 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Campo Libre 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Campo Libre 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Campo Libre 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Campo Libre 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Campo Libre 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Campo Libre 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Campo Libre 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Campo Libre 10'; //GARRISON ADDED 4/21/2013
< $lang['config_tax_included'] = 'Impuestos incluidos';
< ?>
---
> 
> $lang["config_address"] = "Dirección del Comercio";
> $lang["config_address_required"] = "Dirección del Comercio es requerida";
> $lang["config_backup_button"] = "Respaldo";
> $lang["config_backup_database"] = "Respaldo de Base de Datos";
> $lang["config_barcode_company"] = "Nombre del Comercio";
> $lang["config_barcode_configuration"] = "Configuración de Código de Barras";
> $lang["config_barcode_content"] = "Contenido de Código de Barras";
> $lang["config_barcode_first_row"] = "Fila 1";
> $lang["config_barcode_font"] = "Fuente";
> $lang["config_barcode_height"] = "Alto (px)";
> $lang["config_barcode_id"] = "Id/Nombre de Artículo";
> $lang["config_barcode_info"] = "Información de Configuración de Código de Barras";
> $lang["config_barcode_layout"] = "Presentación de Código de Barras";
> $lang["config_barcode_name"] = "Nombre";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Número en la línea";
> $lang["config_barcode_page_cellspacing"] = "Mostrar espacios de celdas de página";
> $lang["config_barcode_page_width"] = "Mostrar ancho de página";
> $lang["config_barcode_price"] = "Precio";
> $lang["config_barcode_quality"] = "Calidad (1-100)";
> $lang["config_barcode_second_row"] = "Fila 1";
> $lang["config_barcode_third_row"] = "Fila 2";
> $lang["config_barcode_type"] = "Tipo de Código de Barra";
> $lang["config_barcode_width"] = "Ancho (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "Nombre del Comercio";
> $lang["config_company_logo"] = "Logotipo del Comercio";
> $lang["config_company_required"] = "Nombre del Comercio es requerido";
> $lang["config_company_website_url"] = "Sitio Web no es una URL estándar (http://...)";
> $lang["config_currency_side"] = "Lado derecho";
> $lang["config_currency_symbol"] = "Símbolo de moneda";
> $lang["config_custom1"] = "Campo Libre 1";
> $lang["config_custom10"] = "Campo Libre 10";
> $lang["config_custom2"] = "Campo Libre 2";
> $lang["config_custom3"] = "Campo Libre 3";
> $lang["config_custom4"] = "Campo Libre 4";
> $lang["config_custom5"] = "Campo Libre 5";
> $lang["config_custom6"] = "Campo Libre 6";
> $lang["config_custom7"] = "Campo Libre 7";
> $lang["config_custom8"] = "Campo Libre 8";
> $lang["config_custom9"] = "Campo Libre 9";
> $lang["config_decimal_point"] = "Punto Decimal";
> $lang["config_default_barcode_font_size_number"] = "Tamaño de fuente del código de barras debe ser un número";
> $lang["config_default_barcode_font_size_required"] = "Tamaño de fuente del código de barras es requerido";
> $lang["config_default_barcode_height_number"] = "Alto del código de barras debe ser un número";
> $lang["config_default_barcode_height_required"] = "Alto del código de barras es requerido";
> $lang["config_default_barcode_num_in_row_number"] = "Número por fila del código de barras debe ser un número";
> $lang["config_default_barcode_num_in_row_required"] = "Número por fila del código de barras es requerido";
> $lang["config_default_barcode_page_cellspacing_number"] = "Espacios de celdas por página del código de barras debe ser un número";
> $lang["config_default_barcode_page_cellspacing_required"] = "Espacios de celdas por página del código de barras es requerido";
> $lang["config_default_barcode_page_width_number"] = "Ancho de página del código de barras debe ser un número";
> $lang["config_default_barcode_page_width_required"] = "Ancho de página del código de barras es requerido";
> $lang["config_default_barcode_quality_number"] = "Calidad del código de barras debe ser un número";
> $lang["config_default_barcode_quality_required"] = "Calidad del código de barras es requerido";
> $lang["config_default_barcode_width_number"] = "Ancho del código de barras debe ser número";
> $lang["config_default_barcode_width_required"] = "Ancho del código de barras es requerido";
> $lang["config_default_sales_discount"] = "% de Descuento en Ventas predeterminado";
> $lang["config_default_sales_discount_number"] = "Descuento en ventas predeterminado debe ser un número";
> $lang["config_default_sales_discount_required"] = "Descuento en ventas predeterminado es requerido";
> $lang["config_default_tax_rate"] = "% de Impuestos Predeterminado";
> $lang["config_default_tax_rate_1"] = "Impuesto 1";
> $lang["config_default_tax_rate_2"] = "Impuesto 2";
> $lang["config_default_tax_rate_number"] = "El Impuesto Predeterminado debe ser un número";
> $lang["config_default_tax_rate_required"] = "El Impuesto Predeterminado es requerido";
> $lang["config_fax"] = "Fax";
> $lang["config_general_configuration"] = "Configuración General ";
> $lang["config_info"] = "Información del Comercio";
> $lang["config_invoice_default_comments"] = "Comentarios predeterminados en la factura";
> $lang["config_invoice_email_message"] = "Plantilla de Factura por Email";
> $lang["config_invoice_printer"] = "Impresora de Factura";
> $lang["config_jsprintsetup_required"] = "Advertencia!Esta funcionalidad desactivada solo funciona con el addon jsPrintSetup de FireFox instalado. Guardar de todas formas?";
> $lang["config_language"] = "Idioma";
> $lang["config_lines_per_page"] = "Líneas por página";
> $lang["config_lines_per_page_number"] = "Líneas por página debe ser un número";
> $lang["config_lines_per_page_required"] = "Líneas por página es requerido";
> $lang["config_location_configuration"] = "Ubicación de Inventario";
> $lang["config_location_info"] = "Información de Configuración de Ubicación";
> $lang["config_logout"] = "Desea hacer un respaldo antes de salir?";
> $lang["config_number_format"] = "Formato de número";
> $lang["config_phone"] = "Teléfono del Comercio";
> $lang["config_phone_required"] = "Teléfono del Comercio es requerido";
> $lang["config_print_bottom_margin"] = "Margen Inferior";
> $lang["config_print_bottom_margin_number"] = "Margen Inferior debe ser un número";
> $lang["config_print_bottom_margin_required"] = "Margen Inferior es requerido";
> $lang["config_print_footer"] = "Imprimir el pie de página del navegador";
> $lang["config_print_header"] = "Imprimir el encabezado del navegador";
> $lang["config_print_left_margin"] = "Margen Izquierdo";
> $lang["config_print_left_margin_number"] = "Margen Izquierdo debe ser un número";
> $lang["config_print_left_margin_required"] = "Margen Izquierdo es requerido";
> $lang["config_print_right_margin"] = "Margen Derecho";
> $lang["config_print_right_margin_number"] = "Margen Derecho debe ser un número";
> $lang["config_print_right_margin_required"] = "Margen Derecho es requerido";
> $lang["config_print_silently"] = "Mostrar cuadro de Dialogo de impresión";
> $lang["config_print_top_margin"] = "Margen Superior";
> $lang["config_print_top_margin_number"] = "Margen Superior debe ser un número";
> $lang["config_print_top_margin_required"] = "Margen Superior es requerido";
> $lang["config_receipt_configuration"] = "Parámetros de Impresión";
> $lang["config_receipt_info"] = "Información de Configuración de Recibo";
> $lang["config_receipt_printer"] = "Impresora de Ticket";
> $lang["config_receipt_show_taxes"] = "Mostrar impuestos";
> $lang["config_receiving_calculate_average_price"] = "Calc precio promedio (Recepción)";
> $lang["config_recv_invoice_format"] = "Formato de Factura de Recepción";
> $lang["config_return_policy_required"] = "Política de Devolución es requerida";
> $lang["config_sales_invoice_format"] = "Formato de Facturas de Venta";
> $lang["config_saved_successfully"] = "Configuración guardada satisfactoriamente";
> $lang["config_saved_unsuccessfully"] = "Configuración no guardada";
> $lang["config_show_total_discount"] = "Mostrar Descuento Total";
> $lang["config_stock_location"] = "Ubicación de Inventario";
> $lang["config_stock_location_duplicate"] = "Por favor use un nombre de inventario único";
> $lang["config_stock_location_invalid_chars"] = "Nombre de la Ubicación de Inventario no debe contener '_'";
> $lang["config_stock_location_required"] = "Número de Ubicación de Inventario es requerido";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "Impuestos incluidos";
> $lang["config_thousands_separator"] = "Separador de miles";
> $lang["config_timezone"] = "Zona Horaria";
> $lang["config_use_invoice_template"] = "Use plantilla de factura";
> $lang["config_website"] = "Sitio Web";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/customers_lang.php opensourcepos/application/language/es/customers_lang.php
2,16c2,19
< $lang['customers_new'] = 'Nuevo Cliente';
< $lang['customers_customer'] = 'Cliente';
< $lang['customers_update'] = 'Actualizar Cliente';
< $lang['customers_confirm_delete'] = '¿Estás seguro(a) de que quieres borrar a los clientes seleccionados?';
< $lang['customers_none_selected'] = 'No has selccionado clientes para ser borrados';
< $lang['customers_error_adding_updating'] = 'Error agregando/actualizando cliente';
< $lang['customers_successful_adding'] = 'Has agregado satisfactoriamente el cliente';
< $lang['customers_successful_updating'] = 'No se ha podido agregar el cliente';
< $lang['customers_successful_deleted'] = 'Has borrado satisfactoriamente a';
< $lang['customers_one_or_multiple'] = 'cliente(s)';
< $lang['customers_cannot_be_deleted'] = 'No se pudo borrar los clientes seleccionados. Uno o más de éstos tiene ventas.';
< $lang['customers_basic_information'] = 'Información de Clientes';
< $lang['customers_account_number'] = 'Cuenta #';
< $lang['customers_taxable'] = 'Gravable';
< ?>
---
> 
> $lang["customers_account_number"] = "Cuenta #";
> $lang["customers_account_number_duplicate"] = "Este número de cuenta ya esta en la base de datos";
> $lang["customers_basic_information"] = "Información de Clientes";
> $lang["customers_cannot_be_deleted"] = "No se pudo borrar los clientes seleccionados. Uno o más de éstos tiene ventas.";
> $lang["customers_company_name"] = "Nombre del Comercio";
> $lang["customers_confirm_delete"] = "¿Seguro(a) de que quieres borrar a los clientes seleccionados?";
> $lang["customers_customer"] = "Cliente";
> $lang["customers_error_adding_updating"] = "Error agregando/actualizando cliente";
> $lang["customers_new"] = "Nuevo Cliente";
> $lang["customers_none_selected"] = "No has seleccionado clientes para ser borrados";
> $lang["customers_one_or_multiple"] = "cliente(s)";
> $lang["customers_successful_adding"] = "Has agregado satisfactoriamente el cliente";
> $lang["customers_successful_deleted"] = "Has borrado satisfactoriamente a";
> $lang["customers_successful_updating"] = "No se ha podido agregar el cliente";
> $lang["customers_taxable"] = "Gravable";
> $lang["customers_update"] = "Actualizar Cliente";
> $lang["customers_import_items_excel"] = "Importar Clientes desde Excel";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/employees_lang.php opensourcepos/application/language/es/employees_lang.php
2,27c2,28
< $lang['employees_employee'] = 'Empleado';
< $lang['employees_new'] = 'Nuevo Empleado';
< $lang['employees_update'] = 'Actualizar Empleado';
< $lang['employees_confirm_delete'] = '¿Estás seguro(a) que quieres borrar los empleados seleccionados?';
< $lang['employees_none_selected'] = 'No has seleccionado empleados para borrar';
< $lang['employees_error_adding_updating'] = 'Error al agregar/actualizar empleado';
< $lang['employees_successful_adding'] = 'Has agregado el empleado satisfactoriamente';
< $lang['employees_successful_updating'] = 'Has actualizado el empleado satisfactoriamente';
< $lang['employees_successful_deleted'] = 'Has borrado satisfactoriamente a';
< $lang['employees_one_or_multiple'] = 'empleado(s)';
< $lang['employees_cannot_be_deleted'] = 'No se pudieron borrar empleados. Uno o más empleados tiene ventas procesadas o estás tratando de borrarte a tí mismo(a).';
< $lang['employees_username'] = 'Usuario';
< $lang['employees_password'] = 'Contraseña';
< $lang['employees_repeat_password'] = 'Repita Contraseña';
< $lang['employees_username_required'] = 'Usuario es requerido';
< $lang['employees_username_minlength'] = 'El Usuario debe tener, por lo menos, 5 caracteres';
< $lang['employees_password_required'] = 'La Contraseña es requerida';
< $lang['employees_password_minlength'] = 'La contraseña debe tener, por lo menos, 8 caracteres';
< $lang['employees_password_must_match'] = 'Las Contraseñas no coinciden';
< $lang['employees_basic_information'] = 'Información Básica de Empleados';
< $lang['employees_login_info'] = 'Información de Ingreso del Empleado';
< $lang['employees_permission_info'] = 'Permisos y Acceso del Empleado';
< $lang['employees_permission_desc'] = 'Activa las cajas debajo para permitir el acceso a los módulos';
< $lang['employees_error_updating_demo_admin'] = 'No puedes cambiar el usuario admin del demo';
< $lang['employees_error_deleting_demo_admin'] = 'No puedes borrar el usuario admin del demo';
< ?>
---
> 
> $lang["employees_basic_information"] = "Información Básica de Empleados";
> $lang["employees_cannot_be_deleted"] = "No se pudieron borrar empleados. Uno o más empleados tiene ventas procesadas o estás tratando de borrarte a tí mismo(a).";
> $lang["employees_confirm_delete"] = "¿Seguro(a) que quieres borrar los empleados seleccionados?";
> $lang["employees_employee"] = "Empleado";
> $lang["employees_error_adding_updating"] = "Error al agregar/actualizar empleado";
> $lang["employees_error_deleting_demo_admin"] = "No puedes borrar el usuario admin del demo";
> $lang["employees_error_updating_demo_admin"] = "No puedes cambiar el usuario admin del demo";
> $lang["employees_login_info"] = "Información de Ingreso del Empleado";
> $lang["employees_new"] = "Nuevo Empleado";
> $lang["employees_none_selected"] = "No has seleccionado empleados para borrar";
> $lang["employees_one_or_multiple"] = "empleado(s)";
> $lang["employees_password"] = "Contraseña";
> $lang["employees_password_minlength"] = "La contraseña debe tener, por lo menos, 8 caracteres";
> $lang["employees_password_must_match"] = "Las Contraseñas no coinciden";
> $lang["employees_password_required"] = "La Contraseña es requerida";
> $lang["employees_permission_desc"] = "Activa las cajas debajo para permitir el acceso a los módulos";
> $lang["employees_permission_info"] = "Permisos y Acceso del Empleado";
> $lang["employees_repeat_password"] = "Repita Contraseña";
> $lang["employees_successful_adding"] = "Has agregado el empleado satisfactoriamente";
> $lang["employees_successful_deleted"] = "Has borrado satisfactoriamente a";
> $lang["employees_successful_updating"] = "Has actualizado el empleado satisfactoriamente";
> $lang["employees_update"] = "Actualizar Empleado";
> $lang["employees_username"] = "Usuario";
> $lang["employees_username_minlength"] = "El Usuario debe tener, por lo menos, 5 caracteres";
> $lang["employees_username_required"] = "Usuario es requerido";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/error_lang.php opensourcepos/application/language/es/error_lang.php
2,4c2,4
< $lang['error_no_permission_module'] = 'No tienes permiso para accesar el módulo llamado';
< $lang['error_unknown'] = 'desconocido';
< ?>
---
> 
> $lang["error_no_permission_module"] = "No tienes permiso para accesar el módulo llamado";
> $lang["error_unknown"] = "desconocido";
Only in pos-prod/application/language/es: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/giftcards_lang.php opensourcepos/application/language/es/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = 'Número de Tarjeta de Regalo';
< $lang['giftcards_card_value'] = 'Valor';
< $lang['giftcards_basic_information'] = 'Información de Tarjeta de Regalo';
< $lang['giftcards_number_required'] = 'Número de Tarjeta de Regalo es requerido';
< $lang['giftcards_value_required'] = 'Valor de Tarjeta de Regalo es requerido';
< $lang['giftcards_number'] = 'Número de Tarjeta de Regalo debe ser un número';
< $lang['giftcards_value'] = 'Valor de Tarjeta de Regalo debe ser un número';
< $lang['giftcards_person_id'] = 'Customer';
< $lang['giftcards_retrive_giftcard_info'] = 'Obtener Info de Tarjeta de Regalo';
< $lang['giftcards_description'] = 'Descripción';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'Base de Datos UPC';
< $lang['giftcards_cannot_find_giftcard'] = 'No puedo encontrar información acerca de la tarjeta de regalo';
< $lang['giftcards_info_provided_by'] = 'Info provista por';
< $lang['giftcards_number_information'] = 'Número de Tarjeta de Regalo';
< $lang['giftcards_new'] = 'Nueva Tarjeta de Regalo';
< $lang['giftcards_update'] = 'Actualizar Tarjeta de Regalo';
< $lang['giftcards_giftcard'] = 'Tarjeta de Regalo';
< $lang['giftcards_edit_multiple_giftcards'] = 'Editando Múltiples Tarjetas de Regalo';
< $lang['giftcards_category'] = 'Categoría';
< $lang['giftcards_cost_price'] = 'Precio de Costo';
< $lang['giftcards_unit_price'] = 'Precio Unitario';
< $lang['giftcards_tax_1'] = 'Impuesto 1';
< $lang['giftcards_tax_2'] = 'Impuesto 2';
< $lang['giftcards_sales_tax_1'] = 'Impuesto de Venta 1';
< $lang['giftcards_sales_tax_2'] = 'Impuesto de Venta 2';
< $lang['giftcards_tax_percent'] = 'Porcentaje de Impuesto';
< $lang['giftcards_tax_percents'] = 'Porcentaje de Impuesto(s)';
< $lang['giftcards_reorder_level'] = 'Cantidad Mínima';
< $lang['giftcards_quantity'] = 'Cantidad';
< $lang['giftcards_no_giftcards_to_display'] = 'No hay Tarjetas de Regalo';
< $lang['giftcards_bulk_edit'] = 'Edición Múltiple';
< $lang['giftcards_confirm_delete'] = '¿Estás seguro(a) de querer eliminar las tarjetas de regalo seleccionadas?';
< $lang['giftcards_none_selected'] = 'No has seleccionado tarjetas de regalo para editar';
< $lang['giftcards_confirm_bulk_edit'] = '¿Estás seguro(a) de querer editar las tarjetas de regalo seleccionadas?';
< $lang['giftcards_successful_bulk_edit'] = 'Has actualizado satisfactoriamente las tarjetas de regalo seleccionadas';
< $lang['giftcards_error_updating_multiple'] = 'Error actualizando tarjetas de regalo';
< $lang['giftcards_edit_fields_you_want_to_update'] = 'Edita los campos que quieras actualizar en TODAS las tarjetas de regalo seleccionadas';
< $lang['giftcards_error_adding_updating'] = 'Error agregando/actualizando tarjeta de regalo';
< $lang['giftcards_successful_adding'] = 'Has agregado satisfactoriamente una tarjeta de regalo';
< $lang['giftcards_successful_updating'] = 'Has actualizado satisfactoriamente una tarjeta de regalo';
< $lang['giftcards_successful_deleted'] = 'Has borrado satisfactoriamente';
< $lang['giftcards_one_or_multiple'] = 'tarjeta(s) de regalo';
< $lang['giftcards_cannot_be_deleted'] = 'No se puede borrar las tarjetas seleccionadas. Una o más tiene ventas.';
< $lang['giftcards_none'] = 'Ninguno(a)';
< $lang['giftcards_supplier'] = 'Proveedor';
< $lang['giftcards_generate_barcodes'] = 'Generar Códigos de Barras';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'Debes seleccionar por lo menos 1 tarjeta para generar códigos de barras';
< $lang['giftcards_excel_import_failed'] = 'Falló la exportación a Excel';
< $lang['giftcards_allow_alt_description'] = 'Permitir Descripción Alternativa';
< $lang['giftcards_is_serialized'] = 'La Tarjeta de Regalo tiene Número de Serie';
< $lang['giftcards_low_inventory_giftcards'] = 'Tarjetas con Bajo Inventario';
< $lang['giftcards_serialized_giftcards'] = 'Tarjetas Serializadas';
< $lang['giftcards_no_description_giftcards'] = 'Tarjetas de Regalo sin Descripción';
< $lang['giftcards_inventory_comments'] = 'Comentarios';
< $lang['giftcards_count'] = 'Actualizar Inventario';
< $lang['giftcards_details_count'] = 'Detalles del Levantamiento de Inventario';
< $lang['giftcards_add_minus'] = 'Inventario a agregar/substraer';
< $lang['giftcards_current_quantity'] = 'Cantidad Actual';
< $lang['giftcards_quantity_required'] = 'Cantidad es requerido. Por favor, haz click en ( X ) para cancelar';
< $lang['giftcards_do_nothing'] = 'No hacer nada';
< $lang['giftcards_change_all_to_serialized'] = 'Cambiar Todo A Serializado';
< $lang['giftcards_change_all_to_unserialized'] = 'Cambiar Todo A Deserializado';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Permitir Descripción Alternativa En Todos';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'No Permitir Descripción Alternativa Para Todos';
< $lang['giftcards_use_inventory_menu'] = 'Usar Menú de Inventario';
< $lang['giftcards_manually_editing_of_quantity'] = 'Edición Manual de Cantidad';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "Inventario a agregar/substraer";
> $lang["giftcards_allow_alt_description"] = "Permitir Descripción Alternativa";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "El valor excedente de la tarjeta de regalo %1 es de %2!";
> $lang["giftcards_basic_information"] = "Información de Tarjeta de Regalo";
> $lang["giftcards_bulk_edit"] = "Edición Múltiple";
> $lang["giftcards_cannot_be_deleted"] = "No se puede borrar las tarjetas seleccionadas. Una o más tiene ventas.";
> $lang["giftcards_cannot_find_giftcard"] = "No puedo encontrar información acerca de la tarjeta de regalo";
> $lang["giftcards_card_value"] = "Valor";
> $lang["giftcards_category"] = "Categoría";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "Permitir Descripción Alternativa En Todos";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "No Permitir Descripción Alternativa Para Todos";
> $lang["giftcards_change_all_to_serialized"] = "Cambiar Todo A Serializado";
> $lang["giftcards_change_all_to_unserialized"] = "Cambiar Todo A Deserializado";
> $lang["giftcards_confirm_bulk_edit"] = "¿Seguro(a) de querer editar las tarjetas de regalo seleccionadas?";
> $lang["giftcards_confirm_delete"] = "¿Seguro(a) de querer eliminar las tarjetas de regalo seleccionadas?";
> $lang["giftcards_cost_price"] = "Precio de Costo";
> $lang["giftcards_count"] = "Actualizar Inventario";
> $lang["giftcards_current_quantity"] = "Cantidad Actual";
> $lang["giftcards_description"] = "Descripción";
> $lang["giftcards_details_count"] = "Detalles del Levantamiento de Inventario";
> $lang["giftcards_do_nothing"] = "No hacer nada";
> $lang["giftcards_edit_fields_you_want_to_update"] = "Edita los campos que quieras actualizar en TODAS las tarjetas de regalo seleccionadas";
> $lang["giftcards_edit_multiple_giftcards"] = "Editando Múltiples Tarjetas de Regalo";
> $lang["giftcards_error_adding_updating"] = "Error agregando/actualizando tarjeta de regalo";
> $lang["giftcards_error_updating_multiple"] = "Error actualizando tarjetas de regalo";
> $lang["giftcards_excel_import_failed"] = "Falló la exportación a Hoja de Cálculo";
> $lang["giftcards_generate_barcodes"] = "Generar Códigos de Barras";
> $lang["giftcards_giftcard"] = "Tarjeta de Regalo";
> $lang["giftcards_giftcard_number"] = "Número de Tarjeta de Regalo";
> $lang["giftcards_info_provided_by"] = "Info provista por";
> $lang["giftcards_inventory_comments"] = "Comentarios";
> $lang["giftcards_is_serialized"] = "La Tarjeta de Regalo tiene Número de Serie";
> $lang["giftcards_low_inventory_giftcards"] = "Tarjetas con Bajo Inventario";
> $lang["giftcards_manually_editing_of_quantity"] = "Edición Manual de Cantidad";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "Debes seleccionar por lo menos 1 tarjeta para generar códigos de barras";
> $lang["giftcards_new"] = "Nueva Tarjeta de Regalo";
> $lang["giftcards_no_description_giftcards"] = "Tarjetas de Regalo sin Descripción";
> $lang["giftcards_no_giftcards_to_display"] = "No hay Tarjetas de Regalo";
> $lang["giftcards_none"] = "Ninguno(a)";
> $lang["giftcards_none_selected"] = "No has seleccionado tarjetas de regalo para editar";
> $lang["giftcards_number"] = "Número de Tarjeta de Regalo debe ser un número";
> $lang["giftcards_number_information"] = "Número de Tarjeta de Regalo";
> $lang["giftcards_number_required"] = "Número de Tarjeta de Regalo es requerido";
> $lang["giftcards_one_or_multiple"] = "tarjeta(s) de regalo";
> $lang["giftcards_person_id"] = "Cliente";
> $lang["giftcards_quantity"] = "Cantidad";
> $lang["giftcards_quantity_required"] = "Cantidad es requerido. Por favor, haz click en ( X ) para cancelar";
> $lang["giftcards_reorder_level"] = "Cantidad Mínima";
> $lang["giftcards_retrive_giftcard_info"] = "Obtener Info de Tarjeta de Regalo";
> $lang["giftcards_sales_tax_1"] = "Impuesto de Venta 1";
> $lang["giftcards_sales_tax_2"] = "Impuesto de Venta 2";
> $lang["giftcards_serialized_giftcards"] = "Tarjetas Serializadas";
> $lang["giftcards_successful_adding"] = "Has agregado satisfactoriamente una tarjeta de regalo";
> $lang["giftcards_successful_bulk_edit"] = "Has actualizado satisfactoriamente las tarjetas de regalo seleccionadas";
> $lang["giftcards_successful_deleted"] = "Has borrado satisfactoriamente";
> $lang["giftcards_successful_updating"] = "Has actualizado satisfactoriamente una tarjeta de regalo";
> $lang["giftcards_supplier"] = "Proveedor";
> $lang["giftcards_tax_1"] = "Impuesto 1";
> $lang["giftcards_tax_2"] = "Impuesto 2";
> $lang["giftcards_tax_percent"] = "Porcentaje de Impuesto";
> $lang["giftcards_tax_percents"] = "Porcentaje de Impuesto(s)";
> $lang["giftcards_unit_price"] = "Precio Unitario";
> $lang["giftcards_upc_database"] = "Base de Datos UPC";
> $lang["giftcards_update"] = "Actualizar Tarjeta de Regalo";
> $lang["giftcards_use_inventory_menu"] = "Usar Menú de Inventario";
> $lang["giftcards_value"] = "Valor de Tarjeta de Regalo debe ser un número";
> $lang["giftcards_value_required"] = "Valor de Tarjeta de Regalo es requerido";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/index.html opensourcepos/application/language/es/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/item_kits_lang.php opensourcepos/application/language/es/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = 'Nombre del Kit de Artículos';
< $lang['item_kits_description'] = 'Descripción del Kit de Artículos';
< $lang['item_kits_no_item_kits_to_display'] = 'No hay kits de artículos para mostrar';
< $lang['item_kits_update'] = 'Actualizar Kit de Artículos';
< $lang['item_kits_new'] = 'Nuevo Kit de Artículos';
< $lang['item_kits_none_selected'] = "No has seleccionado Kits de Artículos";
< $lang['item_kits_info'] = 'Info de Kit de Artículos';
< $lang['item_kits_successful_adding'] = 'Has agregado satisfactoriamente un Kit de Artículos';
< $lang['item_kits_successful_updating'] = 'Has actualizado satisfactoriamente un Kit de Artículos';
< $lang['item_kits_error_adding_updating'] = 'Error agregando/actualizando el Kit de Artículos';
< $lang['item_kits_successful_deleted'] = 'Has borrado satisfactoriamente';
< $lang['item_kits_confirm_delete'] = '¿Estás seguro(a) de querer borrar los kits seleccionados?';
< $lang['item_kits_one_or_multiple'] = 'Kit(s) de Artículos';
< $lang['item_kits_cannot_be_deleted'] = 'No pude borrar el/los Kit(s) de Artículos';
< $lang['item_kits_add_item'] = 'Agregar Artículo';
< $lang['item_kits_items'] = 'Artículos';
< $lang['item_kits_item'] = 'Artículo';
< $lang['item_kits_quantity'] = 'Cantidad';
< ?>
---
> 
> $lang["item_kits_add_item"] = "Agregar Artículo";
> $lang["item_kits_cannot_be_deleted"] = "No pude borrar el/los Kit(s) de Artículos";
> $lang["item_kits_confirm_delete"] = "¿Estás seguro(a) de querer borrar los kits seleccionados?";
> $lang["item_kits_description"] = "Descripción del Kit de Artículos";
> $lang["item_kits_error_adding_updating"] = "Error agregando/actualizando el Kit de Artículos";
> $lang["item_kits_info"] = "Info de Kit de Artículos";
> $lang["item_kits_item"] = "Artículo";
> $lang["item_kits_items"] = "Artículos";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "Nombre del Kit de Artículos";
> $lang["item_kits_new"] = "Nuevo Kit de Artículos";
> $lang["item_kits_no_item_kits_to_display"] = "No hay kits de artículos para mostrar";
> $lang["item_kits_none_selected"] = "No has seleccionado Kits de Artículos";
> $lang["item_kits_one_or_multiple"] = "Kit(s) de Artículos";
> $lang["item_kits_quantity"] = "Cantidad";
> $lang["item_kits_successful_adding"] = "Has agregado satisfactoriamente un Kit de Artículos";
> $lang["item_kits_successful_deleted"] = "Has borrado satisfactoriamente";
> $lang["item_kits_successful_updating"] = "Has actualizado satisfactoriamente un Kit de Artículos";
> $lang["item_kits_update"] = "Actualizar Kit de Artículos";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/items_lang.php opensourcepos/application/language/es/items_lang.php
2,81c2,88
< $lang['items_item_number'] = 'UPC/EAN/ISBN';
< $lang['items_retrive_item_info'] = 'Obtener Info de Artículo';
< $lang['items_description'] = 'Descripción';
< $lang['items_amazon'] = 'Amazon';
< $lang['items_upc_database'] = 'Base de datos UPC';
< $lang['items_cannot_find_item'] = 'No puedo encontrar información acerca del artículo';
< $lang['items_info_provided_by'] = 'Info provista por';
< $lang['items_basic_information'] = 'Infomación del Artículo';
< $lang['items_number_information'] = 'Número del Artículo';
< $lang['items_new'] = 'Nuevo Artículo';
< $lang['items_update'] = 'Actualizar Artículo';
< $lang['items_item'] = 'Artículo';
< $lang['items_edit_multiple_items'] = 'Editando Artículos Múltiples';
< $lang['items_name'] = 'Nombre del Artículo';
< $lang['items_category'] = 'Categoría';
< $lang['items_cost_price'] = 'Precio de Compra';
< $lang['items_unit_price'] = 'Precio de Venta';
< $lang['items_tax_1'] = 'Impuesto 1';
< $lang['items_tax_2'] = 'Impuesto 2';
< $lang['items_sales_tax_1'] = 'Impuesto de Ventas 1';
< $lang['items_sales_tax_2'] = 'Impuesto de Ventas 2';
< $lang['items_tax_percent'] = 'Porcentaje de Impuesto';
< $lang['items_tax_percents'] = 'Porcentaje de Impuesto(s)';
< $lang['items_reorder_level'] = 'Cantidad Mínima';
< $lang['items_quantity'] = 'Cantidad en Stock';
< $lang['items_reorder_level'] = 'Stock Mínimo';
< $lang['items_no_items_to_display'] = 'No hay artículos que mostrar';
< $lang['items_bulk_edit'] = 'Edición Múltiple';
< $lang['items_confirm_delete'] = '¿Estás seguro(a) de querer borrar los artículos seleccionados?';
< $lang['items_none_selected'] = 'No has seleccionado artículos para editar';
< $lang['items_confirm_bulk_edit'] = '¿Estás seguro(a) de querer editar los artículos seleccionados?';
< $lang['items_successful_bulk_edit'] = 'Has actualizado satisfactoriamente los artículos seleccionados';
< $lang['items_error_updating_multiple'] = 'Error actualizando artículos';
< $lang['items_edit_fields_you_want_to_update'] = 'Edita los campos que quieras actualizar en TODOS los artículos seleccionados';
< $lang['items_error_adding_updating'] = 'Error agregando/actualizando artículo';
< $lang['items_successful_adding'] = 'Has agregado satisfactoriamente un artículo';
< $lang['items_successful_updating'] = 'Has actualizando satisfactoriamente un artículo';
< $lang['items_successful_deleted'] = 'Has borrado satisfactoriamente';
< $lang['items_one_or_multiple'] = 'articulo(s)';
< $lang['items_cannot_be_deleted'] = 'No se pueden borrar los artículos seleccionados. Uno o más tiene(n) ventas.';
< $lang['items_name_required'] = 'Nombre de Artículo es requerido';
< $lang['items_category_required'] = 'Categoría es requerido';
< $lang['items_buy_price_required'] = 'Precio de Compra es requerido';
< $lang['items_unit_price_required'] = 'Precio de Venta es requerido';
< $lang['items_cost_price_required'] = 'Precio de Compra es requerido';
< $lang['items_tax_percent_required'] = 'Porcentaje de Impuesto es requerido';
< $lang['items_quantity_required'] = 'Cantidad es requerido';
< $lang['items_reorder_level_required'] = 'Cantidad Mínima es requerido';
< $lang['items_unit_price_number'] = 'Precio de Venta debe ser número';
< $lang['items_cost_price_number'] = 'Precio de Compra debe ser número';
< $lang['items_quantity_number'] = 'Cantidad debe ser número';
< $lang['items_reorder_level_number'] = 'Cantidad Mínima debe ser número';
< $lang['items_none'] = 'Ninguno';
< $lang['items_supplier'] = 'Proveedor';
< $lang['items_generate_barcodes'] = 'Generar Códigos de Barras';
< $lang['items_must_select_item_for_barcode'] = 'Debes seleccionar al menos 1 artículo para generar códigos de barras';
< $lang['items_excel_import_failed'] = 'Falló la importación de Excel';
< $lang['items_allow_alt_description'] = 'Permitir Descripción Alternativa';
< $lang['items_is_serialized'] = 'El Artículo tiene Número de Serie';
< $lang['items_low_inventory_items'] = 'Artículos de Inventario Escaso';
< $lang['items_serialized_items'] = 'Artículos Serializados';
< $lang['items_no_description_items'] = 'Artículos sin Descripción';
< $lang['items_search_custom_items'] = 'Buscar en campos personalizados';//GARRISON ADDED
< $lang['items_inventory_comments'] = 'Comentarios';
< $lang['items_count'] = 'Actualizar Inventario';
< $lang['items_details_count'] = 'Detalles de Cuenta de Inventario';
< $lang['items_add_minus'] = 'Inventario a agregar/substraer';
< $lang['items_current_quantity'] = 'Cantidad Actual';
< $lang['items_quantity_required'] = 'Cantidad es un valor requerido. Por favor cierre (X) para cancelar';
< $lang['items_do_nothing'] = 'No Hacer Nada';
< $lang['items_change_all_to_serialized'] = 'Cambiar Todo A Serializado';
< $lang['items_change_all_to_unserialized'] = 'Cambiar Todo A Deserializado';
< $lang['items_change_all_to_allow_alt_desc'] = 'Permitir Descripción Alternativa Para Todos';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Denegar Descripción Alternativa Para Todos';
< $lang['items_use_inventory_menu'] = 'Usar Menú de Inventario';
< $lang['items_manually_editing_of_quantity'] = 'Edición Manual de Cantidad';
< $lang['items_inventory'] = 'Inventario';
< $lang['items_location'] = 'Ubicación';
< $lang['items_is_deleted'] = 'Eliminado';// Parq 131215
< ?>
---
> 
> $lang["items_add_minus"] = "Inventario a agregar/substraer";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "Permitir Descripción Alternativa";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "Información del Artículo";
> $lang["items_bulk_edit"] = "Edición Múltiple";
> $lang["items_buy_price_required"] = "Precio de Compra es requerido";
> $lang["items_cannot_be_deleted"] = "No se pueden borrar los artículos seleccionados. Uno o más tiene(n) ventas.";
> $lang["items_cannot_find_item"] = "No puedo encontrar información acerca del artículo";
> $lang["items_category"] = "Categoría";
> $lang["items_category_required"] = "Categoría es requerido";
> $lang["items_change_all_to_allow_alt_desc"] = "Permitir Descripción Alternativa Para Todos";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Denegar Descripción Alternativa Para Todos";
> $lang["items_change_all_to_serialized"] = "Cambiar Todo A Serializado";
> $lang["items_change_all_to_unserialized"] = "Cambiar Todo A Deserializado";
> $lang["items_confirm_bulk_edit"] = "¿Estás seguro(a) de querer editar los artículos seleccionados?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "¿Estás seguro(a) de querer borrar los artículos seleccionados?";
> $lang["items_cost_price"] = "Precio de Compra";
> $lang["items_cost_price_number"] = "Precio de Compra debe ser número";
> $lang["items_cost_price_required"] = "Precio de Compra es requerido";
> $lang["items_count"] = "Actualizar Inventario";
> $lang["items_current_quantity"] = "Cantidad Actual";
> $lang["items_description"] = "Descripción";
> $lang["items_details_count"] = "Detalles de Cuenta de Inventario";
> $lang["items_do_nothing"] = "No Hacer Nada";
> $lang["items_edit_fields_you_want_to_update"] = "Edita los campos que quieras actualizar en TODOS los artículos seleccionados";
> $lang["items_edit_multiple_items"] = "Editando Artículos Múltiples";
> $lang["items_error_adding_updating"] = "Error agregando/actualizando artículo";
> $lang["items_error_updating_multiple"] = "Error actualizando artículos";
> $lang["items_excel_import_failed"] = "Falló la importación de Hoja de Cálculo";
> $lang["items_generate_barcodes"] = "Generar Códigos de Barras";
> $lang["items_image"] = "Avatar";
> $lang["items_info_provided_by"] = "Info provista por";
> $lang["items_inventory"] = "Inventario";
> $lang["items_inventory_comments"] = "Comentarios";
> $lang["items_is_deleted"] = "Eliminado";
> $lang["items_is_serialized"] = "El Artículo tiene Número de Serie";
> $lang["items_item"] = "Artículo";
> $lang["items_item_number"] = "UPC/EAN/ISBN";
> $lang["items_item_number_duplicate"] = "El número de artículo ya esta presente en la base de datos";
> $lang["items_location"] = "Ubicación";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "Artículos de Inventario Escaso";
> $lang["items_manually_editing_of_quantity"] = "Edición Manual de Cantidad";
> $lang["items_must_select_item_for_barcode"] = "Debes seleccionar al menos 1 artículo para generar códigos de barras";
> $lang["items_name"] = "Nombre del Artículo";
> $lang["items_name_required"] = "Nombre de Artículo es requerido";
> $lang["items_new"] = "Nuevo Artículo";
> $lang["items_no_description_items"] = "Artículos sin Descripción";
> $lang["items_no_items_to_display"] = "No hay artículos que mostrar";
> $lang["items_none"] = "Ninguno";
> $lang["items_none_selected"] = "No has seleccionado artículos para editar";
> $lang["items_number_information"] = "Número del Artículo";
> $lang["items_number_required"] = "UPC/EAN/ISBN es requerido";
> $lang["items_one_or_multiple"] = "articulo(s)";
> $lang["items_quantity"] = "Cantidad en Stock";
> $lang["items_quantity_number"] = "Cantidad debe ser número";
> $lang["items_quantity_required"] = "Cantidad es requerido";
> $lang["items_receiving_quantity"] = "Cantidad Recibida";
> $lang["items_reorder_level"] = "Cantidad Mínima";
> $lang["items_reorder_level_number"] = "Cantidad Mínima debe ser número";
> $lang["items_reorder_level_required"] = "Cantidad Mínima es requerido";
> $lang["items_retrive_item_info"] = "Obtener Info de Artículo";
> $lang["items_sales_tax_1"] = "Impuesto de Ventas 1";
> $lang["items_sales_tax_2"] = "Impuesto de Ventas 2";
> $lang["items_search_custom_items"] = "Buscar en campos personalizados";
> $lang["items_serialized_items"] = "Artículos Serializados";
> $lang["items_stock_location"] = "Ubicación de Inventario";
> $lang["items_successful_adding"] = "Has agregado satisfactoriamente un artículo";
> $lang["items_successful_bulk_edit"] = "Has actualizado satisfactoriamente los artículos seleccionados";
> $lang["items_successful_deleted"] = "Has borrado satisfactoriamente";
> $lang["items_successful_updating"] = "Has actualizando satisfactoriamente un artículo";
> $lang["items_supplier"] = "Proveedor";
> $lang["items_tax_1"] = "Impuesto 1";
> $lang["items_tax_2"] = "Impuesto 2";
> $lang["items_tax_percent"] = "Porcentaje de Impuesto";
> $lang["items_tax_percent_required"] = "Porcentaje de Impuesto es requerido";
> $lang["items_tax_percents"] = "Porcentaje de Impuesto(s)";
> $lang["items_unit_price"] = "Precio de Venta";
> $lang["items_unit_price_number"] = "Precio de Venta debe ser número";
> $lang["items_unit_price_required"] = "Precio de Venta es requerido";
> $lang["items_upc_database"] = "Base de datos UPC";
> $lang["items_update"] = "Actualizar Artículo";
> $lang["items_use_inventory_menu"] = "Usar Menú de Inventario";
> $lang["items_import_items_excel"] = "Importar Artículos desde Excel";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/login_lang.php opensourcepos/application/language/es/login_lang.php
2,8c2,8
< $lang['login_login'] = 'Iniciar Sesión';
< $lang['login_username'] = 'Usuario';
< $lang['login_password'] = 'Contraseña';
< $lang['login_go'] = 'Ir';
< $lang['login_invalid_username_and_password'] = 'Usuario/Contraseña inválidos';
< $lang['login_welcome_message'] = 'Bienvenido(a) al Sistema Open Source Point of Sale. Para continuar, inicia sesión usando tu Usuario y Contraseña.';
< ?>
---
> 
> $lang["login_go"] = "Ir";
> $lang["login_invalid_username_and_password"] = "Usuario/Contraseña inválidos";
> $lang["login_login"] = "Iniciar Sesión";
> $lang["login_password"] = "Contraseña";
> $lang["login_username"] = "Usuario";
> $lang["login_welcome_message"] = "Bienvenido(a) al Sistema Open Source Point of Sale. Para continuar, inicia sesión usando tu Usuario y Contraseña.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/module_lang.php opensourcepos/application/language/es/module_lang.php
2d1
< $lang['module_home'] = 'Inicio';
4,34c3,23
< $lang['module_customers'] = 'Clientes';
< $lang['module_customers_desc'] = 'Agregar, Actualizar, Borrar y Buscar clientes';
< 
< $lang['module_suppliers'] = 'Proveedores';
< $lang['module_suppliers_desc'] = 'Agregar, Actualizar, Borrar y Buscar proveedores';
< 
< $lang['module_employees'] = 'Empleados';
< $lang['module_employees_desc'] = 'Agregar, Actualizar, Borrar y Buscar empleados';
< 
< $lang['module_sales'] = 'Ventas';
< $lang['module_sales_desc'] = 'Procesar ventas y devoluciones';
< 
< $lang['module_reports'] = 'Reportes';
< $lang['module_reports_desc'] = 'Ver y generar reportes';
< 
< $lang['module_items'] = 'Artículos';
< $lang['module_items_desc'] = 'Agregar, Actualizar, Borrar y Buscar artículos';
< 
< $lang['module_config'] = 'Configuración de la Tienda';
< $lang['module_config_desc'] = 'Cambiar la configuración de la tienda';
< 
< $lang['module_receivings'] = 'Recepción';
< $lang['module_receivings_desc'] = 'Procesar órdenes de compra';
< 
< $lang['module_giftcards'] = 'Tarjetas de Regalo';
< $lang['module_giftcards_desc'] = 'Agregar, Actualizar, Borrar y Buscar Tarjetas de Regalo';
< 
< $lang['module_item_kits'] = 'Kits de Artículos';
< $lang['module_item_kits_desc'] = 'Agregar, Actualizar, Borrar y Buscar Kits de Artículos';
< 
< ?>
---
> $lang["module_config"] = "Configuración de la Tienda";
> $lang["module_config_desc"] = "Cambiar la configuración de la tienda";
> $lang["module_customers"] = "Clientes";
> $lang["module_customers_desc"] = "Agregar, Actualizar, Borrar y Buscar clientes";
> $lang["module_employees"] = "Empleados";
> $lang["module_employees_desc"] = "Agregar, Actualizar, Borrar y Buscar empleados";
> $lang["module_giftcards"] = "Tarjetas de Regalo";
> $lang["module_giftcards_desc"] = "Agregar, Actualizar, Borrar y Buscar Tarjetas de Regalo";
> $lang["module_home"] = "Inicio";
> $lang["module_item_kits"] = "Kits de Artículos";
> $lang["module_item_kits_desc"] = "Agregar, Actualizar, Borrar y Buscar Kits de Artículos";
> $lang["module_items"] = "Artículos";
> $lang["module_items_desc"] = "Agregar, Actualizar, Borrar y Buscar artículos";
> $lang["module_receivings"] = "Recepción";
> $lang["module_receivings_desc"] = "Procesar órdenes de compra";
> $lang["module_reports"] = "Reportes";
> $lang["module_reports_desc"] = "Ver y generar reportes";
> $lang["module_sales"] = "Ventas";
> $lang["module_sales_desc"] = "Procesar ventas y devoluciones";
> $lang["module_suppliers"] = "Proveedores";
> $lang["module_suppliers_desc"] = "Agregar, Actualizar, Borrar y Buscar proveedores";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/receivings_lang.php opensourcepos/application/language/es/receivings_lang.php
2,26c2,51
< $lang['recvs_register'] = 'Entrada de Artículos';
< $lang['recvs_mode'] = 'Modo de Entradas';
< $lang['recvs_receiving'] = 'Recibir';
< $lang['recvs_return'] = 'Devolver';
< $lang['recvs_total'] = 'Total';
< $lang['recvs_cost'] = 'Costo';
< $lang['recvs_quantity'] = 'Cant.';
< $lang['recvs_discount'] = 'Descuento %';
< $lang['recvs_edit'] = 'Editar';
< $lang['recvs_new_supplier'] = 'Nuevo Proveedor';
< $lang['recvs_supplier'] = 'Proveedor';
< $lang['recvs_select_supplier'] = 'Seleccionar Proveedor (Opcional)';
< $lang['recvs_start_typing_supplier_name'] = 'Empieza a escribir el nombre del proveedor...';
< $lang['recvs_unable_to_add_item'] = 'No se puede agregar el artículo a la entrada';
< $lang['recvs_error_editing_item'] = 'Error al editar artículo';
< $lang['recvs_receipt'] = 'Recibo de Entrada';
< $lang['recvs_complete_receiving'] = 'Terminar';
< $lang['recvs_confirm_finish_receiving'] = '¿Estás seguro(a) de querer procesar esta entrada? Ésto no puede ser deshecho.';
< $lang['recvs_confirm_cancel_receiving'] = '¿Estás seguro(a) de querer limpiar esta entrada? Todos los artículos serán limpiados.';
< $lang['recvs_find_or_scan_item'] = 'Encontrar/Escanear Artículo';
< $lang['recvs_find_or_scan_item_or_receipt'] = 'Encontrar/Escanear Artículo o Entrada';
< $lang['recvs_id'] = 'ID de Entrada';
< $lang['recvs_item_name'] = 'Nombre del Artículo';
< $lang['receivings_transaction_failed'] = 'Las Transacciones de Entrada Fallaron';
< ?>
---
> 
> $lang["receivings_transaction_failed"] = "Las Transacciones de Entrada Fallaron";
> $lang["recvs_basic_information"] = "Información de Ingreso";
> $lang["recvs_cancel_receiving"] = "Cancelar";
> $lang["recvs_cannot_be_deleted"] = "Ingreso(s) no pueden borrarse";
> $lang["recvs_comments"] = "Comentarios";
> $lang["recvs_complete_receiving"] = "Terminar";
> $lang["recvs_confirm_cancel_receiving"] = "¿Estás seguro(a) de querer limpiar esta entrada? Todos los artículos serán limpiados.";
> $lang["recvs_confirm_finish_receiving"] = "¿Estás seguro(a) de querer procesar esta entrada? Ésto no puede ser deshecho.";
> $lang["recvs_cost"] = "Costo";
> $lang["recvs_date"] = "Fecha de Recepción";
> $lang["recvs_date_required"] = "Una fecha correcta debe ser ingresada";
> $lang["recvs_date_type"] = "Campo Fecha es requerido";
> $lang["recvs_delete_confirmation"] = "¿Seguro(a) que desea borrar este ingreso? Esta acción no se puede deshacer";
> $lang["recvs_delete_entire_sale"] = "Borrar venta completa";
> $lang["recvs_discount"] = "Descuento %";
> $lang["recvs_edit"] = "Editar";
> $lang["recvs_edit_sale"] = "Editar Recepción";
> $lang["recvs_employee"] = "Empleado";
> $lang["recvs_error_editing_item"] = "Error al editar artículo";
> $lang["recvs_error_requisition"] = "No se puede mover el inventorio desde y hacia la misma ubicación de stock";
> $lang["recvs_find_or_scan_item"] = "Encontrar/Escanear Artículo";
> $lang["recvs_find_or_scan_item_or_receipt"] = "Encontrar/Escanear Artículo o Entrada";
> $lang["recvs_id"] = "ID de Entrada";
> $lang["recvs_invoice_enable"] = "Crear Factura";
> $lang["recvs_invoice_number"] = "Factura #";
> $lang["recvs_invoice_number_duplicate"] = "Por favor ingrese un número de factura único";
> $lang["recvs_item_name"] = "Nombre del Artículo";
> $lang["recvs_mode"] = "Modo de Entradas";
> $lang["recvs_new_supplier"] = "Nuevo Proveedor";
> $lang["recvs_one_or_multiple"] = "Ingreso(s)";
> $lang["recvs_print_after_sale"] = "Imprimir recibo después de una venta";
> $lang["recvs_quantity"] = "Cant.";
> $lang["recvs_receipt"] = "Recibo de Entrada";
> $lang["recvs_receipt_number"] = "Recepción #";
> $lang["recvs_receiving"] = "Recibir";
> $lang["recvs_register"] = "Entrada de Artículos";
> $lang["recvs_requisition"] = "Requisición";
> $lang["recvs_return"] = "Devolver";
> $lang["recvs_select_supplier"] = "Seleccionar Proveedor (Opcional)";
> $lang["recvs_start_typing_supplier_name"] = "Empieza a escribir el nombre del proveedor...";
> $lang["recvs_stock_destination"] = "Inventario de Destino";
> $lang["recvs_stock_locaiton"] = "Ubicación de Inventario";
> $lang["recvs_stock_source"] = "Inventario de Origen";
> $lang["recvs_successfully_deleted"] = "Borro exitosamente";
> $lang["recvs_successfully_updated"] = "Recepción exitosamente actualizada";
> $lang["recvs_supplier"] = "Proveedor";
> $lang["recvs_total"] = "Total";
> $lang["recvs_unable_to_add_item"] = "No se puede agregar el artículo a la entrada";
> $lang["recvs_unsuccessfully_updated"] = "Recepción actualizada sin exito";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/reports_lang.php opensourcepos/application/language/es/reports_lang.php
2,88c2,108
< $lang['reports_reports'] = 'Reportes';
< $lang['reports_report'] = 'Reporte';
< $lang['reports_welcome_message'] = 'Bienvenido(a) al panel de reportes. Selecciona un reporte para verlo.';
< $lang['reports_sales_summary_report'] = 'Reporte de Resumen de Ventas';
< $lang['reports_categories_summary_report'] = 'Reporte de Resumen de Categorías';
< $lang['reports_customers_summary_report'] = 'Reporte de Resumen de Clientes';
< $lang['reports_suppliers_summary_report'] = 'Reporte de Resumen de Proveedores';
< $lang['reports_items_summary_report'] = 'Reporte de Resumen de Artículos';
< $lang['reports_employees_summary_report'] = 'Reporte de Resumen de Empleados';
< $lang['reports_taxes_summary_report'] = 'Reporte de Resumen de Impuestos';
< $lang['reports_date'] = 'Fecha';
< $lang['reports_name'] = 'Nombre';
< $lang['reports_quantity_purchased'] = 'Cantidad Comprada';
< $lang['reports_sale_id'] = 'ID de Venta';
< $lang['reports_items_purchased'] = 'Artículos Comprados';
< $lang['reports_sold_by'] = 'Vendido Por';
< $lang['reports_sold_to'] = 'Vendido A';
< $lang['reports_category'] = 'Categoría';
< $lang['reports_customer'] = 'Cliente';
< $lang['reports_employee'] = 'Empleado';
< $lang['reports_item'] = 'Artículo';
< $lang['reports_items'] = 'Artículos';
< $lang['reports_supplier'] = 'Proveedor';
< $lang['reports_employees'] = 'Empleados';
< $lang['reports_subtotal'] = 'Subtotal';
< $lang['reports_total'] = 'Total';
< $lang['reports_tax'] = 'Impuesto';
< $lang['reports_profit'] = 'Ganancia';
< $lang['reports_report_input'] = 'Entrada de Reporte';
< $lang['reports_type'] = 'Tipo';
< $lang['reports_date_range'] = 'Rango de Fecha';
< $lang['reports_today'] = 'Hoy';
< $lang['reports_yesterday'] = 'Ayer';
< $lang['reports_last_7'] = 'Últimos 7 Días';
< $lang['reports_this_month'] = 'Este Mes';
< $lang['reports_last_month'] = 'Último Mes';
< $lang['reports_this_year'] = 'Este Año';
< $lang['reports_last_year'] = 'Último Año';
< $lang['reports_all_time'] = 'Todos';
< $lang['reports_detailed_sales_report'] = 'Reporte de Ventas Detallado';
< $lang['reports_comments'] = 'Comentarios';
< $lang['reports_discount'] = 'Descuento';
< $lang['reports_payment_type'] = 'Tipo de Pago';
< $lang['reports_sales'] = 'Ventas';
< $lang['reports_categories'] = 'Categorías';
< $lang['reports_customers'] = 'Clientes';
< $lang['reports_suppliers'] = 'Proveedores';
< $lang['reports_items'] = 'Artículos';
< $lang['reports_employees'] = 'Empleados';
< $lang['reports_taxes'] = 'Impuestos';
< $lang['reports_customer'] = 'Cliente';
< $lang['reports_employee'] = 'Empleado';
< $lang['reports_tax_percent'] = 'Porcentaje de Impuestos';
< $lang['reports_quantity_purchased'] = 'Cantidad Comprada';
< $lang['reports_serial_number'] = 'S/N:';
< $lang['reports_description'] = 'Descripción';
< $lang['reports_date'] = 'Fecha';
< $lang['reports_sales_amount'] = 'Monto de ventas';
< $lang['reports_revenue'] = 'Ingresos';
< $lang['reports_discounts'] = 'Descuentos';
< $lang['reports_discounts_summary_report'] = 'Reporte de Resumen de Descuentos';
< $lang['reports_discount_percent'] = 'Porcentaje de Descuento';
< $lang['reports_count'] = 'Cuenta';
< $lang['reports_summary_reports'] = 'Reportes Resumidos';
< $lang['reports_graphical_reports'] = 'Reportes Gráficos';
< $lang['reports_detailed_reports'] = 'Reportes Detallados';
< $lang['reports_inventory_reports'] = 'Reportes de Inventario';
< $lang['reports_low_inventory'] = 'Inventario Bajo';
< $lang['reports_inventory_summary'] = 'Resumen de Inventario';
< $lang['reports_item_number'] = 'Número de Artículo';
< $lang['reports_reorder_level'] = 'Cantidad Mínima';
< $lang['reports_low_inventory_report'] = 'Reporte de Inventario Bajo';
< $lang['reports_item_name'] = 'Nombre del Artículo';
< $lang['reports_inventory_summary_report'] = 'Reporte de Resumen de Inventario';
< $lang['reports_payment_type'] = 'Tipo de Pago';
< $lang['reports_payments_summary_report'] = 'Reporte de Resumen de Pagos';
< $lang['reports_payments'] = 'Pagos';
< $lang['reports_receivings'] = 'Entradas';
< $lang['reports_received_by'] = 'Recibido por';
< $lang['reports_supplied_by'] = 'Provisto por';
< $lang['reports_items_received'] = 'Artículos Recibidos';
< $lang['reports_detailed_receivings_report'] = 'Reporte Detallado de Entradas';
< $lang['reports_sale_type'] = 'Tipo de Venta';
< $lang['reports_all'] = 'Todo';
< $lang['reports_returns'] = 'Devoluciones';
< $lang['reports_discount'] = 'Descuento mayor que ';
< ?>
---
> 
> $lang["reports_all"] = "Todo";
> $lang["reports_all_time"] = "Todos";
> $lang["reports_categories"] = "Categorías";
> $lang["reports_categories_summary_report"] = "Reporte de Resumen de Categorías";
> $lang["reports_category"] = "Categoría";
> $lang["reports_comments"] = "Comentarios";
> $lang["reports_count"] = "Cuenta";
> $lang["reports_customer"] = "Cliente";
> $lang["reports_customers"] = "Clientes";
> $lang["reports_customers_summary_report"] = "Reporte de Resumen de Clientes";
> $lang["reports_date"] = "Fecha";
> $lang["reports_date_range"] = "Rango de Fecha";
> $lang["reports_description"] = "Descripción";
> $lang["reports_detailed_receivings_report"] = "Reporte Detallado de Entradas";
> $lang["reports_detailed_reports"] = "Reportes Detallados";
> $lang["reports_detailed_requisition_report"] = "Reporte Detallado de Requisiciones";
> $lang["reports_detailed_sales_report"] = "Reporte de Ventas Detallado";
> $lang["reports_discount"] = "Descuento";
> $lang["reports_discount_percent"] = "Porcentaje de Descuento";
> $lang["reports_discounts"] = "Descuentos";
> $lang["reports_discounts_summary_report"] = "Reporte de Resumen de Descuentos";
> $lang["reports_employee"] = "Empleado";
> $lang["reports_employees"] = "Empleados";
> $lang["reports_employees_summary_report"] = "Reporte de Resumen de Empleados";
> $lang["reports_graphical_reports"] = "Reportes Gráficos";
> $lang["reports_inventory"] = "Inventario";
> $lang["reports_inventory_low"] = "Inventario Bajo";
> $lang["reports_inventory_low_report"] = "Reporte de Inventario Bajo";
> $lang["reports_inventory_reports"] = "Reportes de Inventario";
> $lang["reports_inventory_summary"] = "Resumen de Inventario";
> $lang["reports_inventory_summary_report"] = "Reporte de Resumen de Inventario";
> $lang["reports_item"] = "Artículo";
> $lang["reports_item_name"] = "Nombre del Artículo";
> $lang["reports_item_number"] = "Número de Artículo";
> $lang["reports_items"] = "Artículos";
> $lang["reports_items_purchased"] = "Artículos Comprados";
> $lang["reports_items_received"] = "Artículos Recibidos";
> $lang["reports_items_summary_report"] = "Reporte de Resumen de Artículos";
> $lang["reports_last_7"] = "Últimos 7 Días";
> $lang["reports_last_month"] = "Último Mes";
> $lang["reports_last_year"] = "Último Año";
> $lang["reports_low_inventory"] = "Inventario Bajo";
> $lang["reports_low_inventory_report"] = "Reporte de Inventario Bajo";
> $lang["reports_name"] = "Nombre";
> $lang["reports_payment_type"] = "Tipo de Pago";
> $lang["reports_payments"] = "Pagos";
> $lang["reports_payments_summary_report"] = "Reporte de Resumen de Pagos";
> $lang["reports_profit"] = "Ganancia";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "Cantidad Comprada";
> $lang["reports_received_by"] = "Recibido por";
> $lang["reports_receiving_id"] = "ID de Recepción";
> $lang["reports_receiving_type"] = "Tipo de Recepción";
> $lang["reports_receivings"] = "Entradas";
> $lang["reports_reorder_level"] = "Cantidad Mínima";
> $lang["reports_report"] = "Reporte";
> $lang["reports_report_input"] = "Entrada de Reporte";
> $lang["reports_reports"] = "Reportes";
> $lang["reports_requisition"] = "Requisición";
> $lang["reports_requisition_by"] = "Requisición por";
> $lang["reports_requisition_id"] = "ID de Requisición";
> $lang["reports_requisition_item"] = "Articulo de Requisición";
> $lang["reports_requisition_item_quantity"] = "Cantidad de Articulo de Requisición";
> $lang["reports_requisition_related_item"] = "Articulo de Requisición relacionado";
> $lang["reports_requisition_related_item_total_quantity"] = "Cantidad Total de Articulo de Requisición";
> $lang["reports_requisition_related_item_unit_quantity"] = "Cantidad Unitaria de Articulo de Requisición";
> $lang["reports_requisitions"] = "Requisiciones";
> $lang["reports_returns"] = "Devoluciones";
> $lang["reports_revenue"] = "Ingresos";
> $lang["reports_sale_id"] = "ID de Venta";
> $lang["reports_sale_type"] = "Tipo de Venta";
> $lang["reports_sales"] = "Ventas";
> $lang["reports_sales_amount"] = "Monto de ventas";
> $lang["reports_sales_summary_report"] = "Reporte de Resumen de Ventas";
> $lang["reports_serial_number"] = "S/N:";
> $lang["reports_sold_by"] = "Vendido Por";
> $lang["reports_sold_to"] = "Vendido A";
> $lang["reports_stock_location"] = "Ubicación de Inventario";
> $lang["reports_subtotal"] = "Subtotal";
> $lang["reports_summary_reports"] = "Reportes Resumidos";
> $lang["reports_supplied_by"] = "Provisto por";
> $lang["reports_supplier"] = "Proveedor";
> $lang["reports_suppliers"] = "Proveedores";
> $lang["reports_suppliers_summary_report"] = "Reporte de Resumen de Proveedores";
> $lang["reports_tax"] = "Impuesto";
> $lang["reports_tax_percent"] = "Porcentaje de Impuestos";
> $lang["reports_taxes"] = "Impuestos";
> $lang["reports_taxes_summary_report"] = "Reporte de Resumen de Impuestos";
> $lang["reports_this_month"] = "Este Mes";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "Este Año";
> $lang["reports_today"] = "Hoy";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "Total";
> $lang["reports_type"] = "Tipo";
> $lang["reports_welcome_message"] = "Bienvenido(a) al panel de reportes. Selecciona un reporte para verlo.";
> $lang["reports_yesterday"] = "Ayer";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "Precio de Compra";
> $lang["reports_unit_price"] = "Precio de Venta";
> $lang["reports_sub_total_value"] = "Subtotal";
> $lang["reports_total_inventory_value"] = "Total Inventory Value";
> $lang["reports_zero_and_less"] = "Zero and less";
> $lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/sales_lang.php opensourcepos/application/language/es/sales_lang.php
2,86c2,117
< $lang['sales_giftcard_number'] = 'Número de Tarjeta de Regalo';
< $lang['sales_giftcard'] = 'Tarjeta de Regalo';
< $lang['sales_register'] = 'Registro de Ventas';
< $lang['sales_mode'] = 'Modo';
< $lang['sales_new_item'] = 'Artículo Nuevo';
< $lang['sales_item_name'] = 'Nombre del Artículo';
< $lang['sales_item_number'] = 'UPC/EAN/ISBN';
< $lang['sales_new_customer'] = 'Cliente Nuevo';
< $lang['sales_customer'] = 'cliente';
< $lang['sales_no_items_in_cart'] = 'No hay artículos en el carrito';
< $lang['sales_total'] = 'Total';
< $lang['sales_tax_percent'] = '% de Impuesto';
< $lang['sales_price'] = 'Precio';
< $lang['sales_quantity'] = 'Cant.';
< $lang['sales_discount'] = 'Desc %';
< $lang['sales_edit'] = 'Editar';
< $lang['sales_payment'] = 'Tipo de Pago';
< $lang['sales_edit_item'] = 'Editar Artículo';
< $lang['sales_find_or_scan_item'] = 'Encontrar/Escanear Artículo';
< $lang['sales_find_or_scan_item_or_receipt'] = 'Encontrar/Escanear Artículo o Entrada';
< $lang['sales_select_customer'] = 'Seleccionar Cliente (Opcional)';
< $lang['sales_start_typing_item_name'] = 'Empieza a escribir o escanea el código de barras...';
< $lang['sales_start_typing_customer_name'] = 'Empieza a escribir el cliente...';
< $lang['sales_sub_total'] = 'Subtotal';
< $lang['sales_tax'] = 'Impuesto';
< $lang['sales_comment'] = 'Comentario';
< $lang['sales_unable_to_add_item'] = 'No se puede agregar el artículo a la venta';
< $lang['sales_sale_for_customer'] = 'Cliente:';
< $lang['sales_remove_customer'] = 'Borrar Cliente';
< $lang['sales_error_editing_item'] = 'Error editando artículo';
< $lang['sales_complete_sale'] = 'Completar Venta';
< $lang['sales_cancel_sale'] = 'Cancelar Venta';
< $lang['sales_add_payment'] = 'Agregar Pago';
< $lang['sales_receipt'] = 'Recibo de Venta';
< $lang['sales_receipt_number']='POS #';
< $lang['sales_id'] = 'ID de Venta';
< $lang['sales_sale'] = 'Venta';
< $lang['sales_return'] = 'Devolución';
< $lang['sales_confirm_finish_sale'] = '¿Estás seguro(a) de querer procesar esta venta? Ésto no se puede deshacer.';
< $lang['sales_confirm_cancel_sale'] = '¿Estás seguro(a) de querer limpiar esta venta? Todos los artículos serán limpiados.';
< $lang['sales_cash'] = 'Efectivo';
< $lang['sales_check'] = 'Cheque';
< $lang['sales_debit'] = 'Tarjeta de Débito';
< $lang['sales_credit'] = 'Tarjeta de Crédito';
< $lang['sales_giftcard'] = 'Gift Card';
< $lang['sales_amount_tendered'] = 'Cantidad Recibida';
< $lang['sales_change_due'] = 'Cambio';
< $lang['sales_payment_not_cover_total'] = 'La Cantidad Recibida no cubre el pago total';
< $lang['sales_transaction_failed'] = 'La transacción de venta falló';
< $lang['sales_must_enter_numeric'] = 'Cantidad Recibida debe ser número';
< $lang['sales_must_enter_numeric_giftcard'] = 'Número de Tarjeta de Regalo debe ser número';
< $lang['sales_serial'] = 'Serial';
< $lang['sales_description_abbrv'] = 'Desc';
< $lang['sales_item_out_of_stock'] = 'El artículo está agotado';
< $lang['sales_item_insufficient_of_stock'] = 'Hay un número insuficiente de Artículos en existencia';
< $lang['sales_quantity_less_than_zero'] = 'Advertencia. La cantidad deseada es insuficiente. Puedes procesar la venta pero verifica el inventario.';
< $lang['sales_successfully_updated'] = 'La venta ha sido actualizada satisfactoriamente';
< $lang['sales_unsuccessfully_updated'] = 'Ha fallado la actualización de la venta';
< $lang['sales_edit_sale'] = 'Editar Venta';
< $lang['sales_employee'] = 'Empleado';
< $lang['sales_successfully_deleted'] = 'La Venta ha sido borrada satisfactoriamente';
< $lang['sales_unsuccessfully_deleted'] = 'Ha fallado la eliminación de la Venta';
< $lang['sales_delete_entire_sale'] = 'Borrar la venta completa';
< $lang['sales_delete_confirmation'] = '¿Estás seguro(a) de querer borrar esta venta? Esta acción no se puede deshacer.';
< $lang['sales_delete_successful'] = 'Has borrado satisfactoriamente una venta';
< $lang['sales_delete_unsuccessful'] = 'No he podido borrar la venta satisfactoriamente';
< $lang['sales_suspend_sale'] = 'Suspender Venta';
< $lang['sales_confirm_suspend_sale'] = '¿Estás seguro(a) de querer suspender esta venta?';
< $lang['sales_suspended_sales'] = 'Ventas Suspendidas';
< $lang['sales_suspended_sale_id'] = 'ID de Venta Suspendida';
< $lang['sales_date'] = 'Fecha';
< $lang['sales_comments'] = 'Comentarios';
< $lang['sales_unsuspend_and_delete'] = 'Retomar y Borrar';
< $lang['sales_unsuspend'] = 'Retomar';
< $lang['sales_successfully_suspended_sale'] = 'La venta ha sido suspendida satisfactoriamente';
< $lang['sales_email_receipt'] = 'Enviar Ticket';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Descuento';
< $lang['sales_sale_time']='Hora';
< $lang['sales_payments_total'] = 'Pagado';
< $lang['sales_amount_due'] = 'Debe';
< $lang['sales_payment_type'] = "Tipo";
< $lang['sales_payment_amount'] = "Cantidad";
< $lang['sales_basic_information'] = "información sobre las entradas";
< ?>
---
> 
> $lang["sales_add_payment"] = "Agregar Pago";
> $lang["sales_amount_due"] = "Debe";
> $lang["sales_amount_tendered"] = "Cantidad Recibida";
> $lang["sales_basic_information"] = "información sobre las entradas";
> $lang["sales_cancel_sale"] = "Cancelar Venta";
> $lang["sales_cash"] = "Efectivo";
> $lang["sales_change_due"] = "Cambio";
> $lang["sales_check"] = "Cheque";
> $lang["sales_check_balance"] = "Balance de Cheque";
> $lang["sales_comment"] = "Comentario";
> $lang["sales_comments"] = "Comentarios";
> $lang["sales_complete_sale"] = "Completar Venta";
> $lang["sales_confirm_cancel_sale"] = "¿Seguro(a) de querer limpiar esta venta? Todos los artículos serán limpiados.";
> $lang["sales_confirm_delete"] = "¿Seguro(a) de querer borrar las ventas seleccionadas?";
> $lang["sales_confirm_finish_sale"] = "¿Seguro(a) de querer procesar esta venta? Ésto no se puede deshacer.";
> $lang["sales_confirm_suspend_sale"] = "¿Seguro(a) de querer suspender esta venta?";
> $lang["sales_credit"] = "Tarjeta de Crédito";
> $lang["sales_customer"] = "cliente";
> $lang["sales_date"] = "Fecha";
> $lang["sales_date_required"] = "Una fecha correcta de ser ingresada";
> $lang["sales_date_type"] = "Campo de Fecha es requerido";
> $lang["sales_debit"] = "Tarjeta de Débito";
> $lang["sales_delete_confirmation"] = "¿Seguro(a) de querer borrar esta venta? Esta acción no se puede deshacer.";
> $lang["sales_delete_entire_sale"] = "Borrar la venta completa";
> $lang["sales_delete_successful"] = "Has borrado satisfactoriamente una venta";
> $lang["sales_delete_unsuccessful"] = "No he podido borrar la venta satisfactoriamente";
> $lang["sales_description_abbrv"] = "Desc";
> $lang["sales_discount"] = "% Descuento";
> $lang["sales_discount_included"] = "% Descuento";
> $lang["sales_discount"] = "Descuento";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "Editar";
> $lang["sales_edit_item"] = "Editar Artículo";
> $lang["sales_edit_sale"] = "Editar Venta";
> $lang["sales_email_receipt"] = "Enviar Ticket";
> $lang["sales_employee"] = "Empleado";
> $lang["sales_error_editing_item"] = "Error editando artículo";
> $lang["sales_find_or_scan_item"] = "Encontrar/Escanear Artículo";
> $lang["sales_find_or_scan_item_or_receipt"] = "Encontrar/Escanear Artículo o Entrada";
> $lang["sales_giftcard"] = "Tarjeta de Regalo";
> $lang["sales_giftcard_balance"] = "Balance de Tarjeta de Regalo";
> $lang["sales_giftcard_number"] = "Número de Tarjeta de Regalo";
> $lang["sales_id"] = "ID de Venta";
> $lang["sales_invoice"] = "tarjeta de Crédito";
> $lang["sales_invoice_confirm"] = "Esta factura sera enviada a";
> $lang["sales_invoice_enable"] = "Crear factura";
> $lang["sales_invoice_filter"] = "Facturas";
> $lang["sales_cash_filter"] = "Efectivo";
> $lang["sales_invoice_no_email"] = "Este cliente no tiene un email válido";
> $lang["sales_invoice_number"] = "Factura #";
> $lang["sales_invoice_number_duplicate"] = "Por favor ingrese un número de factura único";
> $lang["sales_invoice_sent"] = "Factura enviada a";
> $lang["sales_invoice_unsent"] = "Fallo el envio de la factura a";
> $lang["sales_invoice_update"] = "Actualizar";
> $lang["sales_item_insufficient_of_stock"] = "Hay un número insuficiente de Artículos en existencia";
> $lang["sales_item_name"] = "Nombre del Artículo";
> $lang["sales_item_number"] = "UPC/EAN/ISBN";
> $lang["sales_item_out_of_stock"] = "El artículo está agotado";
> $lang["sales_mode"] = "Modo";
> $lang["sales_must_enter_numeric"] = "Cantidad Recibida debe ser número";
> $lang["sales_must_enter_numeric_giftcard"] = "Número de Tarjeta de Regalo debe ser número";
> $lang["sales_new_customer"] = "Cliente Nuevo";
> $lang["sales_new_item"] = "Artículo Nuevo";
> $lang["sales_no_description"] = "Ninguno";
> $lang["sales_no_filter"] = "Todos";
> $lang["sales_no_items_in_cart"] = "No hay artículos en el carrito";
> $lang["sales_no_sales_to_display"] = "No hay ventas que mostrar";
> $lang["sales_one_or_multiple"] = "venta(s)";
> $lang["sales_takings"] = "Resumen";
> $lang["sales_payment"] = "Tipo de Pago";
> $lang["sales_payment_amount"] = "Cantidad";
> $lang["sales_payment_not_cover_total"] = "La Cantidad Recibida no cubre el pago total";
> $lang["sales_payment_type"] = "Tipo";
> $lang["sales_payments_total"] = "Pagado";
> $lang["sales_price"] = "Precio";
> $lang["sales_print_after_sale"] = "Imprimir recibo después de una venta";
> $lang["sales_quantity"] = "Cant.";
> $lang["sales_quantity_less_than_zero"] = "Advertencia. La cantidad deseada es insuficiente. Puedes procesar la venta pero verifica el inventario.";
> $lang["sales_quantity_less_than_reorder_level"] = "Advertencia. La cantidad deseada es insuficiente";
> $lang["sales_receipt"] = "Recibo de Venta";
> $lang["sales_receipt_number"] = "POS #";
> $lang["sales_register"] = "Registro de Ventas";
> $lang["sales_remove_customer"] = "Borrar Cliente";
> $lang["sales_return"] = "Devolución";
> $lang["sales_sale"] = "Venta";
> $lang["sales_sale_for_customer"] = "Cliente:";
> $lang["sales_sale_time"] = "Hora";
> $lang["sales_select_customer"] = "Seleccionar Cliente (Opcional)";
> $lang["sales_send_invoice"] = "Enviar Factura";
> $lang["sales_serial"] = "Serial";
> $lang["sales_show_invoice"] = "factura";
> $lang["sales_show_receipt"] = "recibo";
> $lang["sales_start_typing_customer_name"] = "Empieza a escribir el cliente...";
> $lang["sales_start_typing_item_name"] = "Empieza a escribir o escanea el código de barras...";
> $lang["sales_stock_location"] = "Inventario";
> $lang["sales_sub_total"] = "Subtotal";
> $lang["sales_successfully_deleted"] = "La Venta ha sido borrada satisfactoriamente";
> $lang["sales_successfully_suspended_sale"] = "La venta ha sido suspendida satisfactoriamente";
> $lang["sales_successfully_updated"] = "La venta ha sido actualizada satisfactoriamente";
> $lang["sales_suspend_sale"] = "Suspender Venta";
> $lang["sales_suspended_sale_id"] = "ID de Venta Suspendida";
> $lang["sales_suspended_sales"] = "Ventas Suspendidas";
> $lang["sales_tax"] = "Impuesto";
> $lang["sales_tax_percent"] = "% de Impuesto";
> $lang["sales_total"] = "Total";
> $lang["sales_total_tax_exclusive"] = "No incluye impuestos";
> $lang["sales_transaction_failed"] = "La transacción de venta falló";
> $lang["sales_unable_to_add_item"] = "No se puede agregar el artículo a la venta";
> $lang["sales_unsuccessfully_deleted"] = "Ha fallado la eliminación de la Venta";
> $lang["sales_unsuccessfully_updated"] = "Ha fallado la actualización de la venta";
> $lang["sales_unsuspend"] = "Retomar";
> $lang["sales_unsuspend_and_delete"] = "Retomar y Borrar";
> $lang["sales_update"] = "Editar Venta";
> $lang["sales_date_range"] = "Rango de Fecha";
> $lang["sales_none_selected"] = "No has seleccionado venta para editar";
diff -rBwi --ignore-file-name-case pos-prod/application/language/es/suppliers_lang.php opensourcepos/application/language/es/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new'] = 'Nuevo Proveedor';
< $lang['suppliers_supplier'] = 'Proveedor';
< $lang['suppliers_update'] = 'Actualizar Proveedor';
< $lang['suppliers_confirm_delete'] = 'Estás seguro(a) de querer borrar los proveedores seleccionados?';
< $lang['suppliers_none_selected'] = 'No has seleccionado proveedores para borrar';
< $lang['suppliers_error_adding_updating'] = 'Error agregando/actualizando proveedor';
< $lang['suppliers_successful_adding'] = 'Has agregado el proveedor satisfactoriamente';
< $lang['suppliers_successful_updating'] = 'Has actualizado el proveedor satisfactoriamente';
< $lang['suppliers_successful_deleted'] = 'Has borrado satisfactoriamente a';
< $lang['suppliers_one_or_multiple'] = 'proveedor(es)';
< $lang['suppliers_cannot_be_deleted'] = 'No se pudo borrar los proveedores seleccionados. Uno o más de los seleccionados tiene ventas.';
< $lang['suppliers_basic_information'] = 'Información de Proveedores';
< $lang['suppliers_account_number'] = 'Cuenta #';
< $lang['suppliers_company_name'] = 'Nombre de la Compañía';
< $lang['suppliers_company_name_required'] = 'Nombre de la Compañía es requerido';
< ?>
---
> 
> $lang["suppliers_account_number"] = "Cuenta #";
> $lang["suppliers_basic_information"] = "Información de Proveedores";
> $lang["suppliers_cannot_be_deleted"] = "No se pudo borrar los proveedores seleccionados. Uno o más de los seleccionados tiene ventas.";
> $lang["suppliers_company_name"] = "Nombre de la Compañía";
> $lang["suppliers_company_name_required"] = "Nombre de la Compañía es requerido";
> $lang["suppliers_agency_name"] = "Nombre de la Agency";
> $lang["suppliers_confirm_delete"] = "¿Seguro(a) de querer borrar los proveedores seleccionados?";
> $lang["suppliers_error_adding_updating"] = "Error agregando/actualizando proveedor";
> $lang["suppliers_new"] = "Nuevo Proveedor";
> $lang["suppliers_none_selected"] = "No has seleccionado proveedores para borrar";
> $lang["suppliers_one_or_multiple"] = "proveedor(es)";
> $lang["suppliers_successful_adding"] = "Has agregado el proveedor satisfactoriamente";
> $lang["suppliers_successful_deleted"] = "Has borrado satisfactoriamente a";
> $lang["suppliers_successful_updating"] = "Has actualizado el proveedor satisfactoriamente";
> $lang["suppliers_supplier"] = "Proveedor";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "Actualizar Proveedor";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/common_lang.php opensourcepos/application/language/fr/common_lang.php
2,42c2,57
< $lang['common_common'] = 'commun';
< $lang['common_submit'] = 'Envoyer';
< $lang['common_or'] = 'OU';
< $lang['common_powered_by'] = 'Animé par';
< $lang['common_welcome'] = 'Bienvenue';
< $lang['common_logout'] = 'Déconnexion';
< $lang['common_list_of'] = 'Liste de';
< $lang['common_first_name'] = 'Prénom';
< $lang['common_last_name'] = 'Nom';
< $lang['common_email'] = 'E-Mail';
< $lang['common_phone_number'] = 'Téléphone';
< $lang['common_address_1'] = 'Addresse 1';
< $lang['common_address_2'] = 'Addresse 2';
< $lang['common_city'] = 'Ville';
< $lang['common_state'] = 'État';
< $lang['common_zip'] = 'Zip';
< $lang['common_country'] = 'Pays';
< $lang['common_comments'] = 'Commentaires';
< $lang['common_edit'] = 'éditer';
< $lang['common_search'] = 'Recherche';
< $lang['common_delete'] = 'Effacer';
< $lang['common_remove'] = 'Enlever';
< $lang['common_view_recent_sales'] = 'Voir Ventes Récentes';
< $lang['common_you_are_using_ospos'] = 'Vous utilisez Open Source Point Of Sale Version';
< $lang['common_please_visit_my'] = 'SVP visitez le';
< $lang['common_website'] = 'site-web';
< $lang['common_fields_required_message'] = 'Les champs en rouge sont requis';
< $lang['common_learn_about_project'] = 'pour les dernières informations sur le projet';
< $lang['common_searched_for'] = 'Recherché';
< $lang['common_first_name_required'] = 'Le prénom est requis.';
< $lang['common_last_name_required'] = 'Le nom est requis';
< $lang['common_email_invalid_format'] = 'Le format de l\'adresse électronique est incorrect';
< $lang['common_confirm_search'] = 'Vous avez sélectionné une ou plusieurs ligne(s). Elles ne seront plus selectionnées apres cette recherche. Voulez-vous lancer cette recherche?';
< $lang['common_no_persons_to_display'] = 'Il n\'y a personne à afficher';
< $lang['common_return_policy'] = 'Politique de Reprise';
< $lang['common_price'] = 'Prix';
< $lang['common_welcome_message']= 'Bienvenue à Open Source Point Of Sale, choisissez un module ci-dessous!';
< $lang['common_inv'] = 'inv';
< $lang['common_det'] = 'détails';
< $lang['common_phone_number_required'] = 'Le numéro de téléphone est requis.';//Added by Harry-Wonder 22/05/2014
< ?>
---
> 
> $lang["common_address_1"] = "Addresse 1";
> $lang["common_address_2"] = "Addresse 2";
> $lang["common_city"] = "Ville";
> $lang["common_comments"] = "Commentaires";
> $lang["common_common"] = "commun";
> $lang["common_confirm_search"] = "Vous avez sélectionné une ou plusieurs ligne(s). Elles ne seront plus selectionnées apres cette recherche. Voulez-vous lancer cette recherche?";
> $lang["common_country"] = "Pays";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "Effacer";
> $lang["common_print"] = "Imprimer";
> $lang["common_det"] = "détails";
> $lang["common_edit"] = "éditer";
> $lang["common_email"] = "E-Mail";
> $lang["common_email_invalid_format"] = "Le format de l\'adresse électronique est incorrect";
> $lang["common_fields_required_message"] = "Les champs en rouge sont requis";
> $lang["common_first_name"] = "Prénom";
> $lang["common_first_name_required"] = "Le prénom est requis.";
> $lang["common_first_page"] = "First";
> $lang["common_gender"] = "Gender";
> $lang["common_gender_female"] = "F";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "inv";
> $lang["common_last_name"] = "Nom";
> $lang["common_last_name_required"] = "Le nom est requis";
> $lang["common_last_page"] = "Last";
> $lang["common_learn_about_project"] = "pour les dernières informations sur le projet";
> $lang["common_list_of"] = "Liste de";
> $lang["common_logout"] = "Déconnexion";
> $lang["common_new"] = "New";
> $lang["common_no_persons_to_display"] = "Il n\'y a personne à afficher";
> $lang["common_or"] = "OU";
> $lang["common_phone_number"] = "Téléphone";
> $lang["common_phone_number_required"] = "Le numéro de téléphone est requis.";
> $lang["common_please_visit_my"] = "SVP visitez le";
> $lang["common_powered_by"] = "Animé par";
> $lang["common_price"] = "Prix";
> $lang["common_remove"] = "Enlever";
> $lang["common_return_policy"] = "Politique de Reprise";
> $lang["common_search"] = "Recherche";
> $lang["common_search_options"] = "Search options";
> $lang["common_searched_for"] = "Recherché";
> $lang["common_state"] = "État";
> $lang["common_submit"] = "Envoyer";
> $lang["common_view_recent_sales"] = "Voir Ventes Récentes";
> $lang["common_website"] = "site-web";
> $lang["common_welcome"] = "Bienvenue";
> $lang["common_welcome_message"] = "Bienvenue à Open Source Point Of Sale, choisissez un module ci-dessous!";
> $lang["common_you_are_using_ospos"] = "Vous utilisez Open Source Point Of Sale Version";
> $lang["common_zip"] = "Zip";
> $lang["common_import"] = "Import";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/config_lang.php opensourcepos/application/language/fr/config_lang.php
2,35c2,122
< $lang['config_info'] = 'Çonfiguration de l\'Entreprise';
< $lang['config_company'] = 'Nome de l\'Entreprise';
< $lang['config_address'] = 'Addresse';
< $lang['config_phone'] = 'Téléphone';
< $lang['config_website'] = 'Site-web';
< $lang['config_fax'] = 'Fax';
< $lang['config_default_tax_rate'] = 'Taux d\'Imposition par Défaut';
< $lang['config_default_tax_rate_1'] = 'Taux d\'Imposition 1';
< $lang['config_default_tax_rate_2'] = 'Taux d\'Imposition 2';
< $lang['config_company_required'] = 'Le nom d\'entreprise est requis';
< $lang['config_address_required'] = 'L\'adresse est requise';
< $lang['config_phone_required'] = 'Le numéro de téléphone est requis';
< $lang['config_default_tax_rate_required'] = 'Le taux d\'imposition par défaut est requis';
< $lang['config_default_tax_rate_number'] = 'Le taux d\'imposition doit etre un nombre';
< $lang['config_company_website_url'] = 'Le site web de l\'entreprise n\'est pas une URL valide (http://...)';
< $lang['config_saved_successfully'] = 'Configuration sauvegardée';
< $lang['config_saved_unsuccessfully'] = 'Échec de sauvegarde de configuration';
< $lang['config_return_policy_required'] = 'Le Message est un champ requis';
< $lang['config_print_after_sale'] = 'Imprimer un recu après vente';
< $lang['config_language'] = 'Langue';
< $lang['config_timezone'] = 'Fuseau Horaire';
< $lang['config_currency_symbol'] = 'Symbole Monétaire';
< $lang['config_currency_side'] = 'Symbole à droite'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Champ Personnalisé 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Champ Personnalisé 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Champ Personnalisé 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Champ Personnalisé 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Champ Personnalisé 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Champ Personnalisé 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Champ Personnalisé 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Champ Personnalisé 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Champ Personnalisé 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Champ Personnalisé 10'; //GARRISON ADDED 4/21/2013
< ?>
---
> 
> $lang["config_address"] = "Addresse";
> $lang["config_address_required"] = "L\'adresse est requise";
> $lang["config_backup_button"] = "Backup";
> $lang["config_backup_database"] = "Backup Database";
> $lang["config_barcode_company"] = "Nome de l\'Entreprise";
> $lang["config_barcode_configuration"] = "Barcode Configuration";
> $lang["config_barcode_content"] = "Barcode Content";
> $lang["config_barcode_first_row"] = "Row 2";
> $lang["config_barcode_font"] = "Font";
> $lang["config_barcode_height"] = "Height (px)";
> $lang["config_barcode_id"] = "Item Id/Name";
> $lang["config_barcode_info"] = "Barcode Configuration Information";
> $lang["config_barcode_layout"] = "Barcode Layout";
> $lang["config_barcode_name"] = "Name";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Number in row";
> $lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
> $lang["config_barcode_page_width"] = "Display page width";
> $lang["config_barcode_price"] = "Price";
> $lang["config_barcode_quality"] = "Quality (1-100)";
> $lang["config_barcode_second_row"] = "Row 3";
> $lang["config_barcode_third_row"] = "Row 4";
> $lang["config_barcode_type"] = "Barcode Type";
> $lang["config_barcode_width"] = "Width (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "Nome de l\'Entreprise";
> $lang["config_company_logo"] = "Company Logo";
> $lang["config_company_required"] = "Le nom d\'entreprise est requis";
> $lang["config_company_website_url"] = "Le site web de l\'entreprise n\'est pas une URL valide (http://...)";
> $lang["config_currency_side"] = "Symbole à droite";
> $lang["config_currency_symbol"] = "Symbole Monétaire";
> $lang["config_custom1"] = "Champ Personnalisé 1";
> $lang["config_custom10"] = "Champ Personnalisé 10";
> $lang["config_custom2"] = "Champ Personnalisé 2";
> $lang["config_custom3"] = "Champ Personnalisé 3";
> $lang["config_custom4"] = "Champ Personnalisé 4";
> $lang["config_custom5"] = "Champ Personnalisé 5";
> $lang["config_custom6"] = "Champ Personnalisé 6";
> $lang["config_custom7"] = "Champ Personnalisé 7";
> $lang["config_custom8"] = "Champ Personnalisé 8";
> $lang["config_custom9"] = "Champ Personnalisé 9";
> $lang["config_decimal_point"] = " Decimal Point";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Default Sales Discount %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "Taux d\'Imposition par Défaut";
> $lang["config_default_tax_rate_1"] = "Taux d\'Imposition 1";
> $lang["config_default_tax_rate_2"] = "Taux d\'Imposition 2";
> $lang["config_default_tax_rate_number"] = "Le taux d\'imposition doit etre un nombre";
> $lang["config_default_tax_rate_required"] = "Le taux d\'imposition par défaut est requis";
> $lang["config_fax"] = "Fax";
> $lang["config_general_configuration"] = "General Configuration";
> $lang["config_info"] = "Çonfiguration de l\'Entreprise";
> $lang["config_invoice_default_comments"] = "Default Invoice Comments";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Invoice Printer";
> $lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
> $lang["config_language"] = "Langue";
> $lang["config_lines_per_page"] = "Lines Per Page";
> $lang["config_lines_per_page_number"] = "The lines per page must be a number";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locations";
> $lang["config_location_info"] = "Location Configuration Information";
> $lang["config_logout"] = "Don't you want to make a backup before logging out?";
> $lang["config_number_format"] = "Number Format";
> $lang["config_phone"] = "Téléphone";
> $lang["config_phone_required"] = "Le numéro de téléphone est requis";
> $lang["config_print_bottom_margin"] = "Margin Bottom";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Margin Left";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Margin Right";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Show Print Dialog";
> $lang["config_print_top_margin"] = "Margin Top";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Settings";
> $lang["config_receipt_info"] = "Receipt Configuration Information";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Show Taxes";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "Receivings Invoice Format";
> $lang["config_return_policy_required"] = "Le Message est un champ requis";
> $lang["config_sales_invoice_format"] = "Sales Invoice Format";
> $lang["config_saved_successfully"] = "Configuration sauvegardée";
> $lang["config_saved_unsuccessfully"] = "Échec de sauvegarde de configuration";
> $lang["config_show_total_discount"] = "Show total discount";
> $lang["config_stock_location"] = "Stock location";
> $lang["config_stock_location_duplicate"] = "Please use an unique location name";
> $lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
> $lang["config_stock_location_required"] = "Stock location number is a required field";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "Tax Included";
> $lang["config_thousands_separator"] = "Thousands Separator";
> $lang["config_timezone"] = "Fuseau Horaire";
> $lang["config_use_invoice_template"] = "Use invoice template";
> $lang["config_website"] = "Site-web";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/customers_lang.php opensourcepos/application/language/fr/customers_lang.php
2,16c2,19
< $lang['customers_new'] = 'Nouveau Client';
< $lang['customers_customer'] = 'Client';
< $lang['customers_update'] = 'Éditer Client';
< $lang['customers_confirm_delete'] = 'Etes vous sûr(e) de vouloir supprimer ces clients?';
< $lang['customers_none_selected'] = 'Vous n\\\'avez pas sélectionné de client à supprimer';
< $lang['customers_error_adding_updating'] = 'Érreur lors de l\'ajout/suppression de client';
< $lang['customers_successful_adding'] = 'Vous avez ajouté un nouveau client';
< $lang['customers_successful_updating'] = 'Édition client réussie';
< $lang['customers_successful_deleted'] = 'Suppréssion réussie';
< $lang['customers_one_or_multiple'] = 'client(s)';
< $lang['customers_cannot_be_deleted'] = 'Impossible de supprimer. Un ou plusiers client(s) sélectionné(s) ont des ventes.';
< $lang['customers_basic_information'] = 'Informations Client';
< $lang['customers_account_number'] = '# Compte';
< $lang['customers_taxable'] = 'Imposable';
< ?>
---
> 
> $lang["customers_account_number"] = "# Compte";
> $lang["customers_account_number_duplicate"] = "This account number is already present in the database";
> $lang["customers_basic_information"] = "Informations Client";
> $lang["customers_cannot_be_deleted"] = "Impossible de supprimer. Un ou plusiers client(s) sélectionné(s) ont des ventes.";
> $lang["customers_company_name"] = "Company Name";
> $lang["customers_confirm_delete"] = "Etes vous sûr(e) de vouloir supprimer ces clients?";
> $lang["customers_customer"] = "Client";
> $lang["customers_error_adding_updating"] = "Érreur lors de l\'ajout/suppression de client";
> $lang["customers_new"] = "Nouveau Client";
> $lang["customers_none_selected"] = "Vous n\\\'avez pas sélectionné de client à supprimer";
> $lang["customers_one_or_multiple"] = "client(s)";
> $lang["customers_successful_adding"] = "Vous avez ajouté un nouveau client";
> $lang["customers_successful_deleted"] = "Suppréssion réussie";
> $lang["customers_successful_updating"] = "Édition client réussie";
> $lang["customers_taxable"] = "Imposable";
> $lang["customers_update"] = "Éditer Client";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/employees_lang.php opensourcepos/application/language/fr/employees_lang.php
2,27c2,28
< $lang['employees_employee'] = 'Employé';
< $lang['employees_new'] = 'Nouvel Employé';
< $lang['employees_update'] = 'Éditer Employé';
< $lang['employees_confirm_delete'] = 'Voulez-vous supprimer ces employés?';
< $lang['employees_none_selected'] = 'Aucun employé sélectionné pour la suppression';
< $lang['employees_error_adding_updating'] = 'Erreur d\'ajout/édition d\'employé';
< $lang['employees_successful_adding'] = 'Employé ajouté';
< $lang['employees_successful_updating'] = 'Édition d\'employé réussie';
< $lang['employees_successful_deleted'] = 'Suppréssion d\'employé réussie';
< $lang['employees_one_or_multiple'] = 'employé(s)';
< $lang['employees_cannot_be_deleted'] = 'Impossible de supprimer. Un ou plusieurs des employés à éffectué une vente, ou alors vous essayez de vous supprimer vous-meme :)';
< $lang['employees_username'] = 'Nom d\'utilisateur';
< $lang['employees_password'] = 'Mot de passe';
< $lang['employees_repeat_password'] = 'Re-saisissez le mot de passe';
< $lang['employees_username_required'] = 'Le Nom d\'utilisateur est requis';
< $lang['employees_username_minlength'] = 'Le Nom d\'utilisateur doit etre long d\'au moins 5 caractères';
< $lang['employees_password_required'] = 'Le Mot de passe est requis';
< $lang['employees_password_minlength'] = 'Le Mot de passe doit etre long d\'au moins 8 caractères';
< $lang['employees_password_must_match'] = 'Mots de passe non corcordants';
< $lang['employees_basic_information'] = 'Fiche Employé';
< $lang['employees_login_info'] = 'Détails de Connexion Employé';
< $lang['employees_permission_info'] = 'Droits d\'Accès Employé';
< $lang['employees_permission_desc'] = 'Cochez les cases cis-dessous pour autoriser l\'accès aux modules';
< $lang['employees_error_updating_demo_admin'] = 'Vous ne pouvez pas modifier l\'utilisateur de démonstration admin';
< $lang['employees_error_deleting_demo_admin'] = 'Vous ne pouvez pas effacer l\'utilisateur de démonstration admin';
< ?>
---
> 
> $lang["employees_basic_information"] = "Fiche Employé";
> $lang["employees_cannot_be_deleted"] = "Impossible de supprimer. Un ou plusieurs des employés à éffectué une vente, ou alors vous essayez de vous supprimer vous-meme :)";
> $lang["employees_confirm_delete"] = "Voulez-vous supprimer ces employés?";
> $lang["employees_employee"] = "Employé";
> $lang["employees_error_adding_updating"] = "Erreur d\'ajout/édition d\'employé";
> $lang["employees_error_deleting_demo_admin"] = "Vous ne pouvez pas effacer l\'utilisateur de démonstration admin";
> $lang["employees_error_updating_demo_admin"] = "Vous ne pouvez pas modifier l\'utilisateur de démonstration admin";
> $lang["employees_login_info"] = "Détails de Connexion Employé";
> $lang["employees_new"] = "Nouvel Employé";
> $lang["employees_none_selected"] = "Aucun employé sélectionné pour la suppression";
> $lang["employees_one_or_multiple"] = "employé(s)";
> $lang["employees_password"] = "Mot de passe";
> $lang["employees_password_minlength"] = "Le Mot de passe doit etre long d\'au moins 8 caractères";
> $lang["employees_password_must_match"] = "Mots de passe non corcordants";
> $lang["employees_password_required"] = "Le Mot de passe est requis";
> $lang["employees_permission_desc"] = "Cochez les cases cis-dessous pour autoriser l\'accès aux modules";
> $lang["employees_permission_info"] = "Droits d\'Accès Employé";
> $lang["employees_repeat_password"] = "Re-saisissez le mot de passe";
> $lang["employees_successful_adding"] = "Employé ajouté";
> $lang["employees_successful_deleted"] = "Suppréssion d\'employé réussie";
> $lang["employees_successful_updating"] = "Édition d\'employé réussie";
> $lang["employees_update"] = "Éditer Employé";
> $lang["employees_username"] = "Nom d\'utilisateur";
> $lang["employees_username_minlength"] = "Le Nom d\'utilisateur doit etre long d\'au moins 5 caractères";
> $lang["employees_username_required"] = "Le Nom d\'utilisateur est requis";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/error_lang.php opensourcepos/application/language/fr/error_lang.php
2,4c2,4
< $lang['error_no_permission_module'] = 'Vous n\'avez pas d\'autorisation d\'accès pour le module';
< $lang['error_unknown'] = 'inconnu';
< ?>
---
> 
> $lang["error_no_permission_module"] = "Vous n\'avez pas d\'autorisation d\'accès pour le module";
> $lang["error_unknown"] = "inconnu";
Only in pos-prod/application/language/fr: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/giftcards_lang.php opensourcepos/application/language/fr/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = 'Numéro de Carte';
< $lang['giftcards_card_value'] = 'Valeur';
< $lang['giftcards_basic_information'] = 'Détails de la Carte';
< $lang['giftcards_number_required'] = 'Le Numéro est requis';
< $lang['giftcards_value_required'] = 'La Valeur est requise';
< $lang['giftcards_number'] = 'Le numéro de la carte doit etre un nombre';
< $lang['giftcards_value'] = 'La valeur de la carte doit etre un nombre';
< $lang['giftcards_person_id'] = 'Client';
< $lang['giftcards_retrive_giftcard_info'] = 'Obtenir des détails de la Carte';
< $lang['giftcards_description'] = 'Description';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'Base de Données UPC';
< $lang['giftcards_cannot_find_giftcard'] = 'Aucune information sur la carte';
< $lang['giftcards_info_provided_by'] = 'Information fournie par';
< $lang['giftcards_number_information'] = 'Numéro de Carte';
< $lang['giftcards_new'] = 'Nouvelle Carte';
< $lang['giftcards_update'] = 'Éditer Carte';
< $lang['giftcards_giftcard'] = 'Carte Cadeau';
< $lang['giftcards_edit_multiple_giftcards'] = 'Édition Multiple de Cartes';
< $lang['giftcards_category'] = 'Catégorie';
< $lang['giftcards_cost_price'] = 'Cout';
< $lang['giftcards_unit_price'] = 'Prix Unitaire';
< $lang['giftcards_tax_1'] = 'Tax 1';
< $lang['giftcards_tax_2'] = 'Tax 2';
< $lang['giftcards_sales_tax_1'] = 'Sales Tax';
< $lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
< $lang['giftcards_tax_percent'] = 'Taux d\'imposition';
< $lang['giftcards_tax_percents'] = 'Pourcentage d\'imposition';
< $lang['giftcards_reorder_level'] = 'Seuil de Réapprovisionnement';
< $lang['giftcards_quantity'] = 'Quantité';
< $lang['giftcards_no_giftcards_to_display'] = 'Aucune carte à afficher';
< $lang['giftcards_bulk_edit'] = 'Édition en groupe';
< $lang['giftcards_confirm_delete'] = 'Etes vous sûr(e) de vouloir supprimer ces cates?';
< $lang['giftcards_none_selected'] = 'Vous n\\\'avez sélectionné aucune carte à éditer';
< $lang['giftcards_confirm_bulk_edit'] = 'Etes vous sûr(e) de vouloir éditer toutes les cartes sélectionnés?';
< $lang['giftcards_successful_bulk_edit'] = 'Les cartes ont étés édités';
< $lang['giftcards_error_updating_multiple'] = 'Érreur lors de l\'édition des cartes';
< $lang['giftcards_edit_fields_you_want_to_update'] = 'Modifier les chaps que vous voulez éditer pour TOUTES les cartes';
< $lang['giftcards_error_adding_updating'] = 'Érreur d\'ajout/édition de cartes';
< $lang['giftcards_successful_adding'] = 'Vous avez ajouté une carte cadeau bonus';
< $lang['giftcards_successful_updating'] = 'Édition réussie';
< $lang['giftcards_successful_deleted'] = 'Suppréssion réussie';
< $lang['giftcards_one_or_multiple'] = 'carte(s)';
< $lang['giftcards_cannot_be_deleted'] = 'Impossible de supprimer. Une ou plusieurs carte(s) ont des ventes.';
< $lang['giftcards_none'] = 'Aucun';
< $lang['giftcards_supplier'] = 'Fournisseur';
< $lang['giftcards_generate_barcodes'] = 'Générer des Codes-barre';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'Vous devez sélectionner au moins une carte pour générer des codes-barre';
< $lang['giftcards_excel_import_failed'] = 'Échec de l\'import';
< $lang['giftcards_allow_alt_description'] = 'Autorisér Description Alt';
< $lang['giftcards_is_serialized'] = 'Carte cadeau avec Numéro de Série';
< $lang['giftcards_low_inventory_giftcards'] = 'Cartes Stock Faible';
< $lang['giftcards_serialized_giftcards'] = 'Cartes Cadeau Serialisés';
< $lang['giftcards_no_description_giftcards'] = 'Cartes Sans Description';
< $lang['giftcards_inventory_comments'] = 'Commentaires';
< $lang['giftcards_count'] = 'Mise à Jour Inventaire';
< $lang['giftcards_details_count'] = 'Détails d\'inventaire';
< $lang['giftcards_add_minus'] = 'Ajout/Soustraction à l\'inventaire';
< $lang['giftcards_current_quantity'] = 'Quantité Restante';
< $lang['giftcards_quantity_required'] = 'La quantité est requise. Veuillez Fermer ( X ) pour annuler';
< $lang['giftcards_do_nothing'] = 'Ne rien faire';
< $lang['giftcards_change_all_to_serialized'] = 'Tout Sérialiser';
< $lang['giftcards_change_all_to_unserialized'] = 'Tout Désérialiser';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Autoriser Desc Alt Pour Tous';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Interdire Desc Alt Pour Tous';
< $lang['giftcards_use_inventory_menu'] = 'Utiliser Menu Inv.';
< $lang['giftcards_manually_editing_of_quantity'] = 'Modification Manuelle de Quantité';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "Ajout/Soustraction à l\'inventaire";
> $lang["giftcards_allow_alt_description"] = "Autorisér Description Alt";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
> $lang["giftcards_basic_information"] = "Détails de la Carte";
> $lang["giftcards_bulk_edit"] = "Édition en groupe";
> $lang["giftcards_cannot_be_deleted"] = "Impossible de supprimer. Une ou plusieurs carte(s) ont des ventes.";
> $lang["giftcards_cannot_find_giftcard"] = "Aucune information sur la carte";
> $lang["giftcards_card_value"] = "Valeur";
> $lang["giftcards_category"] = "Catégorie";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "Autoriser Desc Alt Pour Tous";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "Interdire Desc Alt Pour Tous";
> $lang["giftcards_change_all_to_serialized"] = "Tout Sérialiser";
> $lang["giftcards_change_all_to_unserialized"] = "Tout Désérialiser";
> $lang["giftcards_confirm_bulk_edit"] = "Etes vous sûr(e) de vouloir éditer toutes les cartes sélectionnés?";
> $lang["giftcards_confirm_delete"] = "Etes vous sûr(e) de vouloir supprimer ces cates?";
> $lang["giftcards_cost_price"] = "Cout";
> $lang["giftcards_count"] = "Mise à Jour Inventaire";
> $lang["giftcards_current_quantity"] = "Quantité Restante";
> $lang["giftcards_description"] = "Description";
> $lang["giftcards_details_count"] = "Détails d\'inventaire";
> $lang["giftcards_do_nothing"] = "Ne rien faire";
> $lang["giftcards_edit_fields_you_want_to_update"] = "Modifier les chaps que vous voulez éditer pour TOUTES les cartes";
> $lang["giftcards_edit_multiple_giftcards"] = "Édition Multiple de Cartes";
> $lang["giftcards_error_adding_updating"] = "Érreur d\'ajout/édition de cartes";
> $lang["giftcards_error_updating_multiple"] = "Érreur lors de l\'édition des cartes";
> $lang["giftcards_excel_import_failed"] = "Échec de l\'import";
> $lang["giftcards_generate_barcodes"] = "Générer des Codes-barre";
> $lang["giftcards_giftcard"] = "Carte Cadeau";
> $lang["giftcards_giftcard_number"] = "Numéro de Carte";
> $lang["giftcards_info_provided_by"] = "Information fournie par";
> $lang["giftcards_inventory_comments"] = "Commentaires";
> $lang["giftcards_is_serialized"] = "Carte cadeau avec Numéro de Série";
> $lang["giftcards_low_inventory_giftcards"] = "Cartes Stock Faible";
> $lang["giftcards_manually_editing_of_quantity"] = "Modification Manuelle de Quantité";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "Vous devez sélectionner au moins une carte pour générer des codes-barre";
> $lang["giftcards_new"] = "Nouvelle Carte";
> $lang["giftcards_no_description_giftcards"] = "Cartes Sans Description";
> $lang["giftcards_no_giftcards_to_display"] = "Aucune carte à afficher";
> $lang["giftcards_none"] = "Aucun";
> $lang["giftcards_none_selected"] = "Vous n\\\'avez sélectionné aucune carte à éditer";
> $lang["giftcards_number"] = "Le numéro de la carte doit etre un nombre";
> $lang["giftcards_number_information"] = "Numéro de Carte";
> $lang["giftcards_number_required"] = "Le Numéro est requis";
> $lang["giftcards_one_or_multiple"] = "carte(s)";
> $lang["giftcards_person_id"] = "Client";
> $lang["giftcards_quantity"] = "Quantité";
> $lang["giftcards_quantity_required"] = "La quantité est requise. Veuillez Fermer ( X ) pour annuler";
> $lang["giftcards_reorder_level"] = "Seuil de Réapprovisionnement";
> $lang["giftcards_retrive_giftcard_info"] = "Obtenir des détails de la Carte";
> $lang["giftcards_sales_tax_1"] = "Sales Tax";
> $lang["giftcards_sales_tax_2"] = "Sales Tax 2";
> $lang["giftcards_serialized_giftcards"] = "Cartes Cadeau Serialisés";
> $lang["giftcards_successful_adding"] = "Vous avez ajouté une carte cadeau bonus";
> $lang["giftcards_successful_bulk_edit"] = "Les cartes ont étés édités";
> $lang["giftcards_successful_deleted"] = "Suppréssion réussie";
> $lang["giftcards_successful_updating"] = "Édition réussie";
> $lang["giftcards_supplier"] = "Fournisseur";
> $lang["giftcards_tax_1"] = "Tax 1";
> $lang["giftcards_tax_2"] = "Tax 2";
> $lang["giftcards_tax_percent"] = "Taux d\'imposition";
> $lang["giftcards_tax_percents"] = "Pourcentage d\'imposition";
> $lang["giftcards_unit_price"] = "Prix Unitaire";
> $lang["giftcards_upc_database"] = "Base de Données UPC";
> $lang["giftcards_update"] = "Éditer Carte";
> $lang["giftcards_use_inventory_menu"] = "Utiliser Menu Inv.";
> $lang["giftcards_value"] = "La valeur de la carte doit etre un nombre";
> $lang["giftcards_value_required"] = "La Valeur est requise";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/index.html opensourcepos/application/language/fr/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/item_kits_lang.php opensourcepos/application/language/fr/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = 'Nom du Kit';
< $lang['item_kits_description'] = 'Description du Kit';
< $lang['item_kits_no_item_kits_to_display'] = 'Aucun kit à afficher';
< $lang['item_kits_update'] = 'Éditer Kit';
< $lang['item_kits_new'] = 'Nouveau Kit';
< $lang['item_kits_none_selected'] = 'Vous n\\\'avez sélectionné aucun kit';
< $lang['item_kits_info'] = 'Détails du Kit';
< $lang['item_kits_successful_adding'] = 'Vous avez ajouté un Kit';
< $lang['item_kits_successful_updating'] = 'Vous avez édité un Kit';
< $lang['item_kits_error_adding_updating'] = 'Érreur d\'ajout/édition de Kit';
< $lang['item_kits_successful_deleted'] = 'Suppréssion réussie';
< $lang['item_kits_confirm_delete'] = 'Ètes vous sûr(e) de vouloir supprimer le(s) Kits sélectionnés?';
< $lang['item_kits_one_or_multiple'] = 'Kit(s)';
< $lang['item_kits_cannot_be_deleted'] = 'Impossible de supprimer';
< $lang['item_kits_add_item'] = 'Ajouter Item';
< $lang['item_kits_items'] = 'Items';
< $lang['item_kits_item'] = 'Item';
< $lang['item_kits_quantity'] = 'Quantité';
< ?>
---
> 
> $lang["item_kits_add_item"] = "Ajouter Item";
> $lang["item_kits_cannot_be_deleted"] = "Impossible de supprimer";
> $lang["item_kits_confirm_delete"] = "Ètes vous sûr(e) de vouloir supprimer le(s) Kits sélectionnés?";
> $lang["item_kits_description"] = "Description du Kit";
> $lang["item_kits_error_adding_updating"] = "Érreur d\'ajout/édition de Kit";
> $lang["item_kits_info"] = "Détails du Kit";
> $lang["item_kits_item"] = "Item";
> $lang["item_kits_items"] = "Items";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "Nom du Kit";
> $lang["item_kits_new"] = "Nouveau Kit";
> $lang["item_kits_no_item_kits_to_display"] = "Aucun kit à afficher";
> $lang["item_kits_none_selected"] = "Vous n\\\'avez sélectionné aucun kit";
> $lang["item_kits_one_or_multiple"] = "Kit(s)";
> $lang["item_kits_quantity"] = "Quantité";
> $lang["item_kits_successful_adding"] = "Vous avez ajouté un Kit";
> $lang["item_kits_successful_deleted"] = "Suppréssion réussie";
> $lang["item_kits_successful_updating"] = "Vous avez édité un Kit";
> $lang["item_kits_update"] = "Éditer Kit";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/items_lang.php opensourcepos/application/language/fr/items_lang.php
2,81c2,88
< $lang['items_item_number'] = 'UPC/EAN/ISBN';
< $lang['items_retrive_item_info'] = 'Récupérer Informations';
< $lang['items_description'] = 'Description';
< $lang['items_amazon'] = 'Amazon';
< $lang['items_upc_database'] = 'Base de Données UPC';
< $lang['items_cannot_find_item'] = 'Impossible de récu[érer des informations';
< $lang['items_info_provided_by'] = 'Infos fournies by';
< $lang['items_basic_information'] = 'Informations sur l\'Item';
< $lang['items_number_information'] = 'Numbéro d\'Item';
< $lang['items_new'] = 'Nouvel Item';
< $lang['items_update'] = 'Éditer Item';
< $lang['items_item'] = 'Item';
< $lang['items_edit_multiple_items'] = 'Édition Multiple d\'Items';
< $lang['items_name'] = 'Nom';
< $lang['items_category'] = 'Categorie';
< $lang['items_cost_price'] = 'Prix de Gros';//GARRISON ADDED 4/21/2013
< $lang['items_unit_price'] = 'Prix au Détail';//GARRISON ADDED 4/21/2013
< $lang['items_tax_1'] = 'Taxe 1';
< $lang['items_tax_2'] = 'Taxe 2';
< $lang['items_sales_tax_1'] = 'Taxe Vente';
< $lang['items_sales_tax_2'] = 'Taxe Vente 2';
< $lang['items_tax_percent'] = 'Pourcentage d\'imposition';
< $lang['items_tax_percents'] = 'Pourcents(s) de taxes';
< $lang['items_reorder_level'] = 'Niveau de Réapprovisionnement';
< $lang['items_quantity'] = 'Quantité';
< $lang['items_reorder_level'] = 'Niveau de Réapprovisionnement';
< $lang['items_no_items_to_display'] = 'Aucun Items à afficher';
< $lang['items_bulk_edit'] = 'Édition en groupe';
< $lang['items_confirm_delete'] = 'Etes vous sûre de vouloir supprimer la sélection?';
< $lang['items_none_selected'] = 'Vous n\\\'avez sélectionné aucun élément';
< $lang['items_confirm_bulk_edit'] = 'Etes vous sûre de vouloir éditer toute la sélection?';
< $lang['items_successful_bulk_edit'] = 'Édition réussie';
< $lang['items_error_updating_multiple'] = 'Erreur d\'édition';
< $lang['items_edit_fields_you_want_to_update'] = 'Modifiez les champs que vous voulez éditer pour TOUS les items sélectionnés';
< $lang['items_error_adding_updating'] = 'Erreur d\'ajout/éditionn';
< $lang['items_successful_adding'] = 'Ajout enregistré';
< $lang['items_successful_updating'] = 'Édition enregistrée';
< $lang['items_successful_deleted'] = 'Suppréssion réussie';
< $lang['items_one_or_multiple'] = 'item(s)';
< $lang['items_cannot_be_deleted'] = 'Impossible de supprimer. Un ou plusiers des items sélectionnés a des ventes.';
< $lang['items_name_required'] = 'Le Nom est requis';
< $lang['items_category_required'] = 'La Catégorie est requise';
< $lang['items_buy_price_required'] = 'Le Prix d\'achat est requis';		//GARRISON UPDATED 6/3/2013
< $lang['items_unit_price_required'] = 'Le Prix de revente est requis';		//GARRISON UPDATED 6/3/2013
< $lang['items_cost_price_required'] = 'Le Prix de gros est requis';	//GARRISON UPDATED 6/3/2013
< $lang['items_tax_percent_required'] = 'Le Pourcentage d\'imposition est requis';
< $lang['items_quantity_required'] = 'La Quantité est requise';
< $lang['items_reorder_level_required'] = 'Le Niveaux de Réapprovisionnement est requis';
< $lang['items_unit_price_number'] = 'Le Prix unitaire doit etre un nombre';
< $lang['items_cost_price_number'] = 'Le Prix d\'achat doit etre un nombre';
< $lang['items_quantity_number'] = 'La Quantité doit etre un nombre';
< $lang['items_reorder_level_number'] = 'Le Niveaux de Réapprovisionnement doit etre un nombre';
< $lang['items_none'] = 'Aucun';
< $lang['items_supplier'] = 'Fournisseur';
< $lang['items_generate_barcodes'] = 'Générer des Coddes-barre';
< $lang['items_must_select_item_for_barcode'] = 'Vous devez sélectionner au moins un item';
< $lang['items_excel_import_failed'] = 'Echec Import d\'Excel';
< $lang['items_allow_alt_description'] = 'Autoriser Description Alt';
< $lang['items_is_serialized'] = 'Item a un Numéro de Série';
< $lang['items_low_inventory_items'] = 'Items à Stock Faible';
< $lang['items_serialized_items'] = 'Items Serialisés';
< $lang['items_no_description_items'] = 'Items sans Description';
< $lang['items_search_custom_items'] = 'Rechercher dans les Champs Choisis';//GARRISON ADDED
< $lang['items_inventory_comments'] = 'Commentaires';
< $lang['items_count'] = 'Mise à jour Inventaire';
< $lang['items_details_count'] = 'Détais Inventaire';
< $lang['items_add_minus'] = 'Ajoujer/Soustraire à l\'Inventaire';
< $lang['items_current_quantity'] = 'Quantité Actuelle';
< $lang['items_quantity_required'] = 'La Quantité est requise. Veuillez Fermer ( X ) pour annuler';
< $lang['items_do_nothing'] = 'Ne rien faire';
< $lang['items_change_all_to_serialized'] = 'Tout Sérialiser';
< $lang['items_change_all_to_unserialized'] = 'Tout désérialiser';
< $lang['items_change_all_to_allow_alt_desc'] = ' Autoriser Desc Alt Pour Tous';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Interdire Desc Alt Pour Tous';
< $lang['items_use_inventory_menu'] = 'Utiliser Menu Inv.';
< $lang['items_manually_editing_of_quantity'] = 'Édition Manuelle de Quantité';
< $lang['items_inventory'] = 'Inventaire';
< $lang['items_location'] = 'Location';
< $lang['items_is_deleted'] = 'Supprimé';// Parq 131215
< ?>
---
> 
> $lang["items_add_minus"] = "Ajoujer/Soustraire à l\'Inventaire";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "Autoriser Description Alt";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "Informations sur l\'Item";
> $lang["items_bulk_edit"] = "Édition en groupe";
> $lang["items_buy_price_required"] = "Le Prix d\'achat est requis";
> $lang["items_cannot_be_deleted"] = "Impossible de supprimer. Un ou plusiers des items sélectionnés a des ventes.";
> $lang["items_cannot_find_item"] = "Impossible de récu[érer des informations";
> $lang["items_category"] = "Categorie";
> $lang["items_category_required"] = "La Catégorie est requise";
> $lang["items_change_all_to_allow_alt_desc"] = " Autoriser Desc Alt Pour Tous";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Interdire Desc Alt Pour Tous";
> $lang["items_change_all_to_serialized"] = "Tout Sérialiser";
> $lang["items_change_all_to_unserialized"] = "Tout désérialiser";
> $lang["items_confirm_bulk_edit"] = "Etes vous sûre de vouloir éditer toute la sélection?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "Etes vous sûre de vouloir supprimer la sélection?";
> $lang["items_cost_price"] = "Prix de Gros";
> $lang["items_cost_price_number"] = "Le Prix d\'achat doit etre un nombre";
> $lang["items_cost_price_required"] = "Le Prix de gros est requis";
> $lang["items_count"] = "Mise à jour Inventaire";
> $lang["items_current_quantity"] = "Quantité Actuelle";
> $lang["items_description"] = "Description";
> $lang["items_details_count"] = "Détais Inventaire";
> $lang["items_do_nothing"] = "Ne rien faire";
> $lang["items_edit_fields_you_want_to_update"] = "Modifiez les champs que vous voulez éditer pour TOUS les items sélectionnés";
> $lang["items_edit_multiple_items"] = "Édition Multiple d\'Items";
> $lang["items_error_adding_updating"] = "Erreur d\'ajout/éditionn";
> $lang["items_error_updating_multiple"] = "Erreur d\'édition";
> $lang["items_excel_import_failed"] = "Echec Import d\'Excel";
> $lang["items_generate_barcodes"] = "Générer des Coddes-barre";
> $lang["items_image"] = "Avatar";
> $lang["items_info_provided_by"] = "Infos fournies by";
> $lang["items_inventory"] = "Inventaire";
> $lang["items_inventory_comments"] = "Commentaires";
> $lang["items_is_deleted"] = "Supprimé";
> $lang["items_is_serialized"] = "Item a un Numéro de Série";
> $lang["items_item"] = "Item";
> $lang["items_item_number"] = "UPC/EAN/ISBN";
> $lang["items_item_number_duplicate"] = "The item number is already present in the database";
> $lang["items_location"] = "Location";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "Items à Stock Faible";
> $lang["items_manually_editing_of_quantity"] = "Édition Manuelle de Quantité";
> $lang["items_must_select_item_for_barcode"] = "Vous devez sélectionner au moins un item";
> $lang["items_name"] = "Nom";
> $lang["items_name_required"] = "Le Nom est requis";
> $lang["items_new"] = "Nouvel Item";
> $lang["items_no_description_items"] = "Items sans Description";
> $lang["items_no_items_to_display"] = "Aucun Items à afficher";
> $lang["items_none"] = "Aucun";
> $lang["items_none_selected"] = "Vous n\\\'avez sélectionné aucun élément";
> $lang["items_number_information"] = "Numbéro d\'Item";
> $lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
> $lang["items_one_or_multiple"] = "item(s)";
> $lang["items_quantity"] = "Quantité";
> $lang["items_quantity_number"] = "La Quantité doit etre un nombre";
> $lang["items_quantity_required"] = "La Quantité est requise";
> $lang["items_receiving_quantity"] = "Receiving quantity";
> $lang["items_reorder_level"] = "Niveau de Réapprovisionnement";
> $lang["items_reorder_level_number"] = "Le Niveaux de Réapprovisionnement doit etre un nombre";
> $lang["items_reorder_level_required"] = "Le Niveaux de Réapprovisionnement est requis";
> $lang["items_retrive_item_info"] = "Récupérer Informations";
> $lang["items_sales_tax_1"] = "Taxe Vente";
> $lang["items_sales_tax_2"] = "Taxe Vente 2";
> $lang["items_search_custom_items"] = "Rechercher dans les Champs Choisis";
> $lang["items_serialized_items"] = "Items Serialisés";
> $lang["items_stock_location"] = "Stock location";
> $lang["items_successful_adding"] = "Ajout enregistré";
> $lang["items_successful_bulk_edit"] = "Édition réussie";
> $lang["items_successful_deleted"] = "Suppréssion réussie";
> $lang["items_successful_updating"] = "Édition enregistrée";
> $lang["items_supplier"] = "Fournisseur";
> $lang["items_tax_1"] = "Taxe 1";
> $lang["items_tax_2"] = "Taxe 2";
> $lang["items_tax_percent"] = "Pourcentage d\'imposition";
> $lang["items_tax_percent_required"] = "Le Pourcentage d\'imposition est requis";
> $lang["items_tax_percents"] = "Pourcents(s) de taxes";
> $lang["items_unit_price"] = "Prix au Détail";
> $lang["items_unit_price_number"] = "Le Prix unitaire doit etre un nombre";
> $lang["items_unit_price_required"] = "Le Prix de revente est requis";
> $lang["items_upc_database"] = "Base de Données UPC";
> $lang["items_update"] = "Éditer Item";
> $lang["items_use_inventory_menu"] = "Utiliser Menu Inv.";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/login_lang.php opensourcepos/application/language/fr/login_lang.php
2,8c2,8
< $lang['login_login']='Login';
< $lang['login_username']='Nom d\'utilisateur';
< $lang['login_password']='Mot de passe';
< $lang['login_go']='Lancer';
< $lang['login_invalid_username_and_password']='Entrée invalide';
< $lang['login_welcome_message']='Bienvenue au Système Open Source Point of Sale. Pour continuer, veuiller entrer votre nom d\'utilisateur et votre mot de passe ci-dessous.';
< ?>
---
> 
> $lang["login_go"] = "Lancer";
> $lang["login_invalid_username_and_password"] = "Entrée invalide";
> $lang["login_login"] = "Login";
> $lang["login_password"] = "Mot de passe";
> $lang["login_username"] = "Nom d\'utilisateur";
> $lang["login_welcome_message"] = "Bienvenue au Système Open Source Point of Sale. Pour continuer, veuiller entrer votre nom d\'utilisateur et votre mot de passe ci-dessous.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/module_lang.php opensourcepos/application/language/fr/module_lang.php
2d1
< $lang['module_home']='Accueil';
4,34c3,23
< $lang['module_customers']='Clients';
< $lang['module_customers_desc']='Ajouter, Éditer, Supprimer, et Chercher des clients';
< 
< $lang['module_suppliers']='Fournisseurs';
< $lang['module_suppliers_desc']='Ajouter, Éditer, Supprimer, et Chercher des fournisseurs';
< 
< $lang['module_employees']='Employés';
< $lang['module_employees_desc']='Ajouter, Éditer, Supprimer, et Chercher des employés';
< 
< $lang['module_sales']='Ventes';
< $lang['module_sales_desc']='Ventes et chiffre d\'affaire';
< 
< $lang['module_reports']='Rapports';
< $lang['module_reports_desc']='Visualiser et générer des rapports';
< 
< $lang['module_items']='Items vendus';
< $lang['module_items_desc']='Ajouter, Éditer, Supprimer, et Chercher des items en vente';
< 
< $lang['module_config']='Paramètres';
< $lang['module_config_desc']='Paramètres de la boutique';
< 
< $lang['module_receivings']='Entrées Stock';
< $lang['module_receivings_desc']='Gérer les ordres d\'achat';
< 
< $lang['module_giftcards']='Cartes Cadeau';
< $lang['module_giftcards_desc']='Ajouter, Éditer, Supprimer, et Chercher des cartes cadeau';
< 
< $lang['module_item_kits']='Items vendus en Kits';
< $lang['module_item_kits_desc']='Ajouter, Éditer, Supprimer, et Chercher des items vendus en kits';
< 
< ?>
---
> $lang["module_config"] = "Paramètres";
> $lang["module_config_desc"] = "Paramètres de la boutique";
> $lang["module_customers"] = "Clients";
> $lang["module_customers_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des clients";
> $lang["module_employees"] = "Employés";
> $lang["module_employees_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des employés";
> $lang["module_giftcards"] = "Cartes Cadeau";
> $lang["module_giftcards_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des cartes cadeau";
> $lang["module_home"] = "Accueil";
> $lang["module_item_kits"] = "Items vendus en Kits";
> $lang["module_item_kits_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des items vendus en kits";
> $lang["module_items"] = "Items vendus";
> $lang["module_items_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des items en vente";
> $lang["module_receivings"] = "Entrées Stock";
> $lang["module_receivings_desc"] = "Gérer les ordres d\'achat";
> $lang["module_reports"] = "Rapports";
> $lang["module_reports_desc"] = "Visualiser et générer des rapports";
> $lang["module_sales"] = "Ventes";
> $lang["module_sales_desc"] = "Ventes et chiffre d\'affaire";
> $lang["module_suppliers"] = "Fournisseurs";
> $lang["module_suppliers_desc"] = "Ajouter, Éditer, Supprimer, et Chercher des fournisseurs";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/receivings_lang.php opensourcepos/application/language/fr/receivings_lang.php
2,26c2,51
< $lang['recvs_register'] = 'Items Receiving';
< $lang['recvs_mode'] = 'Receiving Mode';
< $lang['recvs_receiving'] = 'Receive';
< $lang['recvs_return'] = 'Return';
< $lang['recvs_total'] = 'Total';
< $lang['recvs_cost'] = 'Cout';
< $lang['recvs_quantity'] = 'Qté.';
< $lang['recvs_discount'] = 'Remise %';
< $lang['recvs_edit'] = 'Éditer';
< $lang['recvs_new_supplier'] = 'Nouveau Fournisseur';
< $lang['recvs_supplier'] = 'Fournisseur';
< $lang['recvs_select_supplier'] = 'Choisir Fournisseur (Facultatif)';
< $lang['recvs_start_typing_supplier_name'] = 'Commencez à saisir le nom du fournisseur...';
< $lang['recvs_unable_to_add_item'] = 'Impossible d\'ajouter l\'item aux arrivages';
< $lang['recvs_error_editing_item'] = 'Erreur d\'édition';
< $lang['recvs_receipt'] = 'Recu des Arrivages';
< $lang['recvs_complete_receiving'] = 'Fin';
< $lang['recvs_confirm_finish_receiving'] = 'Etes vous sûr(e) de vouloir valider cet arrivage (Irréversible)?';
< $lang['recvs_confirm_cancel_receiving'] = 'Etes vous sûr(e) de vouloir annuler cet arrivage?';
< $lang['recvs_find_or_scan_item'] = 'Chercher/Scanner Élément';
< $lang['recvs_find_or_scan_item_or_receipt'] = 'Chercher Elément OU Recu';
< $lang['recvs_id'] = 'ID Arrivage';
< $lang['recvs_item_name'] = 'Nom d\'Élément';
< $lang['receivings_transaction_failed'] = 'Échec d\'opération d\'arrivage';
< ?>
---
> 
> $lang["receivings_transaction_failed"] = "Échec d'opération d'arrivage";
> $lang["recvs_basic_information"] = "";
> $lang["recvs_cancel_receiving"] = "";
> $lang["recvs_cannot_be_deleted"] = "";
> $lang["recvs_comments"] = "";
> $lang["recvs_complete_receiving"] = "Fin";
> $lang["recvs_confirm_cancel_receiving"] = "Etes vous sûr(e) de vouloir annuler cet arrivage?";
> $lang["recvs_confirm_finish_receiving"] = "Etes vous sûr(e) de vouloir valider cet arrivage (Irréversible)?";
> $lang["recvs_cost"] = "Cout";
> $lang["recvs_date"] = "";
> $lang["recvs_date_required"] = "";
> $lang["recvs_date_type"] = "";
> $lang["recvs_delete_confirmation"] = "";
> $lang["recvs_delete_entire_sale"] = "Delete entire sale";
> $lang["recvs_discount"] = "Remise %";
> $lang["recvs_edit"] = "Éditer";
> $lang["recvs_edit_sale"] = "Edit Receiving";
> $lang["recvs_employee"] = "Employee";
> $lang["recvs_error_editing_item"] = "Erreur d'édition";
> $lang["recvs_error_requisition"] = "";
> $lang["recvs_find_or_scan_item"] = "Chercher/Scanner Élément";
> $lang["recvs_find_or_scan_item_or_receipt"] = "Chercher Elément OU Recu";
> $lang["recvs_id"] = "ID Arrivage";
> $lang["recvs_invoice_enable"] = "Create Invoice";
> $lang["recvs_invoice_number"] = "";
> $lang["recvs_invoice_number_duplicate"] = "";
> $lang["recvs_item_name"] = "Nom d'Élément";
> $lang["recvs_mode"] = "Receiving Mode";
> $lang["recvs_new_supplier"] = "Nouveau Fournisseur";
> $lang["recvs_one_or_multiple"] = "";
> $lang["recvs_print_after_sale"] = "Imprimer un recu après vente";
> $lang["recvs_quantity"] = "Qté.";
> $lang["recvs_receipt"] = "Recu des Arrivages";
> $lang["recvs_receipt_number"] = "";
> $lang["recvs_receiving"] = "Receive";
> $lang["recvs_register"] = "Items Receiving";
> $lang["recvs_requisition"] = "";
> $lang["recvs_return"] = "Return";
> $lang["recvs_select_supplier"] = "Choisir Fournisseur (Facultatif)";
> $lang["recvs_start_typing_supplier_name"] = "Commencez à saisir le nom du fournisseur...";
> $lang["recvs_stock_destination"] = "Stock destination";
> $lang["recvs_stock_locaiton"] = "Stock location";
> $lang["recvs_stock_source"] = "Stock source";
> $lang["recvs_successfully_deleted"] = "You have successfully deleted";
> $lang["recvs_successfully_updated"] = "Receiving successfully updated";
> $lang["recvs_supplier"] = "Fournisseur";
> $lang["recvs_total"] = "Total";
> $lang["recvs_unable_to_add_item"] = "Impossible d'ajouter l'item aux arrivages";
> $lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/reports_lang.php opensourcepos/application/language/fr/reports_lang.php
2,90c2,108
< $lang['reports_reports'] = 'Rapports';
< $lang['reports_report'] = 'Rapport';
< $lang['reports_welcome_message'] = 'Bienvenue à la page des rapports. Veuillez sélectionner un rapport à visualiser.';
< $lang['reports_sales_summary_report'] = 'Rapport: Résumé des Ventes';
< $lang['reports_categories_summary_report'] = 'Rapport: Résumé des Catégories';
< $lang['reports_customers_summary_report'] = 'Rapport: Résumé Clientelle';
< $lang['reports_suppliers_summary_report'] = 'Rapport: Résumé Fournisseurs';
< $lang['reports_items_summary_report'] = 'Rapport: Résumé Items';
< $lang['reports_employees_summary_report'] = 'Rapport: Résumé Employés';
< $lang['reports_taxes_summary_report'] = 'Rapport: Résumé Taxes';
< $lang['reports_date'] = 'Date';
< $lang['reports_name'] = 'Nom';
< $lang['reports_quantity_purchased'] = 'Quantité Achetée';
< $lang['reports_sale_id'] = 'ID Vente';
< $lang['reports_items_purchased'] = 'Éléments Achetés';
< $lang['reports_sold_by'] = 'Vendu par';
< $lang['reports_sold_to'] = 'Vendu à';
< $lang['reports_category'] = 'Catégorie';
< $lang['reports_customer'] = 'Client';
< $lang['reports_employee'] = 'Employé';
< $lang['reports_item'] = 'Item';
< $lang['reports_items'] = 'Items';
< $lang['reports_supplier'] = 'Fournisseur';
< $lang['reports_employees'] = 'Employés';
< $lang['reports_subtotal'] = 'Sous-total';
< $lang['reports_total'] = 'Total';
< $lang['reports_tax'] = 'Taxe';
< $lang['reports_profit'] = 'Bénéfice';
< $lang['reports_report_input'] = 'Rapport Entrées';
< $lang['reports_discount'] = 'Remise';
< $lang['reports_type'] = 'Type';
< $lang['reports_discount'] = 'Une remise supérieure à ';
< $lang['reports_date_range'] = 'Plage de dates';
< $lang['reports_today'] = 'Aujourd\'hui';
< $lang['reports_yesterday'] = 'Hier';
< $lang['reports_last_7'] = 'Ces 7 derniers jours';
< $lang['reports_this_month'] = 'Ce mois';
< $lang['reports_last_month'] = 'Le mois dernier';
< $lang['reports_this_year'] = 'Cette Année';
< $lang['reports_last_year'] = 'L\'année passée';
< $lang['reports_all_time'] = 'Depuis le début';
< $lang['reports_detailed_sales_report'] = 'Rapport de Ventes Détaillé';
< $lang['reports_comments'] = 'Commentaires';
< $lang['reports_discount'] = 'Remise';
< $lang['reports_payment_type'] = 'Type Paiement';
< $lang['reports_sales'] = 'Ventes';
< $lang['reports_categories'] = 'Catégories';
< $lang['reports_customers'] = 'Clients';
< $lang['reports_suppliers'] = 'Fournisseurs';
< $lang['reports_items'] = 'Items';
< $lang['reports_employees'] = 'Employés';
< $lang['reports_taxes'] = 'Taxes';
< $lang['reports_customer'] = 'Client';
< $lang['reports_employee'] = 'Employé';
< $lang['reports_tax_percent'] = 'Pourcentage d\'imposition';
< $lang['reports_quantity_purchased'] = 'Quantité Achetée';
< $lang['reports_serial_number'] = '# Série';
< $lang['reports_description'] = 'Description';
< $lang['reports_date'] = 'Date';
< $lang['reports_sales_amount'] = 'Somme de ventes';
< $lang['reports_revenue'] = 'Revenu';
< $lang['reports_discounts'] = 'Remises';
< $lang['reports_discounts_summary_report'] = 'Rapport: Résumé des Remises';
< $lang['reports_discount_percent'] = 'Pourcentage Remises';
< $lang['reports_count'] = 'Décompte';
< $lang['reports_summary_reports'] = 'Rapports de Résumés';
< $lang['reports_graphical_reports'] = 'Rapports Graphiques';
< $lang['reports_detailed_reports'] = 'Rapports Détaillés';
< $lang['reports_inventory_reports'] = 'Rapports d\'Inventaire';
< $lang['reports_low_inventory'] = 'Niveau d\'Inventaire Bas';
< $lang['reports_inventory_summary'] = ' Résumé d\'Inventaire';
< $lang['reports_item_number'] = 'Numéro d\'Item';
< $lang['reports_reorder_level'] = 'Seuil de Réapprovisionnement';
< $lang['reports_low_inventory_report'] = 'Rapport de Niveau d\'Inventaire Bas';
< $lang['reports_item_name'] = 'Nom d\'Item';
< $lang['reports_inventory_summary_report'] = 'Rapport: Résumé d\'Inventaire';
< $lang['reports_payment_type'] = 'Type Paiement';
< $lang['reports_payments_summary_report'] = 'Rapport: Résumé des Paiements';
< $lang['reports_payments'] = 'Paiements';
< $lang['reports_receivings'] = 'Arrivages';
< $lang['reports_received_by'] = 'Recu par';
< $lang['reports_supplied_by'] = 'Fournit par';
< $lang['reports_items_received'] = 'Éléments Arrivés';
< $lang['reports_detailed_receivings_report'] = 'Rapport d\'Arrivages Détaillé';
< $lang['reports_sale_type'] = 'Type Vente';
< $lang['reports_all'] = 'Tous';
< $lang['reports_returns'] = 'Reprises';
< $lang['reports_discount'] = 'Remises';
< ?>
---
> 
> $lang["reports_all"] = "Tous";
> $lang["reports_all_time"] = "Depuis le début";
> $lang["reports_categories"] = "Catégories";
> $lang["reports_categories_summary_report"] = "Rapport: Résumé des Catégories";
> $lang["reports_category"] = "Catégorie";
> $lang["reports_comments"] = "Commentaires";
> $lang["reports_count"] = "Décompte";
> $lang["reports_customer"] = "Client";
> $lang["reports_customers"] = "Clients";
> $lang["reports_customers_summary_report"] = "Rapport: Résumé Clientelle";
> $lang["reports_date"] = "Date";
> $lang["reports_date_range"] = "Plage de dates";
> $lang["reports_description"] = "Description";
> $lang["reports_detailed_receivings_report"] = "Rapport d\'Arrivages Détaillé";
> $lang["reports_detailed_reports"] = "Rapports Détaillés";
> $lang["reports_detailed_requisition_report"] = "";
> $lang["reports_detailed_sales_report"] = "Rapport de Ventes Détaillé";
> $lang["reports_discount"] = "Remise";
> $lang["reports_discount_percent"] = "Pourcentage Remises";
> $lang["reports_discounts"] = "Remises";
> $lang["reports_discounts_summary_report"] = "Rapport: Résumé des Remises";
> $lang["reports_employee"] = "Employé";
> $lang["reports_employees"] = "Employés";
> $lang["reports_employees_summary_report"] = "Rapport: Résumé Employés";
> $lang["reports_graphical_reports"] = "Rapports Graphiques";
> $lang["reports_inventory"] = "";
> $lang["reports_inventory_low"] = "Niveau d\'Inventaire Bas";
> $lang["reports_inventory_low_report"] = "Rapport de Niveau d\'Inventaire Bas";
> $lang["reports_inventory_reports"] = "Rapports d\'Inventaire";
> $lang["reports_inventory_summary"] = " Résumé d\'Inventaire";
> $lang["reports_inventory_summary_report"] = "Rapport: Résumé d\'Inventaire";
> $lang["reports_item"] = "Item";
> $lang["reports_item_name"] = "Nom d\'Item";
> $lang["reports_item_number"] = "Numéro d\'Item";
> $lang["reports_items"] = "Items";
> $lang["reports_items_purchased"] = "Éléments Achetés";
> $lang["reports_items_received"] = "Éléments Arrivés";
> $lang["reports_items_summary_report"] = "Rapport: Résumé Items";
> $lang["reports_last_7"] = "Ces 7 derniers jours";
> $lang["reports_last_month"] = "Le mois dernier";
> $lang["reports_last_year"] = "L\'année passée";
> $lang["reports_low_inventory"] = "";
> $lang["reports_low_inventory_report"] = "";
> $lang["reports_name"] = "Nom";
> $lang["reports_payment_type"] = "Type Paiement";
> $lang["reports_payments"] = "Paiements";
> $lang["reports_payments_summary_report"] = "Rapport: Résumé des Paiements";
> $lang["reports_profit"] = "Bénéfice";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "Quantité Achetée";
> $lang["reports_received_by"] = "Recu par";
> $lang["reports_receiving_id"] = "";
> $lang["reports_receiving_type"] = "";
> $lang["reports_receivings"] = "Arrivages";
> $lang["reports_reorder_level"] = "Seuil de Réapprovisionnement";
> $lang["reports_report"] = "Rapport";
> $lang["reports_report_input"] = "Rapport Entrées";
> $lang["reports_reports"] = "Rapports";
> $lang["reports_requisition"] = "";
> $lang["reports_requisition_by"] = "";
> $lang["reports_requisition_id"] = "";
> $lang["reports_requisition_item"] = "";
> $lang["reports_requisition_item_quantity"] = "";
> $lang["reports_requisition_related_item"] = "";
> $lang["reports_requisition_related_item_total_quantity"] = "";
> $lang["reports_requisition_related_item_unit_quantity"] = "";
> $lang["reports_requisitions"] = "";
> $lang["reports_returns"] = "Reprises";
> $lang["reports_revenue"] = "Revenu";
> $lang["reports_sale_id"] = "ID Vente";
> $lang["reports_sale_type"] = "Type Vente";
> $lang["reports_sales"] = "Ventes";
> $lang["reports_sales_amount"] = "Somme de ventes";
> $lang["reports_sales_summary_report"] = "Rapport: Résumé des Ventes";
> $lang["reports_serial_number"] = "# Série";
> $lang["reports_sold_by"] = "Vendu par";
> $lang["reports_sold_to"] = "Vendu à";
> $lang["reports_stock_location"] = "";
> $lang["reports_subtotal"] = "Sous-total";
> $lang["reports_summary_reports"] = "Rapports de Résumés";
> $lang["reports_supplied_by"] = "Fournit par";
> $lang["reports_supplier"] = "Fournisseur";
> $lang["reports_suppliers"] = "Fournisseurs";
> $lang["reports_suppliers_summary_report"] = "Rapport: Résumé Fournisseurs";
> $lang["reports_tax"] = "Taxe";
> $lang["reports_tax_percent"] = "Pourcentage d\'imposition";
> $lang["reports_taxes"] = "Taxes";
> $lang["reports_taxes_summary_report"] = "Rapport: Résumé Taxes";
> $lang["reports_this_month"] = "Ce mois";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "Cette Année";
> $lang["reports_today"] = "Aujourd\'hui";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "Total";
> $lang["reports_type"] = "Type";
> $lang["reports_welcome_message"] = "Bienvenue à la page des rapports. Veuillez sélectionner un rapport à visualiser.";
> $lang["reports_yesterday"] = "Hier";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "Prix de Gros";
> $lang["reports_unit_price"] = "Prix au Détail";
> $lang["reports_sub_total_value"] = "Sous-Total";
> $lang["reports_total_inventory_value"] = "Total Inventory Value";
> $lang["reports_zero_and_less"] = "Zero and less";
> $lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/sales_lang.php opensourcepos/application/language/fr/sales_lang.php
2,87c2,117
< $lang['sales_giftcard_number'] = 'Numéro de Carte cadeau';
< $lang['sales_giftcard'] = 'Carte Cadeau';
< $lang['sales_register'] = 'Registre des Ventes';
< $lang['sales_mode'] = 'Mode d\'Enregistrement';
< $lang['sales_new_item'] = 'Nouvel Élément';
< $lang['sales_item_name'] = 'Nom';
< $lang['sales_item_number'] = '# Item';
< $lang['sales_new_customer'] = 'Nouveau Client';
< $lang['sales_customer'] = 'Client';
< $lang['sales_no_items_in_cart'] = 'Il n\'y a rien dans votre panier';
< $lang['sales_total'] = 'Total';
< $lang['sales_tax_percent'] = '% Taxe';
< $lang['sales_price'] = 'Prix';
< $lang['sales_quantity'] = 'Qté.';
< $lang['sales_discount'] = '% Remise';
< $lang['sales_edit'] = 'Éditer';
< $lang['sales_payment'] = 'Type Paiement';
< $lang['sales_edit_item'] = 'Éditer Item';
< $lang['sales_find_or_scan_item'] = 'Trouver/Scanner Item';
< $lang['sales_find_or_scan_item_or_receipt'] = 'Trouver/Scanner Item OU Recu';
< $lang['sales_select_customer'] = 'Choisir Client (Facultatif)';
< $lang['sales_start_typing_item_name'] = 'Commencez à saisir le nom de l\'item ou scannez le code-barre...';
< $lang['sales_start_typing_customer_name'] = 'Commencez à saisir le nom du client...';
< $lang['sales_sub_total'] = 'Sous-Total';
< $lang['sales_tax'] = 'Taxe';
< $lang['sales_comment'] = 'Commentaire';
< $lang['sales_unable_to_add_item'] = 'Erreur d\'ajout à la vente';
< $lang['sales_sale_for_customer'] = 'Client:';
< $lang['sales_remove_customer'] = 'Enlever Client';
< $lang['sales_error_editing_item'] = 'Érreur lors de l\'édition';
< $lang['sales_complete_sale'] = 'Finaliser la Vente';
< $lang['sales_cancel_sale'] = 'Annuler la Vente';
< $lang['sales_add_payment'] = 'Ajouter Paiement';
< $lang['sales_receipt'] = 'Recu de Ventes';
< $lang['sales_receipt_number']='# Caisse';
< $lang['sales_id'] = 'ID Vente';
< $lang['sales_sale'] = 'Vente';
< $lang['sales_return'] = 'Reprise';
< $lang['sales_confirm_finish_sale'] = 'Etes vous sûr(e) de vouloir enregistrer cette vente? Cette opération est irréversible.';
< $lang['sales_confirm_cancel_sale'] = 'Etes vous sûr(e) de vouloir annuler cette vente?';
< $lang['sales_cash'] = 'Cash';
< $lang['sales_check'] = 'Cheque';
< $lang['sales_debit'] = 'Carte Débit';
< $lang['sales_credit'] = 'Carte de Crédit';
< $lang['sales_giftcard'] = 'Carte Cadeau';
< $lang['sales_amount_tendered'] = 'Somme';
< $lang['sales_change_due'] = 'Reste';
< $lang['sales_payment_not_cover_total'] = 'Le Paiement ne couvre pas le Total';
< $lang['sales_transaction_failed'] = 'Échec de Transaction de vente';
< $lang['sales_must_enter_numeric'] = 'Veuillez entrer une valeur numérique pour la somme';
< $lang['sales_must_enter_numeric_giftcard'] = 'Veuillez entrer une valeur numérique pour le numéro de carte';
< $lang['sales_serial'] = 'Serie';
< $lang['sales_description_abbrv'] = 'Desc';
< $lang['sales_item_out_of_stock'] = 'Stock épuisé';
< $lang['sales_item_insufficient_of_stock'] = 'Stock top faible';
< $lang['sales_quantity_less_than_zero'] = 'Avertissement, Quantité Demandée Insuffisante. Vous pouvez accomplir la ventre, mais veuillez vérifier votre inventaire';
< $lang['sales_successfully_updated'] = 'Vente éditée';
< $lang['sales_unsuccessfully_updated'] = 'Échec d\'édition';
< $lang['sales_edit_sale'] = 'Éditer Vente';
< $lang['sales_employee'] = 'Employé';
< $lang['sales_successfully_deleted'] = 'Vente supprimée';
< $lang['sales_unsuccessfully_deleted'] = 'Échec de suppression';
< $lang['sales_delete_entire_sale'] = 'Supprimer Vente';
< $lang['sales_delete_confirmation'] = 'Etes vous sûr(e) de vouloir supprimer cette vente? Cette opération est irréversible.';
< $lang['sales_date'] = 'Date de Vente';
< $lang['sales_delete_successful'] = 'Suppréssion réussie';
< $lang['sales_delete_unsuccessful'] = 'Échec de suppression';
< $lang['sales_suspend_sale'] = 'Suspendre la Vente';
< $lang['sales_confirm_suspend_sale'] = 'Etes vous sûr(e) de vouloir suspendre cette vente?';
< $lang['sales_suspended_sales'] = 'Ventes Suspendues';
< $lang['sales_suspended_sale_id'] = 'ID';
< $lang['sales_date'] = 'Date';
< $lang['sales_comments'] = 'Commentaires';
< $lang['sales_unsuspend_and_delete'] = '';
< $lang['sales_unsuspend'] = 'Débloquer';
< $lang['sales_successfully_suspended_sale'] = 'Vente suspendue';
< $lang['sales_email_receipt'] = 'Recu par E-Mail';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Remise';
< $lang['sales_sale_time']='Time';
< $lang['sales_payments_total'] = 'Total Paiments';
< $lang['sales_amount_due'] = 'Somme Due';
< $lang['sales_payment_type'] = "Type";
< $lang['sales_payment_amount'] = "Somme";
< $lang['sales_basic_information']='Information de Vente';
< ?>
---
> 
> $lang["sales_add_payment"] = "Ajouter Paiement";
> $lang["sales_amount_due"] = "Somme Due";
> $lang["sales_amount_tendered"] = "Somme";
> $lang["sales_basic_information"] = "Information de Vente";
> $lang["sales_cancel_sale"] = "Annuler la Vente";
> $lang["sales_cash"] = "Cash";
> $lang["sales_change_due"] = "Reste";
> $lang["sales_check"] = "Cheque";
> $lang["sales_check_balance"] = "Check remainder";
> $lang["sales_comment"] = "Commentaire";
> $lang["sales_comments"] = "Commentaires";
> $lang["sales_complete_sale"] = "Finaliser la Vente";
> $lang["sales_confirm_cancel_sale"] = "Etes vous sûr(e) de vouloir annuler cette vente?";
> $lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
> $lang["sales_confirm_finish_sale"] = "Etes vous sûr(e) de vouloir enregistrer cette vente? Cette opération est irréversible.";
> $lang["sales_confirm_suspend_sale"] = "Etes vous sûr(e) de vouloir suspendre cette vente?";
> $lang["sales_credit"] = "Carte de Crédit";
> $lang["sales_customer"] = "Client";
> $lang["sales_date"] = "Date de Vente";
> $lang["sales_date_required"] = "A correct date needs to be filled in";
> $lang["sales_date_type"] = "Date field is required";
> $lang["sales_debit"] = "Carte Débit";
> $lang["sales_delete_confirmation"] = "Etes vous sûr(e) de vouloir supprimer cette vente? Cette opération est irréversible.";
> $lang["sales_delete_entire_sale"] = "Supprimer Vente";
> $lang["sales_delete_successful"] = "Suppréssion réussie";
> $lang["sales_delete_unsuccessful"] = "Échec de suppression";
> $lang["sales_description_abbrv"] = "Desc";
> $lang["sales_discount"] = "% Remise";
> $lang["sales_discount_included"] = "% Discount";
> $lang["sales_discount"] = "Discount";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "Éditer";
> $lang["sales_edit_item"] = "Éditer Item";
> $lang["sales_edit_sale"] = "Éditer Vente";
> $lang["sales_email_receipt"] = "Recu par E-Mail";
> $lang["sales_employee"] = "Employé";
> $lang["sales_error_editing_item"] = "Érreur lors de l\'édition";
> $lang["sales_find_or_scan_item"] = "Trouver/Scanner Item";
> $lang["sales_find_or_scan_item_or_receipt"] = "Trouver/Scanner Item OU Recu";
> $lang["sales_giftcard"] = "Carte Cadeau";
> $lang["sales_giftcard_balance"] = "Giftcard Balance";
> $lang["sales_giftcard_number"] = "Numéro de Carte cadeau";
> $lang["sales_id"] = "ID Vente";
> $lang["sales_invoice"] = "Invoice";
> $lang["sales_invoice_confirm"] = "This invoice will be sent to";
> $lang["sales_invoice_enable"] = "Create Invoice";
> $lang["sales_invoice_filter"] = "Invoices";
> $lang["sales_cash_filter"] = "Cash";
> $lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
> $lang["sales_invoice_number"] = "Invoice #";
> $lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
> $lang["sales_invoice_sent"] = "Invoice sent to";
> $lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
> $lang["sales_invoice_update"] = "Recount";
> $lang["sales_item_insufficient_of_stock"] = "Stock top faible";
> $lang["sales_item_name"] = "Nom";
> $lang["sales_item_number"] = "# Item";
> $lang["sales_item_out_of_stock"] = "Stock épuisé";
> $lang["sales_mode"] = "Mode d\'Enregistrement";
> $lang["sales_must_enter_numeric"] = "Veuillez entrer une valeur numérique pour la somme";
> $lang["sales_must_enter_numeric_giftcard"] = "Veuillez entrer une valeur numérique pour le numéro de carte";
> $lang["sales_new_customer"] = "Nouveau Client";
> $lang["sales_new_item"] = "Nouvel Élément";
> $lang["sales_no_description"] = "None";
> $lang["sales_no_filter"] = "All";
> $lang["sales_no_items_in_cart"] = "Il n\'y a rien dans votre panier";
> $lang["sales_no_sales_to_display"] = "No sales to display";
> $lang["sales_one_or_multiple"] = "";
> $lang["sales_takings"] = "Takings";
> $lang["sales_payment"] = "Type Paiement";
> $lang["sales_payment_amount"] = "Somme";
> $lang["sales_payment_not_cover_total"] = "Le Paiement ne couvre pas le Total";
> $lang["sales_payment_type"] = "Type";
> $lang["sales_payments_total"] = "Total Paiments";
> $lang["sales_price"] = "Prix";
> $lang["sales_print_after_sale"] = "Imprimer un recu après vente";
> $lang["sales_quantity"] = "Qté.";
> $lang["sales_quantity_less_than_zero"] = "Avertissement, Quantité Demandée Insuffisante. Vous pouvez accomplir la ventre, mais veuillez vérifier votre inventaire";
> $lang["sales_quantity_less_than_reorder_level"] = "Avertissement, Quantité Demandée Insuffisante";
> $lang["sales_receipt"] = "Recu de Ventes";
> $lang["sales_receipt_number"] = "# Caisse";
> $lang["sales_register"] = "Registre des Ventes";
> $lang["sales_remove_customer"] = "Enlever Client";
> $lang["sales_return"] = "Reprise";
> $lang["sales_sale"] = "Vente";
> $lang["sales_sale_for_customer"] = "Client:";
> $lang["sales_sale_time"] = "Time";
> $lang["sales_select_customer"] = "Choisir Client (Facultatif)";
> $lang["sales_send_invoice"] = "Send Invoice";
> $lang["sales_serial"] = "Serie";
> $lang["sales_show_invoice"] = "invoice";
> $lang["sales_show_receipt"] = "receipt";
> $lang["sales_start_typing_customer_name"] = "Commencez à saisir le nom du client...";
> $lang["sales_start_typing_item_name"] = "Commencez à saisir le nom de l\'item ou scannez le code-barre...";
> $lang["sales_stock_location"] = "";
> $lang["sales_sub_total"] = "Sous-Total";
> $lang["sales_successfully_deleted"] = "Vente supprimée";
> $lang["sales_successfully_suspended_sale"] = "Vente suspendue";
> $lang["sales_successfully_updated"] = "Vente éditée";
> $lang["sales_suspend_sale"] = "Suspendre la Vente";
> $lang["sales_suspended_sale_id"] = "ID";
> $lang["sales_suspended_sales"] = "Ventes Suspendues";
> $lang["sales_tax"] = "Taxe";
> $lang["sales_tax_percent"] = "% Taxe";
> $lang["sales_total"] = "Total";
> $lang["sales_total_tax_exclusive"] = "Tax excluded";
> $lang["sales_transaction_failed"] = "Échec de Transaction de vente";
> $lang["sales_unable_to_add_item"] = "Erreur d\'ajout à la vente";
> $lang["sales_unsuccessfully_deleted"] = "Échec de suppression";
> $lang["sales_unsuccessfully_updated"] = "Échec d\'édition";
> $lang["sales_unsuspend"] = "Débloquer";
> $lang["sales_unsuspend_and_delete"] = "";
> $lang["sales_update"] = "Edit Sale";
> $lang["sales_date_range"] = "Plage de dates";
> $lang["sales_none_selected"] = "Vous n\\\'avez sélectionné aucun élément";
diff -rBwi --ignore-file-name-case pos-prod/application/language/fr/suppliers_lang.php opensourcepos/application/language/fr/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new'] = 'Nouveau Fournisseur';
< $lang['suppliers_supplier'] = 'Fournisseur';
< $lang['suppliers_update'] = 'Éditer Fournisseur';
< $lang['suppliers_confirm_delete'] = 'Etes vous sûr(e) de vouloir supprimer ce(s) fournisseur(s)?';
< $lang['suppliers_none_selected'] = 'Vous n\\\'avez pas sélectionné de fournisseur à supprimer';
< $lang['suppliers_error_adding_updating'] = 'Error lors de l\'ajout/suppression de fournisseur';
< $lang['suppliers_successful_adding'] = 'Fournisseur ajouté avec succès';
< $lang['suppliers_successful_updating'] = 'Fournisseur édité avec succès';
< $lang['suppliers_successful_deleted'] = 'Suppression réussie';
< $lang['suppliers_one_or_multiple'] = 'fournisseur(s)';
< $lang['suppliers_cannot_be_deleted'] = 'Impossible de supprimer le(s) fournisseur(s) sélectionné(s). Un ou plusieurs ont des ventes.';
< $lang['suppliers_basic_information'] = 'Informations fournisseur';
< $lang['suppliers_account_number'] = '# Compte';
< $lang['suppliers_company_name'] = 'Nom d\'Entreprise';
< $lang['suppliers_company_name_required'] = 'Le Nom d\'Entreprise est un champ requis';
< ?>
---
> 
> $lang["suppliers_account_number"] = "# Compte";
> $lang["suppliers_basic_information"] = "Informations fournisseur";
> $lang["suppliers_cannot_be_deleted"] = "Impossible de supprimer le(s) fournisseur(s) sélectionné(s). Un ou plusieurs ont des ventes.";
> $lang["suppliers_company_name"] = "Nom d\'Entreprise";
> $lang["suppliers_company_name_required"] = "Le Nom d\'Entreprise est un champ requis";
> $lang["suppliers_agency_name"] = "Nom d\'Agence";
> $lang["suppliers_confirm_delete"] = "Etes vous sûr(e) de vouloir supprimer ce(s) fournisseur(s)?";
> $lang["suppliers_error_adding_updating"] = "Error lors de l\'ajout/suppression de fournisseur";
> $lang["suppliers_new"] = "Nouveau Fournisseur";
> $lang["suppliers_none_selected"] = "Vous n\\\'avez pas sélectionné de fournisseur à supprimer";
> $lang["suppliers_one_or_multiple"] = "fournisseur(s)";
> $lang["suppliers_successful_adding"] = "Fournisseur ajouté avec succès";
> $lang["suppliers_successful_deleted"] = "Suppression réussie";
> $lang["suppliers_successful_updating"] = "Fournisseur édité avec succès";
> $lang["suppliers_supplier"] = "Fournisseur";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "Éditer Fournisseur";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/common_lang.php opensourcepos/application/language/id/common_lang.php
2,41c2,57
< $lang['common_common'] = 'Biasa';
< $lang['common_submit'] = 'Kirim';
< $lang['common_or'] = 'ATAU';
< $lang['common_powered_by'] = 'Diberdayakan oleh';
< $lang['common_welcome'] = 'Selamat Datang';
< $lang['common_logout'] = 'Keluar';
< $lang['common_list_of'] = 'Daftar';
< $lang['common_first_name'] = 'Nama Depan';
< $lang['common_last_name'] = 'Nama Belakang';
< $lang['common_email'] = 'E-Mail';
< $lang['common_phone_number'] = 'Telepon';
< $lang['common_address_1'] = 'Alamat 1';
< $lang['common_address_2'] = 'Alamat 2';
< $lang['common_city'] = 'Kota';
< $lang['common_state'] = 'Provinsi';
< $lang['common_zip'] = 'Kode POS';
< $lang['common_country'] = 'Negara';
< $lang['common_comments'] = 'Catatan';
< $lang['common_edit'] = 'Ubah';
< $lang['common_search'] = 'Cari';
< $lang['common_delete'] = 'Hapus';
< $lang['common_remove'] = 'Hapus';
< $lang['common_view_recent_sales'] = 'Lihat Penjualan Terkini';
< $lang['common_you_are_using_ospos'] = 'Anda menggunakan Open Source Point Of Sale Versi';
< $lang['common_please_visit_my'] = 'Silahkan kunjungi';
< $lang['common_website'] = 'Situs';
< $lang['common_fields_required_message'] = 'Bagian yang ditandai warna merah wajib diisi';
< $lang['common_learn_about_project'] = 'Untuk belajar informasi terbaru tentang proyek ini';
< $lang['common_searched_for'] = 'Mencari untuk';
< $lang['common_first_name_required'] = 'Nama depan wajib diisi.';
< $lang['common_last_name_required'] = 'Nama belakang wajib diisi.';
< $lang['common_email_invalid_format'] = 'Format alamat e-mail tidak benar';
< $lang['common_confirm_search'] = 'Anda telah memilih satu atau lebih baris, ini tidak akan lagi dipilih setelah pencarian Anda. Apakah Anda yakin ingin mengirimkan pencarian ini?';
< $lang['common_no_persons_to_display'] = 'Tidak ada orang untuk ditampilkan';
< $lang['common_return_policy'] = 'Kebijakan Retur';
< $lang['common_price'] = 'Harga';
< $lang['common_welcome_message']= 'Selamat Datang, klik modul di bawah ini untuk memulai';
< $lang['common_inv'] = 'Inv';
< $lang['common_det'] = 'Detail';
< ?>
---
> 
> $lang["common_address_1"] = "Alamat 1";
> $lang["common_address_2"] = "Alamat 2";
> $lang["common_city"] = "Kota";
> $lang["common_comments"] = "Catatan";
> $lang["common_common"] = "Biasa";
> $lang["common_confirm_search"] = "Anda telah memilih satu atau lebih baris, ini tidak akan lagi dipilih setelah pencarian Anda. Apakah Anda yakin ingin mengirimkan pencarian ini?";
> $lang["common_country"] = "Negara";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "Hapus";
> $lang["common_print"] = "Print";
> $lang["common_det"] = "Detail";
> $lang["common_edit"] = "Ubah";
> $lang["common_email"] = "E-Mail";
> $lang["common_email_invalid_format"] = "Format alamat e-mail tidak benar";
> $lang["common_fields_required_message"] = "Bagian yang ditandai warna merah wajib diisi";
> $lang["common_first_name"] = "Nama Depan";
> $lang["common_first_name_required"] = "Nama depan wajib diisi.";
> $lang["common_first_page"] = "First";
> $lang["common_gender"] = "Gender";
> $lang["common_gender_female"] = "V";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "Persediaan";
> $lang["common_last_name"] = "Nama Belakang";
> $lang["common_last_name_required"] = "Nama belakang wajib diisi.";
> $lang["common_last_page"] = "Last";
> $lang["common_learn_about_project"] = "Untuk belajar informasi terbaru tentang proyek ini";
> $lang["common_list_of"] = "Daftar";
> $lang["common_logout"] = "Keluar";
> $lang["common_new"] = "New";
> $lang["common_no_persons_to_display"] = "Tidak ada orang untuk ditampilkan";
> $lang["common_or"] = "ATAU";
> $lang["common_phone_number"] = "Telepon";
> $lang["common_phone_number_required"] = "Nomer Telepon Wajib Diisi";
> $lang["common_please_visit_my"] = "Silahkan kunjungi";
> $lang["common_powered_by"] = "Diberdayakan oleh";
> $lang["common_price"] = "Harga";
> $lang["common_remove"] = "Hapus";
> $lang["common_return_policy"] = "Kebijakan Retur";
> $lang["common_search"] = "Cari";
> $lang["common_search_options"] = "Search options";
> $lang["common_searched_for"] = "Mencari untuk";
> $lang["common_state"] = "Provinsi";
> $lang["common_submit"] = "Kirim";
> $lang["common_view_recent_sales"] = "Lihat Penjualan Terkini";
> $lang["common_website"] = "Situs";
> $lang["common_welcome"] = "Selamat Datang";
> $lang["common_welcome_message"] = "Selamat Datang, klik modul di bawah ini untuk memulai";
> $lang["common_you_are_using_ospos"] = "Anda menggunakan Open Source Point Of Sale Versi";
> $lang["common_zip"] = "Kode POS";
> $lang["common_import"] = "Import";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/config_lang.php opensourcepos/application/language/id/config_lang.php
2,36c2,122
< $lang['config_info'] = 'Informasi Konfigurasi Toko';
< $lang['config_company'] = 'Nama Perusahaan';
< $lang['config_address'] = 'Alamat Perusahaan';
< $lang['config_phone'] = 'Telepon Perusahaan';
< $lang['config_website'] = 'Situs Perusahaan';
< $lang['config_fax'] = 'Fax';
< $lang['config_default_tax_rate'] = 'Tarif Pajak Biasa%';
< $lang['config_default_tax_rate_1'] = 'Tarif Pajak 1';
< $lang['config_default_tax_rate_2'] = 'Tarif Pajak 2';
< $lang['config_company_required'] = 'Nama Perusahaan wajib diisi';
< $lang['config_address_required'] = 'Alamat Perusahaan wajib diisi';
< $lang['config_phone_required'] = 'Telepon Perusahaan wajib diisi';
< $lang['config_default_tax_rate_required'] = 'Tarif Pajak Biasa wajib diisi';
< $lang['config_default_tax_rate_number'] = 'Tarif Pajak Biasa harus angka';
< $lang['config_company_website_url'] = 'Situs Perusahaan bukan URL yang benar(http://...)';
< $lang['config_saved_successfully'] = 'Konfigurasi berhasil disimpan';
< $lang['config_saved_unsuccessfully'] = 'Konfigurasi tidak berhasil disimpan';
< $lang['config_return_policy_required'] = 'Kebijakan retur wajib diisi';
< $lang['config_print_after_sale'] = 'Cetak Faktur setelah penjualan';
< $lang['config_language'] = 'Bahasa';
< $lang['config_timezone'] = 'Zona Waktu';
< $lang['config_currency_symbol'] = 'Simbol Mata Uang';
< $lang['config_currency_side'] = 'Sisi Kanan'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Custom Field 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Custom Field 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Custom Field 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Custom Field 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Custom Field 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Custom Field 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Custom Field 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Custom Field 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Custom Field 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Custom Field 10'; //GARRISON ADDED 4/21/2013
< $lang['config_tax_included'] = 'Dikenakan Pajak';
< ?>
---
> 
> $lang["config_address"] = "Alamat Perusahaan";
> $lang["config_address_required"] = "Alamat Perusahaan wajib diisi";
> $lang["config_backup_button"] = "Backup";
> $lang["config_backup_database"] = "Backup Database";
> $lang["config_barcode_company"] = "Nama Perusahaan";
> $lang["config_barcode_configuration"] = "Barcode Configuration";
> $lang["config_barcode_content"] = "Barcode Content";
> $lang["config_barcode_first_row"] = "Row 7";
> $lang["config_barcode_font"] = "Font";
> $lang["config_barcode_height"] = "Height (px)";
> $lang["config_barcode_id"] = "Item Id/Name";
> $lang["config_barcode_info"] = "Barcode Configuration Information";
> $lang["config_barcode_layout"] = "Barcode Layout";
> $lang["config_barcode_name"] = "Name";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Number in row";
> $lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
> $lang["config_barcode_page_width"] = "Display page width";
> $lang["config_barcode_price"] = "Price";
> $lang["config_barcode_quality"] = "Quality (1-100)";
> $lang["config_barcode_second_row"] = "Row 8";
> $lang["config_barcode_third_row"] = "Row 9";
> $lang["config_barcode_type"] = "Barcode Type";
> $lang["config_barcode_width"] = "Width (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "Nama Perusahaan";
> $lang["config_company_logo"] = "Company Logo";
> $lang["config_company_required"] = "Nama Perusahaan wajib diisi";
> $lang["config_company_website_url"] = "Situs Perusahaan bukan URL yang benar(http://...)";
> $lang["config_currency_side"] = "Sisi Kanan";
> $lang["config_currency_symbol"] = "Simbol Mata Uang";
> $lang["config_custom1"] = "Custom Field 1";
> $lang["config_custom10"] = "Custom Field 10";
> $lang["config_custom2"] = "Custom Field 2";
> $lang["config_custom3"] = "Custom Field 3";
> $lang["config_custom4"] = "Custom Field 4";
> $lang["config_custom5"] = "Custom Field 5";
> $lang["config_custom6"] = "Custom Field 6";
> $lang["config_custom7"] = "Custom Field 7";
> $lang["config_custom8"] = "Custom Field 8";
> $lang["config_custom9"] = "Custom Field 9";
> $lang["config_decimal_point"] = "Titik Desimal";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Default Sales Discount %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "Tarif Pajak Biasa%";
> $lang["config_default_tax_rate_1"] = "Tarif Pajak 1";
> $lang["config_default_tax_rate_2"] = "Tarif Pajak 2";
> $lang["config_default_tax_rate_number"] = "Tarif Pajak Biasa harus angka";
> $lang["config_default_tax_rate_required"] = "Tarif Pajak Biasa wajib diisi";
> $lang["config_fax"] = "Fax";
> $lang["config_general_configuration"] = "General Configuration";
> $lang["config_info"] = "Informasi Konfigurasi Toko";
> $lang["config_invoice_default_comments"] = "Default Invoice Comments";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Invoice Printer";
> $lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
> $lang["config_language"] = "Bahasa";
> $lang["config_lines_per_page"] = "Lines Per Page";
> $lang["config_lines_per_page_number"] = "The lines per page must be a number";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locations";
> $lang["config_location_info"] = "Location Configuration Information";
> $lang["config_logout"] = "Don't you want to make a backup before logging out?";
> $lang["config_number_format"] = "Format Nomor";
> $lang["config_phone"] = "Telepon Perusahaan";
> $lang["config_phone_required"] = "Telepon Perusahaan wajib diisi";
> $lang["config_print_bottom_margin"] = "Margin Bottom";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Margin Left";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Margin Right";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Show Print Dialog";
> $lang["config_print_top_margin"] = "Margin Top";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Settings";
> $lang["config_receipt_info"] = "Receipt Configuration Information";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Show Taxes";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "Format Nota";
> $lang["config_return_policy_required"] = "Kebijakan retur wajib diisi";
> $lang["config_sales_invoice_format"] = "Format Nota";
> $lang["config_saved_successfully"] = "Konfigurasi berhasil disimpan";
> $lang["config_saved_unsuccessfully"] = "Konfigurasi tidak berhasil disimpan";
> $lang["config_show_total_discount"] = "Show total discount";
> $lang["config_stock_location"] = "Lokasi Stock";
> $lang["config_stock_location_duplicate"] = "Please use an unique location name";
> $lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
> $lang["config_stock_location_required"] = "Stock location number is a required field";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "Dikenakan Pajak";
> $lang["config_thousands_separator"] = "Pemisah Ribuan";
> $lang["config_timezone"] = "Zona Waktu";
> $lang["config_use_invoice_template"] = "Use invoice template";
> $lang["config_website"] = "Situs Perusahaan";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/customers_lang.php opensourcepos/application/language/id/customers_lang.php
2,16c2,19
< $lang['customers_new'] = 'Pelanggan Baru';
< $lang['customers_customer'] = 'Pelanggan';
< $lang['customers_update'] = 'Ubah Pelanggan';
< $lang['customers_confirm_delete'] = 'Apakah Anda yakin ingin menghapus pelanggan yang dipilih?';
< $lang['customers_none_selected'] = 'Anda belum memilih pelanggan untuk dihapus';
< $lang['customers_error_adding_updating'] = 'Menambah / Memperbarui Pelanggan Salah';
< $lang['customers_successful_adding'] = 'Anda telah berhasil menambah pelanggan';
< $lang['customers_successful_updating'] = 'Anda telah berhasil memperbarui pelanggan';
< $lang['customers_successful_deleted'] = 'Anda telah berhasil menghapus pelanggan';
< $lang['customers_one_or_multiple'] = 'pelanggan';
< $lang['customers_cannot_be_deleted'] = 'pelanggan terpilih tidak bisa dihapus; satu atau lebih dari pelanggan yang dipilih memiliki penjualan.';
< $lang['customers_basic_information'] = 'Informasi Pelanggan';
< $lang['customers_account_number'] = 'No.Pelanggan';
< $lang['customers_taxable'] = 'Dapat dikenakan pajak';
< ?>
---
> 
> $lang["customers_account_number"] = "No.Pelanggan";
> $lang["customers_account_number_duplicate"] = "This account number is already present in the database";
> $lang["customers_basic_information"] = "Informasi Pelanggan";
> $lang["customers_cannot_be_deleted"] = "pelanggan terpilih tidak bisa dihapus. satu atau lebih dari pelanggan yang dipilih memiliki penjualan.";
> $lang["customers_company_name"] = "Company Name";
> $lang["customers_confirm_delete"] = "Apakah Anda yakin ingin menghapus pelanggan yang dipilih?";
> $lang["customers_customer"] = "Pelanggan";
> $lang["customers_error_adding_updating"] = "Menambah / Memperbarui Pelanggan Salah";
> $lang["customers_new"] = "Pelanggan Baru";
> $lang["customers_none_selected"] = "Anda belum memilih pelanggan untuk dihapus";
> $lang["customers_one_or_multiple"] = "pelanggan";
> $lang["customers_successful_adding"] = "Anda telah berhasil menambah pelanggan";
> $lang["customers_successful_deleted"] = "Anda telah berhasil menghapus pelanggan";
> $lang["customers_successful_updating"] = "Anda telah berhasil memperbarui pelanggan";
> $lang["customers_taxable"] = "Dapat dikenakan pajak";
> $lang["customers_update"] = "Ubah Pelanggan";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/employees_lang.php opensourcepos/application/language/id/employees_lang.php
2,27c2,28
< $lang['employees_employee'] = 'Karyawan';
< $lang['employees_new'] = 'Karyawan Baru';
< $lang['employees_update'] = 'Ubah Karyawan';
< $lang['employees_confirm_delete'] = 'Apakah Anda yakin ingin menghapus karyawan yang dipilih?';
< $lang['employees_none_selected'] = 'Anda belum memilih karyawan untuk menghapus';
< $lang['employees_error_adding_updating'] = 'Kesalahan menambah / memperbarui karyawan';
< $lang['employees_successful_adding'] = 'Anda telah berhasil menambahkan karyawan';
< $lang['employees_successful_updating'] = 'Anda telah berhasil memperbarui karyawan';
< $lang['employees_successful_deleted'] = 'Anda telah berhasil menghapus';
< $lang['employees_one_or_multiple'] = 'Karyawan';
< $lang['employees_cannot_be_deleted'] = 'Karyawan terpilih tidak bisa dihapus; satu atau lebih dari para pekerja telah memproses penjualan atau Anda mencoba untuk menghapus diri Anda sendiri:)';
< $lang['employees_username'] = 'Nama Pengguna';
< $lang['employees_password'] = 'Kata Sandi';
< $lang['employees_repeat_password'] = 'Ulang Kata Sandi';
< $lang['employees_username_required'] = 'Nama Pengguna wajib diisi';
< $lang['employees_username_minlength'] = 'Nama Pengguna minimal 5 huruf';
< $lang['employees_password_required'] = 'Kata Sandi wajib diisi';
< $lang['employees_password_minlength'] = 'Kata Sandi minimal 8 huruf/angka';
< $lang['employees_password_must_match'] = 'Kata Sandi tidak cocok';
< $lang['employees_basic_information'] = 'Informasi Karyawan';
< $lang['employees_login_info'] = 'Info Login Karyawan';
< $lang['employees_permission_info'] = 'Hak Akses Karyawan';
< $lang['employees_permission_desc'] = 'Tandai kotak di bawah ini untuk memberikan akses ke Modul';
< $lang['employees_error_updating_demo_admin'] = 'Anda tidak dapat merubah Demo admin user';
< $lang['employees_error_deleting_demo_admin'] = 'Anda tidak dapat menghapus Demo admin user';
< ?>
---
> 
> $lang["employees_basic_information"] = "Informasi Karyawan";
> $lang["employees_cannot_be_deleted"] = "Karyawan terpilih tidak bisa dihapus; satu atau lebih dari para pekerja telah memproses penjualan atau Anda mencoba untuk menghapus diri Anda sendiri:)";
> $lang["employees_confirm_delete"] = "Apakah Anda yakin ingin menghapus karyawan yang dipilih?";
> $lang["employees_employee"] = "Karyawan";
> $lang["employees_error_adding_updating"] = "Kesalahan menambah / memperbarui karyawan";
> $lang["employees_error_deleting_demo_admin"] = "Anda tidak dapat menghapus Demo admin user";
> $lang["employees_error_updating_demo_admin"] = "Anda tidak dapat merubah Demo admin user";
> $lang["employees_login_info"] = "Info Login Karyawan";
> $lang["employees_new"] = "Karyawan Baru";
> $lang["employees_none_selected"] = "Anda belum memilih karyawan untuk menghapus";
> $lang["employees_one_or_multiple"] = "Karyawan";
> $lang["employees_password"] = "Kata Sandi";
> $lang["employees_password_minlength"] = "Kata Sandi minimal 8 huruf/angka";
> $lang["employees_password_must_match"] = "Kata Sandi tidak cocok";
> $lang["employees_password_required"] = "Kata Sandi wajib diisi";
> $lang["employees_permission_desc"] = "Tandai kotak di bawah ini untuk memberikan akses ke Modul";
> $lang["employees_permission_info"] = "Hak Akses Karyawan";
> $lang["employees_repeat_password"] = "Ulang Kata Sandi";
> $lang["employees_successful_adding"] = "Anda telah berhasil menambahkan karyawan";
> $lang["employees_successful_deleted"] = "Anda telah berhasil menghapus";
> $lang["employees_successful_updating"] = "Anda telah berhasil memperbarui karyawan";
> $lang["employees_update"] = "Ubah Karyawan";
> $lang["employees_username"] = "Nama Pengguna";
> $lang["employees_username_minlength"] = "Nama Pengguna minimal 5 huruf";
> $lang["employees_username_required"] = "Nama Pengguna wajib diisi";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/error_lang.php opensourcepos/application/language/id/error_lang.php
2,4c2,4
< $lang['error_no_permission_module'] = 'Anda tidak memiliki izin untuk mengakses modul ini';
< $lang['error_unknown'] = 'tidak dikenal';
< ?>
---
> 
> $lang["error_no_permission_module"] = "Anda tidak memiliki izin untuk mengakses modul ini";
> $lang["error_unknown"] = "tidak dikenal";
Only in pos-prod/application/language/id: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/giftcards_lang.php opensourcepos/application/language/id/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = 'Nomor GiftCard';
< $lang['giftcards_card_value'] = 'Nilai';
< $lang['giftcards_basic_information'] = 'Informasi GiftCard';
< $lang['giftcards_number_required'] = 'Nomor GiftCard wajib diisi';
< $lang['giftcards_value_required'] = 'Nilai GiftCard wajib diisi';
< $lang['giftcards_number'] = 'Nomor GiftCard harus angka';
< $lang['giftcards_value'] = 'Nilai GiftCard harus angka';
< $lang['giftcards_person_id'] = 'Nomor Pelanggan';
< $lang['giftcards_retrive_giftcard_info'] = 'Informasi GiftCard';
< $lang['giftcards_description'] = 'Deskripsi';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'Database UPC';
< $lang['giftcards_cannot_find_giftcard'] = 'Informasi GiftCard tidak ditemukan';
< $lang['giftcards_info_provided_by'] = 'Informasi disediakan oleh';
< $lang['giftcards_number_information'] = 'Nomor GiftCard';
< $lang['giftcards_new'] = 'GiftCard Baru';
< $lang['giftcards_update'] = 'Ubah GiftCard';
< $lang['giftcards_giftcard'] = 'GiftCard';
< $lang['giftcards_edit_multiple_giftcards'] = 'Ubah beberapa GiftCard';
< $lang['giftcards_category'] = 'Kategori';
< $lang['giftcards_cost_price'] = 'Harga Pokok';
< $lang['giftcards_unit_price'] = 'Harga Jual';
< $lang['giftcards_tax_1'] = 'Pajak 1';
< $lang['giftcards_tax_2'] = 'Pajak 2';
< $lang['giftcards_sales_tax_1'] = 'Pajak Penjualan';
< $lang['giftcards_sales_tax_2'] = 'Pajak Penjualan';
< $lang['giftcards_tax_percent'] = 'Persen Pajak';
< $lang['giftcards_tax_percents'] = 'Persentase Pajak';
< $lang['giftcards_reorder_level'] = 'Level Pesan Ulang';
< $lang['giftcards_quantity'] = 'Jumlah';
< $lang['giftcards_no_giftcards_to_display'] = 'Tidak ada GiftCard yang ditampilkan';
< $lang['giftcards_bulk_edit'] = 'Ubah Massal';
< $lang['giftcards_confirm_delete'] = 'Apakah anda yakin ingin menghapus GiftCard yang dipilih?';
< $lang['giftcards_none_selected'] = 'Anda belum memilih GiftCard untuk diubah';
< $lang['giftcards_confirm_bulk_edit'] = 'Apakah Anda yakin ingin merubah semua GiftCard yang dipilih?';
< $lang['giftcards_successful_bulk_edit'] = 'Anda telah berhasil memperbarui GiftCard yang dipilih';
< $lang['giftcards_error_updating_multiple'] = 'Kesalahan memperbarui GiftCard';
< $lang['giftcards_edit_fields_you_want_to_update'] = 'Ubah bagian yang ingin Anda edit untuk SEMUA GiftCard yang dipilih';
< $lang['giftcards_error_adding_updating'] = 'Kesalahan ketika menambahkan/memperbaharui GiftCard';
< $lang['giftcards_successful_adding'] = 'GiftCard telah berhasil ditambahkan';
< $lang['giftcards_successful_updating'] = 'GiftCard telah berhasil diperbarui';
< $lang['giftcards_successful_deleted'] = 'GiftCard telah berhasil dihapus';
< $lang['giftcards_one_or_multiple'] = 'GiftCard';
< $lang['giftcards_cannot_be_deleted'] = 'Tidak dapat menghapus GiftCard terpilih, Satu atau lebih GiftCard yang dipilih memiliki Penjualan.';
< $lang['giftcards_none'] = 'Tidak Ada';
< $lang['giftcards_supplier'] = 'Supplier';
< $lang['giftcards_generate_barcodes'] = 'Buat Barcode';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'Anda harus memilih minimal 1 GiftCard untuk membuat Barcode';
< $lang['giftcards_excel_import_failed'] = 'Impor dari Excel import tidak berhasil';
< $lang['giftcards_allow_alt_description'] = 'Deskripsi Alternatif dimungkinkan';
< $lang['giftcards_is_serialized'] = 'GiftCard Memiliki Nomor Serial';
< $lang['giftcards_low_inventory_giftcards'] = 'GiftCard Inventori Rendah';
< $lang['giftcards_serialized_giftcards'] = 'Serial GiftCard';
< $lang['giftcards_no_description_giftcards'] = 'Tidak ada Deskripsi Gift Card';
< $lang['giftcards_inventory_comments'] = 'Keterangan';
< $lang['giftcards_count'] = 'Mutasi/Penyesuaian Inventori';
< $lang['giftcards_details_count'] = 'Jumlah Detail Inventori';
< $lang['giftcards_add_minus'] = 'Penyesuaian Inventori TAMBAH / KURANG (-)';
< $lang['giftcards_current_quantity'] = 'Jumlah saat ini';
< $lang['giftcards_quantity_required'] = 'Jumlah wajib diisi. Silahkan tutup ( X ) untuk batal';
< $lang['giftcards_do_nothing'] = 'Tidak ada Perubahan';
< $lang['giftcards_change_all_to_serialized'] = 'Ubah semua menggunakan nomor serial';
< $lang['giftcards_change_all_to_unserialized'] = 'Ubah semua tanpa nomor serial';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Diijinkan Deskripsi Alternatif Untuk Semua';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Tidak Diijinkan Deskripsi Alternatif Untuk Semua';
< $lang['giftcards_use_inventory_menu'] = 'Gunakan Inv. Menu';
< $lang['giftcards_manually_editing_of_quantity'] = 'Perubahan jumlah Stok secara manual';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "Penyesuaian Inventori TAMBAH / KURANG (-)";
> $lang["giftcards_allow_alt_description"] = "Deskripsi Alternatif dimungkinkan";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
> $lang["giftcards_basic_information"] = "Informasi GiftCard";
> $lang["giftcards_bulk_edit"] = "Ubah Massal";
> $lang["giftcards_cannot_be_deleted"] = "Tidak dapat menghapus GiftCard terpilih, Satu atau lebih GiftCard yang dipilih memiliki Penjualan.";
> $lang["giftcards_cannot_find_giftcard"] = "Informasi GiftCard tidak ditemukan";
> $lang["giftcards_card_value"] = "Nilai";
> $lang["giftcards_category"] = "Kategori";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "Diijinkan Deskripsi Alternatif Untuk Semua";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "Tidak Diijinkan Deskripsi Alternatif Untuk Semua";
> $lang["giftcards_change_all_to_serialized"] = "Ubah semua menggunakan nomor serial";
> $lang["giftcards_change_all_to_unserialized"] = "Ubah semua tanpa nomor serial";
> $lang["giftcards_confirm_bulk_edit"] = "Apakah Anda yakin ingin merubah semua GiftCard yang dipilih?";
> $lang["giftcards_confirm_delete"] = "Apakah anda yakin ingin menghapus GiftCard yang dipilih?";
> $lang["giftcards_cost_price"] = "Harga Pokok";
> $lang["giftcards_count"] = "Mutasi/Penyesuaian Inventori";
> $lang["giftcards_current_quantity"] = "Jumlah saat ini";
> $lang["giftcards_description"] = "Deskripsi";
> $lang["giftcards_details_count"] = "Jumlah Detail Inventori";
> $lang["giftcards_do_nothing"] = "Tidak ada Perubahan";
> $lang["giftcards_edit_fields_you_want_to_update"] = "Ubah bagian yang ingin Anda edit untuk SEMUA GiftCard yang dipilih";
> $lang["giftcards_edit_multiple_giftcards"] = "Ubah beberapa GiftCard";
> $lang["giftcards_error_adding_updating"] = "Kesalahan ketika menambahkan/memperbaharui GiftCard";
> $lang["giftcards_error_updating_multiple"] = "Kesalahan memperbarui GiftCard";
> $lang["giftcards_excel_import_failed"] = "Impor dari Excel import tidak berhasil";
> $lang["giftcards_generate_barcodes"] = "Buat Barcode";
> $lang["giftcards_giftcard"] = "GiftCard";
> $lang["giftcards_giftcard_number"] = "Nomor GiftCard";
> $lang["giftcards_info_provided_by"] = "Informasi disediakan oleh";
> $lang["giftcards_inventory_comments"] = "Keterangan";
> $lang["giftcards_is_serialized"] = "GiftCard Memiliki Nomor Serial";
> $lang["giftcards_low_inventory_giftcards"] = "GiftCard Inventori Rendah";
> $lang["giftcards_manually_editing_of_quantity"] = "Perubahan jumlah Stok secara manual";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "Anda harus memilih minimal 1 GiftCard untuk membuat Barcode";
> $lang["giftcards_new"] = "GiftCard Baru";
> $lang["giftcards_no_description_giftcards"] = "Tidak ada Deskripsi Gift Card";
> $lang["giftcards_no_giftcards_to_display"] = "Tidak ada GiftCard yang ditampilkan";
> $lang["giftcards_none"] = "Tidak Ada";
> $lang["giftcards_none_selected"] = "Anda belum memilih GiftCard untuk diubah";
> $lang["giftcards_number"] = "Nomor GiftCard harus angka";
> $lang["giftcards_number_information"] = "Nomor GiftCard";
> $lang["giftcards_number_required"] = "Nomor GiftCard wajib diisi";
> $lang["giftcards_one_or_multiple"] = "GiftCard";
> $lang["giftcards_person_id"] = "Nomor Pelanggan";
> $lang["giftcards_quantity"] = "Jumlah";
> $lang["giftcards_quantity_required"] = "Jumlah wajib diisi. Silahkan tutup ( X ) untuk batal";
> $lang["giftcards_reorder_level"] = "Level Pesan Ulang";
> $lang["giftcards_retrive_giftcard_info"] = "Informasi GiftCard";
> $lang["giftcards_sales_tax_1"] = "Pajak Penjualan";
> $lang["giftcards_sales_tax_2"] = "Pajak Penjualan";
> $lang["giftcards_serialized_giftcards"] = "Serial GiftCard";
> $lang["giftcards_successful_adding"] = "GiftCard telah berhasil ditambahkan";
> $lang["giftcards_successful_bulk_edit"] = "Anda telah berhasil memperbarui GiftCard yang dipilih";
> $lang["giftcards_successful_deleted"] = "GiftCard telah berhasil dihapus";
> $lang["giftcards_successful_updating"] = "GiftCard telah berhasil diperbarui";
> $lang["giftcards_supplier"] = "Supplier";
> $lang["giftcards_tax_1"] = "Pajak 1";
> $lang["giftcards_tax_2"] = "Pajak 2";
> $lang["giftcards_tax_percent"] = "Persen Pajak";
> $lang["giftcards_tax_percents"] = "Persentase Pajak";
> $lang["giftcards_unit_price"] = "Harga Jual";
> $lang["giftcards_upc_database"] = "Database UPC";
> $lang["giftcards_update"] = "Ubah GiftCard";
> $lang["giftcards_use_inventory_menu"] = "Gunakan Inv. Menu";
> $lang["giftcards_value"] = "Nilai GiftCard harus angka";
> $lang["giftcards_value_required"] = "Nilai GiftCard wajib diisi";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/index.html opensourcepos/application/language/id/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/item_kits_lang.php opensourcepos/application/language/id/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = 'Nama Item Paket';
< $lang['item_kits_description'] = 'Deskripsi Item Paket';
< $lang['item_kits_no_item_kits_to_display'] = 'Tidak ada Item Paket yang ditampilkan';
< $lang['item_kits_update'] = 'Ubah Item Paket';
< $lang['item_kits_new'] = 'Item Paket Baru';
< $lang['item_kits_none_selected'] = "Anda belum memilih satupun Item Paket";
< $lang['item_kits_info'] = 'Item Paket Info';
< $lang['item_kits_successful_adding'] = 'Item Paket Baru berhasil ditambahkan';
< $lang['item_kits_successful_updating'] = 'Item Paket berhasil dirubah';
< $lang['item_kits_error_adding_updating'] = 'Tambah/Ubah Item Paket tidak berhasil';
< $lang['item_kits_successful_deleted'] = 'Item Paket berhasil dihapus';
< $lang['item_kits_confirm_delete'] = 'Apakah Anda yakin ingin menghapus Item Paket dipilih?';
< $lang['item_kits_one_or_multiple'] = 'Item Paket';
< $lang['item_kits_cannot_be_deleted'] = 'Item Paket tidak dapat dihapus';
< $lang['item_kits_add_item'] = 'Tambah Item Barang';
< $lang['item_kits_items'] = 'Item Barang';
< $lang['item_kits_item'] = 'Item Barang';
< $lang['item_kits_quantity'] = 'Jumlah';
< ?>
---
> 
> $lang["item_kits_add_item"] = "Tambah Item Barang";
> $lang["item_kits_cannot_be_deleted"] = "Item Paket tidak dapat dihapus";
> $lang["item_kits_confirm_delete"] = "Apakah Anda yakin ingin menghapus Item Paket dipilih?";
> $lang["item_kits_description"] = "Deskripsi Item Paket";
> $lang["item_kits_error_adding_updating"] = "Tambah/Ubah Item Paket tidak berhasil";
> $lang["item_kits_info"] = "Item Paket Info";
> $lang["item_kits_item"] = "Item Barang";
> $lang["item_kits_items"] = "Item Barang";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "Nama Item Paket";
> $lang["item_kits_new"] = "Item Paket Baru";
> $lang["item_kits_no_item_kits_to_display"] = "Tidak ada Item Paket yang ditampilkan";
> $lang["item_kits_none_selected"] = "Anda belum memilih satupun Item Paket";
> $lang["item_kits_one_or_multiple"] = "Item Paket";
> $lang["item_kits_quantity"] = "Jumlah";
> $lang["item_kits_successful_adding"] = "Item Paket Baru berhasil ditambahkan";
> $lang["item_kits_successful_deleted"] = "Item Paket berhasil dihapus";
> $lang["item_kits_successful_updating"] = "Item Paket berhasil dirubah";
> $lang["item_kits_update"] = "Ubah Item Paket";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/items_lang.php opensourcepos/application/language/id/items_lang.php
2,81c2,88
< $lang['items_item_number'] = 'UPC/EAN/ISBN';
< $lang['items_retrive_item_info'] = 'Dapatkan Info Item Barang';
< $lang['items_description'] = 'Deskripsi';
< $lang['items_amazon'] = 'Amazon';
< $lang['items_upc_database'] = 'Database UPC';
< $lang['items_cannot_find_item'] = 'Tidak dapat menemukan informasi apapun tentang item';
< $lang['items_info_provided_by'] = 'Info disediakan oleh';
< $lang['items_basic_information'] = 'Informasi Item';
< $lang['items_number_information'] = 'Nomor Barang';
< $lang['items_new'] = 'Buat Item Baru';
< $lang['items_update'] = 'Ubah';
< $lang['items_item'] = 'Item';
< $lang['items_edit_multiple_items'] = 'Ubah Beberapa Item';
< $lang['items_name'] = 'Nama Barang';
< $lang['items_category'] = 'Kategori';
< $lang['items_cost_price'] = 'Harga Pokok';
< $lang['items_unit_price'] = 'Harga Jual';
< $lang['items_tax_1'] = 'Pajak 1';
< $lang['items_tax_2'] = 'Pajak 2';
< $lang['items_sales_tax_1'] = 'Pajak Penjualan1';
< $lang['items_sales_tax_2'] = 'Pajak Penjualan2';
< $lang['items_tax_percent'] = 'Tarif Pajak';
< $lang['items_tax_percents'] = 'Tarif Pajak';
< $lang['items_reorder_level'] = 'Batas pesan ulang';
< $lang['items_quantity'] = 'Jumlah';
< $lang['items_reorder_level'] = 'Batas pesan ulang';
< $lang['items_no_items_to_display'] = 'Tidak ada item untuk ditampilkan';
< $lang['items_bulk_edit'] = 'Ubah Massal';
< $lang['items_confirm_delete'] = 'Apakah Anda yakin ingin menghapus item yang dipilih?';
< $lang['items_none_selected'] = 'Anda belum memilih item untuk diubah';
< $lang['items_confirm_bulk_edit'] = 'Apakah Anda yakin ingin merubah semua item yang dipilih?';
< $lang['items_successful_bulk_edit'] = 'Anda telah berhasil memperbarui item yang dipilih';
< $lang['items_error_updating_multiple'] = 'Kesalahan ketika memperbarui item';
< $lang['items_edit_fields_you_want_to_update'] = 'Ubah bagian yang ingin Anda edit untuk SEMUA Item yang dipilih';
< $lang['items_error_adding_updating'] = 'Kesalahan ketika menambahkan/memperbarui item';
< $lang['items_successful_adding'] = 'Item Barang telah berhasil ditambahkan';
< $lang['items_successful_updating'] = 'Item Barang telah berhasil diperbarui';
< $lang['items_successful_deleted'] = 'Item Barang telah berhasil dihapus';
< $lang['items_one_or_multiple'] = 'Item Barang';
< $lang['items_cannot_be_deleted'] = 'Tidak dapat menghapus item terpilih, satu atau lebih item yang dipilih memiliki penjualan.';
< $lang['items_name_required'] = 'Nama item wajib diisi';
< $lang['items_category_required'] = 'Kategori wajib diisi';
< $lang['items_buy_price_required'] = 'Harga Beli wajib diisi';
< $lang['items_unit_price_required'] = 'Harga Jual wajib diisi';
< $lang['items_cost_price_required'] = 'Biaya Item wajib diisi';
< $lang['items_tax_percent_required'] = 'Tarif Pajak wajib diisi';
< $lang['items_quantity_required'] = 'Jumlah wajib diisi';
< $lang['items_reorder_level_required'] = 'Batas pesan ulang wajib diisi';
< $lang['items_unit_price_number'] = 'Harga satuan harus angka';
< $lang['items_cost_price_number'] = 'Biaya Item harus angka';
< $lang['items_quantity_number'] = 'Jumlah harus angka';
< $lang['items_reorder_level_number'] = 'Batas pesan ulang harus angka';
< $lang['items_none'] = 'Tidak Ada';
< $lang['items_supplier'] = 'Pemasok';
< $lang['items_generate_barcodes'] = 'Buat Barcode';
< $lang['items_must_select_item_for_barcode'] = 'Anda harus memilih minimal 1 item untuk membuat barcode';
< $lang['items_excel_import_failed'] = 'Impor dari Excel tidak berhasil dilakukan';
< $lang['items_allow_alt_description'] = 'Deskripsi Alternatif dimungkinkan';
< $lang['items_is_serialized'] = 'Item Memiliki Nomor Serial';
< $lang['items_low_inventory_items'] = 'Item Inventori Rendah';
< $lang['items_serialized_items'] = 'Serial Item';
< $lang['items_no_description_items'] = 'Produk/Item tidak ada deskripsi';
< $lang['items_search_custom_items'] = 'Cari secara manual';//GARRISON ADDED
< $lang['items_inventory_comments'] = 'Keterangan';
< $lang['items_count'] = 'Mutasi/Penyesuaian Inventori';
< $lang['items_details_count'] = 'Jumlah Detail Inventori';
< $lang['items_add_minus'] = 'Penyesuaian Inventori TAMBAH / KURANG (-)';
< $lang['items_current_quantity'] = 'Jumlah Saat ini';
< $lang['items_quantity_required'] = 'Jumlah wajib diisi. Silahkan tutup ( X ) untuk batal';
< $lang['items_do_nothing'] = 'Tidak ada Perubahan';
< $lang['items_change_all_to_serialized'] = 'Ubah semua menggunakan nomor serial';
< $lang['items_change_all_to_unserialized'] = 'Ubah semua tanpa nomor serial';
< $lang['items_change_all_to_allow_alt_desc'] = ' Diijinkan Deskripsi alternatif untuk semua';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Tidak Diijinkan Deskripsi alternatif untuk semua';
< $lang['items_use_inventory_menu'] = 'Gunakan Inv. Menu';
< $lang['items_manually_editing_of_quantity'] = 'Perubahan jumlah Stok secara manual';
< $lang['items_inventory'] = 'Inventori';
< $lang['items_location'] = 'Lokasi Barang';
< $lang['items_is_deleted'] = 'Item dihapus';// Parq 131215
< ?>
---
> 
> $lang["items_add_minus"] = "Penyesuaian Inventori TAMBAH / KURANG (-)";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "Deskripsi Alternatif dimungkinkan";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "Informasi Item";
> $lang["items_bulk_edit"] = "Ubah Massal";
> $lang["items_buy_price_required"] = "Harga Beli wajib diisi";
> $lang["items_cannot_be_deleted"] = "Tidak dapat menghapus item terpilih, satu atau lebih item yang dipilih memiliki penjualan.";
> $lang["items_cannot_find_item"] = "Tidak dapat menemukan informasi apapun tentang item";
> $lang["items_category"] = "Kategori";
> $lang["items_category_required"] = "Kategori wajib diisi";
> $lang["items_change_all_to_allow_alt_desc"] = " Diijinkan Deskripsi alternatif untuk semua";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Tidak Diijinkan Deskripsi alternatif untuk semua";
> $lang["items_change_all_to_serialized"] = "Ubah semua menggunakan nomor serial";
> $lang["items_change_all_to_unserialized"] = "Ubah semua tanpa nomor serial";
> $lang["items_confirm_bulk_edit"] = "Apakah Anda yakin ingin merubah semua item yang dipilih?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "Apakah Anda yakin ingin menghapus item yang dipilih?";
> $lang["items_cost_price"] = "Harga Pokok";
> $lang["items_cost_price_number"] = "Biaya Item harus angka";
> $lang["items_cost_price_required"] = "Biaya Item wajib diisi";
> $lang["items_count"] = "Mutasi/Penyesuaian Inventori";
> $lang["items_current_quantity"] = "Jumlah Saat ini";
> $lang["items_description"] = "Deskripsi";
> $lang["items_details_count"] = "Jumlah Detail Inventori";
> $lang["items_do_nothing"] = "Tidak ada Perubahan";
> $lang["items_edit_fields_you_want_to_update"] = "Ubah bagian yang ingin Anda edit untuk SEMUA Item yang dipilih";
> $lang["items_edit_multiple_items"] = "Ubah Beberapa Item";
> $lang["items_error_adding_updating"] = "Kesalahan ketika menambahkan/memperbarui item";
> $lang["items_error_updating_multiple"] = "Kesalahan ketika memperbarui item";
> $lang["items_excel_import_failed"] = "Impor dari Excel tidak berhasil dilakukan";
> $lang["items_generate_barcodes"] = "Buat Barcode";
> $lang["items_image"] = "Avatar";
> $lang["items_info_provided_by"] = "Info disediakan oleh";
> $lang["items_inventory"] = "Inventori";
> $lang["items_inventory_comments"] = "Keterangan";
> $lang["items_is_deleted"] = "Item dihapus";
> $lang["items_is_serialized"] = "Item Memiliki Nomor Serial";
> $lang["items_item"] = "Item";
> $lang["items_item_number"] = "Kode Barang";
> $lang["items_item_number_duplicate"] = "The item number is already present in the database";
> $lang["items_location"] = "Lokasi Barang";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "Daftar Stock Rendah";
> $lang["items_manually_editing_of_quantity"] = "Perubahan jumlah Stok secara manual";
> $lang["items_must_select_item_for_barcode"] = "Anda harus memilih minimal 1 item untuk membuat barcode";
> $lang["items_name"] = "Nama Barang";
> $lang["items_name_required"] = "Nama item wajib diisi";
> $lang["items_new"] = "Buat Item Baru";
> $lang["items_no_description_items"] = "Produk/Item tidak ada deskripsi";
> $lang["items_no_items_to_display"] = "Tidak ada item untuk ditampilkan";
> $lang["items_none"] = "Tidak Ada";
> $lang["items_none_selected"] = "Anda belum memilih item untuk diubah";
> $lang["items_number_information"] = "Nomor Barang";
> $lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
> $lang["items_one_or_multiple"] = "Item Barang";
> $lang["items_quantity"] = "Jumlah";
> $lang["items_quantity_number"] = "Jumlah harus angka";
> $lang["items_quantity_required"] = "Jumlah wajib diisi";
> $lang["items_receiving_quantity"] = "Receiving quantity";
> $lang["items_reorder_level"] = "Batas pesan ulang";
> $lang["items_reorder_level_number"] = "Batas pesan ulang harus angka";
> $lang["items_reorder_level_required"] = "Batas pesan ulang wajib diisi";
> $lang["items_retrive_item_info"] = "Dapatkan Info Item Barang";
> $lang["items_sales_tax_1"] = "Pajak Penjualan1";
> $lang["items_sales_tax_2"] = "Pajak Penjualan2";
> $lang["items_search_custom_items"] = "Cari secara manual";
> $lang["items_serialized_items"] = "Serial Item";
> $lang["items_stock_location"] = "Stock location";
> $lang["items_successful_adding"] = "Item Barang telah berhasil ditambahkan";
> $lang["items_successful_bulk_edit"] = "Anda telah berhasil memperbarui item yang dipilih";
> $lang["items_successful_deleted"] = "Item Barang telah berhasil dihapus";
> $lang["items_successful_updating"] = "Item Barang telah berhasil diperbarui";
> $lang["items_supplier"] = "Pemasok";
> $lang["items_tax_1"] = "Pajak 1";
> $lang["items_tax_2"] = "Pajak 2";
> $lang["items_tax_percent"] = "Tarif Pajak";
> $lang["items_tax_percent_required"] = "Tarif Pajak wajib diisi";
> $lang["items_tax_percents"] = "Tarif Pajak";
> $lang["items_unit_price"] = "Harga Jual";
> $lang["items_unit_price_number"] = "Harga satuan harus angka";
> $lang["items_unit_price_required"] = "Harga Jual wajib diisi";
> $lang["items_upc_database"] = "Database UPC";
> $lang["items_update"] = "Ubah";
> $lang["items_use_inventory_menu"] = "Gunakan Inv. Menu";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/login_lang.php opensourcepos/application/language/id/login_lang.php
2,8c2,8
< $lang['login_login'] = 'Masuk';
< $lang['login_username'] = 'Nama Anda';
< $lang['login_password'] = 'Kata kunci';
< $lang['login_go'] = 'Lanjutkan';
< $lang['login_invalid_username_and_password'] = 'Nama Pengguna/Kata Kunci Salah';
< $lang['login_welcome_message'] = 'SELAMAT DATANG. Silahkan login untuk masuk aplikasi, Isikan Nama Pengguna dan Kata Kunci Anda di bawah ini.';
< ?>
---
> 
> $lang["login_go"] = "Lanjutkan";
> $lang["login_invalid_username_and_password"] = "Nama Pengguna/Kata Kunci Salah";
> $lang["login_login"] = "Masuk";
> $lang["login_password"] = "Kata kunci";
> $lang["login_username"] = "Nama Anda";
> $lang["login_welcome_message"] = "SELAMAT DATANG. Silahkan login untuk masuk aplikasi, Isikan Nama Pengguna dan Kata Kunci Anda di bawah ini.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/module_lang.php opensourcepos/application/language/id/module_lang.php
2d1
< $lang['module_home'] = 'Beranda';
4,34c3,23
< $lang['module_customers'] = 'Pelanggan';
< $lang['module_customers_desc'] = 'Tambah, Rubah, Hapus, dan Cari Pelanggan ';
< 
< $lang['module_suppliers'] = 'Pemasok';
< $lang['module_suppliers_desc'] = 'Tambah, Rubah, Hapus, dan Cari Pemasok';
< 
< $lang['module_employees'] = 'Karyawan';
< $lang['module_employees_desc'] = 'Tambah, Rubah, Hapus, dan Cari Karyawan';
< 
< $lang['module_sales'] = 'Penjualan';
< $lang['module_sales_desc'] = 'Proses Penjualan dan Retur';
< 
< $lang['module_reports'] = 'Laporan';
< $lang['module_reports_desc'] = 'Lihat dan Cetak Laporan';
< 
< $lang['module_items'] = 'Item Barang';
< $lang['module_items_desc'] = 'Tambah, Rubah, Hapus, dan Cari Item Barang';
< 
< $lang['module_config'] = 'Konfigurasi';
< $lang['module_config_desc'] = 'Ubah Konfigurasi Toko';
< 
< $lang['module_receivings'] = 'Penerimaan';
< $lang['module_receivings_desc'] = 'Proses Order Penerimaan Barang Masuk';
< 
< $lang['module_giftcards'] = 'Gift Card';
< $lang['module_giftcards_desc'] = 'Tambah, Rubah, Hapus dan Cari Gift Card';
< 
< $lang['module_item_kits'] = 'Item Paket';
< $lang['module_item_kits_desc'] = 'Tambah, Rubah, Hapus dan Cari Item Paket';
< 
< ?>
---
> $lang["module_config"] = "Konfigurasi";
> $lang["module_config_desc"] = "Ubah Konfigurasi Toko";
> $lang["module_customers"] = "Pelanggan";
> $lang["module_customers_desc"] = "Tambah, Rubah, Hapus, dan Cari Pelanggan ";
> $lang["module_employees"] = "Karyawan";
> $lang["module_employees_desc"] = "Tambah, Rubah, Hapus, dan Cari Karyawan";
> $lang["module_giftcards"] = "Gift Card";
> $lang["module_giftcards_desc"] = "Tambah, Rubah, Hapus dan Cari Gift Card";
> $lang["module_home"] = "Beranda";
> $lang["module_item_kits"] = "Item Paket";
> $lang["module_item_kits_desc"] = "Tambah, Rubah, Hapus dan Cari Item Paket";
> $lang["module_items"] = "Item Barang";
> $lang["module_items_desc"] = "Tambah, Rubah, Hapus, dan Cari Item Barang";
> $lang["module_receivings"] = "Penerimaan";
> $lang["module_receivings_desc"] = "Proses Order Penerimaan Barang Masuk";
> $lang["module_reports"] = "Laporan";
> $lang["module_reports_desc"] = "Lihat dan Cetak Laporan";
> $lang["module_sales"] = "Penjualan";
> $lang["module_sales_desc"] = "Proses Penjualan dan Retur";
> $lang["module_suppliers"] = "Pemasok";
> $lang["module_suppliers_desc"] = "Tambah, Rubah, Hapus, dan Cari Pemasok";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/receivings_lang.php opensourcepos/application/language/id/receivings_lang.php
2,26c2,51
< $lang['recvs_register'] = 'Penerimaan Barang Masuk';
< $lang['recvs_mode'] = 'Jenis Penerimaan';
< $lang['recvs_receiving'] = 'Barang Masuk';
< $lang['recvs_return'] = 'Retur';
< $lang['recvs_total'] = 'Total';
< $lang['recvs_cost'] = 'Harga';
< $lang['recvs_quantity'] = 'Jumlah';
< $lang['recvs_discount'] = 'Diskon %';
< $lang['recvs_edit'] = 'Ubah';
< $lang['recvs_new_supplier'] = 'Pemasok Baru';
< $lang['recvs_supplier'] = 'Pemasok';
< $lang['recvs_select_supplier'] = 'Pilih Pemasok (Opsional)';
< $lang['recvs_start_typing_supplier_name'] = 'Ketik nama pemasok ...';
< $lang['recvs_unable_to_add_item'] = 'Item tidak dapat ditambahkan ke penerimaan barang masuk';
< $lang['recvs_error_editing_item'] = 'Pengubahan Item Salah';
< $lang['recvs_receipt'] = 'Faktur Penerimaan';
< $lang['recvs_complete_receiving'] = 'Selesai';
< $lang['recvs_confirm_finish_receiving'] = 'Apakah anda yakin untuk memproses Penerimaan Barang masuk ini? Proses ini tidak dapat dibatalkan.';
< $lang['recvs_confirm_cancel_receiving'] = 'Apakah anda yakin untuk menghapus Penerimaan Barang masuk ini? Semua item Akan dihapus.';
< $lang['recvs_find_or_scan_item'] = 'Cari/Scan Item';
< $lang['recvs_find_or_scan_item_or_receipt'] = 'Cari/Scan Item ATAU Faktur';
< $lang['recvs_id'] = 'ID Penerimaan';
< $lang['recvs_item_name'] = 'Nama Item';
< $lang['receivings_transaction_failed'] = 'Transaksi Penerimaan Salah';
< ?>
---
> 
> $lang["receivings_transaction_failed"] = "Transaksi Penerimaan Salah";
> $lang["recvs_basic_information"] = "Informasi Penerimaan Barang";
> $lang["recvs_cancel_receiving"] = "Batal";
> $lang["recvs_cannot_be_deleted"] = "Tidak bisa dihapus";
> $lang["recvs_comments"] = "Keterangan";
> $lang["recvs_complete_receiving"] = "Selesai";
> $lang["recvs_confirm_cancel_receiving"] = "Apakah anda yakin untuk menghapus Penerimaan Barang masuk ini? Semua item Akan dihapus.";
> $lang["recvs_confirm_finish_receiving"] = "Apakah anda yakin untuk memproses Penerimaan Barang masuk ini? Proses ini tidak dapat dibatalkan.";
> $lang["recvs_cost"] = "Harga";
> $lang["recvs_date"] = "Tanggal";
> $lang["recvs_date_required"] = "Tanngalnya harus diisi";
> $lang["recvs_date_type"] = "Model Tanggal";
> $lang["recvs_delete_confirmation"] = "Konfirmasi Hapus";
> $lang["recvs_delete_entire_sale"] = "Hapus Semua Penjualan";
> $lang["recvs_discount"] = "Diskon %";
> $lang["recvs_edit"] = "Ubah";
> $lang["recvs_edit_sale"] = "Ubah Penerimaan";
> $lang["recvs_employee"] = "Karyawan";
> $lang["recvs_error_editing_item"] = "Pengubahan Item Salah";
> $lang["recvs_error_requisition"] = "Kesalahan Daftar Permintaan";
> $lang["recvs_find_or_scan_item"] = "Cari/Scan Item";
> $lang["recvs_find_or_scan_item_or_receipt"] = "Cari/Scan Item ATAU Faktur";
> $lang["recvs_id"] = "ID Penerimaan";
> $lang["recvs_invoice_enable"] = "Create Invoice";
> $lang["recvs_invoice_number"] = "Nomer Nota";
> $lang["recvs_invoice_number_duplicate"] = "Nomer Nota Double";
> $lang["recvs_item_name"] = "Nama Item";
> $lang["recvs_mode"] = "Jenis Penerimaan";
> $lang["recvs_new_supplier"] = "Pemasok Baru";
> $lang["recvs_one_or_multiple"] = "Satu Atau Double";
> $lang["recvs_print_after_sale"] = "Cetak Faktur setelah penjualan";
> $lang["recvs_quantity"] = "Jumlah";
> $lang["recvs_receipt"] = "Faktur Penerimaan";
> $lang["recvs_receipt_number"] = "No. Faktur Penerimaan";
> $lang["recvs_receiving"] = "Barang Masuk";
> $lang["recvs_register"] = "Penerimaan Barang Masuk";
> $lang["recvs_requisition"] = "Mutasi Antar Gudang";
> $lang["recvs_return"] = "Retur";
> $lang["recvs_select_supplier"] = "Pilih Pemasok (Opsional)";
> $lang["recvs_start_typing_supplier_name"] = "Ketik nama pemasok ...";
> $lang["recvs_stock_destination"] = "Tujuan Stok";
> $lang["recvs_stock_locaiton"] = "Lokasi Stok";
> $lang["recvs_stock_source"] = "Asal Stok";
> $lang["recvs_successfully_deleted"] = "Berhasil Dihapus";
> $lang["recvs_successfully_updated"] = "Berhasil Diperbaharui";
> $lang["recvs_supplier"] = "Pemasok";
> $lang["recvs_total"] = "Total";
> $lang["recvs_unable_to_add_item"] = "Item tidak dapat ditambahkan ke penerimaan barang masuk";
> $lang["recvs_unsuccessfully_updated"] = "Tidak Berhasil Diperbaharui";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/reports_lang.php opensourcepos/application/language/id/reports_lang.php
2,88c2,108
< $lang['reports_reports'] = 'Lihat dan Cetak Laporan';
< $lang['reports_report'] = 'Laporan';
< $lang['reports_welcome_message'] = 'Selamat Datang ke panel laporan. Silakan pilih laporan untuk melihat/cetak.';
< $lang['reports_sales_summary_report'] = 'Laporan Ringkasan Penjualan';
< $lang['reports_categories_summary_report'] = 'Laporan Ringkasan Kategori';
< $lang['reports_customers_summary_report'] = 'Laporan Ringkasan Pelanggan';
< $lang['reports_suppliers_summary_report'] = 'Laporan Ringkasan Pemasok';
< $lang['reports_items_summary_report'] = 'Laporan Ringkasan Produk/Item';
< $lang['reports_employees_summary_report'] = 'Laporan Ringkasan Karyawan';
< $lang['reports_taxes_summary_report'] = 'Laporan Ringkasan Pajak';
< $lang['reports_date'] = 'Tanggal';
< $lang['reports_name'] = 'Nama';
< $lang['reports_quantity_purchased'] = 'Jumlah Dibeli';
< $lang['reports_sale_id'] = 'ID Penjualan ';
< $lang['reports_items_purchased'] = 'Produk Dibeli';
< $lang['reports_sold_by'] = 'Dijual Oleh';
< $lang['reports_sold_to'] = 'Dijual Kepada';
< $lang['reports_category'] = 'Kategori';
< $lang['reports_customer'] = 'Pelanggan';
< $lang['reports_employee'] = 'Karyawan';
< $lang['reports_item'] = 'Produk/Item';
< $lang['reports_items'] = 'Produk/Item';
< $lang['reports_supplier'] = 'Pemasok';
< $lang['reports_employees'] = 'Karyawan';
< $lang['reports_subtotal'] = 'SubTotal';
< $lang['reports_total'] = 'Total';
< $lang['reports_tax'] = 'Pajak';
< $lang['reports_profit'] = 'Keuntungan/Laba';
< $lang['reports_report_input'] = 'Input data Laporan';
< $lang['reports_type'] = 'Tipe';
< $lang['reports_date_range'] = 'Rentang Tanggal';
< $lang['reports_today'] = 'Hari ini';
< $lang['reports_yesterday'] = 'Kemarin';
< $lang['reports_last_7'] = '7 Hari Terakhir';
< $lang['reports_this_month'] = 'Bulan ini';
< $lang['reports_last_month'] = 'Bulan lalu';
< $lang['reports_this_year'] = 'Tahun ini';
< $lang['reports_last_year'] = 'Tahun lalu';
< $lang['reports_all_time'] = 'Semua Waktu';
< $lang['reports_detailed_sales_report'] = 'Laporan Perincian Penjualan';
< $lang['reports_comments'] = 'Catatan';
< $lang['reports_discount'] = 'Diskon';
< $lang['reports_payment_type'] = 'Tipe Pembayaran';
< $lang['reports_sales'] = 'Penjualan';
< $lang['reports_categories'] = 'Kategori';
< $lang['reports_customers'] = 'Pelanggan';
< $lang['reports_suppliers'] = 'Pemasok';
< $lang['reports_items'] = 'Produk/Item';
< $lang['reports_employees'] = 'Karyawan';
< $lang['reports_taxes'] = 'Pajak';
< $lang['reports_customer'] = 'Pelanggan';
< $lang['reports_employee'] = 'Karyawan';
< $lang['reports_tax_percent'] = 'Persentase Pajak';
< $lang['reports_quantity_purchased'] = 'Jumlah Penjualan';
< $lang['reports_serial_number'] = 'Serial #';
< $lang['reports_description'] = 'Deskripsi';
< $lang['reports_date'] = 'Tanggal';
< $lang['reports_sales_amount'] = 'Jumlah Penjualan';
< $lang['reports_revenue'] = 'Pendapatan';
< $lang['reports_discounts'] = 'Diskon';
< $lang['reports_discounts_summary_report'] = 'Laporan Ringkasan Diskon';
< $lang['reports_discount_percent'] = 'Persen Diskon';
< $lang['reports_count'] = 'Jumlah';
< $lang['reports_summary_reports'] = 'Ringkasan Laporan';
< $lang['reports_graphical_reports'] = 'Laporan Dalam Bentuk Grafis';
< $lang['reports_detailed_reports'] = 'Perincian Laporan';
< $lang['reports_inventory_reports'] = 'Laporan Inventori';
< $lang['reports_low_inventory'] = 'Laporan Inventori Rendah';
< $lang['reports_inventory_summary'] = 'Laporan Ringkasan Inventori';
< $lang['reports_item_number'] = 'Nomor Barang';
< $lang['reports_reorder_level'] = 'Level Pesan Ulang';
< $lang['reports_low_inventory_report'] = 'Laporan Inventori Rendah';
< $lang['reports_item_name'] = 'Nama Barang';
< $lang['reports_inventory_summary_report'] = 'Laporan Ringkasan Inventori';
< $lang['reports_payment_type'] = 'Jenis Pembayaran';
< $lang['reports_payments_summary_report'] = 'Laporan Ringkasan Pembayaran';
< $lang['reports_payments'] = 'Pembayaran';
< $lang['reports_receivings'] = 'Barang Masuk';
< $lang['reports_received_by'] = 'Diterima Oleh';
< $lang['reports_supplied_by'] = 'Pemasok';
< $lang['reports_items_received'] = 'Barang Masuk';
< $lang['reports_detailed_receivings_report'] = 'Laporan Detail Barang Masuk';
< $lang['reports_sale_type'] = 'Jenis Penjualan';
< $lang['reports_all'] = 'Semua';
< $lang['reports_returns'] = 'Retur';
< $lang['reports_discount'] = 'Diskon diatas dari';
< ?>
---
> 
> $lang["reports_all"] = "Semua";
> $lang["reports_all_time"] = "Semua Waktu";
> $lang["reports_categories"] = "Kategori";
> $lang["reports_categories_summary_report"] = "Laporan Ringkasan Kategori";
> $lang["reports_category"] = "Kategori";
> $lang["reports_comments"] = "Catatan";
> $lang["reports_count"] = "Jumlah";
> $lang["reports_customer"] = "Pelanggan";
> $lang["reports_customers"] = "Pelanggan";
> $lang["reports_customers_summary_report"] = "Laporan Ringkasan Pelanggan";
> $lang["reports_date"] = "Tanggal";
> $lang["reports_date_range"] = "Rentang Tanggal";
> $lang["reports_description"] = "Deskripsi";
> $lang["reports_detailed_receivings_report"] = "Laporan Detail Barang Masuk";
> $lang["reports_detailed_reports"] = "Perincian Laporan";
> $lang["reports_detailed_requisition_report"] = "Rincian Daftar Laporan Permintaan";
> $lang["reports_detailed_sales_report"] = "Laporan Perincian Penjualan";
> $lang["reports_discount"] = "Diskon";
> $lang["reports_discount_percent"] = "Persen Diskon";
> $lang["reports_discounts"] = "Diskon";
> $lang["reports_discounts_summary_report"] = "Laporan Ringkasan Diskon";
> $lang["reports_employee"] = "Karyawan";
> $lang["reports_employees"] = "Karyawan";
> $lang["reports_employees_summary_report"] = "Laporan Ringkasan Karyawan";
> $lang["reports_graphical_reports"] = "Laporan Dalam Bentuk Grafis";
> $lang["reports_inventory"] = "Laporan Persediaan";
> $lang["reports_inventory_low"] = "Laporan Persediaan Rendah";
> $lang["reports_inventory_low_report"] = "Laporan Persediaan Rendah";
> $lang["reports_inventory_reports"] = "Laporan Persediaan";
> $lang["reports_inventory_summary"] = "Laporan Ringkasan Persediaan";
> $lang["reports_inventory_summary_report"] = "Laporan Ringkasan Persediaan";
> $lang["reports_item"] = "Produk/Item";
> $lang["reports_item_name"] = "Nama Barang";
> $lang["reports_item_number"] = "Nomor Barang";
> $lang["reports_items"] = "Produk/Item";
> $lang["reports_items_purchased"] = "Produk Dibeli";
> $lang["reports_items_received"] = "Barang Masuk";
> $lang["reports_items_summary_report"] = "Laporan Ringkasan Produk/Item";
> $lang["reports_last_7"] = "7 Hari Terakhir";
> $lang["reports_last_month"] = "Bulan lalu";
> $lang["reports_last_year"] = "Tahun lalu";
> $lang["reports_low_inventory"] = "Kurang Persediaan";
> $lang["reports_low_inventory_report"] = "Laporan Persediaan Kurang";
> $lang["reports_name"] = "Nama";
> $lang["reports_payment_type"] = "Tipe Pembayaran";
> $lang["reports_payments"] = "Pembayaran";
> $lang["reports_payments_summary_report"] = "Laporan Ringkasan Pembayaran";
> $lang["reports_profit"] = "Keuntungan/Laba";
> $lang["reports_cost"] = "";
> $lang["reports_quantity_purchased"] = "Jumlah Dibeli";
> $lang["reports_received_by"] = "Diterima Oleh";
> $lang["reports_receiving_id"] = "Id Penerima";
> $lang["reports_receiving_type"] = "Type Diterima";
> $lang["reports_receivings"] = "Barang Masuk";
> $lang["reports_reorder_level"] = "Level Pesan Ulang";
> $lang["reports_report"] = "Laporan";
> $lang["reports_report_input"] = "Input data Laporan";
> $lang["reports_reports"] = "Lihat dan Cetak Laporan";
> $lang["reports_requisition"] = "Daftar Permintaan";
> $lang["reports_requisition_by"] = "Daftar Permintaan Oleh";
> $lang["reports_requisition_id"] = "Identitas Peminta";
> $lang["reports_requisition_item"] = "Jenis Permintaan";
> $lang["reports_requisition_item_quantity"] = "Jumlah Permintaan";
> $lang["reports_requisition_related_item"] = "";
> $lang["reports_requisition_related_item_total_quantity"] = "Jumlah Item Barang";
> $lang["reports_requisition_related_item_unit_quantity"] = "Unit Item Barang";
> $lang["reports_requisitions"] = "Laporan Permintaan";
> $lang["reports_returns"] = "Retur";
> $lang["reports_revenue"] = "Pendapatan";
> $lang["reports_sale_id"] = "ID Penjualan ";
> $lang["reports_sale_type"] = "Jenis Penjualan";
> $lang["reports_sales"] = "Penjualan";
> $lang["reports_sales_amount"] = "Jumlah Penjualan";
> $lang["reports_sales_summary_report"] = "Laporan Ringkasan Penjualan";
> $lang["reports_serial_number"] = "Serial #";
> $lang["reports_sold_by"] = "Dijual Oleh";
> $lang["reports_sold_to"] = "Dijual Kepada";
> $lang["reports_stock_location"] = "Lokasi Stock";
> $lang["reports_subtotal"] = "SubTotal";
> $lang["reports_summary_reports"] = "Ringkasan Laporan";
> $lang["reports_supplied_by"] = "Pemasok";
> $lang["reports_supplier"] = "Pemasok";
> $lang["reports_suppliers"] = "Pemasok";
> $lang["reports_suppliers_summary_report"] = "Laporan Ringkasan Pemasok";
> $lang["reports_tax"] = "Pajak";
> $lang["reports_tax_percent"] = "Persentase Pajak";
> $lang["reports_taxes"] = "Pajak";
> $lang["reports_taxes_summary_report"] = "Laporan Ringkasan Pajak";
> $lang["reports_this_month"] = "Bulan ini";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "Tahun ini";
> $lang["reports_today"] = "Hari ini";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "Total";
> $lang["reports_type"] = "Tipe";
> $lang["reports_welcome_message"] = "Selamat Datang ke panel laporan. Silakan pilih laporan untuk melihat/cetak.";
> $lang["reports_yesterday"] = "Kemarin";
> $lang["reports_item_count"] = "";
> $lang["reports_cost_price"] = "Harga Pokok";
> $lang["reports_unit_price"] = "Harga Jual";
> $lang["reports_sub_total_value"] = "Sub Total";
> $lang["reports_total_inventory_value"] = "Total Nilai Persediaan";
> $lang["reports_zero_and_less"] = "Stok habis dan minus";
> $lang["reports_more_than_zero"] = "Stok belum habis";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/sales_lang.php opensourcepos/application/language/id/sales_lang.php
2,86c2,117
< $lang['sales_giftcard_number'] = 'Nomor Gift Card';
< $lang['sales_giftcard'] = 'Gift Card';
< $lang['sales_register'] = 'Transaksi Penjualan';
< $lang['sales_mode'] = 'Jenis Transaksi';
< $lang['sales_new_item'] = 'Item Baru';
< $lang['sales_item_name'] = 'Nama Item ';
< $lang['sales_item_number'] = 'Item #';
< $lang['sales_new_customer'] = 'Pelanggan Baru';
< $lang['sales_customer'] = 'Pelanggan';
< $lang['sales_no_items_in_cart'] = 'Tidak ada Item dalam Keranjang Belanja';
< $lang['sales_total'] = 'Total';
< $lang['sales_tax_percent'] = 'Pajak %';
< $lang['sales_price'] = 'Harga';
< $lang['sales_quantity'] = 'Jumlah.';
< $lang['sales_discount'] = 'Diskon %';
< $lang['sales_edit'] = 'Ubah';
< $lang['sales_payment'] = 'Type Pembayaran';
< $lang['sales_edit_item'] = 'Ubah Item';
< $lang['sales_find_or_scan_item'] = 'Cari/Scan Item';
< $lang['sales_find_or_scan_item_or_receipt'] = 'Cari/Scan Item ATAU Faktur';
< $lang['sales_select_customer'] = 'Pilih Pelanggan (Opsional)';
< $lang['sales_start_typing_item_name'] = 'Ketik Nama Barang atau Scan Barcode...';
< $lang['sales_start_typing_customer_name'] = 'Ketik Nama Pelanggan...';
< $lang['sales_sub_total'] = 'Sub Total';
< $lang['sales_tax'] = 'Pajak';
< $lang['sales_comment'] = 'Catatan';
< $lang['sales_unable_to_add_item'] = 'Tidak dapat menambahkan item dengan penjualan';
< $lang['sales_sale_for_customer'] = 'Pelanggan:';
< $lang['sales_remove_customer'] = 'Hapus Pelanggan';
< $lang['sales_error_editing_item'] = 'mengubah item salah';
< $lang['sales_complete_sale'] = 'Entri penjualan';
< $lang['sales_cancel_sale'] = 'Batal Jual';
< $lang['sales_add_payment'] = 'TERIMA';
< $lang['sales_receipt'] = 'Faktur Penjualan';
< $lang['sales_receipt_number']='POS #';
< $lang['sales_id'] = 'ID Penjualan';
< $lang['sales_sale'] = 'Penjualan';
< $lang['sales_return'] = 'Retur';
< $lang['sales_confirm_finish_sale'] = 'Anda yakin ingin melakukan transaksi penjualan ini?  Proses tidak dapat dibatalkan.';
< $lang['sales_confirm_cancel_sale'] = 'Anda yakin ingin membatalkan transaksi penjualan ini?  Semua item akan dihapus.';
< $lang['sales_cash'] = 'Tunai';
< $lang['sales_check'] = 'Cek';
< $lang['sales_debit'] = 'Kartu Debit';
< $lang['sales_credit'] = 'Kartu Credit';
< $lang['sales_giftcard'] = 'Gift Card';
< $lang['sales_amount_tendered'] = 'Nilai Pembayaran';
< $lang['sales_change_due'] = 'Kembalian Uang';
< $lang['sales_payment_not_cover_total'] = 'Jumlah pembayaran tidak mencakup Total';
< $lang['sales_transaction_failed'] = 'Transaksi Penjualan Salah';
< $lang['sales_must_enter_numeric'] = 'Nilai yang dimasukkan harus angka numerik';
< $lang['sales_must_enter_numeric_giftcard'] = 'Nomor Gift Card harus angka numerik';
< $lang['sales_serial'] = 'Serial';
< $lang['sales_description_abbrv'] = 'Deskripsi';
< $lang['sales_item_out_of_stock'] = 'Item tidak ada stok';
< $lang['sales_item_insufficient_of_stock'] = 'Stok Item tidak mencukupi';
< $lang['sales_quantity_less_than_zero'] = 'Peringatan!... Stok Inventori Kosong. Proses penjualan masih dapat dilanjutkan, Periksa Inventori.';
< $lang['sales_successfully_updated'] = 'Penjualan berhasil diperbarui';
< $lang['sales_unsuccessfully_updated'] = 'Penjualan tidak berhasil diperbarui';
< $lang['sales_edit_sale'] = 'Ubah Penjualan';
< $lang['sales_employee'] = 'Karyawan';
< $lang['sales_successfully_deleted'] = 'Transaksi Penjualan berhasil dihapus';
< $lang['sales_unsuccessfully_deleted'] = 'Transaksi Penjualan tidak berhasil dihapus';
< $lang['sales_delete_entire_sale'] = 'Hapus Transaksi Penjualan';
< $lang['sales_delete_confirmation'] = 'Apakah anda yakin ingin menghapus transaksi penjualan ini, Pilihan ini tidak dapat dibatalkan';
< $lang['sales_delete_successful'] = 'Transaksi Penjualan berhasil dihapus';
< $lang['sales_delete_unsuccessful'] = 'Transaksi Penjualan tidak berhasil dihapus';
< $lang['sales_suspend_sale'] = 'Tangguhkan';
< $lang['sales_confirm_suspend_sale'] = 'Apakah anda yakin akan menangguhkan penjualan ini?';
< $lang['sales_suspended_sales'] = 'Penangguhan';
< $lang['sales_suspended_sale_id'] = 'ID Penjualan ditangguhkan';
< $lang['sales_date'] = 'Tanggal';
< $lang['sales_comments'] = 'Keterangan';
< $lang['sales_unsuspend_and_delete'] = 'Batalkan dan hapus penangguhan';
< $lang['sales_unsuspend'] = 'Batal Penangguhan';
< $lang['sales_successfully_suspended_sale'] = 'Penjualan anda telah berhasil ditangguhkan';
< $lang['sales_email_receipt'] = 'e-Mail Faktur';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Diskon';
< $lang['sales_sale_time']='Waktu';
< $lang['sales_payments_total'] = 'Total Pembayaran';
< $lang['sales_amount_due'] = 'Kembalian Uang';
< $lang['sales_payment_type'] = "Type";
< $lang['sales_payment_amount'] = "Amount";
< $lang['sales_basic_information'] = "Sale information";
< ?>
---
> 
> $lang["sales_add_payment"] = "TERIMA";
> $lang["sales_amount_due"] = "Kembalian Uang";
> $lang["sales_amount_tendered"] = "Nilai Pembayaran";
> $lang["sales_basic_information"] = "Sale information";
> $lang["sales_cancel_sale"] = "Batal Jual";
> $lang["sales_cash"] = "Tunai";
> $lang["sales_change_due"] = "Kembalian Uang";
> $lang["sales_check"] = "Cek";
> $lang["sales_check_balance"] = "Check remainder";
> $lang["sales_comment"] = "Catatan";
> $lang["sales_comments"] = "Keterangan";
> $lang["sales_complete_sale"] = "Entri penjualan";
> $lang["sales_confirm_cancel_sale"] = "Anda yakin ingin membatalkan transaksi penjualan ini?  Semua item akan dihapus.";
> $lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
> $lang["sales_confirm_finish_sale"] = "Anda yakin ingin melakukan transaksi penjualan ini?  Proses tidak dapat dibatalkan.";
> $lang["sales_confirm_suspend_sale"] = "Apakah anda yakin akan menangguhkan penjualan ini?";
> $lang["sales_credit"] = "Kartu Credit";
> $lang["sales_customer"] = "Pelanggan";
> $lang["sales_date"] = "Tanggal";
> $lang["sales_date_required"] = "Permintaan Data";
> $lang["sales_date_type"] = "Jenis Data";
> $lang["sales_debit"] = "Kartu Debit";
> $lang["sales_delete_confirmation"] = "Apakah anda yakin ingin menghapus transaksi penjualan ini, Pilihan ini tidak dapat dibatalkan";
> $lang["sales_delete_entire_sale"] = "Hapus Transaksi Penjualan";
> $lang["sales_delete_successful"] = "Transaksi Penjualan berhasil dihapus";
> $lang["sales_delete_unsuccessful"] = "Transaksi Penjualan tidak berhasil dihapus";
> $lang["sales_description_abbrv"] = "Deskripsi";
> $lang["sales_discount"] = "Diskon %";
> $lang["sales_discount_included"] = "% Discount";
> $lang["sales_discount"] = "Discount";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "Ubah";
> $lang["sales_edit_item"] = "Ubah Item";
> $lang["sales_edit_sale"] = "Ubah Penjualan";
> $lang["sales_email_receipt"] = "e-Mail Faktur";
> $lang["sales_employee"] = "Karyawan";
> $lang["sales_error_editing_item"] = "mengubah item salah";
> $lang["sales_find_or_scan_item"] = "Cari/Scan Item";
> $lang["sales_find_or_scan_item_or_receipt"] = "Cari/Scan Item ATAU Faktur";
> $lang["sales_giftcard"] = "Gift Card";
> $lang["sales_giftcard_balance"] = "Giftcard Balance";
> $lang["sales_giftcard_number"] = "Nomor Gift Card";
> $lang["sales_id"] = "ID Penjualan";
> $lang["sales_invoice"] = "Invoice";
> $lang["sales_invoice_confirm"] = "This invoice will be sent to";
> $lang["sales_invoice_enable"] = "Create Invoice";
> $lang["sales_invoice_filter"] = "Invoices";
> $lang["sales_cash_filter"] = "Cash";
> $lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
> $lang["sales_invoice_number"] = "Nomor Nota";
> $lang["sales_invoice_number_duplicate"] = "Nomor Nota Double";
> $lang["sales_invoice_sent"] = "Invoice sent to";
> $lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
> $lang["sales_invoice_update"] = "Recount";
> $lang["sales_item_insufficient_of_stock"] = "Stok Item tidak mencukupi";
> $lang["sales_item_name"] = "Nama Item ";
> $lang["sales_item_number"] = "Item #";
> $lang["sales_item_out_of_stock"] = "Item tidak ada stok";
> $lang["sales_mode"] = "Jenis Transaksi";
> $lang["sales_must_enter_numeric"] = "Nilai yang dimasukkan harus angka numerik";
> $lang["sales_must_enter_numeric_giftcard"] = "Nomor Gift Card harus angka numerik";
> $lang["sales_new_customer"] = "Pelanggan Baru";
> $lang["sales_new_item"] = "Item Baru";
> $lang["sales_no_description"] = "None";
> $lang["sales_no_filter"] = "All";
> $lang["sales_no_items_in_cart"] = "Tidak ada Item dalam Keranjang Belanja";
> $lang["sales_no_sales_to_display"] = "No sales to display";
> $lang["sales_one_or_multiple"] = "";
> $lang["sales_takings"] = "Takings";
> $lang["sales_payment"] = "Type Pembayaran";
> $lang["sales_payment_amount"] = "Amount";
> $lang["sales_payment_not_cover_total"] = "Jumlah pembayaran tidak mencakup Total";
> $lang["sales_payment_type"] = "Type";
> $lang["sales_payments_total"] = "Total Pembayaran";
> $lang["sales_price"] = "Harga";
> $lang["sales_print_after_sale"] = "Cetak Faktur setelah penjualan";
> $lang["sales_quantity"] = "Jumlah.";
> $lang["sales_quantity_less_than_zero"] = "Peringatan!... Stok Inventori Kosong. Proses penjualan masih dapat dilanjutkan, Periksa Inventori.";
> $lang["sales_quantity_less_than_reorder_level"] = "Peringatan!... Stok Inventori Kosong.";
> $lang["sales_receipt"] = "Faktur Penjualan";
> $lang["sales_receipt_number"] = "POS #";
> $lang["sales_register"] = "Transaksi Penjualan";
> $lang["sales_remove_customer"] = "Hapus Pelanggan";
> $lang["sales_return"] = "Retur";
> $lang["sales_sale"] = "Penjualan";
> $lang["sales_sale_for_customer"] = "Pelanggan:";
> $lang["sales_sale_time"] = "Waktu";
> $lang["sales_select_customer"] = "Pilih Pelanggan (Opsional)";
> $lang["sales_send_invoice"] = "Send Invoice";
> $lang["sales_serial"] = "Serial";
> $lang["sales_show_invoice"] = "invoice";
> $lang["sales_show_receipt"] = "receipt";
> $lang["sales_start_typing_customer_name"] = "Ketik Nama Pelanggan...";
> $lang["sales_start_typing_item_name"] = "Ketik Nama Barang atau Scan Barcode...";
> $lang["sales_stock_location"] = "Lokasi Stock";
> $lang["sales_sub_total"] = "Sub Total";
> $lang["sales_successfully_deleted"] = "Transaksi Penjualan berhasil dihapus";
> $lang["sales_successfully_suspended_sale"] = "Penjualan anda telah berhasil ditangguhkan";
> $lang["sales_successfully_updated"] = "Penjualan berhasil diperbarui";
> $lang["sales_suspend_sale"] = "Tangguhkan";
> $lang["sales_suspended_sale_id"] = "ID Penjualan ditangguhkan";
> $lang["sales_suspended_sales"] = "Penangguhan";
> $lang["sales_tax"] = "Pajak";
> $lang["sales_tax_percent"] = "Pajak %";
> $lang["sales_total"] = "Total";
> $lang["sales_total_tax_exclusive"] = "Tax excluded";
> $lang["sales_transaction_failed"] = "Transaksi Penjualan Salah";
> $lang["sales_unable_to_add_item"] = "Tidak dapat menambahkan item dengan penjualan";
> $lang["sales_unsuccessfully_deleted"] = "Transaksi Penjualan tidak berhasil dihapus";
> $lang["sales_unsuccessfully_updated"] = "Penjualan tidak berhasil diperbarui";
> $lang["sales_unsuspend"] = "Batal Penangguhan";
> $lang["sales_unsuspend_and_delete"] = "Batalkan dan hapus penangguhan";
> $lang["sales_update"] = "Edit Sale";
> $lang["sales_date_range"] = "Rentang Tanggal";
> $lang["sales_none_selected"] = "Anda belum memilih item untuk diubah";
diff -rBwi --ignore-file-name-case pos-prod/application/language/id/suppliers_lang.php opensourcepos/application/language/id/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new'] = 'Pemasok Baru';
< $lang['suppliers_supplier'] = 'Pemasok';
< $lang['suppliers_update'] = 'Ubah data Pemasok';
< $lang['suppliers_confirm_delete'] = 'Apakah Anda yakin ingin menghapus pemasok yang dipilih?';
< $lang['suppliers_none_selected'] = 'Anda belum memilih pemasok untuk dihapus';
< $lang['suppliers_error_adding_updating'] = 'Kesalahan Menambah / memperbarui data pemasok';
< $lang['suppliers_successful_adding'] = 'Anda telah berhasil menambahkan data pemasok';
< $lang['suppliers_successful_updating'] = 'Anda telah berhasil memperbarui data pemasok';
< $lang['suppliers_successful_deleted'] = 'Anda telah berhasil menghapus data pemasok';
< $lang['suppliers_one_or_multiple'] = 'Pemasok';
< $lang['suppliers_cannot_be_deleted'] = 'Tidak bisa dihapus pemasok yang dipilih, satu atau lebih dari pemasok yang dipilih memiliki penjualan.';
< $lang['suppliers_basic_information'] = 'Informasi Pemasok ';
< $lang['suppliers_account_number'] = 'Nomor Akun Pemasok';
< $lang['suppliers_company_name'] = 'Nama Perusahaan';
< $lang['suppliers_company_name_required'] = 'Nama Perusahaan wajib diisi';
< ?>
---
> 
> $lang["suppliers_account_number"] = "Nomor Akun Pemasok";
> $lang["suppliers_basic_information"] = "Informasi Pemasok ";
> $lang["suppliers_cannot_be_deleted"] = "Tidak bisa dihapus pemasok yang dipilih, satu atau lebih dari pemasok yang dipilih memiliki penjualan.";
> $lang["suppliers_company_name"] = "Nama Perusahaan";
> $lang["suppliers_company_name_required"] = "Nama Perusahaan wajib diisi";
> $lang["suppliers_agency_name"] = "Nama";
> $lang["suppliers_confirm_delete"] = "Apakah Anda yakin ingin menghapus pemasok yang dipilih?";
> $lang["suppliers_error_adding_updating"] = "Kesalahan Menambah / memperbarui data pemasok";
> $lang["suppliers_new"] = "Pemasok Baru";
> $lang["suppliers_none_selected"] = "Anda belum memilih pemasok untuk dihapus";
> $lang["suppliers_one_or_multiple"] = "Pemasok";
> $lang["suppliers_successful_adding"] = "Anda telah berhasil menambahkan data pemasok";
> $lang["suppliers_successful_deleted"] = "Anda telah berhasil menghapus data pemasok";
> $lang["suppliers_successful_updating"] = "Anda telah berhasil memperbarui data pemasok";
> $lang["suppliers_supplier"] = "Pemasok";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "Ubah data Pemasok";
Only in opensourcepos/application/language: index.html
Only in pos-prod/application/language: indonesia
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/common_lang.php opensourcepos/application/language/nl-BE/common_lang.php
2,41c2,57
< $lang['common_common']='algemeen';
< $lang['common_submit']='Verzend';
< $lang['common_or']='Of';
< $lang['common_powered_by']='Powered by';
< $lang['common_welcome']='Welkom';
< $lang['common_logout']='Logout';
< $lang['common_list_of']='Lijst van';
< $lang['common_first_name']='Voornaam';
< $lang['common_last_name']='Achternaam';
< $lang['common_email']='Email';
< $lang['common_phone_number']='Telefoon';
< $lang['common_address_1']='Adres 1';
< $lang['common_address_2']='Adres 2';
< $lang['common_city']='Stad';
< $lang['common_state']='Provincie';
< $lang['common_zip']='Postcode';
< $lang['common_country']='Land';
< $lang['common_comments']='Commentaar';
< $lang['common_edit']='bewerk';
< $lang['common_search']='Zoek';
< $lang['common_delete']='Verwijder';
< $lang['common_remove']='Verwijder';
< $lang['common_view_recent_sales']='Bekijk recente verkoop';
< $lang['common_you_are_using_ospos']='You are using Open Source Point Of Sale Version';
< $lang['common_please_visit_my']='Bezoek mijn';
< $lang['common_website']='website';
< $lang['common_fields_required_message']='Velden met een * moeten ingevuld worden';
< $lang['common_learn_about_project']='om de laatste informatie te verkrijgen over het project';
< $lang['common_searched_for']='Gezocht op';
< $lang['common_first_name_required']='De voornaam moet ingevuld worden.';
< $lang['common_last_name_required']='De achternaam moet ingevuld worden.';
< $lang['common_email_invalid_format']='Je moet een geldig email adres invullen.';
< $lang['common_confirm_search']='U hebt een of meerdere rijen geselecteerd, deze zullen niet langer geselecteerd zijn na de zoekopdracht. Bent u zeker dat u wil verdergaan?';
< $lang['common_no_persons_to_display']='Er werden geen personen gevonden';
< $lang['common_return_policy']='Retourvoorwaarden';
< $lang['common_price']='Prijs';
< $lang['common_welcome_message']= 'Welkom in PHP Point Of Sale, klik beneden een module aan om te beginnen!';
< $lang['common_inv']='stock';
< $lang['common_det']='details';
< ?>
---
> 
> $lang["common_address_1"] = "Adres 1";
> $lang["common_address_2"] = "Adres 2";
> $lang["common_city"] = "Stad";
> $lang["common_comments"] = "Commentaar";
> $lang["common_common"] = "algemeen";
> $lang["common_confirm_search"] = "U hebt een of meerdere rijen geselecteerd, deze zullen niet langer geselecteerd zijn na de zoekopdracht. Bent u zeker dat u wil verdergaan?";
> $lang["common_country"] = "Land";
> $lang["common_date"] = "Datum";
> $lang["common_delete"] = "Verwijder";
> $lang["common_print"] = "Print";
> $lang["common_det"] = "details";
> $lang["common_edit"] = "bewerk";
> $lang["common_email"] = "Email";
> $lang["common_email_invalid_format"] = "Je moet een geldig email adres invullen.";
> $lang["common_fields_required_message"] = "Velden met een * moeten ingevuld worden";
> $lang["common_first_name"] = "Voornaam";
> $lang["common_first_name_required"] = "De voornaam moet ingevuld worden.";
> $lang["common_first_page"] = "Eerste";
> $lang["common_gender"] = "Geslacht";
> $lang["common_gender_female"] = "V";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "stock";
> $lang["common_last_name"] = "Achternaam";
> $lang["common_last_name_required"] = "De achternaam moet ingevuld worden.";
> $lang["common_last_page"] = "Laatste";
> $lang["common_learn_about_project"] = "om de laatste informatie te verkrijgen over het project";
> $lang["common_list_of"] = "Lijst van";
> $lang["common_logout"] = "Logout";
> $lang["common_new"] = "Nieuw";
> $lang["common_no_persons_to_display"] = "Er werden geen personen gevonden";
> $lang["common_or"] = "Of";
> $lang["common_phone_number"] = "Telefoon";
> $lang["common_phone_number_required"] = "";
> $lang["common_please_visit_my"] = "Bezoek mijn";
> $lang["common_powered_by"] = "Powered by";
> $lang["common_price"] = "Prijs";
> $lang["common_remove"] = "Verwijder";
> $lang["common_return_policy"] = "Retourvoorwaarden";
> $lang["common_search"] = "Zoek";
> $lang["common_search_options"] = "Zoek criteria";
> $lang["common_searched_for"] = "Gezocht op";
> $lang["common_state"] = "Provincie";
> $lang["common_submit"] = "Verzend";
> $lang["common_view_recent_sales"] = "Bekijk recente verkoop";
> $lang["common_website"] = "website";
> $lang["common_welcome"] = "Welkom";
> $lang["common_welcome_message"] = "Welkom in PHP Point Of Sale, klik beneden een module aan om te beginnen!";
> $lang["common_you_are_using_ospos"] = "You are using Open Source Point Of Sale Version";
> $lang["common_zip"] = "Postcode";
> $lang["common_import"] = "Import";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/config_lang.php opensourcepos/application/language/nl-BE/config_lang.php
2,36c2,122
< $lang['config_info'] = 'Configuratie Informatie';
< $lang['config_company'] = 'Bedrijfsnaam';
< $lang['config_address'] = 'Adres';
< $lang['config_phone'] = 'Telefoon';
< $lang['config_website'] = 'Website';
< $lang['config_fax'] = 'Fax';
< $lang['config_default_tax_rate'] = 'Standaard VAT %';
< $lang['config_default_tax_rate_1'] = 'VAT 1 %';
< $lang['config_default_tax_rate_2'] = 'VAT 2 %';
< $lang['config_company_required'] = 'De bedrijfsnaam moet ingevuld worden';
< $lang['config_address_required'] = 'Het adres van het bedrijf moet ingevuld worden';
< $lang['config_phone_required'] = 'De telefoonnummer van het bedrijf moet ingevuld worden';
< $lang['config_default_tax_rate_required'] = 'Het percentage VAT moet ingevuld worden';
< $lang['config_default_tax_rate_number'] = 'Het percentage VAT moet een nummer zijn';
< $lang['config_company_website_url'] = 'De website van het bedrijf is geen geldige URL (http://...)';
< $lang['config_saved_successfully'] = 'Configuratie werd bewaard';
< $lang['config_saved_unsuccessfully'] = 'Configuratie kon niet worden bewaard';
< $lang['config_return_policy_required'] = 'De retourvoorwaarden moeten ingevuld worden';
< $lang['config_print_after_sale'] = 'Druk ticket na verkoop';
< $lang['config_language'] = 'Taal';
< $lang['config_timezone'] = 'Tijdzone';
< $lang['config_currency_symbol'] = 'Valuta';
< $lang['config_currency_side'] = 'Rechterkant'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Custom Veld 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Custom Veld 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Custom Veld 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Custom Veld 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Custom Veld 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Custom Veld 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Custom Veld 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Custom Veld 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Custom Veld 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Custom Veld 10'; //GARRISON ADDED 4/21/2013
< $lang['config_tax_included'] = 'VAT Ingebgrepen';
< ?>
---
> 
> $lang["config_address"] = "Adres";
> $lang["config_address_required"] = "Het adres van het bedrijf moet ingevuld worden";
> $lang["config_backup_button"] = "Backup";
> $lang["config_backup_database"] = "Backup Database";
> $lang["config_barcode_company"] = "Bedrijfsnaam";
> $lang["config_barcode_configuration"] = "Barcode Configuratie";
> $lang["config_barcode_content"] = "Inhoud Barcode";
> $lang["config_barcode_first_row"] = "Rij 1";
> $lang["config_barcode_font"] = "Lettertype";
> $lang["config_barcode_height"] = "Hoogte (px)";
> $lang["config_barcode_id"] = "Product id/naam";
> $lang["config_barcode_info"] = "Barcode instellingen";
> $lang["config_barcode_layout"] = "Barcode Layout";
> $lang["config_barcode_name"] = "Productnaam";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Aantal per rij";
> $lang["config_barcode_page_cellspacing"] = "Toon cellspatiëring";
> $lang["config_barcode_page_width"] = "Toon paginabreedte";
> $lang["config_barcode_price"] = "Prijs";
> $lang["config_barcode_quality"] = "Kwaliteit (1-100)";
> $lang["config_barcode_second_row"] = "Rij 2";
> $lang["config_barcode_third_row"] = "Rij 3";
> $lang["config_barcode_type"] = "Barcode Type";
> $lang["config_barcode_width"] = "Breedte (px)";
> $lang["config_barcode_generate_if_empty"] = "Genereer indien leeg";
> $lang["config_company"] = "Bedrijfsnaam";
> $lang["config_company_logo"] = "Logo";
> $lang["config_company_required"] = "De bedrijfsnaam moet ingevuld worden";
> $lang["config_company_website_url"] = "De website van het bedrijf is geen geldige URL (http://...)";
> $lang["config_currency_side"] = "Rechterkant";
> $lang["config_currency_symbol"] = "Valuta";
> $lang["config_custom1"] = "Custom Veld 1";
> $lang["config_custom10"] = "Custom Veld 10";
> $lang["config_custom2"] = "Custom Veld 2";
> $lang["config_custom3"] = "Custom Veld 3";
> $lang["config_custom4"] = "Custom Veld 4";
> $lang["config_custom5"] = "Custom Veld 5";
> $lang["config_custom6"] = "Custom Veld 6";
> $lang["config_custom7"] = "Custom Veld 7";
> $lang["config_custom8"] = "Custom Veld 8";
> $lang["config_custom9"] = "Custom Veld 9";
> $lang["config_decimal_point"] = "Decimal Point";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Standaard Korting %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "Standaard VAT %";
> $lang["config_default_tax_rate_1"] = "VAT 1 %";
> $lang["config_default_tax_rate_2"] = "VAT 2 %";
> $lang["config_default_tax_rate_number"] = "Het percentage VAT moet een nummer zijn";
> $lang["config_default_tax_rate_required"] = "Het percentage VAT moet ingevuld worden";
> $lang["config_fax"] = "Fax";
> $lang["config_general_configuration"] = "Algemene Instellingen";
> $lang["config_info"] = "Systeeminstellingen";
> $lang["config_invoice_default_comments"] = "Factuur Mededeling";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Factuur Printer";
> $lang["config_jsprintsetup_required"] = "Opgelet! De uitgeschakelde functionaliteit werkt enkel met de jsPrintSetup addon in Firefox.";
> $lang["config_language"] = "Taal";
> $lang["config_lines_per_page"] = "Lijnen Per Pagina";
> $lang["config_lines_per_page_number"] = "The lines per page must be a number";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locaties";
> $lang["config_location_info"] = "Instellingen Locatie";
> $lang["config_logout"] = "Wilt u een backup maken alvorens uit te loggen?";
> $lang["config_number_format"] = "Number Format";
> $lang["config_phone"] = "Telefoon";
> $lang["config_phone_required"] = "De telefoonnummer van het bedrijf moet ingevuld worden";
> $lang["config_print_bottom_margin"] = "Marge Beneden";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Marge Links";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Marge Rechts";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Toon Printvenster";
> $lang["config_print_top_margin"] = "Marge Boven";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Instellingen";
> $lang["config_receipt_info"] = "Ticket Instellingen";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Toon VAT";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "Formattering Order #";
> $lang["config_return_policy_required"] = "De retourvoorwaarden moeten ingevuld worden";
> $lang["config_sales_invoice_format"] = "Formattering Aankoop #";
> $lang["config_saved_successfully"] = "Configuratie werd bewaard";
> $lang["config_saved_unsuccessfully"] = "Configuratie kon niet worden bewaard";
> $lang["config_show_total_discount"] = "Toon Totale Korting";
> $lang["config_stock_location"] = "Stock locatie";
> $lang["config_stock_location_duplicate"] = "Vul een unieke naam in";
> $lang["config_stock_location_invalid_chars"] = "De bedrijfsnaam moet ingevuld worden";
> $lang["config_stock_location_required"] = "Naam van de stock locatie is een verplicht veld";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "VAT Inbegrepen";
> $lang["config_thousands_separator"] = "Thousands Separator";
> $lang["config_timezone"] = "Tijdzone";
> $lang["config_use_invoice_template"] = "Gebruik template voor facturen";
> $lang["config_website"] = "Website";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/customers_lang.php opensourcepos/application/language/nl-BE/customers_lang.php
2,16c2,19
< $lang['customers_new']='Nieuwe Klant';
< $lang['customers_customer']='Klant';
< $lang['customers_update']='Bewerk Klant';
< $lang['customers_confirm_delete']='Bent u zeker dat u de geselecteerde klanten wil verwijderen?';
< $lang['customers_none_selected']='U hebt geen klanten geselecteerd';
< $lang['customers_error_adding_updating'] = 'Fout bij het toevoegen/bewerken van een klant';
< $lang['customers_successful_adding']='Klant succesvol aangemaakt';
< $lang['customers_successful_updating']='Wijzigingen klantgegevens bewaard voor ';
< $lang['customers_successful_deleted']='Er werd(en)';
< $lang['customers_one_or_multiple']='klant(en) verwijderd';
< $lang['customers_cannot_be_deleted']='De geselecteerde klanten konden niet worden verwijderd. Eén of meerdere klanten hebben verkoopsgegevens in de database zitten.';
< $lang['customers_basic_information']='Klantgegevens';
< $lang['customers_account_number']='Btwnummer';
< $lang['customers_taxable']='Belastbaar';
< ?>
---
> 
> $lang["customers_account_number"] = "Btwnummer";
> $lang["customers_account_number_duplicate"] = "Deze VAT nummer is reeds aanwezig in de database";
> $lang["customers_basic_information"] = "Klantgegevens";
> $lang["customers_cannot_be_deleted"] = "De geselecteerde klanten konden niet worden verwijderd. Eén of meerdere klanten hebben verkoopsgegevens in de database zitten.";
> $lang["customers_company_name"] = "Bedrijfsnaam";
> $lang["customers_confirm_delete"] = "Bent u zeker dat u de geselecteerde klanten wil verwijderen?";
> $lang["customers_customer"] = "Klant";
> $lang["customers_error_adding_updating"] = "Fout bij het toevoegen/bewerken van een klant";
> $lang["customers_new"] = "Nieuwe Klant";
> $lang["customers_none_selected"] = "U hebt geen klanten geselecteerd";
> $lang["customers_one_or_multiple"] = "klant(en) verwijderd";
> $lang["customers_successful_adding"] = "Klant succesvol aangemaakt";
> $lang["customers_successful_deleted"] = "Er werd(en)";
> $lang["customers_successful_updating"] = "Wijzigingen klantgegevens bewaard voor ";
> $lang["customers_taxable"] = "Belastbaar";
> $lang["customers_update"] = "Bewerk Klant";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/employees_lang.php opensourcepos/application/language/nl-BE/employees_lang.php
2,27c2,28
< $lang['employees_employee']='Werknemer';
< $lang['employees_new']='N. Werknemer';
< $lang['employees_update']='Update Werknemer';
< $lang['employees_confirm_delete']='Bent u zeker dat u de geselecteerde werknemers wil verwijderen?';
< $lang['employees_none_selected']='U hebt geen werknemers geselecteerd';
< $lang['employees_error_adding_updating'] = 'Error adding/updating employee';
< $lang['employees_successful_adding']='You have successfully added employee';
< $lang['employees_successful_updating']='You have successfully updated employee';
< $lang['employees_successful_deleted']='Er werd(en)';
< $lang['employees_one_or_multiple']='werknemer(s) verwijderd';
< $lang['employees_cannot_be_deleted']='Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
< $lang['employees_username']='Gebruikersnaam';
< $lang['employees_password']='Paswoord';
< $lang['employees_repeat_password']='Herhaal Paswoord';
< $lang['employees_username_required']='Gebruikersnaam moet ingevuld worden';
< $lang['employees_username_minlength']='Gebruikersnaam moet minstens 5 characters lang zijn';
< $lang['employees_password_required']='Paswoord moet ingevuld worden';
< $lang['employees_password_minlength']='Paswoord moet minstens 8 characters lang zijn';
< $lang['employees_password_must_match']='Paswoorden komen niet overeen';
< $lang['employees_basic_information']='Employee Basic Information';
< $lang['employees_login_info']='Employee Login Info';
< $lang['employees_permission_info']='Employee Permissions and Access';
< $lang['employees_permission_desc']='Check the boxes below to grant access to modules';
< $lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
< $lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
< ?>
---
> 
> $lang["employees_basic_information"] = "Employee Basic Information";
> $lang["employees_cannot_be_deleted"] = "Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)";
> $lang["employees_confirm_delete"] = "Bent u zeker dat u de geselecteerde werknemers wil verwijderen?";
> $lang["employees_employee"] = "Werknemer";
> $lang["employees_error_adding_updating"] = "Error adding/updating employee";
> $lang["employees_error_deleting_demo_admin"] = "You can not delete the demo admin user";
> $lang["employees_error_updating_demo_admin"] = "You can not change the demo admin user";
> $lang["employees_login_info"] = "Employee Login Info";
> $lang["employees_new"] = "N. Werknemer";
> $lang["employees_none_selected"] = "U hebt geen werknemers geselecteerd";
> $lang["employees_one_or_multiple"] = "werknemer(s) verwijderd";
> $lang["employees_password"] = "Paswoord";
> $lang["employees_password_minlength"] = "Paswoord moet minstens 8 characters lang zijn";
> $lang["employees_password_must_match"] = "Paswoorden komen niet overeen";
> $lang["employees_password_required"] = "Paswoord moet ingevuld worden";
> $lang["employees_permission_desc"] = "Check the boxes below to grant access to modules";
> $lang["employees_permission_info"] = "Employee Permissions and Access";
> $lang["employees_repeat_password"] = "Herhaal Paswoord";
> $lang["employees_successful_adding"] = "You have successfully added employee";
> $lang["employees_successful_deleted"] = "Er werd(en)";
> $lang["employees_successful_updating"] = "You have successfully updated employee";
> $lang["employees_update"] = "Update Werknemer";
> $lang["employees_username"] = "Gebruikersnaam";
> $lang["employees_username_minlength"] = "Gebruikersnaam moet minstens 5 characters lang zijn";
> $lang["employees_username_required"] = "Gebruikersnaam moet ingevuld worden";
> $lang["employees_subpermission_required"] = "Selecteer minstens één permissie voor elke module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/error_lang.php opensourcepos/application/language/nl-BE/error_lang.php
2,4c2,4
< $lang['error_no_permission_module']='U hebt geen toegang tot de module genaamd ';
< $lang['error_unknown']='onbekend';
< ?>
---
> 
> $lang["error_no_permission_module"] = "U hebt geen toegang tot de module genaamd ";
> $lang["error_unknown"] = "onbekend";
Only in pos-prod/application/language/nl-BE: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/giftcards_lang.php opensourcepos/application/language/nl-BE/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = 'Cadeaubon Nummer';
< $lang['giftcards_card_value'] = 'Waarde';
< $lang['giftcards_basic_information'] = 'Cadeaubon Info';
< $lang['giftcards_number_required'] = 'Cadeaubon Nummer is een verplicht veld';
< $lang['giftcards_value_required'] = 'Cadeaubon Waarde is een verplicht veld';
< $lang['giftcards_number'] = 'Cadeaubon Nummer moet een getal zijn';
< $lang['giftcards_value'] = 'Cadeaubon Waarde moet een getal zijn';
< $lang['giftcards_person_id'] = 'Klant';
< $lang['giftcards_retrive_giftcard_info'] = 'Haal Info Op';
< $lang['giftcards_description'] = 'Omschrijving';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'UPC Database';
< $lang['giftcards_cannot_find_giftcard'] = 'Kan geen cadeaubon niet vinden';
< $lang['giftcards_info_provided_by'] = 'Info afgeleverd door';
< $lang['giftcards_number_information'] = 'Cadeaubon Nummer';
< $lang['giftcards_new'] = 'N. Cadeaubon';
< $lang['giftcards_update'] = 'Bewaar Cadeaubon';
< $lang['giftcards_giftcard'] = 'Cadeaubon';
< $lang['giftcards_edit_multiple_giftcards'] = 'Bewerk meedere cadeaubons';
< $lang['giftcards_category'] = 'Categorie';
< $lang['giftcards_cost_price'] = 'Aankoopprijs';
< $lang['giftcards_unit_price'] = 'Verkoopsprijs';
< $lang['giftcards_tax_1'] = 'VAT';
< $lang['giftcards_tax_2'] = 'VAT 2';
< $lang['giftcards_sales_tax_1'] = 'VAT';
< $lang['giftcards_sales_tax_2'] = 'VAT 2';
< $lang['giftcards_tax_percent'] = 'VAT %';
< $lang['giftcards_tax_percents'] = 'VAT Percentages';
< $lang['giftcards_reorder_level'] = 'Reorder Level';
< $lang['giftcards_quantity'] = 'In stock';
< $lang['giftcards_no_giftcards_to_display'] = 'Er werden geen cadeaubons gevonden';
< $lang['giftcards_bulk_edit'] = 'Bewerk Selectie';
< $lang['giftcards_confirm_delete'] = 'Bent u zeker dat u de geselecteerde cadeaubons wil verwijderen?';
< $lang['giftcards_none_selected'] = 'U hebt geen cadeaubons geselecteerd';
< $lang['giftcards_confirm_bulk_edit'] = 'Bent u zeker dat u de geselecteerde cadeaubons wil aanpassen?';
< $lang['giftcards_successful_bulk_edit'] = 'Cadeaubons werden succesvol bewaard';
< $lang['giftcards_error_updating_multiple'] = 'Fout bij het bewaren van cadeaubons';
< $lang['giftcards_edit_fields_you_want_to_update'] = 'Bewerk de velden die u wil aanpassen voor ALLE geselecteerde cadeaubons';
< $lang['giftcards_error_adding_updating'] = 'Fout bij het bewaren van cadeaubons';
< $lang['giftcards_successful_adding'] = 'Cadeaubon succesvol toegevoegd';
< $lang['giftcards_successful_updating'] = 'Wijzigingen bewaard voor';
< $lang['giftcards_successful_deleted'] = 'Er werd(en)';
< $lang['giftcards_one_or_multiple'] = 'cadeaubon(s) verwijderd';
< $lang['giftcards_cannot_be_deleted'] = 'De cadeaubons konden niet worden verwijderd.';
< $lang['giftcards_none'] = 'Geen';
< $lang['giftcards_supplier'] = 'Leverancier';
< $lang['giftcards_generate_barcodes'] = 'Genereer Barcodes';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'U moet tenminste 1 cadeuabon selecteren om een barcode te genereren';
< $lang['giftcards_excel_import_failed'] = 'Excel import mislukt';
< $lang['giftcards_allow_alt_description'] = 'Aanpasbare omschrijving';
< $lang['giftcards_is_serialized'] = 'Optelbaar';
< $lang['giftcards_low_inventory_giftcards'] = 'Cadeaubons niet in stock';
< $lang['giftcards_serialized_giftcards'] = 'Optelbare cadeaubons';
< $lang['giftcards_no_description_giftcards'] = 'Cadeaubons zonder omschrijving';
< $lang['giftcards_inventory_comments'] = 'Commentaar';
< $lang['giftcards_count'] = 'Update Stock';
< $lang['giftcards_details_count'] = 'Stockgegevens';
< $lang['giftcards_add_minus'] = 'Corrigatie hoeveelheid';
< $lang['giftcards_current_quantity'] = 'Huidige hoeveelheid';
< $lang['giftcards_quantity_required'] = 'Hoeveelheid moet ingevuld worden. Druk Sluit ( X ) om te annuleren';
< $lang['giftcards_do_nothing'] = 'Doe niets';
< $lang['giftcards_change_all_to_serialized'] = 'Genummerd';
< $lang['giftcards_change_all_to_unserialized'] = 'Niet genummerd';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Aanpasb. omschrijvingen';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Vast omschrijvingen';
< $lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
< $lang['giftcards_manually_editing_of_quantity'] = 'Manuele aanpassing hoeveelheid';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "Corrigatie hoeveelheid";
> $lang["giftcards_allow_alt_description"] = "Aanpasbare omschrijving";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Resterende waarde cadeaubon %1 is %2!";
> $lang["giftcards_basic_information"] = "Cadeaubon Info";
> $lang["giftcards_bulk_edit"] = "Bewerk Selectie";
> $lang["giftcards_cannot_be_deleted"] = "De cadeaubons konden niet worden verwijderd.";
> $lang["giftcards_cannot_find_giftcard"] = "Kan geen cadeaubon niet vinden";
> $lang["giftcards_card_value"] = "Waarde";
> $lang["giftcards_category"] = "Categorie";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "Aanpasb. omschrijvingen";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "Vast omschrijvingen";
> $lang["giftcards_change_all_to_serialized"] = "Genummerd";
> $lang["giftcards_change_all_to_unserialized"] = "Niet genummerd";
> $lang["giftcards_confirm_bulk_edit"] = "Bent u zeker dat u de geselecteerde cadeaubons wil aanpassen?";
> $lang["giftcards_confirm_delete"] = "Bent u zeker dat u de geselecteerde cadeaubons wil verwijderen?";
> $lang["giftcards_cost_price"] = "Aankoopprijs";
> $lang["giftcards_count"] = "Update Stock";
> $lang["giftcards_current_quantity"] = "Huidige hoeveelheid";
> $lang["giftcards_description"] = "Omschrijving";
> $lang["giftcards_details_count"] = "Stockgegevens";
> $lang["giftcards_do_nothing"] = "Doe niets";
> $lang["giftcards_edit_fields_you_want_to_update"] = "Bewerk de velden die u wil aanpassen voor ALLE geselecteerde cadeaubons";
> $lang["giftcards_edit_multiple_giftcards"] = "Bewerk meedere cadeaubons";
> $lang["giftcards_error_adding_updating"] = "Fout bij het bewaren van cadeaubons";
> $lang["giftcards_error_updating_multiple"] = "Fout bij het bewaren van cadeaubons";
> $lang["giftcards_excel_import_failed"] = "Excel import mislukt";
> $lang["giftcards_generate_barcodes"] = "Genereer Barcodes";
> $lang["giftcards_giftcard"] = "Cadeaubon";
> $lang["giftcards_giftcard_number"] = "Cadeaubon Nummer";
> $lang["giftcards_info_provided_by"] = "Info afgeleverd door";
> $lang["giftcards_inventory_comments"] = "Commentaar";
> $lang["giftcards_is_serialized"] = "Optelbaar";
> $lang["giftcards_low_inventory_giftcards"] = "Cadeaubons niet in stock";
> $lang["giftcards_manually_editing_of_quantity"] = "Manuele aanpassing hoeveelheid";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "U moet tenminste 1 cadeuabon selecteren om een barcode te genereren";
> $lang["giftcards_new"] = "N. Cadeaubon";
> $lang["giftcards_no_description_giftcards"] = "Cadeaubons zonder omschrijving";
> $lang["giftcards_no_giftcards_to_display"] = "Er werden geen cadeaubons gevonden";
> $lang["giftcards_none"] = "Geen";
> $lang["giftcards_none_selected"] = "U hebt geen cadeaubons geselecteerd";
> $lang["giftcards_number"] = "Cadeaubon Nummer moet een getal zijn";
> $lang["giftcards_number_information"] = "Cadeaubon Nummer";
> $lang["giftcards_number_required"] = "Cadeaubon Nummer is een verplicht veld";
> $lang["giftcards_one_or_multiple"] = "cadeaubon(s) verwijderd";
> $lang["giftcards_person_id"] = "Klant";
> $lang["giftcards_quantity"] = "In stock";
> $lang["giftcards_quantity_required"] = "Hoeveelheid moet ingevuld worden. Druk Sluit ( X ) om te annuleren";
> $lang["giftcards_reorder_level"] = "Reorder Level";
> $lang["giftcards_retrive_giftcard_info"] = "Haal Info Op";
> $lang["giftcards_sales_tax_1"] = "VAT";
> $lang["giftcards_sales_tax_2"] = "VAT 2";
> $lang["giftcards_serialized_giftcards"] = "Optelbare cadeaubons";
> $lang["giftcards_successful_adding"] = "Cadeaubon succesvol toegevoegd";
> $lang["giftcards_successful_bulk_edit"] = "Cadeaubons werden succesvol bewaard";
> $lang["giftcards_successful_deleted"] = "Er werd(en)";
> $lang["giftcards_successful_updating"] = "Wijzigingen bewaard voor";
> $lang["giftcards_supplier"] = "Leverancier";
> $lang["giftcards_tax_1"] = "VAT";
> $lang["giftcards_tax_2"] = "VAT 2";
> $lang["giftcards_tax_percent"] = "VAT %";
> $lang["giftcards_tax_percents"] = "VAT Percentages";
> $lang["giftcards_unit_price"] = "Verkoopsprijs";
> $lang["giftcards_upc_database"] = "UPC Database";
> $lang["giftcards_update"] = "Bewaar Cadeaubon";
> $lang["giftcards_use_inventory_menu"] = "Use Inv. Menu";
> $lang["giftcards_value"] = "Cadeaubon Waarde moet een getal zijn";
> $lang["giftcards_value_required"] = "Cadeaubon Waarde is een verplicht veld";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/index.html opensourcepos/application/language/nl-BE/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/item_kits_lang.php opensourcepos/application/language/nl-BE/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = 'Naam';
< $lang['item_kits_description'] = 'Omschrijving';
< $lang['item_kits_no_item_kits_to_display'] = 'Geen sets gevonden';
< $lang['item_kits_update'] = 'Bewaar Set';
< $lang['item_kits_new'] = 'Nieuwe Set';
< $lang['item_kits_none_selected'] = "U hebt geen sets geselecteerd";
< $lang['item_kits_info'] = 'Product Set Info';
< $lang['item_kits_successful_adding'] = 'Product set succesvol toegevoegd';
< $lang['item_kits_successful_updating'] = 'Wijzigingen product set bewaard';
< $lang['item_kits_error_adding_updating'] = 'Fout bij het toevoegen/aanpassen van een set';
< $lang['item_kits_successful_deleted'] = 'Er werd(en)';
< $lang['item_kits_confirm_delete'] = 'Bent u zeker dat u de geselecteerde sets wil verwijderen?';
< $lang['item_kits_one_or_multiple'] = 'Product set(s) verwijderd';
< $lang['item_kits_cannot_be_deleted'] = 'De sets konden niet worden verwijderd';
< $lang['item_kits_add_item'] = 'Nieuw Product';
< $lang['item_kits_items'] = 'Producten';
< $lang['item_kits_item'] = 'Product';
< $lang['item_kits_quantity'] = 'In stock';
< ?>
---
> 
> $lang["item_kits_add_item"] = "Nieuw Product";
> $lang["item_kits_cannot_be_deleted"] = "De sets konden niet worden verwijderd";
> $lang["item_kits_confirm_delete"] = "Bent u zeker dat u de geselecteerde sets wil verwijderen?";
> $lang["item_kits_description"] = "Omschrijving";
> $lang["item_kits_error_adding_updating"] = "Fout bij het toevoegen/aanpassen van een set";
> $lang["item_kits_info"] = "Product Set Info";
> $lang["item_kits_item"] = "Product";
> $lang["item_kits_items"] = "Producten";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "Naam";
> $lang["item_kits_new"] = "Nieuwe Set";
> $lang["item_kits_no_item_kits_to_display"] = "Geen sets gevonden";
> $lang["item_kits_none_selected"] = "U hebt geen sets geselecteerd";
> $lang["item_kits_one_or_multiple"] = "Product set(s) verwijderd";
> $lang["item_kits_quantity"] = "In stock";
> $lang["item_kits_successful_adding"] = "Product set succesvol toegevoegd";
> $lang["item_kits_successful_deleted"] = "Er werd(en)";
> $lang["item_kits_successful_updating"] = "Wijzigingen product set bewaard";
> $lang["item_kits_update"] = "Bewaar Set";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/items_lang.php opensourcepos/application/language/nl-BE/items_lang.php
2,81c2,88
< $lang['items_item_number'] = 'UPC/EAN/ISBN';
< $lang['items_retrive_item_info'] = 'Haal productinformatie op';
< $lang['items_description'] = 'Omschrijving';
< $lang['items_amazon'] = 'Amazon';
< $lang['items_upc_database'] = 'UPC Database';
< $lang['items_cannot_find_item'] = 'Er werd geen informatie gevonden omtrent product';
< $lang['items_info_provided_by'] = 'Info provided by';
< $lang['items_basic_information'] = 'Productinformatie';
< $lang['items_number_information'] = 'Productnummer';
< $lang['items_new'] = 'Nieuw Product';
< $lang['items_update'] = 'Bewerk Product';
< $lang['items_item'] = 'Product';
< $lang['items_edit_multiple_items'] = 'Meerdere Producten Bewerken';
< $lang['items_name'] = 'Productnaam';
< $lang['items_category'] = 'Categorie';
< $lang['items_cost_price'] = 'Aankoopprijs';
< $lang['items_unit_price'] = 'Verkoopprijs';
< $lang['items_tax_1'] = 'VAT';
< $lang['items_tax_2'] = 'VAT 2';
< $lang['items_sales_tax_1'] = 'VAT';
< $lang['items_sales_tax_2'] = 'VAT 2';
< $lang['items_tax_percent'] = 'VAT %';
< $lang['items_tax_percents'] = 'VAT';
< $lang['items_reorder_level'] = 'Reorder Level';
< $lang['items_quantity'] = 'Stock';
< $lang['items_reorder_level'] = 'Reorder Level';
< $lang['items_no_items_to_display'] = 'Er werden geen producten gevonden';
< $lang['items_bulk_edit'] = 'Bewerk Selectie';
< $lang['items_confirm_delete'] = 'Bent u zeker dat u de geselecteerde producten wil verwijderen?';
< $lang['items_none_selected'] = 'U hebt geen producten geselecteerd';
< $lang['items_confirm_bulk_edit'] = 'Bent u zeker dat u de geselecteerde producten wil aanpassen?';
< $lang['items_successful_bulk_edit'] = 'Producten werden succesvol bewaard';
< $lang['items_error_updating_multiple'] = 'Fout bij het bewaren van producten';
< $lang['items_edit_fields_you_want_to_update'] = 'Bewerk de velden aan die u wil aanpassen voor ALLE geselecteerde producten';
< $lang['items_error_adding_updating'] = 'Fout bij het toevoegen/aanpassen van een product';
< $lang['items_successful_adding'] = 'Product succesvol toegevoegd';
< $lang['items_successful_updating'] = 'Wijzigingen bewaard voor';
< $lang['items_successful_deleted'] = 'Er werd(en)';
< $lang['items_one_or_multiple'] = 'product(en) verwijderd';
< $lang['items_cannot_be_deleted'] = 'De geselecteerde producten konden niet worden verwijderd.';
< $lang['items_name_required'] = 'Productnaam moet ingevuld worden';
< $lang['items_category_required'] = 'Categorie moet ingevuld worden';
< $lang['items_buy_price_required'] = 'Buy price is a required field';
< $lang['items_unit_price_required'] = 'Verkoopprijs moet ingevuld worden';
< $lang['items_cost_price_required'] = 'Aankoopprijs moet ingevuld worden';
< $lang['items_tax_percent_required'] = 'Taxpercentage moet ingevuld worden';
< $lang['items_quantity_required'] = 'Hoeveelheid moet ingevuld worden';
< $lang['items_reorder_level_required'] = 'Reorder level moet ingevuld worden';
< $lang['items_unit_price_number'] = 'Verkoopprijs moet een cijfer zijn';
< $lang['items_cost_price_number'] = 'Kostprijs moet een cijfer zijn';
< $lang['items_quantity_number'] = 'Hoeveelheid moet een cijfer zijn';
< $lang['items_reorder_level_number'] = 'Reorder level moet een cijfer zijn';
< $lang['items_none'] = 'Geen';
< $lang['items_supplier'] = 'Leverancier';
< $lang['items_generate_barcodes'] = 'Genereer Barcodes';
< $lang['items_must_select_item_for_barcode'] = 'U moet ten minste 1 product selecteren om een barcode te genereren';
< $lang['items_excel_import_failed'] = 'Excel import mislukt';
< $lang['items_allow_alt_description'] = 'Aanpasbare omschrijving';
< $lang['items_is_serialized'] = 'Optelbaar';
< $lang['items_low_inventory_items'] = 'Producten niet in stock';
< $lang['items_serialized_items'] = 'Optelbare producten';
< $lang['items_no_description_items'] = 'Producten zonder omschrijving';
< $lang['items_search_custom_items'] = 'Doorzoek Tags';//GARRISON ADDED
< $lang['items_inventory_comments'] = 'Commentaar';
< $lang['items_count'] = 'Update Stock';
< $lang['items_details_count'] = 'Stockgegevens';
< $lang['items_add_minus'] = 'Corrigatie hoeveelheid';
< $lang['items_current_quantity'] = 'Huidige hoeveelheid';
< $lang['items_quantity_required'] = 'Hoeveelheid moet ingevuld worden. Druk sluit ( X ) om te annuleren';
< $lang['items_do_nothing'] = 'Doe Niets';
< $lang['items_change_all_to_serialized'] = 'Genummerd';
< $lang['items_change_all_to_unserialized'] = 'Niet genummerd';
< $lang['items_change_all_to_allow_alt_desc'] = 'Aanpasb. omschrijvingen';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Vaste omschrijvingen';
< $lang['items_use_inventory_menu'] = 'Use Inv. Menu';
< $lang['items_manually_editing_of_quantity'] = 'Manuele aanpassing hoeveelheid';
< $lang['items_inventory'] = 'Stock';
< $lang['items_location'] = 'Locatie';
< $lang['items_is_deleted'] = 'Verwijderd';// Parq 131215
< ?>
---
> 
> $lang["items_add_minus"] = "Corrigatie hoeveelheid";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "Aanpasbare omschrijving";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "Productinformatie";
> $lang["items_bulk_edit"] = "Bewerk Selectie";
> $lang["items_buy_price_required"] = "Buy price is a required field";
> $lang["items_cannot_be_deleted"] = "De geselecteerde producten konden niet worden verwijderd.";
> $lang["items_cannot_find_item"] = "Er werd geen informatie gevonden omtrent product";
> $lang["items_category"] = "Categorie";
> $lang["items_category_required"] = "Categorie moet ingevuld worden";
> $lang["items_change_all_to_allow_alt_desc"] = "Aanpasb. omschrijvingen";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Vaste omschrijvingen";
> $lang["items_change_all_to_serialized"] = "Genummerd";
> $lang["items_change_all_to_unserialized"] = "Niet genummerd";
> $lang["items_confirm_bulk_edit"] = "Bent u zeker dat u de geselecteerde producten wil aanpassen?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "Alle taxgegevens zullen overschreven worden!";
> $lang["items_confirm_delete"] = "Bent u zeker dat u de geselecteerde producten wil verwijderen?";
> $lang["items_cost_price"] = "Aankoopprijs";
> $lang["items_cost_price_number"] = "Kostprijs moet een cijfer zijn";
> $lang["items_cost_price_required"] = "Aankoopprijs moet ingevuld worden";
> $lang["items_count"] = "Update Stock";
> $lang["items_current_quantity"] = "Huidige hoeveelheid";
> $lang["items_description"] = "Omschrijving";
> $lang["items_details_count"] = "Stockgegevens";
> $lang["items_do_nothing"] = "Doe Niets";
> $lang["items_edit_fields_you_want_to_update"] = "Bewerk de velden aan die u wil aanpassen voor ALLE geselecteerde producten";
> $lang["items_edit_multiple_items"] = "Meerdere Producten Bewerken";
> $lang["items_error_adding_updating"] = "Fout bij het toevoegen/aanpassen van een product";
> $lang["items_error_updating_multiple"] = "Fout bij het bewaren van producten";
> $lang["items_excel_import_failed"] = "Excel import mislukt";
> $lang["items_generate_barcodes"] = "Genereer Barcodes";
> $lang["items_image"] = "Afbeelding";
> $lang["items_info_provided_by"] = "Info provided by";
> $lang["items_inventory"] = "Stock";
> $lang["items_inventory_comments"] = "Commentaar";
> $lang["items_is_deleted"] = "Verwijderd";
> $lang["items_is_serialized"] = "Optelbaar";
> $lang["items_item"] = "Product";
> $lang["items_item_number"] = "UPC/EAN/ISBN";
> $lang["items_item_number_duplicate"] = "De barcode nummer is reeds aanwezig in de database";
> $lang["items_location"] = "Locatie";
> $lang["items_empty_upc_items"] = "Zonder barcode";
> $lang["items_low_inventory_items"] = "Niet in stock";
> $lang["items_manually_editing_of_quantity"] = "Manuele aanpassing hoeveelheid";
> $lang["items_must_select_item_for_barcode"] = "U moet ten minste 1 product selecteren om een barcode te genereren";
> $lang["items_name"] = "Productnaam";
> $lang["items_name_required"] = "Productnaam moet ingevuld worden";
> $lang["items_new"] = "Nieuw Product";
> $lang["items_no_description_items"] = "Producten zonder omschrijving";
> $lang["items_no_items_to_display"] = "Er werden geen producten gevonden";
> $lang["items_none"] = "Geen";
> $lang["items_none_selected"] = "U hebt geen producten geselecteerd";
> $lang["items_number_information"] = "Productnummer";
> $lang["items_number_required"] = "UPC/EAN/ISBN moet ingevuld worden";
> $lang["items_one_or_multiple"] = "product(en) verwijderd";
> $lang["items_quantity"] = "Stock";
> $lang["items_quantity_number"] = "Hoeveelheid moet een cijfer zijn";
> $lang["items_quantity_required"] = "Hoeveelheid moet ingevuld worden";
> $lang["items_receiving_quantity"] = "Aantal per lijn";
> $lang["items_reorder_level"] = "Reorder Level";
> $lang["items_reorder_level_number"] = "Reorder level moet een cijfer zijn";
> $lang["items_reorder_level_required"] = "Reorder level moet ingevuld worden";
> $lang["items_retrive_item_info"] = "Haal productinformatie op";
> $lang["items_sales_tax_1"] = "VAT";
> $lang["items_sales_tax_2"] = "VAT 2";
> $lang["items_search_custom_items"] = "Doorzoek Tags";
> $lang["items_serialized_items"] = "Serialized Items";
> $lang["items_stock_location"] = "Stock locatie";
> $lang["items_successful_adding"] = "Product succesvol toegevoegd";
> $lang["items_successful_bulk_edit"] = "Producten werden succesvol bewaard";
> $lang["items_successful_deleted"] = "Er werd(en)";
> $lang["items_successful_updating"] = "Wijzigingen bewaard voor";
> $lang["items_supplier"] = "Leverancier";
> $lang["items_tax_1"] = "VAT";
> $lang["items_tax_2"] = "VAT 2";
> $lang["items_tax_percent"] = "VAT %";
> $lang["items_tax_percent_required"] = "Taxpercentage moet ingevuld worden";
> $lang["items_tax_percents"] = "VAT";
> $lang["items_unit_price"] = "Verkoopprijs";
> $lang["items_unit_price_number"] = "Verkoopprijs moet een cijfer zijn";
> $lang["items_unit_price_required"] = "Verkoopprijs moet ingevuld worden";
> $lang["items_upc_database"] = "UPC Database";
> $lang["items_update"] = "Bewerk Product";
> $lang["items_use_inventory_menu"] = "Use Inv. Menu";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/login_lang.php opensourcepos/application/language/nl-BE/login_lang.php
2,8c2,8
< $lang['login_login'] = 'Login';
< $lang['login_username'] = 'Gebruiker';
< $lang['login_password'] = 'Paswoord';
< $lang['login_go'] = 'Verstuur';
< $lang['login_invalid_username_and_password'] = 'Ongeldige gebruiker/paswoord';
< $lang['login_welcome_message'] = 'Welkom in deze module. Voer gebruikersnaam en paswoord in om verder te gaan.';
< ?>
---
> 
> $lang["login_go"] = "Verstuur";
> $lang["login_invalid_username_and_password"] = "Ongeldige gebruiker/paswoord";
> $lang["login_login"] = "Login";
> $lang["login_password"] = "Paswoord";
> $lang["login_username"] = "Gebruiker";
> $lang["login_welcome_message"] = "Welkom in deze module. Voer gebruikersnaam en paswoord in om verder te gaan.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/module_lang.php opensourcepos/application/language/nl-BE/module_lang.php
2d1
< $lang['module_home'] = 'Home';
4,34c3,23
< $lang['module_customers'] = 'Klanten';
< $lang['module_customers_desc'] = 'Zoek, bewerk, verwijder en voeg klanten toe';
< 
< $lang['module_suppliers'] = 'Leveranciers';
< $lang['module_suppliers_desc'] = 'Zoek, bewerk, verwijder en voeg leveranciers toe';
< 
< $lang['module_employees'] = 'Werknemers';
< $lang['module_employees_desc'] = 'Zoek, bewerk, verwijder en voeg werknemers toe';
< 
< $lang['module_sales'] = 'Kassa';
< $lang['module_sales_desc'] = 'Verwerk aankopen en retours';
< 
< $lang['module_reports'] = 'Rapporten';
< $lang['module_reports_desc'] = 'Toon en genereer rapporten';
< 
< $lang['module_items'] = 'Producten';
< $lang['module_items_desc'] = 'Zoek, bewerk, verwijder en voeg producten toe';
< 
< $lang['module_config'] = 'Configuratie';
< $lang['module_config_desc'] = 'Globale configuratie aanpassen';
< 
< $lang['module_receivings'] = 'Orders';
< $lang['module_receivings_desc'] = 'Verwerk binnenkomende orders';
< 
< $lang['module_giftcards'] = 'Cadeaubons';
< $lang['module_giftcards_desc'] = 'Zoek, bewerk, verwijder en voeg cadeaubons toe';
< 
< $lang['module_item_kits'] = 'Productsets';
< $lang['module_item_kits_desc'] = 'Zoek, bewerk, verwijder en voeg productsets toe';
< 
< ?>
---
> $lang["module_config"] = "Configuratie";
> $lang["module_config_desc"] = "Globale configuratie aanpassen";
> $lang["module_customers"] = "Klanten";
> $lang["module_customers_desc"] = "Zoek, bewerk, verwijder en voeg klanten toe";
> $lang["module_employees"] = "Werknemers";
> $lang["module_employees_desc"] = "Zoek, bewerk, verwijder en voeg werknemers toe";
> $lang["module_giftcards"] = "Cadeaubons";
> $lang["module_giftcards_desc"] = "Zoek, bewerk, verwijder en voeg cadeaubons toe";
> $lang["module_home"] = "Home";
> $lang["module_item_kits"] = "Productsets";
> $lang["module_item_kits_desc"] = "Zoek, bewerk, verwijder en voeg productsets toe";
> $lang["module_items"] = "Producten";
> $lang["module_items_desc"] = "Zoek, bewerk, verwijder en voeg producten toe";
> $lang["module_receivings"] = "Orders";
> $lang["module_receivings_desc"] = "Verwerk binnenkomende orders";
> $lang["module_reports"] = "Rapporten";
> $lang["module_reports_desc"] = "Toon en genereer rapporten";
> $lang["module_sales"] = "Kassa";
> $lang["module_sales_desc"] = "Verwerk aankopen en retours";
> $lang["module_suppliers"] = "Leveranciers";
> $lang["module_suppliers_desc"] = "Zoek, bewerk, verwijder en voeg leveranciers toe";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/receivings_lang.php opensourcepos/application/language/nl-BE/receivings_lang.php
2,26c2,51
< $lang['recvs_register'] = 'Orders';
< $lang['recvs_mode'] = 'Order type';
< $lang['recvs_receiving'] = 'Inkoop';
< $lang['recvs_return'] = 'Teruggave';
< $lang['recvs_total'] = 'Totaal';
< $lang['recvs_cost'] = 'Kost';
< $lang['recvs_quantity'] = 'Aantal';
< $lang['recvs_discount'] = 'Korting %';
< $lang['recvs_edit'] = 'Bewerk';
< $lang['recvs_new_supplier'] = 'N. Leverancier';
< $lang['recvs_supplier'] = 'Leverancier';
< $lang['recvs_select_supplier'] = 'Selecteer Leverancier (Optioneel)';
< $lang['recvs_start_typing_supplier_name'] = 'Typ naam leverancier..';
< $lang['recvs_unable_to_add_item'] = 'Onmogelijk om product aan order toe te voegen';
< $lang['recvs_error_editing_item'] = 'Fout bij het bewerken product';
< $lang['recvs_receipt'] = 'Ontvangstbewijs';
< $lang['recvs_complete_receiving'] = 'Bevestig';
< $lang['recvs_confirm_finish_receiving'] = 'Bent u zeker dat u dit order wil ingeven? Dit kan niet ongedaan gemaakt worden.';
< $lang['recvs_confirm_cancel_receiving'] = 'Bent u zeker dat u dit order wil wissen?';
< $lang['recvs_find_or_scan_item'] = 'Zoek/Scan Product';
< $lang['recvs_find_or_scan_item_or_receipt'] = 'Zoek/Scan Product OF Tickets';
< $lang['recvs_id'] = 'Ordernummer';
< $lang['recvs_item_name'] = 'Productnaam';
< $lang['receivings_transaction_failed'] = 'Order transactie mislukt';
< ?>
---
> 
> $lang["receivings_transaction_failed"] = "Order transactie mislukt";
> $lang["recvs_basic_information"] = "Order informatie";
> $lang["recvs_cancel_receiving"] = "Annuleer";
> $lang["recvs_cannot_be_deleted"] = "Order(s) konden niet verwijderd worden";
> $lang["recvs_comments"] = "Commentaar";
> $lang["recvs_complete_receiving"] = "Bevestig";
> $lang["recvs_confirm_cancel_receiving"] = "Bent u zeker dat u dit order wil wissen?";
> $lang["recvs_confirm_finish_receiving"] = "Bent u zeker dat u dit order wil ingeven? Dit kan niet ongedaan gemaakt worden.";
> $lang["recvs_cost"] = "Kost";
> $lang["recvs_date"] = "Order Datum";
> $lang["recvs_date_required"] = "Er moet een correcte datum ingevuld worden";
> $lang["recvs_date_type"] = "Datum is vereist";
> $lang["recvs_delete_confirmation"] = "Bent u zeker dat u dit order wil verwijderen? Dit kan niet ongedaan gemaakt worden.";
> $lang["recvs_delete_entire_sale"] = "Verwijder";
> $lang["recvs_discount"] = "Korting %";
> $lang["recvs_edit"] = "Bewerk";
> $lang["recvs_edit_sale"] = "Bewerk";
> $lang["recvs_employee"] = "Werknemer";
> $lang["recvs_error_editing_item"] = "Fout tijdens updaten product";
> $lang["recvs_error_requisition"] = "Kon de stock transfer niet vervolledigen";
> $lang["recvs_find_or_scan_item"] = "Zoek/Scan Product";
> $lang["recvs_find_or_scan_item_or_receipt"] = "Zoek/Scan Product OF Tickets";
> $lang["recvs_id"] = "Ordernummer";
> $lang["recvs_invoice_enable"] = "Maak Factuur";
> $lang["recvs_invoice_number"] = "Factuur #";
> $lang["recvs_invoice_number_duplicate"] = "Gelieve een uniek factuurnummer in te voeren";
> $lang["recvs_item_name"] = "Productnaam";
> $lang["recvs_mode"] = "Order type";
> $lang["recvs_new_supplier"] = "N. Leverancier";
> $lang["recvs_one_or_multiple"] = "order(s)";
> $lang["recvs_print_after_sale"] = "Print Ticket";
> $lang["recvs_quantity"] = "Aantal";
> $lang["recvs_receipt"] = "Ontvangstbewijs";
> $lang["recvs_receipt_number"] = "Order #";
> $lang["recvs_receiving"] = "Inkoop";
> $lang["recvs_register"] = "Orders";
> $lang["recvs_requisition"] = "Transfer";
> $lang["recvs_return"] = "Teruggave";
> $lang["recvs_select_supplier"] = "Selecteer Leverancier (Optioneel)";
> $lang["recvs_start_typing_supplier_name"] = "Typ naam leverancier..";
> $lang["recvs_stock_destination"] = "Stock bestemming";
> $lang["recvs_stock_locaiton"] = "Stock locatie";
> $lang["recvs_stock_source"] = "Stock bron";
> $lang["recvs_successfully_deleted"] = "Er werd(en)";
> $lang["recvs_successfully_updated"] = "Order werd geupdatet";
> $lang["recvs_supplier"] = "Leverancier";
> $lang["recvs_total"] = "Totaal";
> $lang["recvs_unable_to_add_item"] = "Onmogelijk om product aan order toe te voegen";
> $lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/reports_lang.php opensourcepos/application/language/nl-BE/reports_lang.php
2,88c2,108
< $lang['reports_reports'] = 'Rapporten';
< $lang['reports_report'] = 'Rapport';
< $lang['reports_welcome_message'] = 'Welkom bij de rapporten. Selecteer hier een rapport.';
< $lang['reports_sales_summary_report'] = 'Overzicht Verkoop';
< $lang['reports_categories_summary_report'] = 'Rapport Overzicht Categorieën';
< $lang['reports_customers_summary_report'] = 'Rapport Overzicht Klanten';
< $lang['reports_suppliers_summary_report'] = 'Rapport Overzicht Leveranciers';
< $lang['reports_items_summary_report'] = 'Rapport Overzicht Producten';
< $lang['reports_employees_summary_report'] = 'Rapport Overzicht Werknemers';
< $lang['reports_taxes_summary_report'] = 'Rapport Overzicht Belastingen';
< $lang['reports_date'] = 'Datum';
< $lang['reports_name'] = 'Naam';
< $lang['reports_quantity_purchased'] = 'Aangekochte Hoeveelheid';
< $lang['reports_sale_id'] = 'Ticket°';
< $lang['reports_items_purchased'] = 'Hoeveelheid';
< $lang['reports_sold_by'] = 'Werknemer';
< $lang['reports_sold_to'] = 'Klant';
< $lang['reports_category'] = 'Categorie';
< $lang['reports_customer'] = 'Klant';
< $lang['reports_employee'] = 'Werknemer';
< $lang['reports_item'] = 'Product';
< $lang['reports_items'] = 'Producten';
< $lang['reports_supplier'] = 'Leverancier';
< $lang['reports_employees'] = 'Werknemrs';
< $lang['reports_subtotal'] = 'Subtotaal';
< $lang['reports_total'] = 'Totaal';
< $lang['reports_tax'] = 'VAT';
< $lang['reports_profit'] = 'Winst';
< $lang['reports_report_input'] = 'Input Rapport';
< $lang['reports_type'] = 'Type';
< $lang['reports_date_range'] = 'Periode';
< $lang['reports_today'] = 'Vandaag';
< $lang['reports_yesterday'] = 'Gisteren';
< $lang['reports_last_7'] = 'Vorige 7 Dagen';
< $lang['reports_this_month'] = 'Deze Maand';
< $lang['reports_last_month'] = 'Vorige Maand';
< $lang['reports_this_year'] = 'Dit Jaar';
< $lang['reports_last_year'] = 'Vorig Jaar';
< $lang['reports_all_time'] = 'Alle';
< $lang['reports_detailed_sales_report'] = 'Gedetailleerd Rapport Verkoop';
< $lang['reports_comments'] = 'Commentaar';
< $lang['reports_discount'] = 'Korting';
< $lang['reports_payment_type'] = 'Betaald';
< $lang['reports_sales'] = 'Verkoop';
< $lang['reports_categories'] = 'Categorieën';
< $lang['reports_customers'] = 'Klanten';
< $lang['reports_suppliers'] = 'Leveranciers';
< $lang['reports_items'] = 'Producten';
< $lang['reports_employees'] = 'Werknemers';
< $lang['reports_taxes'] = 'Belastingen';
< $lang['reports_customer'] = 'Klant';
< $lang['reports_employee'] = 'Werknemer';
< $lang['reports_tax_percent'] = 'VAT Percentage';
< $lang['reports_quantity_purchased'] = 'Hoeveelheid';
< $lang['reports_serial_number'] = 'Nummer';
< $lang['reports_description'] = 'Omschrijving';
< $lang['reports_date'] = 'Datum';
< $lang['reports_sales_amount'] = 'Sales amount';
< $lang['reports_revenue'] = 'Inkomsten';
< $lang['reports_discounts'] = 'Kortingen';
< $lang['reports_discounts_summary_report'] = 'Overzicht Kortingen';
< $lang['reports_discount_percent'] = 'Kortingspercentage';
< $lang['reports_count'] = 'Aantal';
< $lang['reports_summary_reports'] = 'Overzicht Rapporten';
< $lang['reports_graphical_reports'] = 'Grafische Rapporten';
< $lang['reports_detailed_reports'] = 'Gedetailleerde Rapporten';
< $lang['reports_inventory_reports'] = 'Rapporten Bevoorrading';
< $lang['reports_low_inventory'] = 'Herbevoorrading';
< $lang['reports_inventory_summary'] = 'Overzicht Vooraad';
< $lang['reports_item_number'] = 'Productnummer';
< $lang['reports_reorder_level'] = 'Reorder Level';
< $lang['reports_low_inventory_report'] = 'Rapport Herbevoorrading';
< $lang['reports_item_name'] = 'Product Naam';
< $lang['reports_inventory_summary_report'] = 'Rapport Overzicht Vooraad';
< $lang['reports_payment_type'] = 'Payment Type';
< $lang['reports_payments_summary_report'] = 'Overzicht Betalingen';
< $lang['reports_payments'] = 'Betalingen';
< $lang['reports_sale_type'] = 'Type';
< $lang['reports_receivings'] = 'Orders';
< $lang['reports_received_by'] = 'Ontvangen door';
< $lang['reports_supplied_by'] = 'Geleverd door';
< $lang['reports_items_received'] = 'Items Ontvangen';
< $lang['reports_detailed_receivings_report'] = 'Gedetailleerd Raport Orders';
< $lang['reports_all'] = 'Alle';
< $lang['reports_returns'] = 'Retour';
< $lang['reports_discount'] = 'Kortingen';
< ?>
---
> 
> $lang["reports_all"] = "Alle";
> $lang["reports_all_time"] = "Alle";
> $lang["reports_categories"] = "Categorieën";
> $lang["reports_categories_summary_report"] = "Rapport Overzicht Categorieën";
> $lang["reports_category"] = "Categorie";
> $lang["reports_comments"] = "Commentaar";
> $lang["reports_count"] = "Aantal";
> $lang["reports_customer"] = "Klant";
> $lang["reports_customers"] = "Klanten";
> $lang["reports_customers_summary_report"] = "Rapport Overzicht Klanten";
> $lang["reports_date"] = "Datum";
> $lang["reports_date_range"] = "Periode";
> $lang["reports_description"] = "Omschrijving";
> $lang["reports_detailed_receivings_report"] = "Gedetailleerd Raport Orders";
> $lang["reports_detailed_reports"] = "Gedetailleerde Rapporten";
> $lang["reports_detailed_requisition_report"] = "";
> $lang["reports_detailed_sales_report"] = "Gedetailleerd Rapport Verkoop";
> $lang["reports_discount"] = "Korting";
> $lang["reports_discount_percent"] = "Kortingspercentage";
> $lang["reports_discounts"] = "Kortingen";
> $lang["reports_discounts_summary_report"] = "Overzicht Kortingen";
> $lang["reports_employee"] = "Werknemer";
> $lang["reports_employees"] = "Werknemrs";
> $lang["reports_employees_summary_report"] = "Rapport Overzicht Werknemers";
> $lang["reports_graphical_reports"] = "Grafische Rapporten";
> $lang["reports_inventory"] = "";
> $lang["reports_inventory_low"] = "Herbevoorrading";
> $lang["reports_inventory_low_report"] = "Rapport Herbevoorrading";
> $lang["reports_inventory_reports"] = "Rapporten Bevoorrading";
> $lang["reports_inventory_summary"] = "Overzicht Vooraad";
> $lang["reports_inventory_summary_report"] = "Rapport Overzicht Vooraad";
> $lang["reports_item"] = "Product";
> $lang["reports_item_name"] = "Product Naam";
> $lang["reports_item_number"] = "Productnummer";
> $lang["reports_items"] = "Producten";
> $lang["reports_items_purchased"] = "Hoeveelheid";
> $lang["reports_items_received"] = "Items Ontvangen";
> $lang["reports_items_summary_report"] = "Rapport Overzicht Producten";
> $lang["reports_last_7"] = "Vorige 7 Dagen";
> $lang["reports_last_month"] = "Vorige Maand";
> $lang["reports_last_year"] = "Vorig Jaar";
> $lang["reports_low_inventory"] = "";
> $lang["reports_low_inventory_report"] = "";
> $lang["reports_name"] = "Naam";
> $lang["reports_payment_type"] = "Betaald";
> $lang["reports_payments"] = "Betalingen";
> $lang["reports_payments_summary_report"] = "Overzicht Betalingen";
> $lang["reports_profit"] = "Winst";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "Aangekochte Hoeveelheid";
> $lang["reports_received_by"] = "Ontvangen door";
> $lang["reports_receiving_id"] = "";
> $lang["reports_receiving_type"] = "";
> $lang["reports_receivings"] = "Orders";
> $lang["reports_reorder_level"] = "Reorder Level";
> $lang["reports_report"] = "Rapport";
> $lang["reports_report_input"] = "Input Rapport";
> $lang["reports_reports"] = "Rapporten";
> $lang["reports_requisition"] = "";
> $lang["reports_requisition_by"] = "";
> $lang["reports_requisition_id"] = "";
> $lang["reports_requisition_item"] = "";
> $lang["reports_requisition_item_quantity"] = "";
> $lang["reports_requisition_related_item"] = "";
> $lang["reports_requisition_related_item_total_quantity"] = "";
> $lang["reports_requisition_related_item_unit_quantity"] = "";
> $lang["reports_requisitions"] = "";
> $lang["reports_returns"] = "Retour";
> $lang["reports_revenue"] = "Inkomsten";
> $lang["reports_sale_id"] = "Ticket°";
> $lang["reports_sale_type"] = "Type";
> $lang["reports_sales"] = "Verkoop";
> $lang["reports_sales_amount"] = "Sales amount";
> $lang["reports_sales_summary_report"] = "Overzicht Verkoop";
> $lang["reports_serial_number"] = "Nummer";
> $lang["reports_sold_by"] = "Werknemer";
> $lang["reports_sold_to"] = "Klant";
> $lang["reports_stock_location"] = "Stock Locatie";
> $lang["reports_subtotal"] = "Subtotaal";
> $lang["reports_summary_reports"] = "Overzicht Rapporten";
> $lang["reports_supplied_by"] = "Geleverd door";
> $lang["reports_supplier"] = "Leverancier";
> $lang["reports_suppliers"] = "Leveranciers";
> $lang["reports_suppliers_summary_report"] = "Rapport Overzicht Leveranciers";
> $lang["reports_tax"] = "VAT";
> $lang["reports_tax_percent"] = "VAT Percentage";
> $lang["reports_taxes"] = "Belastingen";
> $lang["reports_taxes_summary_report"] = "Rapport Overzicht Belastingen";
> $lang["reports_this_month"] = "Deze Maand";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "Dit Jaar";
> $lang["reports_today"] = "Vandaag";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "Totaal";
> $lang["reports_type"] = "Type";
> $lang["reports_welcome_message"] = "Welkom bij de rapporten. Selecteer hier een rapport.";
> $lang["reports_yesterday"] = "Gisteren";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "Aankoopprijs";
> $lang["reports_unit_price"] = "Verkoopprijs";
> $lang["reports_sub_total_value"] = "Subtotaal";
> $lang["reports_total_inventory_value"] = "Totale waarde stock";
> $lang["reports_zero_and_less"] = "Nul en minder";
> $lang["reports_more_than_zero"] = "Meer dan nul";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/sales_lang.php opensourcepos/application/language/nl-BE/sales_lang.php
2,87c2,117
< $lang['sales_giftcard_number']='Cadeaubon nummer';
< $lang['sales_giftcard']='Cadeaubon';
< $lang['sales_register']='Kassa';
< $lang['sales_mode']='Type Registratie';
< $lang['sales_new_item'] = 'Nieuw Product';
< $lang['sales_item_name'] = 'Naam';
< $lang['sales_item_number'] = 'Product #';
< $lang['sales_new_customer'] = 'Nieuwe klant';
< $lang['sales_customer'] = 'Klant';
< $lang['sales_no_items_in_cart']='Er zijn geen aankopen geselecteerd';
< $lang['sales_total']='Totaal';
< $lang['sales_tax_percent']='VAT %';
< $lang['sales_price']='Ecxl. VAT';
< $lang['sales_quantity']='Aantal';
< $lang['sales_discount']='%';
< $lang['sales_edit']='Bewerk';
< $lang['sales_payment']='Betaalmethode';
< $lang['sales_edit_item']='Bewaar';
< $lang['sales_find_or_scan_item']='Zoek/Scan Product';
< $lang['sales_find_or_scan_item_or_receipt']='Zoek/Scan Product of Ticket';
< $lang['sales_select_customer']='Selecteer Klant (Optioneel)';
< $lang['sales_start_typing_item_name']='Typ naam product of barcode...';
< $lang['sales_start_typing_customer_name']='Typ naam klant...';
< $lang['sales_sub_total']='Subtotaal excl. VAT';
< $lang['sales_tax']='VAT';
< $lang['sales_comment']='Commentaar';
< $lang['sales_unable_to_add_item']='Onmogelijk om product toe te voegen';
< $lang['sales_sale_for_customer']='Klant:';
< $lang['sales_remove_customer']='Verwijder Klant';
< $lang['sales_error_editing_item']='Fout bij bewerken';
< $lang['sales_complete_sale']='Bevestig';
< $lang['sales_cancel_sale']='Annuleer';
< $lang['sales_add_payment']='Betaal';
< $lang['sales_receipt']='Ticket #';
< $lang['sales_receipt_number']='Ticket #';
< $lang['sales_id']='Nummer Verkoop ';
< $lang['sales_sale']='Verkoop';
< $lang['sales_return']='Retour';
< $lang['sales_confirm_finish_sale'] = 'Bent u zeker dat u deze aankoop wil invoeren? Dit kan niet ongedaan gemaakt worden.';
< $lang['sales_confirm_cancel_sale'] = 'Bent u zeker dat u deze aankoop wil verwijderen?';
< $lang['sales_cash'] = 'Contant';
< $lang['sales_check'] = 'Waardebon';
< $lang['sales_debit'] = 'Bancontact';
< $lang['sales_credit'] = 'Kredietkaart';
< $lang['sales_giftcard'] = 'Cadeaubon';
< $lang['sales_amount_tendered'] = 'Ontvangen bedrag';
< $lang['sales_change_due'] = 'Wisselgeld terug';
< $lang['sales_payment_not_cover_total'] = 'Betaalde hoeveelheid is onvoldoende';
< $lang['sales_transaction_failed'] = 'Transactie mislukt';
< $lang['sales_must_enter_numeric'] = 'Het ontvangen bedrag moet een numerieke waarde zijn';
< $lang['sales_must_enter_numeric_giftcard'] = 'Er moet een geldige code worden ingevuld voor de cadeaubon';
< $lang['sales_serial'] = 'Nummer';
< $lang['sales_description_abbrv'] = 'Omschr.';
< $lang['sales_item_out_of_stock'] = 'Product is niet meer in voorraad';
< $lang['sales_item_insufficient_of_stockfi'] = 'Product is niet meer in voorraad';
< $lang['sales_quantity_less_than_zero'] = 'Waarschuwing, de gewenste hoeveelheid is onvoldoende. U kunt deze aankoop verwerken, maar kijk toch even de voorraad na.';
< $lang['sales_successfully_updated']='Wijzigingen bewaard voor ticket';
< $lang['sales_unsuccessfully_updated']='Fout bij het bewaren van ticket';
< $lang['sales_edit_sale']='Bewerk Ticket';
< $lang['sales_employee']='Werknemer';
< $lang['sales_delete_successful']='De geselecteerde aanko(o)p(en) werden verwijderd';
< $lang['sales_delete_unsuccessful']='De geselecteerde aankopen konden niet worden verwijderd.';
< $lang['sales_delete_entire_sale']='Verwijder';
< $lang['sales_delete_confirmation']='Bent u zeker dat u deze aankoop wil verwijderen?';
< $lang['sales_date']='Datum';
< $lang['sales_delete_successful'] = 'U hebt een aankoop verwijderd';
< $lang['sales_delete_unsuccessful'] = 'U kan deze aankoop niet verwijderen';
< $lang['sales_suspend_sale'] = 'Bewaar aankoop';
< $lang['sales_confirm_suspend_sale'] = 'Bent u zeker dat u deze aankoop wil bewaren?';
< $lang['sales_suspended_sales'] = 'Bewaarde Aankopen';
< $lang['sales_suspended_sale_id'] = 'ID';
< $lang['sales_date'] = 'Date';
< $lang['sales_comments'] = 'Commentaar';
< $lang['sales_unsuspend_and_delete'] = '';
< $lang['sales_unsuspend'] = 'Hervat';
< $lang['sales_successfully_suspended_sale'] = 'Uw aankoop werd met sucess bewaard';
< $lang['sales_email_receipt'] = 'E-Mail Ticket';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Korting';
< $lang['sales_sale_time']='Datum';
< $lang['sales_payments_total'] = 'Betaald bedrag';
< $lang['sales_amount_due'] = 'Te betalen';
< $lang['sales_payment_type'] = "Type";
< $lang['sales_payment_amount'] = "Bedrag";
< $lang['sales_basic_information']='Ticket informatie';
< ?>
---
> 
> $lang["sales_add_payment"] = "Betaal";
> $lang["sales_amount_due"] = "Te betalen";
> $lang["sales_amount_tendered"] = "Ontvangen bedrag";
> $lang["sales_basic_information"] = "Ticket informatie";
> $lang["sales_cancel_sale"] = "Annuleer";
> $lang["sales_cash"] = "Contant";
> $lang["sales_change_due"] = "Wisselgeld terug";
> $lang["sales_check"] = "Waardebon";
> $lang["sales_check_balance"] = "Waardebon terug";
> $lang["sales_comment"] = "Commentaar";
> $lang["sales_comments"] = "Commentaar";
> $lang["sales_complete_sale"] = "Bevestig";
> $lang["sales_confirm_cancel_sale"] = "Bent u zeker dat u deze aankoop wil verwijderen?";
> $lang["sales_confirm_delete"] = "Bent u zeker dat u de geselecteerde aankopen wil verwijderen?";
> $lang["sales_confirm_finish_sale"] = "Bent u zeker dat u deze aankoop wil invoeren? Dit kan niet ongedaan gemaakt worden.";
> $lang["sales_confirm_suspend_sale"] = "Bent u zeker dat u deze aankoop wil bewaren?";
> $lang["sales_credit"] = "Kredietkaart";
> $lang["sales_customer"] = "Klant";
> $lang["sales_date"] = "Datum";
> $lang["sales_date_required"] = "Gelieve een correcte datum in te vullen";
> $lang["sales_date_type"] = "Er moet een correcte datum ingevuld worden";
> $lang["sales_debit"] = "Bancontact";
> $lang["sales_delete_confirmation"] = "Bent u zeker dat u deze aankoop wil verwijderen?";
> $lang["sales_delete_entire_sale"] = "Verwijder";
> $lang["sales_delete_successful"] = "De geselecteerde aanko(o)p(en) werden verwijderd";
> $lang["sales_delete_unsuccessful"] = "De geselecteerde aankopen konden niet worden verwijderd.";
> $lang["sales_description_abbrv"] = "Omschr.";
> $lang["sales_discount"] = "%";
> $lang["sales_discount_included"] = "% Korting";
> $lang["sales_discount"] = "Korting";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "Bewerk";
> $lang["sales_edit_item"] = "Bewaar";
> $lang["sales_edit_sale"] = "Bewerk Ticket";
> $lang["sales_email_receipt"] = "E-Mail Ticket";
> $lang["sales_employee"] = "Werknemer";
> $lang["sales_error_editing_item"] = "Fout bij bewerken";
> $lang["sales_find_or_scan_item"] = "Zoek/Scan Product";
> $lang["sales_find_or_scan_item_or_receipt"] = "Zoek/Scan Product of Ticket";
> $lang["sales_giftcard"] = "Cadeaubon";
> $lang["sales_giftcard_balance"] = "Cadeaubon Resterend";
> $lang["sales_giftcard_number"] = "Cadeaubon nummer";
> $lang["sales_id"] = "Nummer Verkoop ";
> $lang["sales_invoice"] = "Factuur";
> $lang["sales_invoice_confirm"] = "Deze factuur zal verstuurd worden naar";
> $lang["sales_invoice_enable"] = "Maak Factuur";
> $lang["sales_invoice_filter"] = "Facturen";
> $lang["sales_cash_filter"] = "Contant";
> $lang["sales_invoice_no_email"] = "Er werd geen email adres gevonden voor deze klant";
> $lang["sales_invoice_number"] = "Factuur #";
> $lang["sales_invoice_number_duplicate"] = "Vul een unieke nummer in";
> $lang["sales_invoice_sent"] = "Factuur verstuurd naar";
> $lang["sales_invoice_unsent"] = "Fout bij het versturen van factuur naar";
> $lang["sales_invoice_update"] = "Hernummer";
> $lang["sales_item_insufficient_of_stock"] = "Product is niet meer in voorraad";
> $lang["sales_item_name"] = "Naam";
> $lang["sales_item_number"] = "Product #";
> $lang["sales_item_out_of_stock"] = "Product is niet meer in voorraad";
> $lang["sales_mode"] = "Type Registratie";
> $lang["sales_must_enter_numeric"] = "Het ontvangen bedrag moet een numerieke waarde zijn";
> $lang["sales_must_enter_numeric_giftcard"] = "Er moet een geldige code worden ingevuld voor de cadeaubon";
> $lang["sales_new_customer"] = "Nieuwe klant";
> $lang["sales_new_item"] = "Nieuw Product";
> $lang["sales_no_description"] = "Geen";
> $lang["sales_no_filter"] = "Alle";
> $lang["sales_no_items_in_cart"] = "Er zijn geen aankopen geselecteerd";
> $lang["sales_no_sales_to_display"] = "Er werden geen aankopen gevonden";
> $lang["sales_one_or_multiple"] = "aankopen verwijderd";
> $lang["sales_takings"] = "Overzicht";
> $lang["sales_payment"] = "Betaalmethode";
> $lang["sales_payment_amount"] = "Bedrag";
> $lang["sales_payment_not_cover_total"] = "Betaalde hoeveelheid is onvoldoende";
> $lang["sales_payment_type"] = "Type";
> $lang["sales_payments_total"] = "Betaald bedrag";
> $lang["sales_price"] = "Prijs";
> $lang["sales_print_after_sale"] = "Print Ticket";
> $lang["sales_quantity"] = "Aantal";
> $lang["sales_quantity_less_than_zero"] = "Waarschuwing, de gewenste hoeveelheid is onvoldoende. U kunt deze aankoop verwerken, maar kijk toch even de voorraad na.";
> $lang["sales_quantity_less_than_reorder_level"] = "Waarschuwing, de gewenste hoeveelheid stock is overgeschreden.";
> $lang["sales_receipt"] = "Ticket #";
> $lang["sales_receipt_number"] = "Ticket #";
> $lang["sales_register"] = "Kassa";
> $lang["sales_remove_customer"] = "Verwijder Klant";
> $lang["sales_return"] = "Retour";
> $lang["sales_sale"] = "Verkoop";
> $lang["sales_sale_for_customer"] = "Klant:";
> $lang["sales_sale_time"] = "Datum";
> $lang["sales_select_customer"] = "Selecteer Klant (Optioneel)";
> $lang["sales_send_invoice"] = "Vestuur Factuur";
> $lang["sales_serial"] = "Nummer";
> $lang["sales_show_invoice"] = "factuur";
> $lang["sales_show_receipt"] = "ticket";
> $lang["sales_start_typing_customer_name"] = "Typ naam klant...";
> $lang["sales_start_typing_item_name"] = "Typ naam product of barcode...";
> $lang["sales_stock_location"] = "Stock locatie";
> $lang["sales_sub_total"] = "Subtotaal";
> $lang["sales_successfully_deleted"] = "Uw aankoop werd verwijded";
> $lang["sales_successfully_suspended_sale"] = "Uw aankoop werd met sucess bewaard";
> $lang["sales_successfully_updated"] = "Wijzigingen bewaard voor ticket";
> $lang["sales_suspend_sale"] = "Bewaar aankoop";
> $lang["sales_suspended_sale_id"] = "ID";
> $lang["sales_suspended_sales"] = "Bewaarde Aankopen";
> $lang["sales_tax"] = "VAT";
> $lang["sales_tax_percent"] = "VAT %";
> $lang["sales_total"] = "Totaal";
> $lang["sales_total_tax_exclusive"] = "Totaal";
> $lang["sales_transaction_failed"] = "Transactie mislukt";
> $lang["sales_unable_to_add_item"] = "Onmogelijk om product toe te voegen";
> $lang["sales_unsuccessfully_deleted"] = "De aankoop kon niet verwijderd worden";
> $lang["sales_unsuccessfully_updated"] = "Fout bij het bewaren van ticket";
> $lang["sales_unsuspend"] = "Hervat";
> $lang["sales_unsuspend_and_delete"] = "";
> $lang["sales_update"] = "Bewerk Ticket";
> $lang["sales_date_range"] = "Periode";
> $lang["sales_none_selected"] = "U hebt geen aankopen geselecteerd";
diff -rBwi --ignore-file-name-case pos-prod/application/language/nl-BE/suppliers_lang.php opensourcepos/application/language/nl-BE/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new']='N. Leverancier';
< $lang['suppliers_supplier']='Leverancier';
< $lang['suppliers_update']='Bewerk Leverancier';
< $lang['suppliers_confirm_delete']='Bent u zeker dat u de geselecteerde leveranciers wil verwijderen?';
< $lang['suppliers_none_selected']='U hebt geen leveranciers geselecteerd';
< $lang['suppliers_error_adding_updating'] = 'Fout bij het toevoegen/aanpassen van een leverancier';
< $lang['suppliers_successful_adding']='Leverancier succesvol toegevoegd';
< $lang['suppliers_successful_updating']='Wijzigingen leveranciersgegevens bewaard';
< $lang['suppliers_successful_deleted']='Er werd(en)';
< $lang['suppliers_one_or_multiple']='leverancier(s) verwijderd';
< $lang['suppliers_cannot_be_deleted']='De geselecteeerde leveranciers konden niet worden verwijderd. Eén of meerdere leveranciers hebben ordergegevens in de database zitten.';
< $lang['suppliers_basic_information']='Informatie Leverancier';
< $lang['suppliers_account_number']='Btw nummer';
< $lang['suppliers_company_name']='Bedrijfsnaam';
< $lang['suppliers_company_name_required'] = 'Bedrijfsnaam moet ingevuld worden';
< ?>
---
> 
> $lang["suppliers_account_number"] = "Btw nummer";
> $lang["suppliers_basic_information"] = "Informatie Leverancier";
> $lang["suppliers_cannot_be_deleted"] = "De geselecteeerde leveranciers konden niet worden verwijderd. Eén of meerdere leveranciers hebben ordergegevens in de database zitten.";
> $lang["suppliers_company_name"] = "Leverancier";
> $lang["suppliers_company_name_required"] = "Bedrijfsnaam moet ingevuld worden";
> $lang["suppliers_agency_name"] = "Agencynaam";
> $lang["suppliers_confirm_delete"] = "Bent u zeker dat u de geselecteerde leveranciers wil verwijderen?";
> $lang["suppliers_error_adding_updating"] = "Fout bij het toevoegen/aanpassen van een leverancier";
> $lang["suppliers_new"] = "N. Leverancier";
> $lang["suppliers_none_selected"] = "U hebt geen leveranciers geselecteerd";
> $lang["suppliers_one_or_multiple"] = "leverancier(s) verwijderd";
> $lang["suppliers_successful_adding"] = "Leverancier succesvol toegevoegd";
> $lang["suppliers_successful_deleted"] = "Er werd(en)";
> $lang["suppliers_successful_updating"] = "Wijzigingen leveranciersgegevens bewaard";
> $lang["suppliers_supplier"] = "Leverancier";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "Bewerk Leverancier";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/common_lang.php opensourcepos/application/language/ru/common_lang.php
2,41c2,57
< $lang['common_common'] = 'общественно';
< $lang['common_submit'] = 'Подавать';
< $lang['common_or'] = 'ИЛИ';
< $lang['common_powered_by'] = 'самоходные из';
< $lang['common_welcome'] = 'Добро пожаловать';
< $lang['common_logout'] = 'Выход';
< $lang['common_list_of'] = 'Список';
< $lang['common_first_name'] = 'Имя';
< $lang['common_last_name'] = 'Фамилия';
< $lang['common_email'] = 'Электронная почта';
< $lang['common_phone_number'] = 'Номер телефона';
< $lang['common_address_1'] = 'Адрес 1';
< $lang['common_address_2'] = 'Адрес 2';
< $lang['common_city'] = 'Город';
< $lang['common_state'] = 'Штат';
< $lang['common_zip'] = 'Почтовый индекс';
< $lang['common_country'] = 'Страна';
< $lang['common_comments'] = 'Комментарии';
< $lang['common_edit'] = 'редактировать';
< $lang['common_search'] = 'Пойск';
< $lang['common_delete'] = 'Удалить';
< $lang['common_remove'] = 'Снимать';
< $lang['common_view_recent_sales'] = 'Посмотреть Недавние Продажи';
< $lang['common_you_are_using_ospos'] = 'Вы использоваете Open Source Point Of Sale Версия';
< $lang['common_please_visit_my'] = 'пожалуйста, посетите';
< $lang['common_website'] = 'веб-сайт';
< $lang['common_fields_required_message'] = 'Красные пробела обязательно';
< $lang['common_learn_about_project'] = ', чтобы узнать самую последнюю информацию о проекте';
< $lang['common_searched_for'] = 'Искали за';
< $lang['common_first_name_required'] = 'Имя обязательный пробел';
< $lang['common_last_name_required'] = 'Фамилия обязательный пробел';
< $lang['common_email_invalid_format'] = 'Это электронная почта не в нужный формат';
< $lang['common_confirm_search'] = 'Вы выбрали одну или несколько строк, это больше не будет быть выбрано после поиска. Вы уверены, что хотите, чтобы представить этот поиск?';
< $lang['common_no_persons_to_display'] = 'Там нет людей, чтобы отобразить';
< $lang['common_return_policy'] = 'Возвратний полис';
< $lang['common_price'] = 'Цена';
< $lang['common_welcome_message']= 'Добро пожаловать в Open Source Point Of Sale, нажмите модуля ниже, чтобы начать!';
< $lang['common_inv'] = 'инв';
< $lang['common_det'] = 'детали';
< ?>
---
> 
> $lang["common_address_1"] = "Адрес 1";
> $lang["common_address_2"] = "Адрес 2";
> $lang["common_city"] = "Город";
> $lang["common_comments"] = "Комментарии";
> $lang["common_common"] = "общественно";
> $lang["common_confirm_search"] = "Вы выбрали одну или несколько строк, это больше не будет быть выбрано после поиска. Вы уверены, что хотите, чтобы представить этот поиск?";
> $lang["common_country"] = "Страна";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "Удалить";
> $lang["common_print"] = "Print";
> $lang["common_det"] = "детали";
> $lang["common_edit"] = "редактировать";
> $lang["common_email"] = "Электронная почта";
> $lang["common_email_invalid_format"] = "Это электронная почта не в нужный формат";
> $lang["common_fields_required_message"] = "Красные пробела обязательно";
> $lang["common_first_name"] = "Имя";
> $lang["common_first_name_required"] = "Имя обязательный пробел";
> $lang["common_first_page"] = "First";
> $lang["common_gender"] = "Gender";
> $lang["common_gender_female"] = "V";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "инв";
> $lang["common_last_name"] = "Фамилия";
> $lang["common_last_name_required"] = "Фамилия обязательный пробел";
> $lang["common_last_page"] = "Last";
> $lang["common_learn_about_project"] = ", чтобы узнать самую последнюю информацию о проекте";
> $lang["common_list_of"] = "Список";
> $lang["common_logout"] = "Выход";
> $lang["common_new"] = "New";
> $lang["common_no_persons_to_display"] = "Там нет людей, чтобы отобразить";
> $lang["common_or"] = "ИЛИ";
> $lang["common_phone_number"] = "Номер телефона";
> $lang["common_phone_number_required"] = "";
> $lang["common_please_visit_my"] = "пожалуйста, посетите";
> $lang["common_powered_by"] = "самоходные из";
> $lang["common_price"] = "Цена";
> $lang["common_remove"] = "Снимать";
> $lang["common_return_policy"] = "Возвратний полис";
> $lang["common_search"] = "Пойск";
> $lang["common_search_options"] = "Search options";
> $lang["common_searched_for"] = "Искали за";
> $lang["common_state"] = "Штат";
> $lang["common_submit"] = "Подавать";
> $lang["common_view_recent_sales"] = "Посмотреть Недавние Продажи";
> $lang["common_website"] = "веб-сайт";
> $lang["common_welcome"] = "Добро пожаловать";
> $lang["common_welcome_message"] = "Добро пожаловать в Open Source Point Of Sale, нажмите модуля ниже, чтобы начать!";
> $lang["common_you_are_using_ospos"] = "Вы использоваете Open Source Point Of Sale Версия";
> $lang["common_zip"] = "Почтовый индекс";
> $lang["common_import"] = "Import";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/config_lang.php opensourcepos/application/language/ru/config_lang.php
2,36c2,122
< $lang['config_info'] = 'информация о магазин конфигурация';
< $lang['config_company'] = 'Название Компании';
< $lang['config_address'] = 'Адрес Компании';
< $lang['config_phone'] = 'Телефон Компании';
< $lang['config_website'] = 'Веб-сайт';
< $lang['config_fax'] = 'Факс';
< $lang['config_default_tax_rate'] = 'Обычный ставка налога %';
< $lang['config_default_tax_rate_1'] = 'ставка налога 1';
< $lang['config_default_tax_rate_2'] = 'ставка налога 2';
< $lang['config_company_required'] = 'Имя Компании обязательный пробел';
< $lang['config_address_required'] = 'Адрес Компании обязательный пробел';
< $lang['config_phone_required'] = 'Телефон Компании обязательный пробел';
< $lang['config_default_tax_rate_required'] = 'Обычный ставка налога обязательный пробел';
< $lang['config_default_tax_rate_number'] = 'Обычный ставка налога должен быть цифра';
< $lang['config_company_website_url'] = 'Веб-сайт Компании не является допустимым URL (http://...)';
< $lang['config_saved_successfully'] = 'Конфигурация успешно сохранена';
< $lang['config_saved_unsuccessfully'] = 'Конфигурация сохраненная безуспешно';
< $lang['config_return_policy_required'] = 'Возвратний полис обязательный пробел';
< $lang['config_print_after_sale'] = 'Распечатать квитанцию ​​после продажи';
< $lang['config_language'] = 'Язик';
< $lang['config_timezone'] = 'Часовой пояс';
< $lang['config_currency_symbol'] = 'Символ валюты';
< $lang['config_currency_side'] = 'Правая сторона'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Изготовленный пробел 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Изготовленный пробел 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Изготовленный пробел 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Изготовленный пробел 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Изготовленный пробел 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Изготовленный пробел 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Изготовленный пробел 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Изготовленный пробел 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Изготовленный пробел 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Изготовленный пробел 10'; //GARRISON ADDED 4/21/2013
< $lang['config_tax_included'] = 'Tax Included';
< ?>
---
> 
> $lang["config_address"] = "Адрес Компании";
> $lang["config_address_required"] = "Адрес Компании обязательный пробел";
> $lang["config_backup_button"] = "Backup";
> $lang["config_backup_database"] = "Backup Database";
> $lang["config_barcode_company"] = "Название Компании";
> $lang["config_barcode_configuration"] = "Barcode Configuration";
> $lang["config_barcode_content"] = "Barcode Content";
> $lang["config_barcode_first_row"] = "Row 4";
> $lang["config_barcode_font"] = "Font";
> $lang["config_barcode_height"] = "Height (px)";
> $lang["config_barcode_id"] = "Item Id/Name";
> $lang["config_barcode_info"] = "Barcode Configuration Information";
> $lang["config_barcode_layout"] = "Barcode Layout";
> $lang["config_barcode_name"] = "Name";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Number in row";
> $lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
> $lang["config_barcode_page_width"] = "Display page width";
> $lang["config_barcode_price"] = "Price";
> $lang["config_barcode_quality"] = "Quality (1-100)";
> $lang["config_barcode_second_row"] = "Row 5";
> $lang["config_barcode_third_row"] = "Row 6";
> $lang["config_barcode_type"] = "Barcode Type";
> $lang["config_barcode_width"] = "Width (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "Название Компании";
> $lang["config_company_logo"] = "Company Logo";
> $lang["config_company_required"] = "Имя Компании обязательный пробел";
> $lang["config_company_website_url"] = "Веб-сайт Компании не является допустимым URL (http://...)";
> $lang["config_currency_side"] = "Правая сторона";
> $lang["config_currency_symbol"] = "Символ валюты";
> $lang["config_custom1"] = "Изготовленный пробел 1";
> $lang["config_custom10"] = "Изготовленный пробел 10";
> $lang["config_custom2"] = "Изготовленный пробел 2";
> $lang["config_custom3"] = "Изготовленный пробел 3";
> $lang["config_custom4"] = "Изготовленный пробел 4";
> $lang["config_custom5"] = "Изготовленный пробел 5";
> $lang["config_custom6"] = "Изготовленный пробел 6";
> $lang["config_custom7"] = "Изготовленный пробел 7";
> $lang["config_custom8"] = "Изготовленный пробел 8";
> $lang["config_custom9"] = "Изготовленный пробел 9";
> $lang["config_decimal_point"] = " Decimal Point";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Default Sales Discount %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "Обычный ставка налога %";
> $lang["config_default_tax_rate_1"] = "ставка налога 1";
> $lang["config_default_tax_rate_2"] = "ставка налога 2";
> $lang["config_default_tax_rate_number"] = "Обычный ставка налога должен быть цифра";
> $lang["config_default_tax_rate_required"] = "Обычный ставка налога обязательный пробел";
> $lang["config_fax"] = "Факс";
> $lang["config_general_configuration"] = "General Configuration";
> $lang["config_info"] = "информация о магазин конфигурация";
> $lang["config_invoice_default_comments"] = "Default Invoice Comments";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Invoice Printer";
> $lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
> $lang["config_language"] = "Язик";
> $lang["config_lines_per_page"] = "Lines Per Page";
> $lang["config_lines_per_page_number"] = "The lines per page must be a number";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locations";
> $lang["config_location_info"] = "Location Configuration Information";
> $lang["config_logout"] = "Don't you want to make a backup before logging out?";
> $lang["config_number_format"] = "Number Format";
> $lang["config_phone"] = "Телефон Компании";
> $lang["config_phone_required"] = "Телефон Компании обязательный пробел";
> $lang["config_print_bottom_margin"] = "Margin Bottom";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Margin Left";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Margin Right";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Show Print Dialog";
> $lang["config_print_top_margin"] = "Margin Top";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Settings";
> $lang["config_receipt_info"] = "Receipt Configuration Information";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Show Taxes";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "Receivings Invoice Format";
> $lang["config_return_policy_required"] = "Возвратний полис обязательный пробел";
> $lang["config_sales_invoice_format"] = "Sales Invoice Format";
> $lang["config_saved_successfully"] = "Конфигурация успешно сохранена";
> $lang["config_saved_unsuccessfully"] = "Конфигурация сохраненная безуспешно";
> $lang["config_show_total_discount"] = "Show total discount";
> $lang["config_stock_location"] = "Stock location";
> $lang["config_stock_location_duplicate"] = "Please use an unique location name";
> $lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
> $lang["config_stock_location_required"] = "Stock location number is a required field";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "Tax Included";
> $lang["config_thousands_separator"] = "Thousands Separator";
> $lang["config_timezone"] = "Часовой пояс";
> $lang["config_use_invoice_template"] = "Use invoice template";
> $lang["config_website"] = "Веб-сайт";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/customers_lang.php opensourcepos/application/language/ru/customers_lang.php
2,16c2,19
< $lang['customers_new'] = 'Новый Клиент';
< $lang['customers_customer'] = 'Клиент';
< $lang['customers_update'] = 'Обновлять Клиент';
< $lang['customers_confirm_delete'] = 'Вы уверены, что хотите удалить выбранных клиентов?';
< $lang['customers_none_selected'] = 'Вы не выбрали ни клиентов, чтобы удалить.';
< $lang['customers_error_adding_updating'] = 'Ошибка при добавлении/обновлении клиента';
< $lang['customers_successful_adding'] = 'Вы успешно добавили клиентов';
< $lang['customers_successful_updating'] = 'Вы успешно обновили клиент';
< $lang['customers_successful_deleted'] = 'Вы успешно удалили';
< $lang['customers_one_or_multiple'] = 'клиент(ов)';
< $lang['customers_cannot_be_deleted'] = 'Невозможно удалить выбранных клиентов, один или более из них имеет продаж.';
< $lang['customers_basic_information'] = 'Информация о клиенте';
< $lang['customers_account_number'] = 'Номер счота';
< $lang['customers_taxable'] = 'облагаемый';
< ?>
---
> 
> $lang["customers_account_number"] = "Номер счота";
> $lang["customers_account_number_duplicate"] = "This account number is already present in the database";
> $lang["customers_basic_information"] = "Информация о клиенте";
> $lang["customers_cannot_be_deleted"] = "Невозможно удалить выбранных клиентов, один или более из них имеет продаж.";
> $lang["customers_company_name"] = "Company Name";
> $lang["customers_confirm_delete"] = "Вы уверены, что хотите удалить выбранных клиентов?";
> $lang["customers_customer"] = "Клиент";
> $lang["customers_error_adding_updating"] = "Ошибка при добавлении/обновлении клиента";
> $lang["customers_new"] = "Новый Клиент";
> $lang["customers_none_selected"] = "Вы не выбрали ни клиентов, чтобы удалить.";
> $lang["customers_one_or_multiple"] = "клиент(ов)";
> $lang["customers_successful_adding"] = "Вы успешно добавили клиентов";
> $lang["customers_successful_deleted"] = "Вы успешно удалили";
> $lang["customers_successful_updating"] = "Вы успешно обновили клиент";
> $lang["customers_taxable"] = "облагаемый";
> $lang["customers_update"] = "Обновлять Клиент";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/employees_lang.php opensourcepos/application/language/ru/employees_lang.php
2,27c2,28
< $lang['employees_employee'] = 'Сотрудник';
< $lang['employees_new'] = 'Новый Сотрудник';
< $lang['employees_update'] = 'Обновлять Сотрудник';
< $lang['employees_confirm_delete'] = 'Вы уверены, что хотите удалить выбранную сотрудников?';
< $lang['employees_none_selected'] = 'Вы не выбрали ни сотрудников для удаления';
< $lang['employees_error_adding_updating'] = 'Ошибка при добавлении/обновлении сотрудника';
< $lang['employees_successful_adding'] = 'Вы успешно добавили сотрудника';
< $lang['employees_successful_updating'] = 'Вы успешно обновили сотрудника';
< $lang['employees_successful_deleted'] = 'Вы успешно удалили';
< $lang['employees_one_or_multiple'] = 'сотрудник(ов)';
< $lang['employees_cannot_be_deleted'] = 'Не возможно удалить выбранный сотрудников, одного или более работников обработал продаж или вы пытаетесь удалить себя';
< $lang['employees_username'] = 'Имя пользователя';
< $lang['employees_password'] = 'Пароль';
< $lang['employees_repeat_password'] = 'Повторяете пароль';
< $lang['employees_username_required'] = 'Имя пользователи обязательный пробел';
< $lang['employees_username_minlength'] = 'Имя пользователя должна быть не менее 5 символов';
< $lang['employees_password_required'] = 'Пароль обязательно';
< $lang['employees_password_minlength'] = 'Пароль должен быть не менее 8 символов';
< $lang['employees_password_must_match'] = 'Пароли не совпадают';
< $lang['employees_basic_information'] = 'Сотрудник Базовая Информация';
< $lang['employees_login_info'] = 'Информация для сотрудников Входа';
< $lang['employees_permission_info'] = 'Сотрудник разрешениями и правами доступа';
< $lang['employees_permission_desc'] = 'Отметьте флажками ниже, чтобы предоставить доступ к модулям';
< $lang['employees_error_updating_demo_admin'] = 'Вы не можете изменить пользователь демонстрация аккаунт';
< $lang['employees_error_deleting_demo_admin'] = 'Вы не можете удалить пользователь демонстрация аккаунт';
< ?>
---
> 
> $lang["employees_basic_information"] = "Сотрудник Базовая Информация";
> $lang["employees_cannot_be_deleted"] = "Не возможно удалить выбранный сотрудников, одного или более работников обработал продаж или вы пытаетесь удалить себя";
> $lang["employees_confirm_delete"] = "Вы уверены, что хотите удалить выбранную сотрудников?";
> $lang["employees_employee"] = "Сотрудник";
> $lang["employees_error_adding_updating"] = "Ошибка при добавлении/обновлении сотрудника";
> $lang["employees_error_deleting_demo_admin"] = "Вы не можете удалить пользователь демонстрация аккаунт";
> $lang["employees_error_updating_demo_admin"] = "Вы не можете изменить пользователь демонстрация аккаунт";
> $lang["employees_login_info"] = "Информация для сотрудников Входа";
> $lang["employees_new"] = "Новый Сотрудник";
> $lang["employees_none_selected"] = "Вы не выбрали ни сотрудников для удаления";
> $lang["employees_one_or_multiple"] = "сотрудник(ов)";
> $lang["employees_password"] = "Пароль";
> $lang["employees_password_minlength"] = "Пароль должен быть не менее 8 символов";
> $lang["employees_password_must_match"] = "Пароли не совпадают";
> $lang["employees_password_required"] = "Пароль обязательно";
> $lang["employees_permission_desc"] = "Отметьте флажками ниже, чтобы предоставить доступ к модулям";
> $lang["employees_permission_info"] = "Сотрудник разрешениями и правами доступа";
> $lang["employees_repeat_password"] = "Повторяете пароль";
> $lang["employees_successful_adding"] = "Вы успешно добавили сотрудника";
> $lang["employees_successful_deleted"] = "Вы успешно удалили";
> $lang["employees_successful_updating"] = "Вы успешно обновили сотрудника";
> $lang["employees_update"] = "Обновлять Сотрудник";
> $lang["employees_username"] = "Имя пользователя";
> $lang["employees_username_minlength"] = "Имя пользователя должна быть не менее 5 символов";
> $lang["employees_username_required"] = "Имя пользователи обязательный пробел";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/error_lang.php opensourcepos/application/language/ru/error_lang.php
2,4c2,4
< $lang['error_no_permission_module'] = 'У вас нет разрешения на доступ к модуля называется';
< $lang['error_unknown'] = 'неизвестный';
< ?>
---
> 
> $lang["error_no_permission_module"] = "У вас нет разрешения на доступ к модуля называется";
> $lang["error_unknown"] = "неизвестный";
Only in pos-prod/application/language/ru: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/giftcards_lang.php opensourcepos/application/language/ru/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = 'Номер Подарочную карту';
< $lang['giftcards_card_value'] = 'стоимость';
< $lang['giftcards_basic_information'] = 'информация Подарочную карту';
< $lang['giftcards_number_required'] = 'Номер Подарочную карту обязательный пробел';
< $lang['giftcards_value_required'] = 'стоимость Подарочную карту обязательный пробел';
< $lang['giftcards_number'] = 'Номер Подарочную карту должна быть цифрая';
< $lang['giftcards_value'] = 'стоимость Подарочную карту должна быть цифрая';
< $lang['giftcards_person_id'] = 'Клиент';
< $lang['giftcards_retrive_giftcard_info'] = 'находить и подавать информация Подарочную карту';
< $lang['giftcards_description'] = 'Описание';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'UPC база данных';
< $lang['giftcards_cannot_find_giftcard'] = 'Не можете найти любую информацию о Подарочную карту';
< $lang['giftcards_info_provided_by'] = 'Информация предоставлена';
< $lang['giftcards_number_information'] = 'Номер Подарочную карту';
< $lang['giftcards_new'] = 'Новая Подарочная карта';
< $lang['giftcards_update'] = 'Обновлять Подарочная карта';
< $lang['giftcards_giftcard'] = 'Подарочная карта';
< $lang['giftcards_edit_multiple_giftcards'] = 'Редактирование нескольких Подарочные карты';
< $lang['giftcards_category'] = 'категория';
< $lang['giftcards_cost_price'] = 'Оптовая Цена';
< $lang['giftcards_unit_price'] = 'Розничная Цена';
< $lang['giftcards_tax_1'] = 'Налог 1';
< $lang['giftcards_tax_2'] = 'Налог 2';
< $lang['giftcards_sales_tax_1'] = 'Налог с продаж';
< $lang['giftcards_sales_tax_2'] = 'Налог с продаж 2';
< $lang['giftcards_tax_percent'] = 'процент налога';
< $lang['giftcards_tax_percents'] = 'процент налога';
< $lang['giftcards_reorder_level'] = 'минимальный уровень для перезаказ';
< $lang['giftcards_quantity'] = 'Количество';
< $lang['giftcards_no_giftcards_to_display'] = 'Нет Подарочные карты для отображения';
< $lang['giftcards_bulk_edit'] = 'Массовое изменение';
< $lang['giftcards_confirm_delete'] = 'Вы уверены, что хотите удалить выбранную Подарочные карты?';
< $lang['giftcards_none_selected'] = 'Вы не выбрали ни Подарочные карты для редактирования';
< $lang['giftcards_confirm_bulk_edit'] = 'Вы уверены, что хотите редактировать все выбранные Подарочные карты?';
< $lang['giftcards_successful_bulk_edit'] = 'Вы успешно обновили выбранной Подарочные карты';
< $lang['giftcards_error_updating_multiple'] = 'Ошибка при обновлении Подарочные карты';
< $lang['giftcards_edit_fields_you_want_to_update'] = 'Отредактируйте поля вы хотите изменить для всех выбранных Подарочные карты';
< $lang['giftcards_error_adding_updating'] = 'Ошибка при добавлении/обновлении подарочную карту';
< $lang['giftcards_successful_adding'] = 'Вы успешно добавили подарочную карту';
< $lang['giftcards_successful_updating'] = 'Вы успешно обновили подарочную карту';
< $lang['giftcards_successful_deleted'] = 'Вы успешно удален';
< $lang['giftcards_one_or_multiple'] = 'подарочную карту';
< $lang['giftcards_cannot_be_deleted'] = 'Не удалось удалить выбранные подарочные карты, одну или несколько из выбранных подарочные карты имеет продаж.';
< $lang['giftcards_none'] = 'Ни один';
< $lang['giftcards_supplier'] = 'Поставщик';
< $lang['giftcards_generate_barcodes'] = 'Создание штрих-кодов';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'Вы должны выбрать хотя бы 1 подарочная карта для создания штрих-кодов';
< $lang['giftcards_excel_import_failed'] = 'Ошибка импорта Excel';
< $lang['giftcards_allow_alt_description'] = 'Разрешить альтернативные Описание';
< $lang['giftcards_is_serialized'] = 'Подарочная карта имеет серийный номер';
< $lang['giftcards_low_inventory_giftcards'] = 'Низкий Подарочные карты инвентаризации';
< $lang['giftcards_serialized_giftcards'] = 'Сериализованные Подарочные карты';
< $lang['giftcards_no_description_giftcards'] = 'Нет Описание Подарочные карты';
< $lang['giftcards_inventory_comments'] = 'Комментарии';
< $lang['giftcards_count'] = 'Обновление перечня';
< $lang['giftcards_details_count'] = 'Подробная инвентаризация';
< $lang['giftcards_add_minus'] = 'Инвентарь для сложения/вычитания';
< $lang['giftcards_current_quantity'] = 'Токовые';
< $lang['giftcards_quantity_required'] = 'Количество является обязательным полем. Пожалуйста, закройте (X), чтобы отменить';
< $lang['giftcards_do_nothing'] = 'Ничего не делать';
< $lang['giftcards_change_all_to_serialized'] = 'Заменить все в сериализованную';
< $lang['giftcards_change_all_to_unserialized'] = 'Чтобы изменить все десериализуются';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Разрешить альтернативные Описание Для всех';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Не позволяйте Альтернативные Описание Для всех';
< $lang['giftcards_use_inventory_menu'] = 'Используйте меню инвентаря';
< $lang['giftcards_manually_editing_of_quantity'] = 'Руководство Изменить количество';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "Инвентарь для сложения/вычитания";
> $lang["giftcards_allow_alt_description"] = "Разрешить альтернативные Описание";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
> $lang["giftcards_basic_information"] = "информация Подарочную карту";
> $lang["giftcards_bulk_edit"] = "Массовое изменение";
> $lang["giftcards_cannot_be_deleted"] = "Не удалось удалить выбранные подарочные карты, одну или несколько из выбранных подарочные карты имеет продаж.";
> $lang["giftcards_cannot_find_giftcard"] = "Не можете найти любую информацию о Подарочную карту";
> $lang["giftcards_card_value"] = "стоимость";
> $lang["giftcards_category"] = "категория";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "Разрешить альтернативные Описание Для всех";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "Не позволяйте Альтернативные Описание Для всех";
> $lang["giftcards_change_all_to_serialized"] = "Заменить все в сериализованную";
> $lang["giftcards_change_all_to_unserialized"] = "Чтобы изменить все десериализуются";
> $lang["giftcards_confirm_bulk_edit"] = "Вы уверены, что хотите редактировать все выбранные Подарочные карты?";
> $lang["giftcards_confirm_delete"] = "Вы уверены, что хотите удалить выбранную Подарочные карты?";
> $lang["giftcards_cost_price"] = "Оптовая Цена";
> $lang["giftcards_count"] = "Обновление перечня";
> $lang["giftcards_current_quantity"] = "Токовые";
> $lang["giftcards_description"] = "Описание";
> $lang["giftcards_details_count"] = "Подробная инвентаризация";
> $lang["giftcards_do_nothing"] = "Ничего не делать";
> $lang["giftcards_edit_fields_you_want_to_update"] = "Отредактируйте поля вы хотите изменить для всех выбранных Подарочные карты";
> $lang["giftcards_edit_multiple_giftcards"] = "Редактирование нескольких Подарочные карты";
> $lang["giftcards_error_adding_updating"] = "Ошибка при добавлении/обновлении подарочную карту";
> $lang["giftcards_error_updating_multiple"] = "Ошибка при обновлении Подарочные карты";
> $lang["giftcards_excel_import_failed"] = "Ошибка импорта Excel";
> $lang["giftcards_generate_barcodes"] = "Создание штрих-кодов";
> $lang["giftcards_giftcard"] = "Подарочная карта";
> $lang["giftcards_giftcard_number"] = "Номер Подарочную карту";
> $lang["giftcards_info_provided_by"] = "Информация предоставлена";
> $lang["giftcards_inventory_comments"] = "Комментарии";
> $lang["giftcards_is_serialized"] = "Подарочная карта имеет серийный номер";
> $lang["giftcards_low_inventory_giftcards"] = "Низкий Подарочные карты инвентаризации";
> $lang["giftcards_manually_editing_of_quantity"] = "Руководство Изменить количество";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "Вы должны выбрать хотя бы 1 подарочная карта для создания штрих-кодов";
> $lang["giftcards_new"] = "Новая Подарочная карта";
> $lang["giftcards_no_description_giftcards"] = "Нет Описание Подарочные карты";
> $lang["giftcards_no_giftcards_to_display"] = "Нет Подарочные карты для отображения";
> $lang["giftcards_none"] = "Ни один";
> $lang["giftcards_none_selected"] = "Вы не выбрали ни Подарочные карты для редактирования";
> $lang["giftcards_number"] = "Номер Подарочную карту должна быть цифрая";
> $lang["giftcards_number_information"] = "Номер Подарочную карту";
> $lang["giftcards_number_required"] = "Номер Подарочную карту обязательный пробел";
> $lang["giftcards_one_or_multiple"] = "подарочную карту";
> $lang["giftcards_person_id"] = "Клиент";
> $lang["giftcards_quantity"] = "Количество";
> $lang["giftcards_quantity_required"] = "Количество является обязательным полем. Пожалуйста, закройте (X), чтобы отменить";
> $lang["giftcards_reorder_level"] = "минимальный уровень для перезаказ";
> $lang["giftcards_retrive_giftcard_info"] = "находить и подавать информация Подарочную карту";
> $lang["giftcards_sales_tax_1"] = "Налог с продаж";
> $lang["giftcards_sales_tax_2"] = "Налог с продаж 2";
> $lang["giftcards_serialized_giftcards"] = "Сериализованные Подарочные карты";
> $lang["giftcards_successful_adding"] = "Вы успешно добавили подарочную карту";
> $lang["giftcards_successful_bulk_edit"] = "Вы успешно обновили выбранной Подарочные карты";
> $lang["giftcards_successful_deleted"] = "Вы успешно удален";
> $lang["giftcards_successful_updating"] = "Вы успешно обновили подарочную карту";
> $lang["giftcards_supplier"] = "Поставщик";
> $lang["giftcards_tax_1"] = "Налог 1";
> $lang["giftcards_tax_2"] = "Налог 2";
> $lang["giftcards_tax_percent"] = "процент налога";
> $lang["giftcards_tax_percents"] = "процент налога";
> $lang["giftcards_unit_price"] = "Розничная Цена";
> $lang["giftcards_upc_database"] = "UPC база данных";
> $lang["giftcards_update"] = "Обновлять Подарочная карта";
> $lang["giftcards_use_inventory_menu"] = "Используйте меню инвентаря";
> $lang["giftcards_value"] = "стоимость Подарочную карту должна быть цифрая";
> $lang["giftcards_value_required"] = "стоимость Подарочную карту обязательный пробел";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/index.html opensourcepos/application/language/ru/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/item_kits_lang.php opensourcepos/application/language/ru/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = 'Наименование товара комплект';
< $lang['item_kits_description'] = 'Описание товара Комплект';
< $lang['item_kits_no_item_kits_to_display'] = 'Нет товара комплекты для отображения';
< $lang['item_kits_update'] = 'Обновить товар комплекта';
< $lang['item_kits_new'] = 'Новый товар комплект';
< $lang['item_kits_none_selected'] = "Вы не выбрали ни одной товар комплекты";
< $lang['item_kits_info'] = 'Информация о товаре комплекта';
< $lang['item_kits_successful_adding'] = 'Вы успешно добавлен товар комплекта';
< $lang['item_kits_successful_updating'] = 'Вы успешно обновленного товар комплекта';
< $lang['item_kits_error_adding_updating'] = 'Ошибка при добавлении/обновлении товара комплекта';
< $lang['item_kits_successful_deleted'] = 'Вы успешно удален';
< $lang['item_kits_confirm_delete'] = 'Вы уверены, что хотите удалить выбранные товар? комплекты';
< $lang['item_kits_one_or_multiple'] = 'Товара комплект (ы)';
< $lang['item_kits_cannot_be_deleted'] = 'Не могу удалить Товара комплект (ы)';
< $lang['item_kits_add_item'] = 'Добавить товар';
< $lang['item_kits_items'] = 'товары';
< $lang['item_kits_item'] = 'товар';
< $lang['item_kits_quantity'] = 'количество';
< ?>
---
> 
> $lang["item_kits_add_item"] = "Добавить товар";
> $lang["item_kits_cannot_be_deleted"] = "Не могу удалить Товара комплект (ы)";
> $lang["item_kits_confirm_delete"] = "Вы уверены, что хотите удалить выбранные товар? комплекты";
> $lang["item_kits_description"] = "Описание товара Комплект";
> $lang["item_kits_error_adding_updating"] = "Ошибка при добавлении/обновлении товара комплекта";
> $lang["item_kits_info"] = "Информация о товаре комплекта";
> $lang["item_kits_item"] = "товар";
> $lang["item_kits_items"] = "товары";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "Наименование товара комплект";
> $lang["item_kits_new"] = "Новый товар комплект";
> $lang["item_kits_no_item_kits_to_display"] = "Нет товара комплекты для отображения";
> $lang["item_kits_none_selected"] = "Вы не выбрали ни одной товар комплекты";
> $lang["item_kits_one_or_multiple"] = "Товара комплект (ы)";
> $lang["item_kits_quantity"] = "количество";
> $lang["item_kits_successful_adding"] = "Вы успешно добавлен товар комплекта";
> $lang["item_kits_successful_deleted"] = "Вы успешно удален";
> $lang["item_kits_successful_updating"] = "Вы успешно обновленного товар комплекта";
> $lang["item_kits_update"] = "Обновить товар комплекта";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/items_lang.php opensourcepos/application/language/ru/items_lang.php
2,81c2,88
< $lang['items_item_number'] = 'UPC/EAN/ISBN';
< $lang['items_retrive_item_info'] = 'Получить Детальная информация';
< $lang['items_description'] = 'Описание';
< $lang['items_amazon'] = 'Amazon';
< $lang['items_upc_database'] = 'UPC база данных';
< $lang['items_cannot_find_item'] = 'не могу найти любую информацию о товаре';
< $lang['items_info_provided_by'] = 'Информация, представленная';
< $lang['items_basic_information'] = 'информацию о товаре';
< $lang['items_number_information'] = 'Номер Товара';
< $lang['items_new'] = 'Новый Товар';
< $lang['items_update'] = 'Обновить Товар';
< $lang['items_item'] = 'Товар';
< $lang['items_edit_multiple_items'] = 'Редактирование нескольких товаров';
< $lang['items_name'] = 'название товара';
< $lang['items_category'] = 'Категория';
< $lang['items_cost_price'] = 'Оптовая Цена';//GARRISON ADDED 4/21/2013
< $lang['items_unit_price'] = 'Розничная Цена';//GARRISON ADDED 4/21/2013
< $lang['items_tax_1'] = 'Налог 1';
< $lang['items_tax_2'] = 'Налог 2';
< $lang['items_sales_tax_1'] = 'Налог на покупку';
< $lang['items_sales_tax_2'] = 'Налог на покупку 2';
< $lang['items_tax_percent'] = 'процент налога';
< $lang['items_tax_percents'] = 'процент налога(и)';
< $lang['items_reorder_level'] = 'Минимальный уровень перед заказом';
< $lang['items_quantity'] = 'Количество';
< $lang['items_reorder_level'] = 'Минимальный уровень перед заказом';
< $lang['items_no_items_to_display'] = 'Нет товаров для отображения';
< $lang['items_bulk_edit'] = 'Массовое изменение';
< $lang['items_confirm_delete'] = 'Вы уверены, что хотите удалить выбранные товари?';
< $lang['items_none_selected'] = 'Вы не выбрали ни одной товари для редактирования';
< $lang['items_confirm_bulk_edit'] = 'Вы уверены, что хотите редактировать все товари выбраны?';
< $lang['items_successful_bulk_edit'] = 'Вы успешно обновили выбранных товаров';
< $lang['items_error_updating_multiple'] = 'Ошибка при обновлении товаров';
< $lang['items_edit_fields_you_want_to_update'] = 'Отредактируйте пробела вы хотите изменить для всех выбранных товаров';
< $lang['items_error_adding_updating'] = 'Ошибка при добавлении/обновлении товара';
< $lang['items_successful_adding'] = 'Вы успешно добавлен товар';
< $lang['items_successful_updating'] = 'Вы успешно обновленного товара';
< $lang['items_successful_deleted'] = 'Вы успешно удалили';
< $lang['items_one_or_multiple'] = 'товар(а)';
< $lang['items_cannot_be_deleted'] = 'Невозможно удалить выбранные товари, один или более из выбранных товаров имеет продаж.';
< $lang['items_name_required'] = 'Название товара обязательное пробелья';
< $lang['items_category_required'] = 'Категория обязательное пробелья';
< $lang['items_buy_price_required'] = 'Цена покупки обязательное пробелья';
< $lang['items_unit_price_required'] = 'Розничная цена обязательное пробелья';
< $lang['items_cost_price_required'] = 'Оптовая цена обязательное пробелья';
< $lang['items_tax_percent_required'] = 'Процент Налоги обязательное пробелья';
< $lang['items_quantity_required'] = 'Количество обязательное пробелья';
< $lang['items_reorder_level_required'] = 'Минимальный уровень перед заказом обязательное пробелья';
< $lang['items_unit_price_number'] = 'Розничная Цена должно быть число';
< $lang['items_cost_price_number'] = 'Оптовая цена должно быть число';
< $lang['items_quantity_number'] = 'Количество должно быть число';
< $lang['items_reorder_level_number'] = 'Минимальный уровень перед заказом должно быть число';
< $lang['items_none'] = 'Ничего';
< $lang['items_supplier'] = 'Поставщик';
< $lang['items_generate_barcodes'] = 'Создайте штрих-кодов';
< $lang['items_must_select_item_for_barcode'] = 'Вы должны выбрать хотя бы 1 товар для создания штрих-кодов';
< $lang['items_excel_import_failed'] = 'Ошибка импорта Excel';
< $lang['items_allow_alt_description'] = 'Разрешить альтернативные описания';
< $lang['items_is_serialized'] = 'Товар имеет серийный номер';
< $lang['items_low_inventory_items'] = 'Низкий инвентаризации товары';
< $lang['items_serialized_items'] = 'Сериализованные товары';
< $lang['items_no_description_items'] = 'без Описание товары';
< $lang['items_search_custom_items'] = 'Искать в дополнительных товарях';//GARRISON ADDED
< $lang['items_inventory_comments'] = 'Комментарии';
< $lang['items_count'] = 'Обновление инвентории';
< $lang['items_details_count'] = 'детали инвентаризацего количество';
< $lang['items_add_minus'] = 'Инвентарь для сложения/вычитания';
< $lang['items_current_quantity'] = 'Количество Сейчас';
< $lang['items_quantity_required'] = 'Количество обязательное пробелья. Пожалуйста, закройте (X), чтобы отменить';
< $lang['items_do_nothing'] = 'Ничего не делать';
< $lang['items_change_all_to_serialized'] = 'Изменить все в сериализованную';
< $lang['items_change_all_to_unserialized'] = 'Изменить все в несериализованную';
< $lang['items_change_all_to_allow_alt_desc'] = 'Разрешить альтернативные Описание для всех';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Не разрешить альтернативные Описание для всех';
< $lang['items_use_inventory_menu'] = 'Используйте меню инвентаря';
< $lang['items_manually_editing_of_quantity'] = 'Руководство Изменить количество';
< $lang['items_inventory'] = 'инвентаризация';
< $lang['items_location'] = 'место';
< $lang['items_is_deleted'] = 'Deleted';// Parq 131215
< ?>
---
> 
> $lang["items_add_minus"] = "Инвентарь для сложения/вычитания";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "Разрешить альтернативные описания";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "информацию о товаре";
> $lang["items_bulk_edit"] = "Массовое изменение";
> $lang["items_buy_price_required"] = "Цена покупки обязательное пробелья";
> $lang["items_cannot_be_deleted"] = "Невозможно удалить выбранные товари, один или более из выбранных товаров имеет продаж.";
> $lang["items_cannot_find_item"] = "не могу найти любую информацию о товаре";
> $lang["items_category"] = "Категория";
> $lang["items_category_required"] = "Категория обязательное пробелья";
> $lang["items_change_all_to_allow_alt_desc"] = "Разрешить альтернативные Описание для всех";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Не разрешить альтернативные Описание для всех";
> $lang["items_change_all_to_serialized"] = "Изменить все в сериализованную";
> $lang["items_change_all_to_unserialized"] = "Изменить все в несериализованную";
> $lang["items_confirm_bulk_edit"] = "Вы уверены, что хотите редактировать все товари выбраны?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "Вы уверены, что хотите удалить выбранные товари?";
> $lang["items_cost_price"] = "Оптовая Цена";
> $lang["items_cost_price_number"] = "Оптовая цена должно быть число";
> $lang["items_cost_price_required"] = "Оптовая цена обязательное пробелья";
> $lang["items_count"] = "Обновление инвентории";
> $lang["items_current_quantity"] = "Количество Сейчас";
> $lang["items_description"] = "Описание";
> $lang["items_details_count"] = "детали инвентаризацего количество";
> $lang["items_do_nothing"] = "Ничего не делать";
> $lang["items_edit_fields_you_want_to_update"] = "Отредактируйте пробела вы хотите изменить для всех выбранных товаров";
> $lang["items_edit_multiple_items"] = "Редактирование нескольких товаров";
> $lang["items_error_adding_updating"] = "Ошибка при добавлении/обновлении товара";
> $lang["items_error_updating_multiple"] = "Ошибка при обновлении товаров";
> $lang["items_excel_import_failed"] = "Ошибка импорта Excel";
> $lang["items_generate_barcodes"] = "Создайте штрих-кодов";
> $lang["items_image"] = "Avatar";
> $lang["items_info_provided_by"] = "Информация, представленная";
> $lang["items_inventory"] = "инвентаризация";
> $lang["items_inventory_comments"] = "Комментарии";
> $lang["items_is_deleted"] = "Deleted";
> $lang["items_is_serialized"] = "Товар имеет серийный номер";
> $lang["items_item"] = "Товар";
> $lang["items_item_number"] = "UPC/EAN/ISBN";
> $lang["items_item_number_duplicate"] = "The item number is already present in the database";
> $lang["items_location"] = "место";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "Низкий инвентаризации товары";
> $lang["items_manually_editing_of_quantity"] = "Руководство Изменить количество";
> $lang["items_must_select_item_for_barcode"] = "Вы должны выбрать хотя бы 1 товар для создания штрих-кодов";
> $lang["items_name"] = "название товара";
> $lang["items_name_required"] = "Название товара обязательное пробелья";
> $lang["items_new"] = "Новый Товар";
> $lang["items_no_description_items"] = "без Описание товары";
> $lang["items_no_items_to_display"] = "Нет товаров для отображения";
> $lang["items_none"] = "Ничего";
> $lang["items_none_selected"] = "Вы не выбрали ни одной товари для редактирования";
> $lang["items_number_information"] = "Номер Товара";
> $lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
> $lang["items_one_or_multiple"] = "товар(а)";
> $lang["items_quantity"] = "Количество";
> $lang["items_quantity_number"] = "Количество должно быть число";
> $lang["items_quantity_required"] = "Количество обязательное пробелья";
> $lang["items_receiving_quantity"] = "Receiving quantity";
> $lang["items_reorder_level"] = "Минимальный уровень перед заказом";
> $lang["items_reorder_level_number"] = "Минимальный уровень перед заказом должно быть число";
> $lang["items_reorder_level_required"] = "Минимальный уровень перед заказом обязательное пробелья";
> $lang["items_retrive_item_info"] = "Получить Детальная информация";
> $lang["items_sales_tax_1"] = "Налог на покупку";
> $lang["items_sales_tax_2"] = "Налог на покупку 2";
> $lang["items_search_custom_items"] = "Искать в дополнительных товарях";
> $lang["items_serialized_items"] = "Сериализованные товары";
> $lang["items_stock_location"] = "Stock location";
> $lang["items_successful_adding"] = "Вы успешно добавлен товар";
> $lang["items_successful_bulk_edit"] = "Вы успешно обновили выбранных товаров";
> $lang["items_successful_deleted"] = "Вы успешно удалили";
> $lang["items_successful_updating"] = "Вы успешно обновленного товара";
> $lang["items_supplier"] = "Поставщик";
> $lang["items_tax_1"] = "Налог 1";
> $lang["items_tax_2"] = "Налог 2";
> $lang["items_tax_percent"] = "процент налога";
> $lang["items_tax_percent_required"] = "Процент Налоги обязательное пробелья";
> $lang["items_tax_percents"] = "процент налога(и)";
> $lang["items_unit_price"] = "Розничная Цена";
> $lang["items_unit_price_number"] = "Розничная Цена должно быть число";
> $lang["items_unit_price_required"] = "Розничная цена обязательное пробелья";
> $lang["items_upc_database"] = "UPC база данных";
> $lang["items_update"] = "Обновить Товар";
> $lang["items_use_inventory_menu"] = "Используйте меню инвентаря";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/login_lang.php opensourcepos/application/language/ru/login_lang.php
2,8c2,8
< $lang['login_login'] = 'Вход';
< $lang['login_username'] = 'Имя';
< $lang['login_password'] = 'Пароль';
< $lang['login_go'] = 'ходите';
< $lang['login_invalid_username_and_password'] = 'Неправелная Имя/Пароль';
< $lang['login_welcome_message'] = 'Добро пожаловать в Open Source Point of Sale. Чтобы продолжить, пожалуйста войдите на сайт, используя имя и пароль.';
< ?>
---
> 
> $lang["login_go"] = "ходите";
> $lang["login_invalid_username_and_password"] = "Неправелная Имя/Пароль";
> $lang["login_login"] = "Вход";
> $lang["login_password"] = "Пароль";
> $lang["login_username"] = "Имя";
> $lang["login_welcome_message"] = "Добро пожаловать в Open Source Point of Sale. Чтобы продолжить, пожалуйста войдите на сайт, используя имя и пароль.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/module_lang.php opensourcepos/application/language/ru/module_lang.php
2d1
< $lang['module_home'] = 'Дома';
4,34c3,23
< $lang['module_customers'] = 'Клиенты';
< $lang['module_customers_desc'] = 'Добавление, обновление, удаление и поиск клиентов';
< 
< $lang['module_suppliers'] = 'Поставщики';
< $lang['module_suppliers_desc'] = 'Добавление, обновление, удаление и поиск suppliers';
< 
< $lang['module_employees'] = 'Сотрудники';
< $lang['module_employees_desc'] = 'Добавление, обновление, удаление и поиск сотрудники';
< 
< $lang['module_sales'] = 'Продажа';
< $lang['module_sales_desc'] = 'Процесс продажи и возвращается';
< 
< $lang['module_reports'] = 'Отчеты';
< $lang['module_reports_desc'] = 'Просмотр и создание отчетов';
< 
< $lang['module_items'] = 'Товары';
< $lang['module_items_desc'] = 'Добавление, обновление, удаление и поиск товары';
< 
< $lang['module_config'] = 'Конфигурацию магазина';
< $lang['module_config_desc'] = 'Изменить конфигурацию магазина';
< 
< $lang['module_receivings'] = 'получении';
< $lang['module_receivings_desc'] = 'Процесс покупки заказов';
< 
< $lang['module_giftcards'] = 'Подарочные карты';
< $lang['module_giftcards_desc'] = 'Добавление, обновление, удаление и поиск подарочные карты';
< 
< $lang['module_item_kits'] = 'товара комплекти';
< $lang['module_item_kits_desc'] = 'Добавление, обновление, удаление и поиск товара комплекти';
< 
< ?>
---
> $lang["module_config"] = "Конфигурацию магазина";
> $lang["module_config_desc"] = "Изменить конфигурацию магазина";
> $lang["module_customers"] = "Клиенты";
> $lang["module_customers_desc"] = "Добавление, обновление, удаление и поиск клиентов";
> $lang["module_employees"] = "Сотрудники";
> $lang["module_employees_desc"] = "Добавление, обновление, удаление и поиск сотрудники";
> $lang["module_giftcards"] = "Подарочные карты";
> $lang["module_giftcards_desc"] = "Добавление, обновление, удаление и поиск подарочные карты";
> $lang["module_home"] = "Дома";
> $lang["module_item_kits"] = "товара комплекти";
> $lang["module_item_kits_desc"] = "Добавление, обновление, удаление и поиск товара комплекти";
> $lang["module_items"] = "Товары";
> $lang["module_items_desc"] = "Добавление, обновление, удаление и поиск товары";
> $lang["module_receivings"] = "получении";
> $lang["module_receivings_desc"] = "Процесс покупки заказов";
> $lang["module_reports"] = "Отчеты";
> $lang["module_reports_desc"] = "Просмотр и создание отчетов";
> $lang["module_sales"] = "Продажа";
> $lang["module_sales_desc"] = "Процесс продажи и возвращается";
> $lang["module_suppliers"] = "Поставщики";
> $lang["module_suppliers_desc"] = "Добавление, обновление, удаление и поиск suppliers";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/receivings_lang.php opensourcepos/application/language/ru/receivings_lang.php
2,26c2,51
< $lang['recvs_register'] = 'Получение товаров';
< $lang['recvs_mode'] = 'получая режим';
< $lang['recvs_receiving'] = 'получать';
< $lang['recvs_return'] = 'возвращать';
< $lang['recvs_total'] = 'сумма';
< $lang['recvs_cost'] = 'стоимость';
< $lang['recvs_quantity'] = 'Кол-во.';
< $lang['recvs_discount'] = 'Скидка %';
< $lang['recvs_edit'] = 'редактировать';
< $lang['recvs_new_supplier'] = 'Новый поставщик';
< $lang['recvs_supplier'] = 'поставщик';
< $lang['recvs_select_supplier'] = 'Выберите поставщика (необязательно)';
< $lang['recvs_start_typing_supplier_name'] = 'Начните вводить название поставщика...';
< $lang['recvs_unable_to_add_item'] = 'Невозможно добавить товар на получение';
< $lang['recvs_error_editing_item'] = 'Ошибка редактирования товар';
< $lang['recvs_receipt'] = 'квитанция о получении';
< $lang['recvs_complete_receiving'] = 'заканчивать';
< $lang['recvs_confirm_finish_receiving'] = 'Вы уверены, что хотите представить это получение? Это не может быть отменено.';
< $lang['recvs_confirm_cancel_receiving'] = 'Вы уверены, что хотите удалить это получение? Все детали будут очищены.';
< $lang['recvs_find_or_scan_item'] = 'Найти/Сканировать товар';
< $lang['recvs_find_or_scan_item_or_receipt'] = 'Найти/Сканировать товар ИЛИ квитанция';
< $lang['recvs_id'] = 'получение ID';
< $lang['recvs_item_name'] = 'Название товара';
< $lang['receivings_transaction_failed'] = 'Ошибка Получение транзакции';
< ?>
---
> 
> $lang["receivings_transaction_failed"] = "Ошибка Получение транзакции";
> $lang["recvs_basic_information"] = "";
> $lang["recvs_cancel_receiving"] = "";
> $lang["recvs_cannot_be_deleted"] = "";
> $lang["recvs_comments"] = "";
> $lang["recvs_complete_receiving"] = "заканчивать";
> $lang["recvs_confirm_cancel_receiving"] = "Вы уверены, что хотите удалить это получение? Все детали будут очищены.";
> $lang["recvs_confirm_finish_receiving"] = "Вы уверены, что хотите представить это получение? Это не может быть отменено.";
> $lang["recvs_cost"] = "стоимость";
> $lang["recvs_date"] = "";
> $lang["recvs_date_required"] = "";
> $lang["recvs_date_type"] = "";
> $lang["recvs_delete_confirmation"] = "";
> $lang["recvs_delete_entire_sale"] = "Delete entire sale";
> $lang["recvs_discount"] = "Скидка %";
> $lang["recvs_edit"] = "редактировать";
> $lang["recvs_edit_sale"] = "Edit Receiving";
> $lang["recvs_employee"] = "Employee";
> $lang["recvs_error_editing_item"] = "Ошибка редактирования товар";
> $lang["recvs_error_requisition"] = "";
> $lang["recvs_find_or_scan_item"] = "Найти/Сканировать товар";
> $lang["recvs_find_or_scan_item_or_receipt"] = "Найти/Сканировать товар ИЛИ квитанция";
> $lang["recvs_id"] = "получение ID";
> $lang["recvs_invoice_enable"] = "Create Invoice";
> $lang["recvs_invoice_number"] = "";
> $lang["recvs_invoice_number_duplicate"] = "";
> $lang["recvs_item_name"] = "Название товара";
> $lang["recvs_mode"] = "получая режим";
> $lang["recvs_new_supplier"] = "Новый поставщик";
> $lang["recvs_one_or_multiple"] = "";
> $lang["recvs_print_after_sale"] = "Распечатать квитанцию ​​после продажи";
> $lang["recvs_quantity"] = "Кол-во.";
> $lang["recvs_receipt"] = "квитанция о получении";
> $lang["recvs_receipt_number"] = "";
> $lang["recvs_receiving"] = "получать";
> $lang["recvs_register"] = "Получение товаров";
> $lang["recvs_requisition"] = "";
> $lang["recvs_return"] = "возвращать";
> $lang["recvs_select_supplier"] = "Выберите поставщика (необязательно)";
> $lang["recvs_start_typing_supplier_name"] = "Начните вводить название поставщика...";
> $lang["recvs_stock_destination"] = "Stock destination";
> $lang["recvs_stock_locaiton"] = "Stock location";
> $lang["recvs_stock_source"] = "Stock source";
> $lang["recvs_successfully_deleted"] = "You have successfully deleted";
> $lang["recvs_successfully_updated"] = "Receiving successfully updated";
> $lang["recvs_supplier"] = "поставщик";
> $lang["recvs_total"] = "сумма";
> $lang["recvs_unable_to_add_item"] = "Невозможно добавить товар на получение";
> $lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/reports_lang.php opensourcepos/application/language/ru/reports_lang.php
2,88c2,108
< $lang['reports_reports'] = 'Отчеты';
< $lang['reports_report'] = 'Отчет';
< $lang['reports_welcome_message'] = 'Добро пожаловать в панель отчетов. Пожалуйста, выберите отчет для просмотра.';
< $lang['reports_sales_summary_report'] = 'Продажи Сводный отчет';
< $lang['reports_categories_summary_report'] = 'Сводный отчет Категории';
< $lang['reports_customers_summary_report'] = 'Сводный отчет клиентов';
< $lang['reports_suppliers_summary_report'] = 'Сводный отчет Поставщики';
< $lang['reports_items_summary_report'] = 'Сводный отчет товары';
< $lang['reports_employees_summary_report'] = 'Сводный отчет Сотрудники';
< $lang['reports_taxes_summary_report'] = 'Сводный отчет налоги';
< $lang['reports_date'] = 'число';
< $lang['reports_name'] = 'название';
< $lang['reports_quantity_purchased'] = 'купенный количество';
< $lang['reports_sale_id'] = 'ID Продажа';
< $lang['reports_items_purchased'] = 'купенный товары';
< $lang['reports_sold_by'] = 'Продавал через';
< $lang['reports_sold_to'] = 'Продано к';
< $lang['reports_category'] = 'категория';
< $lang['reports_customer'] = 'клиент';
< $lang['reports_employee'] = 'Сотрудник';
< $lang['reports_item'] = 'товар';
< $lang['reports_items'] = 'товары';
< $lang['reports_supplier'] = 'Поставщик';
< $lang['reports_employees'] = 'Сотрудники';
< $lang['reports_subtotal'] = 'Промежуточная сумма';
< $lang['reports_total'] = 'сумма';
< $lang['reports_tax'] = 'налог';
< $lang['reports_profit'] = 'прибыль';
< $lang['reports_report_input'] = 'отчет входного';
< $lang['reports_type'] = 'тип';
< $lang['reports_date_range'] = 'размах числа';
< $lang['reports_today'] = 'сегодня';
< $lang['reports_yesterday'] = 'вчера';
< $lang['reports_last_7'] = 'Последние 7 дней';
< $lang['reports_this_month'] = 'В этом месяце';
< $lang['reports_last_month'] = 'Последний месяц';
< $lang['reports_this_year'] = 'В этом году'; 
< $lang['reports_last_year'] = 'в прошлом году';
< $lang['reports_all_time'] = 'за все время';
< $lang['reports_detailed_sales_report'] = 'Подробный отчет о продажах';
< $lang['reports_comments'] = 'Комментарии';
< $lang['reports_discount'] = 'скидка';
< $lang['reports_payment_type'] = 'Вид оплаты';
< $lang['reports_sales'] = 'Продажа'; 
< $lang['reports_categories'] = 'Категории';
< $lang['reports_customers'] = 'Клиенты';
< $lang['reports_suppliers'] = 'Поставщики';
< $lang['reports_items'] = 'Товары';
< $lang['reports_employees'] = 'Сотрудники';
< $lang['reports_taxes'] = 'Налоги';
< $lang['reports_customer'] = 'Клиент';
< $lang['reports_employee'] = 'Сотрудник';
< $lang['reports_tax_percent'] = 'процент налога';
< $lang['reports_quantity_purchased'] = 'покупенно количества';
< $lang['reports_serial_number'] = 'серийный номер';
< $lang['reports_description'] = 'описание';
< $lang['reports_date'] = 'число';
< $lang['reports_sales_amount'] = 'сумма продаж';
< $lang['reports_revenue'] = 'доход';
< $lang['reports_discounts'] = 'Скидки';
< $lang['reports_discounts_summary_report'] = 'Скидки Сводный отчет';
< $lang['reports_discount_percent'] = 'процентную скидку';
< $lang['reports_count'] = 'подсчет';
< $lang['reports_summary_reports'] = 'Сводные отчеты';
< $lang['reports_graphical_reports'] = 'графических отчетов';
< $lang['reports_detailed_reports'] = 'Подробные отчеты';
< $lang['reports_inventory_reports'] = 'Инвентаризация Отчеты';
< $lang['reports_low_inventory'] = 'Низкий инвентаризации';
< $lang['reports_inventory_summary'] = ' Сводка инвентаризации';
< $lang['reports_item_number'] = 'Номер Товара';
< $lang['reports_reorder_level'] = 'минимальный уровень';
< $lang['reports_low_inventory_report'] = 'отчет Низкии инвентаризации';
< $lang['reports_item_name'] = 'Название товара';
< $lang['reports_inventory_summary_report'] = 'Отчет Сводка инвентаризации';
< $lang['reports_payment_type'] = 'Вид оплаты';
< $lang['reports_payments_summary_report'] = 'Платежей Сводный отчет';
< $lang['reports_payments'] = 'Оплаты';
< $lang['reports_receivings'] = 'Получении';
< $lang['reports_received_by'] = 'получило за';
< $lang['reports_supplied_by'] = 'Поставлял за';
< $lang['reports_items_received'] = 'полученные Товары';
< $lang['reports_detailed_receivings_report'] = 'Детальный отчет о поступлениях';
< $lang['reports_sale_type'] = 'Вид Продажи';
< $lang['reports_all'] = 'все';
< $lang['reports_returns'] = 'Возвраты';
< $lang['reports_discount'] = 'A discount greater than ';
< ?>
---
> 
> $lang["reports_all"] = "все";
> $lang["reports_all_time"] = "за все время";
> $lang["reports_categories"] = "Категории";
> $lang["reports_categories_summary_report"] = "Сводный отчет Категории";
> $lang["reports_category"] = "категория";
> $lang["reports_comments"] = "Комментарии";
> $lang["reports_count"] = "подсчет";
> $lang["reports_customer"] = "клиент";
> $lang["reports_customers"] = "Клиенты";
> $lang["reports_customers_summary_report"] = "Сводный отчет клиентов";
> $lang["reports_date"] = "число";
> $lang["reports_date_range"] = "размах числа";
> $lang["reports_description"] = "описание";
> $lang["reports_detailed_receivings_report"] = "Детальный отчет о поступлениях";
> $lang["reports_detailed_reports"] = "Подробные отчеты";
> $lang["reports_detailed_requisition_report"] = "";
> $lang["reports_detailed_sales_report"] = "Подробный отчет о продажах";
> $lang["reports_discount"] = "скидка";
> $lang["reports_discount_percent"] = "процентную скидку";
> $lang["reports_discounts"] = "Скидки";
> $lang["reports_discounts_summary_report"] = "Скидки Сводный отчет";
> $lang["reports_employee"] = "Сотрудник";
> $lang["reports_employees"] = "Сотрудники";
> $lang["reports_employees_summary_report"] = "Сводный отчет Сотрудники";
> $lang["reports_graphical_reports"] = "графических отчетов";
> $lang["reports_inventory"] = "";
> $lang["reports_inventory_low"] = "Низкий инвентаризации";
> $lang["reports_inventory_low_report"] = "отчет Низкии инвентаризации";
> $lang["reports_inventory_reports"] = "Инвентаризация Отчеты";
> $lang["reports_inventory_summary"] = " Сводка инвентаризации";
> $lang["reports_inventory_summary_report"] = "Отчет Сводка инвентаризации";
> $lang["reports_item"] = "товар";
> $lang["reports_item_name"] = "Название товара";
> $lang["reports_item_number"] = "Номер Товара";
> $lang["reports_items"] = "товары";
> $lang["reports_items_purchased"] = "купенный товары";
> $lang["reports_items_received"] = "полученные Товары";
> $lang["reports_items_summary_report"] = "Сводный отчет товары";
> $lang["reports_last_7"] = "Последние 7 дней";
> $lang["reports_last_month"] = "Последний месяц";
> $lang["reports_last_year"] = "в прошлом году";
> $lang["reports_low_inventory"] = "";
> $lang["reports_low_inventory_report"] = "";
> $lang["reports_name"] = "название";
> $lang["reports_payment_type"] = "Вид оплаты";
> $lang["reports_payments"] = "Оплаты";
> $lang["reports_payments_summary_report"] = "Платежей Сводный отчет";
> $lang["reports_profit"] = "прибыль";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "купенный количество";
> $lang["reports_received_by"] = "получило за";
> $lang["reports_receiving_id"] = "";
> $lang["reports_receiving_type"] = "";
> $lang["reports_receivings"] = "Получении";
> $lang["reports_reorder_level"] = "минимальный уровень";
> $lang["reports_report"] = "Отчет";
> $lang["reports_report_input"] = "отчет входного";
> $lang["reports_reports"] = "Отчеты";
> $lang["reports_requisition"] = "";
> $lang["reports_requisition_by"] = "";
> $lang["reports_requisition_id"] = "";
> $lang["reports_requisition_item"] = "";
> $lang["reports_requisition_item_quantity"] = "";
> $lang["reports_requisition_related_item"] = "";
> $lang["reports_requisition_related_item_total_quantity"] = "";
> $lang["reports_requisition_related_item_unit_quantity"] = "";
> $lang["reports_requisitions"] = "";
> $lang["reports_returns"] = "Возвраты";
> $lang["reports_revenue"] = "доход";
> $lang["reports_sale_id"] = "ID Продажа";
> $lang["reports_sale_type"] = "Вид Продажи";
> $lang["reports_sales"] = "Продажа";
> $lang["reports_sales_amount"] = "сумма продаж";
> $lang["reports_sales_summary_report"] = "Продажи Сводный отчет";
> $lang["reports_serial_number"] = "серийный номер";
> $lang["reports_sold_by"] = "Продавал через";
> $lang["reports_sold_to"] = "Продано к";
> $lang["reports_stock_location"] = "";
> $lang["reports_subtotal"] = "Промежуточная сумма";
> $lang["reports_summary_reports"] = "Сводные отчеты";
> $lang["reports_supplied_by"] = "Поставлял за";
> $lang["reports_supplier"] = "Поставщик";
> $lang["reports_suppliers"] = "Поставщики";
> $lang["reports_suppliers_summary_report"] = "Сводный отчет Поставщики";
> $lang["reports_tax"] = "налог";
> $lang["reports_tax_percent"] = "процент налога";
> $lang["reports_taxes"] = "Налоги";
> $lang["reports_taxes_summary_report"] = "Сводный отчет налоги";
> $lang["reports_this_month"] = "В этом месяце";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "В этом году";
> $lang["reports_today"] = "сегодня";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "сумма";
> $lang["reports_type"] = "тип";
> $lang["reports_welcome_message"] = "Добро пожаловать в панель отчетов. Пожалуйста, выберите отчет для просмотра.";
> $lang["reports_yesterday"] = "вчера";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "Оптовая Цена";
> $lang["reports_unit_price"] = "Розничная Цена";
> $lang["reports_sub_total_value"] = "промежуточный итог";
> $lang["reports_total_inventory_value"] = "Total Inventory Value";
> $lang["reports_zero_and_less"] = "Zero and less";
> $lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/sales_lang.php opensourcepos/application/language/ru/sales_lang.php
2,86c2,117
< $lang['sales_giftcard_number'] = 'Номер подарочных карт';
< $lang['sales_giftcard'] = 'Подарочная карта';
< $lang['sales_register'] = 'Продажи журнала';
< $lang['sales_mode'] = 'режим журнала';
< $lang['sales_new_item'] = 'Новый Товар';
< $lang['sales_item_name'] = 'Название товара';
< $lang['sales_item_number'] = 'Номер товара';
< $lang['sales_new_customer'] = 'Новый клиент';
< $lang['sales_customer'] = 'клиент';
< $lang['sales_no_items_in_cart'] = 'Там нет товаров в корзине';
< $lang['sales_total'] = 'сумма';
< $lang['sales_tax_percent'] = 'Налоговые %';
< $lang['sales_price'] = 'цена';
< $lang['sales_quantity'] = 'Кол-во.';
< $lang['sales_discount'] = 'скидка %';
< $lang['sales_edit'] = 'редактировать';
< $lang['sales_payment'] = 'Вид оплаты';
< $lang['sales_edit_item'] = 'Редактировать Товар';
< $lang['sales_find_or_scan_item'] = 'Найти/Сканировать Товара';
< $lang['sales_find_or_scan_item_or_receipt'] = 'Найти/Сканировать Товара ИЛИ Квитанция';
< $lang['sales_select_customer'] = 'Выберите клиента (необязательно)';
< $lang['sales_start_typing_item_name'] = 'Начните печатать название товара или сканировайте штрих-кода...';
< $lang['sales_start_typing_customer_name'] = 'Начните печатать название клиента...';
< $lang['sales_sub_total'] = 'промежуточный итог';
< $lang['sales_tax'] = 'налог';
< $lang['sales_comment'] = 'комментировать';
< $lang['sales_unable_to_add_item'] = 'Невозможно добавить товар продажи';
< $lang['sales_sale_for_customer'] = 'Клиент:';
< $lang['sales_remove_customer'] = 'Удалите клиентов';
< $lang['sales_error_editing_item'] = 'Ошибка редактирования товара';
< $lang['sales_complete_sale'] = 'Завершить продажу';
< $lang['sales_cancel_sale'] = 'Отменить продажу';
< $lang['sales_add_payment'] = 'Добавить оплаты';
< $lang['sales_receipt'] = 'товарный чек';
< $lang['sales_receipt_number']='POS #';
< $lang['sales_id'] = 'Номер Продажы';
< $lang['sales_sale'] = 'Продажа';
< $lang['sales_return'] = 'возвращать';
< $lang['sales_confirm_finish_sale'] = 'Вы уверены, что хотите заверщить эту продажу? Не может быть отменено.';
< $lang['sales_confirm_cancel_sale'] = 'Вы уверены, что хотите удалить эту продажу? Все детали будут очищены.';
< $lang['sales_cash'] = 'наличные деньги';
< $lang['sales_check'] = 'банковский чек';
< $lang['sales_debit'] = 'Дебетовая карта';
< $lang['sales_credit'] = 'кредитная карта';
< $lang['sales_giftcard'] = 'Подарочная карта';
< $lang['sales_amount_tendered'] = 'предложенная сумма';
< $lang['sales_change_due'] = 'сдача должное';
< $lang['sales_payment_not_cover_total'] = 'оплачиваемая сумма недостаточно';
< $lang['sales_transaction_failed'] = 'Транзакция не удалось';
< $lang['sales_must_enter_numeric'] = 'числовое значение необходимое для предложенная сумма';
< $lang['sales_must_enter_numeric_giftcard'] = 'числовое значение необходимое для число подарочную карту';
< $lang['sales_serial'] = 'серийный номер';
< $lang['sales_description_abbrv'] = 'описание';
< $lang['sales_item_out_of_stock'] = 'Товар распродано';
< $lang['sales_item_insufficient_of_stock'] = 'Товар недостаточно на складе';
< $lang['sales_quantity_less_than_zero'] = 'Внимание Желаемое количество является недостаточным. Вы все еще можете обрабатывать продажи, но проверить ваш инвентарь';
< $lang['sales_successfully_updated'] = 'Продажа успешно обновлен';
< $lang['sales_unsuccessfully_updated'] = 'Продажа безуспешно обновлен';
< $lang['sales_edit_sale'] = 'Редактировать продажи';
< $lang['sales_employee'] = 'сотрудник';
< $lang['sales_successfully_deleted'] = 'продажи успешно удален';
< $lang['sales_unsuccessfully_deleted'] = 'продажи безуспешно удален';
< $lang['sales_delete_entire_sale'] = 'Удалить всего продажи';
< $lang['sales_delete_confirmation'] = 'Вы уверены, что хотите удалить эту продажу, это действие не может быть отменено';
< $lang['sales_delete_successful'] = 'Вы успешно удален продаже';
< $lang['sales_delete_unsuccessful'] = 'Вы безуспешно удален продаже';
< $lang['sales_suspend_sale'] = 'Приостановить продажи';
< $lang['sales_confirm_suspend_sale'] = 'Вы уверены, что хотите приостановить эту продажу?';
< $lang['sales_suspended_sales'] = 'приостановила продажи';
< $lang['sales_suspended_sale_id'] = 'приостановила продажи ID';
< $lang['sales_date'] = 'Число';
< $lang['sales_comments'] = 'Комментарии';
< $lang['sales_unsuspend_and_delete'] = 'Разблокировать и удалить';
< $lang['sales_unsuspend'] = 'Разблокировать';
< $lang['sales_successfully_suspended_sale'] = 'Ваши продажи успешно приостановлена';
< $lang['sales_email_receipt'] = 'послать квитанция по E-Mail';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Discount';
< $lang['sales_sale_time']='Time';
< $lang['sales_payments_total'] = 'Payments Total';
< $lang['sales_amount_due'] = 'Amount Due';
< $lang['sales_payment_type'] = "тип";
< $lang['sales_payment_amount'] = "количество";
< $lang['sales_basic_information'] = "информацию о билетах";
< ?>
---
> 
> $lang["sales_add_payment"] = "Добавить оплаты";
> $lang["sales_amount_due"] = "Amount Due";
> $lang["sales_amount_tendered"] = "предложенная сумма";
> $lang["sales_basic_information"] = "информацию о билетах";
> $lang["sales_cancel_sale"] = "Отменить продажу";
> $lang["sales_cash"] = "наличные деньги";
> $lang["sales_change_due"] = "сдача должное";
> $lang["sales_check"] = "банковский чек";
> $lang["sales_check_balance"] = "Check remainder";
> $lang["sales_comment"] = "комментировать";
> $lang["sales_comments"] = "Комментарии";
> $lang["sales_complete_sale"] = "Завершить продажу";
> $lang["sales_confirm_cancel_sale"] = "Вы уверены, что хотите удалить эту продажу? Все детали будут очищены.";
> $lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
> $lang["sales_confirm_finish_sale"] = "Вы уверены, что хотите заверщить эту продажу? Не может быть отменено.";
> $lang["sales_confirm_suspend_sale"] = "Вы уверены, что хотите приостановить эту продажу?";
> $lang["sales_credit"] = "кредитная карта";
> $lang["sales_customer"] = "клиент";
> $lang["sales_date"] = "Число";
> $lang["sales_date_required"] = "A correct date needs to be filled in";
> $lang["sales_date_type"] = "Date field is required";
> $lang["sales_debit"] = "Дебетовая карта";
> $lang["sales_delete_confirmation"] = "Вы уверены, что хотите удалить эту продажу, это действие не может быть отменено";
> $lang["sales_delete_entire_sale"] = "Удалить всего продажи";
> $lang["sales_delete_successful"] = "Вы успешно удален продаже";
> $lang["sales_delete_unsuccessful"] = "Вы безуспешно удален продаже";
> $lang["sales_description_abbrv"] = "описание";
> $lang["sales_discount"] = "скидка %";
> $lang["sales_discount_included"] = "% Discount";
> $lang["sales_discount"] = "Discount";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "редактировать";
> $lang["sales_edit_item"] = "Редактировать Товар";
> $lang["sales_edit_sale"] = "Редактировать продажи";
> $lang["sales_email_receipt"] = "послать квитанция по E-Mail";
> $lang["sales_employee"] = "сотрудник";
> $lang["sales_error_editing_item"] = "Ошибка редактирования товара";
> $lang["sales_find_or_scan_item"] = "Найти/Сканировать Товара";
> $lang["sales_find_or_scan_item_or_receipt"] = "Найти/Сканировать Товара ИЛИ Квитанция";
> $lang["sales_giftcard"] = "Подарочная карта";
> $lang["sales_giftcard_balance"] = "Giftcard Balance";
> $lang["sales_giftcard_number"] = "Номер подарочных карт";
> $lang["sales_id"] = "Номер Продажы";
> $lang["sales_invoice"] = "Invoice";
> $lang["sales_invoice_confirm"] = "This invoice will be sent to";
> $lang["sales_invoice_enable"] = "Create Invoice";
> $lang["sales_invoice_filter"] = "Invoices";
> $lang["sales_cash_filter"] = "Cash";
> $lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
> $lang["sales_invoice_number"] = "Invoice #";
> $lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
> $lang["sales_invoice_sent"] = "Invoice sent to";
> $lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
> $lang["sales_invoice_update"] = "Recount";
> $lang["sales_item_insufficient_of_stock"] = "Товар недостаточно на складе";
> $lang["sales_item_name"] = "Название товара";
> $lang["sales_item_number"] = "Номер товара";
> $lang["sales_item_out_of_stock"] = "Товар распродано";
> $lang["sales_mode"] = "режим журнала";
> $lang["sales_must_enter_numeric"] = "числовое значение необходимое для предложенная сумма";
> $lang["sales_must_enter_numeric_giftcard"] = "числовое значение необходимое для число подарочную карту";
> $lang["sales_new_customer"] = "Новый клиент";
> $lang["sales_new_item"] = "Новый Товар";
> $lang["sales_no_description"] = "None";
> $lang["sales_no_filter"] = "All";
> $lang["sales_no_items_in_cart"] = "Там нет товаров в корзине";
> $lang["sales_no_sales_to_display"] = "No sales to display";
> $lang["sales_one_or_multiple"] = "";
> $lang["sales_takings"] = "Takings";
> $lang["sales_payment"] = "Вид оплаты";
> $lang["sales_payment_amount"] = "количество";
> $lang["sales_payment_not_cover_total"] = "оплачиваемая сумма недостаточно";
> $lang["sales_payment_type"] = "тип";
> $lang["sales_payments_total"] = "Payments Total";
> $lang["sales_price"] = "цена";
> $lang["sales_print_after_sale"] = "Распечатать квитанцию ​​после продажи";
> $lang["sales_quantity"] = "Кол-во.";
> $lang["sales_quantity_less_than_zero"] = "Внимание Желаемое количество является недостаточным. Вы все еще можете обрабатывать продажи, но проверить ваш инвентарь";
> $lang["sales_quantity_less_than_reorder_level"] = "Внимание Желаемое количество является недостаточным.";
> $lang["sales_receipt"] = "товарный чек";
> $lang["sales_receipt_number"] = "POS #";
> $lang["sales_register"] = "Продажи журнала";
> $lang["sales_remove_customer"] = "Удалите клиентов";
> $lang["sales_return"] = "возвращать";
> $lang["sales_sale"] = "Продажа";
> $lang["sales_sale_for_customer"] = "Клиент:";
> $lang["sales_sale_time"] = "Time";
> $lang["sales_select_customer"] = "Выберите клиента (необязательно)";
> $lang["sales_send_invoice"] = "Send Invoice";
> $lang["sales_serial"] = "серийный номер";
> $lang["sales_show_invoice"] = "invoice";
> $lang["sales_show_receipt"] = "receipt";
> $lang["sales_start_typing_customer_name"] = "Начните печатать название клиента...";
> $lang["sales_start_typing_item_name"] = "Начните печатать название товара или сканировайте штрих-кода...";
> $lang["sales_stock_location"] = "";
> $lang["sales_sub_total"] = "промежуточный итог";
> $lang["sales_successfully_deleted"] = "продажи успешно удален";
> $lang["sales_successfully_suspended_sale"] = "Ваши продажи успешно приостановлена";
> $lang["sales_successfully_updated"] = "Продажа успешно обновлен";
> $lang["sales_suspend_sale"] = "Приостановить продажи";
> $lang["sales_suspended_sale_id"] = "приостановила продажи ID";
> $lang["sales_suspended_sales"] = "приостановила продажи";
> $lang["sales_tax"] = "налог";
> $lang["sales_tax_percent"] = "Налоговые %";
> $lang["sales_total"] = "сумма";
> $lang["sales_total_tax_exclusive"] = "Tax excluded";
> $lang["sales_transaction_failed"] = "Транзакция не удалось";
> $lang["sales_unable_to_add_item"] = "Невозможно добавить товар продажи";
> $lang["sales_unsuccessfully_deleted"] = "продажи безуспешно удален";
> $lang["sales_unsuccessfully_updated"] = "Продажа безуспешно обновлен";
> $lang["sales_unsuspend"] = "Разблокировать";
> $lang["sales_unsuspend_and_delete"] = "Разблокировать и удалить";
> $lang["sales_update"] = "Edit Sale";
> $lang["sales_date_range"] = "размах числа";
> $lang["sales_none_selected"] = "Вы не выбрали ни одной товари для редактирования";
diff -rBwi --ignore-file-name-case pos-prod/application/language/ru/suppliers_lang.php opensourcepos/application/language/ru/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new'] = 'Новый поставщик';
< $lang['suppliers_supplier'] = 'поставщик';
< $lang['suppliers_update'] = 'Обновить поставщика';
< $lang['suppliers_confirm_delete'] = 'Вы уверены, что хотите удалить выбранных поставщиков?';
< $lang['suppliers_none_selected'] = 'Вы не выбрали ни поставщики удалить';
< $lang['suppliers_error_adding_updating'] = 'Ошибка при добавлении/обновлении поставщиком';
< $lang['suppliers_successful_adding'] = 'Вы успешно добавили поставщиком';
< $lang['suppliers_successful_updating'] = 'Вы успешно обновляли поставщиком';
< $lang['suppliers_successful_deleted'] = 'Вы успешно удален';
< $lang['suppliers_one_or_multiple'] = 'поставщик (а)';
< $lang['suppliers_cannot_be_deleted'] = 'Не удалось удалить выбранные поставщиков, один или более из выбранных поставщиков имеет продаж.';
< $lang['suppliers_basic_information'] = 'Информация о поставщике';
< $lang['suppliers_account_number'] = '№ счета';
< $lang['suppliers_company_name'] = 'Название компании';
< $lang['suppliers_company_name_required'] = 'Название компании является обязательным полем';
< ?>
---
> 
> $lang["suppliers_account_number"] = "№ счета";
> $lang["suppliers_basic_information"] = "Информация о поставщике";
> $lang["suppliers_cannot_be_deleted"] = "Не удалось удалить выбранные поставщиков, один или более из выбранных поставщиков имеет продаж.";
> $lang["suppliers_company_name"] = "Название компании";
> $lang["suppliers_company_name_required"] = "Название компании является обязательным полем";
> $lang["suppliers_agency_name"] = " ";
> $lang["suppliers_confirm_delete"] = "Вы уверены, что хотите удалить выбранных поставщиков?";
> $lang["suppliers_error_adding_updating"] = "Ошибка при добавлении/обновлении поставщиком";
> $lang["suppliers_new"] = "Новый поставщик";
> $lang["suppliers_none_selected"] = "Вы не выбрали ни поставщики удалить";
> $lang["suppliers_one_or_multiple"] = "поставщик (а)";
> $lang["suppliers_successful_adding"] = "Вы успешно добавили поставщиком";
> $lang["suppliers_successful_deleted"] = "Вы успешно удален";
> $lang["suppliers_successful_updating"] = "Вы успешно обновляли поставщиком";
> $lang["suppliers_supplier"] = "поставщик";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "Обновить поставщика";
Only in pos-prod/application/language: Russian
Only in pos-prod/application/language: Spanish
Only in pos-prod/application/language: spanish
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/common_lang.php opensourcepos/application/language/th/common_lang.php
2,82c2,57
< $lang['common_common']='ธรรมดา';
< $lang['common_submit']='ยอมรับ';
< $lang['common_or']='หรือ';
< $lang['common_powered_by']='สนับสนุนโดย';
< $lang['common_welcome']='ยินดีต้อนรับ';
< $lang['common_logout']='ลงชื่อออก';
< $lang['common_list_of']='รายชื่อ';
< $lang['common_first_name']='ชื่อ';
< $lang['common_last_name']='นามสกุล';
< $lang['common_email']='E-Mail';
< $lang['common_phone_number']='โทรศัพท์';
< $lang['common_address_1']='ที่อยู่ที่ 1';
< $lang['common_address_2']='ที่อยู่ที่ 2';
< $lang['common_city']='เมือง';
< $lang['common_state']='ประเทศ';
< $lang['common_zip']='Zip';
< $lang['common_country']='ประเทศ';
< $lang['common_comments']='หมายเหตุ';
< $lang['common_edit']='แก้ไข';
< $lang['common_search']='ค้นหา';
< $lang['common_delete']='ลบ';
< $lang['common_remove']='ลบ';
< $lang['common_view_recent_sales']='สำรวจการขายเมื่อเร็วๆนี้';
< $lang['common_you_are_using_ospos']='คุณกำลังใช้ Point of Sales รุ่น';
< $lang['common_please_visit_my']='เยี่ยมชมที่';
< $lang['common_website']='website';
< $lang['common_fields_required_message']='ช่องสีแดงต้องกรอก';
< $lang['common_learn_about_project']='to learn the lastest information about the project';
< $lang['common_searched_for']='ค้นหาสำหรับ';
< $lang['common_first_name_required']='ชื่อต้องกรอก';
< $lang['common_last_name_required']='นามสกุลต้องกรอก';
< $lang['common_email_invalid_format']='e-mail address ไม่เหมาะสม';
< $lang['common_confirm_search']='คุณเลือกมากกว่าหนึ่งแถว, สิ่งที่คุณเลือกจะถูกยกเลิกหลังการค้นหา. แน่ใจหรือไม่ที่จะค้นหา?';
< $lang['common_no_persons_to_display']='ไม่พบข้อมูลตัวบุคคล';
< $lang['common_return_policy']='กฏการคืน';
< $lang['common_price']='ราคา';
< $lang['common_welcome_message']= 'ยินดีต้อนรับเข้าสู่โปรแกรมขายหน้าร้านขั้นเทบ!';
< $lang['common_inv']='ยอด';
< $lang['common_det']='สรุป';
< ?>
< <?php
< $lang['common_common']='ธรรมดา';
< $lang['common_submit']='ยอมรับ';
< $lang['common_or']='หรือ';
< $lang['common_powered_by']='สนับสนุนโดย';
< $lang['common_welcome']='ยินดีต้อนรับ';
< $lang['common_logout']='ลงชื่อออก';
< $lang['common_list_of']='รายชื่อ';
< $lang['common_first_name']='ชื่อ';
< $lang['common_last_name']='นามสกุล';
< $lang['common_email']='E-Mail';
< $lang['common_phone_number']='โทรศัพท์';
< $lang['common_address_1']='ที่อยู่ที่ 1';
< $lang['common_address_2']='ที่อยู่ที่ 2';
< $lang['common_city']='เมือง';
< $lang['common_state']='ประเทศ';
< $lang['common_zip']='Zip';
< $lang['common_country']='ประเทศ';
< $lang['common_comments']='หมายเหตุ';
< $lang['common_edit']='แก้ไข';
< $lang['common_search']='ค้นหา';
< $lang['common_delete']='ลบ';
< $lang['common_remove']='ลบ';
< $lang['common_view_recent_sales']='สำรวจการขายเมื่อเร็วๆนี้';
< $lang['common_you_are_using_ospos']='คุณกำลังใช้ Point of Sales รุ่น';
< $lang['common_please_visit_my']='เยี่ยมชมที่';
< $lang['common_website']='website';
< $lang['common_fields_required_message']='ช่องสีแดงต้องกรอก';
< $lang['common_learn_about_project']='to learn the lastest information about the project';
< $lang['common_searched_for']='ค้นหาสำหรับ';
< $lang['common_first_name_required']='ชื่อต้องกรอก';
< $lang['common_last_name_required']='นามสกุลต้องกรอก';
< $lang['common_email_invalid_format']='e-mail address ไม่เหมาะสม';
< $lang['common_confirm_search']='คุณเลือกมากกว่าหนึ่งแถว, สิ่งที่คุณเลือกจะถูกยกเลิกหลังการค้นหา. แน่ใจหรือไม่ที่จะค้นหา?';
< $lang['common_no_persons_to_display']='ไม่พบข้อมูลตัวบุคคล';
< $lang['common_return_policy']='กฏการคืน';
< $lang['common_price']='ราคา';
< $lang['common_welcome_message']= 'ยินดีต้อนรับเข้าสู่โปรแกรมขายหน้าร้านขั้นเทบ!';
< $lang['common_inv']='ยอด';
< $lang['common_det']='สรุป';
< ?>
\ No newline at end of file
---
> 
> $lang["common_address_1"] = "ที่อยู่";
> $lang["common_address_2"] = "ที่อยู่ (เพิ่มเติม)";
> $lang["common_city"] = "อำเภอ";
> $lang["common_comments"] = "หมายเหตุ";
> $lang["common_common"] = "ธรรมดา";
> $lang["common_confirm_search"] = "คุณเลือกมากกว่าหนึ่งแถว, สิ่งที่คุณเลือกจะถูกยกเลิกหลังการค้นหา. แน่ใจหรือไม่ที่จะค้นหา?";
> $lang["common_country"] = "ประเทศ";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "ลบ";
> $lang["common_print"] = "พิมพ์";
> $lang["common_det"] = "สรุป";
> $lang["common_edit"] = "แก้ไข";
> $lang["common_email"] = "E-Mail";
> $lang["common_email_invalid_format"] = "e-mail address ไม่ถูกต้อง";
> $lang["common_fields_required_message"] = "ช่องสีแดงต้องกรอก";
> $lang["common_first_name"] = "ชื่อ";
> $lang["common_first_name_required"] = "ชื่อต้องกรอก";
> $lang["common_first_page"] = "อันดับแรก";
> $lang["common_gender"] = "เพศ";
> $lang["common_gender_female"] = "หญิง";
> $lang["common_gender_male"] = "ชาย";
> $lang["common_inv"] = "ยอด";
> $lang["common_last_name"] = "นามสกุล";
> $lang["common_last_name_required"] = "นามสกุลต้องกรอก";
> $lang["common_last_page"] = "Last";
> $lang["common_learn_about_project"] = "เพื่อศึกษาข้อมูลล่าสุดของโครงการ";
> $lang["common_list_of"] = "รายการ";
> $lang["common_logout"] = "ออกจากระบบ";
> $lang["common_new"] = "New";
> $lang["common_no_persons_to_display"] = "ไม่พบข้อมูลตัวบุคคล";
> $lang["common_or"] = "หรือ";
> $lang["common_phone_number"] = "โทรศัพท์";
> $lang["common_phone_number_required"] = "ต้องกรอกเบอร์โทร";
> $lang["common_please_visit_my"] = "เยี่ยมชมที่";
> $lang["common_powered_by"] = "จัดทำโดย";
> $lang["common_price"] = "ราคา";
> $lang["common_remove"] = "ลบ";
> $lang["common_return_policy"] = "นโยบายคืนสินค้า";
> $lang["common_search"] = "ค้นหา";
> $lang["common_search_options"] = "Search options";
> $lang["common_searched_for"] = "ค้นหาสำหรับ";
> $lang["common_state"] = "จังหวัด";
> $lang["common_submit"] = "ส่งข้อมูล";
> $lang["common_view_recent_sales"] = "การขายล่าสุด";
> $lang["common_website"] = "website";
> $lang["common_welcome"] = "ยินดีต้อนรับ";
> $lang["common_welcome_message"] = "Opensource Point of sale. กรุณาเลือกคำสั่งเมนูด้านล่าง ";
> $lang["common_you_are_using_ospos"] = "คุณกำลังใช้ Opensource Point of Sales รุ่น";
> $lang["common_zip"] = "รหัสไปรษณีย์";
> $lang["common_import"] = "นำเข้า";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "ต้องกรอก";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/config_lang.php opensourcepos/application/language/th/config_lang.php
2,34d1
< $lang['config_info']='องค์ประกอบร้านค้า';
< $lang['config_company']='ชื่อร้านค้า';
< $lang['config_address']='ที่อยู่';
< $lang['config_phone']='เบอร์โทรศัพท์';
< $lang['config_website']='เว็บไซต์';
< $lang['config_fax']='แฟ็ก';
< $lang['config_default_tax_rate']='อัตตราภาษีเริ่มต้น %';
< $lang['config_default_tax_rate_1']='อัตตราภาษี 1';
< $lang['config_default_tax_rate_2']='อัตตราภาษี 2';
< $lang['config_company_required']='ชื่อร้านค้าต้องกรอก';
< $lang['config_address_required']='ที่อยู่ต้องกรอก';
< $lang['config_phone_required']='เบอร์โทรต้องกรอก';
< $lang['config_default_tax_rate_required']='อัตตราภาษีเริ่มต้นต้องกรอก';
< $lang['config_default_tax_rate_number']='อัตตราภาษีเริ่มต้นต้องเป็นตัวเลข';
< $lang['config_company_website_url']='เว็บไซต์ร้านค้าไม่ถูกต้อง';
< $lang['config_saved_successfully']='องค์ประกอบร้านค้าบันทึกเรียบร้อย';
< $lang['config_saved_unsuccessfully']='องค์ประกอบร้านค้าบันทึกล้มเหลว';
< $lang['config_return_policy_required']='กฎการคืนของต้องกรอก';
< $lang['config_print_after_sale']='ปริ๊นบิลหลังการขาย';
< $lang['config_language'] = 'ภาษา';
< $lang['config_timezone'] = 'Timezone';
< $lang['config_currency_symbol'] = 'ลัญลักษณ์ค่าเงิน';
< $lang['config_currency_side'] = 'ด้านขวา'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'พื้นที่เพิ่มเติม 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'พื้นที่เพิ่มเติม 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'พื้นที่เพิ่มเติม 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'พื้นที่เพิ่มเติม 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'พื้นที่เพิ่มเติม 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'พื้นที่เพิ่มเติม 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'พื้นที่เพิ่มเติม 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'พื้นที่เพิ่มเติม 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'พื้นที่เพิ่มเติม 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'พื้นที่เพิ่มเติม 10'; //GARRISON ADDED 4/21/2013
36,72c3,122
< ?>
< <?php
< $lang['config_info']='องค์ประกอบร้านค้า';
< $lang['config_company']='ชื่อร้านค้า';
< $lang['config_address']='ที่อยู่';
< $lang['config_phone']='เบอร์โทรศัพท์';
< $lang['config_website']='เว็บไซต์';
< $lang['config_fax']='แฟ็ก';
< $lang['config_default_tax_rate']='อัตตราภาษีเริ่มต้น %';
< $lang['config_default_tax_rate_1']='อัตตราภาษี 1';
< $lang['config_default_tax_rate_2']='อัตตราภาษี 2';
< $lang['config_company_required']='ชื่อร้านค้าต้องกรอก';
< $lang['config_address_required']='ที่อยู่ต้องกรอก';
< $lang['config_phone_required']='เบอร์โทรต้องกรอก';
< $lang['config_default_tax_rate_required']='อัตตราภาษีเริ่มต้นต้องกรอก';
< $lang['config_default_tax_rate_number']='อัตตราภาษีเริ่มต้นต้องเป็นตัวเลข';
< $lang['config_company_website_url']='เว็บไซต์ร้านค้าไม่ถูกต้อง';
< $lang['config_saved_successfully']='องค์ประกอบร้านค้าบันทึกเรียบร้อย';
< $lang['config_saved_unsuccessfully']='องค์ประกอบร้านค้าบันทึกล้มเหลว';
< $lang['config_return_policy_required']='กฎการคืนของต้องกรอก';
< $lang['config_print_after_sale']='ปริ๊นบิลหลังการขาย';
< $lang['config_language'] = 'ภาษา';
< $lang['config_timezone'] = 'Timezone';
< $lang['config_currency_symbol'] = 'ลัญลักษณ์ค่าเงิน';
< $lang['config_currency_side'] = 'ด้านขวา'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'พื้นที่เพิ่มเติม 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'พื้นที่เพิ่มเติม 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'พื้นที่เพิ่มเติม 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'พื้นที่เพิ่มเติม 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'พื้นที่เพิ่มเติม 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'พื้นที่เพิ่มเติม 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'พื้นที่เพิ่มเติม 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'พื้นที่เพิ่มเติม 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'พื้นที่เพิ่มเติม 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'พื้นที่เพิ่มเติม 10'; //GARRISON ADDED 4/21/2013
< 
< ?>
\ No newline at end of file
---
> $lang["config_address"] = "ที่อยู่";
> $lang["config_address_required"] = "ที่อยู่ต้องกรอก";
> $lang["config_backup_button"] = "สำรองข้อมูล";
> $lang["config_backup_database"] = "สำรองฐานข้อมูล";
> $lang["config_barcode_company"] = "ชื่อร้านค้า";
> $lang["config_barcode_configuration"] = "ตั้งค่าระบบบาร์โค้ด";
> $lang["config_barcode_content"] = "รหัสที่พิมพ์";
> $lang["config_barcode_first_row"] = "แถว 1";
> $lang["config_barcode_font"] = "แบบอักษร";
> $lang["config_barcode_height"] = "สูง (px)";
> $lang["config_barcode_id"] = "รหัสสินค้า/ชื่อสินค้า";
> $lang["config_barcode_info"] = "ตั้งค่าบาร์โค้ด";
> $lang["config_barcode_layout"] = "โครงร่างการพิมพ์";
> $lang["config_barcode_name"] = "สินค้า";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "จำนวนดวงใน 1 แถว";
> $lang["config_barcode_page_cellspacing"] = "ระยะห่างต่อดวง";
> $lang["config_barcode_page_width"] = "ความกว้างในหน้า";
> $lang["config_barcode_price"] = "ราคา";
> $lang["config_barcode_quality"] = "คุณภาพ (1-100)";
> $lang["config_barcode_second_row"] = "แถว 2";
> $lang["config_barcode_third_row"] = "แถว 3";
> $lang["config_barcode_type"] = "ประเภทบาร์โค้ด";
> $lang["config_barcode_width"] = "กว้าง (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "ชื่อร้านค้า";
> $lang["config_company_logo"] = "ภาพโลโก้";
> $lang["config_company_required"] = "ชื่อร้านค้าต้องกรอก";
> $lang["config_company_website_url"] = "เว็บไซต์ร้านค้าไม่ถูกต้อง";
> $lang["config_currency_side"] = "ด้านขวา";
> $lang["config_currency_symbol"] = "สัญลักษณ์ค่าเงิน";
> $lang["config_custom1"] = "พื้นที่เพิ่มเติม 1";
> $lang["config_custom10"] = "พื้นที่เพิ่มเติม 10";
> $lang["config_custom2"] = "พื้นที่เพิ่มเติม 2";
> $lang["config_custom3"] = "พื้นที่เพิ่มเติม 3";
> $lang["config_custom4"] = "พื้นที่เพิ่มเติม 4";
> $lang["config_custom5"] = "พื้นที่เพิ่มเติม 5";
> $lang["config_custom6"] = "พื้นที่เพิ่มเติม 6";
> $lang["config_custom7"] = "พื้นที่เพิ่มเติม 7";
> $lang["config_custom8"] = "พื้นที่เพิ่มเติม 8";
> $lang["config_custom9"] = "พื้นที่เพิ่มเติม 9";
> $lang["config_decimal_point"] = "จุดทศนิยม";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Default Sales Discount %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "อัตราภาษีเริ่มต้น %";
> $lang["config_default_tax_rate_1"] = "อัตราภาษี 1";
> $lang["config_default_tax_rate_2"] = "อัตราภาษี 2";
> $lang["config_default_tax_rate_number"] = "อัตราภาษีเริ่มต้นต้องเป็นตัวเลข";
> $lang["config_default_tax_rate_required"] = "อัตราภาษีเริ่มต้นต้องกรอก";
> $lang["config_fax"] = "แฟ็กซ์";
> $lang["config_general_configuration"] = "ตั้งค่าทั่วไป";
> $lang["config_info"] = "ข้อมูลร้านค้า";
> $lang["config_invoice_default_comments"] = "Default Invoice Comments";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Invoice Printer";
> $lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
> $lang["config_language"] = "ภาษา";
> $lang["config_lines_per_page"] = "Lines Per Page";
> $lang["config_lines_per_page_number"] = "The lines per page must be a number";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locations";
> $lang["config_location_info"] = "Location Configuration Information";
> $lang["config_logout"] = "Don't you want to make a backup before logging out?";
> $lang["config_number_format"] = "รูปแบบตัวเลข";
> $lang["config_phone"] = "เบอร์โทรศัพท์";
> $lang["config_phone_required"] = "เบอร์โทรต้องกรอก";
> $lang["config_print_bottom_margin"] = "Margin Bottom";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Margin Left";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Margin Right";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Show Print Dialog";
> $lang["config_print_top_margin"] = "Margin Top";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Settings";
> $lang["config_receipt_info"] = "Receipt Configuration Information";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Show Taxes";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "ใบส่งของ";
> $lang["config_return_policy_required"] = "ต้องกรอกเงื่อนไขการคืนสินค้า";
> $lang["config_sales_invoice_format"] = "รหัสใบเสร็จ";
> $lang["config_saved_successfully"] = "บันทึกข้อมูลร้านค้าเรียบร้อยแล้ว";
> $lang["config_saved_unsuccessfully"] = "บันทึกข้อมูลร้านค้าไม่สำเร็จ";
> $lang["config_show_total_discount"] = "Show total discount";
> $lang["config_stock_location"] = "สถานที่เก็บ";
> $lang["config_stock_location_duplicate"] = "";
> $lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
> $lang["config_stock_location_required"] = "จำเป็นต้องระบุสถานที่เก็บ";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "รวมภาษีแล้ว";
> $lang["config_thousands_separator"] = "ตัวคั่นหลักพัน";
> $lang["config_timezone"] = "โซนเวลา";
> $lang["config_use_invoice_template"] = "Use invoice template";
> $lang["config_website"] = "เว็บไซต์";
> $lang["config_locale_configuration"] = "ตั้งค่าภาษา";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "รูปแบบวันเวลา";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/customers_lang.php opensourcepos/application/language/th/customers_lang.php
2,32c2,19
< $lang['customers_new']='ลูกค้าใหม่'; 
< $lang['customers_customer']='ลูกค้า';  
< $lang['customers_update']='แก้ไขข้อมูลลูกค้า'; 
< $lang['customers_confirm_delete']='ยืนยันลบข้อมูลลูกค้า?'; 
< $lang['customers_none_selected']='คุณยังไม่ได้ทำการเลือกลูกค้า'; 
< $lang['customers_error_adding_updating'] = 'แก้ไขข้อมูลลูกค้าผิดพลาด'; 
< $lang['customers_successful_adding']='คุณได้ทำการเพิ่มลูกค้าเรียบร้อยแล้ว'; 
< $lang['customers_successful_updating']='คุณได้ทำการแก้ไขข้อมูลลูกค้าเรียบร้อยแล้ว'; 
< $lang['customers_successful_deleted']='คุณได้ทำการลบข้อมูลเรียบร้อยแล้ว'; 
< $lang['customers_one_or_multiple']='ลูกค้า'; 
< $lang['customers_cannot_be_deleted']='ไม่สามารลบลูกค้าที่ถูกเลือก, ลูกค้าที่ถูกเลือกถูขายไปแล้ว.';
< $lang['customers_basic_information']='ข้อมูลลูกค้า';
< $lang['customers_account_number']='บัญชี #';
< $lang['customers_taxable']='ต้องเสียภาษี';
< ?>
< <?php
< $lang['customers_new']='ลูกค้าใหม่'; 
< $lang['customers_customer']='ลูกค้า';  
< $lang['customers_update']='แก้ไขข้อมูลลูกค้า'; 
< $lang['customers_confirm_delete']='ยืนยันลบข้อมูลลูกค้า?'; 
< $lang['customers_none_selected']='คุณยังไม่ได้ทำการเลือกลูกค้า'; 
< $lang['customers_error_adding_updating'] = 'แก้ไขข้อมูลลูกค้าผิดพลาด'; 
< $lang['customers_successful_adding']='คุณได้ทำการเพิ่มลูกค้าเรียบร้อยแล้ว'; 
< $lang['customers_successful_updating']='คุณได้ทำการแก้ไขข้อมูลลูกค้าเรียบร้อยแล้ว'; 
< $lang['customers_successful_deleted']='คุณได้ทำการลบข้อมูลเรียบร้อยแล้ว'; 
< $lang['customers_one_or_multiple']='ลูกค้า'; 
< $lang['customers_cannot_be_deleted']='ไม่สามารลบลูกค้าที่ถูกเลือก, ลูกค้าที่ถูกเลือกถูขายไปแล้ว.';
< $lang['customers_basic_information']='ข้อมูลลูกค้า';
< $lang['customers_account_number']='บัญชี #';
< $lang['customers_taxable']='ต้องเสียภาษี';
< ?>
---
> 
> $lang["customers_account_number"] = "บัญชี #";
> $lang["customers_account_number_duplicate"] = "This account number is already present in the database";
> $lang["customers_basic_information"] = "ข้อมูลลูกค้า";
> $lang["customers_cannot_be_deleted"] = "ไม่สามารลบลูกค้าที่ถูกเลือก, ลูกค้าที่ถูกเลือกถูขายไปแล้ว.";
> $lang["customers_company_name"] = "Company Name";
> $lang["customers_confirm_delete"] = "ยืนยันลบข้อมูลลูกค้า?";
> $lang["customers_customer"] = "ลูกค้า";
> $lang["customers_error_adding_updating"] = "แก้ไขข้อมูลลูกค้าผิดพลาด";
> $lang["customers_new"] = "ลูกค้าใหม่";
> $lang["customers_none_selected"] = "คุณยังไม่ได้ทำการเลือกลูกค้า";
> $lang["customers_one_or_multiple"] = "ลูกค้า";
> $lang["customers_successful_adding"] = "คุณได้ทำการเพิ่มลูกค้าเรียบร้อยแล้ว";
> $lang["customers_successful_deleted"] = "คุณได้ทำการลบข้อมูลเรียบร้อยแล้ว";
> $lang["customers_successful_updating"] = "คุณได้ทำการแก้ไขข้อมูลลูกค้าเรียบร้อยแล้ว";
> $lang["customers_taxable"] = "ต้องเสียภาษี";
> $lang["customers_update"] = "แก้ไขข้อมูลลูกค้า";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/employees_lang.php opensourcepos/application/language/th/employees_lang.php
2,54c2,28
< $lang['employees_employee']='Employee';
< $lang['employees_new']='New Employee';
< $lang['employees_update']='Update Employee';
< $lang['employees_confirm_delete']='Are you sure you want to delete the selected employees?';
< $lang['employees_none_selected']='You have not selected any employees to delete';
< $lang['employees_error_adding_updating'] = 'Error adding/updating employee';
< $lang['employees_successful_adding']='You have successfully added employee';
< $lang['employees_successful_updating']='You have successfully updated employee';
< $lang['employees_successful_deleted']='You have successfully deleted';
< $lang['employees_one_or_multiple']='employee(s)';
< $lang['employees_cannot_be_deleted']='Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
< $lang['employees_username']='Username';
< $lang['employees_password']='Password';
< $lang['employees_repeat_password']='Password Again';
< $lang['employees_username_required']='Username is a required field';
< $lang['employees_username_minlength']='The username must be at least 5 characters';
< $lang['employees_password_required']='Password is required';
< $lang['employees_password_minlength']='Passwords must be at least 8 characters';
< $lang['employees_password_must_match']='Passwords do not match';
< $lang['employees_basic_information']='Employee Basic Information';
< $lang['employees_login_info']='Employee Login Info';
< $lang['employees_permission_info']='Employee Permissions and Access';
< $lang['employees_permission_desc']='Check the boxes below to grant access to modules';
< $lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
< $lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
< ?>
< <?php
< $lang['employees_employee']='Employee';
< $lang['employees_new']='New Employee';
< $lang['employees_update']='Update Employee';
< $lang['employees_confirm_delete']='Are you sure you want to delete the selected employees?';
< $lang['employees_none_selected']='You have not selected any employees to delete';
< $lang['employees_error_adding_updating'] = 'Error adding/updating employee';
< $lang['employees_successful_adding']='You have successfully added employee';
< $lang['employees_successful_updating']='You have successfully updated employee';
< $lang['employees_successful_deleted']='You have successfully deleted';
< $lang['employees_one_or_multiple']='employee(s)';
< $lang['employees_cannot_be_deleted']='Could not deleted selected employees, one or more of the employees has processed sales or you are trying to delete yourself :)';
< $lang['employees_username']='Username';
< $lang['employees_password']='Password';
< $lang['employees_repeat_password']='Password Again';
< $lang['employees_username_required']='Username is a required field';
< $lang['employees_username_minlength']='The username must be at least 5 characters';
< $lang['employees_password_required']='Password is required';
< $lang['employees_password_minlength']='Passwords must be at least 8 characters';
< $lang['employees_password_must_match']='Passwords do not match';
< $lang['employees_basic_information']='Employee Basic Information';
< $lang['employees_login_info']='Employee Login Info';
< $lang['employees_permission_info']='Employee Permissions and Access';
< $lang['employees_permission_desc']='Check the boxes below to grant access to modules';
< $lang['employees_error_updating_demo_admin'] = 'You can not change the demo admin user';
< $lang['employees_error_deleting_demo_admin'] = 'You can not delete the demo admin user';
< ?>
---
> 
> $lang["employees_basic_information"] = "ข้อมูลพื้นฐานของพนักงาน";
> $lang["employees_cannot_be_deleted"] = "ไม่สามารถลบข้อมูลพนักงานที่กำลังปฏิบัติงานอยู่ได้";
> $lang["employees_confirm_delete"] = "ยืนยันการลบข้อมูลพนักงาน";
> $lang["employees_employee"] = "พนักงาน";
> $lang["employees_error_adding_updating"] = "การปรับปรุงข้อมูลผิดพลาด";
> $lang["employees_error_deleting_demo_admin"] = "You can not delete the demo admin user";
> $lang["employees_error_updating_demo_admin"] = "You can not change the demo admin user";
> $lang["employees_login_info"] = "Employee Login Info";
> $lang["employees_new"] = "เพิ่มพนักงาน";
> $lang["employees_none_selected"] = "โปรดเลือกพนักงาน";
> $lang["employees_one_or_multiple"] = "พนักงาน";
> $lang["employees_password"] = "Password";
> $lang["employees_password_minlength"] = "รหัสผ่านต้องยาวเกิน 8 อักษร";
> $lang["employees_password_must_match"] = "รหัสผ่านไม่ตรงกัน";
> $lang["employees_password_required"] = "ต้องกรอกรหัสผ่าน";
> $lang["employees_permission_desc"] = "Check the boxes below to grant access to modules";
> $lang["employees_permission_info"] = "Employee Permissions and Access";
> $lang["employees_repeat_password"] = "Password Again";
> $lang["employees_successful_adding"] = "เพิ่มข้อมูลพนักงานเรียบร้อยแล้ว";
> $lang["employees_successful_deleted"] = "ลบข้อมูลสำเร็จ";
> $lang["employees_successful_updating"] = "ปรับปรุงข้อมูลพนักงานเรียบร้อยแล้ว";
> $lang["employees_update"] = "แก้ไขข้อมูลพนักงาน";
> $lang["employees_username"] = "Username";
> $lang["employees_username_minlength"] = "ชื่อผู้ใช้งานต้องยาวเกิน 5 อักษร";
> $lang["employees_username_required"] = "จำเป็นต้องกรอกชื่อผู้ใช้งาน";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/error_lang.php opensourcepos/application/language/th/error_lang.php
2,8c2,4
< $lang['error_no_permission_module']='You do not have permission to access the module named';
< $lang['error_unknown']='unknown';
< ?>
< <?php
< $lang['error_no_permission_module']='You do not have permission to access the module named';
< $lang['error_unknown']='unknown';
< ?>
---
> 
> $lang["error_no_permission_module"] = "You do not have permission to access the module named";
> $lang["error_unknown"] = "unknown";
Only in opensourcepos/application/language/th: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/giftcards_lang.php opensourcepos/application/language/th/giftcards_lang.php
2,9d1
< $lang['giftcards_giftcard_number']='Giftcard Number';
< $lang['giftcards_card_value']='Value';
< $lang['giftcards_basic_information']='Giftcard Information';
< $lang['giftcards_number_required']='Giftcard Number is a required field';
< $lang['giftcards_value_required']='Giftcard Value is a required field';
< $lang['giftcards_number']='Giftcard Number must be a number';
< $lang['giftcards_value']='Giftcard Value must be a number';
< $lang['giftcards_person_id']='Customer';
11,140c3,70
< $lang['giftcards_retrive_giftcard_info']='Retrieve Giftcard Info';
< $lang['giftcards_description']='Description';
< $lang['giftcards_amazon']='Amazon';
< $lang['giftcards_upc_database']='UPC Database';
< $lang['giftcards_cannot_find_giftcard']='Cannot find any information about giftcard';
< $lang['giftcards_info_provided_by']='Info provided by';
< $lang['giftcards_number_information']='Giftcard Number';
< $lang['giftcards_new']='New Giftcard';
< $lang['giftcards_update']='Update Giftcard';
< $lang['giftcards_giftcard']='Giftcard';
< $lang['giftcards_edit_multiple_giftcards']='Editing Multiple Giftcards';
< $lang['giftcards_category']='Category';
< $lang['giftcards_cost_price']='Cost Price';
< $lang['giftcards_unit_price']='Unit Price';
< $lang['giftcards_tax_1']='Tax 1';
< $lang['giftcards_tax_2']='Tax 2';
< $lang['giftcards_sales_tax_1'] = 'Sales Tax';
< $lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
< $lang['giftcards_tax_percent']='Tax Percent';
< $lang['giftcards_tax_percents']='Tax Percent(s)';
< $lang['giftcards_reorder_level']='Reorder Level';
< $lang['giftcards_quantity']='Quantity';
< $lang['giftcards_no_giftcards_to_display']='No Giftcards to display';
< $lang['giftcards_bulk_edit']='Bulk Edit';
< $lang['giftcards_confirm_delete']='Are you sure you want to delete the selected giftcards?';
< $lang['giftcards_none_selected']='You have not selected any giftcards to edit';
< $lang['giftcards_confirm_bulk_edit']='Are you sure you want to edit all the giftcards selected?';
< $lang['giftcards_successful_bulk_edit']='You have successfully updated the selected giftcards';
< $lang['giftcards_error_updating_multiple']='Error updating giftcards';
< $lang['giftcards_edit_fields_you_want_to_update']='Edit the fields you want to edit for ALL selected giftcards';
< $lang['giftcards_error_adding_updating'] = 'Error adding/updating giftcard';
< $lang['giftcards_successful_adding']='You have successfully added giftcard';
< $lang['giftcards_successful_updating']='You have successfully updated giftcard';
< $lang['giftcards_successful_deleted']='You have successfully deleted';
< $lang['giftcards_one_or_multiple']='giftcard(s)';
< $lang['giftcards_cannot_be_deleted']='Could not deleted selected giftcards, one or more of the selected giftcards has sales.';
< $lang['giftcards_none'] = 'None';
< $lang['giftcards_supplier'] = 'Supplier';
< $lang['giftcards_generate_barcodes'] = 'Generate Barcodes';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'You must select at least 1 giftcard to generate barcodes';
< $lang['giftcards_excel_import_failed'] = 'Excel import failed';
< $lang['giftcards_allow_alt_desciption'] = 'Allow Alt Description';
< $lang['giftcards_is_serialized'] = 'Giftcard has Serial Number';
< $lang['giftcards_low_inventory_giftcards'] = 'Low Inventory Giftcards';
< $lang['giftcards_serialized_giftcards'] = 'Serialized Giftcards';
< $lang['giftcards_no_description_giftcards'] = 'No Description Giftcards';
< $lang['giftcards_inventory_comments']='Comments';
< $lang['giftcards_count']='Update Inventory';
< $lang['giftcards_details_count']='Inventory Count Details';
< $lang['giftcards_add_minus']='Inventory to add/subtract';
< $lang['giftcards_current_quantity']='Current Quantity';
< $lang['giftcards_quantity_required']='Quantity is a required field. Please Close ( X ) to cancel';
< $lang['giftcards_do_nothing'] = 'Do Nothing';
< $lang['giftcards_change_all_to_serialized'] = 'Change All To Serialized';
< $lang['giftcards_change_all_to_unserialized'] = 'Change All To Unserialized';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Allow Alt Desc For All';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
< $lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
< $lang['giftcards_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
< ?>
< <?php
< $lang['giftcards_giftcard_number']='Giftcard Number';
< $lang['giftcards_card_value']='Value';
< $lang['giftcards_basic_information']='Giftcard Information';
< $lang['giftcards_number_required']='Giftcard Number is a required field';
< $lang['giftcards_value_required']='Giftcard Value is a required field';
< $lang['giftcards_number']='Giftcard Number must be a number';
< $lang['giftcards_value']='Giftcard Value must be a number';
< $lang['giftcards_person_id']='Customer';
< 
< $lang['giftcards_retrive_giftcard_info']='Retrieve Giftcard Info';
< $lang['giftcards_description']='Description';
< $lang['giftcards_amazon']='Amazon';
< $lang['giftcards_upc_database']='UPC Database';
< $lang['giftcards_cannot_find_giftcard']='Cannot find any information about giftcard';
< $lang['giftcards_info_provided_by']='Info provided by';
< $lang['giftcards_number_information']='Giftcard Number';
< $lang['giftcards_new']='New Giftcard';
< $lang['giftcards_update']='Update Giftcard';
< $lang['giftcards_giftcard']='Giftcard';
< $lang['giftcards_edit_multiple_giftcards']='Editing Multiple Giftcards';
< $lang['giftcards_category']='Category';
< $lang['giftcards_cost_price']='Cost Price';
< $lang['giftcards_unit_price']='Unit Price';
< $lang['giftcards_tax_1']='Tax 1';
< $lang['giftcards_tax_2']='Tax 2';
< $lang['giftcards_sales_tax_1'] = 'Sales Tax';
< $lang['giftcards_sales_tax_2'] = 'Sales Tax 2';
< $lang['giftcards_tax_percent']='Tax Percent';
< $lang['giftcards_tax_percents']='Tax Percent(s)';
< $lang['giftcards_reorder_level']='Reorder Level';
< $lang['giftcards_quantity']='Quantity';
< $lang['giftcards_no_giftcards_to_display']='No Giftcards to display';
< $lang['giftcards_bulk_edit']='Bulk Edit';
< $lang['giftcards_confirm_delete']='Are you sure you want to delete the selected giftcards?';
< $lang['giftcards_none_selected']='You have not selected any giftcards to edit';
< $lang['giftcards_confirm_bulk_edit']='Are you sure you want to edit all the giftcards selected?';
< $lang['giftcards_successful_bulk_edit']='You have successfully updated the selected giftcards';
< $lang['giftcards_error_updating_multiple']='Error updating giftcards';
< $lang['giftcards_edit_fields_you_want_to_update']='Edit the fields you want to edit for ALL selected giftcards';
< $lang['giftcards_error_adding_updating'] = 'Error adding/updating giftcard';
< $lang['giftcards_successful_adding']='You have successfully added giftcard';
< $lang['giftcards_successful_updating']='You have successfully updated giftcard';
< $lang['giftcards_successful_deleted']='You have successfully deleted';
< $lang['giftcards_one_or_multiple']='giftcard(s)';
< $lang['giftcards_cannot_be_deleted']='Could not deleted selected giftcards, one or more of the selected giftcards has sales.';
< $lang['giftcards_none'] = 'None';
< $lang['giftcards_supplier'] = 'Supplier';
< $lang['giftcards_generate_barcodes'] = 'Generate Barcodes';
< $lang['giftcards_must_select_giftcard_for_barcode'] = 'You must select at least 1 giftcard to generate barcodes';
< $lang['giftcards_excel_import_failed'] = 'Excel import failed';
< $lang['giftcards_allow_alt_desciption'] = 'Allow Alt Description';
< $lang['giftcards_is_serialized'] = 'Giftcard has Serial Number';
< $lang['giftcards_low_inventory_giftcards'] = 'Low Inventory Giftcards';
< $lang['giftcards_serialized_giftcards'] = 'Serialized Giftcards';
< $lang['giftcards_no_description_giftcards'] = 'No Description Giftcards';
< $lang['giftcards_inventory_comments']='Comments';
< $lang['giftcards_count']='Update Inventory';
< $lang['giftcards_details_count']='Inventory Count Details';
< $lang['giftcards_add_minus']='Inventory to add/subtract';
< $lang['giftcards_current_quantity']='Current Quantity';
< $lang['giftcards_quantity_required']='Quantity is a required field. Please Close ( X ) to cancel';
< $lang['giftcards_do_nothing'] = 'Do Nothing';
< $lang['giftcards_change_all_to_serialized'] = 'Change All To Serialized';
< $lang['giftcards_change_all_to_unserialized'] = 'Change All To Unserialized';
< $lang['giftcards_change_all_to_allow_alt_desc'] = 'Allow Alt Desc For All';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
< $lang['giftcards_use_inventory_menu'] = 'Use Inv. Menu';
< $lang['giftcards_manually_editing_of_quantity'] = 'Manual Edit of Quantity';
< ?>
---
> $lang["giftcards_add_minus"] = "Inventory to add/subtract";
> $lang["giftcards_allow_alt_description"] = "";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
> $lang["giftcards_basic_information"] = "ข้อมูลบัตรกำนัล";
> $lang["giftcards_bulk_edit"] = "Bulk Edit";
> $lang["giftcards_cannot_be_deleted"] = "Could not deleted selected giftcards, one or more of the selected giftcards has sales.";
> $lang["giftcards_cannot_find_giftcard"] = "Cannot find any information about giftcard";
> $lang["giftcards_card_value"] = "มูลค่า";
> $lang["giftcards_category"] = "";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "";
> $lang["giftcards_change_all_to_serialized"] = "Change All To Serialized";
> $lang["giftcards_change_all_to_unserialized"] = "";
> $lang["giftcards_confirm_bulk_edit"] = "";
> $lang["giftcards_confirm_delete"] = "Are you sure you want to delete the selected giftcards?";
> $lang["giftcards_cost_price"] = "ต้นทุน";
> $lang["giftcards_count"] = "Update Inventory";
> $lang["giftcards_current_quantity"] = "Current Quantity";
> $lang["giftcards_description"] = "Description";
> $lang["giftcards_details_count"] = "Inventory Count Details";
> $lang["giftcards_do_nothing"] = "";
> $lang["giftcards_edit_fields_you_want_to_update"] = "";
> $lang["giftcards_edit_multiple_giftcards"] = "แก้ไขบัตรกำนัลหลายใบ";
> $lang["giftcards_error_adding_updating"] = "Error adding/updating giftcard";
> $lang["giftcards_error_updating_multiple"] = "Error updating giftcards";
> $lang["giftcards_excel_import_failed"] = "Excel import failed";
> $lang["giftcards_generate_barcodes"] = "Generate Barcodes";
> $lang["giftcards_giftcard"] = "บัตรกำนัล";
> $lang["giftcards_giftcard_number"] = "เลขบัตรกำนัล";
> $lang["giftcards_info_provided_by"] = "Info provided by";
> $lang["giftcards_inventory_comments"] = "Comments";
> $lang["giftcards_is_serialized"] = "Giftcard has Serial Number";
> $lang["giftcards_low_inventory_giftcards"] = "Low Inventory Giftcards";
> $lang["giftcards_manually_editing_of_quantity"] = "Manual Edit of Quantity";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "You must select at least 1 giftcard to generate barcodes";
> $lang["giftcards_new"] = "เพิ่มบัตรกำนัล";
> $lang["giftcards_no_description_giftcards"] = "No Description Giftcards";
> $lang["giftcards_no_giftcards_to_display"] = "No Giftcards to display";
> $lang["giftcards_none"] = "";
> $lang["giftcards_none_selected"] = "You have not selected any giftcards to edit";
> $lang["giftcards_number"] = "เลขบัตรกำนัลต้องเป็นตัวเลขเท่านั้น";
> $lang["giftcards_number_information"] = "";
> $lang["giftcards_number_required"] = "ต้องกรอกเลขบัตรกำนัล";
> $lang["giftcards_one_or_multiple"] = "giftcard(s)";
> $lang["giftcards_person_id"] = "เจ้าของบัตร";
> $lang["giftcards_quantity"] = "ปริมาณ";
> $lang["giftcards_quantity_required"] = "Quantity is a required field. Please Close ( X ) to cancel";
> $lang["giftcards_reorder_level"] = "ยอดขั้นต่ำ";
> $lang["giftcards_retrive_giftcard_info"] = "Retrieve Giftcard Info";
> $lang["giftcards_sales_tax_1"] = "Sales Tax";
> $lang["giftcards_sales_tax_2"] = "";
> $lang["giftcards_serialized_giftcards"] = "Serialized Giftcards";
> $lang["giftcards_successful_adding"] = "You have successfully added giftcard";
> $lang["giftcards_successful_bulk_edit"] = "You have successfully updated the selected giftcards";
> $lang["giftcards_successful_deleted"] = "You have successfully deleted";
> $lang["giftcards_successful_updating"] = "You have successfully updated giftcard";
> $lang["giftcards_supplier"] = "Supplier";
> $lang["giftcards_tax_1"] = "Tax 1";
> $lang["giftcards_tax_2"] = "Tax 2";
> $lang["giftcards_tax_percent"] = "Tax Percent";
> $lang["giftcards_tax_percents"] = "";
> $lang["giftcards_unit_price"] = "ราคาปลีก";
> $lang["giftcards_upc_database"] = "";
> $lang["giftcards_update"] = "ปรับข้อมูลบัตรกำนัล";
> $lang["giftcards_use_inventory_menu"] = "";
> $lang["giftcards_value"] = "มูลค่าบัตรกำนัลต้องเป็นตัวเลขเท่านั้น";
> $lang["giftcards_value_required"] = "ต้องกรอกมูลค่าบัตรกำนัล";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/index.html opensourcepos/application/language/th/index.html
0a1
> <!DOCTYPE html>
11,15d11
< <html>
< <head>
< 	<title>403 Forbidden</title>
< </head>
< <body>
17,20d12
< <p>Directory access is forbidden.</p>
< 
< </body>
< </html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/item_kits_lang.php opensourcepos/application/language/th/item_kits_lang.php
2,40c2,21
< $lang['item_kits_name'] = 'ชื่อสินค้าหมู่';
< $lang['item_kits_description'] = 'แนะนำสินค้าหมู่';
< $lang['item_kits_no_item_kits_to_display'] = 'ไม่มีสินค้าแสดง';
< $lang['item_kits_update'] = 'ปรับปรุงสินค้าหมู่';
< $lang['item_kits_new'] = 'สร้างสินค้าหมู่';
< $lang['item_kits_none_selected'] = "คุณยังไม่ใด้เลือกสินค้าหมู่";
< $lang['item_kits_info'] = 'ข้อมูลสินค้าหมู่';
< $lang['item_kits_successful_adding'] = 'เพิ่มสินค้าหมู่สำเร็จ';
< $lang['item_kits_successful_updating'] = 'ปรับปรุงสินค้าหมู่สำเร็จ';
< $lang['item_kits_error_adding_updating'] = 'เพิ่ม/ปรับปรุงสินค้าหมู่ล้มเหลว';
< $lang['item_kits_successful_deleted'] = 'ลบสำเร็จ';
< $lang['item_kits_confirm_delete'] = 'แน่ใจหรือไม่ที่จะลบสินค้าหมู่ที่ถูกเลือก?';
< $lang['item_kits_one_or_multiple'] = 'สินค้าหมู่';
< $lang['item_kits_cannot_be_deleted'] = 'ไม่สามารถลบได้';
< $lang['item_kits_add_item'] = 'เหิ่มสินคัา';
< $lang['item_kits_items'] = 'สินค้า';
< $lang['item_kits_item'] = 'สินค้า';
< $lang['item_kits_quantity'] = 'จำนวน';
< ?>
< <?php
< $lang['item_kits_name'] = 'ชื่อสินค้าหมู่';
< $lang['item_kits_description'] = 'แนะนำสินค้าหมู่';
< $lang['item_kits_no_item_kits_to_display'] = 'ไม่มีสินค้าแสดง';
< $lang['item_kits_update'] = 'ปรับปรุงสินค้าหมู่';
< $lang['item_kits_new'] = 'สร้างสินค้าหมู่';
< $lang['item_kits_none_selected'] = "คุณยังไม่ใด้เลือกสินค้าหมู่";
< $lang['item_kits_info'] = 'ข้อมูลสินค้าหมู่';
< $lang['item_kits_successful_adding'] = 'เพิ่มสินค้าหมู่สำเร็จ';
< $lang['item_kits_successful_updating'] = 'ปรับปรุงสินค้าหมู่สำเร็จ';
< $lang['item_kits_error_adding_updating'] = 'เพิ่ม/ปรับปรุงสินค้าหมู่ล้มเหลว';
< $lang['item_kits_successful_deleted'] = 'ลบสำเร็จ';
< $lang['item_kits_confirm_delete'] = 'แน่ใจหรือไม่ที่จะลบสินค้าหมู่ที่ถูกเลือก?';
< $lang['item_kits_one_or_multiple'] = 'สินค้าหมู่';
< $lang['item_kits_cannot_be_deleted'] = 'ไม่สามารถลบได้';
< $lang['item_kits_add_item'] = 'เหิ่มสินคัา';
< $lang['item_kits_items'] = 'สินค้า';
< $lang['item_kits_item'] = 'สินค้า';
< $lang['item_kits_quantity'] = 'จำนวน';
< ?>
---
> 
> $lang["item_kits_add_item"] = "เหิ่มสินคัา";
> $lang["item_kits_cannot_be_deleted"] = "ไม่สามารถลบได้";
> $lang["item_kits_confirm_delete"] = "แน่ใจหรือไม่ที่จะลบสินค้าหมู่ที่ถูกเลือก?";
> $lang["item_kits_description"] = "แนะนำสินค้าหมู่";
> $lang["item_kits_error_adding_updating"] = "เพิ่ม/ปรับปรุงสินค้าหมู่ล้มเหลว";
> $lang["item_kits_info"] = "ข้อมูลสินค้าหมู่";
> $lang["item_kits_item"] = "สินค้า";
> $lang["item_kits_items"] = "สินค้า";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "ชื่อสินค้าหมู่";
> $lang["item_kits_new"] = "สร้างสินค้าหมู่";
> $lang["item_kits_no_item_kits_to_display"] = "ไม่มีสินค้าแสดง";
> $lang["item_kits_none_selected"] = "คุณยังไม่ใด้เลือกสินค้าหมู่";
> $lang["item_kits_one_or_multiple"] = "สินค้าหมู่";
> $lang["item_kits_quantity"] = "จำนวน";
> $lang["item_kits_successful_adding"] = "เพิ่มสินค้าหมู่สำเร็จ";
> $lang["item_kits_successful_deleted"] = "ลบสำเร็จ";
> $lang["item_kits_successful_updating"] = "ปรับปรุงสินค้าหมู่สำเร็จ";
> $lang["item_kits_update"] = "ปรับปรุงสินค้าหมู่";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/items_lang.php opensourcepos/application/language/th/items_lang.php
2,81d1
< $lang['items_item_number']='โค๊ด';
< $lang['items_retrive_item_info']='รับข้อมูลสินค้า';
< $lang['items_description']='รายละเอียด';
< $lang['items_amazon']='Amazon';
< $lang['items_upc_database']='UPC ฐานข้อมูล';
< $lang['items_cannot_find_item']='ไม่พบข้อมูลของสินค้า';
< $lang['items_info_provided_by']='จัดเตรียมข้อมูลโดย';
< $lang['items_basic_information']='ข้อมูลสินค้ส';
< $lang['items_number_information']='หมายเลขสินค้า';
< $lang['items_new']='สินค้าใหม่';
< $lang['items_update']='ปรับแต่งสินค้า';
< $lang['items_item']='สินค้า';
< $lang['items_edit_multiple_items']='แก้ใขสินค้าต่างๆ';
< $lang['items_name']='ชื่อสินค้า';
< $lang['items_category']='หมวดหมู่';
< $lang['items_cost_price']='ราคาทุน';//GARRISON ADDED 4/21/2013
< $lang['items_unit_price']='ราคาขาย';//GARRISON ADDED 4/21/2013
< $lang['items_tax_1']='ภาษี 1';
< $lang['items_tax_2']='ภาษี 2';
< $lang['items_sales_tax_1'] = 'ถาษีขาย';
< $lang['items_sales_tax_2'] = 'ภาษีขาย 2';
< $lang['items_tax_percent']='ภาษี(%)';
< $lang['items_tax_percents']='ภาษี(%)';
< $lang['items_reorder_level']='ระดับการสั่งใหม่';
< $lang['items_quantity']='จำนวน';
< $lang['items_reorder_level']='ระดับการสั่งใหม่';
< $lang['items_no_items_to_display']='ไม่มีสินค้าแสดง';
< $lang['items_bulk_edit']='แก้ไขความจุ';
< $lang['items_confirm_delete']='แน่ใจหรือไม่ที่จะลบสินค้าที่ถูกเลือก?';
< $lang['items_none_selected']='กรุณาเลือสินค้าที่ต้องการแก้ไข';
< $lang['items_confirm_bulk_edit']='แน่ใจหรือไม่ที่จะแก้ใขสินค้าทั้งหมดที่คุณเลือก?';
< $lang['items_successful_bulk_edit']='ปรับแต่งสินค้าสำเร็จ';
< $lang['items_error_updating_multiple']='ปรับแต่งสินค้าล้มเหลว';
< $lang['items_edit_fields_you_want_to_update']='แก้ไขสินค้าทุกชนิดที่คุณเลือก';
< $lang['items_error_adding_updating'] = 'เพิ่ม/ปรับแต่ง สินค้าล้มเหลว';
< $lang['items_successful_adding']='เพิ่มสินค้าสำเร็จ';
< $lang['items_successful_updating']='ปรับแต่งสินค้าสำเร็จ';
< $lang['items_successful_deleted']='ลบสินค้าสำเร็จ';
< $lang['items_one_or_multiple']='สินค้า(s)';
< $lang['items_cannot_be_deleted']='ไมม่สามารถลบสินค้าที่เลือก, สินค้าที่เลือกถูกขายไปแล้ว.';
< $lang['items_name_required']='ชื่อสินค้าต้องกรอก';
< $lang['items_category_required']='หมวดหมู่สินค้าต้องกรอก';
< $lang['items_buy_price_required']='ราคาซื้อขายต้องกรอก';		//GARRISON UPDATED 6/3/2013
< $lang['items_unit_price_required']='ราคาต่อหน่วยต้องกรอก';		//GARRISON UPDATED 6/3/2013
< $lang['items_cost_price_required']='ราคาทุนต้องกรอก';	//GARRISON UPDATED 6/3/2013
< $lang['items_tax_percent_required']='เปอร์เซ็นต์ต้องกรอก';
< $lang['items_quantity_required']='จำนวนต้องกรอก';
< $lang['items_reorder_level_required']='ระดับการสั่งไหม่ต้องกรอก';
< $lang['items_unit_price_number']='ราคาต่อหน่วยต้องเป็นตัวเลข';
< $lang['items_cost_price_number']='ราคาทุนต้องเป็นตัวเลข';
< $lang['items_quantity_number']='จำนวนต้องเป็นตัวเลข';
< $lang['items_reorder_level_number']='ระดับการสั่งใหม่ต้องเป็นตัวเลข';
< $lang['items_none'] = 'ว่างเปล่า';
< $lang['items_supplier'] = 'ผู้ผลิต';
< $lang['items_generate_barcodes'] = 'สร้างบาร์โค๊ด';
< $lang['items_must_select_item_for_barcode'] = 'คุต้องเลือกสินค้าอย่างน้อยหนึ่งอย่างเพื่อจะสร้างบาร์โค๊ด';
< $lang['items_excel_import_failed'] = 'นำเข้าข้อมูล Excel ล้มเหลว';
< $lang['items_allow_alt_desciption'] = 'Allow Alt Description';
< $lang['items_is_serialized'] = 'สินค้ามีซีเรียวนัมเบอร์';
< $lang['items_low_inventory_items'] = 'สินค้าคงเหลือน้อย';
< $lang['items_serialized_items'] = 'รหัสสินค้า';
< $lang['items_no_description_items'] = 'สินค้าที่ไม่มีคำอธิบายหรือวิธีการใช้';
< $lang['items_search_custom_items'] = 'Search Custom Fields';//GARRISON ADDED
< $lang['items_inventory_comments']='คำอธิบาย';
< $lang['items_count']='แก้ไขจำนวนสินค้าคงคลัง';
< $lang['items_details_count']='รายละเอียดจำนวนสินค้าคงคลัง';
< $lang['items_add_minus']='เพิ่ม/ลบ จำนวนสินค้าคงคลัง';
< $lang['items_current_quantity']='ปริมาณสินค้าคงคลัง';
< $lang['items_quantity_required']='จำนวนต้องกรอก. กรุณาปิดเพื่อยกเลิก';
< $lang['items_do_nothing'] = 'ไม่ต้องทำอะไร';
< $lang['items_change_all_to_serialized'] = 'เปลี่ยนแปลงรหัสสินค้าทั้งหมด';
< $lang['items_change_all_to_unserialized'] = 'ลบรหัสสินค้าทั้งหมด';
< $lang['items_change_all_to_allow_alt_desc'] = ' Allow Alt Desc For All';
< $lang['items_change_all_to_not_allow_allow_desc'] = 'Not Allow Alt Desc For All';
< $lang['items_use_inventory_menu'] = 'ใช้สินค้าคงเหลือเมนู';
< $lang['items_manually_editing_of_quantity'] = 'แก้ไขจำนวน';
< $lang['items_inventory'] = 'สินค้าคงเหลือ';
< $lang['items_location'] = 'ที่ตั้ง';
< $lang['items_unit_quantity'] = 'จำนวนหน่วย';
< $lang['items_related_number'] = 'สินค้าที่เกี่ยวข้อง';
83,85c3,88
< $lang['items_stock_type_warehouse'] = 'สินค้าหลังร้าน';
< $lang['items_stock_type'] = 'ชนิดของสินค้า';
< ?>
---
> $lang["items_add_minus"] = "เพิ่ม/ลบ จำนวนสินค้าคงคลัง";
> $lang["items_allow_alt_desciption"] = "Allow Alt Description";
> $lang["items_allow_alt_description"] = "แสดงข้อมูลเพิ่มเติม";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "ข้อมูลสินค้า";
> $lang["items_bulk_edit"] = "แก้ไขความจุ";
> $lang["items_buy_price_required"] = "ราคาซื้อขายต้องกรอก";
> $lang["items_cannot_be_deleted"] = "ไม่สามารถลบสินค้าที่เลือก, สินค้าที่เลือกถูกขายไปแล้ว.";
> $lang["items_cannot_find_item"] = "ไม่พบข้อมูลของสินค้า";
> $lang["items_category"] = "หมวดหมู่";
> $lang["items_category_required"] = "หมวดหมู่สินค้าต้องกรอก";
> $lang["items_change_all_to_allow_alt_desc"] = " Allow Alt Desc For All";
> $lang["items_change_all_to_not_allow_allow_desc"] = "Not Allow Alt Desc For All";
> $lang["items_change_all_to_serialized"] = "เปลี่ยนแปลงรหัสสินค้าทั้งหมด";
> $lang["items_change_all_to_unserialized"] = "ลบรหัสสินค้าทั้งหมด";
> $lang["items_confirm_bulk_edit"] = "แน่ใจหรือไม่ที่จะแก้ใขสินค้าทั้งหมดที่คุณเลือก?";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "โปรดยืนยันการลบสินค้าที่ถูกเลือก?";
> $lang["items_cost_price"] = "ราคาทุน";
> $lang["items_cost_price_number"] = "ราคาทุนต้องเป็นตัวเลข";
> $lang["items_cost_price_required"] = "ราคาทุนต้องกรอก";
> $lang["items_count"] = "แก้ไขจำนวนสินค้าคงคลัง";
> $lang["items_current_quantity"] = "ปริมาณสินค้าคงคลัง";
> $lang["items_description"] = "รายละเอียด";
> $lang["items_details_count"] = "รายละเอียดจำนวนสินค้าคงคลัง";
> $lang["items_do_nothing"] = "ไม่ต้องทำอะไร";
> $lang["items_edit_fields_you_want_to_update"] = "แก้ไขสินค้าทุกชนิดที่คุณเลือก";
> $lang["items_edit_multiple_items"] = "แก้ใขสินค้าต่างๆ";
> $lang["items_error_adding_updating"] = "เพิ่ม/ปรับแต่ง สินค้าล้มเหลว";
> $lang["items_error_updating_multiple"] = "ปรับแต่งสินค้าล้มเหลว";
> $lang["items_excel_import_failed"] = "นำเข้าข้อมูล Excel ล้มเหลว";
> $lang["items_generate_barcodes"] = "พิมพ์บาร์โค๊ด";
> $lang["items_image"] = "รูป";
> $lang["items_info_provided_by"] = "จัดเตรียมข้อมูลโดย";
> $lang["items_inventory"] = "สินค้าคงเหลือ";
> $lang["items_inventory_comments"] = "คำอธิบาย";
> $lang["items_is_deleted"] = "ถูกลบแล้ว";
> $lang["items_is_serialized"] = "สินค้ามีซีเรียลนัมเบอร์";
> $lang["items_item"] = "สินค้า";
> $lang["items_item_number"] = "โค๊ด";
> $lang["items_item_number_duplicate"] = "The item number is already present in the database";
> $lang["items_location"] = "ที่ตั้ง";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "สินค้าคงเหลือน้อย";
> $lang["items_manually_editing_of_quantity"] = "แก้ไขจำนวน";
> $lang["items_must_select_item_for_barcode"] = "คุต้องเลือกสินค้าอย่างน้อยหนึ่งอย่างเพื่อจะสร้างบาร์โค๊ด";
> $lang["items_name"] = "ชื่อสินค้า";
> $lang["items_name_required"] = "ชื่อสินค้าต้องกรอก";
> $lang["items_new"] = "เพิ่มรายการสินค้า";
> $lang["items_no_description_items"] = "สินค้าที่ไม่มีคำอธิบายหรือวิธีการใช้";
> $lang["items_no_items_to_display"] = "ไม่มีสินค้าแสดง";
> $lang["items_none"] = "ว่างเปล่า";
> $lang["items_none_selected"] = "กรุณาเลือสินค้าที่ต้องการแก้ไข";
> $lang["items_number_information"] = "หมายเลขสินค้า";
> $lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
> $lang["items_one_or_multiple"] = "สินค้า(s)";
> $lang["items_quantity"] = "จำนวน";
> $lang["items_quantity_number"] = "จำนวนต้องเป็นตัวเลข";
> $lang["items_quantity_required"] = "จำนวนต้องกรอก";
> $lang["items_receiving_quantity"] = "ยอดรับมา";
> $lang["items_reorder_level"] = "ระดับการสั่งใหม่";
> $lang["items_reorder_level_number"] = "ระดับการสั่งใหม่ต้องเป็นตัวเลข";
> $lang["items_reorder_level_required"] = "ระดับการสั่งไหม่ต้องกรอก";
> $lang["items_retrive_item_info"] = "รับข้อมูลสินค้า";
> $lang["items_sales_tax_1"] = "ถาษีขาย";
> $lang["items_sales_tax_2"] = "ภาษีขาย 2";
> $lang["items_search_custom_items"] = "ค้นหาในฟิลด์เสริม";
> $lang["items_serialized_items"] = "รหัสสินค้า";
> $lang["items_stock_location"] = "ที่เก็บ";
> $lang["items_successful_adding"] = "เพิ่มสินค้าสำเร็จ";
> $lang["items_successful_bulk_edit"] = "ปรับแต่งสินค้าสำเร็จ";
> $lang["items_successful_deleted"] = "ลบสินค้าสำเร็จ";
> $lang["items_successful_updating"] = "ปรับแต่งสินค้าสำเร็จ";
> $lang["items_supplier"] = "ผู้ผลิต";
> $lang["items_tax_1"] = "ภาษี 1";
> $lang["items_tax_2"] = "ภาษี 2";
> $lang["items_tax_percent"] = "ภาษี(%)";
> $lang["items_tax_percent_required"] = "เปอร์เซ็นต์ต้องกรอก";
> $lang["items_tax_percents"] = "ภาษี(%)";
> $lang["items_unit_price"] = "ราคาขาย";
> $lang["items_unit_price_number"] = "ราคาต่อหน่วยต้องเป็นตัวเลข";
> $lang["items_unit_price_required"] = "ราคาต่อหน่วยต้องกรอก";
> $lang["items_upc_database"] = "UPC ฐานข้อมูล";
> $lang["items_update"] = "ปรับแต่งสินค้า";
> $lang["items_use_inventory_menu"] = "ใช้เมนูสินค้าคงเหลือ";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/login_lang.php opensourcepos/application/language/th/login_lang.php
2,16c2,8
< $lang['login_login']='ลงชื่อเข้าใช้';
< $lang['login_username']='ชื่อผู้ใช้';
< $lang['login_password']='รหัสผ่าน';
< $lang['login_go']='GOOOO';
< $lang['login_invalid_username_and_password']='ชื่อผู้ใช้/รหัส ไม่ถูกต้อง';
< $lang['login_welcome_message']='ยินดีต้องรับสู่ระบบ Open Source Point of Sale. เพื่อที่จะไปต่อ, กรุณาเข้าสู่ระบบโดยใส่ ชื่อผู้ใช้ และ รหัสผ่านที่อยู่ด้านล่าง.';
< ?>
< <?php
< $lang['login_login']='ลงชื่อเข้าใช้';
< $lang['login_username']='ชื่อผู้ใช้';
< $lang['login_password']='รหัสผ่าน';
< $lang['login_go']='GOOOO';
< $lang['login_invalid_username_and_password']='ชื่อผู้ใช้/รหัส ไม่ถูกต้อง';
< $lang['login_welcome_message']='ยินดีต้องรับสู่ระบบ Open Source Point of Sale. เพื่อที่จะไปต่อ, กรุณาเข้าสู่ระบบโดยใส่ ชื่อผู้ใช้ และ รหัสผ่านที่อยู่ด้านล่าง.';
< ?>
---
> 
> $lang["login_go"] = "GOOOO";
> $lang["login_invalid_username_and_password"] = "ชื่อผู้ใช้/รหัส ไม่ถูกต้อง";
> $lang["login_login"] = "ลงชื่อเข้าใช้";
> $lang["login_password"] = "รหัสผ่าน";
> $lang["login_username"] = "ชื่อผู้ใช้";
> $lang["login_welcome_message"] = "ยินดีต้องรับสู่ระบบ Open Source Point of Sale. เพื่อที่จะไปต่อ, กรุณาเข้าสู่ระบบโดยใส่ ชื่อผู้ใช้ และ รหัสผ่านที่อยู่ด้านล่าง.";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/module_lang.php opensourcepos/application/language/th/module_lang.php
2d1
< $lang['module_home']='Home';
4,68c3,23
< $lang['module_customers']='ลูกค้า';
< $lang['module_customers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ลูกค้า';
< 
< $lang['module_suppliers']='ผู้ผลิต';
< $lang['module_suppliers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ผู้ผลิต';
< 
< $lang['module_employees']='พนักงาน';
< $lang['module_employees_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา พนักงาน';
< 
< $lang['module_sales']='งานขาย';
< $lang['module_sales_desc']='งานขาย และ รับคืน';
< 
< $lang['module_reports']='รายงาน';
< $lang['module_reports_desc']='สร้างและตรวจสอบรายงาน';
< 
< $lang['module_items']='สินค้า';
< $lang['module_items_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้า';
< 
< $lang['module_config']='ปรับแต่งร้านค้า';
< $lang['module_config_desc']='ปรับแต่งร้านค้า';
< 
< $lang['module_receivings']='สินค้าเข้า';
< $lang['module_receivings_desc']='สินค้าเข้า';
< 
< $lang['module_giftcards']='กิ๊บการ์ด';
< $lang['module_giftcards_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา กิ๊บการ์ด';
< 
< $lang['module_item_kits']='สินค้าหมู่';
< $lang['module_item_kits_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้าหมู่';
< 
< ?>
< <?php
< $lang['module_home']='Home';
< 
< $lang['module_customers']='ลูกค้า';
< $lang['module_customers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ลูกค้า';
< 
< $lang['module_suppliers']='ผู้ผลิต';
< $lang['module_suppliers_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา ผู้ผลิต';
< 
< $lang['module_employees']='พนักงาน';
< $lang['module_employees_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา พนักงาน';
< 
< $lang['module_sales']='งานขาย';
< $lang['module_sales_desc']='งานขาย และ รับคืน';
< 
< $lang['module_reports']='รายงาน';
< $lang['module_reports_desc']='สร้างและตรวจสอบรายงาน';
< 
< $lang['module_items']='สินค้า';
< $lang['module_items_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้า';
< 
< $lang['module_config']='ปรับแต่งร้านค้า';
< $lang['module_config_desc']='ปรับแต่งร้านค้า';
< 
< $lang['module_receivings']='สินค้าเข้า';
< $lang['module_receivings_desc']='สินค้าเข้า';
< 
< $lang['module_giftcards']='กิ๊บการ์ด';
< $lang['module_giftcards_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา กิ๊บการ์ด';
< 
< $lang['module_item_kits']='สินค้าหมู่';
< $lang['module_item_kits_desc']='เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้าหมู่';
< 
< ?>
---
> $lang["module_config"] = "ตั้งค่า";
> $lang["module_config_desc"] = "ปรับแต่งร้านค้า";
> $lang["module_customers"] = "ลูกค้า";
> $lang["module_customers_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา ลูกค้า";
> $lang["module_employees"] = "พนักงาน";
> $lang["module_employees_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา พนักงาน";
> $lang["module_giftcards"] = "บัตรกำนัล";
> $lang["module_giftcards_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา บัตรกำนัล";
> $lang["module_home"] = "Home";
> $lang["module_item_kits"] = "สินค้าหมู่";
> $lang["module_item_kits_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้าหมู่";
> $lang["module_items"] = "สินค้า";
> $lang["module_items_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา สินค้า";
> $lang["module_receivings"] = "สินค้าเข้า";
> $lang["module_receivings_desc"] = "สินค้าเข้า";
> $lang["module_reports"] = "รายงาน";
> $lang["module_reports_desc"] = "สร้างและตรวจสอบรายงาน";
> $lang["module_sales"] = "งานขาย";
> $lang["module_sales_desc"] = "งานขาย และ รับคืน";
> $lang["module_suppliers"] = "ผู้ผลิต";
> $lang["module_suppliers_desc"] = "เพิ่ม, อัพเดท, ลบ, และค้นหา ผู้ผลิต";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/receivings_lang.php opensourcepos/application/language/th/receivings_lang.php
2,26d1
< $lang['recvs_register']='รับสินค้า';
< $lang['recvs_mode']='วิธีการรับสินค้า';
< $lang['recvs_receiving']='รับ';
< $lang['recvs_return']='คืน';
< $lang['recvs_requisition']='เบิกสินค้า';
< $lang['recvs_total']='รวม';
< $lang['recvs_cost']='ราคา';
< $lang['recvs_quantity']='จำนวน.';
< $lang['recvs_discount']='ส่วนลด %';
< $lang['recvs_edit']='แก้ไข';
< $lang['recvs_new_supplier'] = 'ผู้ผลิตรายใหม่';
< $lang['recvs_supplier'] = 'ผู้ผลิต';
< $lang['recvs_select_supplier']='เลือกผู้ผลิต (ทางเลือก)';
< $lang['recvs_start_typing_supplier_name']='เริ่มต้นพิมพ์ชื่อผู้ผลิต...';
< $lang['recvs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
< $lang['recvs_error_editing_item']='แก้ไขสินค้าล้มเหลว';
< $lang['recvs_receipt']='บิลสินค้าเข้า';
< $lang['recvs_complete_receiving']='เสร็จสิ้น';
< $lang['recvs_confirm_finish_receiving'] = 'แน่ใจหรือไม่ที่จะส่งรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
< $lang['recvs_confirm_cancel_receiving'] = 'แน่ใจหรือไม่ที่จะล้างรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
< $lang['recvs_find_or_scan_item']='ค้นหาสินค้า';
< $lang['recvs_find_or_scan_item_or_receipt']='ค้นหาสินค้าหรือบิล';
< $lang['recvs_id']='รายการสินค้าเข้า ID';
< $lang['recvs_item_name'] = 'ชื่อสินคัา';
< $lang['receivings_transaction_failed'] = 'ดำเนินการรับสินค้าล้มเหลว';
28,72c3,51
< $lang['reqs_quantity'] ='จำนวน';
< $lang['reqs_related_item']='สินค้าที่เกี่ยวข้อง';
< $lang['reqs_unit_quantity']='จำนวนหน่วย';
< $lang['reqs_unit_quantity_total']='จำนวนรวม';
< $lang['reqs_related_item_quantity']='จำนวนสินค้าที่เกี่ยวข้อง';
< $lang['reqs_receipt']='บิลเบิกสินค้า';
< $lang['reqs_transaction_failed'] = 'เบิกสินค้าล้มเหลว';
< $lang['reqs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
< ?>
< <?php
< $lang['recvs_register']='รับสินค้า';
< $lang['recvs_mode']='วิธีการรับสินค้า';
< $lang['recvs_receiving']='รับ';
< $lang['recvs_return']='คืน';
< $lang['recvs_requisition']='เบิกสินค้า';
< $lang['recvs_total']='รวม';
< $lang['recvs_cost']='ราคา';
< $lang['recvs_quantity']='จำนวน.';
< $lang['recvs_discount']='ส่วนลด %';
< $lang['recvs_edit']='แก้ไข';
< $lang['recvs_new_supplier'] = 'ผู้ผลิตรายใหม่';
< $lang['recvs_supplier'] = 'ผู้ผลิต';
< $lang['recvs_select_supplier']='เลือกผู้ผลิต (ทางเลือก)';
< $lang['recvs_start_typing_supplier_name']='เริ่มต้นพิมพ์ชื่อผู้ผลิต...';
< $lang['recvs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
< $lang['recvs_error_editing_item']='แก้ไขสินค้าล้มเหลว';
< $lang['recvs_receipt']='บิลสินค้าเข้า';
< $lang['recvs_complete_receiving']='เสร็จสิ้น';
< $lang['recvs_confirm_finish_receiving'] = 'แน่ใจหรือไม่ที่จะส่งรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
< $lang['recvs_confirm_cancel_receiving'] = 'แน่ใจหรือไม่ที่จะล้างรายการสินค้าเข้า? ถ้าตกลงไม่สามารถย้อนกลับใด้.';
< $lang['recvs_find_or_scan_item']='ค้นหาสินค้า';
< $lang['recvs_find_or_scan_item_or_receipt']='ค้นหาสินค้าหรือบิล';
< $lang['recvs_id']='รายการสินค้าเข้า ID';
< $lang['recvs_item_name'] = 'ชื่อสินคัา';
< $lang['receivings_transaction_failed'] = 'ดำเนินการรับสินค้าล้มเหลว';
< 
< $lang['reqs_quantity'] ='จำนวน';
< $lang['reqs_related_item']='สินค้าที่เกี่ยวข้อง';
< $lang['reqs_unit_quantity']='จำนวนหน่วย';
< $lang['reqs_unit_quantity_total']='จำนวนรวม';
< $lang['reqs_related_item_quantity']='จำนวนสินค้าที่เกี่ยวข้อง';
< $lang['reqs_receipt']='บิลเบิกสินค้า';
< $lang['reqs_transaction_failed'] = 'เบิกสินค้าล้มเหลว';
< $lang['reqs_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
< ?>
---
> $lang["receivings_transaction_failed"] = "";
> $lang["recvs_basic_information"] = "";
> $lang["recvs_cancel_receiving"] = "";
> $lang["recvs_cannot_be_deleted"] = "";
> $lang["recvs_comments"] = "";
> $lang["recvs_complete_receiving"] = "";
> $lang["recvs_confirm_cancel_receiving"] = "";
> $lang["recvs_confirm_finish_receiving"] = "";
> $lang["recvs_cost"] = "";
> $lang["recvs_date"] = "";
> $lang["recvs_date_required"] = "";
> $lang["recvs_date_type"] = "";
> $lang["recvs_delete_confirmation"] = "";
> $lang["recvs_delete_entire_sale"] = "";
> $lang["recvs_discount"] = "ส่วนลด %";
> $lang["recvs_edit"] = "แก้ไข";
> $lang["recvs_edit_sale"] = "Edit Receiving";
> $lang["recvs_employee"] = "Employee";
> $lang["recvs_error_editing_item"] = "แก้ไขสินค้าล้มเหลว";
> $lang["recvs_error_requisition"] = "";
> $lang["recvs_find_or_scan_item"] = "ค้นหาสินค้า";
> $lang["recvs_find_or_scan_item_or_receipt"] = "ค้นหาสินค้าหรือบิล";
> $lang["recvs_id"] = "รายการสินค้าเข้า ID";
> $lang["recvs_invoice_enable"] = "Create Invoice";
> $lang["recvs_invoice_number"] = "";
> $lang["recvs_invoice_number_duplicate"] = "";
> $lang["recvs_item_name"] = "ชื่อสินคัา";
> $lang["recvs_mode"] = "ประเภทธุรกรรม";
> $lang["recvs_new_supplier"] = "ผู้ผลิตรายใหม่";
> $lang["recvs_one_or_multiple"] = "";
> $lang["recvs_print_after_sale"] = "พิมพ์บิลหลังการขาย";
> $lang["recvs_quantity"] = "จำนวน.";
> $lang["recvs_receipt"] = "บิลสินค้าเข้า";
> $lang["recvs_receipt_number"] = "";
> $lang["recvs_receiving"] = "รับสินค้า";
> $lang["recvs_register"] = "รับสินค้า";
> $lang["recvs_requisition"] = "เบิกสินค้า";
> $lang["recvs_return"] = "คืนสินค้า";
> $lang["recvs_select_supplier"] = "เลือกผู้ผลิต (ทางเลือก)";
> $lang["recvs_start_typing_supplier_name"] = "เริ่มต้นพิมพ์ชื่อผู้ผลิต...";
> $lang["recvs_stock_destination"] = "Stock destination";
> $lang["recvs_stock_locaiton"] = "Stock location";
> $lang["recvs_stock_source"] = "Stock source";
> $lang["recvs_successfully_deleted"] = "You have successfully deleted";
> $lang["recvs_successfully_updated"] = "Receiving successfully updated";
> $lang["recvs_supplier"] = "ผู้ผลิต";
> $lang["recvs_total"] = "รวม";
> $lang["recvs_unable_to_add_item"] = "ไม่สามารถเพิ่มสินค้าได้";
> $lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/reports_lang.php opensourcepos/application/language/th/reports_lang.php
2,86d1
< $lang['reports_reports'] = 'รายงาน';
< $lang['reports_report'] = 'รายงาน';
< $lang['reports_welcome_message'] = 'ยินดีต้อนรับเข้าสู่รายงาน. โปรดเลือกชนิดของรายงาน.';
< $lang['reports_sales_summary_report'] = 'รายงานสรุปการขาย';
< $lang['reports_categories_summary_report'] = 'รายงานสรุปหมวดหมู่';
< $lang['reports_customers_summary_report'] = 'รายงานสรุปลูกค้า';
< $lang['reports_suppliers_summary_report'] = 'รายงานสรุปผู้ผลิต';
< $lang['reports_items_summary_report'] = 'รายงานสรุปสินค้า';
< $lang['reports_employees_summary_report'] = 'รายงานสรุปพนักงาน';
< $lang['reports_taxes_summary_report'] = 'รายงานสรุปภาษี';
< $lang['reports_date'] = 'วันที่';
< $lang['reports_name'] = 'ชื่อ';
< $lang['reports_quantity_purchased'] = 'จำนวนการช์้อ';
< $lang['reports_sale_id'] = 'IDขาย';
< $lang['reports_items_purchased'] = 'สินค้าที่ถูกซื้อ';
< $lang['reports_sold_by'] = 'ขายโดย';
< $lang['reports_sold_to'] = 'ขายไปที่';
< $lang['reports_category'] = 'หมวดหมู่';
< $lang['reports_customer'] = 'ลูกค้า';
< $lang['reports_employee'] = 'พนักงาน';
< $lang['reports_item'] = 'สินค้า';
< $lang['reports_items'] = 'สินค้า';
< $lang['reports_supplier'] = 'ผู้ผลิต';
< $lang['reports_employees'] = 'พนักงาน';
< $lang['reports_subtotal'] = 'ยอดรวมรอง';
< $lang['reports_total'] = 'ยอดรวม';
< $lang['reports_tax'] = 'ภาษี';
< $lang['reports_profit'] = 'กำไร';
< $lang['reports_report_input'] = 'ข้อมูลรายงาน';
< $lang['reports_type'] = 'ชนิด';
< $lang['reports_date_range'] = 'ระหว่างวันที่';
< $lang['reports_today'] = 'วันนี้';
< $lang['reports_yesterday'] = 'เมื่อวานนี้';
< $lang['reports_last_7'] = '7 วันสุดท้าย';
< $lang['reports_this_month'] = 'เดือนนี้';
< $lang['reports_last_month'] = 'เดือนที่แล้ว';
< $lang['reports_this_year'] = 'ปีนี้';
< $lang['reports_last_year'] = 'ปีที่แล้ว';
< $lang['reports_all_time'] = 'เวลาทั้งหมด';
< $lang['reports_detailed_sales_report'] = 'รายงายงานขาย';
< $lang['reports_comments'] = 'หมายเหตุ';
< $lang['reports_discount'] = 'ส่วนลด';
< $lang['reports_payment_type'] = 'ชนิดของการจ่าย';
< $lang['reports_sales'] = 'ขาย';
< $lang['reports_categories'] = 'หมวดหมู่';
< $lang['reports_customers'] = 'ลูกค้า';
< $lang['reports_suppliers'] = 'ผู้ผลิต';
< $lang['reports_items'] = 'สินค้า';
< $lang['reports_employees'] = 'พนักงาน';
< $lang['reports_taxes'] = 'ภาษี';
< $lang['reports_customer'] = 'ลูกค้า';
< $lang['reports_employee'] = 'พนักงาน';
< $lang['reports_tax_percent'] = 'เปอร์เซ็นภาษี';
< $lang['reports_quantity_purchased'] = 'จำนวนซื้อ';
< $lang['reports_serial_number'] = 'Serial #';
< $lang['reports_description'] = 'คำอธิบาย';
< $lang['reports_date'] = 'วันที่';
< $lang['reports_sales_amount'] = 'จำนวนขาย';
< $lang['reports_revenue'] = 'รายรับ';
< $lang['reports_discounts'] = 'ส่วนลด';
< $lang['reports_discounts_summary_report'] = 'รายงานสรุปส่วนลด';
< $lang['reports_discount_percent'] = 'เปอร์เซ็นต์ส่วนลด';
< $lang['reports_count'] = 'นับ';
< $lang['reports_summary_reports'] = 'สรุปรายงาน';
< $lang['reports_graphical_reports'] = 'รายงายแบบกราฟ';
< $lang['reports_detailed_reports'] = 'รายละเอียดรายงาน';
< $lang['reports_inventory_reports'] = 'รายงานสินค้าคงเหลือ';
< $lang['reports_low_inventory'] = 'สินค้าเหลือน้อย';
< $lang['reports_inventory_summary'] = ' รายงานสินค้าคงเหลือ';
< $lang['reports_item_number'] = 'เลขสินค้า';
< $lang['reports_reorder_level'] = 'ระดับการสั่งใหม่';
< $lang['reports_low_inventory_report'] = 'รายงานสินค้าที่เหลือน้อย';
< $lang['reports_item_name'] = 'ชื่อสินค้า';
< $lang['reports_inventory_summary_report'] = 'รายงานสรุปสินค้าคงเหลือ';
< $lang['reports_payment_type'] = 'ชนิดการจ่าย';
< $lang['reports_payments_summary_report'] = 'รายงานสรุปการจ่าย';
< $lang['reports_payments'] = 'รายจ่าย';
< $lang['reports_receivings'] = 'รับสินค้า';
< $lang['reports_received_by'] = 'รับโดย';
< $lang['reports_supplied_by'] = 'ผบิตโดย';
< $lang['reports_items_received'] = 'สินค้าเข้า';
< $lang['reports_detailed_receivings_report'] = 'รายงานรายละเอียกการรับของ';
< $lang['reports_sale_type'] = 'ชนิดของการขาย';
< $lang['reports_all'] = 'ทั้งหมด';
< $lang['reports_returns'] = 'คืน';
88,200c3,108
< $lang['reports_receiving_type'] = 'รูปแบบการรับสินค้า';
< $lang['reports_requisition'] = 'เบิกสินค้า';
< $lang['reports_receiving_id'] = 'IDรับสินค้า';
< $lang['reports_requisition_id'] = 'IDเบิกสินค้า';
< $lang['reports_requisition_by'] = 'ผู้เบิกสินค้า';
< $lang['reports_requisition_item'] = 'ชื่อสินค้า';
< $lang['reports_requisition_item_quantity'] = 'จำนวนเบิก';
< $lang['reports_requisition_related_item'] = 'สินค้าย่อย';
< $lang['reports_requisition_related_item_unit_quantity'] = 'จำนวนสินค้าย่ิอย';
< $lang['reports_requisition_related_item_total_quantity'] = 'จำนวนรวมสินค้าย่อย';
< $lang['reports_detailed_requisition_report'] = 'รายงานรายละเอียดการเบิกของ';
< 
< ?>
< <?php
< $lang['reports_reports'] = 'รายงาน';
< $lang['reports_report'] = 'รายงาน';
< $lang['reports_welcome_message'] = 'ยินดีต้อนรับเข้าสู่รายงาน. โปรดเลือกชนิดของรายงาน.';
< $lang['reports_sales_summary_report'] = 'รายงานสรุปการขาย';
< $lang['reports_categories_summary_report'] = 'รายงานสรุปหมวดหมู่';
< $lang['reports_customers_summary_report'] = 'รายงานสรุปลูกค้า';
< $lang['reports_suppliers_summary_report'] = 'รายงานสรุปผู้ผลิต';
< $lang['reports_items_summary_report'] = 'รายงานสรุปสินค้า';
< $lang['reports_employees_summary_report'] = 'รายงานสรุปพนักงาน';
< $lang['reports_taxes_summary_report'] = 'รายงานสรุปภาษี';
< $lang['reports_date'] = 'วันที่';
< $lang['reports_name'] = 'ชื่อ';
< $lang['reports_quantity_purchased'] = 'จำนวนการช์้อ';
< $lang['reports_sale_id'] = 'IDขาย';
< $lang['reports_items_purchased'] = 'สินค้าที่ถูกซื้อ';
< $lang['reports_sold_by'] = 'ขายโดย';
< $lang['reports_sold_to'] = 'ขายไปที่';
< $lang['reports_category'] = 'หมวดหมู่';
< $lang['reports_customer'] = 'ลูกค้า';
< $lang['reports_employee'] = 'พนักงาน';
< $lang['reports_item'] = 'สินค้า';
< $lang['reports_items'] = 'สินค้า';
< $lang['reports_supplier'] = 'ผู้ผลิต';
< $lang['reports_employees'] = 'พนักงาน';
< $lang['reports_subtotal'] = 'ยอดรวมรอง';
< $lang['reports_total'] = 'ยอดรวม';
< $lang['reports_tax'] = 'ภาษี';
< $lang['reports_profit'] = 'กำไร';
< $lang['reports_report_input'] = 'ข้อมูลรายงาน';
< $lang['reports_type'] = 'ชนิด';
< $lang['reports_date_range'] = 'ระหว่างวันที่';
< $lang['reports_today'] = 'วันนี้';
< $lang['reports_yesterday'] = 'เมื่อวานนี้';
< $lang['reports_last_7'] = '7 วันสุดท้าย';
< $lang['reports_this_month'] = 'เดือนนี้';
< $lang['reports_last_month'] = 'เดือนที่แล้ว';
< $lang['reports_this_year'] = 'ปีนี้';
< $lang['reports_last_year'] = 'ปีที่แล้ว';
< $lang['reports_all_time'] = 'เวลาทั้งหมด';
< $lang['reports_detailed_sales_report'] = 'รายงายงานขาย';
< $lang['reports_comments'] = 'หมายเหตุ';
< $lang['reports_discount'] = 'ส่วนลด';
< $lang['reports_payment_type'] = 'ชนิดของการจ่าย';
< $lang['reports_sales'] = 'ขาย';
< $lang['reports_categories'] = 'หมวดหมู่';
< $lang['reports_customers'] = 'ลูกค้า';
< $lang['reports_suppliers'] = 'ผู้ผลิต';
< $lang['reports_items'] = 'สินค้า';
< $lang['reports_employees'] = 'พนักงาน';
< $lang['reports_taxes'] = 'ภาษี';
< $lang['reports_customer'] = 'ลูกค้า';
< $lang['reports_employee'] = 'พนักงาน';
< $lang['reports_tax_percent'] = 'เปอร์เซ็นภาษี';
< $lang['reports_quantity_purchased'] = 'จำนวนซื้อ';
< $lang['reports_serial_number'] = 'Serial #';
< $lang['reports_description'] = 'คำอธิบาย';
< $lang['reports_date'] = 'วันที่';
< $lang['reports_sales_amount'] = 'จำนวนขาย';
< $lang['reports_revenue'] = 'รายรับ';
< $lang['reports_discounts'] = 'ส่วนลด';
< $lang['reports_discounts_summary_report'] = 'รายงานสรุปส่วนลด';
< $lang['reports_discount_percent'] = 'เปอร์เซ็นต์ส่วนลด';
< $lang['reports_count'] = 'นับ';
< $lang['reports_summary_reports'] = 'สรุปรายงาน';
< $lang['reports_graphical_reports'] = 'รายงายแบบกราฟ';
< $lang['reports_detailed_reports'] = 'รายละเอียดรายงาน';
< $lang['reports_inventory_reports'] = 'รายงานสินค้าคงเหลือ';
< $lang['reports_low_inventory'] = 'สินค้าเหลือน้อย';
< $lang['reports_inventory_summary'] = ' รายงานสินค้าคงเหลือ';
< $lang['reports_item_number'] = 'เลขสินค้า';
< $lang['reports_reorder_level'] = 'ระดับการสั่งใหม่';
< $lang['reports_low_inventory_report'] = 'รายงานสินค้าที่เหลือน้อย';
< $lang['reports_item_name'] = 'ชื่อสินค้า';
< $lang['reports_inventory_summary_report'] = 'รายงานสรุปสินค้าคงเหลือ';
< $lang['reports_payment_type'] = 'ชนิดการจ่าย';
< $lang['reports_payments_summary_report'] = 'รายงานสรุปการจ่าย';
< $lang['reports_payments'] = 'รายจ่าย';
< $lang['reports_receivings'] = 'รับสินค้า';
< $lang['reports_received_by'] = 'รับโดย';
< $lang['reports_supplied_by'] = 'ผบิตโดย';
< $lang['reports_items_received'] = 'สินค้าเข้า';
< $lang['reports_detailed_receivings_report'] = 'รายงานรายละเอียกการรับของ';
< $lang['reports_sale_type'] = 'ชนิดของการขาย';
< $lang['reports_all'] = 'ทั้งหมด';
< $lang['reports_returns'] = 'คืน';
< 
< $lang['reports_receiving_type'] = 'รูปแบบการรับสินค้า';
< $lang['reports_requisition'] = 'เบิกสินค้า';
< $lang['reports_receiving_id'] = 'IDรับสินค้า';
< $lang['reports_requisition_id'] = 'IDเบิกสินค้า';
< $lang['reports_requisition_by'] = 'ผู้เบิกสินค้า';
< $lang['reports_requisition_item'] = 'ชื่อสินค้า';
< $lang['reports_requisition_item_quantity'] = 'จำนวนเบิก';
< $lang['reports_requisition_related_item'] = 'สินค้าย่อย';
< $lang['reports_requisition_related_item_unit_quantity'] = 'จำนวนสินค้าย่ิอย';
< $lang['reports_requisition_related_item_total_quantity'] = 'จำนวนรวมสินค้าย่อย';
< $lang['reports_detailed_requisition_report'] = 'รายงานรายละเอียดการเบิกของ';
< 
< ?>
---
> $lang["reports_all"] = "ทั้งหมด";
> $lang["reports_all_time"] = "เวลาทั้งหมด";
> $lang["reports_categories"] = "หมวดหมู่";
> $lang["reports_categories_summary_report"] = "รายงานสรุปหมวดหมู่";
> $lang["reports_category"] = "หมวดหมู่";
> $lang["reports_comments"] = "หมายเหตุ";
> $lang["reports_count"] = "นับ";
> $lang["reports_customer"] = "ลูกค้า";
> $lang["reports_customers"] = "ลูกค้า";
> $lang["reports_customers_summary_report"] = "รายงานสรุปลูกค้า";
> $lang["reports_date"] = "วันที่";
> $lang["reports_date_range"] = "ระหว่างวันที่";
> $lang["reports_description"] = "คำอธิบาย";
> $lang["reports_detailed_receivings_report"] = "รายงานรายละเอียกการรับของ";
> $lang["reports_detailed_reports"] = "รายละเอียดรายงาน";
> $lang["reports_detailed_requisition_report"] = "รายงานรายละเอียดการเบิกของ";
> $lang["reports_detailed_sales_report"] = "รายงายงานขาย";
> $lang["reports_discount"] = "ส่วนลด";
> $lang["reports_discount_percent"] = "เปอร์เซ็นต์ส่วนลด";
> $lang["reports_discounts"] = "ส่วนลด";
> $lang["reports_discounts_summary_report"] = "รายงานสรุปส่วนลด";
> $lang["reports_employee"] = "พนักงาน";
> $lang["reports_employees"] = "พนักงาน";
> $lang["reports_employees_summary_report"] = "รายงานสรุปพนักงาน";
> $lang["reports_graphical_reports"] = "รายงายแบบกราฟ";
> $lang["reports_inventory"] = "";
> $lang["reports_inventory_low"] = "สินค้าเหลือน้อย";
> $lang["reports_inventory_low_report"] = "รายงานสินค้าที่เหลือน้อย";
> $lang["reports_inventory_reports"] = "รายงานสินค้าคงเหลือ";
> $lang["reports_inventory_summary"] = " รายงานสินค้าคงเหลือ";
> $lang["reports_inventory_summary_report"] = "รายงานสรุปสินค้าคงเหลือ";
> $lang["reports_item"] = "สินค้า";
> $lang["reports_item_name"] = "ชื่อสินค้า";
> $lang["reports_item_number"] = "เลขสินค้า";
> $lang["reports_items"] = "สินค้า";
> $lang["reports_items_purchased"] = "สินค้าที่ถูกซื้อ";
> $lang["reports_items_received"] = "สินค้าเข้า";
> $lang["reports_items_summary_report"] = "รายงานสรุปสินค้า";
> $lang["reports_last_7"] = "7 วันสุดท้าย";
> $lang["reports_last_month"] = "เดือนที่แล้ว";
> $lang["reports_last_year"] = "ปีที่แล้ว";
> $lang["reports_low_inventory"] = "";
> $lang["reports_low_inventory_report"] = "";
> $lang["reports_name"] = "ชื่อ";
> $lang["reports_payment_type"] = "ชนิดของการจ่าย";
> $lang["reports_payments"] = "รายจ่าย";
> $lang["reports_payments_summary_report"] = "รายงานสรุปการจ่าย";
> $lang["reports_profit"] = "กำไร";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "จำนวนการช์้อ";
> $lang["reports_received_by"] = "รับโดย";
> $lang["reports_receiving_id"] = "IDรับสินค้า";
> $lang["reports_receiving_type"] = "รูปแบบการรับสินค้า";
> $lang["reports_receivings"] = "รับสินค้า";
> $lang["reports_reorder_level"] = "ระดับการสั่งใหม่";
> $lang["reports_report"] = "รายงาน";
> $lang["reports_report_input"] = "ข้อมูลรายงาน";
> $lang["reports_reports"] = "รายงาน";
> $lang["reports_requisition"] = "เบิกสินค้า";
> $lang["reports_requisition_by"] = "ผู้เบิกสินค้า";
> $lang["reports_requisition_id"] = "IDเบิกสินค้า";
> $lang["reports_requisition_item"] = "ชื่อสินค้า";
> $lang["reports_requisition_item_quantity"] = "จำนวนเบิก";
> $lang["reports_requisition_related_item"] = "สินค้าย่อย";
> $lang["reports_requisition_related_item_total_quantity"] = "จำนวนรวมสินค้าย่อย";
> $lang["reports_requisition_related_item_unit_quantity"] = "จำนวนสินค้าย่ิอย";
> $lang["reports_requisitions"] = "";
> $lang["reports_returns"] = "คืน";
> $lang["reports_revenue"] = "รายรับ";
> $lang["reports_sale_id"] = "IDขาย";
> $lang["reports_sale_type"] = "ชนิดของการขาย";
> $lang["reports_sales"] = "ขาย";
> $lang["reports_sales_amount"] = "จำนวนขาย";
> $lang["reports_sales_summary_report"] = "รายงานสรุปการขาย";
> $lang["reports_serial_number"] = "Serial #";
> $lang["reports_sold_by"] = "ขายโดย";
> $lang["reports_sold_to"] = "ขายไปที่";
> $lang["reports_stock_location"] = "";
> $lang["reports_subtotal"] = "ยอดรวมรอง";
> $lang["reports_summary_reports"] = "สรุปรายงาน";
> $lang["reports_supplied_by"] = "ผบิตโดย";
> $lang["reports_supplier"] = "ผู้ผลิต";
> $lang["reports_suppliers"] = "ผู้ผลิต";
> $lang["reports_suppliers_summary_report"] = "รายงานสรุปผู้ผลิต";
> $lang["reports_tax"] = "ภาษี";
> $lang["reports_tax_percent"] = "เปอร์เซ็นภาษี";
> $lang["reports_taxes"] = "ภาษี";
> $lang["reports_taxes_summary_report"] = "รายงานสรุปภาษี";
> $lang["reports_this_month"] = "เดือนนี้";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "ปีนี้";
> $lang["reports_today"] = "วันนี้";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "ยอดรวม";
> $lang["reports_type"] = "ชนิด";
> $lang["reports_welcome_message"] = "ยินดีต้อนรับเข้าสู่รายงาน. โปรดเลือกชนิดของรายงาน.";
> $lang["reports_yesterday"] = "เมื่อวานนี้";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "ราคาทุน";
> $lang["reports_unit_price"] = "ราคาขาย";
> $lang["reports_sub_total_value"] = "ยอดรวมหักภาษี ";
> $lang["reports_total_inventory_value"] = "Total Inventory Value";
> $lang["reports_zero_and_less"] = "Zero and less";
> $lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/sales_lang.php opensourcepos/application/language/th/sales_lang.php
2,156c2,117
< $lang['sales_giftcard_number']='เลขที่ Gift Card';
< $lang['sales_giftcard']='Gift Card';
< $lang['sales_register']='ลงทะเบียนขาย';
< $lang['sales_mode']='รูปแบบการลงทะเบียน';
< $lang['sales_new_item'] = 'สินค้าใหม่';
< $lang['sales_item_name'] = 'ชื่อสินค้า';
< $lang['sales_item_number'] = 'สินค้า #';
< $lang['sales_new_customer'] = 'ลูกค้าใหม่';
< $lang['sales_customer'] = 'ลูกค้า';
< $lang['sales_no_items_in_cart']='ไม่พบสินค้าในตระกร้า';
< $lang['sales_total']='ยอดรวม';
< $lang['sales_tax_percent']='ภาษี %';
< $lang['sales_price']='ราคา';
< $lang['sales_quantity']='จำนวน';
< $lang['sales_discount']='ส่วนลด %';
< $lang['sales_edit']='แก้ไข';
< $lang['sales_payment']='รูปแบบชำระเงิน';
< $lang['sales_edit_item']='แก้ไขสินค้า';
< $lang['sales_find_or_scan_item']='ค้นหาสินค้า';
< $lang['sales_find_or_scan_item_or_receipt']='ค้นหาสินค้า หรือ บิล';
< $lang['sales_select_customer']='เลือกลูกค้า (Optional)';
< $lang['sales_start_typing_item_name']='เริ่มต้นพิมพ์ชื่อสินค้า หรือ สแกนบาร์โค๊ด...';
< $lang['sales_start_typing_customer_name']='เริ่มต้นพิมพ์ชื่อลูกค้า...';
< $lang['sales_sub_total']='ยอดรวมหักภาษี ';
< $lang['sales_tax']='ภาษี';
< $lang['sales_comment']='หมายเหตุ';
< $lang['sales_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
< $lang['sales_sale_for_customer']='ลูกค้า:';
< $lang['sales_remove_customer']='ลบลูกค้า';
< $lang['sales_error_editing_item']='แก้ไขสินค้าล้มเหลว';
< $lang['sales_complete_sale']='สำเร็จการขาย';
< $lang['sales_cancel_sale']='ยกเลิกการขาย';
< $lang['sales_add_payment']='เพิ่มบิล';
< $lang['sales_receipt']='บิลขาย';
< $lang['sales_id']='เลขที่ขาย';
< $lang['sales_return']='คืน';
< $lang['sales_confirm_finish_sale'] = 'แน่ใจหรือไม่ที่จะสำเร็จการขาย? ไม่สามารถย้อนกลับได้.';
< $lang['sales_confirm_cancel_sale'] = 'แน่ใจหรือไม่ที่จะล้างรายการขาย? สินค้าทุกอย่างจะถูกลบจากบอร์ด.';
< $lang['sales_cash'] = 'เงินสด';
< $lang['sales_check'] = 'เช็ก';
< $lang['sales_debit'] = 'เดบิทการ์ด';
< $lang['sales_credit'] = 'เครดิทการ์ด';
< $lang['sales_giftcard'] = 'กิ๊ฟการ์ด';
< $lang['sales_amount_tendered'] = 'จำนวนประมูล';
< $lang['sales_change_due'] = 'เงินทอน';
< $lang['sales_payment_not_cover_total'] = ' ปริมาณการจ่ายที่ไม่เพียงพอกะยอดรวม';
< $lang['sales_transaction_failed'] = 'การดำเนินการขายล้มเหลว';
< $lang['sales_must_enter_numeric'] = 'จำนวนที่ถุกประมูลต้องใส่ข้อมุลที่เปนตัวเลข';
< $lang['sales_must_enter_numeric_giftcard'] = 'กิ๊ฟการ์ด ต้องใส่ตัวเลขเท่านั้น';
< $lang['sales_serial'] = 'Serial';
< $lang['sales_description_abbrv'] = 'Desc';
< $lang['sales_item_out_of_stock'] = 'สินค้าจำหน่ายหมด';
< $lang['sales_item_insufficient_of_stock'] = 'จำนวนสินค้าไม่เพียงพอ';
< $lang['sales_quantity_less_than_zero'] = 'คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง';
< $lang['sales_successfully_updated'] = 'อัพเดทการขายสมบูรณ์';
< $lang['sales_unsuccessfully_updated'] = 'อัพเดทการขายไม่สมบูรณ์';
< $lang['sales_edit_sale'] = 'แก้ไขการขาย';
< $lang['sales_employee'] = 'พนักงาน';
< $lang['sales_successfully_deleted'] = 'ลบการขายสมยูรณ์';
< $lang['sales_unsuccessfully_deleted'] = 'ลบการขายไม่สมยูรณ์';
< $lang['sales_delete_entire_sale'] = 'ลบการขายทั้งหมด';
< $lang['sales_delete_confirmation'] = 'แน่ใจหรือไม่ที่จะลบรายการขายนี้, ลบแล้วไม่สามารถเรียกกลับคืนใด้';
< $lang['sales_date'] = 'วันที่ขาย';
< $lang['sales_delete_successful'] = 'คุณลบการขายสำเร็จ';
< $lang['sales_delete_unsuccessful'] = 'คุณลบการขายไม่สำเร็จ';
< $lang['sales_suspend_sale'] = 'ระงับการขายชั่วคราว';
< $lang['sales_confirm_suspend_sale'] = 'แน่ใจหรือไม่ที่จะระงับการขาย?';
< $lang['sales_suspended_sales'] = 'การขายที่ถูกระงับ';
< $lang['sales_suspended_sale_id'] = 'รหัสการขายที่ถูกระงับ';
< $lang['sales_date'] = 'วันที่';
< $lang['sales_customer'] = 'ลูกค้า';
< $lang['sales_comments'] = 'หมายเหตุ';
< $lang['sales_unsuspend_and_delete'] = 'ยกเลิกการระงับ และ ลบ';
< $lang['sales_unsuspend'] = 'ยกเลิกการระงับ';
< $lang['sales_successfully_suspended_sale'] = 'การขายของคุณถูกระงับเรียบร้อย';
< $lang['sales_email_receipt'] = 'อีเมลบิล';
< ?>
< <?php
< $lang['sales_giftcard_number']='เลขที่ Gift Card';
< $lang['sales_giftcard']='Gift Card';
< $lang['sales_register']='ลงทะเบียนขาย';
< $lang['sales_mode']='รูปแบบการลงทะเบียน';
< $lang['sales_new_item'] = 'สินค้าใหม่';
< $lang['sales_item_name'] = 'ชื่อสินค้า';
< $lang['sales_item_number'] = 'สินค้า #';
< $lang['sales_new_customer'] = 'ลูกค้าใหม่';
< $lang['sales_customer'] = 'ลูกค้า';
< $lang['sales_no_items_in_cart']='ไม่พบสินค้าในตระกร้า';
< $lang['sales_total']='ยอดรวม';
< $lang['sales_tax_percent']='ภาษี %';
< $lang['sales_price']='ราคา';
< $lang['sales_quantity']='จำนวน';
< $lang['sales_discount']='ส่วนลด %';
< $lang['sales_edit']='แก้ไข';
< $lang['sales_payment']='รูปแบบชำระเงิน';
< $lang['sales_edit_item']='แก้ไขสินค้า';
< $lang['sales_find_or_scan_item']='ค้นหาสินค้า';
< $lang['sales_find_or_scan_item_or_receipt']='ค้นหาสินค้า หรือ บิล';
< $lang['sales_select_customer']='เลือกลูกค้า (Optional)';
< $lang['sales_start_typing_item_name']='เริ่มต้นพิมพ์ชื่อสินค้า หรือ สแกนบาร์โค๊ด...';
< $lang['sales_start_typing_customer_name']='เริ่มต้นพิมพ์ชื่อลูกค้า...';
< $lang['sales_sub_total']='ยอดรวมหักภาษี ';
< $lang['sales_tax']='ภาษี';
< $lang['sales_comment']='หมายเหตุ';
< $lang['sales_unable_to_add_item']='ไม่สามารถเพิ่มสินค้าได้';
< $lang['sales_sale_for_customer']='ลูกค้า:';
< $lang['sales_remove_customer']='ลบลูกค้า';
< $lang['sales_error_editing_item']='แก้ไขสินค้าล้มเหลว';
< $lang['sales_complete_sale']='สำเร็จการขาย';
< $lang['sales_cancel_sale']='ยกเลิกการขาย';
< $lang['sales_add_payment']='เพิ่มบิล';
< $lang['sales_receipt']='บิลขาย';
< $lang['sales_id']='เลขที่ขาย';
< $lang['sales_return']='คืน';
< $lang['sales_confirm_finish_sale'] = 'แน่ใจหรือไม่ที่จะสำเร็จการขาย? ไม่สามารถย้อนกลับได้.';
< $lang['sales_confirm_cancel_sale'] = 'แน่ใจหรือไม่ที่จะล้างรายการขาย? สินค้าทุกอย่างจะถูกลบจากบอร์ด.';
< $lang['sales_cash'] = 'เงินสด';
< $lang['sales_check'] = 'เช็ก';
< $lang['sales_debit'] = 'เดบิทการ์ด';
< $lang['sales_credit'] = 'เครดิทการ์ด';
< $lang['sales_giftcard'] = 'กิ๊ฟการ์ด';
< $lang['sales_amount_tendered'] = 'จำนวนประมูล';
< $lang['sales_change_due'] = 'เงินทอน';
< $lang['sales_payment_not_cover_total'] = ' ปริมาณการจ่ายที่ไม่เพียงพอกะยอดรวม';
< $lang['sales_transaction_failed'] = 'การดำเนินการขายล้มเหลว';
< $lang['sales_must_enter_numeric'] = 'จำนวนที่ถุกประมูลต้องใส่ข้อมุลที่เปนตัวเลข';
< $lang['sales_must_enter_numeric_giftcard'] = 'กิ๊ฟการ์ด ต้องใส่ตัวเลขเท่านั้น';
< $lang['sales_serial'] = 'Serial';
< $lang['sales_description_abbrv'] = 'Desc';
< $lang['sales_item_out_of_stock'] = 'สินค้าจำหน่ายหมด';
< $lang['sales_item_insufficient_of_stock'] = 'จำนวนสินค้าไม่เพียงพอ';
< $lang['sales_quantity_less_than_zero'] = 'คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง';
< $lang['sales_successfully_updated'] = 'อัพเดทการขายสมบูรณ์';
< $lang['sales_unsuccessfully_updated'] = 'อัพเดทการขายไม่สมบูรณ์';
< $lang['sales_edit_sale'] = 'แก้ไขการขาย';
< $lang['sales_employee'] = 'พนักงาน';
< $lang['sales_successfully_deleted'] = 'ลบการขายสมยูรณ์';
< $lang['sales_unsuccessfully_deleted'] = 'ลบการขายไม่สมยูรณ์';
< $lang['sales_delete_entire_sale'] = 'ลบการขายทั้งหมด';
< $lang['sales_delete_confirmation'] = 'แน่ใจหรือไม่ที่จะลบรายการขายนี้, ลบแล้วไม่สามารถเรียกกลับคืนใด้';
< $lang['sales_date'] = 'วันที่ขาย';
< $lang['sales_delete_successful'] = 'คุณลบการขายสำเร็จ';
< $lang['sales_delete_unsuccessful'] = 'คุณลบการขายไม่สำเร็จ';
< $lang['sales_suspend_sale'] = 'ระงับการขายชั่วคราว';
< $lang['sales_confirm_suspend_sale'] = 'แน่ใจหรือไม่ที่จะระงับการขาย?';
< $lang['sales_suspended_sales'] = 'การขายที่ถูกระงับ';
< $lang['sales_suspended_sale_id'] = 'รหัสการขายที่ถูกระงับ';
< $lang['sales_date'] = 'วันที่';
< $lang['sales_customer'] = 'ลูกค้า';
< $lang['sales_comments'] = 'หมายเหตุ';
< $lang['sales_unsuspend_and_delete'] = 'ยกเลิกการระงับ และ ลบ';
< $lang['sales_unsuspend'] = 'ยกเลิกการระงับ';
< $lang['sales_successfully_suspended_sale'] = 'การขายของคุณถูกระงับเรียบร้อย';
< $lang['sales_email_receipt'] = 'อีเมลบิล';
< ?>
---
> 
> $lang["sales_add_payment"] = "เพิ่มบิล";
> $lang["sales_amount_due"] = "ยอดต้องชำระ";
> $lang["sales_amount_tendered"] = "ชำระเข้ามา";
> $lang["sales_basic_information"] = "";
> $lang["sales_cancel_sale"] = "ยกเลิกการขาย";
> $lang["sales_cash"] = "เงินสด";
> $lang["sales_change_due"] = "เงินทอน";
> $lang["sales_check"] = "เช็ค";
> $lang["sales_check_balance"] = "Check remainder";
> $lang["sales_comment"] = "หมายเหตุ";
> $lang["sales_comments"] = "หมายเหตุ";
> $lang["sales_complete_sale"] = "จบการขาย";
> $lang["sales_confirm_cancel_sale"] = "แน่ใจหรือไม่ที่จะล้างรายการขาย? สินค้าทุกอย่างจะถูกลบจากบอร์ด.";
> $lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
> $lang["sales_confirm_finish_sale"] = "แน่ใจหรือไม่ที่จะสำเร็จการขาย? ไม่สามารถย้อนกลับได้.";
> $lang["sales_confirm_suspend_sale"] = "แน่ใจหรือไม่ที่จะระงับการขาย?";
> $lang["sales_credit"] = "เครดิตการ์ด";
> $lang["sales_customer"] = "ลูกค้า";
> $lang["sales_date"] = "วันที่ขาย";
> $lang["sales_date_required"] = "A correct date needs to be filled in";
> $lang["sales_date_type"] = "Date field is required";
> $lang["sales_debit"] = "เดบิตการ์ด";
> $lang["sales_delete_confirmation"] = "แน่ใจหรือไม่ที่จะลบรายการขายนี้, ลบแล้วไม่สามารถเรียกกลับคืนใด้";
> $lang["sales_delete_entire_sale"] = "ลบการขายทั้งหมด";
> $lang["sales_delete_successful"] = "คุณลบการขายสำเร็จ";
> $lang["sales_delete_unsuccessful"] = "คุณลบการขายไม่สำเร็จ";
> $lang["sales_description_abbrv"] = "Desc";
> $lang["sales_discount"] = "ส่วนลด %";
> $lang["sales_discount_included"] = "% Discount";
> $lang["sales_discount"] = "ส่วนลด";
> $lang["sales_discount_short"] = "";
> $lang["sales_edit"] = "แก้ไข";
> $lang["sales_edit_item"] = "แก้ไขสินค้า";
> $lang["sales_edit_sale"] = "แก้ไขการขาย";
> $lang["sales_email_receipt"] = "อีเมลบิล";
> $lang["sales_employee"] = "พนักงาน";
> $lang["sales_error_editing_item"] = "แก้ไขสินค้าล้มเหลว";
> $lang["sales_find_or_scan_item"] = "ค้นหาสินค้า";
> $lang["sales_find_or_scan_item_or_receipt"] = "ค้นหาสินค้า หรือ บิล";
> $lang["sales_giftcard"] = "Gift Card";
> $lang["sales_giftcard_balance"] = "Giftcard Balance";
> $lang["sales_giftcard_number"] = "เลขที่ Gift Card";
> $lang["sales_id"] = "เลขที่ขาย";
> $lang["sales_invoice"] = "ใบแจ้งหนี้";
> $lang["sales_invoice_confirm"] = "This invoice will be sent to";
> $lang["sales_invoice_enable"] = "ออกใบแจ้งหนี้";
> $lang["sales_invoice_filter"] = "ใบแจ้งหนี้";
> $lang["sales_cash_filter"] = "เงินสด";
> $lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
> $lang["sales_invoice_number"] = "เลขใบแจ้งหนี้";
> $lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
> $lang["sales_invoice_sent"] = "Invoice sent to";
> $lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
> $lang["sales_invoice_update"] = "คำนวณใหม่";
> $lang["sales_item_insufficient_of_stock"] = "จำนวนสินค้าไม่เพียงพอ";
> $lang["sales_item_name"] = "ชื่อสินค้า";
> $lang["sales_item_number"] = "สินค้า #";
> $lang["sales_item_out_of_stock"] = "สินค้าจำหน่ายหมด";
> $lang["sales_mode"] = "รูปแบบการลงทะเบียน";
> $lang["sales_must_enter_numeric"] = "จำนวนที่ถุกประมูลต้องใส่ข้อมุลที่เปนตัวเลข";
> $lang["sales_must_enter_numeric_giftcard"] = "กิ๊ฟการ์ด ต้องใส่ตัวเลขเท่านั้น";
> $lang["sales_new_customer"] = "ลูกค้าใหม่";
> $lang["sales_new_item"] = "สินค้าใหม่";
> $lang["sales_no_description"] = "None";
> $lang["sales_no_filter"] = "All";
> $lang["sales_no_items_in_cart"] = "ไม่พบสินค้าในตระกร้า";
> $lang["sales_no_sales_to_display"] = "No sales to display";
> $lang["sales_one_or_multiple"] = "";
> $lang["sales_takings"] = "ประวัติ";
> $lang["sales_payment"] = "รูปแบบชำระเงิน";
> $lang["sales_payment_amount"] = "";
> $lang["sales_payment_not_cover_total"] = " ปริมาณการจ่ายที่ไม่เพียงพอกะยอดรวม";
> $lang["sales_payment_type"] = "ชำระโดย";
> $lang["sales_payments_total"] = "ยอดชำระแล้ว";
> $lang["sales_price"] = "ราคา";
> $lang["sales_print_after_sale"] = "พิมพ์บิลหลังการขาย";
> $lang["sales_quantity"] = "จำนวน";
> $lang["sales_quantity_less_than_zero"] = "คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง";
> $lang["sales_quantity_less_than_reorder_level"] = "คำเตือน ถ้าจำนวนของไม่เพียงพอกับความต้องการหรือไม่ตรงกับยอดในบันชี ก็สามารถทำการขายได้ แต่ต้องเชคปริมานสินค้าคงคลัง";
> $lang["sales_receipt"] = "บิลขาย";
> $lang["sales_receipt_number"] = "จุดขาย#";
> $lang["sales_register"] = "ลงทะเบียนขาย";
> $lang["sales_remove_customer"] = "ลบลูกค้า";
> $lang["sales_return"] = "คืน";
> $lang["sales_sale"] = "ขาย";
> $lang["sales_sale_for_customer"] = "ลูกค้า:";
> $lang["sales_sale_time"] = "เวลา";
> $lang["sales_select_customer"] = "เลือกลูกค้า (Optional)";
> $lang["sales_send_invoice"] = "ส่งใบแจ้งหนี้";
> $lang["sales_serial"] = "Serial";
> $lang["sales_show_invoice"] = "ใบแจ้งหนี้";
> $lang["sales_show_receipt"] = "ใบเสร็จ";
> $lang["sales_start_typing_customer_name"] = "เริ่มต้นพิมพ์ชื่อลูกค้า...";
> $lang["sales_start_typing_item_name"] = "เริ่มต้นพิมพ์ชื่อสินค้า หรือ สแกนบาร์โค๊ด...";
> $lang["sales_stock_location"] = "ที่เก็บ";
> $lang["sales_sub_total"] = "ยอดรวมหักภาษี ";
> $lang["sales_successfully_deleted"] = "ลบการขายสมยูรณ์";
> $lang["sales_successfully_suspended_sale"] = "การขายของคุณถูกระงับเรียบร้อย";
> $lang["sales_successfully_updated"] = "อัพเดทการขายสมบูรณ์";
> $lang["sales_suspend_sale"] = "พักรายการ";
> $lang["sales_suspended_sale_id"] = "รหัสการขายที่ถูกพัก";
> $lang["sales_suspended_sales"] = "การขายที่พักไว้";
> $lang["sales_tax"] = "ภาษี";
> $lang["sales_tax_percent"] = "ภาษี %";
> $lang["sales_total"] = "ยอดรวม";
> $lang["sales_total_tax_exclusive"] = "Tax excluded";
> $lang["sales_transaction_failed"] = "การดำเนินการขายล้มเหลว";
> $lang["sales_unable_to_add_item"] = "";
> $lang["sales_unsuccessfully_deleted"] = "ลบการขายไม่สำเร็จ";
> $lang["sales_unsuccessfully_updated"] = "อัพเดทการขายไม่สมบูรณ์";
> $lang["sales_unsuspend"] = "ยกเลิกการระงับ";
> $lang["sales_unsuspend_and_delete"] = "ยกเลิกการระงับ และ ลบ";
> $lang["sales_update"] = "แก้ไขการขาย";
> $lang["sales_date_range"] = "ระหว่างวันที่";
> $lang["sales_none_selected"] = "กรุณาเลือสินค้าที่ต้องการแก้ไข";
diff -rBwi --ignore-file-name-case pos-prod/application/language/th/suppliers_lang.php opensourcepos/application/language/th/suppliers_lang.php
2,34c2,19
< $lang['suppliers_new']='ผู้ผลิตรายใหม่';
< $lang['suppliers_supplier']='ผู้ผลิต';
< $lang['suppliers_update']='ปรับปรุงผู้ผลิต';
< $lang['suppliers_confirm_delete']='แน่ใจหรือไม่ที่จะลบผู้ผลิตที่ถููกเลือก?';
< $lang['suppliers_none_selected']='คุณยังไม่ได้เฃือกผู้ผลิตที่ต้องการลบ';
< $lang['suppliers_error_adding_updating'] = 'เพิ่ม/แก้ไข ผู้ผลิต ล้มเหลว';
< $lang['suppliers_successful_adding']='เพิ่มผู้ผลิตสำเร็จ';
< $lang['suppliers_successful_updating']='ปรับปรุงผู้ผลิตสำเร็จ';
< $lang['suppliers_successful_deleted']='ลบสำเร็จ';
< $lang['suppliers_one_or_multiple']='ผู้ผลิต';
< $lang['suppliers_cannot_be_deleted']='ลบผู้ผลิตที่ถูกเลือกไม่ได้, one or more of the selected suppliers has sales.';
< $lang['suppliers_basic_information']='ข้อมูลผู้ผลิต';
< $lang['suppliers_account_number']='บัญชี #';
< $lang['suppliers_company_name']='ชื่อบริษัท';
< $lang['suppliers_company_name_required'] = 'ชื่อบริษัทต้องกรอก';
< ?>
< <?php
< $lang['suppliers_new']='ผู้ผลิตรายใหม่';
< $lang['suppliers_supplier']='ผู้ผลิต';
< $lang['suppliers_update']='ปรับปรุงผู้ผลิต';
< $lang['suppliers_confirm_delete']='แน่ใจหรือไม่ที่จะลบผู้ผลิตที่ถููกเลือก?';
< $lang['suppliers_none_selected']='คุณยังไม่ได้เฃือกผู้ผลิตที่ต้องการลบ';
< $lang['suppliers_error_adding_updating'] = 'เพิ่ม/แก้ไข ผู้ผลิต ล้มเหลว';
< $lang['suppliers_successful_adding']='เพิ่มผู้ผลิตสำเร็จ';
< $lang['suppliers_successful_updating']='ปรับปรุงผู้ผลิตสำเร็จ';
< $lang['suppliers_successful_deleted']='ลบสำเร็จ';
< $lang['suppliers_one_or_multiple']='ผู้ผลิต';
< $lang['suppliers_cannot_be_deleted']='ลบผู้ผลิตที่ถูกเลือกไม่ได้, one or more of the selected suppliers has sales.';
< $lang['suppliers_basic_information']='ข้อมูลผู้ผลิต';
< $lang['suppliers_account_number']='บัญชี #';
< $lang['suppliers_company_name']='ชื่อบริษัท';
< $lang['suppliers_company_name_required'] = 'ชื่อบริษัทต้องกรอก';
< ?>
---
> 
> $lang["suppliers_account_number"] = "บัญชี #";
> $lang["suppliers_basic_information"] = "ข้อมูลผู้ผลิต";
> $lang["suppliers_cannot_be_deleted"] = "ลบผู้ผลิตที่ถูกเลือกไม่ได้, one or more of the selected suppliers has sales.";
> $lang["suppliers_company_name"] = "ชื่อบริษัท";
> $lang["suppliers_company_name_required"] = "ชื่อบริษัทต้องกรอก";
> $lang["suppliers_agency_name"] = " ";
> $lang["suppliers_confirm_delete"] = "แน่ใจหรือไม่ที่จะลบผู้ผลิตที่ถููกเลือก?";
> $lang["suppliers_error_adding_updating"] = "เพิ่ม/แก้ไข ผู้ผลิต ล้มเหลว";
> $lang["suppliers_new"] = "ผู้ผลิตรายใหม่";
> $lang["suppliers_none_selected"] = "คุณยังไม่ได้เฃือกผู้ผลิตที่ต้องการลบ";
> $lang["suppliers_one_or_multiple"] = "ผู้ผลิต";
> $lang["suppliers_successful_adding"] = "เพิ่มผู้ผลิตสำเร็จ";
> $lang["suppliers_successful_deleted"] = "ลบสำเร็จ";
> $lang["suppliers_successful_updating"] = "ปรับปรุงผู้ผลิตสำเร็จ";
> $lang["suppliers_supplier"] = "ผู้ผลิต";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "ปรับปรุงผู้ผลิต";
Only in opensourcepos/application/language: tr
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/common_lang.php opensourcepos/application/language/zh/common_lang.php
2,41c2,57
< $lang['common_common'] = '一般';
< $lang['common_submit'] = '送出';
< $lang['common_or'] = '或';
< $lang['common_powered_by'] = 'Powered by';
< $lang['common_welcome'] = '歡迎';
< $lang['common_logout'] = '登出';
< $lang['common_list_of'] = '列表';
< $lang['common_first_name'] = '名';
< $lang['common_last_name'] = '姓';
< $lang['common_email'] = 'E-Mail';
< $lang['common_phone_number'] = '電話';
< $lang['common_address_1'] = '地址 1';
< $lang['common_address_2'] = '地址 2';
< $lang['common_city'] = '城市';
< $lang['common_state'] = '州';
< $lang['common_zip'] = '郵遞區號';
< $lang['common_country'] = '國家';
< $lang['common_comments'] = '評論';
< $lang['common_edit'] = '編輯';
< $lang['common_search'] = '搜尋';
< $lang['common_delete'] = '刪除';
< $lang['common_remove'] = '移除';
< $lang['common_view_recent_sales'] = '最新的消售資訊';
< $lang['common_you_are_using_ospos'] = '您正在使用 Open Source Point of Sale 版本';
< $lang['common_please_visit_my'] = '請造訪';
< $lang['common_website'] = '網站';
< $lang['common_fields_required_message'] = '紅色欄位為必填';
< $lang['common_learn_about_project'] = '了解系統開展進度';
< $lang['common_searched_for'] = '查找';
< $lang['common_first_name_required'] = '名為必填';
< $lang['common_last_name_required'] = '姓氏為必填';
< $lang['common_email_invalid_format'] = 'E-mail格式錯誤';
< $lang['common_confirm_search'] = '您已經選擇一行或多行，在搜索後這些紀錄將不能再被選取。您確定要提交這個搜索？';
< $lang['common_no_persons_to_display'] = '沒有使用者資料可以顯示';
< $lang['common_return_policy'] = '退貨政策';
< $lang['common_price'] = '價值';
< $lang['common_welcome_message']= '歡迎使用Open Source Point of Sale，請點擊下面的模組以開始使用！';
< $lang['common_inv'] = '庫存';
< $lang['common_det'] = '更多';
< ?>
---
> 
> $lang["common_address_1"] = "地址 1";
> $lang["common_address_2"] = "地址 2";
> $lang["common_city"] = "城市";
> $lang["common_comments"] = "評論";
> $lang["common_common"] = "一般";
> $lang["common_confirm_search"] = "您已經選擇一行或多行，在搜索後這些紀錄將不能再被選取。您確定要提交這個搜索？";
> $lang["common_country"] = "國家";
> $lang["common_date"] = "Date";
> $lang["common_delete"] = "刪除";
> $lang["common_print"] = "Print";
> $lang["common_det"] = "更多";
> $lang["common_edit"] = "編輯";
> $lang["common_email"] = "E-Mail";
> $lang["common_email_invalid_format"] = "E-mail格式錯誤";
> $lang["common_fields_required_message"] = "紅色欄位為必填";
> $lang["common_first_name"] = "名";
> $lang["common_first_name_required"] = "名為必填";
> $lang["common_first_page"] = "First";
> $lang["common_gender"] = "Gender";
> $lang["common_gender_female"] = "V";
> $lang["common_gender_male"] = "M";
> $lang["common_inv"] = "庫存";
> $lang["common_last_name"] = "姓";
> $lang["common_last_name_required"] = "姓氏為必填";
> $lang["common_last_page"] = "Last";
> $lang["common_learn_about_project"] = "了解系統開展進度";
> $lang["common_list_of"] = "列表";
> $lang["common_logout"] = "登出";
> $lang["common_new"] = "New";
> $lang["common_no_persons_to_display"] = "沒有使用者資料可以顯示";
> $lang["common_or"] = "或";
> $lang["common_phone_number"] = "電話";
> $lang["common_phone_number_required"] = "";
> $lang["common_please_visit_my"] = "請造訪";
> $lang["common_powered_by"] = "Powered by";
> $lang["common_price"] = "價值";
> $lang["common_remove"] = "移除";
> $lang["common_return_policy"] = "退貨政策";
> $lang["common_search"] = "搜尋";
> $lang["common_search_options"] = "Search options";
> $lang["common_searched_for"] = "查找";
> $lang["common_state"] = "州";
> $lang["common_submit"] = "送出";
> $lang["common_view_recent_sales"] = "最新的消售資訊";
> $lang["common_website"] = "網站";
> $lang["common_welcome"] = "歡迎";
> $lang["common_welcome_message"] = "歡迎使用Open Source Point of Sale，請點擊下面的模組以開始使用！";
> $lang["common_you_are_using_ospos"] = "您正在使用 Open Source Point of Sale 版本";
> $lang["common_zip"] = "郵遞區號";
> $lang["common_import"] = "Import";
> $lang["common_download_import_template"] = "Download Import Excel Template (CSV)";
> $lang["common_import_file_path"] = "file path";
> $lang["common_import_excel"] = "Excel Import";
> $lang["common_import_full_path"] = "Full path to excel file required";
> $lang["common_required"] = "Required";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/config_lang.php opensourcepos/application/language/zh/config_lang.php
2,36c2,122
< $lang['config_info'] = '儲存組態';
< $lang['config_company'] = '公司名稱';
< $lang['config_address'] = '公司地址';
< $lang['config_phone'] = '電話';
< $lang['config_website'] = '網站';
< $lang['config_fax'] = '傳真';
< $lang['config_default_tax_rate'] = '預設稅率 %';
< $lang['config_default_tax_rate_1'] = '稅率 1';
< $lang['config_default_tax_rate_2'] = '稅率 2';
< $lang['config_company_required'] = '公司名稱為必填';
< $lang['config_address_required'] = '公司地址為必填';
< $lang['config_phone_required'] = '公司電話為必填';
< $lang['config_default_tax_rate_required'] = '預設稅率為必填';
< $lang['config_default_tax_rate_number'] = '預設稅率必需為數字';
< $lang['config_company_website_url'] = '公司網址格式錯誤 (http://...)';
< $lang['config_saved_successfully'] = '組態設置儲存成功';
< $lang['config_saved_unsuccessfully'] = '組態設置儲存失敗';
< $lang['config_return_policy_required'] = '退換貨政策為必填';
< $lang['config_print_after_sale'] = '出貨時打印收據';
< $lang['config_language'] = '語言';
< $lang['config_timezone'] = '時區';
< $lang['config_currency_symbol'] = '貨幣符號';
< $lang['config_currency_side'] = 'Right side'; //GARRISON ADDED 4/20/2013
< $lang['config_custom1'] = 'Custom Field 1'; //GARRISON ADDED 4/21/2013
< $lang['config_custom2'] = 'Custom Field 2'; //GARRISON ADDED 4/21/2013
< $lang['config_custom3'] = 'Custom Field 3'; //GARRISON ADDED 4/21/2013
< $lang['config_custom4'] = 'Custom Field 4'; //GARRISON ADDED 4/21/2013
< $lang['config_custom5'] = 'Custom Field 5'; //GARRISON ADDED 4/21/2013
< $lang['config_custom6'] = 'Custom Field 6'; //GARRISON ADDED 4/21/2013
< $lang['config_custom7'] = 'Custom Field 7'; //GARRISON ADDED 4/21/2013
< $lang['config_custom8'] = 'Custom Field 8'; //GARRISON ADDED 4/21/2013
< $lang['config_custom9'] = 'Custom Field 9'; //GARRISON ADDED 4/21/2013
< $lang['config_custom10'] = 'Custom Field 10'; //GARRISON ADDED 4/21/2013
< $lang['config_tax_included'] = 'Tax Included';
< ?>
---
> 
> $lang["config_address"] = "公司地址";
> $lang["config_address_required"] = "公司地址為必填";
> $lang["config_backup_button"] = "Backup";
> $lang["config_backup_database"] = "Backup Database";
> $lang["config_barcode_company"] = "公司名稱";
> $lang["config_barcode_configuration"] = "Barcode Configuration";
> $lang["config_barcode_content"] = "Barcode Content";
> $lang["config_barcode_first_row"] = "Row 3";
> $lang["config_barcode_font"] = "Font";
> $lang["config_barcode_height"] = "Height (px)";
> $lang["config_barcode_id"] = "Item Id/Name";
> $lang["config_barcode_info"] = "Barcode Configuration Information";
> $lang["config_barcode_layout"] = "Barcode Layout";
> $lang["config_barcode_name"] = "Name";
> $lang["config_barcode_number"] = "UPC/EAN/ISBN";
> $lang["config_barcode_number_in_row"] = "Number in row";
> $lang["config_barcode_page_cellspacing"] = "Display page cellspacing";
> $lang["config_barcode_page_width"] = "Display page width";
> $lang["config_barcode_price"] = "Price";
> $lang["config_barcode_quality"] = "Quality (1-100)";
> $lang["config_barcode_second_row"] = "Row 4";
> $lang["config_barcode_third_row"] = "Row 5";
> $lang["config_barcode_type"] = "Barcode Type";
> $lang["config_barcode_width"] = "Width (px)";
> $lang["config_barcode_generate_if_empty"] = "Generate if empty";
> $lang["config_company"] = "公司名稱";
> $lang["config_company_logo"] = "Company Logo";
> $lang["config_company_required"] = "公司名稱為必填";
> $lang["config_company_website_url"] = "公司網址格式錯誤 (http://...)";
> $lang["config_currency_side"] = "Right side";
> $lang["config_currency_symbol"] = "貨幣符號";
> $lang["config_custom1"] = "Custom Field 1";
> $lang["config_custom10"] = "Custom Field 10";
> $lang["config_custom2"] = "Custom Field 2";
> $lang["config_custom3"] = "Custom Field 3";
> $lang["config_custom4"] = "Custom Field 4";
> $lang["config_custom5"] = "Custom Field 5";
> $lang["config_custom6"] = "Custom Field 6";
> $lang["config_custom7"] = "Custom Field 7";
> $lang["config_custom8"] = "Custom Field 8";
> $lang["config_custom9"] = "Custom Field 9";
> $lang["config_decimal_point"] = "Decimal Point";
> $lang["config_default_barcode_font_size_number"] = "The default barcode font size must be a number";
> $lang["config_default_barcode_font_size_required"] = "The default barcode font size is a required field";
> $lang["config_default_barcode_height_number"] = "The default barcode height  must be a number";
> $lang["config_default_barcode_height_required"] = "The default barcode height is a required field";
> $lang["config_default_barcode_num_in_row_number"] = "The default barcode num in row must be a number";
> $lang["config_default_barcode_num_in_row_required"] = "The default barcode num in row is a required field";
> $lang["config_default_barcode_page_cellspacing_number"] = "The default barcode page cellspacing must be a number";
> $lang["config_default_barcode_page_cellspacing_required"] = "The default barcode page cellspacing is a required field";
> $lang["config_default_barcode_page_width_number"] = "The default barcode page width must be a number";
> $lang["config_default_barcode_page_width_required"] = "The default barcode page width is a required field";
> $lang["config_default_barcode_quality_number"] = "The default barcode quality must be a number";
> $lang["config_default_barcode_quality_required"] = "The default barcode quality is a required field";
> $lang["config_default_barcode_width_number"] = "The default barcode width must be a number";
> $lang["config_default_barcode_width_required"] = "The default barcode width is a required field";
> $lang["config_default_sales_discount"] = "Default Sales Discount %";
> $lang["config_default_sales_discount_number"] = "The default sales discount must be a number";
> $lang["config_default_sales_discount_required"] = "The default sales discount is a required field";
> $lang["config_default_tax_rate"] = "預設稅率 %";
> $lang["config_default_tax_rate_1"] = "稅率 1";
> $lang["config_default_tax_rate_2"] = "稅率 2";
> $lang["config_default_tax_rate_number"] = "預設稅率必需為數字";
> $lang["config_default_tax_rate_required"] = "預設稅率為必填";
> $lang["config_fax"] = "傳真";
> $lang["config_general_configuration"] = "General Configuration";
> $lang["config_info"] = "儲存組態";
> $lang["config_invoice_default_comments"] = "Default Invoice Comments";
> $lang["config_invoice_email_message"] = "Invoice Email Template";
> $lang["config_invoice_printer"] = "Invoice Printer";
> $lang["config_jsprintsetup_required"] = "Warning! This disabled functionality will only work if you have the FireFox jsPrintSetup addon installed. Save anyway?";
> $lang["config_language"] = "語言";
> $lang["config_lines_per_page"] = "Lines Per Page";
> $lang["config_lines_per_page_number"] = "The lines per page must be a number";
> $lang["config_lines_per_page_required"] = "The lines per page is a required field";
> $lang["config_location_configuration"] = "Stock Locations";
> $lang["config_location_info"] = "Location Configuration Information";
> $lang["config_logout"] = "Don't you want to make a backup before logging out?";
> $lang["config_number_format"] = "Number Format";
> $lang["config_phone"] = "電話";
> $lang["config_phone_required"] = "公司電話為必填";
> $lang["config_print_bottom_margin"] = "Margin Bottom";
> $lang["config_print_bottom_margin_number"] = "The default bottom margin must be a number";
> $lang["config_print_bottom_margin_required"] = "The default bottom margin is a required field";
> $lang["config_print_footer"] = "Print Browser Footer";
> $lang["config_print_header"] = "Print Browser Header";
> $lang["config_print_left_margin"] = "Margin Left";
> $lang["config_print_left_margin_number"] = "The default left margin must be a number";
> $lang["config_print_left_margin_required"] = "The default left margin is a required field";
> $lang["config_print_right_margin"] = "Margin Right";
> $lang["config_print_right_margin_number"] = "The default right margin must be a number";
> $lang["config_print_right_margin_required"] = "The default right margin is a required field";
> $lang["config_print_silently"] = "Show Print Dialog";
> $lang["config_print_top_margin"] = "Margin Top";
> $lang["config_print_top_margin_number"] = "The default top margin must be a number";
> $lang["config_print_top_margin_required"] = "The default top margin is a required field";
> $lang["config_receipt_configuration"] = "Print Settings";
> $lang["config_receipt_info"] = "Receipt Configuration Information";
> $lang["config_receipt_printer"] = "Ticket Printer";
> $lang["config_receipt_show_taxes"] = "Show Taxes";
> $lang["config_receiving_calculate_average_price"] = "Calc avg. Price (Receiving)";
> $lang["config_recv_invoice_format"] = "Receivings Invoice Format";
> $lang["config_return_policy_required"] = "退換貨政策為必填";
> $lang["config_sales_invoice_format"] = "Sales Invoice Format";
> $lang["config_saved_successfully"] = "組態設置儲存成功";
> $lang["config_saved_unsuccessfully"] = "組態設置儲存失敗";
> $lang["config_show_total_discount"] = "Show total discount";
> $lang["config_stock_location"] = "Stock location";
> $lang["config_stock_location_duplicate"] = "Please use an unique location name";
> $lang["config_stock_location_invalid_chars"] = "The stock location name can not contain '_'";
> $lang["config_stock_location_required"] = "Stock location number is a required field";
> $lang["config_takings_printer"] = "Takings Printer";
> $lang["config_tax_included"] = "Tax Included";
> $lang["config_thousands_separator"] = "Thousands Separator";
> $lang["config_timezone"] = "時區";
> $lang["config_use_invoice_template"] = "Use invoice template";
> $lang["config_website"] = "網站";
> $lang["config_locale_configuration"] = "Localisation Configuration";
> $lang["config_locale_info"] = "Localisation Configuration Information";
> $lang["config_datetimeformat"] = "Date and Time format";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/customers_lang.php opensourcepos/application/language/zh/customers_lang.php
2,16c2,19
< $lang['customers_new'] = '新客戶';
< $lang['customers_customer'] = '客戶';
< $lang['customers_update'] = '更新客戶';
< $lang['customers_confirm_delete'] = '你確定要刪除選定的客戶？';
< $lang['customers_none_selected'] = '您還沒有選擇任何客戶進行刪除';
< $lang['customers_error_adding_updating'] = '添加/更新客戶錯誤';
< $lang['customers_successful_adding'] = '成功新增顧客';
< $lang['customers_successful_updating'] = '成功更新顧客';
< $lang['customers_successful_deleted'] = '成功刪除';
< $lang['customers_one_or_multiple'] = '客戶';
< $lang['customers_cannot_be_deleted'] = '無法刪除選定的客戶，選定的客戶存有銷售紀錄。';
< $lang['customers_basic_information'] = '客戶資訊';
< $lang['customers_account_number'] = '帳號 #';
< $lang['customers_taxable'] = '應課稅';
< ?>
---
> 
> $lang["customers_account_number"] = "帳號 #";
> $lang["customers_account_number_duplicate"] = "This account number is already present in the database";
> $lang["customers_basic_information"] = "客戶資訊";
> $lang["customers_cannot_be_deleted"] = "無法刪除選定的客戶，選定的客戶存有銷售紀錄。";
> $lang["customers_company_name"] = "Company Name";
> $lang["customers_confirm_delete"] = "你確定要刪除選定的客戶？";
> $lang["customers_customer"] = "客戶";
> $lang["customers_error_adding_updating"] = "添加/更新客戶錯誤";
> $lang["customers_new"] = "新客戶";
> $lang["customers_none_selected"] = "您還沒有選擇任何客戶進行刪除";
> $lang["customers_one_or_multiple"] = "客戶";
> $lang["customers_successful_adding"] = "成功新增顧客";
> $lang["customers_successful_deleted"] = "成功刪除";
> $lang["customers_successful_updating"] = "成功更新顧客";
> $lang["customers_taxable"] = "應課稅";
> $lang["customers_update"] = "更新客戶";
> $lang["customers_import_items_excel"] = "Import customers from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/employees_lang.php opensourcepos/application/language/zh/employees_lang.php
2,27c2,28
< $lang['employees_employee'] = '員工';
< $lang['employees_new'] = '新員工';
< $lang['employees_update'] = '更新員工';
< $lang['employees_confirm_delete'] = '你確定要刪除所選的員工嗎？';
< $lang['employees_none_selected'] = '您還沒有選擇任何員工進行刪除';
< $lang['employees_error_adding_updating'] = '添加/更新員工錯誤';
< $lang['employees_successful_adding'] = '新增員工資料成功';
< $lang['employees_successful_updating'] = '成功更新員工資料';
< $lang['employees_successful_deleted'] = '成功刪除員工資料';
< $lang['employees_one_or_multiple'] = '員工';
< $lang['employees_cannot_be_deleted'] = '無法刪除選定的僱員，選定的員工中已有銷售紀錄或你正在試圖刪除自己 :)';
< $lang['employees_username'] = '帳號';
< $lang['employees_password'] = '密碼';
< $lang['employees_repeat_password'] = '確認密碼';
< $lang['employees_username_required'] = '帳號為必填';
< $lang['employees_username_minlength'] = '帳號必需為五個字元以上';
< $lang['employees_password_required'] = '請輸入密碼';
< $lang['employees_password_minlength'] = '密碼需為八個字元以上';
< $lang['employees_password_must_match'] = '密碼與確認密碼不一致';
< $lang['employees_basic_information'] = '員工基本資料';
< $lang['employees_login_info'] = '員工登錄資料';
< $lang['employees_permission_info'] = '員工權限';
< $lang['employees_permission_desc'] = '勾選後授予使用該模組功能';
< $lang['employees_error_updating_demo_admin'] = '您不能更改admin用戶';
< $lang['employees_error_deleting_demo_admin'] = '您不能刪除admin用戶';
< ?>
---
> 
> $lang["employees_basic_information"] = "員工基本資料";
> $lang["employees_cannot_be_deleted"] = "無法刪除選定的僱員，選定的員工中已有銷售紀錄或你正在試圖刪除自己 :)";
> $lang["employees_confirm_delete"] = "你確定要刪除所選的員工嗎？";
> $lang["employees_employee"] = "員工";
> $lang["employees_error_adding_updating"] = "添加/更新員工錯誤";
> $lang["employees_error_deleting_demo_admin"] = "您不能刪除admin用戶";
> $lang["employees_error_updating_demo_admin"] = "您不能更改admin用戶";
> $lang["employees_login_info"] = "員工登錄資料";
> $lang["employees_new"] = "新員工";
> $lang["employees_none_selected"] = "您還沒有選擇任何員工進行刪除";
> $lang["employees_one_or_multiple"] = "員工";
> $lang["employees_password"] = "密碼";
> $lang["employees_password_minlength"] = "密碼需為八個字元以上";
> $lang["employees_password_must_match"] = "密碼與確認密碼不一致";
> $lang["employees_password_required"] = "請輸入密碼";
> $lang["employees_permission_desc"] = "勾選後授予使用該模組功能";
> $lang["employees_permission_info"] = "員工權限";
> $lang["employees_repeat_password"] = "確認密碼";
> $lang["employees_successful_adding"] = "新增員工資料成功";
> $lang["employees_successful_deleted"] = "成功刪除員工資料";
> $lang["employees_successful_updating"] = "成功更新員工資料";
> $lang["employees_update"] = "更新員工";
> $lang["employees_username"] = "帳號";
> $lang["employees_username_minlength"] = "帳號必需為五個字元以上";
> $lang["employees_username_required"] = "帳號為必填";
> $lang["employees_subpermission_required"] = "Add at least one grant for each module";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/error_lang.php opensourcepos/application/language/zh/error_lang.php
2,4c2,4
< $lang['error_no_permission_module'] = '您沒有權限使用模組：';
< $lang['error_unknown'] = '未知';
< ?>
---
> 
> $lang["error_no_permission_module"] = "您沒有權限使用模組：";
> $lang["error_unknown"] = "未知";
Only in pos-prod/application/language/zh: form_validation_lang.php
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/giftcards_lang.php opensourcepos/application/language/zh/giftcards_lang.php
2,69c2,70
< $lang['giftcards_giftcard_number'] = '禮金券編號';
< $lang['giftcards_card_value'] = '金額';
< $lang['giftcards_basic_information'] = '禮金券資訊';
< $lang['giftcards_number_required'] = '請輸入禮金券編號';
< $lang['giftcards_value_required'] = '請輸入禮金券金額';
< $lang['giftcards_number'] = '禮金券編號需為數字';
< $lang['giftcards_value'] = '禮金券金額需為數字';
< $lang['giftcards_person_id'] = 'Customer';
< $lang['giftcards_retrive_giftcard_info'] = '檢索禮金券訊息';
< $lang['giftcards_description'] = '描述';
< $lang['giftcards_amazon'] = 'Amazon';
< $lang['giftcards_upc_database'] = 'UPC Database';
< $lang['giftcards_cannot_find_giftcard'] = '找不到禮金券的訊息';
< $lang['giftcards_info_provided_by'] = '提供信息的來源';
< $lang['giftcards_number_information'] = '禮金券編號';
< $lang['giftcards_new'] = '新建禮金券';
< $lang['giftcards_update'] = '更新禮金券';
< $lang['giftcards_giftcard'] = '禮金券';
< $lang['giftcards_edit_multiple_giftcards'] = '多重編輯';
< $lang['giftcards_category'] = '類別';
< $lang['giftcards_cost_price'] = '成本價格';
< $lang['giftcards_unit_price'] = '單位價格';
< $lang['giftcards_tax_1'] = '稅額 1';
< $lang['giftcards_tax_2'] = '稅額 2';
< $lang['giftcards_sales_tax_1'] = '銷售稅額 1';
< $lang['giftcards_sales_tax_2'] = '銷售稅額 2';
< $lang['giftcards_tax_percent'] = '稅率';
< $lang['giftcards_tax_percents'] = '稅率 Percent(s)';
< $lang['giftcards_reorder_level'] = '補貨點';
< $lang['giftcards_quantity'] = '數量';
< $lang['giftcards_no_giftcards_to_display'] = '沒有禮金券可以顯示';
< $lang['giftcards_bulk_edit'] = '批量編輯';
< $lang['giftcards_confirm_delete'] = '你確定你要刪除選定的禮金券?';
< $lang['giftcards_none_selected'] = '您還沒有選擇任何禮金券進行編輯';
< $lang['giftcards_confirm_bulk_edit'] = '您確定您要編輯的所有選擇的禮金券嗎？';
< $lang['giftcards_successful_bulk_edit'] = '您已成功更新選定的禮品卡';
< $lang['giftcards_error_updating_multiple'] = '禮金券更新錯誤';
< $lang['giftcards_edit_fields_you_want_to_update'] = '編輯所有選定的禮金券中你想要編輯的資料';
< $lang['giftcards_error_adding_updating'] = '新增/更新禮金券錯誤';
< $lang['giftcards_successful_adding'] = '新增禮金券成功';
< $lang['giftcards_successful_updating'] = '成功更新禮金券';
< $lang['giftcards_successful_deleted'] = '成功刪除禮金券';
< $lang['giftcards_one_or_multiple'] = '禮金券';
< $lang['giftcards_cannot_be_deleted'] = '無法刪除選定的禮金券，一個或多個所選擇的禮金券已經使用。';
< $lang['giftcards_none'] = '無';
< $lang['giftcards_supplier'] = '供應商';
< $lang['giftcards_generate_barcodes'] = '產生條碼';
< $lang['giftcards_must_select_giftcard_for_barcode'] = '您必須選擇至少一個禮金券才能生成條形碼';
< $lang['giftcards_excel_import_failed'] = 'Excel匯入失敗';
< $lang['giftcards_allow_alt_description'] = '允許使用ALT描述';
< $lang['giftcards_is_serialized'] = '禮金券序號';
< $lang['giftcards_low_inventory_giftcards'] = '禮金券庫存過低';
< $lang['giftcards_serialized_giftcards'] = '排序禮金券';
< $lang['giftcards_no_description_giftcards'] = '沒有描述的禮金券';
< $lang['giftcards_inventory_comments'] = '評論';
< $lang['giftcards_count'] = '更新庫存';
< $lang['giftcards_details_count'] = '庫存盤點詳情';
< $lang['giftcards_add_minus'] = '加/減庫存';
< $lang['giftcards_current_quantity'] = '當前數量';
< $lang['giftcards_quantity_required'] = '數量是必填字段。請按關閉（X）來取消';
< $lang['giftcards_do_nothing'] = '不做任何修改';
< $lang['giftcards_change_all_to_serialized'] = '全部更改序號至序列化';
< $lang['giftcards_change_all_to_unserialized'] = '全部更改序號至非序列化';
< $lang['giftcards_change_all_to_allow_alt_desc'] = '充許全部ALT倒序';
< $lang['giftcards_change_all_to_not_allow_allow_desc'] = '不允許全部ALT倒序';
< $lang['giftcards_use_inventory_menu'] = '使用庫存清單';
< $lang['giftcards_manually_editing_of_quantity'] = '手動編輯數量';
< ?>
---
> 
> $lang["giftcards_add_minus"] = "加/減庫存";
> $lang["giftcards_allow_alt_description"] = "允許使用ALT描述";
> $lang["giftcards_amazon"] = "Amazon";
> $lang["giftcards_remaining_balance"] = "Giftcard %1 remaining value is %2!";
> $lang["giftcards_basic_information"] = "禮金券資訊";
> $lang["giftcards_bulk_edit"] = "批量編輯";
> $lang["giftcards_cannot_be_deleted"] = "無法刪除選定的禮金券，一個或多個所選擇的禮金券已經使用。";
> $lang["giftcards_cannot_find_giftcard"] = "找不到禮金券的訊息";
> $lang["giftcards_card_value"] = "金額";
> $lang["giftcards_category"] = "類別";
> $lang["giftcards_change_all_to_allow_alt_desc"] = "充許全部ALT倒序";
> $lang["giftcards_change_all_to_not_allow_allow_desc"] = "不允許全部ALT倒序";
> $lang["giftcards_change_all_to_serialized"] = "全部更改序號至序列化";
> $lang["giftcards_change_all_to_unserialized"] = "全部更改序號至非序列化";
> $lang["giftcards_confirm_bulk_edit"] = "您確定您要編輯的所有選擇的禮金券嗎？";
> $lang["giftcards_confirm_delete"] = "你確定你要刪除選定的禮金券?";
> $lang["giftcards_cost_price"] = "成本價格";
> $lang["giftcards_count"] = "更新庫存";
> $lang["giftcards_current_quantity"] = "當前數量";
> $lang["giftcards_description"] = "描述";
> $lang["giftcards_details_count"] = "庫存盤點詳情";
> $lang["giftcards_do_nothing"] = "不做任何修改";
> $lang["giftcards_edit_fields_you_want_to_update"] = "編輯所有選定的禮金券中你想要編輯的資料";
> $lang["giftcards_edit_multiple_giftcards"] = "多重編輯";
> $lang["giftcards_error_adding_updating"] = "新增/更新禮金券錯誤";
> $lang["giftcards_error_updating_multiple"] = "禮金券更新錯誤";
> $lang["giftcards_excel_import_failed"] = "Excel匯入失敗";
> $lang["giftcards_generate_barcodes"] = "產生條碼";
> $lang["giftcards_giftcard"] = "禮金券";
> $lang["giftcards_giftcard_number"] = "禮金券編號";
> $lang["giftcards_info_provided_by"] = "提供信息的來源";
> $lang["giftcards_inventory_comments"] = "評論";
> $lang["giftcards_is_serialized"] = "禮金券序號";
> $lang["giftcards_low_inventory_giftcards"] = "禮金券庫存過低";
> $lang["giftcards_manually_editing_of_quantity"] = "手動編輯數量";
> $lang["giftcards_must_select_giftcard_for_barcode"] = "您必須選擇至少一個禮金券才能生成條形碼";
> $lang["giftcards_new"] = "新建禮金券";
> $lang["giftcards_no_description_giftcards"] = "沒有描述的禮金券";
> $lang["giftcards_no_giftcards_to_display"] = "沒有禮金券可以顯示";
> $lang["giftcards_none"] = "無";
> $lang["giftcards_none_selected"] = "您還沒有選擇任何禮金券進行編輯";
> $lang["giftcards_number"] = "禮金券編號需為數字";
> $lang["giftcards_number_information"] = "禮金券編號";
> $lang["giftcards_number_required"] = "請輸入禮金券編號";
> $lang["giftcards_one_or_multiple"] = "禮金券";
> $lang["giftcards_person_id"] = "Customer";
> $lang["giftcards_quantity"] = "數量";
> $lang["giftcards_quantity_required"] = "數量是必填字段。請按關閉（X）來取消";
> $lang["giftcards_reorder_level"] = "補貨點";
> $lang["giftcards_retrive_giftcard_info"] = "檢索禮金券訊息";
> $lang["giftcards_sales_tax_1"] = "銷售稅額 1";
> $lang["giftcards_sales_tax_2"] = "銷售稅額 2";
> $lang["giftcards_serialized_giftcards"] = "排序禮金券";
> $lang["giftcards_successful_adding"] = "新增禮金券成功";
> $lang["giftcards_successful_bulk_edit"] = "您已成功更新選定的禮品卡";
> $lang["giftcards_successful_deleted"] = "成功刪除禮金券";
> $lang["giftcards_successful_updating"] = "成功更新禮金券";
> $lang["giftcards_supplier"] = "供應商";
> $lang["giftcards_tax_1"] = "稅額 1";
> $lang["giftcards_tax_2"] = "稅額 2";
> $lang["giftcards_tax_percent"] = "稅率";
> $lang["giftcards_tax_percents"] = "稅率 Percent(s)";
> $lang["giftcards_unit_price"] = "單位價格";
> $lang["giftcards_upc_database"] = "UPC Database";
> $lang["giftcards_update"] = "更新禮金券";
> $lang["giftcards_use_inventory_menu"] = "使用庫存清單";
> $lang["giftcards_value"] = "禮金券金額需為數字";
> $lang["giftcards_value_required"] = "請輸入禮金券金額";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/index.html opensourcepos/application/language/zh/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/item_kits_lang.php opensourcepos/application/language/zh/item_kits_lang.php
2,20c2,21
< $lang['item_kits_name'] = '產品套件';
< $lang['item_kits_description'] = '產品套件描述';
< $lang['item_kits_no_item_kits_to_display'] = '沒有產品套件';
< $lang['item_kits_update'] = '更新產品套件';
< $lang['item_kits_new'] = '新增產品套件';
< $lang['item_kits_none_selected'] = "沒有選擇任何產品套件";
< $lang['item_kits_info'] = '產品套件資料';
< $lang['item_kits_successful_adding'] = '新增產品套件成功';
< $lang['item_kits_successful_updating'] = '更新產品套件成功';
< $lang['item_kits_error_adding_updating'] = '新增/更新產品套件錯誤';
< $lang['item_kits_successful_deleted'] = '刪除成功';
< $lang['item_kits_confirm_delete'] = '你確定你要刪除選取的產品套件嗎？';
< $lang['item_kits_one_or_multiple'] = '產品套件';
< $lang['item_kits_cannot_be_deleted'] = '無法刪除產品套件';
< $lang['item_kits_add_item'] = '新增套件';
< $lang['item_kits_items'] = '產品';
< $lang['item_kits_item'] = '產品';
< $lang['item_kits_quantity'] = '數量';
< ?>
---
> 
> $lang["item_kits_add_item"] = "新增套件";
> $lang["item_kits_cannot_be_deleted"] = "無法刪除產品套件";
> $lang["item_kits_confirm_delete"] = "你確定你要刪除選取的產品套件嗎？";
> $lang["item_kits_description"] = "產品套件描述";
> $lang["item_kits_error_adding_updating"] = "新增/更新產品套件錯誤";
> $lang["item_kits_info"] = "產品套件資料";
> $lang["item_kits_item"] = "產品";
> $lang["item_kits_items"] = "產品";
> $lang["item_kits_kit"] = "Kit Id";
> $lang["item_kits_name"] = "產品套件";
> $lang["item_kits_new"] = "新增產品套件";
> $lang["item_kits_no_item_kits_to_display"] = "沒有產品套件";
> $lang["item_kits_none_selected"] = "沒有選擇任何產品套件";
> $lang["item_kits_one_or_multiple"] = "產品套件";
> $lang["item_kits_quantity"] = "數量";
> $lang["item_kits_successful_adding"] = "新增產品套件成功";
> $lang["item_kits_successful_deleted"] = "刪除成功";
> $lang["item_kits_successful_updating"] = "更新產品套件成功";
> $lang["item_kits_update"] = "更新產品套件";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/items_lang.php opensourcepos/application/language/zh/items_lang.php
2,81c2,88
< $lang['items_item_number'] = 'UPC/EAN/ISBN';
< $lang['items_retrive_item_info'] = '檢索產品訊息';
< $lang['items_description'] = '描述';
< $lang['items_amazon'] = 'Amazon';
< $lang['items_upc_database'] = 'UPC Database';
< $lang['items_cannot_find_item'] = '無法找到任何有關的產品';
< $lang['items_info_provided_by'] = '訊息提供者';
< $lang['items_basic_information'] = '產品訊息';
< $lang['items_number_information'] = '產品編號';
< $lang['items_new'] = '新增產品';
< $lang['items_update'] = '更新產品';
< $lang['items_item'] = '產品';
< $lang['items_edit_multiple_items'] = '編輯多項產品';
< $lang['items_name'] = '產品名稱';
< $lang['items_category'] = '類別';
< $lang['items_cost_price'] = '成本價';
< $lang['items_unit_price'] = '單價';
< $lang['items_tax_1'] = '稅額 1';
< $lang['items_tax_2'] = '稅額 2';
< $lang['items_sales_tax_1'] = '營業稅';
< $lang['items_sales_tax_2'] = '營業稅 2';
< $lang['items_tax_percent'] = '稅率';
< $lang['items_tax_percents'] = '稅率 %';
< $lang['items_reorder_level'] = '補貨點';
< $lang['items_quantity'] = '數量';
< $lang['items_reorder_level'] = '補貨點';
< $lang['items_no_items_to_display'] = '沒有產品可以顯示';
< $lang['items_bulk_edit'] = '批次編輯';
< $lang['items_confirm_delete'] = '你確定你要刪除選定的產品嗎？';
< $lang['items_none_selected'] = '您還沒有選擇任何產品進行編輯';
< $lang['items_confirm_bulk_edit'] = '您確定您要編輯的所有選定的產品嗎？';
< $lang['items_successful_bulk_edit'] = '您已成功更新所選產品';
< $lang['items_error_updating_multiple'] = '更新產品錯誤';
< $lang['items_edit_fields_you_want_to_update'] = '編輯您選定產品的所有欄位';
< $lang['items_error_adding_updating'] = '新增/更新產品錯誤';
< $lang['items_successful_adding'] = '已成功新增產品';
< $lang['items_successful_updating'] = '已成功更新產品';
< $lang['items_successful_deleted'] = '刪除成功';
< $lang['items_one_or_multiple'] = '產品';
< $lang['items_cannot_be_deleted'] = '無法刪除選定產品，所選產品中的一個或多個有銷售紀綠。';
< $lang['items_name_required'] = '產品名稱為必填';
< $lang['items_category_required'] = '類別為必填欄位';
< $lang['items_buy_price_required'] = '進貨價為必填欄位';
< $lang['items_unit_price_required'] = '單價為必填欄位';
< $lang['items_cost_price_required'] = '成本價為必填攔位';
< $lang['items_tax_percent_required'] = '稅率為必填欄位';
< $lang['items_quantity_required'] = '數量為必填欄位';
< $lang['items_reorder_level_required'] = '補貨點為必填欄位';
< $lang['items_unit_price_number'] = '單價必需是數值';
< $lang['items_cost_price_number'] = '成本價必需是數值';
< $lang['items_quantity_number'] = '數量必需是數值';
< $lang['items_reorder_level_number'] = '補貨點必需是數值';
< $lang['items_none'] = '無';
< $lang['items_supplier'] = '供貨商';
< $lang['items_generate_barcodes'] = '產生條碼';
< $lang['items_must_select_item_for_barcode'] = '您必須至少選擇一個產品生才能產生條碼';
< $lang['items_excel_import_failed'] = 'Excel匯入失敗';
< $lang['items_allow_alt_description'] = '允許ALT描述';
< $lang['items_is_serialized'] = '產品有序號';
< $lang['items_low_inventory_items'] = '低庫存產品';
< $lang['items_serialized_items'] = '序列化產品';
< $lang['items_no_description_items'] = '產品沒有說明';
< $lang['items_search_custom_items'] = 'Search Custom Fields';//GARRISON ADDED
< $lang['items_inventory_comments'] = '評論';
< $lang['items_count'] = '更新庫存';
< $lang['items_details_count'] = '庫存盤點詳情';
< $lang['items_add_minus'] = '增/減庫存';
< $lang['items_current_quantity'] = '當前數量';
< $lang['items_quantity_required'] = '數量是必填欄位。請關閉（X）來取消';
< $lang['items_do_nothing'] = '沒有執行任何修改';
< $lang['items_change_all_to_serialized'] = '全部更改序號至序列化';
< $lang['items_change_all_to_unserialized'] = '全部更改序號至非序列化';
< $lang['items_change_all_to_allow_alt_desc'] = ' 充許全部ALT倒序';
< $lang['items_change_all_to_not_allow_allow_desc'] = '不允許全部ALT倒序';
< $lang['items_use_inventory_menu'] = '使用庫存清單';
< $lang['items_manually_editing_of_quantity'] = '手動編輯數量';
< $lang['items_inventory'] = '庫存';
< $lang['items_location'] = '位置';
< $lang['items_is_deleted'] = 'Deleted';// Parq 131215
< ?>
---
> 
> $lang["items_add_minus"] = "增/減庫存";
> $lang["items_allow_alt_desciption"] = "";
> $lang["items_allow_alt_description"] = "允許ALT描述";
> $lang["items_amazon"] = "Amazon";
> $lang["items_basic_information"] = "產品訊息";
> $lang["items_bulk_edit"] = "批次編輯";
> $lang["items_buy_price_required"] = "進貨價為必填欄位";
> $lang["items_cannot_be_deleted"] = "無法刪除選定產品，所選產品中的一個或多個有銷售紀綠。";
> $lang["items_cannot_find_item"] = "無法找到任何有關的產品";
> $lang["items_category"] = "類別";
> $lang["items_category_required"] = "類別為必填欄位";
> $lang["items_change_all_to_allow_alt_desc"] = " 充許全部ALT倒序";
> $lang["items_change_all_to_not_allow_allow_desc"] = "不允許全部ALT倒序";
> $lang["items_change_all_to_serialized"] = "全部更改序號至序列化";
> $lang["items_change_all_to_unserialized"] = "全部更改序號至非序列化";
> $lang["items_confirm_bulk_edit"] = "您確定您要編輯的所有選定的產品嗎？";
> $lang["items_confirm_bulk_edit_wipe_taxes"] = "All item tax information will be replaced!";
> $lang["items_confirm_delete"] = "你確定你要刪除選定的產品嗎？";
> $lang["items_cost_price"] = "成本價";
> $lang["items_cost_price_number"] = "成本價必需是數值";
> $lang["items_cost_price_required"] = "成本價為必填攔位";
> $lang["items_count"] = "更新庫存";
> $lang["items_current_quantity"] = "當前數量";
> $lang["items_description"] = "描述";
> $lang["items_details_count"] = "庫存盤點詳情";
> $lang["items_do_nothing"] = "沒有執行任何修改";
> $lang["items_edit_fields_you_want_to_update"] = "編輯您選定產品的所有欄位";
> $lang["items_edit_multiple_items"] = "編輯多項產品";
> $lang["items_error_adding_updating"] = "新增/更新產品錯誤";
> $lang["items_error_updating_multiple"] = "更新產品錯誤";
> $lang["items_excel_import_failed"] = "Excel匯入失敗";
> $lang["items_generate_barcodes"] = "產生條碼";
> $lang["items_image"] = "Avatar";
> $lang["items_info_provided_by"] = "訊息提供者";
> $lang["items_inventory"] = "庫存";
> $lang["items_inventory_comments"] = "評論";
> $lang["items_is_deleted"] = "Deleted";
> $lang["items_is_serialized"] = "產品有序號";
> $lang["items_item"] = "產品";
> $lang["items_item_number"] = "UPC/EAN/ISBN";
> $lang["items_item_number_duplicate"] = "The item number is already present in the database";
> $lang["items_location"] = "位置";
> $lang["items_empty_upc_items"] = "Empty UPC Items";
> $lang["items_low_inventory_items"] = "低庫存產品";
> $lang["items_manually_editing_of_quantity"] = "手動編輯數量";
> $lang["items_must_select_item_for_barcode"] = "您必須至少選擇一個產品生才能產生條碼";
> $lang["items_name"] = "產品名稱";
> $lang["items_name_required"] = "產品名稱為必填";
> $lang["items_new"] = "新增產品";
> $lang["items_no_description_items"] = "產品沒有說明";
> $lang["items_no_items_to_display"] = "沒有產品可以顯示";
> $lang["items_none"] = "無";
> $lang["items_none_selected"] = "您還沒有選擇任何產品進行編輯";
> $lang["items_number_information"] = "產品編號";
> $lang["items_number_required"] = "UPC/EAN/ISBN is a required field";
> $lang["items_one_or_multiple"] = "產品";
> $lang["items_quantity"] = "數量";
> $lang["items_quantity_number"] = "數量必需是數值";
> $lang["items_quantity_required"] = "數量為必填欄位";
> $lang["items_receiving_quantity"] = "Receiving quantity";
> $lang["items_reorder_level"] = "補貨點";
> $lang["items_reorder_level_number"] = "補貨點必需是數值";
> $lang["items_reorder_level_required"] = "補貨點為必填欄位";
> $lang["items_retrive_item_info"] = "檢索產品訊息";
> $lang["items_sales_tax_1"] = "營業稅";
> $lang["items_sales_tax_2"] = "營業稅 2";
> $lang["items_search_custom_items"] = "Search Custom Fields";
> $lang["items_serialized_items"] = "序列化產品";
> $lang["items_stock_location"] = "Stock location";
> $lang["items_successful_adding"] = "已成功新增產品";
> $lang["items_successful_bulk_edit"] = "您已成功更新所選產品";
> $lang["items_successful_deleted"] = "刪除成功";
> $lang["items_successful_updating"] = "已成功更新產品";
> $lang["items_supplier"] = "供貨商";
> $lang["items_tax_1"] = "稅額 1";
> $lang["items_tax_2"] = "稅額 2";
> $lang["items_tax_percent"] = "稅率";
> $lang["items_tax_percent_required"] = "稅率為必填欄位";
> $lang["items_tax_percents"] = "稅率 %";
> $lang["items_unit_price"] = "單價";
> $lang["items_unit_price_number"] = "單價必需是數值";
> $lang["items_unit_price_required"] = "單價為必填欄位";
> $lang["items_upc_database"] = "UPC Database";
> $lang["items_update"] = "更新產品";
> $lang["items_use_inventory_menu"] = "使用庫存清單";
> $lang["items_import_items_excel"] = "Import items from Excel sheet";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/login_lang.php opensourcepos/application/language/zh/login_lang.php
2,8c2,8
< $lang['login_login'] = '登入';
< $lang['login_username'] = '帳號';
< $lang['login_password'] = '密碼';
< $lang['login_go'] = '登入';
< $lang['login_invalid_username_and_password'] = '錯誤的帳號或密碼';
< $lang['login_welcome_message'] = '歡迎使用Master6進銷存。若要繼續，請使用您的帳號和密碼登錄。';
< ?>
---
> 
> $lang["login_go"] = "登入";
> $lang["login_invalid_username_and_password"] = "錯誤的帳號或密碼";
> $lang["login_login"] = "登入";
> $lang["login_password"] = "密碼";
> $lang["login_username"] = "帳號";
> $lang["login_welcome_message"] = "歡迎使用Master6進銷存。若要繼續，請使用您的帳號和密碼登錄。";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/module_lang.php opensourcepos/application/language/zh/module_lang.php
2d1
< $lang['module_home'] = '首頁';
4,34c3,23
< $lang['module_customers'] = '客戶';
< $lang['module_customers_desc'] = '添加，更新，刪除，搜索客戶';
< 
< $lang['module_suppliers'] = '供應商';
< $lang['module_suppliers_desc'] = '添加，更新，刪除，搜索供應商';
< 
< $lang['module_employees'] = '員工';
< $lang['module_employees_desc'] = '添加，更新，刪除，搜索員工';
< 
< $lang['module_sales'] = '出貨';
< $lang['module_sales_desc'] = '出貨與退貨';
< 
< $lang['module_reports'] = '報表';
< $lang['module_reports_desc'] = '檢視與產生報表';
< 
< $lang['module_items'] = '產品';
< $lang['module_items_desc'] = '添加，更新，刪除，搜索產品';
< 
< $lang['module_config'] = '系統配置';
< $lang['module_config_desc'] = '修改系統配置';
< 
< $lang['module_receivings'] = '進貨';
< $lang['module_receivings_desc'] = '採購訂單流程';
< 
< $lang['module_giftcards'] = '禮金券';
< $lang['module_giftcards_desc'] = '添加，更新，刪除，搜索禮金券';
< 
< $lang['module_item_kits'] = '產品套件';
< $lang['module_item_kits_desc'] = '添加，更新，刪除，搜索產品套件';
< 
< ?>
---
> $lang["module_config"] = "系統配置";
> $lang["module_config_desc"] = "修改系統配置";
> $lang["module_customers"] = "客戶";
> $lang["module_customers_desc"] = "添加，更新，刪除，搜索客戶";
> $lang["module_employees"] = "員工";
> $lang["module_employees_desc"] = "添加，更新，刪除，搜索員工";
> $lang["module_giftcards"] = "禮金券";
> $lang["module_giftcards_desc"] = "添加，更新，刪除，搜索禮金券";
> $lang["module_home"] = "首頁";
> $lang["module_item_kits"] = "產品套件";
> $lang["module_item_kits_desc"] = "添加，更新，刪除，搜索產品套件";
> $lang["module_items"] = "產品";
> $lang["module_items_desc"] = "添加，更新，刪除，搜索產品";
> $lang["module_receivings"] = "進貨";
> $lang["module_receivings_desc"] = "採購訂單流程";
> $lang["module_reports"] = "報表";
> $lang["module_reports_desc"] = "檢視與產生報表";
> $lang["module_sales"] = "出貨";
> $lang["module_sales_desc"] = "出貨與退貨";
> $lang["module_suppliers"] = "供應商";
> $lang["module_suppliers_desc"] = "添加，更新，刪除，搜索供應商";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/receivings_lang.php opensourcepos/application/language/zh/receivings_lang.php
2,26c2,51
< $lang['recvs_register'] = '產品進貨';
< $lang['recvs_mode'] = '進貨模式';
< $lang['recvs_receiving'] = '收貨';
< $lang['recvs_return'] = '退貨';
< $lang['recvs_total'] = '總數量';
< $lang['recvs_cost'] = '成本';
< $lang['recvs_quantity'] = '數量.';
< $lang['recvs_discount'] = '折古 %';
< $lang['recvs_edit'] = '編輯';
< $lang['recvs_new_supplier'] = '新供應商';
< $lang['recvs_supplier'] = '供應商';
< $lang['recvs_select_supplier'] = '選擇供應商 (Optional)';
< $lang['recvs_start_typing_supplier_name'] = '開始輸入供應商名稱...';
< $lang['recvs_unable_to_add_item'] = '無法新增進貨資料';
< $lang['recvs_error_editing_item'] = '產品編輯錯誤';
< $lang['recvs_receipt'] = '收貨憑證';
< $lang['recvs_complete_receiving'] = '完成';
< $lang['recvs_confirm_finish_receiving'] = '您確定要提交此進貨資料嗎？一旦送出將不能撤消。';
< $lang['recvs_confirm_cancel_receiving'] = '您確定要刪除此進貨資料嗎？本資料中所有的產品資料也將會被清空。';
< $lang['recvs_find_or_scan_item'] = '查找 / 掃描產品';
< $lang['recvs_find_or_scan_item_or_receipt'] = '查找 / 掃描產品或收據';
< $lang['recvs_id'] = '進貨編號';
< $lang['recvs_item_name'] = '產品名稱';
< $lang['receivings_transaction_failed'] = '進貨交易失敗';
< ?>
---
> 
> $lang["receivings_transaction_failed"] = "進貨交易失敗";
> $lang["recvs_basic_information"] = "";
> $lang["recvs_cancel_receiving"] = "";
> $lang["recvs_cannot_be_deleted"] = "";
> $lang["recvs_comments"] = "";
> $lang["recvs_complete_receiving"] = "完成";
> $lang["recvs_confirm_cancel_receiving"] = "您確定要刪除此進貨資料嗎？本資料中所有的產品資料也將會被清空。";
> $lang["recvs_confirm_finish_receiving"] = "您確定要提交此進貨資料嗎？一旦送出將不能撤消。";
> $lang["recvs_cost"] = "成本";
> $lang["recvs_date"] = "";
> $lang["recvs_date_required"] = "";
> $lang["recvs_date_type"] = "";
> $lang["recvs_delete_confirmation"] = "";
> $lang["recvs_delete_entire_sale"] = "Delete entire sale";
> $lang["recvs_discount"] = "折古 %";
> $lang["recvs_edit"] = "編輯";
> $lang["recvs_edit_sale"] = "Edit Receiving";
> $lang["recvs_employee"] = "Employee";
> $lang["recvs_error_editing_item"] = "產品編輯錯誤";
> $lang["recvs_error_requisition"] = "";
> $lang["recvs_find_or_scan_item"] = "查找 / 掃描產品";
> $lang["recvs_find_or_scan_item_or_receipt"] = "查找 / 掃描產品或收據";
> $lang["recvs_id"] = "進貨編號";
> $lang["recvs_invoice_enable"] = "Create Invoice";
> $lang["recvs_invoice_number"] = "";
> $lang["recvs_invoice_number_duplicate"] = "";
> $lang["recvs_item_name"] = "產品名稱";
> $lang["recvs_mode"] = "進貨模式";
> $lang["recvs_new_supplier"] = "新供應商";
> $lang["recvs_one_or_multiple"] = "";
> $lang["recvs_print_after_sale"] = "出貨時打印收據";
> $lang["recvs_quantity"] = "數量.";
> $lang["recvs_receipt"] = "收貨憑證";
> $lang["recvs_receipt_number"] = "";
> $lang["recvs_receiving"] = "收貨";
> $lang["recvs_register"] = "產品進貨";
> $lang["recvs_requisition"] = "";
> $lang["recvs_return"] = "退貨";
> $lang["recvs_select_supplier"] = "選擇供應商 (Optional)";
> $lang["recvs_start_typing_supplier_name"] = "開始輸入供應商名稱...";
> $lang["recvs_stock_destination"] = "Stock destination";
> $lang["recvs_stock_locaiton"] = "Stock location";
> $lang["recvs_stock_source"] = "Stock source";
> $lang["recvs_successfully_deleted"] = "You have successfully deleted";
> $lang["recvs_successfully_updated"] = "Receiving successfully updated";
> $lang["recvs_supplier"] = "供應商";
> $lang["recvs_total"] = "總數量";
> $lang["recvs_unable_to_add_item"] = "無法新增進貨資料";
> $lang["recvs_unsuccessfully_updated"] = "Receiving unsuccessfully updated";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/reports_lang.php opensourcepos/application/language/zh/reports_lang.php
2,88c2,108
< $lang['reports_reports'] = '報表';
< $lang['reports_report'] = '報表';
< $lang['reports_welcome_message'] = '歡迎使用報表系統。請選擇要查看的報表。';
< $lang['reports_sales_summary_report'] = '銷售摘要報告';
< $lang['reports_categories_summary_report'] = '分類摘要報告';
< $lang['reports_customers_summary_report'] = '客戶摘要報告';
< $lang['reports_suppliers_summary_report'] = '供應商摘要報告';
< $lang['reports_items_summary_report'] = '產品摘要報告';
< $lang['reports_employees_summary_report'] = '員工摘要報告';
< $lang['reports_taxes_summary_report'] = '稅金摘要報告';
< $lang['reports_date'] = '日期';
< $lang['reports_name'] = '名稱';
< $lang['reports_quantity_purchased'] = '銷售金額';
< $lang['reports_sale_id'] = '銷售編號';
< $lang['reports_items_purchased'] = '銷售產品';
< $lang['reports_sold_by'] = '銷售人';
< $lang['reports_sold_to'] = '購買人';
< $lang['reports_category'] = '類別';
< $lang['reports_customer'] = '客戶';
< $lang['reports_employee'] = '員工';
< $lang['reports_item'] = '產品';
< $lang['reports_items'] = '產品';
< $lang['reports_supplier'] = '供應商';
< $lang['reports_employees'] = '員工';
< $lang['reports_subtotal'] = '小計';
< $lang['reports_total'] = '總計';
< $lang['reports_tax'] = '稅額';
< $lang['reports_profit'] = '利潤';
< $lang['reports_report_input'] = '輸入報表';
< $lang['reports_type'] = '類型';
< $lang['reports_date_range'] = '日期範圍';
< $lang['reports_today'] = '今天';
< $lang['reports_yesterday'] = '昨天';
< $lang['reports_last_7'] = '過去七天';
< $lang['reports_this_month'] = '這個月';
< $lang['reports_last_month'] = '上個月';
< $lang['reports_this_year'] = '今年';
< $lang['reports_last_year'] = '去年';
< $lang['reports_all_time'] = '全部';
< $lang['reports_detailed_sales_report'] = '詳細銷售報表';
< $lang['reports_comments'] = '評論';
< $lang['reports_discount'] = '折扣';
< $lang['reports_payment_type'] = '付款方式';
< $lang['reports_sales'] = '銷售';
< $lang['reports_categories'] = '類別';
< $lang['reports_customers'] = '客戶';
< $lang['reports_suppliers'] = '供應商';
< $lang['reports_items'] = '產品';
< $lang['reports_employees'] = '員工';
< $lang['reports_taxes'] = '稅額';
< $lang['reports_customer'] = '客戶';
< $lang['reports_employee'] = '員工';
< $lang['reports_tax_percent'] = '稅率';
< $lang['reports_quantity_purchased'] = '購買數量';
< $lang['reports_serial_number'] = '序號 #';
< $lang['reports_description'] = '描述';
< $lang['reports_date'] = '日期';
< $lang['reports_sales_amount'] = '總銷售額';
< $lang['reports_revenue'] = '收入';
< $lang['reports_discounts'] = '折扣';
< $lang['reports_discounts_summary_report'] = '折扣摘要報告';
< $lang['reports_discount_percent'] = '折扣率';
< $lang['reports_count'] = '計';
< $lang['reports_summary_reports'] = '摘要報表';
< $lang['reports_graphical_reports'] = '圖表';
< $lang['reports_detailed_reports'] = '詳細報表';
< $lang['reports_inventory_reports'] = '庫存報告';
< $lang['reports_low_inventory'] = '低庫存';
< $lang['reports_inventory_summary'] = ' 庫存摘要';
< $lang['reports_item_number'] = '產品數量';
< $lang['reports_reorder_level'] = '補貨點';
< $lang['reports_low_inventory_report'] = '低庫存報告';
< $lang['reports_item_name'] = '產品名稱';
< $lang['reports_inventory_summary_report'] = '庫存報告摘要';
< $lang['reports_payment_type'] = '付款模式';
< $lang['reports_payments_summary_report'] = '收入報告摘要';
< $lang['reports_payments'] = '付款';
< $lang['reports_receivings'] = '應付款';
< $lang['reports_received_by'] = '收款人';
< $lang['reports_supplied_by'] = '付款人';
< $lang['reports_items_received'] = '進貨產品';
< $lang['reports_detailed_receivings_report'] = '詳細的進貨報告';
< $lang['reports_sale_type'] = '銷售類型';
< $lang['reports_all'] = '全部';
< $lang['reports_returns'] = '返回';
< $lang['reports_discount'] = 'A discount greater than ';
< ?>
---
> 
> $lang["reports_all"] = "全部";
> $lang["reports_all_time"] = "全部";
> $lang["reports_categories"] = "類別";
> $lang["reports_categories_summary_report"] = "分類摘要報告";
> $lang["reports_category"] = "類別";
> $lang["reports_comments"] = "評論";
> $lang["reports_count"] = "計";
> $lang["reports_customer"] = "客戶";
> $lang["reports_customers"] = "客戶";
> $lang["reports_customers_summary_report"] = "客戶摘要報告";
> $lang["reports_date"] = "日期";
> $lang["reports_date_range"] = "日期範圍";
> $lang["reports_description"] = "描述";
> $lang["reports_detailed_receivings_report"] = "詳細的進貨報告";
> $lang["reports_detailed_reports"] = "詳細報表";
> $lang["reports_detailed_requisition_report"] = "";
> $lang["reports_detailed_sales_report"] = "詳細銷售報表";
> $lang["reports_discount"] = "折扣";
> $lang["reports_discount_percent"] = "折扣率";
> $lang["reports_discounts"] = "折扣";
> $lang["reports_discounts_summary_report"] = "折扣摘要報告";
> $lang["reports_employee"] = "員工";
> $lang["reports_employees"] = "員工";
> $lang["reports_employees_summary_report"] = "員工摘要報告";
> $lang["reports_graphical_reports"] = "圖表";
> $lang["reports_inventory"] = "";
> $lang["reports_inventory_low"] = "低庫存";
> $lang["reports_inventory_low_report"] = "低庫存報告";
> $lang["reports_inventory_reports"] = "庫存報告";
> $lang["reports_inventory_summary"] = " 庫存摘要";
> $lang["reports_inventory_summary_report"] = "庫存報告摘要";
> $lang["reports_item"] = "產品";
> $lang["reports_item_name"] = "產品名稱";
> $lang["reports_item_number"] = "產品數量";
> $lang["reports_items"] = "產品";
> $lang["reports_items_purchased"] = "銷售產品";
> $lang["reports_items_received"] = "進貨產品";
> $lang["reports_items_summary_report"] = "產品摘要報告";
> $lang["reports_last_7"] = "過去七天";
> $lang["reports_last_month"] = "上個月";
> $lang["reports_last_year"] = "去年";
> $lang["reports_low_inventory"] = "";
> $lang["reports_low_inventory_report"] = "";
> $lang["reports_name"] = "名稱";
> $lang["reports_payment_type"] = "付款方式";
> $lang["reports_payments"] = "付款";
> $lang["reports_payments_summary_report"] = "收入報告摘要";
> $lang["reports_profit"] = "利潤";
> $lang["reports_cost"] = "Cost";
> $lang["reports_quantity_purchased"] = "銷售金額";
> $lang["reports_received_by"] = "收款人";
> $lang["reports_receiving_id"] = "";
> $lang["reports_receiving_type"] = "";
> $lang["reports_receivings"] = "應付款";
> $lang["reports_reorder_level"] = "補貨點";
> $lang["reports_report"] = "報表";
> $lang["reports_report_input"] = "輸入報表";
> $lang["reports_reports"] = "報表";
> $lang["reports_requisition"] = "";
> $lang["reports_requisition_by"] = "";
> $lang["reports_requisition_id"] = "";
> $lang["reports_requisition_item"] = "";
> $lang["reports_requisition_item_quantity"] = "";
> $lang["reports_requisition_related_item"] = "";
> $lang["reports_requisition_related_item_total_quantity"] = "";
> $lang["reports_requisition_related_item_unit_quantity"] = "";
> $lang["reports_requisitions"] = "";
> $lang["reports_returns"] = "返回";
> $lang["reports_revenue"] = "收入";
> $lang["reports_sale_id"] = "銷售編號";
> $lang["reports_sale_type"] = "銷售類型";
> $lang["reports_sales"] = "銷售";
> $lang["reports_sales_amount"] = "總銷售額";
> $lang["reports_sales_summary_report"] = "銷售摘要報告";
> $lang["reports_serial_number"] = "序號 #";
> $lang["reports_sold_by"] = "銷售人";
> $lang["reports_sold_to"] = "購買人";
> $lang["reports_stock_location"] = "";
> $lang["reports_subtotal"] = "小計";
> $lang["reports_summary_reports"] = "摘要報表";
> $lang["reports_supplied_by"] = "付款人";
> $lang["reports_supplier"] = "供應商";
> $lang["reports_suppliers"] = "供應商";
> $lang["reports_suppliers_summary_report"] = "供應商摘要報告";
> $lang["reports_tax"] = "稅額";
> $lang["reports_tax_percent"] = "稅率";
> $lang["reports_taxes"] = "稅額";
> $lang["reports_taxes_summary_report"] = "稅金摘要報告";
> $lang["reports_this_month"] = "這個月";
> $lang["reports_this_month_last_year"] = "This Month Last Year";
> $lang["reports_this_month_to_today"] = "This Month To Today";
> $lang["reports_this_month_to_today_last_year"] = "This Month To Today Last Year";
> $lang["reports_this_year"] = "今年";
> $lang["reports_today"] = "今天";
> $lang["reports_today_last_year"] = "Today Last Year";
> $lang["reports_total"] = "總計";
> $lang["reports_type"] = "類型";
> $lang["reports_welcome_message"] = "歡迎使用報表系統。請選擇要查看的報表。";
> $lang["reports_yesterday"] = "昨天";
> $lang["reports_item_count"] = "Filter Item Count";
> $lang["reports_cost_price"] = "成本價";
> $lang["reports_unit_price"] = "單價";
> $lang["reports_sub_total_value"] = "小計";
> $lang["reports_total_inventory_value"] = "Total Inventory Value";
> $lang["reports_zero_and_less"] = "Zero and less";
> $lang["reports_more_than_zero"] = "More than zero";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/sales_lang.php opensourcepos/application/language/zh/sales_lang.php
2,86c2,117
< $lang['sales_giftcard_number'] = '禮金券編號';
< $lang['sales_giftcard'] = '禮金券';
< $lang['sales_register'] = '銷售登記';
< $lang['sales_mode'] = '登記模式';
< $lang['sales_new_item'] = '新增產品';
< $lang['sales_item_name'] = '產品名稱';
< $lang['sales_item_number'] = '產品 #';
< $lang['sales_new_customer'] = '新客戶';
< $lang['sales_customer'] = '客戶';
< $lang['sales_no_items_in_cart'] = '購物車中沒有任何產品';
< $lang['sales_total'] = '總計';
< $lang['sales_tax_percent'] = '稅率 %';
< $lang['sales_price'] = '價格';
< $lang['sales_quantity'] = '數量.';
< $lang['sales_discount'] = '折扣 %';
< $lang['sales_edit'] = '編輯';
< $lang['sales_payment'] = '付款方式';
< $lang['sales_edit_item'] = '編輯產品';
< $lang['sales_find_or_scan_item'] = '查找/掃描商品';
< $lang['sales_find_or_scan_item_or_receipt'] = '查找/掃描產品或收貨單';
< $lang['sales_select_customer'] = '選擇客戶 (Optional)';
< $lang['sales_start_typing_item_name'] = '開始輸入產品名或掃描條碼...';
< $lang['sales_start_typing_customer_name'] = '開始輸入客戶的名字';
< $lang['sales_sub_total'] = '小計';
< $lang['sales_tax'] = '稅額';
< $lang['sales_comment'] = '評論';
< $lang['sales_unable_to_add_item'] = '無法增加出售產品';
< $lang['sales_sale_for_customer'] = '客戶:';
< $lang['sales_remove_customer'] = '移除客戶';
< $lang['sales_error_editing_item'] = '編輯產品錯誤';
< $lang['sales_complete_sale'] = '完成銷售';
< $lang['sales_cancel_sale'] = '取消銷售';
< $lang['sales_add_payment'] = '新增付款';
< $lang['sales_receipt'] = '銷貨單';
< $lang['sales_receipt_number']='POS #';
< $lang['sales_id'] = '銷售編號';
< $lang['sales_sale'] = '銷售';
< $lang['sales_return'] = '退貨';
< $lang['sales_confirm_finish_sale'] = '你確定要提交銷售單？此動作不能撤消。';
< $lang['sales_confirm_cancel_sale'] = '你確定要清除此筆銷售單？本單內的所有產品將被清除。';
< $lang['sales_cash'] = '現金';
< $lang['sales_check'] = '支票';
< $lang['sales_debit'] = '簽帳卡';
< $lang['sales_credit'] = '信用卡';
< $lang['sales_giftcard'] = '禮金券';
< $lang['sales_amount_tendered'] = '已收帳款';
< $lang['sales_change_due'] = '更改到期日';
< $lang['sales_payment_not_cover_total'] = '付款金額不足';
< $lang['sales_transaction_failed'] = '銷售交易失敗';
< $lang['sales_must_enter_numeric'] = '已收帳款必須輸入數值';
< $lang['sales_must_enter_numeric_giftcard'] = '禮金券編號必須輸入數值';
< $lang['sales_serial'] = '序號';
< $lang['sales_description_abbrv'] = '倒序';
< $lang['sales_item_out_of_stock'] = '產品缺貨';
< $lang['sales_item_insufficient_of_stock'] = '產品庫存不足';
< $lang['sales_quantity_less_than_zero'] = '警告！產品的庫存數量是不足的。您仍然可以處理銷售，但檢查您的庫存';
< $lang['sales_successfully_updated'] = '銷售資料成功更新';
< $lang['sales_unsuccessfully_updated'] = '銷售資料更新失敗';
< $lang['sales_edit_sale'] = '編輯銷售資料';
< $lang['sales_employee'] = '員工';
< $lang['sales_successfully_deleted'] = '銷售資料成功刪除';
< $lang['sales_unsuccessfully_deleted'] = '銷售資料刪除失敗';
< $lang['sales_delete_entire_sale'] = '刪除全部銷售資料';
< $lang['sales_delete_confirmation'] = '你確定要刪除此銷售資料，這個動作不能撤消';
< $lang['sales_delete_successful'] = '您已成功刪除銷售資料';
< $lang['sales_delete_unsuccessful'] = '銷售資料刪除失敗';
< $lang['sales_suspend_sale'] = '暫停銷售';
< $lang['sales_confirm_suspend_sale'] = '你確定要暫停銷售？';
< $lang['sales_suspended_sales'] = '已暫停銷售';
< $lang['sales_suspended_sale_id'] = '暫停銷售編號';
< $lang['sales_date'] = '日期';
< $lang['sales_comments'] = '評論';
< $lang['sales_unsuspend_and_delete'] = '取消暫停銷售並刪除';
< $lang['sales_unsuspend'] = '取消暫停銷售';
< $lang['sales_successfully_suspended_sale'] = '本銷售資料已經成功暫停';
< $lang['sales_email_receipt'] = 'E-Mail 銷售單';
< $lang['sales_discount_short']='%';
< $lang["sales_discount_included"]='% Discount';
< $lang['sales_sale_time']='Time';
< $lang['sales_payments_total'] = 'Payments Total';
< $lang['sales_amount_due'] = 'Amount Due';
< $lang['sales_payment_type'] = "Type";
< $lang['sales_payment_amount'] = "Amount";
< $lang['sales_basic_information']='Sale information';
< ?>
---
> 
> $lang["sales_add_payment"] = "新增付款";
> $lang["sales_amount_due"] = "Amount Due";
> $lang["sales_amount_tendered"] = "已收帳款";
> $lang["sales_basic_information"] = "Sale information";
> $lang["sales_cancel_sale"] = "取消銷售";
> $lang["sales_cash"] = "現金";
> $lang["sales_change_due"] = "更改到期日";
> $lang["sales_check"] = "支票";
> $lang["sales_check_balance"] = "Check remainder";
> $lang["sales_comment"] = "評論";
> $lang["sales_comments"] = "評論";
> $lang["sales_complete_sale"] = "完成銷售";
> $lang["sales_confirm_cancel_sale"] = "你確定要清除此筆銷售單？本單內的所有產品將被清除。";
> $lang["sales_confirm_delete"] = "Are you sure you want to delete the selected sales?";
> $lang["sales_confirm_finish_sale"] = "你確定要提交銷售單？此動作不能撤消。";
> $lang["sales_confirm_suspend_sale"] = "你確定要暫停銷售？";
> $lang["sales_credit"] = "信用卡";
> $lang["sales_customer"] = "客戶";
> $lang["sales_date"] = "日期";
> $lang["sales_date_required"] = "A correct date needs to be filled in";
> $lang["sales_date_type"] = "Date field is required";
> $lang["sales_debit"] = "簽帳卡";
> $lang["sales_delete_confirmation"] = "你確定要刪除此銷售資料，這個動作不能撤消";
> $lang["sales_delete_entire_sale"] = "刪除全部銷售資料";
> $lang["sales_delete_successful"] = "您已成功刪除銷售資料";
> $lang["sales_delete_unsuccessful"] = "銷售資料刪除失敗";
> $lang["sales_description_abbrv"] = "倒序";
> $lang["sales_discount"] = "折扣 %";
> $lang["sales_discount_included"] = "% Discount";
> $lang["sales_discount"] = "Discount";
> $lang["sales_discount_short"] = "%";
> $lang["sales_edit"] = "編輯";
> $lang["sales_edit_item"] = "編輯產品";
> $lang["sales_edit_sale"] = "編輯銷售資料";
> $lang["sales_email_receipt"] = "E-Mail 銷售單";
> $lang["sales_employee"] = "員工";
> $lang["sales_error_editing_item"] = "編輯產品錯誤";
> $lang["sales_find_or_scan_item"] = "查找/掃描商品";
> $lang["sales_find_or_scan_item_or_receipt"] = "查找/掃描產品或收貨單";
> $lang["sales_giftcard"] = "禮金券";
> $lang["sales_giftcard_balance"] = "Giftcard Balance";
> $lang["sales_giftcard_number"] = "禮金券編號";
> $lang["sales_id"] = "銷售編號";
> $lang["sales_invoice"] = "Invoice";
> $lang["sales_invoice_confirm"] = "This invoice will be sent to";
> $lang["sales_invoice_enable"] = "Create Invoice";
> $lang["sales_invoice_filter"] = "Invoices";
> $lang["sales_cash_filter"] = "Cash";
> $lang["sales_invoice_no_email"] = "This customer does not have a valid email address";
> $lang["sales_invoice_number"] = "Invoice #";
> $lang["sales_invoice_number_duplicate"] = "Please enter an unique invoice number";
> $lang["sales_invoice_sent"] = "Invoice sent to";
> $lang["sales_invoice_unsent"] = "Invoice failed to be sent to";
> $lang["sales_invoice_update"] = "Recount";
> $lang["sales_item_insufficient_of_stock"] = "產品庫存不足";
> $lang["sales_item_name"] = "產品名稱";
> $lang["sales_item_number"] = "產品 #";
> $lang["sales_item_out_of_stock"] = "產品缺貨";
> $lang["sales_mode"] = "登記模式";
> $lang["sales_must_enter_numeric"] = "已收帳款必須輸入數值";
> $lang["sales_must_enter_numeric_giftcard"] = "禮金券編號必須輸入數值";
> $lang["sales_new_customer"] = "新客戶";
> $lang["sales_new_item"] = "新增產品";
> $lang["sales_no_description"] = "None";
> $lang["sales_no_filter"] = "All";
> $lang["sales_no_items_in_cart"] = "購物車中沒有任何產品";
> $lang["sales_no_sales_to_display"] = "No sales to display";
> $lang["sales_one_or_multiple"] = "";
> $lang["sales_takings"] = "Takings";
> $lang["sales_payment"] = "付款方式";
> $lang["sales_payment_amount"] = "Amount";
> $lang["sales_payment_not_cover_total"] = "付款金額不足";
> $lang["sales_payment_type"] = "Type";
> $lang["sales_payments_total"] = "Payments Total";
> $lang["sales_price"] = "價格";
> $lang["sales_print_after_sale"] = "出貨時打印收據";
> $lang["sales_quantity"] = "數量.";
> $lang["sales_quantity_less_than_zero"] = "警告！產品的庫存數量是不足的。您仍然可以處理銷售，但檢查您的庫存";
> $lang["sales_quantity_less_than_reorder_level"] = "警告！產品的庫存數量是不足的。您仍然可以處理銷售，但檢查您的庫存";
> $lang["sales_receipt"] = "銷貨單";
> $lang["sales_receipt_number"] = "POS #";
> $lang["sales_register"] = "銷售登記";
> $lang["sales_remove_customer"] = "移除客戶";
> $lang["sales_return"] = "退貨";
> $lang["sales_sale"] = "銷售";
> $lang["sales_sale_for_customer"] = "客戶:";
> $lang["sales_sale_time"] = "Time";
> $lang["sales_select_customer"] = "選擇客戶 (Optional)";
> $lang["sales_send_invoice"] = "Send Invoice";
> $lang["sales_serial"] = "序號";
> $lang["sales_show_invoice"] = "invoice";
> $lang["sales_show_receipt"] = "receipt";
> $lang["sales_start_typing_customer_name"] = "開始輸入客戶的名字";
> $lang["sales_start_typing_item_name"] = "開始輸入產品名或掃描條碼...";
> $lang["sales_stock_location"] = "";
> $lang["sales_sub_total"] = "小計";
> $lang["sales_successfully_deleted"] = "銷售資料成功刪除";
> $lang["sales_successfully_suspended_sale"] = "本銷售資料已經成功暫停";
> $lang["sales_successfully_updated"] = "銷售資料成功更新";
> $lang["sales_suspend_sale"] = "暫停銷售";
> $lang["sales_suspended_sale_id"] = "暫停銷售編號";
> $lang["sales_suspended_sales"] = "已暫停銷售";
> $lang["sales_tax"] = "稅額";
> $lang["sales_tax_percent"] = "稅率 %";
> $lang["sales_total"] = "總計";
> $lang["sales_total_tax_exclusive"] = "Tax excluded";
> $lang["sales_transaction_failed"] = "銷售交易失敗";
> $lang["sales_unable_to_add_item"] = "無法增加出售產品";
> $lang["sales_unsuccessfully_deleted"] = "銷售資料刪除失敗";
> $lang["sales_unsuccessfully_updated"] = "銷售資料更新失敗";
> $lang["sales_unsuspend"] = "取消暫停銷售";
> $lang["sales_unsuspend_and_delete"] = "取消暫停銷售並刪除";
> $lang["sales_update"] = "Edit Sale";
> $lang["sales_date_range"] = "日期範圍";
> $lang["sales_none_selected"] = "您還沒有選擇任何產品進行編輯";
diff -rBwi --ignore-file-name-case pos-prod/application/language/zh/suppliers_lang.php opensourcepos/application/language/zh/suppliers_lang.php
2,17c2,19
< $lang['suppliers_new'] = '新增供應商';
< $lang['suppliers_supplier'] = '供應商';
< $lang['suppliers_update'] = '更新供應商';
< $lang['suppliers_confirm_delete'] = '你確定要刪除選定的供應商嗎？';
< $lang['suppliers_none_selected'] = '您還沒有選擇任何供應商進行刪除';
< $lang['suppliers_error_adding_updating'] = '新增/更新供應商錯誤';
< $lang['suppliers_successful_adding'] = '您已成功新增供應商';
< $lang['suppliers_successful_updating'] = '您已成功更新供應商';
< $lang['suppliers_successful_deleted'] = '您已成功刪除供應商';
< $lang['suppliers_one_or_multiple'] = '供應商';
< $lang['suppliers_cannot_be_deleted'] = '無法刪除所選擇的供應商，選定的供應商中至少有一家已有銷售紀錄。';
< $lang['suppliers_basic_information'] = '供應商資料';
< $lang['suppliers_account_number'] = '帳號 #';
< $lang['suppliers_company_name'] = '公司名稱';
< $lang['suppliers_company_name_required'] = '公司名稱是必填欄位';
< ?>
---
> 
> $lang["suppliers_account_number"] = "帳號 #";
> $lang["suppliers_basic_information"] = "供應商資料";
> $lang["suppliers_cannot_be_deleted"] = "無法刪除所選擇的供應商，選定的供應商中至少有一家已有銷售紀錄。";
> $lang["suppliers_company_name"] = "公司名稱";
> $lang["suppliers_company_name_required"] = "公司名稱是必填欄位";
> $lang["suppliers_agency_name"] = " ";
> $lang["suppliers_confirm_delete"] = "你確定要刪除選定的供應商嗎？";
> $lang["suppliers_error_adding_updating"] = "新增/更新供應商錯誤";
> $lang["suppliers_new"] = "新增供應商";
> $lang["suppliers_none_selected"] = "您還沒有選擇任何供應商進行刪除";
> $lang["suppliers_one_or_multiple"] = "供應商";
> $lang["suppliers_successful_adding"] = "您已成功新增供應商";
> $lang["suppliers_successful_deleted"] = "您已成功刪除供應商";
> $lang["suppliers_successful_updating"] = "您已成功更新供應商";
> $lang["suppliers_supplier"] = "供應商";
> $lang["suppliers_supplier_id"] = "Id";
> $lang["suppliers_update"] = "更新供應商";
Only in opensourcepos/application/libraries: Barcode_lib.php
diff -rBwi --ignore-file-name-case pos-prod/application/libraries/index.html opensourcepos/application/libraries/index.html
0a1
> <!DOCTYPE html>
Only in opensourcepos/application/libraries: Item_lib.php
Only in pos-prod/application/libraries: MY_Language.php
Only in pos-prod/application/libraries/ofc-library: ofc_upload_image.php
diff -rBwi --ignore-file-name-case pos-prod/application/libraries/Receiving_lib.php opensourcepos/application/libraries/Receiving_lib.php
54,56c55,56
<              $stock_locations = $this->CI->Stock_locations->get_undeleted_all()->result_array();
<              $location_name = $stock_locations[0]['location_id'];
<              $this->set_stock_source($location_name);
---
>              $location_id = $this->CI->Stock_location->get_default_location_id();
>              $this->set_stock_source($location_id);
60a61,118
>     function get_comment()
>     {
>         // avoid returning a null that results in a 0 in the comment if nothing is set/available
>         $comment = $this->CI->session->userdata('comment');
>         return empty($comment) ? '' : $comment;
>     }
>     
>     function set_comment($comment)
>     {
>         $this->CI->session->set_userdata('comment', $comment);
>     }
>     
>     function clear_comment()
>     {
>         $this->CI->session->unset_userdata('comment');
>     }
>    
>     function get_invoice_number()
>     {
>         return $this->CI->session->userdata('recv_invoice_number');
>     }
>     
>     function set_invoice_number($invoice_number, $keep_custom = FALSE)
>     {
>         $current_invoice_number = $this->CI->session->userdata('recv_invoice_number');
>         if (!$keep_custom || empty($current_invoice_number))
>         {
>             $this->CI->session->set_userdata('recv_invoice_number', $invoice_number);
>         }
>     }
>     
>     function clear_invoice_number()
>     {
>         $this->CI->session->unset_userdata('recv_invoice_number');
>     }
>     
>     function is_invoice_number_enabled()
>     {
>         return $this->CI->session->userdata('recv_invoice_number_enabled') == 'true' ||
>         $this->CI->session->userdata('recv_invoice_number_enabled') == '1';
>     }
>     
>     function set_invoice_number_enabled($invoice_number_enabled)
>     {
>         return $this->CI->session->set_userdata('recv_invoice_number_enabled', $invoice_number_enabled);
>     }
>     
>     function is_print_after_sale()
>     {
>         return $this->CI->session->userdata('recv_print_after_sale') == 'true' ||
>         $this->CI->session->userdata('recv_print_after_sale') == '1';
>     }
>     
>     function set_print_after_sale($print_after_sale)
>     {
>         return $this->CI->session->set_userdata('recv_print_after_sale', $print_after_sale);
>     }
>     
75,77c133,134
<              $stock_locations = $this->CI->Stock_locations->get_undeleted_all()->result_array();
<              $location_name = $stock_locations[0]['location_id'];
<              $this->set_stock_destination($location_name);
---
>             $location_id = $this->CI->Stock_location->get_default_location_id();
>             $this->set_stock_destination($location_id);
92c149
< 	function add_item($item_id,$quantity=1,$item_location,$discount=0,$price=null,$description=null,$serialnumber=null)
---
>     function add_item($item_id,$quantity=1,$item_location=null,$discount=0,$price=null,$description=null,$serialnumber=null,$receiving_quantity=null)
137c194
<                 $item_info=$this->CI->Item->get_info($item_id);
---
>         $item_info=$this->CI->Item->get_info($item_id,$item_location);
138a196
>         $price=$price!=null ? $price: $item_info->cost_price;
143c201
<                         'stock_name'=>$this->CI->Stock_locations->get_location_name($item_location),
---
>             'stock_name'=>$this->CI->Stock_location->get_location_name($item_location),
152,155c210,213
<                         'in_stock'=>$this->CI->Item_quantities->get_item_quantity($item_id, $item_location)->quantity,
<                         //'price'=>$price!=null ? $price: $item_info->cost_price,
< 						'price'=>$price!=null ? $price: $this->CI->Item->get_info($item_id)->cost_price,
< 			'unit_price' => $this->CI->Item->get_info($item_id)->unit_price
---
>             'in_stock'=>$this->CI->Item_quantity->get_item_quantity($item_id, $item_location)->quantity,
>             'price'=>$price,
>             'receiving_quantity'=>$receiving_quantity!=null ? $receiving_quantity : $item_info->receiving_quantity,
>             'total'=>$this->get_item_total($quantity, $price, $discount)
180,184c238,244
< 			$items[$line]['description'] = $description;
< 			$items[$line]['serialnumber'] = $serialnumber;
< 			$items[$line]['quantity'] = $quantity;
< 			$items[$line]['discount'] = $discount;
< 			$items[$line]['price'] = $price;
---
>             $line = &$items[$line];
>             $line['description'] = $description;
>             $line['serialnumber'] = $serialnumber;
>             $line['quantity'] = $quantity;
>             $line['discount'] = $discount;
>             $line['price'] = $price;
>             $line['total'] = $this->get_item_total($quantity, $price, $discount); 
199a260,263
>         else 
>         {
>             return $this->CI->Receiving->get_receiving_by_invoice_number($receipt_receiving_id)->num_rows() > 0;
>         }
220a285,286
>         if ($pieces[0] == "RECV")
>         {
221a288,293
>         } 
>         else 
>         {
>             $receiving = $this->CI->Receiving->get_receiving_by_invoice_number($receipt_receiving_id)->row();
>             $receiving_id = $receiving->receiving_id;
>         }
224a297
>         $this->clear_comment();
228c301
< 			$this->add_item($row->item_id,-$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber);
---
>             $this->add_item($row->item_id,-$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber,$row->receiving_quantity);
252c325
< 			$this->add_item($row->item_id,$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber);
---
>             $this->add_item($row->item_id,$row->quantity_purchased,$row->item_location,$row->discount_percent,$row->item_unit_price,$row->description,$row->serialnumber,$row->receiving_quantity);
255,268c328,329
< 
< 	}
< 	
< 	function copy_entire_requisition($requisition_id,$item_location)
< 	{
< 		$this->empty_cart();
< 		$this->delete_supplier();
< 	
< 		foreach($this->CI->Receiving->get_requisition_items($requisition_id)->result() as $row)
< 		{
< 			$this->add_item_unit($row->item_id,$row->requisition_quantity,$item_location,$row->description);
< 		}
< 		$this->set_supplier($this->CI->Receiving->get_supplier($requisition_id)->person_id);
< 	
---
>         $receiving_info=$this->CI->Receiving->get_info($receiving_id);
>         //$this->set_invoice_number($receiving_info->row()->invoice_number);
297a359,368
>         $this->clear_comment();
>         $this->clear_invoice_number();
>     }
>     
>     function get_item_total($quantity, $price, $discount_percentage)
>     {
>         $total = bcmul($quantity, $price, PRECISION);
>         $discount_fraction = bcdiv($discount_percentage, 100, PRECISION);
>         $discount_amount =  bcmul($total, $discount_fraction, PRECISION);
>         return bcsub($total, $discount_amount, PRECISION);
305c376
<             $total+=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100);
---
>             $total = bcadd($total, $this->get_item_total($item['quantity'], $item['price'], $item['discount']), PRECISION);
Only in pos-prod/application/libraries: Receiving_lib.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/libraries/Sale_lib.php opensourcepos/application/libraries/Sale_lib.php
24c25
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
33c34
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
41c42,44
< 		return $this->CI->session->userdata('comment');
---
> 		// avoid returning a null that results in a 0 in the comment if nothing is set/available
> 		$comment = $this->CI->session->userdata('comment');
>     	return empty($comment) ? '' : $comment;
53a57,98
> 	function get_invoice_number()
> 	{
> 		return $this->CI->session->userdata('sales_invoice_number');
> 	}
> 	
> 	function set_invoice_number($invoice_number, $keep_custom = FALSE)
> 	{
> 		$current_invoice_number = $this->CI->session->userdata('sales_invoice_number');
> 		if (!$keep_custom || empty($current_invoice_number))
> 		{
> 			$this->CI->session->set_userdata('sales_invoice_number', $invoice_number);
> 		}
> 
> 	}
> 	
> 	function clear_invoice_number()
> 	{
> 		$this->CI->session->unset_userdata('sales_invoice_number');
> 	}
> 	
> 	function is_invoice_number_enabled() 
> 	{
> 		return $this->CI->session->userdata('sales_invoice_number_enabled') == 'true' ||
> 			$this->CI->session->userdata('sales_invoice_number_enabled') == '1';
> 	}
> 	
> 	function set_invoice_number_enabled($invoice_number_enabled)
> 	{
> 		return $this->CI->session->set_userdata('sales_invoice_number_enabled', $invoice_number_enabled);
> 	}
> 	
> 	function is_print_after_sale() 
> 	{
> 		return $this->CI->session->userdata('sales_print_after_sale') == 'true' ||
> 			$this->CI->session->userdata('sales_print_after_sale') == '1';
> 	}
> 	
> 	function set_print_after_sale($print_after_sale)
> 	{
> 		return $this->CI->session->set_userdata('sales_print_after_sale', $print_after_sale);
> 	}
> 	
71a117,124
> 		if( isset( $payments[$payment_id] ) )
> 		{
> 			//payment_method already exists, add to payment_amount
> 			$payments[$payment_id]['payment_amount'] = bcadd($payments[$payment_id]['payment_amount'], $payment_amount, PRECISION);
> 		}
> 		else
> 		{
> 			//add to existing array
79,86d131
< 		//payment_method already exists, add to payment_amount
< 		if(isset($payments[$payment_id]))
< 		{
< 			$payments[$payment_id]['payment_amount']+=$payment_amount;
< 		}
< 		else
< 		{
< 			//add to existing array
95c140
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
103c148
< 			$this->set_payments($payment_id);
---
> 			$this->set_payments($payments);
109c154
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
117c162
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
123c168
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
129c174
< 		    $subtotal+=$payments['payment_amount'];
---
> 		    $subtotal = bcadd($payments['payment_amount'], $subtotal, PRECISION);
134c179
< 	//Alain Multiple Payments
---
> 	// Multiple Payments
140c185
< 		$amount_due=to_currency_no_money($sales_total - $payment_total);
---
> 		$amount_due=to_currency_no_money(bcsub($sales_total, $payment_total, PRECISION));
174,176c219,220
<              $stock_locations = $this->CI->Stock_locations->get_undeleted_all()->result_array();
<              $location_name = $stock_locations[0]['location_id'];
<              $this->set_sale_location($location_name);
---
>              $location_id = $this->CI->Stock_location->get_default_location_id();
>              $this->set_sale_location($location_id);
190a235,249
>     function set_giftcard_remainder($value)
>     {
>     	$this->CI->session->set_userdata('giftcard_remainder',$value);
>     }
>     
>     function get_giftcard_remainder()
>     {
>     	return $this->CI->session->userdata('giftcard_remainder');
>     }
>     
>     function clear_giftcard_remainder()
>     {
>     	$this->CI->session->unset_userdata('giftcard_remainder');
>     }
>     
199c258
< 		//Alain Serialization and Description
---
> 		// Serialization and Description
213c272
< 
---
>         $item_info=$this->CI->Item->get_info($item_id,$item_location);
227a287,290
>                 if (!$item_info->is_serialized)
>                 {
>                     $quantity += $items[$updatekey]['quantity'];
>                 }
232d294
< 		$item_info=$this->CI->Item->get_info($item_id);
233a296,301
> 		$price=$price!=null?$price:$item_info->unit_price;
> 		$total=$this->get_item_total($quantity, $price, $discount);
>         $discounted_total=$this->get_item_total($quantity, $price, $discount, TRUE);
> 		//Item already exists and is not serialized, add to quantity
> 		if(!$itemalreadyinsale || $item_info->is_serialized)
> 		{
238c306
< 			'stock_name'=>$this->CI->Stock_locations->get_location_name($item_location),
---
>                     'stock_name'=>$this->CI->Stock_location->get_location_name($item_location),
248,249c316,319
< 			'in_stock'=>$this->CI->Item_quantities->get_item_quantity($item_id, $item_location)->quantity,
< 			'price'=>$price!=null ? $price: $item_info->unit_price
---
>                     'in_stock'=>$this->CI->Item_quantity->get_item_quantity($item_id, $item_location)->quantity,
>                     'price'=>$price,
>                     'total'=>$total,
>                     'discounted_total'=>$discounted_total,
252,256c322,323
< 
< 		//Item already exists and is not serialized, add to quantity
< 		if($itemalreadyinsale && ($item_info->is_serialized ==0) )
< 		{
< 			$items[$updatekey]['quantity']+=$quantity;
---
> 			//add to existing array
> 			$items+=$item;
260,261c327,330
< 			//add to existing array
< 			$items+=$item;
---
>             $line = &$items[$updatekey];
>             $line['quantity'] = $quantity;
>             $line['total'] = $total;
>             $line['discounted_total'] = $discounted_total;
277c346
< 		
---
> 		$item_info = $this->CI->Item->get_info($item_id);
279,280c348,349
< 		$item_quantity = $this->CI->Item_quantities->get_item_quantity($item_id,$item_location)->quantity; 
< 		$quanity_added = $this->get_quantity_already_added($item_id,$item_location);
---
> 		$item_quantity = $this->CI->Item_quantity->get_item_quantity($item_id,$item_location)->quantity;
> 		$quantity_added = $this->get_quantity_already_added($item_id,$item_location);
282c351
< 		if ($item_quantity - $quanity_added < 0)
---
> 		if ($item_quantity - $quantity_added < 0)
284c353,357
< 			return true;
---
> 			return $this->CI->lang->line('sales_quantity_less_than_zero');
> 		}
> 		else if ($item_quantity - $quantity_added < $item_info->reorder_level)
> 		{
> 			return $this->CI->lang->line('sales_quantity_less_than_reorder_level');
325,329c397,404
< 			$items[$line]['description'] = $description;
< 			$items[$line]['serialnumber'] = $serialnumber;
< 			$items[$line]['quantity'] = $quantity;
< 			$items[$line]['discount'] = $discount;
< 			$items[$line]['price'] = $price;
---
> 			$line = &$items[$line];
> 			$line['description'] = $description;
> 			$line['serialnumber'] = $serialnumber;
> 			$line['quantity'] = $quantity;
> 			$line['discount'] = $discount;
> 			$line['price'] = $price;
> 			$line['total'] = $this->get_item_total($quantity, $price, $discount);
> 			$line['discounted_total'] = $this->get_item_total($quantity, $price, $discount, TRUE);
336c411
< 	function is_valid_receipt($receipt_sale_id)
---
> 	function is_valid_receipt(&$receipt_sale_id)
341c416
< 		if(count($pieces)==2)
---
> 		if(count($pieces)==2 && strtolower($pieces[0]) == 'pos')
345c420,428
< 
---
> 		else 
> 		{
> 			$sale_info = $this->CI->Sale->get_sale_by_invoice_number($receipt_sale_id);
> 			if ($sale_info->num_rows() > 0)
> 			{
> 				$receipt_sale_id = 'POS ' . $sale_info->row()->sale_id;
> 				return true;
> 			}
> 		}
420,421c502,505
< 		$this->set_customer($this->CI->Sale_suspended->get_customer($sale_id)->person_id);
< 		$this->set_comment($this->CI->Sale_suspended->get_comment($sale_id));
---
> 		$suspended_sale_info=$this->CI->Sale_suspended->get_info($sale_id)->row();
> 		$this->set_customer($suspended_sale_info->person_id);
> 		$this->set_comment($suspended_sale_info->comment);
> 		$this->set_invoice_number($suspended_sale_info->invoice_number);
451a536,537
> 		$this->clear_invoice_number();
> 		$this->clear_giftcard_remainder();
456c542
< 	function get_taxes()
---
> 	function is_customer_taxable()
462c548,554
< 		if (!$customer->taxable and $customer_id!=-1)
---
> 		return $customer->taxable or $customer_id==-1;
> 	}
> 
> 	function get_taxes()
> 	{
> 		//Do not charge sales tax if we have a customer that is not taxable
> 		if (!$this->is_customer_taxable())
475,476c567,568
< 				$tax_amount=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100)*(($tax['percent'])/100);
< 
---
> 				$tax_percentage = $tax['percent'];
> 				$tax_amount = $this->get_item_tax($item['quantity'], $item['price'], $item['discount'], $tax_percentage);
482c574
< 				$taxes[$name] += $tax_amount;
---
> 				$taxes[$name] = bcadd($taxes[$name], $tax_amount, PRECISION);
489c581
< 	function get_subtotal()
---
> 	function get_discount()
491,492c583,584
< 		$subtotal = 0;
< 		foreach($this->get_cart() as $item)
---
> 		$discount = 0;
> 		foreach($this->get_cart() as $line=>$item)
494c586,590
< 		    $subtotal+=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100);
---
> 			if ($item['discount'] > 0)
> 			{
> 				$item_discount = $this->get_item_discount($item['quantity'], $item['price'], $item['discount']);
> 				$discount = bcadd($discount, $item_discount, PRECISION); 
> 			}
495a592,597
> 		return $discount;
> 	}
> 
> 	function get_subtotal($include_discount=FALSE, $exclude_tax=FALSE)
> 	{
> 		$subtotal = $this->calculate_subtotal($include_discount, $exclude_tax);		
499c601,637
< 	function get_total()
---
> 	function get_item_total_tax_exclusive($item_id, $quantity, $price, $discount_percentage, $include_discount=FALSE) 
> 	{
> 		$tax_info = $this->CI->Item_taxes->get_info($item_id);
> 		$item_price = $this->get_item_total($quantity, $price, $discount_percentage, $include_discount);
> 		// only additive tax here
> 		foreach($tax_info as $tax)
> 		{
> 			$tax_percentage = $tax['percent'];
> 			$item_price = bcsub($item_price, $this->get_item_tax($quantity, $price, $discount_percentage, $tax_percentage), PRECISION);
> 		}
> 		
> 		return $item_price;
> 	}
> 	
> 	function get_item_total($quantity, $price, $discount_percentage, $include_discount=FALSE)  
> 	{
> 		$total = bcmul($quantity, $price, PRECISION);
> 		if ($include_discount)
> 		{
> 			$discount_amount = $this->get_item_discount($quantity, $price, $discount_percentage);
> 			return bcsub($total, $discount_amount, PRECISION);
> 		}
> 		return $total;
> 	}
> 	
> 	function get_item_discount($quantity, $price, $discount_percentage)
> 	{
> 		$total = bcmul($quantity, $price, PRECISION);
> 		$discount_fraction = bcdiv($discount_percentage, 100, PRECISION);
> 		return bcmul($total, $discount_fraction, PRECISION);
> 	}
> 	
> 	function get_item_tax($quantity, $price, $discount_percentage, $tax_percentage) 
> 	{
> 		$price = $this->get_item_total($quantity, $price, $discount_percentage, TRUE);
> 
> 		if ($this->CI->config->config['tax_included'])
501c639,650
< 		$total = 0;
---
> 			$tax_fraction = bcadd(100, $tax_percentage, PRECISION);
> 			$tax_fraction = bcdiv($tax_fraction, 100, PRECISION);
> 			$price_tax_excl = bcdiv($price, $tax_fraction, PRECISION);
> 			return bcsub($price, $price_tax_excl, PRECISION);
> 		}
> 		$tax_fraction = bcdiv($tax_percentage, 100, PRECISION);
> 		return bcmul($price, $tax_fraction, PRECISION);
> 	}
> 
> 	function calculate_subtotal($include_discount=FALSE, $exclude_tax=FALSE) 
> 	{
> 		$subtotal = 0;
504c653,662
<             $total+=($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100);
---
> 			if ($exclude_tax && $this->CI->config->config['tax_included'])
> 			{
> 				$subtotal = bcadd($subtotal, $this->get_item_total_tax_exclusive($item['item_id'], $item['quantity'], $item['price'], $item['discount'], $include_discount), PRECISION);
> 			}
> 			else 
> 			{
> 				$subtotal = bcadd($subtotal, $this->get_item_total($item['quantity'], $item['price'], $item['discount'], $include_discount), PRECISION);
> 			}
> 		}
> 		return $subtotal;
506a665,669
> 	function get_total()
> 	{
> 		$total = $this->calculate_subtotal(TRUE);		
> 		if (!$this->CI->config->config['tax_included'])
> 		{
509c672,673
< 			$total+=$tax;
---
> 				$total = bcadd($total, $tax, PRECISION);
> 			}
diff -rBwi --ignore-file-name-case pos-prod/application/logs/index.html opensourcepos/application/logs/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/models/customer.php opensourcepos/application/models/Customer.php
16a17,35
> 	function account_number_exists($account_number,$person_id='')
> 	{
> 		$this->db->from('customers');
> 		$this->db->where('account_number', $account_number);
> 		if (!empty($person_id))
> 		{
> 			$this->db->where('person_id !=', $person_id);
> 		}
> 		$query=$this->db->get();
> 		return ($query->num_rows()==1);
> 	}	
> 	
> 	function get_total_rows()
> 	{
> 		$this->db->from('customers');
> 		$this->db->where('deleted',0);
> 		return $this->db->count_all_results();
> 	}
> 	
20c39
< 	function get_all($limit=10000, $offset=0)
---
> 	function get_all($rows = 0, $limit_from = 0)
26,28c45,46
< 		$this->db->limit($limit);
< 		$this->db->offset($offset);
< 		return $this->db->get();		
---
> 		if ($rows > 0) {
> 			$this->db->limit($rows, $limit_from);
30,35c48
< 	
< 	function count_all()
< 	{
< 		$this->db->from('customers');
< 		$this->db->where('deleted',0);
< 		return $this->db->count_all_results();
---
> 		return $this->db->get();		
85c98
< 	function save(&$person_data, &$customer_data,$customer_id=false)
---
> 	function save_customer(&$person_data, &$customer_data,$customer_id=false)
225a239,252
> 	
> 	function get_found_rows($search)
> 	{
> 		$this->db->from('customers');
> 		$this->db->join('people','customers.person_id=people.person_id');
> 		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		last_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		email LIKE '%".$this->db->escape_like_str($search)."%' or
> 		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or
> 		account_number LIKE '%".$this->db->escape_like_str($search)."%' or
> 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
> 		return $this->db->get()->num_rows();
> 	}
> 	
229c256
< 	function search($search)
---
> 	function search($search, $rows = 0, $limit_from = 0)
240c267,269
< 		
---
> 		if ($rows > 0) {
> 			$this->db->limit($rows, $limit_from);
> 		}
diff -rBwi --ignore-file-name-case pos-prod/application/models/employee.php opensourcepos/application/models/Employee.php
16a17,22
> 	function get_total_rows()
> 	{
> 		$this->db->from('employees');
> 		$this->db->where('deleted',0);
> 		return $this->db->count_all_results();
> 	}
31,37d36
< 	function count_all()
< 	{
< 		$this->db->from('employees');
< 		$this->db->where('deleted',0);
< 		return $this->db->count_all_results();
< 	}
< 	
85c84
< 	function save(&$person_data, &$employee_data,&$permission_data,$employee_id=false)
---
> 	function save_employee(&$person_data, &$employee_data,&$grants_data,$employee_id=false)
108,109c107,108
< 				//First lets clear out any permissions the employee currently has.
< 				$success=$this->db->delete('permissions', array('person_id' => $employee_id));
---
> 				//First lets clear out any grants the employee currently has.
> 				$success=$this->db->delete('grants', array('person_id' => $employee_id));
111c110
< 				//Now insert the new permissions
---
> 				//Now insert the new grants
114c113
< 					foreach($permission_data as $allowed_module)
---
> 					foreach($grants_data as $permission_id)
116c115
< 						$success = $this->db->insert('permissions',
---
> 						$success = $this->db->insert('grants',
118c117
< 						'module_id'=>$allowed_module,
---
> 						'permission_id'=>$permission_id,
145c144
< 		if($this->db->delete('permissions', array('person_id' => $employee_id)))
---
> 		if($this->db->delete('grants', array('person_id' => $employee_id)))
170c169
< 		if ($this->db->delete('permissions'))
---
> 		if ($this->db->delete('grants'))
242a242,254
> 	function get_found_rows($search)
> 	{
> 		$this->db->from('employees');
> 		$this->db->join('people','employees.person_id=people.person_id');
> 		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		last_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		email LIKE '%".$this->db->escape_like_str($search)."%' or
> 		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or
> 		username LIKE '%".$this->db->escape_like_str($search)."%' or
> 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
> 		return $this->db->get()->num_rows();
> 	}
> 	
246c258
< 	function search($search)
---
> 	function search($search, $rows = 0, $limit_from = 0)
257c269,271
< 		
---
> 		if ($rows > 0) {
> 			$this->db->limit($rows, $limit_from);
> 		}
307c321
< 	Determins whether the employee specified employee has access the specific module.
---
> 	 * Determines whether the employee has access to at least one submodule
309c323,348
< 	function has_permission($module_id,$person_id)
---
> 	function has_module_grant($permission_id,$person_id)
> 	{
> 		$this->db->from('grants');
> 		$this->db->like('permission_id', $permission_id, 'after');
> 		$this->db->where('person_id',$person_id);
> 		$result = $this->db->get();
> 		$result_count = $result->num_rows();
> 		if ($result_count != 1)
> 		{
> 			return $result_count != 0;
> 		}
> 		return $this->has_subpermissions($permission_id);
> 	}
> 	
> 	function has_subpermissions($permission_id)
> 	{
> 		$this->db->from('permissions');
> 		$this->db->like('permission_id', $permission_id.'_', 'after');
> 		$result = $this->db->get();
> 		return $result->num_rows() == 0;
> 	}
> 	
> 	/*
> 	Determines whether the employee specified employee has access the specific module.
> 	*/
> 	function has_grant($permission_id,$person_id)
312c351
< 		if($module_id==null)
---
> 		if($permission_id==null)
317,319c356,358
< 		$query = $this->db->get_where('permissions', array('person_id' => $person_id,'module_id'=>$module_id), 1);
< 		return $query->num_rows() == 1;
< 		
---
> 		$query = $this->db->get_where('grants', array('person_id'=>$person_id,'permission_id'=>$permission_id), 1);
> 		return ($query->num_rows() == 1); 
> 	}
321c360,364
< 		return false;
---
> 	function get_employee_grants($person_id)
> 	{
> 		$this->db->from('grants');
> 		$this->db->where('person_id',$person_id);
> 		return $this->db->get()->result_array();
diff -rBwi --ignore-file-name-case pos-prod/application/models/giftcard.php opensourcepos/application/models/Giftcard.php
12d11
< 		$query = $this->db->get();
14c13,26
< 		return ($query->num_rows()==1);
---
> 		return ($this->db->get()->num_rows()==1);
> 	}
> 	
> 	function get_max_number()
> 	{
> 		$this->db->select_max('giftcard_number');
> 		$query = $this->db->get('giftcards');
> 
> 		return $query->row();
> 	}
> 	
> 	function get_total_rows()
> 	{
> 		return $this->db->count_all('giftcards');
20c32
< 	function get_all($limit=10000, $offset=0)
---
> 	function get_all($rows=0, $limit_from=0)
23c35
< 		$this->db->join('people','people.person_id=giftcards.person_id');//GARRISON ADDED 4/25/2013
---
> 		$this->db->join('people', 'people.person_id=giftcards.person_id', 'left');
25,27c37,43
< 		$this->db->order_by("giftcard_number", "asc");
< 		$this->db->limit($limit);
< 		$this->db->offset($offset);
---
> 		$this->db->order_by('giftcard_number');
> 
> 		if ($rows > 0)
> 		{
> 			$this->db->limit($rows, $limit_from);
> 		}
> 
43a61
> 		$this->db->join('people', 'people.person_id=giftcards.person_id', 'left');
97c115,116
< 		$this->db->order_by("giftcard_number", "asc");
---
> 		$this->db->order_by('giftcard_number', 'asc');
> 
157c182
< 		$this->db->order_by("giftcard_number", "asc");
---
> 		$this->db->order_by('giftcard_number', 'asc');
165d189
< /** GARRISON MODIFIED 4/24/2013 **/
167,172c191,196
< 		$this->db->join('people','customers.person_id=people.person_id');
< 		$this->db->like("first_name",$this->db->escape_like_str($search));
< 		$this->db->or_like("last_name",$this->db->escape_like_str($search)); 
< 		$this->db->or_like("CONCAT(`first_name`,' ',`last_name`)",$this->db->escape_like_str($search));
< 		$this->db->where("deleted","0");
< 		$this->db->order_by("last_name", "asc");
---
> 		$this->db->join('people', 'customers.person_id=people.person_id', 'left');
> 		$this->db->like('first_name', $this->db->escape_like_str($search));
> 		$this->db->or_like('last_name', $this->db->escape_like_str($search)); 
> 		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
> 		$this->db->where('deleted', 0);
> 		$this->db->order_by('last_name', 'asc');
179d202
< /** END GARRISON MODIFIED **/				
189d212
< 	/** GARRISON ADDED 5/3/2013 **/
202c225
< 		$this->db->or_like("CONCAT(`first_name`,' ',`last_name`)",$this->db->escape_like_str($search));
---
> 		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
221d244
< /** GARRISON MODIFIED 4/24/2013 **/	
225c248
< 	function search($search)
---
> 	function search($search, $rows = 0, $limit_from = 0)
228,235c251,266
< 		$this->db->join('people','giftcards.person_id=people.person_id');
< 		$this->db->like("first_name",$this->db->escape_like_str($search));
< 		$this->db->or_like("last_name",$this->db->escape_like_str($search));
< 		$this->db->or_like("CONCAT(`first_name`,' ',`last_name`)",$this->db->escape_like_str($search));
< 		$this->db->or_like("giftcard_number",$this->db->escape_like_str($search));
< 		$this->db->or_like("giftcards.person_id",$this->db->escape_like_str($search));
< 		$this->db->where('deleted',$this->db->escape('0'));
< 		$this->db->order_by("giftcard_number", "asc");
---
> 		$this->db->join('people', 'giftcards.person_id=people.person_id', 'left');
> 		$this->db->like('first_name', $this->db->escape_like_str($search));
> 		$this->db->or_group_start();
> 		$this->db->or_like('last_name', $this->db->escape_like_str($search));
> 		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
> 		$this->db->or_like('giftcard_number', $this->db->escape_like_str($search));
> 		$this->db->or_like('giftcards.person_id', $this->db->escape_like_str($search));
> 		$this->db->group_end();
> 		$this->db->where('giftcards.deleted', 0);
> 		$this->db->order_by('giftcard_number', 'asc');
> 
> 		if ($rows > 0)
> 		{
> 			$this->db->limit($rows, $limit_from);
> 		}
> 
238a270,284
> 	function get_found_rows($search)
> 	{
> 		$this->db->from('giftcards');
> 		$this->db->join('people', 'giftcards.person_id=people.person_id', 'left');
> 		$this->db->like('first_name', $this->db->escape_like_str($search));
> 		$this->db->or_group_start();
> 		$this->db->or_like('last_name', $this->db->escape_like_str($search));
> 		$this->db->or_like('CONCAT(first_name, " ", last_name)', $this->db->escape_like_str($search));
> 		$this->db->or_like('giftcard_number', $this->db->escape_like_str($search));
> 		$this->db->or_like('giftcards.person_id', $this->db->escape_like_str($search));
> 		$this->db->group_end();
> 		$this->db->where('giftcards.deleted', 0);
> 		return $this->db->get()->num_rows();
> 	}
> 	
241a288
> 		{
242a290
> 		}
diff -rBwi --ignore-file-name-case pos-prod/application/models/index.html opensourcepos/application/models/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/models/item.php opensourcepos/application/models/Item.php
7c7
< 	function exists($item_id)
---
> 	public function exists($item_id)
16,19c16
< 	/*
< 	Returns all the items
< 	*/
< 	function get_all($limit=10000, $offset=0)
---
> 	public function item_number_exists($item_number, $item_id='')
22,26c19,22
< 		$this->db->where('deleted',0);
< 		$this->db->order_by("name", "asc");
< 		$this->db->limit($limit);
< 		$this->db->offset($offset);
< 		return $this->db->get();
---
> 		$this->db->where('item_number', $item_number);
> 		if (!empty($item_id))
> 		{
> 			$this->db->where('item_id !=', $item_id);
27a24
> 		$query=$this->db->get();
29c26,29
< 	function count_all()
---
> 		return ($query->num_rows() == 1);
> 	}
> 	
> 	public function get_total_rows()
36c37,48
< 	function get_all_filtered($is_serialized=0,$no_description,$search_custom,$is_deleted)/**GARRISON MODIFIED 4/21/2013, Parq 131215 **/
---
> 	/*
> 	 Get number of rows
> 	*/
> 	public function get_found_rows($search, $filters)
> 	{
> 		return $this->search($search, $filters)->num_rows();
> 	}
> 
> 	/*
> 	 Perform a search on items
> 	*/
> 	public function search($search, $filters, $rows=0, $limit_from=0)
39c51,99
< 		if ($is_serialized !=0 )
---
> 		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
> 		$this->db->join('inventory', 'inventory.trans_items = items.item_id');
> 
> 		if ($filters['stock_location_id'] > -1)
> 		{
> 			$this->db->join('item_quantities', 'item_quantities.item_id = items.item_id');
> 			$this->db->where('location_id', $filters['stock_location_id']);
> 		}
> 
> 		if (empty($search))
> 		{
> 			$this->db->where('DATE_FORMAT(trans_date, "%Y-%m-%d") BETWEEN ' . $this->db->escape($filters['start_date']) . ' AND ' . $this->db->escape($filters['end_date']));
> 		}
> 		else
> 		{
> 			if ($filters['search_custom'] == FALSE)
> 			{
> 				$this->db->where("(name LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"item_number LIKE '" . $this->db->escape_like_str($search) . "%' OR " .
> 								$this->db->dbprefix('items').".item_id LIKE '" . $this->db->escape_like_str($search) . "%' OR " .
> 								"company_name LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"category LIKE '%" . $this->db->escape_like_str($search) . "%')");
> 			}
> 			else
> 			{
> 				$this->db->where("(custom1 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom2 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom3 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom4 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom5 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom6 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom7 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom8 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom9 LIKE '%" . $this->db->escape_like_str($search) . "%' OR " .
> 								"custom10 LIKE '%" . $this->db->escape_like_str($search) . "%')");
> 			}
> 		}
> 
> 		$this->db->where('items.deleted', $filters['is_deleted']);
> 
> 		if ($filters['empty_upc'] != FALSE)
> 		{
> 			$this->db->where('item_number', null);
> 		}
> 		if ($filters['low_inventory'] != FALSE)
> 		{
> 			$this->db->where('quantity <=', 'reorder_level');
> 		}
> 		if ($filters['is_serialized'] != FALSE)
43c103
< 		if ($no_description!=0 )
---
> 		if ($filters['no_description'] != FALSE)
45c105
< 			$this->db->where('description','');
---
> 			$this->db->where('items.description', '');
47a108,109
> 		// avoid duplicate entry with same name because of inventory reporting multiple changes on the same item in the same date range
> 		$this->db->group_by('items.item_id');
49,51c111,114
< /**GARRISON SECTION ADDED 4/21/2013**/
< /**
< 		if ($search_custom!=0 )
---
> 		// order by name of item
> 		$this->db->order_by('items.name', 'asc');
> 
> 		if ($rows > 0) 
53,62c116
< 			$this->db->like('custom1',$search);
< 			$this->db->or_like('custom2',$search);
< 			$this->db->or_like('custom3',$search);
< 			$this->db->or_like('custom4',$search);
< 			$this->db->or_like('custom5',$search);
< 			$this->db->or_like('custom6',$search);
< 			$this->db->or_like('custom7',$search);
< 			$this->db->or_like('custom8',$search);
< 			$this->db->or_like('custom9',$search);
< 			$this->db->or_like('custom10',$search);
---
> 			$this->db->limit($rows, $limit_from);
64,66c118,125
< **/		
< /* Parq 131215 start*/
< 		if ($is_deleted !=0 )
---
> 
> 		return $this->db->get();
> 	}
> 	
> 	/*
> 	 Returns all the items
> 	*/
> 	public function get_all($stock_location_id=-1, $rows=0, $limit_from=0)
68,70c127,143
< 			$this->db->where('deleted',1);
< 		} else {
< 		$this->db->where('deleted',0);
---
> 		$this->db->from('items');
> 		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
> 
> 		if ($stock_location_id > -1)
> 		{
> 			$this->db->join('item_quantities', 'item_quantities.item_id=items.item_id');
> 			$this->db->where('location_id', $stock_location_id);
> 		}
> 
> 		$this->db->where('items.deleted', 0);
> 		
> 		// order by name of item
> 		$this->db->order_by('items.name', 'asc');
> 
> 		if ($rows > 0)
> 		{
> 			$this->db->limit($rows, $limit_from);
72,73c145
< /* Parq 131215 end*/
< 		$this->db->order_by("name", "asc");
---
> 
80c152
< 	function get_info($item_id)
---
> 	public function get_info($item_id)
81a154,155
> 		$this->db->select('items.*');
> 		$this->db->select('suppliers.company_name');
82a157
> 		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
111c186
< 	function get_item_id($item_number)
---
> 	public function get_item_id($item_number)
113a189
> 		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
115c191
<         $this->db->where('deleted',0); // Parq 131226
---
> 		$this->db->where('items.deleted', 0);
130c206
< 	function get_multiple_info($item_ids)
---
> 	public function get_multiple_info($item_ids)
132a209
> 		$this->db->join('suppliers', 'suppliers.person_id = items.supplier_id', 'left');
134c211,212
< 		$this->db->order_by("item", "asc");
---
> 		$this->db->order_by('item_id', 'asc');
> 
141c219
< 	function save(&$item_data,$item_id=false)
---
> 	public function save(&$item_data, $item_id=false)
160c239
< 	function update_multiple($item_data,$item_ids)
---
> 	public function update_multiple($item_data, $item_ids)
169c249
< 	function delete($item_id)
---
> 	public function delete($item_id)
178c259
< 	function delete_list($item_ids)
---
> 	public function delete_list($item_ids)
187c269
< 	function get_search_suggestions($search,$limit=25)
---
> 	public function get_search_suggestions($search, $limit=25, $search_custom=0, $is_deleted=0)
191,200d272
< 		$this->db->from('items');
< 		$this->db->like('name', $search);
< 		$this->db->where('deleted',0);
< 		$this->db->order_by("name", "asc");
< 		$by_name = $this->db->get();
< 		foreach($by_name->result() as $row)
< 		{
< 			$suggestions[]=$row->name;
< 		}
< 
203c275
< 		$this->db->where('deleted',0);
---
> 		$this->db->where('deleted', $is_deleted);
206c278
< 		$this->db->order_by("category", "asc");
---
> 		$this->db->order_by('category', 'asc');
212a285,312
> 		$this->db->select('company_name');
> 		$this->db->from('suppliers');
> 		$this->db->like('company_name', $search);
> 		// restrict to non deleted companies only if is_deleted if false
> 		if( $is_deleted == 0 )
> 		{
> 			$this->db->where('deleted', $is_deleted);
> 		}
> 		$this->db->distinct();
> 		$this->db->order_by('company_name', 'asc');
> 		$by_company_name = $this->db->get();
> 		foreach($by_company_name->result() as $row)
> 		{
> 			$suggestions[] = $row->company_name;
> 		}
> 		
> 		$this->db->select('name');
> 		$this->db->from('items');
> 		$this->db->like('name', $search);
> 		$this->db->where('deleted', $is_deleted);
> 		$this->db->order_by('name', 'asc');
> 		$by_name = $this->db->get();
> 		foreach($by_name->result() as $row)
> 		{
> 			$suggestions[] = $row->name;
> 		}
> 
> 		$this->db->select('item_number');
215,216c315,316
< 		$this->db->where('deleted',0);
< 		$this->db->order_by("item_number", "asc");
---
> 		$this->db->where('deleted', $is_deleted);
> 		$this->db->order_by('item_number', 'asc');
222c322
< /** GARRISON ADDED 4/21/2013 **/
---
> 
223a324
> 		$this->db->select('name, description');
226,227c327,328
< 		$this->db->where('deleted',0);
< 		$this->db->order_by("description", "asc");
---
> 		$this->db->where('deleted', $is_deleted);
> 		$this->db->order_by('description', 'asc');
230a332,333
> 			if (!in_array($row->name, $suggestions))
> 			{
233c336
< /** END GARRISON ADDED **/
---
> 		}
235d337
< /** GARRISON ADDED 4/22/2013 **/
236a339,340
> 		if ($search_custom != 0)
> 		{
248,249c352
< 		$this->db->where('deleted',0);
< 		$this->db->order_by("name", "asc");
---
> 			$this->db->where('deleted', $is_deleted);
255c358
< /** END GARRISON ADDED **/		
---
> 		}
262d364
< 		return $suggestions;
263a366
> 		return $suggestions;
266c369
< 	function get_item_search_suggestions($search,$limit=25)
---
> 	public function get_item_search_suggestions($search, $limit=25, $search_custom=0, $is_deleted=0)
269a373
> 		$this->db->select('item_id, name');
271c375
< 		$this->db->where('deleted',0);
---
> 		$this->db->where('deleted', $is_deleted);
273c377
< 		$this->db->order_by("name", "asc");
---
> 		$this->db->order_by('name', 'asc');
279a384
> 		$this->db->select('item_id, item_number');
281c386
< 		$this->db->where('deleted',0);
---
> 		$this->db->where('deleted', $is_deleted);
283c388
< 		$this->db->order_by("item_number", "asc");
---
> 		$this->db->order_by('item_number', 'asc');
289c394
< /** GARRISON ADDED 4/21/2013 **/
---
> 
290a396
> 		$this->db->select('item_id, name, description');
292c398
< 		$this->db->where('deleted',0);
---
> 		$this->db->where('deleted', $is_deleted);
294c400
< 		$this->db->order_by("description", "asc");
---
> 		$this->db->order_by('description', 'asc');
298c404,407
< 			$suggestions[]=$row->item_id.'|'.$row->name;
---
> 			$entry = $row->item_id.'|'.$row->name;
> 			if (!in_array($entry, $suggestions))
> 			{
> 				$suggestions[] = $entry;
300,301c409,410
< /** END GARRISON ADDED **/	
< 		/** GARRISON ADDED 4/22/2013 **/		
---
> 		}
> 
303,305c412,415
< 		/*$this->db->from('items');
< 		$this->db->where('deleted',0);
<         $this->db->where('stock_type',$stock_type);
---
> 		if ($search_custom != 0)
> 		{
> 			$this->db->from('items');
> 			$this->db->where('deleted', $is_deleted);
316d425
< 		$this->db->order_by("name", "asc");
321,322c430,431
< 		}*/
< 		/** END GARRISON ADDED **/
---
> 			}
> 		}
332c442
< 	function get_category_suggestions($search)
---
> 	public function get_category_suggestions($search)
340c450
< 		$this->db->order_by("category", "asc");
---
> 		$this->db->order_by('category', 'asc');
350,351c460
< /** GARRISON ADDED 5/18/2013 **/	
< 	function get_location_suggestions($search)
---
> 	public function get_location_suggestions($search)
359c468
< 		$this->db->order_by("location", "asc");
---
> 		$this->db->order_by('location', 'asc');
369c478
< 	function get_custom1_suggestions($search)
---
> 	public function get_custom1_suggestions($search)
377c486
< 		$this->db->order_by("custom1", "asc");
---
> 		$this->db->order_by('custom1', 'asc');
387c496
< 	function get_custom2_suggestions($search)
---
> 	public function get_custom2_suggestions($search)
395c504
< 		$this->db->order_by("custom2", "asc");
---
> 		$this->db->order_by('custom2', 'asc');
405c514
< 	function get_custom3_suggestions($search)
---
> 	public function get_custom3_suggestions($search)
413c522
< 		$this->db->order_by("custom3", "asc");
---
> 		$this->db->order_by('custom3', 'asc');
423c532
< 	function get_custom4_suggestions($search)
---
> 	public function get_custom4_suggestions($search)
431c540
< 		$this->db->order_by("custom4", "asc");
---
> 		$this->db->order_by('custom4', 'asc');
441c550
< 	function get_custom5_suggestions($search)
---
> 	public function get_custom5_suggestions($search)
449c558
< 		$this->db->order_by("custom5", "asc");
---
> 		$this->db->order_by('custom5', 'asc');
459c568
< 	function get_custom6_suggestions($search)
---
> 	public function get_custom6_suggestions($search)
467c576
< 		$this->db->order_by("custom6", "asc");
---
> 		$this->db->order_by('custom6', 'asc');
477c586
< 	function get_custom7_suggestions($search)
---
> 	public function get_custom7_suggestions($search)
485c594
< 		$this->db->order_by("custom7", "asc");
---
> 		$this->db->order_by('custom7', 'asc');
495c604
< 	function get_custom8_suggestions($search)
---
> 	public function get_custom8_suggestions($search)
503c612
< 		$this->db->order_by("custom8", "asc");
---
> 		$this->db->order_by('custom8', 'asc');
513c622
< 	function get_custom9_suggestions($search)
---
> 	public function get_custom9_suggestions($search)
521c630
< 		$this->db->order_by("custom9", "asc");
---
> 		$this->db->order_by('custom9', 'asc');
531c640
< 	function get_custom10_suggestions($search)
---
> 	public function get_custom10_suggestions($search)
539c648
< 		$this->db->order_by("custom10", "asc");
---
> 		$this->db->order_by('custom10', 'asc');
548,573d656
< /** END GARRISON ADDED **/	
< 	/*
< 	Preform a search on items
< 	*/
< 	function search($search)
< 	{
< 		$this->db->from('items');
< 		$this->db->where("(
< 				name LIKE '%".$this->db->escape_like_str($search)."%' or 
< 				item_number LIKE '%".$this->db->escape_like_str($search)."%' or 
< 				description LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/21/2013**/
< 				custom1 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom2 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom3 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom4 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom5 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom6 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom7 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom8 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom9 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				custom10 LIKE '%".$this->db->escape_like_str($search)."%' or/**GARRISON ADDED 4/22/2013**/
< 				category LIKE '%".$this->db->escape_like_str($search)."%') and 
< 				deleted=0");
< 		$this->db->order_by("name", "asc");
< 		return $this->db->get();	
< 	}
575c658
< 	function get_categories()
---
> 	public function get_categories()
581c664
< 		$this->db->order_by("category", "asc");
---
> 		$this->db->order_by('category', 'asc');
586c669,681
<     function is_sale_store_item_exist($item_number)
---
> 	/*
> 	 * changes the cost price of a given item
> 	 * calculates the average price between received items and items on stock
> 	 * $item_id : the item which price should be changed
> 	 * $items_received : the amount of new items received
> 	 * $new_price : the cost-price for the newly received items
> 	 * $old_price (optional) : the current-cost-price
> 	 * 
> 	 * used in receiving-process to update cost-price if changed
> 	 * caution: must be used there before item_quantities gets updated, otherwise average price is wrong!
> 	 * 
> 	 */
> 	public function change_cost_price($item_id, $items_received, $new_price, $old_price = null)
588,594c683,686
<         $this->db->from('items');
<         $this->db->where('item_number',$item_number);
<         $this->db->where('stock_type','sale_stock');
<         $this->db->where('deleted',0);
< 
<         $query = $this->db->get();
<         return ($query->num_rows()==1);
---
> 		if($old_price === null)
> 		{
> 			$item_info = $this->get_info($item['item_id']);
> 			$old_price = $item_info->cost_price;
597,602c689,694
<     function is_warehouse_item_exist($item_number)
<     {
<         $this->db->from('items');
<         $this->db->where('item_number',$item_number);
<         $this->db->where('stock_type','warehouse');
<         $this->db->where('deleted',0);
---
> 		$this->db->from('item_quantities');
> 		$this->db->select_sum('quantity');
>         $this->db->where('item_id', $item_id);
> 		$this->db->join('stock_locations', 'stock_locations.location_id=item_quantities.location_id');
>         $this->db->where('stock_locations.deleted', 0);
> 		$old_total_quantity = $this->db->get()->row()->quantity;
604,605c696,701
<         $query = $this->db->get();
<         return ($query->num_rows()==1);
---
> 		$total_quantity = $old_total_quantity + $items_received;
> 		$average_price = bcdiv(bcadd(bcmul($items_received, $new_price), bcmul($old_total_quantity, $old_price)), $total_quantity);
> 
> 		$data = array('cost_price' => $average_price);
> 		
> 		return $this->save($data, $item_id);
diff -rBwi --ignore-file-name-case pos-prod/application/models/item_kit.php opensourcepos/application/models/Item_kit.php
11d10
< 		$query = $this->db->get();
13c12
< 		return ($query->num_rows()==1);
---
> 		return ($this->db->get()->num_rows()==1);
19c18
< 	function get_all($limit=10000, $offset=0)
---
> 	function get_all($rows=0, $limit_from=0)
22,24c21,27
< 		$this->db->order_by("name", "asc");
< 		$this->db->limit($limit);
< 		$this->db->offset($offset);
---
> 		$this->db->order_by('name', 'asc');
> 
> 		if ($rows > 0)
> 		{
> 			$this->db->limit($rows, $limit_from);
> 		}
> 
28c31
< 	function count_all()
---
> 	function get_total_rows()
72c76,77
< 		$this->db->order_by("name", "asc");
---
> 		$this->db->order_by('name', 'asc');
> 
119a129,144
> 
> 		//KIT #
> 		if (stripos($search, 'KIT ') !== false)
> 		{
> 			$this->db->like('item_kit_id', str_ireplace('KIT ', '', $search));
> 			
> 			$this->db->order_by('item_kit_id', 'asc');
> 			$by_name = $this->db->get();
> 	
> 			foreach($by_name->result() as $row)
> 			{
> 				$suggestions[] = 'KIT ' . $row->item_kit_id;
> 			}			
> 		}
> 		else
> 		{
121c146,147
< 		$this->db->order_by("name", "asc");
---
> 			
> 			$this->db->order_by('name', 'asc');
126a154
> 		}
133d160
< 		return $suggestions;
134a162
> 		return $suggestions;
143c171
< 		$this->db->order_by("name", "asc");
---
> 		$this->db->order_by('name', 'asc');
146a176
> 			// do not touch the '|' otherwise the sale search will not fetch the kit
155d184
< 		return $suggestions;
156a186
> 		return $suggestions;
160c190
< 	Preform a search on items
---
> 	Perform a search on items
162c192
< 	function search($search)
---
> 	function search($search, $rows=0, $limit_from=0)
165,167c195,210
< 		$this->db->where("name LIKE '%".$this->db->escape_like_str($search)."%' or 
< 		description LIKE '%".$this->db->escape_like_str($search)."%'");
< 		$this->db->order_by("name", "asc");
---
> 		$this->db->like('name', $search);
> 		$this->db->or_like('description', $search);
> 		
> 		//KIT #
> 		if (stripos($search, 'KIT ') !== false)
> 		{
> 			$this->db->or_like('item_kit_id', str_ireplace('KIT ', '', $search));
> 		}
> 
> 		$this->db->order_by('name', 'asc');
> 
> 		if ($rows > 0)
> 		{
> 			$this->db->limit($rows, $limit_from);
> 		}
> 
168a212,226
> 	}
> 	
> 	function get_found_rows($search)
> 	{
> 		$this->db->from('item_kits');
> 		$this->db->like('name', $search);
> 		$this->db->or_like('description', $search);
> 		
> 		//KIT #
> 		if (stripos($search, 'KIT ') !== false)
> 		{
> 			$this->db->or_like('item_kit_id', str_ireplace('KIT ', '', $search));
> 		}
> 
> 		return $this->db->get()->num_rows();
Only in pos-prod/application/models: item_quantities.php
Only in opensourcepos/application/models: Item_quantity.php
diff -rBwi --ignore-file-name-case pos-prod/application/models/item_taxes.php opensourcepos/application/models/Item_taxes.php
24c24
< 		
---
> 		$result = TRUE;
28c28
< 			$this->db->insert('items_taxes',$row);		
---
> 			$result &= $this->db->insert('items_taxes',$row);		
32c32
< 		return true;
---
> 		return $result;
diff -rBwi --ignore-file-name-case pos-prod/application/models/module.php opensourcepos/application/models/Module.php
33a34,48
> 	function get_all_permissions()
> 	{
> 		$this->db->from('permissions');
> 		return $this->db->get();
> 	}
> 	
> 	function get_all_subpermissions()
> 	{
> 		$this->db->from('permissions');
> 		$this->db->join('modules', 'modules.module_id=permissions.module_id');
> 		// can't quote the parameters correctly when using different operators..
> 		$this->db->where($this->db->dbprefix('modules').'.module_id!=', 'permission_id', FALSE);
> 		return $this->db->get();
> 	}
> 	
44,45c59,61
< 		$this->db->join('permissions','permissions.module_id=modules.module_id');
< 		$this->db->where("permissions.person_id",$person_id);
---
> 		$this->db->join('permissions','permissions.permission_id=modules.module_id');
> 		$this->db->join('grants','permissions.permission_id=grants.permission_id');
> 		$this->db->where("person_id",$person_id);
diff -rBwi --ignore-file-name-case pos-prod/application/models/person.php opensourcepos/application/models/Person.php
87c87
< /** GARRISON ADDED 4/25/2013 IN PROGRESS **/
---
> 
125c126
< 		return true;; 
---
> 		return true;
diff -rBwi --ignore-file-name-case pos-prod/application/models/receiving.php opensourcepos/application/models/Receiving.php
6a7
> 		$this->db->join('people', 'people.person_id = receivings.supplier_id', 'LEFT');
10a12,36
> 	function get_invoice_count()
> 	{
> 		$this->db->from('receivings');
> 		$this->db->where('invoice_number is not null');
> 		return $this->db->count_all_results();
> 	}
> 	
> 	function get_receiving_by_invoice_number($invoice_number)
> 	{
> 		$this->db->from('receivings');
> 		$this->db->where('invoice_number', $invoice_number);
> 		return $this->db->get();
> 	}
> 	
> 	function get_invoice_number_for_year($year='', $start_from = 0)
> 	{
> 		$year = $year == '' ? date('Y') : $year;
> 		$this->db->select("COUNT( 1 ) AS invoice_number_year", FALSE);
> 		$this->db->from('receivings');
> 		$this->db->where("DATE_FORMAT(receiving_time, '%Y' ) = ", $year, FALSE);
> 		$this->db->where("invoice_number IS NOT ", "NULL", FALSE);
> 		$result = $this->db->get()->row_array();
> 		return ($start_from + $result[ 'invoice_number_year' ] + 1);
> 	}
> 	
20c46,54
< 	function save ($items,$supplier_id,$employee_id,$comment,$payment_type,$receiving_id=false)
---
> 	function update($receiving_data, $receiving_id)
> 	{
> 		$this->db->where('receiving_id', $receiving_id);
> 		$success = $this->db->update('receivings',$receiving_data);
> 	
> 		return $success;
> 	}
> 
> 	function save ($items,$supplier_id,$employee_id,$comment,$invoice_number,$payment_type,$receiving_id=false)
29c63,64
< 		'comment'=>$comment
---
> 		'comment'=>$comment,
> 		'invoice_number'=>$invoice_number
43,44c78,79
< 			$receivings_items_data = array
< 			(
---
> 
> 			$receivings_items_data = array(
50a86
> 				'receiving_quantity'=>$item['receiving_quantity'],
57,63c94,105
< 			// Update Receivings -> Items Receiving screen to allow cost field from screen to update item cost in database
< 			$items_data = array
< 			(
< 				'item_id'=>$item['item_id'],
< 				'cost_price'=>$item['price']
< 			);
< 			$this->Item->save($items_data,$item['item_id']);
---
> 
> 			$items_received = $item['receiving_quantity'] != 0 ? $item['quantity'] * $item['receiving_quantity'] : $item['quantity'];
> 
> 			// update cost price, if changed AND is set in config as wanted
> 			if($cur_item_info->cost_price != $item['price']
> 					AND	$this->config->item('receiving_calculate_average_price') == 'receiving_calculate_average_price')
> 			{
> 				$this->Item->change_cost_price($item['item_id'],
> 												$items_received,
> 												$item['price'],
> 												$cur_item_info->cost_price);
> 			}
66,67c108,109
< 			$item_quantity = $this->Item_quantities->get_item_quantity($item['item_id'], $item['item_location']);		
<             $this->Item_quantities->save(array('quantity'=>$item_quantity->quantity + $item['quantity'],
---
> 			$item_quantity = $this->Item_quantity->get_item_quantity($item['item_id'], $item['item_location']);
>             $this->Item_quantity->save(array('quantity'=>$item_quantity->quantity + $items_received,
72d113
< 			$qty_recv = $item['quantity'];
81c122
< 				'trans_inventory'=>$qty_recv
---
> 				'trans_inventory'=>$items_received
91d131
< 			//file_put_contents("./tmp/logfile","TRANS FAILED",FILE_APPEND);
94c134
< //file_put_contents("./tmp/logfile","TRANS SUCCEEDED",FILE_APPEND);
---
> 
97a138,185
> 	function delete_list($receiving_ids,$employee_id,$update_inventory=TRUE)
> 	{
> 		$result = TRUE;
> 		foreach($receiving_ids as $receiving_id) {
> 			$result &= $this->delete($receiving_id,$employee_id,$update_inventory);
> 		}
> 		return $result;
> 	}
> 	
> 	function delete($receiving_id,$employee_id,$update_inventory=TRUE)
> 	{
> 		// start a transaction to assure data integrity
> 		$this->db->trans_start();
> 		if ($update_inventory) {
> 			// defect, not all item deletions will be undone??
> 			// get array with all the items involved in the sale to update the inventory tracking
> 			$items = $this->get_receiving_items($receiving_id)->result_array();
> 			foreach($items as $item) {
> 				// create query to update inventory tracking
> 				$inv_data = array
> 				(
> 						'trans_date'=>date('Y-m-d H:i:s'),
> 						'trans_items'=>$item['item_id'],
> 						'trans_user'=>$employee_id,
> 						'trans_comment'=>'Deleting receiving ' . $receiving_id,
> 						'trans_location'=>$item['item_location'],
> 						'trans_inventory'=>$item['quantity_purchased']*-1
> 	
> 				);
> 				// update inventory
> 				$this->Inventory->insert($inv_data);
> 
> 				// update quantities
> 				$this->Item_quantity->change_quantity($item['item_id'],
> 														$item['item_location'],
> 														$item['quantity_purchased']*-1);
> 			}
> 		}
> 		// delete all items
> 		$this->db->delete('receivings_items', array('receiving_id' => $receiving_id));
> 		// delete sale itself
> 		$this->db->delete('receivings', array('receiving_id' => $receiving_id));
> 		// execute transaction
> 		$this->db->trans_complete();
> 	
> 		return $this->db->trans_status();
> 	}
> 
111a200,211
> 	function invoice_number_exists($invoice_number,$receiving_id='')
> 	{
> 		$this->db->from('receivings');
> 		$this->db->where('invoice_number', $invoice_number);
> 		if (!empty($receiving_id))
> 		{
> 			$this->db->where('receiving_id !=', $receiving_id);
> 		}
> 		$query=$this->db->get();
> 		return ($query->num_rows()==1);
> 	}
> 	
113c213
< 	public function create_receivings_items_temp_table()
---
> 	function create_receivings_items_temp_table()
115,118c215,218
< 		$this->db->query("CREATE TEMPORARY TABLE ".$this->db->dbprefix('receivings_items_temp')."
< 		(SELECT date(receiving_time) as receiving_date, ".$this->db->dbprefix('receivings_items').".receiving_id, comment,payment_type, employee_id, 
< 		".$this->db->dbprefix('items').".item_id, ".$this->db->dbprefix('receivings').".supplier_id, quantity_purchased, item_cost_price, item_unit_price,
< 		discount_percent, (item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as subtotal,
---
> 		$this->db->query("CREATE TEMPORARY TABLE IF NOT EXISTS ".$this->db->dbprefix('receivings_items_temp')."
> 		(SELECT date(receiving_time) as receiving_date, ".$this->db->dbprefix('receivings_items').".receiving_id, comment, item_location, invoice_number, payment_type, employee_id,
> 		".$this->db->dbprefix('items').".item_id, ".$this->db->dbprefix('receivings').".supplier_id, quantity_purchased, ".$this->db->dbprefix('receivings_items').".receiving_quantity,
> 		item_cost_price, item_unit_price, discount_percent, (item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as subtotal,
121c221,222
< 		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) - (item_cost_price*quantity_purchased) as profit
---
> 		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) - (item_cost_price*quantity_purchased) as profit,
> 		(item_cost_price*quantity_purchased) as cost
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/detailed_receivings.php opensourcepos/application/models/reports/Detailed_receivings.php
12,13c12,13
< 		return array('summary' => array($this->lang->line('reports_receiving_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_received'), $this->lang->line('reports_received_by'), $this->lang->line('reports_supplied_by'), $this->lang->line('reports_total'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
< 					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_total'), $this->lang->line('reports_discount'))
---
> 		return array('summary' => array($this->lang->line('reports_receiving_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_received_by'), $this->lang->line('reports_supplied_by'), $this->lang->line('reports_total'), $this->lang->line('reports_payment_type'), $this->lang->line('recvs_invoice_number'), $this->lang->line('reports_comments')),
> 					'details' => array($this->lang->line('reports_item_number'), $this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_count'), $this->lang->line('reports_total'), $this->lang->line('reports_discount'))
16a17,27
> 	public function getDataByReceivingId($receiving_id)
> 	{
> 		$this->db->select('receiving_id, DATE_FORMAT(receiving_date, "%d-%m-%Y") AS receiving_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name, " ", employee.last_name) as employee_name, suppliers.company_name as supplier_name, sum(subtotal) as subtotal, sum(total) as total, sum(profit) as profit, payment_type, comment, invoice_number', false);
> 		$this->db->from('receivings_items_temp');
> 		$this->db->join('people as employee', 'receivings_items_temp.employee_id = employee.person_id');
> 		$this->db->join('suppliers as suppliers', 'receivings_items_temp.supplier_id = suppliers.person_id', 'left');
> 		$this->db->where('receiving_id', $receiving_id);
> 
> 		return $this->db->get()->row_array();
> 	}
> 	
19,20c30
< 		$supplier_id = $inputs['supplier_id'];
< 		$this->db->select('receiving_id, receiving_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(supplier.first_name," ",supplier.last_name) as supplier_name, sum(total) as total, sum(profit) as profit, payment_type, comment', false);
---
> 		$this->db->select('receiving_id, receiving_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(supplier.first_name," ",supplier.last_name) as supplier_name, sum(total) as total, sum(profit) as profit, payment_type, comment, invoice_number', false);
24,25c34,35
< 		$this->db->where('receiving_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
< 		if ($supplier_id != -1)
---
> 		$this->db->where('receiving_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
> 		if ($inputs['location_id'] != 'all')
27c37
< 			$this->db->where('receivings_items_temp.supplier_id = "'.$supplier_id.'"');
---
> 			$this->db->where('item_location', $inputs['location_id']);
50c60,61
< 			$this->db->select('name, category, quantity_purchased, serialnumber,total, discount_percent');
---
> 			$this->db->select('name, item_number, category, quantity_purchased, serialnumber,total, discount_percent, item_location');
> 			$this->db->select($this->db->dbprefix('receivings_items_temp').".receiving_quantity");
62d72
< 		$supplier_id = $inputs['supplier_id'];
65,66c75,77
< 		$this->db->where('receiving_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
< 		if ($supplier_id != -1)
---
> 		$this->db->where('receiving_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
> 
> 		if ($inputs['location_id'] != 'all')
68c79
< 			$this->db->where('receivings_items_temp.supplier_id = "'.$supplier_id.'"');
---
> 			$this->db->where('item_location', $inputs['location_id']);
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/detailed_sales.php opensourcepos/application/models/reports/Detailed_sales.php
12,13c12,13
< 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
< 					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'),$this->lang->line('reports_discount'))
---
> 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
> 					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_discount'))
17c17
< 	public function getDataBySaleId($sale_id, $sale_type)
---
> 	public function getDataBySaleId($sale_id)
19c19
< 		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
---
> 		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name, " ", employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
24,31c24
< 		if ($sale_type)
< 		{
< 			$this->db->where('quantity_purchased > 0');
< 		}
< 		else
< 		{
< 			$this->db->where('quantity_purchased < 0');
< 		}
---
> 
37c30
< 		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
---
> 		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(employee.first_name," ",employee.last_name) as employee_name, CONCAT(customer.first_name," ",customer.last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
41c34,40
< 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
---
> 		$this->db->where('sale_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
> 
> 		if ($inputs['location_id'] != 'all')
> 		{
> 			$this->db->where('item_location', $inputs['location_id']);
> 		}
> 
45d43
<             $this->db->where('sale_type', 'sale_stock');
60c59
< 			$this->db->select('name, category, quantity_purchased, serialnumber, sales_items_temp.description, subtotal,total, tax, profit, discount_percent');
---
> 			$this->db->select('name, category, quantity_purchased, item_location, serialnumber, sales_items_temp.description, subtotal, total, tax, cost, profit, discount_percent');
63c62
< 			$this->db->where('sale_id = '.$value['sale_id']);
---
> 			$this->db->where('sale_id', $value['sale_id']);
72c71
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
74c73,79
< 		$this->db->where('sale_date BETWEEN "'. $inputs['start_date']. '" and "'. $inputs['end_date'].'"');
---
> 		$this->db->where('sale_date BETWEEN '. $this->db->escape($inputs['start_date']). ' and '. $this->db->escape($inputs['end_date']));
> 
> 		if ($inputs['location_id'] != 'all')
> 		{
> 			$this->db->where('item_location', $inputs['location_id']);
> 		}
> 
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/inventory_low.php opensourcepos/application/models/reports/Inventory_low.php
24,25c22
<         $this->db->where('items.deleted = 0');
<         
---
>         $this->db->where('items.deleted', 0);
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/inventory_summary.php opensourcepos/application/models/reports/Inventory_summary.php
12c12,20
< 		return array($this->lang->line('reports_item_name'), $this->lang->line('reports_item_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_reorder_level'),$this->lang->line('reports_stock_location'));
---
> 		return array($this->lang->line('reports_item_name'),
> 					$this->lang->line('reports_item_number'),
> 					$this->lang->line('reports_description'),
> 					$this->lang->line('reports_count'),
> 					$this->lang->line('reports_reorder_level'),
> 					$this->lang->line('reports_stock_location'),
> 					$this->lang->line('reports_cost_price'),
> 					$this->lang->line('reports_unit_price'),
> 					$this->lang->line('reports_sub_total_value'));
20,21c28
<         
< 		$this->db->select('name, item_number, reorder_level, item_quantities.quantity, description,location_name');
---
> 		$this->db->select('name, item_number, reorder_level, item_quantities.quantity, description, location_name, cost_price, unit_price, (cost_price*quantity) as sub_total_value');
23c30,38
< 		$this->db->order_by('items.name');
---
> 		// should be corresponding to values Inventory_summary::getItemCountDropdownArray() returns...
> 		if($inputs['item_count'] == 'zero_and_less')
> 		{
> 			$this->db->where('quantity <=', 0);
> 		}
> 		elseif($inputs['item_count'] == 'more_than_zero')
> 		{
> 			$this->db->where('quantity >', 0);
> 		}
25c40,43
< 		return $this->db->get()->result_array();
---
> 		if($inputs['location_id'] != 'all')
> 		{
> 			$this->db->where('item_quantities.location_id',$inputs['location_id']);
> 		}
26a45,47
> 		$this->db->order_by('name');
> 
> 		return $this->db->get()->result_array();
28a50,55
> 	/**
> 	 * calulcates the total value of the given inventory summary by summing all sub_total_values (see Inventory_summary::getData())
> 	 * 
> 	 * @param array $inputs expects the reports-data-array which Inventory_summary::getData() returns
> 	 * @return array
> 	 */
31c58,76
< 		return array();
---
> 		$return = array('total_inventory_value' => 0);
> 		foreach($inputs as $input)
> 		{
> 			$return['total_inventory_value'] += $input['sub_total_value'];
> 		}
> 		return $return;
> 	}
> 	
> 	/**
> 	 * returns the array for the dropdown-element item-count in the form for the inventory summary-report
> 	 * 
> 	 * @return array
> 	 */
> 	public function getItemCountDropdownArray()
> 	{
> 		return array(
> 					'all' => $this->lang->line('reports_all'),
> 					'zero_and_less' => $this->lang->line('reports_zero_and_less'),
> 					'more_than_zero' => $this->lang->line('reports_more_than_zero'));
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/specific_customer.php opensourcepos/application/models/reports/Specific_customer.php
12,13c12,13
< 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
< 					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'),$this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'),$this->lang->line('reports_discount'))
---
> 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_by'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
> 					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_discount'))
19c19
< 		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name," ",last_name) as employee_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
---
> 		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name, " ", last_name) as employee_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
40c42
< 			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal,total, tax, profit, discount_percent');
---
> 			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal, total, tax, cost, profit, discount_percent');
52c54
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/specific_discount.php opensourcepos/application/models/reports/Specific_discount.php
12,13c12,13
< 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_customer'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/ $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
< 					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/$this->lang->line('reports_discount'))
---
> 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/ $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
> 					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), /*$this->lang->line('reports_profit'),*/ $this->lang->line('reports_discount'))
19c19
< 		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name," ",last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
---
> 		$this->db->select('sale_id, DATE_FORMAT(sale_time, "%d-%m-%Y") AS sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name, " ", last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
42c42
< 			$this->db->select('name, serialnumber, sales_items_temp.description, quantity_purchased, subtotal,total, tax, profit, discount_percent');
---
> 			$this->db->select('name, serialnumber, category, sales_items_temp.description, quantity_purchased, subtotal, total, tax, cost, profit, discount_percent');
54c54
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/specific_employee.php opensourcepos/application/models/reports/Specific_employee.php
12,13c12,13
< 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_items_purchased'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
< 					'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'),$this->lang->line('reports_discount'))
---
> 		return array('summary' => array($this->lang->line('reports_sale_id'), $this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_sold_to'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_payment_type'), $this->lang->line('reports_comments')),
> 					 'details' => array($this->lang->line('reports_name'), $this->lang->line('reports_category'), $this->lang->line('reports_serial_number'), $this->lang->line('reports_description'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'), $this->lang->line('reports_discount'))
19c19
< 		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name," ",last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit, payment_type, comment', false);
---
> 		$this->db->select('sale_id, sale_date, sum(quantity_purchased) as items_purchased, CONCAT(first_name, " ", last_name) as customer_name, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit, payment_type, comment', false);
42c42
< 			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal,total, tax, profit, discount_percent');
---
> 			$this->db->select('name, category, serialnumber, sales_items_temp.description, quantity_purchased, subtotal, total, tax, cost, profit, discount_percent');
54c54
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_categories.php opensourcepos/application/models/reports/Summary_categories.php
12c12
< 		return array($this->lang->line('reports_category'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
---
> 		return array($this->lang->line('reports_category'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
17c17
< 		$this->db->select('category, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('category, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
37c39
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_customers.php opensourcepos/application/models/reports/Summary_customers.php
12c12
< 		return array($this->lang->line('reports_customer'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
---
> 		return array($this->lang->line('reports_customer'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
17c17
< 		$this->db->select('CONCAT(first_name, " ",last_name) as customer, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit', false);
---
> 		$this->db->select('CONCAT(first_name, " ",last_name) as customer, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit', false);
38c40
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_discounts.php opensourcepos/application/models/reports/Summary_discounts.php
35c38
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_employees.php opensourcepos/application/models/reports/Summary_employees.php
12c12
< 		return array($this->lang->line('reports_employee'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
---
> 		return array($this->lang->line('reports_employee'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
17c17
< 		$this->db->select('CONCAT(first_name, " ",last_name) as employee, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit', false);
---
> 		$this->db->select('CONCAT(first_name, " ", last_name) as employee, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit', false);
38c40
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_items.php opensourcepos/application/models/reports/Summary_items.php
12c12
< 		return array($this->lang->line('reports_item'),$this->lang->line('reports_quantity_purchased'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'),$this->lang->line('reports_profit'));
---
> 		return array($this->lang->line('reports_item'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
17c17
< 		$this->db->select('name, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('name, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
37c39
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_payments.php opensourcepos/application/models/reports/Summary_payments.php
12c12
< 		return array($this->lang->line('reports_payment_type'), $this->lang->line('reports_total'));
---
> 		return array($this->lang->line('reports_payment_type'), $this->lang->line('reports_count'), $this->lang->line('reports_total'));
17c17
< 		$this->db->select('sales_payments.payment_type, SUM(payment_amount) as payment_amount', false);
---
> 		$this->db->select('sales_payments.payment_type, count(*) AS count, SUM(payment_amount) AS payment_amount', false);
23c24
<             $this->db->where('quantity_purchased > 0');
---
> 			$this->db->where('payment_amount > 0');
27c28
<             $this->db->where('quantity_purchased < 0');
---
> 			$this->db->where('payment_amount < 0');
30c32,55
< 		return $this->db->get()->result_array();
---
> 		
> 		$payments = $this->db->get()->result_array();
> 		
> 		// consider Gift Card as only one type of payment and do not show "Gift Card: 1, Gift Card: 2, etc." in the total
> 		$gift_card_count = 0;
> 		$gift_card_amount = 0;
> 		foreach($payments as $key=>$payment)
> 		{		
> 			if( strstr($payment['payment_type'], $this->lang->line('sales_giftcard')) != FALSE )
> 			{
> 				$gift_card_count  += $payment['count'];
> 				$gift_card_amount += $payment['payment_amount'];
> 
> 				// remove the "Gift Card: 1", "Gift Card: 2", etc. payment string
> 				unset($payments[$key]);
> 			}
> 		}
> 
> 		if( $gift_card_count > 0 )
> 		{
> 			$payments[] = array('payment_type' => $this->lang->line('sales_giftcard'), 'count' => $gift_card_count, 'payment_amount' => $gift_card_amount);
> 		}
> 		
> 		return $payments;
35c60
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) AS subtotal, sum(total) AS total, sum(tax) AS tax, sum(cost) AS cost, sum(profit) AS profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_sales.php opensourcepos/application/models/reports/Summary_sales.php
12c12
< 		return array($this->lang->line('reports_date'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
---
> 		return array($this->lang->line('reports_date'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
17c17
< 		$this->db->select('sale_date, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit');
---
> 		$this->db->select('sale_date, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
36c38
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_suppliers.php opensourcepos/application/models/reports/Summary_suppliers.php
12c12
< 		return array($this->lang->line('reports_supplier'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_profit'));
---
> 		return array($this->lang->line('reports_supplier'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'), $this->lang->line('reports_cost'), $this->lang->line('reports_profit'));
17c17
< 		$this->db->select('CONCAT(first_name, " ",last_name) as supplier, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax,sum(profit) as profit', false);
---
> 		$this->db->select('CONCAT(company_name, " (", first_name, " ",last_name, ")") as supplier, sum(quantity_purchased) as quantity_purchased, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit', false);
38c40
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/reports/summary_taxes.php opensourcepos/application/models/reports/Summary_taxes.php
12c12
< 		return array($this->lang->line('reports_tax_percent'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'));
---
> 		return array($this->lang->line('reports_tax_percent'), $this->lang->line('reports_count'), $this->lang->line('reports_subtotal'), $this->lang->line('reports_total'), $this->lang->line('reports_tax'));
17,18c17
< 		
< 		$quanitity_cond = '';
---
> 		$quantity_cond = '';
21c20
< 			$quanitity_cond = 'and quantity_purchased > 0';
---
> 			$quantity_cond = 'and quantity_purchased > 0';
25c24,37
< 			$quanitity_cond = 'and quantity_purchased < 0';
---
> 			$quantity_cond = 'and quantity_purchased < 0';
> 		}
> 
> 		if ($this->config->item('tax_included'))
> 		{
> 			$total = "1";
> 			$subtotal = "(100/(100+percent))";
> 			$tax="(1 - (100/(100 +percent)))";
> 		}
> 		else
> 		{
> 			$tax = "(percent/100)";
> 			$total = "(1+(percent/100))";
> 			$subtotal = "1";
28,35c40,44
< 		$query = $this->db->query("SELECT percent, SUM(subtotal) as subtotal, sum(total) as total, sum(tax) as tax 
< 		FROM (SELECT name, CONCAT( percent,  '%' ) AS percent, (
< 		item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100
< 		) AS subtotal, ROUND( (
< 		item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100
< 		) * ( 1 + ( percent /100 ) ) , 2 ) AS total, ROUND( (
< 		item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100
< 		) * ( percent /100 ) , 2 ) AS tax
---
> 		$query = $this->db->query("SELECT percent, count(*) as count, sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax
> 		FROM (SELECT name, CONCAT( percent,  '%' ) AS percent,
> 		ROUND((item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100) * $subtotal, 2) AS subtotal,
> 		ROUND((item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100) * $total, 2) AS total,
> 		ROUND((item_unit_price * quantity_purchased - item_unit_price * quantity_purchased * discount_percent /100) * $tax, 2) AS tax
42c51
< 		WHERE date(sale_time) BETWEEN '".$inputs['start_date']."' and '".$inputs['end_date']."' $quanitity_cond) as temp_taxes
---
> 		WHERE date(sale_time) BETWEEN '".$inputs['start_date']."' and '".$inputs['end_date']."' $quantity_cond) as temp_taxes
49c59
< 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(profit) as profit');
---
> 		$this->db->select('sum(subtotal) as subtotal, sum(total) as total, sum(tax) as tax, sum(cost) as cost, sum(profit) as profit');
diff -rBwi --ignore-file-name-case pos-prod/application/models/sale.php opensourcepos/application/models/Sale.php
6,7c6,103
< 		$this->db->select('sales.*', FALSE);
< 		$this->db->select('people.*', FALSE);
---
> 		$this->db->select('first_name, last_name, email, comment, sale_payment_amount AS amount_tendered, payment_type,
> 			invoice_number, sale_time, employee_id, customer_id, comments, sale_id, (sale_payment_amount - total) AS change_due', FALSE);
> 		$this->db->select('DATE_FORMAT( sale_time, "%d-%m-%Y" ) AS sale_date', FALSE);
> 		$this->db->select('CONCAT(first_name," ",  last_name) AS customer_name', FALSE);
> 		$this->db->select('SUM(item_unit_price * quantity_purchased * (1 - discount_percent / 100)) AS amount_due');
> 		$this->db->from('sales_items_temp');
> 		$this->db->join('people', 'people.person_id = sales_items_temp.customer_id', 'left');
> 
> 		$this->db->where('sales_items_temp.sale_id', $sale_id);
> 		$this->db->group_by('sale_id');
> 		$this->db->order_by('sale_time', 'asc');
> 
> 		return $this->db->get();
> 	}
> 	
> 	/*
> 	 Get number of rows for the takings (sales/manage) view
> 	*/
> 	public function get_found_rows($search, $filters)
> 	{
> 		return $this->search($search, $filters)->num_rows();
> 	}
> 
> 	/*
> 	 Get the sales data for the takings (sales/manage) view
> 	*/
> 	public function search($search, $filters, $rows=0, $limit_from=0)
> 	{
> 		$this->db->select('sale_id, sale_date, sale_time, SUM(quantity_purchased) AS items_purchased,
> 						CONCAT(customer.first_name," ",customer.last_name) AS customer_name, 
> 						SUM(subtotal) AS subtotal, SUM(total) AS total, SUM(tax) AS tax, SUM(cost) AS cost, SUM(profit) AS profit,
> 						sale_payment_amount AS amount_tendered, SUM(total) AS amount_due, (sale_payment_amount - SUM(total)) AS change_due, 
> 						payment_type, invoice_number', FALSE);
> 		$this->db->from('sales_items_temp');
> 		$this->db->join('people AS customer', 'sales_items_temp.customer_id = customer.person_id', 'left');
> 
> 		if (empty($search))
> 		{
> 			$this->db->where('sale_date BETWEEN '. $this->db->escape($filters['start_date']). ' AND '. $this->db->escape($filters['end_date']));
> 		}
> 		else
> 		{
> 			if ($filters['is_valid_receipt'] != FALSE)
> 			{
> 				$pieces = explode(' ', $search);
> 				$this->db->where('sales_items_temp.sale_id', $pieces[1]);
> 			}
> 
> 			else
> 			{
> 				$this->db->like('last_name', $search);
> 				$this->db->or_like('first_name', $search);
> 				$this->db->or_like('CONCAT(customer.first_name, " ", last_name)', $search);
> 			}
> 		}
> 
> 		if ($filters['location_id'] != 'all')
> 		{
> 			$this->db->where('item_location', $filters['location_id']);
> 		}
> 
> 		if ($filters['sale_type'] == 'sales')
>         {
>             $this->db->where('quantity_purchased > 0');
>         }
>         elseif ($filters['sale_type'] == 'returns')
>         {
>             $this->db->where('quantity_purchased < 0');
>         }
> 		
> 		if ($filters['only_invoices'] != FALSE)
> 		{
> 			$this->db->where('invoice_number <> ', 'NULL');
> 		}
> 
> 		if ($filters['only_cash'] != FALSE)
> 		{
> 			$this->db->like('payment_type ', $this->lang->line('sales_cash'), 'after');
> 		}
> 		
> 		$this->db->group_by('sale_id');
> 		$this->db->order_by('sale_date', 'asc');
> 		
> 		if ($rows > 0)
> 		{
> 			$this->db->limit($rows, $limit_from);
> 		}
> 
> 		return $this->db->get();
> 	}
> 
> 	/*
> 	 Get the payment summary for the takings (sales/manage) view
> 	*/
> 	public function get_payments_summary($search, $filters)
> 	{
> 		// get payment summary
> 		$this->db->select('payment_type, count(*) AS count, SUM(payment_amount) AS payment_amount', FALSE);
8a105
> 		$this->db->join('sales_payments', 'sales_payments.sale_id=sales.sale_id');
10c107,220
< 		$this->db->where('sale_id',$sale_id);
---
> 
> 		if (empty($search))
> 		{
> 			$this->db->where('DATE(sale_time) BETWEEN '. $this->db->escape($filters['start_date']). ' AND '. $this->db->escape($filters['end_date']));
> 		}
> 		else
> 		{
> 			if ($filters['is_valid_receipt'])
> 			{
> 				$pieces = explode(' ',$search);
> 				$this->db->where('sales.sale_id', $pieces[1]);
> 			}
> 			else
> 			{
> 				$this->db->like('last_name', $search);
> 				$this->db->or_like('first_name', $search);
> 				$this->db->or_like('CONCAT(first_name, " ", last_name)', $search);
> 			}
> 		}
> 
> 		if ($filters['sale_type'] == 'sales')
> 		{
> 			$this->db->where('payment_amount > 0');
> 		}
> 		elseif ($filters['sale_type'] == 'returns')
> 		{
> 			$this->db->where('payment_amount < 0');
> 		}
> 
> 		if ($filters['only_invoices'] != FALSE)
> 		{
> 			$this->db->where('invoice_number <> ', 'NULL');
> 		}
> 		
> 		if ($filters['only_cash'] != FALSE)
> 		{
> 			$this->db->like('payment_type ', $this->lang->line('sales_cash'), 'after');
> 		}
> 
> 		$this->db->group_by('payment_type');
> 
> 		$payments = $this->db->get()->result_array();
> 
> 		// consider Gift Card as only one type of payment and do not show "Gift Card: 1, Gift Card: 2, etc." in the total
> 		$gift_card_count = 0;
> 		$gift_card_amount = 0;
> 		foreach($payments as $key=>$payment)
> 		{
> 			if( strstr($payment['payment_type'], $this->lang->line('sales_giftcard')) != FALSE )
> 			{
> 				$gift_card_count  += $payment['count'];
> 				$gift_card_amount += $payment['payment_amount'];
> 
> 				// remove the "Gift Card: 1", "Gift Card: 2", etc. payment string
> 				unset($payments[$key]);
> 			}
> 		}
> 
> 		if( $gift_card_count > 0 )
> 		{
> 			$payments[] = array('payment_type' => $this->lang->line('sales_giftcard'), 'count' => $gift_card_count, 'payment_amount' => $gift_card_amount);
> 		}
> 
> 		return $payments;
> 	}
> 	
> 	public function get_total_rows()
> 	{
> 		$this->db->from('sales');
> 
> 		return $this->db->count_all_results();
> 	}
> 
> 	public function get_search_suggestions($search, $limit=25)
> 	{
> 		$suggestions = array();
> 
> 		if (!$this->sale_lib->is_valid_receipt($search))
> 		{
> 			$this->db->distinct();
> 			$this->db->select('first_name, last_name');
> 			$this->db->from('sales');
> 			$this->db->join('people', 'people.person_id = sales.customer_id');
> 			$this->db->like('last_name', $search);
> 			$this->db->or_like('first_name', $search);
> 			$this->db->or_like('CONCAT(first_name, " ", last_name)', $search);
> 			$this->db->order_by('last_name', 'asc');
> 
> 			foreach($this->db->get()->result_array() as $result)
> 			{
> 				$suggestions[] = $result[ 'first_name' ].' '.$result[ 'last_name' ];
> 			}
> 		}
> 		else
> 		{
> 			$suggestions[] = $search;
> 		}
> 
> 		return $suggestions;
> 	}
> 
> 	public function get_invoice_count()
> 	{
> 		$this->db->from('sales');
> 		$this->db->where('invoice_number is not null');
> 
> 		return $this->db->count_all_results();
> 	}
> 	
> 	public function get_sale_by_invoice_number($invoice_number)
> 	{
> 		$this->db->from('sales');
> 		$this->db->where('invoice_number', $invoice_number);
> 
14c224,236
< 	function exists($sale_id)
---
> 	public function get_invoice_number_for_year($year = '', $start_from = 0) 
> 	{
> 		$year = $year == '' ? date('Y') : $year;
> 		$this->db->select("COUNT( 1 ) AS invoice_number_year", FALSE);
> 		$this->db->from('sales');
> 		$this->db->where("DATE_FORMAT(sale_time, '%Y' ) = ", $year, FALSE);
> 		$this->db->where("invoice_number IS NOT ", "NULL", FALSE);
> 		$result = $this->db->get()->row_array();
> 
> 		return ($start_from + $result[ 'invoice_number_year']);
> 	}
> 
> 	public function exists($sale_id)
18d239
< 		$query = $this->db->get();
20c241
< 		return ($query->num_rows()==1);
---
> 		return ($this->db->get()->num_rows()==1);
23c244
< 	function update($sale_data, $sale_id)
---
> 	public function update($sale_data, $sale_id)
31c252
< 	function save ($items,$customer_id,$employee_id,$comment,$payments,$sale_id=false)
---
> 	public function save($items, $customer_id, $employee_id, $comment, $invoice_number, $payments, $sale_id=false)
34,39d254
< 			return -1;
< 
< 		//Alain Multiple payments
< 		//Build payment types string
< 		$payment_types='';
< 		foreach($payments as $payment_id=>$payment)
41c256
< 			$payment_types=$payment_types.$payment['payment_type'].': '.to_currency($payment['payment_amount']).'<br />';
---
> 			return -1;
48,49c263,264
< 			'payment_type'=>$payment_types,
< 			'comment'=>$comment
---
> 			'comment'=>$comment,
> 			'invoice_number'=>$invoice_number
51c266
< 		//log_message('error',print_r($sales_data,true));
---
> 
68,69c283
< 			$sales_payments_data = array
< 			(
---
> 			$sales_payments_data = array(
81,82c295
< 			$sales_items_data = array
< 			(
---
> 			$sales_items_data = array(
86,87c299,300
< 				'description'=>$item['description'],
< 				'serialnumber'=>$item['serialnumber'],
---
> 				'description'=>character_limiter($item['description'], 30),
> 				'serialnumber'=>character_limiter($item['serialnumber'], 30),
98,99c311,312
< 			$item_quantity = $this->Item_quantities->get_item_quantity($item['item_id'], $item['item_location']);       
<             $this->Item_quantities->save(array('quantity'=>$item_quantity->quantity - $item['quantity'],
---
> 			$item_quantity = $this->Item_quantity->get_item_quantity($item['item_id'], $item['item_location']);
> 			$this->Item_quantity->save(array('quantity'=>$item_quantity->quantity - $item['quantity'],
103,104d315
< 			
< 			//Ramel Inventory Tracking
118d328
< 			//------------------------------------Ramel
134,146d343
< 			// Update items table if item_number starts with PGS or BBN
< 			if (preg_match('/^(PGS|BBN)/', $item['item_number']) == 1)
< 			{
< 				
< 				$items_data = array
< 				(
< 					'item_id'=>$item['item_id'],
< 					'unit_price'=>$item['price']
< 				);
< 				//file_put_contents("tmp/logfile",var_export($items_data,true),FILE_APPEND);
< 				$this->Item->save($items_data,$item['item_id']);
< 			}
< 
158c355,356
< 	function delete_list($sale_ids, $employee_id,$update_inventory=TRUE) {
---
> 	public function delete_list($sale_ids, $employee_id, $update_inventory=TRUE) 
> 	{
160c358,360
< 		foreach($sale_ids as $sale_id) {
---
> 
> 		foreach($sale_ids as $sale_id)
> 		{
166c367,368
< 	function delete($sale_id,$employee_id,$update_inventory=TRUE) {
---
> 	public function delete($sale_id, $employee_id, $update_inventory=TRUE) 
> 	{
173c375,377
< 		if ($update_inventory) {
---
> 
> 		if ($update_inventory)
> 		{
177c381,382
< 			foreach($items as $item) {
---
> 			foreach($items as $item)
> 			{
184a390
> 					'trans_location'=>$item['item_location'],
189a396,398
> 
> 				// update quantities
> 				$this->Item_quantity->change_quantity($item['item_id'], $item['item_location'], $item['quantity_purchased']);
202c413
< 	function get_sale_items($sale_id)
---
> 	public function get_sale_items($sale_id)
209c421
< 	function get_sale_payments($sale_id)
---
> 	public function get_sale_payments($sale_id)
216c429
< 	function get_customer($sale_id)
---
> 	public function get_customer($sale_id)
222a437,461
> 	public function invoice_number_exists($invoice_number, $sale_id='')
> 	{
> 		$this->db->from('sales');
> 		$this->db->where('invoice_number', $invoice_number);
> 		if (!empty($sale_id))
> 		{
> 			$this->db->where('sale_id !=', $sale_id);
> 		}
> 		
> 		return ($this->db->get()->num_rows()==1);
> 	}
> 	
> 	public function get_giftcard_value( $giftcardNumber )
> 	{
> 		if ( !$this->Giftcard->exists( $this->Giftcard->get_giftcard_id($giftcardNumber) ) )
> 		{
> 			return 0;
> 		}
> 		
> 		$this->db->from('giftcards');
> 		$this->db->where('giftcard_number', $giftcardNumber);
> 
> 		return $this->db->get()->row()->value;
> 	}
> 
226,228c465,479
< 		$this->db->query("DROP TABLE IF EXISTS phppos_sales_items_temp");
< 		$this->db->query("CREATE TEMPORARY TABLE ".$this->db->dbprefix('sales_items_temp')."
< 		(SELECT date(sale_time) as sale_date, sale_time, ".$this->db->dbprefix('sales_items').".sale_id, comment,payments.payment_type, customer_id, employee_id, 
---
> 		if ($this->config->item('tax_included'))
> 		{
> 			$total = "1";
> 			$subtotal = "(1 - (SUM(1 - 100/(100+percent))))";
> 			$tax="(SUM(1 - 100/(100+percent)))";
> 		}
> 		else
> 		{
> 			$tax = "(SUM(percent)/100)";
> 			$total = "(1+(SUM(percent/100)))";
> 			$subtotal = "1";
> 		}
> 
> 		$this->db->query("CREATE TEMPORARY TABLE IF NOT EXISTS ".$this->db->dbprefix('sales_items_temp')."
> 		(SELECT date(sale_time) as sale_date, sale_time, ".$this->db->dbprefix('sales_items').".sale_id, comment, payments.payment_type, payments.sale_payment_amount, item_location, customer_id, employee_id,
230c481
< 		discount_percent, (item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) as subtotal,
---
> 		discount_percent, ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*$subtotal,2) as subtotal,
232,234c483,487
< 		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*(1+(SUM(percent)/100)) as total,
< 		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*(SUM(percent)/100) as tax,
< 		(item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100) - (item_cost_price*quantity_purchased) as profit
---
> 		ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*$total, 2) as total,
> 		ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)*$tax, 2) as tax,
> 		ROUND((item_unit_price*quantity_purchased-item_unit_price*quantity_purchased*discount_percent/100)- (item_cost_price*quantity_purchased), 2) as profit,
> 		(item_cost_price*quantity_purchased) as cost,
> 		invoice_number
239,240c492
< 		GROUP_CONCAT(payment_type SEPARATOR ', ') AS payment_type FROM " .$this->db->dbprefix('sales_payments') . " 
< 		GROUP BY sale_id) AS payments 
---
> 		GROUP_CONCAT(CONCAT(payment_type,' ',payment_amount) SEPARATOR ', ') AS payment_type FROM " . $this->db->dbprefix('sales_payments') . " GROUP BY sale_id) AS payments 
259,268d510
< 	}
< 	
< 	public function get_giftcard_value( $giftcardNumber )
< 	{
< 		if ( !$this->Giftcard->exists( $this->Giftcard->get_giftcard_id($giftcardNumber)))
< 			return 0;
< 		
< 		$this->db->from('giftcards');
< 		$this->db->where('giftcard_number',$giftcardNumber);
< 		return $this->db->get()->row()->value;
Only in pos-prod/application/models: sale.php-
diff -rBwi --ignore-file-name-case pos-prod/application/models/sale_suspended.php opensourcepos/application/models/Sale_suspended.php
14a15,29
> 		$this->db->join('people', 'people.person_id = sales_suspended.customer_id', 'LEFT');
> 		return $this->db->get();
> 	}
> 	
> 	function get_invoice_count()
> 	{
> 		$this->db->from('sales_suspended');
> 		$this->db->where('invoice_number is not null');
> 		return $this->db->count_all_results();
> 	}
> 	
> 	function get_sale_by_invoice_number($invoice_number)
> 	{
> 		$this->db->from('sales_suspended');
> 		$this->db->where('invoice_number', $invoice_number);
35c50
< 	function save ($items,$customer_id,$employee_id,$comment,$payments,$sale_id=false)
---
> 	function save ($items,$customer_id,$employee_id,$comment,$invoice_number,$payments,$sale_id=false)
40,47d54
< 		//Alain Multiple payments
< 		//Build payment types string
< 		$payment_types='';
< 		foreach($payments as $payment_id=>$payment)
< 		{
< 			$payment_types=$payment_types.$payment['payment_type'].': '.to_currency($payment['payment_amount']).'<br />';
< 		}
< 
52,53c59,60
< 			'payment_type'=>$payment_types,
< 			'comment'=>$comment
---
> 			'comment'=>$comment,
> 			'invoice_number'=>$invoice_number
82,83c89,90
< 				'description'=>$item['description'],
< 				'serialnumber'=>$item['serialnumber'],
---
> 				'description'=>character_limiter($item['description'], 30),
> 				'serialnumber'=>character_limiter($item['serialnumber'], 30),
147c154
< 	function get_customer($sale_id)
---
> 	function invoice_number_exists($invoice_number,$sale_id='')
150,151c157,163
< 		$this->db->where('sale_id',$sale_id);
< 		return $this->Customer->get_info($this->db->get()->row()->customer_id);
---
> 		$this->db->where('invoice_number', $invoice_number);
> 		if (!empty($sale_id))
> 		{
> 			$this->db->where('sale_id !=', $sale_id);
> 		}
> 		$query=$this->db->get();
> 		return ($query->num_rows()==1);
Only in opensourcepos/application/models: Stock_location.php
Only in pos-prod/application/models: stock_locations.php
diff -rBwi --ignore-file-name-case pos-prod/application/models/supplier.php opensourcepos/application/models/Supplier.php
16a17,23
> 	function get_total_rows()
> 	{
> 		$this->db->from('suppliers');
> 		$this->db->where('deleted',0);
> 		return $this->db->count_all_results();
> 	}
> 	
20c27
< 	function get_all($limit=10000, $offset=0)
---
> 	function get_all($limit_from = 0, $rows = 0)
25,28c32,35
< 		//$this->db->order_by("last_name", "asc");
< 		$this->db->order_by("first_name", "asc");
< 		$this->db->limit($limit);
< 		$this->db->offset($offset);
---
> 		$this->db->order_by("company_name", "asc");
> 		if ($rows > 0) {
> 			$this->db->limit($rows, $limit_from);
> 		}
86c93
< 	function save(&$person_data, &$supplier_data,$supplier_id=false)
---
> 	function save_supplier(&$person_data, &$supplier_data,$supplier_id=false)
146a154,164
> 		$this->db->from('suppliers');
> 		$this->db->join('people','suppliers.person_id=people.person_id');	
> 		$this->db->where('deleted', 0);
> 		$this->db->distinct();
> 		$this->db->like("agency_name",$search);
> 		$this->db->order_by("agency_name", "asc");		
> 		$by_agency_name = $this->db->get();
> 		foreach($by_agency_name->result() as $row)
> 		{
> 			$suggestions[]=$row->agency_name;		
> 		}
222a241,253
> 		$this->db->where('deleted', 0);
> 		$this->db->distinct();
> 		$this->db->like("agency_name",$search);
> 		$this->db->order_by("agency_name", "asc");		
> 		$by_agency_name = $this->db->get();
> 		foreach($by_agency_name->result() as $row)
> 		{
> 			$suggestions[]=$row->person_id.'|'.$row->agency_name;		
> 		}
> 
> 
> 		$this->db->from('suppliers');
> 		$this->db->join('people','suppliers.person_id=people.person_id');	
240a272,287
> 	
> 	function get_found_rows($search)
> 	{
> 		$this->db->from('suppliers');
> 		$this->db->join('people','suppliers.person_id=people.person_id');
> 		$this->db->where("(first_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		last_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		company_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		agency_name LIKE '%".$this->db->escape_like_str($search)."%' or
> 		email LIKE '%".$this->db->escape_like_str($search)."%' or
> 		phone_number LIKE '%".$this->db->escape_like_str($search)."%' or
> 		account_number LIKE '%".$this->db->escape_like_str($search)."%' or
> 		CONCAT(`first_name`,' ',`last_name`) LIKE '%".$this->db->escape_like_str($search)."%') and deleted=0");
> 		return $this->db->get()->num_rows();
> 	}
> 	
244c291
< 	function search($search)
---
> 	function search($search, $rows = 0, $limit_from = 0)
250a298
> 		agency_name LIKE '%".$this->db->escape_like_str($search)."%' or 
256c304,306
< 		
---
> 		if ($rows > 0) {
> 			$this->db->limit($rows, $limit_from);
> 		}
diff -rBwi --ignore-file-name-case pos-prod/application/third_party/index.html opensourcepos/application/third_party/index.html
0a1
> <!DOCTYPE html>
Only in pos-prod/application/views: barcode.php
diff -rBwi --ignore-file-name-case pos-prod/application/views/barcode_sheet.php opensourcepos/application/views/barcode_sheet.php
1,2c1,2
< <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
<         "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
---
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>         "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
4a6
> 	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
5a8,14
> 	<link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/barcode_font.css" />
> 	<style type="text/css" >
> 		* 
> 		{ 
> 			font-size: 12px;
> 		}
> 	</style>
7,8c16,19
< <body>
< <table width='50%' align='center' cellpadding='20'>
---
> 
> <body class=<?php  echo "font_".$this->barcode_lib->get_font_name($barcode_config['barcode_font']); ?> 
>       style="font-size:<?php echo $barcode_config['barcode_font_size'] + 5; //5 is size offset for font in display label?>px">
> 	<table cellspacing=<?php echo $barcode_config['barcode_page_cellspacing']; ?> width='<?php echo $barcode_config['barcode_page_width']."%"; ?>' >
14,17c25
< 	$barcode = $item['id'];
< 	$text = $item['name'];
< 	
< 	if ($count % 2 ==0 and $count!=0)
---
> 				if ($count % $barcode_config['barcode_num_in_row'] == 0 and $count != 0)
21c29
< 	echo "<td><img src='".site_url()."/barcode?barcode=$barcode&text=$text&width=256' /></td>";
---
> 				echo "<td>" . $this->barcode_lib->display_barcode($item, $barcode_config) . "</td>";
Only in opensourcepos/application/views: barcodes
Only in pos-prod/application/views: config.php
Only in opensourcepos/application/views: configs
diff -rBwi --ignore-file-name-case pos-prod/application/views/customers/excel_import.php opensourcepos/application/views/customers/excel_import.php
4,6c4,6
< <div id="required_fields_message">Import customers from Excel sheet</div>
< <ul id="error_message_box"></ul>
< <b><a href="<?php echo site_url('customers/excel'); ?>">Download Import Excel Template (CSV)</a></b>
---
> <div id="required_fields_message"><?php echo $this->lang->line('customers_import_items_excel'); ?></div>
> <ul id="error_message_box" class="error_message_box"></ul>
> <b><a href="<?php echo site_url('customers/excel'); ?>"><?php echo $this->lang->line('common_download_import_template'); ?></a></b>
8c8
< <legend>Import</legend>
---
> <legend><?php echo $this->lang->line('common_import'); ?></legend>
11c11
< <?php echo form_label('File path:', 'name',array('class'=>'wide')); ?>
---
> <?php echo form_label($this->lang->line('common_import_file_path').':', 'name',array('class'=>'wide')); ?>
59c59
<    			file_path:"Full path to excel file required"
---
>    			file_path:"<?php echo $this->lang->line('common_import_full_path'); ?>"
diff -rBwi --ignore-file-name-case pos-prod/application/views/customers/form.php opensourcepos/application/views/customers/form.php
5c5
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
8a9,19
> 
> <div class="field_row clearfix">	
> <?php echo form_label($this->lang->line('customers_company_name').':', 'company_name'); ?>
> 	<div class='form_field'>
> 	<?php echo form_input(array(
> 		'name'=>'company_name',
> 		'value'=>$person_info->company_name)
> 	);?>
> 	</div>
> </div>
> 
14a26
> 		'class'=>'account_number',
63c76,92
<     		email: "email"
---
>     		email: "email",
>     		account_number:
> 			{
> 				remote:
> 				{
> 					url: "<?php echo site_url($controller_name . '/check_account_number')?>",
> 					type: "post",
> 					data:
> 					{
> 						"person_id" : "<?php echo $person_info->person_id; ?>",
> 						"account_number" : function()
> 						{
> 							return $("#account_number").val();
> 						}
> 					}
> 				}
> 			}
69c98,99
<      		email: "<?php echo $this->lang->line('common_email_invalid_format'); ?>"
---
>      		email: "<?php echo $this->lang->line('common_email_invalid_format'); ?>",
> 			account_number: "<?php echo $this->lang->line('customers_account_number_duplicate'); ?>"
diff -rBwi --ignore-file-name-case pos-prod/application/views/employees/form.php opensourcepos/application/views/employees/form.php
5c5
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
59c59
< <?php echo form_checkbox("permissions[]",$module->module_id,$this->Employee->has_permission($module->module_id,$person_info->person_id)); ?>
---
> <?php echo form_checkbox("grants[]",$module->module_id,$this->Employee->has_grant($module->module_id,$person_info->person_id),"class='module'"); ?>
61a62,79
> <?php
> 	foreach($all_subpermissions->result() as $permission)
> 	{
> 		$exploded_permission = explode('_', $permission->permission_id);
> 		if ($permission->module_id == $module->module_id)
> 		{
> 			$lang_key = $module->module_id.'_'.$exploded_permission[1];
> 			$lang_line = $this->lang->line($lang_key);
> 			$lang_line = ($this->lang->line_tbd($lang_key) == $lang_line) ? $exploded_permission[1] : $lang_line;
> 			if (empty($lang_line))
> 			{
> 				continue;
> 			} 
> 			?>
> 		<ul>
> 			<li>
> 			<?php echo form_checkbox("grants[]",$permission->permission_id,$this->Employee->has_grant($permission->permission_id,$person_info->person_id)); ?>
> 			<span class="medium"><?php echo $lang_line ?></span>
62a81
> 		</ul>
64a84,85
> 	}
> }
65a87
> </li>
84a107,139
> 
> 	$.validator.addMethod("module", function (value, element) {
> 		var result = $("#permission_list input").is(":checked");
> 		$(".module").each(function(index, element)
> 		{
> 			var parent = $(element).parent();
> 			var checked =  $(element).is(":checked");
> 			if ($("ul", parent).length > 0 && result)
> 			{
> 				result &= !checked || (checked && $("ul > li > input:checked", parent).length > 0);
> 			}
> 		});
> 		return result;
> 	}, '<?php echo $this->lang->line('employees_subpermission_required'); ?>');
> 
> 	$("ul#permission_list > li > input[name='grants[]']").each(function() 
> 	{
> 	    var $this = $(this);
> 	    $("ul > li > input", $this.parent()).each(function() 
> 	    {
> 		    var $that = $(this);
> 	        var updateCheckboxes = function (checked) 
> 	        {
> 				$that.prop("disabled", !checked);
> 	         	!checked && $that.prop("checked", false);
> 	        }
> 	       $this.change(function() {
> 	            updateCheckboxes($this.is(":checked"));
> 	        });
> 			updateCheckboxes($this.is(":checked"));
> 	    });
> 	});
> 	
120c175
< 				minlength: 4
---
> 				minlength: 8
Only in opensourcepos/application/views: errors
diff -rBwi --ignore-file-name-case pos-prod/application/views/giftcards/form.php opensourcepos/application/views/giftcards/form.php
2c2
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
9d8
< <!-- GARRISON ADDED 4/22/2013 -->
11c10
< <?php echo form_label($this->lang->line('giftcards_person_id').':', 'name',array('class'=>'required wide')); ?>
---
> <?php echo form_label($this->lang->line('giftcards_person_id').':', 'name',array('class'=>'wide')); ?>
16c15
< 		'value'=>$giftcard_info->person_id)
---
> 		'value'=>$selected_person)
20d18
< <!-- END GARRISON ADDED -->
28c26
< 		'value'=>$giftcard_info->giftcard_number)
---
> 		'value'=>$giftcard_number)
61,63c59,71
< 	$("#person_id").autocomplete("<?php echo site_url('giftcards/suggest_person');?>",{max:100,minChars:0,delay:10});
<     $("#person_id").result(function(event, data, formatted){});
< 	$("#person_id").search();
---
> 	var format_item = function(row) 
> 	{
>     	return [row[0], "|", row[1]].join("");
> 	};
> 	var autocompleter = $("#person_id").autocomplete('<?php echo site_url("giftcards/person_search"); ?>', 
> 	{
>     	minChars:0,
>     	delay:15, 
>     	max:100,
>        	cacheLength: 1,
>         formatItem: format_item,
>         formatResult : format_item
>     });
65,66c73,76
< 	$('#giftcard_form').validate({
< 		submitHandler:function(form)
---
> 	// declare submitHandler as an object.. will be reused
> 	var submit_form = function(selected_person) 
> 	{ 
> 		$(this).ajaxSubmit(
68d77
< 			$(form).ajaxSubmit({
73a83,87
> 			error: function(jqXHR, textStatus, errorThrown) 
> 			{
> 				selected_customer && autocompleter.val(selected_person);
> 				post_giftcard_form_submit({message: errorThrown});
> 			},
75a90
> 	};
76a92,98
> 	$('#giftcard_form').validate({
> 		submitHandler:function(form)
> 		{
> 			var selected_person = autocompleter.val();
> 			var selected_person_id = selected_person && selected_person.replace(/(\w)\|.*/, "$1");
> 			selected_person_id && autocompleter.val(selected_person_id);
> 			submit_form.call(form, selected_person);
diff -rBwi --ignore-file-name-case pos-prod/application/views/giftcards/manage.php opensourcepos/application/views/giftcards/manage.php
9c9,10
<     enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>');
---
>     enable_search({suggest_url: '<?php echo site_url("$controller_name/suggest")?>',
> 					confirm_message: '<?php echo $this->lang->line("common_confirm_search")?>'});
25c25
< 				3: { sorter: false}
---
> 				5: { sorter: false}
69c68
< <?php echo $this->pagination->create_links();?>
---
> <div id="pagination"><?= $links ?></div>
76a76
> 		<input type="hidden" name ='limit_from' id='limit_from'/>
diff -rBwi --ignore-file-name-case pos-prod/application/views/index.html opensourcepos/application/views/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/application/views/item_kits/form.php opensourcepos/application/views/item_kits/form.php
2c2
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
diff -rBwi --ignore-file-name-case pos-prod/application/views/item_kits/manage.php opensourcepos/application/views/item_kits/manage.php
9c10,11
<     enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>');
---
>     enable_search({suggest_url : '<?php echo site_url("$controller_name/suggest")?>',
> 					confirm_message : '<?php echo $this->lang->line("common_confirm_search")?>'});
37c38
< 				3: { sorter: false}
---
> 				6: { sorter: false}
52c53
< 		if(jQuery.inArray(response.item_id,get_visible_checkbox_ids()) != -1)
---
> 		if(jQuery.inArray(response.item_kit_id,get_visible_checkbox_ids()) != -1)
54c55
< 			update_row(response.item_id,'<?php echo site_url("$controller_name/get_row")?>');
---
> 			update_row(response.item_kit_id,'<?php echo site_url("$controller_name/get_row")?>');
81c82,83
< <?php echo $this->pagination->create_links();?>
---
> <div id="pagination"><?= $links ?></div>
> <?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
88d89
< 		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
90c91
< 		</form>
---
> 			<input type="hidden" name ='limit_from' id='limit_from'/>
94a96,97
> <?php echo form_close(); ?>
> 
diff -rBwi --ignore-file-name-case pos-prod/application/views/items/excel_import.php opensourcepos/application/views/items/excel_import.php
4,6c4,6
< <div id="required_fields_message">Import items from Excel sheet</div>
< <ul id="error_message_box"></ul>
< <b><a href="<?php echo site_url('items/excel'); ?>">Download Import Excel Template (CSV)</a></b>
---
> <div id="required_fields_message"><?php echo $this->lang->line('items_import_items_excel'); ?></div>
> <ul id="error_message_box" class="error_message_box"></ul>
> <b><a href="<?php echo site_url('items/excel'); ?>"><?php echo $this->lang->line('common_download_import_template'); ?></a></b>
8c8
< <legend>Import</legend>
---
> <legend><?php echo $this->lang->line('common_import'); ?></legend>
11c11
< <?php echo form_label('File path:', 'name',array('class'=>'wide')); ?>
---
> <?php echo form_label($this->lang->line('common_import_file_path').':', 'name',array('class'=>'wide')); ?>
59c59
<    			file_path:"Full path to excel file required"
---
>    			file_path:"<?php echo $this->lang->line('common_import_full_path'); ?>"
diff -rBwi --ignore-file-name-case pos-prod/application/views/items/form.php opensourcepos/application/views/items/form.php
2c2
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
4c4
< echo form_open('items/save/'.$item_info->item_id,array('id'=>'item_form'));
---
> echo form_open('items/save/'.$item_info->item_id,array('id'=>'item_form', 'enctype'=>'multipart/form-data'));
10c10
< <?php echo form_label($this->lang->line('items_item_number').':', 'name',array('class'=>'wide')); ?>
---
> <?php echo form_label($this->lang->line('items_item_number').':', 'item_number',array('class'=>'wide')); ?>
13a14
> 		'class'=>'item_number',
34c35,38
< 	<?php echo form_dropdown('category', $categories, $selected_category
---
> 	<?php echo form_input(array(
> 		'name'=>'category',
> 		'id'=>'category',
> 		'value'=>$item_info->category)
124c128,130
<     		'value'=>$location_detail['quantity'])
---
>     		'class'=>'quantity',
>     		'size'=>'8',
>     		'value'=>isset($item_info->item_id)?$location_detail['quantity']:0)
132a139,150
> <?php echo form_label($this->lang->line('items_receiving_quantity').':', 'receiving_quantity',array('class'=>'wide')); ?>
> 	<div class='form_field'>
> 	<?php echo form_input(array(
> 		'name'=>'receiving_quantity',
> 		'id'=>'receiving_quantity',
> 		'size'=>'8',
> 		'value'=>$item_info->receiving_quantity)
> 	);?>
> 	</div>
> 	</div>
> 
> 	<div class="field_row clearfix">
138c156,157
< 		'value'=>$item_info->reorder_level)
---
> 		'size'=>'8',
> 		'value'=>!isset($item_info->item_id)?0:$item_info->reorder_level)
156a176,182
> <?php echo form_label($this->lang->line('items_image').':', 'item_image',array('class'=>'wide')); ?>
>     <div class='form_field'>
>         <?php echo form_upload('item_image');?>
>     </div>
> </div>
> 
> <div class="field_row clearfix">
180d205
< <!-- Parq 131215 Start -->
192,193d216
< <!-- Parq End -->
< 
195,274c218
< 
< <!--  GARRISON ADDED 4/21/2013 -->
< <div class="field_row clearfix">	
< <?php
< if($this->config->item('custom1_name') != NULL)
< {
< 	echo form_label($this->config->item('custom1_name').':', 'custom1',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom1',
< 			'id'=>'custom1',
< 			'value'=>$item_info->custom1)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
< <?php
< if($this->config->item('custom2_name') != NULL)
< {
< 	echo form_label($this->config->item('custom2_name').':', 'custom2',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom2',
< 			'id'=>'custom2',
< 			'value'=>$item_info->custom2)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
< <?php
< if($this->config->item('custom3_name') != NULL)
< {
< 	echo form_label($this->config->item('custom3_name').':', 'custom3',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom3',
< 			'id'=>'custom3',
< 			'value'=>$item_info->custom3)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
< <?php
< if($this->config->item('custom4_name') != NULL)
< {
< 	echo form_label($this->config->item('custom4_name').':', 'custom4',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom4',
< 			'id'=>'custom4',
< 			'value'=>$item_info->custom4)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
< <?php
< if($this->config->item('custom5_name') != NULL)
< {
< 	echo form_label($this->config->item('custom5_name').':', 'custom5',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom5',
< 			'id'=>'custom5',
< 			'value'=>$item_info->custom5)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
< <?php
< if($this->config->item('custom6_name') != NULL)
---
> <?php for ($i = 0; $i < 11; $i++) 
276,302c220
< 	echo form_label($this->config->item('custom6_name').':', 'custom6',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom6',
< 			'id'=>'custom6',
< 			'value'=>$item_info->custom6)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
< <?php
< if($this->config->item('custom7_name') != NULL)
< {
< 	echo form_label($this->config->item('custom7_name').':', 'custom7',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom7',
< 			'id'=>'custom7',
< 			'value'=>$item_info->custom7)
< 		);?>
< 	</div>
< 	</div>
< <?php }//end if?>
< 
< <div class="field_row clearfix">
---
> ?>
304c222
< if($this->config->item('custom8_name') != NULL)
---
> 	if($this->config->item('custom'.$i.'_name') != null)
306,316c224,225
< 	echo form_label($this->config->item('custom8_name').':', 'custom8',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom8',
< 			'id'=>'custom8',
< 			'value'=>$item_info->custom8)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
---
> 		$item_arr = (array)$item_info;
> 		?>
319,321c228
< if($this->config->item('custom9_name') != NULL)
< {
< 	echo form_label($this->config->item('custom9_name').':', 'custom9',array('class'=>'wide')); ?>
---
> 			echo form_label($this->config->item('custom'.$i.'_name').':', 'custom'.$i,array('class'=>'wide')); ?>
324,326c231,233
< 			'name'=>'custom9',
< 			'id'=>'custom9',
< 			'value'=>$item_info->custom9)
---
> 					'name'=>'custom'.$i,
> 					'id'=>'custom'.$i,
> 					'value'=>$item_arr['custom'.$i])
330,332d236
< <?php }//end if?>
< 
< <div class="field_row clearfix">
334,347c238,240
< if($this->config->item('custom10_name') != NULL)
< {
< 	echo form_label($this->config->item('custom10_name').':', 'custom10',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 		<?php echo form_input(array(
< 			'name'=>'custom10',
< 			'id'=>'custom10',
< 			'value'=>$item_info->custom10)
< 		);?>
< 		</div>
< 	</div>
< <?php }//end if?>
< 
< <!--   END GARRISON ADDED -->
---
> 	}
> }
> ?>
355a249,254
> echo form_submit(array(
> 		'name'=>'continue',
> 		'id'=>'continue',
> 		'value'=>$this->lang->line('common_new'),
> 		'class'=>'submit_button float_right')
> );
366,409c265,284
< 	//$("#category").autocomplete("<?php echo site_url('items/suggest_category');?>",{max:100,minChars:0,delay:10});
<     //$("#category").result(function(event, data, formatted){});
< 	//$("#category").search();
< 
< 	$("#custom1").autocomplete("<?php echo site_url('items/suggest_custom1');?>",{max:100,minChars:0,delay:10});
<     $("#custom1").result(function(event, data, formatted){});
< 	$("#custom1").search();
< 
< 	$("#custom2").autocomplete("<?php echo site_url('items/suggest_custom2');?>",{max:100,minChars:0,delay:10});
<     $("#custom2").result(function(event, data, formatted){});
< 	$("#custom2").search();
< 
< 	$("#custom3").autocomplete("<?php echo site_url('items/suggest_custom3');?>",{max:100,minChars:0,delay:10});
<     $("#custom3").result(function(event, data, formatted){});
< 	$("#custom3").search();
< 
< 	$("#custom4").autocomplete("<?php echo site_url('items/suggest_custom4');?>",{max:100,minChars:0,delay:10});
<     $("#custom4").result(function(event, data, formatted){});
< 	$("#custom4").search();
< 
< 	$("#custom5").autocomplete("<?php echo site_url('items/suggest_custom5');?>",{max:100,minChars:0,delay:10});
<     $("#custom5").result(function(event, data, formatted){});
< 	$("#custom5").search();
< 
< 	$("#custom6").autocomplete("<?php echo site_url('items/suggest_custom6');?>",{max:100,minChars:0,delay:10});
<     $("#custom6").result(function(event, data, formatted){});
< 	$("#custom6").search();
< 
< 	$("#custom7").autocomplete("<?php echo site_url('items/suggest_custom7');?>",{max:100,minChars:0,delay:10});
<     $("#custom7").result(function(event, data, formatted){});
< 	$("#custom7").search();
< 
< 	$("#custom8").autocomplete("<?php echo site_url('items/suggest_custom8');?>",{max:100,minChars:0,delay:10});
<     $("#custom8").result(function(event, data, formatted){});
< 	$("#custom8").search();
< 
< 	$("#custom9").autocomplete("<?php echo site_url('items/suggest_custom9');?>",{max:100,minChars:0,delay:10});
<     $("#custom9").result(function(event, data, formatted){});
< 	$("#custom9").search();
< 
< 	$("#custom10").autocomplete("<?php echo site_url('items/suggest_custom10');?>",{max:100,minChars:0,delay:10});
<     $("#custom10").result(function(event, data, formatted){});
< 	$("#custom10").search();
< /** END GARRISON ADDED **/
---
>     $("#continue").click(function()
>   	{
>         stay_open = true;
>     });
>     	    
>     $("#submit").click(function()
>     {
>         stay_open = false;
>     });
> 	
> 	var no_op = function(event, data, formatted){};
> 	$("#category").autocomplete("<?php echo site_url('items/suggest_category');?>",{max:100,minChars:0,delay:10}).result(no_op).search();
> 
> 	<?php for ($i = 0; $i < 11; $i++) 
> 	{ 
> 	?>
> 	$("#custom"+<?php echo $i; ?>).autocomplete("<?php echo site_url('items/suggest_custom'.$i);?>",{max:100,minChars:0,delay:10}).result(no_op).search();
> 	<?php 
> 	}
> 	?>
414,418d288
< 			/*
< 			make sure the hidden field #item_number gets set
< 			to the visible scan_item_number value
< 			*/
< 			$('#item_number').val($('#scan_item_number').val());
421a292,303
> 					if (stay_open) 
> 					{
> 						// set action of item_form to url without item id, so a new one can be created
> 				        $("#item_form").attr("action", "<?php echo site_url("items/save/")?>");
> 						// use a whitelist of fields to minimize unintended side effects
> 						$(':text, :password, :file, #description, #item_form').not('.quantity, #reorder_level, #tax_name_1,' + 
> 								'#tax_percent_name_1, #reference_number, #name, #cost_price, #unit_price, #taxed_cost_price, #taxed_unit_price').val('');  
> 						// de-select any checkboxes, radios and drop-down menus
> 						$(':input', '#item_form').not('#item_category_id').removeAttr('checked').removeAttr('selected');
> 					}
> 					else
> 					{
423c305,306
< 				post_item_form_submit(response);
---
> 					}
> 					post_item_form_submit(response, stay_open);	
434a318,333
> 			item_number:
> 			{
>                 remote:
> 				{
> 					url: "<?php echo site_url($controller_name . '/check_item_number')?>",
> 					type: "POST",
> 					data:
> 					{
> 						"item_id": "<?php echo $item_info->item_id; ?>",
> 						"item_number": function ()
> 						{
> 							return $("#item_number").val();
> 						}
> 					}
> 				}
> 			},
460a360
> 			item_number:"<?php echo $this->lang->line('items_item_number_duplicate'); ?>",
Only in pos-prod/application/views/items: form.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/views/items/form_bulk.php opensourcepos/application/views/items/form_bulk.php
2c2
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
66c66
< 		'value'=> isset($item_tax_info[0]['name']) ? $item_tax_info[0]['name'] : $this->lang->line('items_sales_tax'))
---
> 		'value'=> isset($item_tax_info[0]['name']) ? $item_tax_info[0]['name'] : $this->lang->line('items_sales_tax_1'))
87c87
< 		'value'=> isset($item_tax_info[1]['name']) ? $item_tax_info[1]['name'] : '')
---
> 		'value'=> isset($item_tax_info[1]['name']) ? $item_tax_info[1]['name'] : $this->lang->line('items_sales_tax_2'),)
111,120d110
< <?php echo form_label($this->lang->line('items_location').':', 'location',array('class'=>'wide')); ?>
< 	<div class='form_field'>
< 	<?php echo form_input(array(
< 		'name'=>'location',
< 		'id'=>'location')
< 	);?>
< 	</div>
< </div>
< 
< <div class="field_row clearfix">	
175a166,174
> 	var confirm_message = "<?php echo $this->lang->line('items_confirm_bulk_edit') ?>";
> 	$("#tax_percent_name_2, #tax_name_2").prop('disabled', true),
> 	$("#tax_percent_name_1, tax_name_1").blur(function() {
> 		var disabled = !($("#tax_percent_name_1").val() + $("#tax_name_1").val());
> 		$("#tax_percent_name_2, #tax_name_2").prop('disabled', disabled);
> 		confirm_message = "<?php echo $this->lang->line('items_confirm_bulk_edit') ?>";
> 		confirm_message +=  disabled ? "" : "<?php echo $this->lang->line('items_confirm_bulk_edit_wipe_taxes') ?>";
> 	});
> 
179c178
< 			if(confirm("<?php echo $this->lang->line('items_confirm_bulk_edit') ?>"))
---
> 			if(confirm(confirm_message))
diff -rBwi --ignore-file-name-case pos-prod/application/views/items/inventory.php opensourcepos/application/views/items/inventory.php
2c2
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
diff -rBwi --ignore-file-name-case pos-prod/application/views/items/manage.php opensourcepos/application/views/items/manage.php
9c10,20
<     enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>');
---
>     var widget = enable_search({suggest_url : '<?php echo site_url("$controller_name/suggest")?>',
>         confirm_message : '<?php echo $this->lang->line("common_confirm_search")?>',
>         extra_params : {
>             'is_deleted' : function () {
>                 return $("#is_deleted").is(":checked") ? 1 : 0;
>         }
>     }});
>     // clear suggestion cache when toggling filter
>     $("#is_deleted").change(function() {
>         widget.flushCache();
>     });
25c36
<     $("#is_serialized, #no_description, #search_custom, #is_deleted").click(function()
---
>     $("#search_filter_section input").click(function() 
27c38,40
<     	$('#items_filter_form').submit();
---
>         // reset page number when selecting a specific page number
>         $('#limit_from').val("0");
>         do_search(true);
28a42,46
> 
>     $('#search').keypress(function (e) {
>         if (e.which == 13) {
>             $('#search_form').submit();
>         }
30a49,67
>     $(".date_filter").datepicker({onSelect: function(d,i)
>     {
>         if(d !== i.lastVal){
>             $(this).change();
>         }
>     }, dateFormat: '<?php echo dateformat_jquery($this->config->item("dateformat"));?>',
>        timeFormat: '<?php echo dateformat_jquery($this->config->item("timeformat"));?>'
>     }).change(function() {
>         do_search(true);
>         return false;
>     });
>     
>     resize_thumbs();
> });
> 
> function resize_thumbs()
> {
>     $('a.rollover').imgPreview();
> }
44c81,82
< 				9: { sorter: false}
---
>                 9: { sorter: false},
>                 10: { sorter: false}
62c99
< 			update_row(response.item_id,'<?php echo site_url("$controller_name/get_row")?>');
---
>             update_row(response.item_id,'<?php echo site_url("$controller_name/get_row")?>',resize_thumbs);
89c125
< 			update_row(selected_item_ids[k],'<?php echo site_url("$controller_name/get_row")?>');
---
>             update_row(selected_item_ids[k],'<?php echo site_url("$controller_name/get_row")?>',resize_thumbs);
95c131,132
< function show_hide_search_filter(search_filter_section, switchImgTag) {
---
> function show_hide_search_filter(search_filter_section, switchImgTag)
> {
123c160
< 		"<div class='big_button' style='float: left;'><span>Excel Import</span></div>",
---
>         "<div class='big_button' style='float: left;'><span>" . $this->lang->line('common_import_excel') . "</span></div>",
129,130c166,168
< <div id="titleTextImg" style="background-color:#EEEEEE;height:20px;position:relative;">
< 	<div style="float:left;vertical-align:text-top;">Search Options :</div>
---
> <div id="pagination"><?= $links ?></div>
> <div id="titleTextImg" style="background-color:#EEEEEE;height:30px;position:relative;">
>     <div style="float:left;vertical-align:text-top;"><?php echo $this->lang->line('common_search_options'); ?> :</div>
135c173
< 
---
> <?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
137c175,178
< 	<?php echo form_open("$controller_name/refresh",array('id'=>'items_filter_form')); ?>
---
>     <?php echo form_label($this->lang->line('items_empty_upc_items').' '.':', 'empty_upc');?>
>     <?php echo form_checkbox(array('name'=>'empty_upc','id'=>'empty_upc','value'=>1,'checked'=> isset($empty_upc)?  ( ($empty_upc)? 1 : 0) : 0)).' | ';?>
>     <?php echo form_label($this->lang->line('items_low_inventory_items').' '.':', 'low_inventory');?>
>     <?php echo form_checkbox(array('name'=>'low_inventory','id'=>'low_inventory','value'=>1,'checked'=> isset($low_inventory)?  ( ($low_inventory)? 1 : 0) : 0)).' | ';?>
142,145c183,192
< 	<?php echo form_label($this->lang->line('items_search_custom_items').' '.':', 'search_custom');//GARRISON ADDED 4/21/2013?>
< 	<?php echo form_checkbox(array('name'=>'search_custom','id'=>'search_custom','value'=>1,'checked'=> isset($search_custom)?  ( ($search_custom)? 1 : 0) : 0)).' | ';//GARRISON ADDED 4/21/2013?>
< 	<?php echo form_label($this->lang->line('items_is_deleted').' '.':', 'is_deleted');// Parq 131215?> 
< 	<?php echo form_checkbox(array('name'=>'is_deleted','id'=>'is_deleted','value'=>1,'checked'=> isset($is_deleted)?  ( ($is_deleted)? 1 : 0) : 0));// Parq 131215?>  
---
>     <?php echo form_label($this->lang->line('items_search_custom_items').' '.':', 'search_custom');?>
>     <?php echo form_checkbox(array('name'=>'search_custom','id'=>'search_custom','value'=>1,'checked'=> isset($search_custom)?  ( ($search_custom)? 1 : 0) : 0)).' | ';?>
>     <?php echo form_label($this->lang->line('items_is_deleted').' '.':', 'is_deleted');?> 
>     <?php echo form_checkbox(array('name'=>'is_deleted','id'=>'is_deleted','value'=>1,'checked'=> isset($is_deleted)?  ( ($is_deleted)? 1 : 0) : 0));?> 
> 
>     <?php echo form_label($this->lang->line('sales_date_range').' :', 'start_date');?>
>     <?php echo form_input(array('name'=>'start_date','value'=>$start_date, 'class'=>'date_filter', 'size' => '15'));?>
>     <?php echo form_label(' - ', 'end_date');?>
>     <?php echo form_input(array('name'=>'end_date','value'=>$end_date, 'class'=>'date_filter', 'size' => '15'));?>
>     
147d193
< 	</form>
149d194
< <?php echo $this->pagination->create_links();?>
154a200,202
>         <?php if (count($stock_locations) > 1): ?>
>             <li class="float_left"><span><?php echo form_dropdown('stock_location',$stock_locations,$stock_location,'id="stock_location" onchange="$(\'#search_form\').submit();"'); ?></span></li>
>         <?php endif; ?>
157d204
< 		<?php echo form_open("$controller_name/search",array('id'=>'search_form')); ?>
159c206
< 		</form>
---
>             <input type="hidden" name ='limit_from' id='limit_from'/>
164c211,213
< <div id="table_holder" style="font-size:14px">
---
> <?php echo form_close(); ?>
> 
> <div id="table_holder">
diff -rBwi --ignore-file-name-case pos-prod/application/views/login.php opensourcepos/application/views/login.php
8c8,9
< <script src="<?php echo base_url();?>js/jquery-1.2.6.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
---
> 	<link rel="shortcut icon" type="image/x-icon" href="<?php echo base_url();?>/images/favicon.ico">
> 	<script src="<?php echo base_url();?>js/jquery-1.8.3.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
17c19,21
< <h1>Open Source Point Of Sale <?php echo $this->config->item('application_version'); ?></h1>
---
> 	<div align="center" style="margin-top:10px"><img src=<?php echo base_url();?>/images/logo.gif></div>
> 
> 	<div id="login">
22,28d25
< 	<div id="top">
< 	<?php echo $this->lang->line('login_login'); ?>
< 	</div>
< 	<div id="login_form">
< 		<div id="welcome_message">
< 		<?php echo $this->lang->line('login_welcome_message'); ?>
< 		</div>
29a27
> 		<div id="login_form">
33a32
> 				'id'=>'username',
40a40
> 				'id' => 'password',
45,47c44
< 		<div id="submit_button">
< 		<?php echo form_submit('loginButton','Go'); ?>
< 		</div>
---
> 			<div id="submit_button"><?php echo form_submit('loginButton','Go'); ?> </div>
50c47
< <?php echo form_close(); ?>
---
> 	<?php echo form_close(); ?><h1>Open Source Point Of Sale <?php echo $this->config->item('application_version'); ?></h1>
diff -rBwi --ignore-file-name-case pos-prod/application/views/no_access.php opensourcepos/application/views/no_access.php
2c2
< echo $this->lang->line('error_no_permission_module').' '.$module_name; 
---
> echo $this->lang->line('error_no_permission_module').' '.$module_name . (!empty($permission_id) ? ' (' . $permission_id . ')' : ''); 
diff -rBwi --ignore-file-name-case pos-prod/application/views/partial/footer.php opensourcepos/application/views/partial/footer.php
3,4c3,10
< <div id="footer"> <?php echo $this->lang->line('common_you_are_using_ospos'); ?> <?php echo $this->config->item('application_version'); ?>.
< <?php echo $this->lang->line('common_please_visit_my'); ?> <a href="http://sourceforge.net/projects/opensourcepos/" target="_blank"><?php echo $this->lang->line('common_website'); ?></a> <?php echo $this->lang->line('common_learn_about_project'); ?>.</div>
---
> 
> 	<div id="footer">
> 		<?php echo $this->lang->line('common_you_are_using_ospos'); ?>
> 		<?php echo $this->config->item('application_version'); ?>.
> 		<?php echo $this->lang->line('common_please_visit_my'); ?>
> 		<a href="https://github.com/jekkos/opensourcepos" target="_blank"><?php echo $this->lang->line('common_website'); ?></a>
> 		<?php echo $this->lang->line('common_learn_about_project'); ?>
> 	</div>
diff -rBwi --ignore-file-name-case pos-prod/application/views/partial/header.php opensourcepos/application/views/partial/header.php
1,2c1
< <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
<         "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
---
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
8,26c7,57
< 	<link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/ospos.css" />
< 	<link rel="stylesheet" rev="stylesheet" href="<?php echo base_url();?>css/ospos_print.css"  media="print"/>
< 	<script>BASE_URL = '<?php echo site_url(); ?>';</script>
< 	<script src="<?php echo base_url();?>js/jquery-1.2.6.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.color.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.metadata.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.form.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.tablesorter.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.ajax_queue.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.bgiframe.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.autocomplete.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.validate.min.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/jquery.jkey-1.1.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/thickbox.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/common.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/manage_tables.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/swfobject.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/date.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
< 	<script src="<?php echo base_url();?>js/datepicker.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
---
> 	<link rel="shortcut icon" type="image/x-icon" href="<?php echo base_url();?>/images/favicon.ico">
> 	<link rel="stylesheet" type="text/css" href="css/ospos.css" />
> 	<link rel="stylesheet" type="text/css" href="css/ospos_print.css" media="print" />
> 	
> 	<?php if ($this->input->cookie('debug') == "true" || $this->input->get("debug") == "true") : ?>
> 		<!-- start js template tags -->
> 		<script type="text/javascript" src="js/jquery-1.8.3.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery-ui-1.11.4.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery-ui-timepicker-addon.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.ajax_queue.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.autocomplete.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.color.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.form-3.51.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.metadata.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.tablesorter-2.20.1.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.tablesorter.staticrow.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/jquery.validate-1.13.1-min.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/common.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/date.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/imgpreview.full.jquery.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/manage_tables.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/nominatim.autocomplete.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/phpjsdate.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/swfobject.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/tabcontent.js" language="javascript"></script>
> 		<script type="text/javascript" src="js/thickbox.js" language="javascript"></script>
> 		<!-- end js template tags -->
> 	<?php else : ?>
> 		<!-- start minjs template tags -->
> 		<script type="text/javascript" src="dist/opensourcepos.min.js?rel=5b6d6cb4c1" language="javascript"></script>
> 		<!-- end minjs template tags -->       
> 	<?php endif; ?>
> 
> 	<script type="text/javascript">
> 		// live clock
> 	
> 		function clockTick() {  
> 			setInterval('updateClock();', 1000);  
> 		}
> 
> 		// start the clock immediatly
> 		clockTick();
> 
> 		var now = new Date(<?php echo time() * 1000 ?>);
> 
> 		function updateClock() {
> 			now.setTime(now.getTime() + 1000);
> 			
> 			document.getElementById('liveclock').innerHTML = phpjsDate("<?php echo $this->config->item('dateformat').' '.$this->config->item('timeformat') ?>", now);
> 		}
> 	</script>
50c81
< 				<img src="<?php echo base_url().'images/menubar/'.$module->module_id.'.png';?>" border="0" alt="Menubar Image" /></a><br />
---
> 						<img src="<?php echo base_url().'images/menubar/'.$module->module_id.'.png';?>" border="0" alt="Menubar Image"></a><br>
64c95
< 		<?php echo date('F d, Y h:i a') ?>
---
> 				<div id="liveclock"><?php echo date($this->config->item('dateformat').' '.$this->config->item('timeformat')) ?></div>
70a101
>  
\ No newline at end of file
Only in opensourcepos/application/views/partial: print_receipt.php
Only in opensourcepos/application/views/partial: stock_locations.php
diff -rBwi --ignore-file-name-case pos-prod/application/views/people/form_basic_info.php opensourcepos/application/views/people/form_basic_info.php
22a23,46
> <?php echo form_label($this->lang->line('common_gender').':', 'gender',
> !empty($basic_version) ? array('class'=>'required') : array()); ?>
> 	<div class='form_field'>
> 	<?php echo form_radio(array(
> 		'name'=>'gender',
> 		'type'=>'radio',
> 		'id'=>'gender',
> 		'value'=>1,
> 		'checked'=>$person_info->gender === '1')
> 	);
> 	echo '&nbsp;' . $this->lang->line('common_gender_male') . '&nbsp;';
> 	echo form_radio(array(
> 		'name'=>'gender',
> 		'type'=>'radio',
> 		'id'=>'gender',
> 		'value'=>0,
> 		'checked'=>$person_info->gender === '0')
> 	);
> 	echo '&nbsp;' . $this->lang->line('common_gender_female');
> 	?>
> 	</div>
> </div>
> 
> <div class="field_row clearfix">	
88c112
< 		'id'=>'zip',
---
> 		'id'=>'postcode',
114a139,174
> 
> <script type='text/javascript' language="javascript">
> //validation and submit handling
> $(document).ready(function()
> {
> 	nominatim.init({
> 		fields : {
> 			postcode : {  
> 				dependencies :  ["postcode", "city", "state", "country"], 
> 				response : {  
> 					field : 'postalcode', 
> 					format: ["postcode", "village|town|hamlet|city_district|city", "state", "country"] 
> 				}
> 			},
> 	
> 			city : {
> 				dependencies :  ["postcode", "city", "state", "country"], 
> 				response : {  
> 					format: ["postcode", "village|town|hamlet|city_district|city", "state", "country"] 
> 				}
> 			},
> 	
> 			state : {
> 				dependencies :  ["state", "country"]
> 			},
> 	
> 			country : {
> 				dependencies :  ["state", "country"] 
> 			}
> 			
> 		},
> 		language : '<?php echo $this->config->item('language');?>'
> 	});
> 
> });
> </script>
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/views/people/manage.php opensourcepos/application/views/people/manage.php
8c8,9
<     enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>',false);
---
>     enable_search({ suggest_url : '<?php echo site_url("$controller_name/suggest")?>',
> 		confirm_search_message : '<?php echo $this->lang->line("common_confirm_search")?>'});
68c69
< 			"<div class='big_button' style='float: left;'><span>Excel Import</span></div>",
---
> 			"<div class='big_button' style='float: left;'><span>" . $this->lang->line('common_import_excel') . "</span></div>",
74c75
< <?php echo $this->pagination->create_links();?>
---
> <div id="pagination"><?= $links ?></div>
82a84
> 		<input type="hidden" name ='limit_from' id='limit_from'/>
Only in opensourcepos/application/views/receivings: form.php
diff -rBwi --ignore-file-name-case pos-prod/application/views/receivings/receipt.php opensourcepos/application/views/receivings/receipt.php
1a2,5
> 
> <?php $this->load->view('partial/print_receipt', array('print_after_sale', $print_after_sale, 
> 		'selected_printer' => 'receipt_printer')); ?>
> 
10a15,17
> 		<?php if ($this->Appconfig->get('company_logo') == '') 
>         { 
>         ?>
11a19,27
> 		<?php 
> 		}
> 		else 
> 		{ 
> 		?>
> 		<div id="company_name"><img id="image" src="<?php echo base_url('uploads/' . $this->Appconfig->get('company_logo')); ?>" alt="company_logo" /></div>			
> 		<?php
> 		}
> 		?>
21,28c37
< 			<div id="customer"><?php echo $this->lang->line('suppliers_supplier').": ".$supplier; ?><br>
< 			<?php if (!empty($supplier_2) ) echo $supplier_2."<br>"; ?>
< 			<?php if (!empty($supplier_3) ) echo $supplier_3."<br>"; ?>
< 			<?php if (!empty($supplier_4) ) echo $supplier_4."<br>"; ?>
< 			<?php if (!empty($supplier_5) ) echo "ACCT: ".$supplier_5."<br>"; ?>
< 			
< 			</div>
< 			<br>
---
> 		<div id="customer"><?php echo $this->lang->line('suppliers_supplier').": ".$supplier; ?></div>
32a42,48
> 		<?php if (!empty($invoice_number))
> 		{
> 		?>
> 		<div id="invoice_number"><?php echo $this->lang->line('recvs_invoice_number').": ".$invoice_number; ?></div>	
> 		<?php 
> 		}
> 		?>
38,42c54,57
< 	<th style="width:50%;"><?php echo $this->lang->line('items_item'); ?></th>
< 	<th style="width:17%;">Cost/Price</th>
< 	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_quantity'); ?></th>
< 	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_discount'); ?></th>
< 	<th style="width:17%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
---
> 	<th style="width:40%;"><?php echo $this->lang->line('items_item'); ?></th>
> 	<th style="width:20%;"><?php echo $this->lang->line('common_price'); ?></th>
> 	<th style="width:20%;"><?php echo $this->lang->line('sales_quantity'); ?></th>
> 	<th style="width:15%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
49,51c64,66
< 		<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],70); ?></span></td>
< 		<td><?php echo to_currency($item['price'])."/".to_currency($item['unit_price']); ?></td>
<                 <td style='text-align:center;'><?php
---
> 		<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],10); ?></span></td>
> 		<td><?php echo to_currency($item['price']); ?></td>
> 		<td><?php 
53,55c68,69
<                 ?></td>
< 		<td style='text-align:center;'><?php echo $item['discount']; ?></td>
< 		<td style='text-align:right;'><?php echo to_currency($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100); ?></td>
---
> 		?>&nbsp;&nbsp;&nbsp;x <?php echo $item['receiving_quantity'] != 0 ? $item['receiving_quantity'] : 1; ?></td>
> 		<td><div class="total-value"><?php echo to_currency($item['total']); ?></div></td>
58,61c72,76
< 
< 	    <td colspan="2" align="center"><?php echo $item['description']; ?></td>
< 		<td colspan="2" ><?php echo $item['serialnumber']; ?></td>
< 		<td colspan="1"><?php echo '---'; ?></td>
---
> 		<td ><?php echo $item['serialnumber']; ?></td>
> 	    </tr>
> 	    <?php if ($item['discount'] > 0 ) : ?>
> 		<tr>
> 			<td colspan="3" style="font-weight: bold;"> <?php echo number_format($item['discount'], 0) . " " . $this->lang->line("sales_discount_included")?> </td>
62a78
> 		<?php endif; ?>
67,68c83,84
< 	<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_total'); ?></td>
< 	<td colspan="2" style='text-align:right'><?php echo to_currency($total); ?></td>
---
> 	<td colspan="3" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_total'); ?></td>
> 	<td style='border-top:2px solid #000000;'><div class="total-value"><?php echo to_currency($total); ?></div></td>
76c92
< 	<td colspan="2" style='text-align:right'><?php echo $payment_type; ?></td>
---
> 	<td><div class="total-value"><?php echo $payment_type; ?></div></td>
85c101
< 		<td colspan="2" style='text-align:right'><?php echo to_currency($amount_tendered); ?></td>
---
> 		<td><div class="total-value"><?php echo to_currency($amount_tendered); ?></div></td>
90c106
< 		<td colspan="2" style='text-align:right'><?php echo $amount_change; ?></td>
---
> 		<td><div class="total-value"><?php echo $amount_change; ?></div></td>
104c120,121
< 	<?php echo "<img src='index.php/barcode?barcode=$receiving_id&text=$receiving_id&width=250&height=50' />"; ?>
---
> 		<img src='data:image/png;base64,<?php echo $barcode; ?>' /><br>
> 		<?php echo $receiving_id; ?>
108,120d124
< 
< <?php if ($this->Appconfig->get('print_after_sale'))
< {
< ?>
< <script type="text/javascript">
< $(window).load(function()
< {
< 	window.print();
< });
< </script>
< <?php
< }
< ?>
Only in pos-prod/application/views/receivings: receipt.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/views/receivings/receiving.php opensourcepos/application/views/receivings/receiving.php
51c51
< 		<?php echo anchor("items/view/-1/width:360",
---
> 		<?php echo anchor("items/view/-1/width:450",
66d65
< 	<th>Price</th>
68c67,68
<         <th style="width:11%;"><?php echo $this->lang->line('recvs_quantity'); ?></th>
---
> 	<th style="width:5%;"><?php echo $this->lang->line('recvs_quantity'); ?></th>
> 	<th style="width:6%;"></th>
79c79
< <tr><td colspan='7'>
---
> <tr><td colspan='8'>
81c81
< </tr></tr>
---
> </td></tr>
93,94c93,94
< 		<td style="align:center;"><?php echo $item['name']; ?><br /> [<?php echo $item['in_stock']; ?> in <?php echo $item['stock_name']; ?>]</td>
<             <?php echo form_hidden('location', $item['item_location']); ?>
---
> 		<td style="align:center;"><?php echo $item['name']; ?><br /> [<?php echo $item['in_stock']; ?> in <?php echo $item['stock_name']; ?>]
>             <?php echo form_hidden('location', $item['item_location']); ?></td>
96,100d95
< <?php
< 			echo $item['description'];
<       		echo form_hidden('description',$item['description']);
< ?>
< 		<td><?php echo $item['unit_price']; ?></td>
115c110
< 		<?php echo form_hidden('unit_price',$item['unit_price']); ?>
---
> 		
118a114,115
>             if ($item['receiving_quantity'] > 1) 
> 			{
120a118,127
>         <td>x <?php echo $item['receiving_quantity']; ?></td>	
> 		<?php 
> 			}
> 			else
> 			{
> 		?>
> 		<td></td>
> 		<?php 
> 			}
> 		?>
122c129,130
< <?php       if ($items_module_allowed && $mode!='requisition')
---
> 		<?php       
> 			if ($items_module_allowed && $mode!='requisition')
138a147,179
> 		<tr>
> 		<?php 
> 			if($item['allow_alt_description']==1)
> 			{
> 			?>
> 			<td style="color: #2F4F4F;"><?php echo $this->lang->line('sales_description_abbrv').':';?></td>
> 			<?php 
> 			} 
> 			?>
> 			<td colspan="2" style="text-align: left;">
> 		
> 			<?php
> 	        	if($item['allow_alt_description']==1)
> 	        	{
> 	        		echo form_input(array('name'=>'description','value'=>$item['description'],'size'=>'20'));
> 	        	}
> 	        	else
> 	        	{
> 					if ($item['description']!='')
> 					{
> 						echo $item['description'];
> 	        			echo form_hidden('description',$item['description']);
> 	        		}
> 	        		else
> 	        		{
> 	        		    echo $this->lang->line('sales_no_description');
> 	           			echo form_hidden('description','');
> 	        		}
> 	        	}
> 			?>
> 			</td>
> 			<td colspan="6"></td>
> 		</tr>
165c206
< 		<?php echo anchor("suppliers/view/-1/width:350",
---
> 		<?php echo anchor("suppliers/view/-1/width:400",
198c236
<         <?php echo form_open("receivings/requisition_complete",array('id'=>'finish_sale_form')); ?>
---
> 		        <?php echo form_open("receivings/requisition_complete",array('id'=>'finish_receiving_form')); ?>
201c239
<         <?php echo form_textarea(array('name'=>'comment','value'=>'','rows'=>'4','cols'=>'23'));?>
---
> 		        <?php echo form_textarea(array('name'=>'comment','id'=>'comment','value'=>$comment,'rows'=>'4','cols'=>'23'));?>
204,205c242,243
<         <?php echo "<div class='small_button' id='finish_sale_button' style='float:right;margin-top:5px;'><span>".$this->lang->line('recvs_complete_receiving')."</span></div>";
<         ?>
---
> 		        <div class='small_button' id='finish_receiving_button' style='float:right;margin-top:5px;'>
> 		        	<span><?php echo $this->lang->line('recvs_complete_receiving') ?></span>
208,210c246,248
<         <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_sale_form')); ?>
<         <div class='small_button' id='cancel_sale_button' style='float:left;margin-top:5px;'>
<         <span>Cancel </span>
---
> 		        <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_receiving_form')); ?>
> 		        <div class='small_button' id='cancel_receiving_button' style='float:left;margin-top:5px;'>
> 		        <span><?php echo $this->lang->line('recvs_cancel_receiving')?></span>
220c258
< 		<?php echo form_open("receivings/complete",array('id'=>'finish_sale_form')); ?>
---
> 		<?php echo form_open("receivings/complete",array('id'=>'finish_receiving_form')); ?>
223c261
< 		<?php echo form_textarea(array('name'=>'comment','value'=>'','rows'=>'4','cols'=>'23'));?>
---
> 		<?php echo form_textarea(array('name'=>'comment','id'=>'comment','value'=>$comment,'rows'=>'4','cols'=>'23'));?>
225c263,311
< 		<table width="100%"><tr><td>
---
> 		<table width="100%">
> 		<tr>
> 			<td>
> 				<?php echo $this->lang->line('recvs_print_after_sale'); ?>
> 			</td>
> 			<td>
> 				<?php if ($print_after_sale)
> 				{
> 					echo form_checkbox(array('name'=>'recv_print_after_sale','id'=>'recv_print_after_sale','checked'=>'checked'));
> 				}
> 				else
> 				{
> 					echo form_checkbox(array('name'=>'recv_print_after_sale','id'=>'recv_print_after_sale'));
> 				}
> 				?>
> 			</td>
> 		</tr>
> 		<?php if ($mode == "receive") 
> 		{
> 		?>
> 		<tr>
> 		<td>
> 		<?php echo $this->lang->line('recvs_invoice_enable'); ?>
> 		</td>
> 		<td>
> 		<?php if ($invoice_number_enabled)
> 		{
> 			echo form_checkbox(array('name'=>'recv_invoice_enable','id'=>'recv_invoice_enable','size'=>10,'checked'=>'checked'));
> 		}
> 		else
> 		{
> 			echo form_checkbox(array('name'=>'recv_invoice_enable','id'=>'recv_invoice_enable','size'=>10));
> 		}
> 		?>
> 		</td>
> 		</tr>
> 		
> 		<tr>
> 		<td>
> 		<?php echo $this->lang->line('recvs_invoice_number').':   ';?>
> 		</td>
> 		<td>
> 		<?php echo form_input(array('name'=>'recv_invoice_number','id'=>'recv_invoice_number','value'=>$invoice_number,'size'=>10));?>
> 		</td>
> 		</tr>
> 		<?php 
> 		}
> 		?>
> 		<tr><td>
247,248c333,334
< 		<?php echo "<div class='small_button' id='finish_sale_button' style='float:right;margin-top:5px;'><span>".$this->lang->line('recvs_complete_receiving')."</span></div>";
< 		?>
---
> 		<div class='small_button' id='finish_receiving_button' style='float:right;margin-top:5px;'>
> 			<span><?php echo $this->lang->line('recvs_complete_receiving') ?></span>
253,255c339,341
< 	    <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_sale_form')); ?>
< 			    <div class='small_button' id='cancel_sale_button' style='float:left;margin-top:5px;'>
< 					<span>Cancel </span>
---
> 	    <?php echo form_open("receivings/cancel_receiving",array('id'=>'cancel_receiving_form')); ?>
> 			    <div class='small_button' id='cancel_receiving_button' style='float:left;margin-top:5px;'>
> 					<span><?php echo $this->lang->line('recvs_cancel_receiving')?></span>
267,270d352
< 
< <?php $this->load->view("partial/footer"); ?>
< 
< 
296a379,408
> 	$('#comment').keyup(function() 
> 	{
> 		$.post('<?php echo site_url("receivings/set_comment");?>', {comment: $('#comment').val()});
> 	});
> 
> 	$('#recv_invoice_number').keyup(function() 
> 	{
> 		$.post('<?php echo site_url("receivings/set_invoice_number");?>', {recv_invoice_number: $('#recv_invoice_number').val()});
> 	});
> 
> 	$("#recv_print_after_sale").change(function()
> 	{
> 		$.post('<?php echo site_url("receivings/set_print_after_sale");?>', {recv_print_after_sale: $(this).is(":checked")});
> 	});
> 
> 	var enable_invoice_number = function() 
> 	{
> 		var enabled = $("#recv_invoice_enable").is(":checked");
> 		$("#recv_invoice_number").prop("disabled", !enabled).parents('tr').show();
> 		return enabled;
> 	}
> 
> 	enable_invoice_number();
> 
> 	$("#recv_invoice_enable").change(function() {
> 		var enabled = enable_invoice_number();
> 		$.post('<?php echo site_url("receivings/set_invoice_number_enabled");?>', {recv_invoice_number_enabled: enabled});
> 		
> 	});
> 
322c434
<     $("#finish_sale_button").click(function()
---
>     $("#finish_receiving_button").click(function()
326c438
<     		$('#finish_sale_form').submit();
---
>     		$('#finish_receiving_form').submit();
330c442
<     $("#cancel_sale_button").click(function()
---
>     $("#cancel_receiving_button").click(function()
334c446
<     		$('#cancel_sale_form').submit();
---
>     		$('#cancel_receiving_form').submit();
341c453
< function post_item_form_submit(response)
---
> function post_item_form_submit(response, stay_open)
345a458,463
> 		if (stay_open)
> 		{
> 			$("#add_item_form").ajaxSubmit();
> 		}
> 		else
> 		{
348a467
> }
359a479
> <?php $this->load->view("partial/footer"); ?>
\ No newline at end of file
Only in pos-prod/application/views/receivings: receiving.php.rej
diff -rBwi --ignore-file-name-case pos-prod/application/views/reports/date_input.php opensourcepos/application/views/reports/date_input.php
58,61d57
<     <?php echo form_label($specific_input_name, 'specific_input_name_label', array('class'=>'required')); ?>
< 	<div id='report_specific_input_data'>
< 		<?php echo form_dropdown('specific_input_data',$specific_input_data, '', 'id="specific_input_data"'); ?>
< 	</div>
71c67
<     elseif($mode == 'requisition')
---
> 	if (!empty($stock_locations) && count($stock_locations) > 1)
73c69,74
<         //Do nothing
---
> 		?>
> 		<?php echo form_label($this->lang->line('reports_stock_location'), 'reports_stock_location_label', array('class'=>'required')); ?>
> 		<div id='report_stock_location'>
> 			<?php echo form_dropdown('stock_location',$stock_locations,'all','id="location_id"'); ?>
> 		</div>
> 		<?php
93,94c94,95
< 		var supplier_id = $("#specific_input_data").val();
< 		
---
> 		var location_id = $("#location_id").val();
> 		var location = window.location;
97c98
< 			window.location = window.location+'/'+$("#report_date_range_simple option:selected").val() + '/' + input_type + '/' + supplier_id;
---
> 			location += '/'+$("#report_date_range_simple option:selected").val() + '/' + input_type;
103c104
< 	        if(input_type == null)
---
> 	        if(!input_type)
105c106
< 	            window.location = window.location+'/'+start_date + '/'+ end_date + '/' + supplier_id;
---
> 	            location += '/'+start_date + '/'+ end_date;
109c110,111
< 			     window.location = window.location+'/'+start_date + '/'+ end_date+ '/' + input_type+ '/' + supplier_id;
---
> 				location += '/'+start_date + '/'+ end_date+ '/' + input_type;
> 			}
110a113,115
> 		if (location_id)
> 		{
> 			location += '/' + location_id;
111a117
> 		window.location = location;
Only in opensourcepos/application/views/reports: inventory_summary_input.php
diff -rBwi --ignore-file-name-case pos-prod/application/views/reports/listing.php opensourcepos/application/views/reports/listing.php
8,16c7,15
< 			<li><a href="<?php echo site_url('reports/graphical_summary_sales');?>"><?php echo $this->lang->line('reports_sales'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_categories');?>"><?php echo $this->lang->line('reports_categories'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_customers');?>"><?php echo $this->lang->line('reports_customers'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_suppliers');?>"><?php echo $this->lang->line('reports_suppliers'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_items');?>"><?php echo $this->lang->line('reports_items'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_employees');?>"><?php echo $this->lang->line('reports_employees'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_taxes');?>"><?php echo $this->lang->line('reports_taxes'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_discounts');?>"><?php echo $this->lang->line('reports_discounts'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/graphical_summary_payments');?>"><?php echo $this->lang->line('reports_payments'); ?></a></li>
---
> 			<?php
> 			foreach($grants as $grant) 
> 			{
> 				if (!preg_match('/reports_(inventory|receivings)/', $grant['permission_id']))
> 				{
> 					show_report('graphical_summary',$grant['permission_id']);
> 				}
> 			}
> 			?>
22,30c21,29
< 			<li><a href="<?php echo site_url('reports/summary_sales');?>"><?php echo $this->lang->line('reports_sales'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_categories');?>"><?php echo $this->lang->line('reports_categories'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_customers');?>"><?php echo $this->lang->line('reports_customers'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_suppliers');?>"><?php echo $this->lang->line('reports_suppliers'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_items');?>"><?php echo $this->lang->line('reports_items'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_employees');?>"><?php echo $this->lang->line('reports_employees'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_taxes');?>"><?php echo $this->lang->line('reports_taxes'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_discounts');?>"><?php echo $this->lang->line('reports_discounts'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/summary_payments');?>"><?php echo $this->lang->line('reports_payments'); ?></a></li>
---
> 			<?php 
> 			foreach($grants as $grant) 
> 			{
> 				if (!preg_match('/reports_(inventory|receivings)/', $grant['permission_id']))
> 				{
> 					show_report('summary',$grant['permission_id']);
> 				}
> 			}
> 			?>
36,40c35,42
< 			<li><a href="<?php echo site_url('reports/detailed_sales');?>"><?php echo $this->lang->line('reports_sales'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/detailed_receivings');?>"><?php echo $this->lang->line('reports_receivings'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/specific_customer');?>"><?php echo $this->lang->line('reports_customer'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/specific_discount');?>"><?php echo $this->lang->line('reports_discount'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/specific_employee');?>"><?php echo $this->lang->line('reports_employee'); ?></a></li>
---
> 		<?php 			
> 			$person_id = $this->session->userdata('person_id');
> 			show_report_if_allowed('detailed', 'sales', $person_id);
> 			show_report_if_allowed('detailed', 'receivings', $person_id);
> 			show_report_if_allowed('specific', 'customer', $person_id, 'reports_customers');
> 			show_report_if_allowed('specific', 'discount', $person_id, 'reports_discounts');
> 			show_report_if_allowed('specific', 'employee', $person_id, 'reports_employees');
> 		?>
44c45,48
< 	
---
> 	<?php 
> 	if ($this->Employee->has_grant('reports_inventory', $this->session->userdata('person_id')))
> 	{
> 	?>
47,48c51,54
< 			<li><a href="<?php echo site_url('reports/inventory_low');?>"><?php echo $this->lang->line('reports_low_inventory'); ?></a></li>
< 			<li><a href="<?php echo site_url('reports/inventory_summary');?>"><?php echo $this->lang->line('reports_inventory_summary'); ?></a></li>
---
> 		<?php 
> 			show_report('', 'reports_inventory_low');	
> 			show_report('', 'reports_inventory_summary');
> 		?>
50a57,59
> 	<?php 
> 	}
> 	?>
59,64d67
< 
< <script type="text/javascript" language="javascript">
< $(document).ready(function()
< {
< });
< </script>
diff -rBwi --ignore-file-name-case pos-prod/application/views/reports/tabular_details.php opensourcepos/application/views/reports/tabular_details.php
18c18
< 				<th><?php echo $header; ?></th>
---
> 				<th width="<?=$header_width?>%"><?php echo $header; ?></th>
97,98c95,96
< 		var sale_id = response.id
< 		$.get('<?php echo site_url("reports/get_detailed_sales_row")?>/'+sale_id, function(response)
---
> 		var row_id = response.id
> 		$.get('<?php echo site_url("reports/get_detailed_" . $editable . "_row")?>/'+row_id, function(response)
101c99
< 			var row = get_table_row(sale_id).parent().parent();
---
> 			var row = get_table_row(row_id).parent().parent();
104c102
< 			row = get_table_row(sale_id).parent().parent();
---
> 			row = get_table_row(row_id).parent().parent();
Only in pos-prod/application/views/sales: delete.php
Only in pos-prod/application/views/sales: edit.php
diff -rBwi --ignore-file-name-case pos-prod/application/views/sales/form.php opensourcepos/application/views/sales/form.php
3c3
< 	<ul id="error_message_box"></ul>
---
> 	<ul id="error_message_box" class="error_message_box"></ul>
10c10
< 	<?php echo form_label($this->lang->line('sales_receipt').':', 'customer'); ?>
---
> 			<?php echo form_label($this->lang->line('sales_receipt_number').':', 'customer'); ?>
17c17
< 	<?php echo form_label($this->lang->line('sales_date').':', 'date', array('class'=>'required')); ?>
---
> 			<?php echo form_label($this->lang->line('sales_date').':', 'date'); ?>
19c19,32
< 			<?php echo form_input(array('name'=>'date','value'=>date('m/d/Y', strtotime($sale_info['sale_time'])), 'id'=>'date'));?>
---
> 				<?php echo form_input(array('name'=>'date','value'=>date($this->config->item('dateformat') . ' ' . $this->config->item('timeformat'), strtotime($sale_info['sale_time'])), 'id'=>'datetime', 'readonly'=>'true'));?>
> 			</div>
> 		</div>
> 		
> 		<div class="field_row clearfix">
> 			<?php echo form_label($this->lang->line('sales_invoice_number').':', 'invoice_number'); ?>
> 			<div class='form_field'>
> 				<?php if (isset($sale_info["invoice_number"]) && !empty($sale_info["invoice_number"]) && 
> 					isset($sale_info['customer_id']) && isset($sale_info['email']) && !empty($sale_info['email'])): ?>
> 					<?php echo form_input(array('name'=>'invoice_number', 'size'=>10, 'value'=>$sale_info['invoice_number'], 'id'=>'invoice_number'));?>
> 					<a id="send_invoice" href="javascript:void(0);"><?=$this->lang->line('sales_send_invoice')?></a>
> 				<?php else: ?>
> 					<?php echo form_input(array('name'=>'invoice_number', 'value'=>$sale_info['invoice_number'], 'id'=>'invoice_number'));?>
> 				<?php endif; ?>
44,45c57
< 	<?php
< 	echo form_submit(array(
---
> 		<?php echo form_submit(array(
55,56c67
< 		<?php
< 		echo form_submit(array(
---
> 			<?php echo form_submit(array(
70,75c80,88
< 	$('#date').datePicker({startDate: '01/01/1970'});
< 	$("#sales_delete_form").submit(function()
< 	{
< 		if (!confirm('<?php echo $this->lang->line("sales_delete_confirmation"); ?>'))
< 		{
< 			return false;
---
> 	<?php if (isset($sale_info['email'])): ?>
> 		$("#send_invoice").click(function(event) {
> 			if (confirm("<?php echo $this->lang->line('sales_invoice_confirm') . ' ' . $sale_info['email'] ?>")) {
> 				$.get('<?=site_url() . "/sales/send_invoice/" . $sale_info['sale_id']?>',
> 						function(response) {
> 							tb_remove();
> 							post_form_submit(response);
> 						}, "json"
> 				);	
77a91,96
> 	<?php endif; ?>
> 	
> 	$('#datetime').datetimepicker({
> 		dateFormat: '<?php echo dateformat_jquery($this->config->item("dateformat"));?>',
> 		timeFormat: '<?php echo dateformat_jquery($this->config->item("timeformat"));?>'
> 	});
79c98,99
< 	var format_item = function(row) {
---
> 	var format_item = function(row)
> 	{
88c108,110
< 	var autocompleter = $("#customer_id").autocomplete('<?php echo site_url("sales/customer_search"); ?>', {
---
> 
> 	var autocompleter = $("#customer_id").autocomplete('<?php echo site_url("sales/customer_search"); ?>', 
> 	{
98,99c120,123
< 	var submit_form = function(selected_customer) { 
< 		$(this).ajaxSubmit({
---
> 	var submit_form = function(selected_customer) 
> 	{ 
> 		$(this).ajaxSubmit(
> 		{
105c129,130
< 			error: function(jqXHR, textStatus, errorThrown) {
---
> 			error: function(jqXHR, textStatus, errorThrown) 
> 			{
112c137,139
< 	$('#sales_edit_form').validate({
---
> 
> 	$('#sales_edit_form').validate(
> 	{
124,126c151,165
< 			date: {
< 				required:true,
< 				date:true
---
> 			invoice_number:
> 			{
> 				remote:
> 				{
> 					url: "<?php echo site_url($controller_name . '/check_invoice_number')?>",
> 					type: "POST",
> 					data:
> 					{
> 						"sale_id" : <?php echo $sale_info['sale_id']; ?>,
> 						"invoice_number" : function()
> 						{
> 							return $("#invoice_number").val();
> 						}
> 					}
> 				}
131,134c170
< 			date: {
< 				required: "<?= $this->lang->line('sales_date_required'); ?>",
< 				date: "<?= $this->lang->line('sales_date_type'); ?>"
< 			}
---
> 			invoice_number: '<?php echo $this->lang->line("sales_invoice_number_duplicate"); ?>'
137c173,177
< 	$('#sales_delete_form').submit(function() {
---
> 
> 	$('#sales_delete_form').submit(function() 
> 	{
> 		if (confirm('<?php echo $this->lang->line("sales_delete_confirmation"); ?>'))
> 		{
158a199
> 		}
Only in opensourcepos/application/views/sales: invoice.php
Only in opensourcepos/application/views/sales: invoice_email.php
Only in opensourcepos/application/views/sales: manage.php
diff -rBwi --ignore-file-name-case pos-prod/application/views/sales/receipt.php opensourcepos/application/views/sales/receipt.php
5c6
< 	echo '<h1 style="text-align: center;">'.$error_message.'</h1>';
---
> 	echo "<div class='alert alert-dismissible alert-danger'>".$error_message."</div>";
8a10,21
> 
> <?php $this->load->view('partial/print_receipt', array('print_after_sale'=>$print_after_sale, 'selected_printer'=>'receipt_printer')); ?>
> 
> <div class="print_hide" id="control_buttons" style="height: 60px; margin-right: -150px; margin-top: 10px;">
> 	<a href="javascript:printdoc();" id="show_print_button"><div class='big_button float_right'><span><?php echo $this->lang->line('common_print'); ?></span></div></a>
> 	<?php /* this line will allow to print and go back to sales automatically.... echo anchor("sales", $this->lang->line('common_print'), array('class'=>'big_button', 'id'=>'show_print_button', 'onclick'=>'window.print();')); */ ?>
> 	<?php echo anchor("sales", "<div class='big_button float_right'><span>".$this->lang->line('sales_register')."</span></div>",
> 		array('id'=>'show_sales_button'));  ?>
> 	<?php echo anchor("sales/manage", "<div class='big_button float_right'><span>".$this->lang->line('sales_takings')."</span></div>",
> 		array('id'=>'show_takings_button')); ?>
> </div>
> 
10a24,27
> 		<?php
> 		if ($this->Appconfig->get('company_logo') == '') 
>         { 
>         ?>
11a29,37
> 		<?php 
> 		}
> 		else 
> 		{ 
> 		?>
> 			<div id="company_name"><img id="image" src="<?php echo base_url('uploads/' . $this->Appconfig->get('company_logo')); ?>" alt="company_logo" /></div>			
> 		<?php
> 		}
> 		?>
18c44,45
< 		<?php if(isset($customer))
---
> 		<?php
> 		if(isset($customer))
25a54,63
> 
> 		<?php
> 		if (!empty($invoice_number))
> 		{
> 		?>
> 			<div id="invoice_number"><?php echo $this->lang->line('recvs_invoice_number').": ".$invoice_number; ?></div>	
> 		<?php 
> 		}
> 		?>
> 
31,36c69,72
< 	<th style="width:25%;"><?php echo $this->lang->line('sales_item_number'); ?></th>
< 	<th style="width:25%;"><?php echo $this->lang->line('items_item'); ?></th>
< 	<th style="width:17%;"><?php echo $this->lang->line('common_price'); ?></th>
< 	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_quantity'); ?></th>
< 	<th style="width:16%;text-align:center;"><?php echo $this->lang->line('sales_discount'); ?></th>
< 	<th style="width:17%;text-align:right;"><?php echo $this->lang->line('sales_total'); ?></th>
---
> 			<th style="width:40%;"><?php echo $this->lang->line('sales_description_abbrv'); ?></th>
> 			<th style="width:20%;"><?php echo $this->lang->line('sales_price'); ?></th>
> 			<th style="width:20%;"><?php echo $this->lang->line('sales_quantity'); ?></th>
> 			<th style="width:20%;" class="total-value"><?php echo $this->lang->line('sales_total'); ?></th>
43,44c79
< 		<td><?php echo $item['item_number']; ?></td>
< 		<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],70); ?></span></td>
---
> 				<td><span class='long_name'><?php echo ucfirst($item['name']); ?></span></td>
46,50c81,82
< 		<td style='text-align:center;'><?php 
< 			echo $item['quantity'] . " " . ($show_stock_locations ? " [" . $item['stock_name'] . "]" : ""); 
< 		?></td>
< 		<td style='text-align:center;'><?php echo $item['discount']; ?></td>
< 		<td style='text-align:right;'><?php echo to_currency($item['price']*$item['quantity']-$item['price']*$item['quantity']*$item['discount']/100); ?></td>
---
> 				<td><?php echo $item['quantity'] . " " . ($show_stock_locations ? " [" . $item['stock_name'] . "]" : ""); ?></td>
> 				<td><div class="total-value"><?php echo to_currency($item[($this->Appconfig->get('show_total_discount') ? 'total' : 'discounted_total')]); ?></div></td>
54,56c85,94
< 	    <td colspan="2" align="center"><?php echo $item['description']; ?></td>
< 		<td colspan="2" ><?php echo $item['serialnumber']; ?></td>
< 		<td colspan="2"><?php echo '&nbsp;'; ?></td>
---
> 				<td colspan="2"><?php echo $item['description']; ?></td>
> 				<td><?php echo $item['serialnumber']; ?></td>
> 			</tr>
> 			<?php
> 			if ($item['discount'] > 0)
> 			{
> 			?>
> 				<tr>
> 					<td colspan="3" class="discount"><?php echo number_format($item['discount'], 0) . " " . $this->lang->line("sales_discount_included")?></td>
> 					<td class="total-value"><?php echo to_currency($item['discounted_total']) ; ?></td>
57a96,101
> 			<?php
> 			}
> 			?>
> 		<?php
> 		}
> 		?>
59a104,115
> 		if ($this->Appconfig->get('show_total_discount') && $discount > 0)
> 		{
> 		?> 
> 			<tr>
> 				<td colspan="3" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_sub_total'); ?></td>
> 				<td style='text-align:right;border-top:2px solid #000000;'><?php echo to_currency($subtotal); ?></td>
> 			</tr>
> 			<tr>
> 				<td colspan="3" class="total-value"><?php echo $this->lang->line('sales_discount'); ?>:</td>
> 				<td class="total-value"><?php echo to_currency($discount*-1); ?></td>
> 			</tr>
> 		<?php
61a118,130
> 
> 		<?php
> 		if ($this->Appconfig->get('receipt_show_taxes'))
> 		{
> 		?> 
> 			<tr>
> 				<td colspan="3" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_sub_total'); ?></td>
> 				<td style='text-align:right;border-top:2px solid #000000;'><?php echo to_currency($this->config->item('tax_included') ? $tax_exclusive_subtotal : $discounted_subtotal); ?></td>
> 			</tr>
> 			<?php
> 			foreach($taxes as $name=>$value)
> 			{
> 			?>
63,64c132,133
< 	<td colspan="4" style='text-align:right;border-top:2px solid #000000;'><?php echo $this->lang->line('sales_sub_total'); ?></td>
< 	<td colspan="2" style='text-align:right;border-top:2px solid #000000;'><?php echo to_currency($subtotal); ?></td>
---
> 					<td colspan="3" class="total-value"><?php echo $name; ?>:</td>
> 					<td class="total-value"><?php echo to_currency($value); ?></td>
65a135,140
> 			<?php
> 			}
> 			?>
> 		<?php
> 		}
> 		?>
67d141
< 	<?php foreach($taxes as $name=>$value) { ?>
69,70d142
< 			<td colspan="4" style='text-align:right;'><?php echo $name; ?>:</td>
< 			<td colspan="2" style='text-align:right;'><?php echo to_currency($value); ?></td>
72d143
< 	<?php }; ?>
73a145
> 		<?php $border = (!$this->Appconfig->get('receipt_show_taxes') && !($this->Appconfig->get('show_total_discount') && $discount > 0)); ?> 
75,76c147,148
< 	<td colspan="4" style='text-align:right;'><?php echo $this->lang->line('sales_total'); ?></td>
< 	<td colspan="2" style='text-align:right'><?php echo to_currency($total); ?></td>
---
> 			<td colspan="3" style='<?php echo $border? 'border-top: 2px solid black;' :''; ?>text-align:right;'><?php echo $this->lang->line('sales_total'); ?></td>
> 			<td style='<?php echo $border? 'border-top: 2px solid black;' :''; ?>text-align:right'><?php echo to_currency($total); ?></td>
79c151,153
<     <tr><td colspan="6">&nbsp;</td></tr>
---
> 		<tr>
> 			<td colspan="4">&nbsp;</td>
> 		</tr>
81a156,157
> 		$only_sale_check = TRUE;
> 		$show_giftcard_remainder = FALSE;
83c159,163
< 	{ ?>
---
> 		{ 
> 			$only_sale_check &= $payment['payment_type'] == $this->lang->line('sales_check');
> 			$splitpayment=explode(':',$payment['payment_type']);
> 			$show_giftcard_remainder |= $splitpayment[0] == $this->lang->line('sales_giftcard');
> 		?>
85,87c165,166
< 		<td colspan="2" style="text-align:right;"><?php echo $this->lang->line('sales_payment'); ?></td>
< 		<td colspan="2" style="text-align:right;"><?php $splitpayment=explode(':',$payment['payment_type']); echo $splitpayment[0]; ?> </td>
< 		<td colspan="2" style="text-align:right"><?php echo to_currency( $payment['payment_amount'] * -1 ); ?>  </td>
---
> 				<td colspan="3" style="text-align:right;"><?php echo $splitpayment[0]; ?> </td>
> 				<td><div class="total-value"><?php echo to_currency( $payment['payment_amount'] * -1 ); ?></div></td>
93c172
<     <tr><td colspan="6">&nbsp;</td></tr>
---
> 		<tr><td colspan="4">&nbsp;</td></tr>
94a174,177
> 		<?php 
> 		if (isset($cur_giftcard_value) && $show_giftcard_remainder)
> 		{
> 		?>
96,97c179,187
< 		<td colspan="4" style='text-align:right;'><?php echo $this->lang->line('sales_change_due'); ?></td>
< 		<td colspan="2" style='text-align:right'><?php echo  $amount_change; ?></td>
---
> 			<td colspan="3" style='text-align:right;'><?php echo $this->lang->line('sales_giftcard_balance'); ?></td>
> 			<td style='text-align:right'><?php echo to_currency($cur_giftcard_value); ?></td>
> 		</tr>
> 		<?php 
> 		}
> 		?>
> 		<tr>
> 			<td colspan="3" style='text-align:right;'> <?php echo $this->lang->line($amount_change >= 0 ? ($only_sale_check ? 'sales_check_balance' : 'sales_change_due') : 'sales_amount_due') ; ?> </td>
> 			<td style='text-align:right'><?php echo to_currency($amount_change); ?></td>
106c196,197
< 	<?php echo "<img src='index.php/barcode?barcode=$sale_id&text=$sale_id&width=250&height=50' />"; ?>
---
> 		<img src='data:image/png;base64,<?php echo $barcode; ?>' /><br>
> 		<?php echo $sale_id; ?>
111,122d202
< <?php if ($this->Appconfig->get('print_after_sale'))
< {
< ?>
< <script type="text/javascript">
< $(window).load(function()
< {
< 	window.print();
< });
< </script>
< <?php
< }
< ?>
diff -rBwi --ignore-file-name-case pos-prod/application/views/sales/receipt_email.php opensourcepos/application/views/sales/receipt_email.php
23,25c24,26
< 	<th style="width:25%;text-align:left;"><?php echo $this->lang->line('sales_item_number'); ?></th>
< 	<th style="width:25%;text-align:left;"><?php echo $this->lang->line('items_item'); ?></th>
< 	<th style="width:17%;text-align:left;"><?php echo $this->lang->line('common_price'); ?></th>
---
> 			<th style="width:25%;"><?php echo $this->lang->line('sales_item_number'); ?></th>
> 			<th style="width:25%;"><?php echo $this->lang->line('items_item'); ?></th>
> 			<th style="width:17%;"><?php echo $this->lang->line('common_price'); ?></th>
36c37
< 		<td><?php echo $item['name']; ?></td>
---
> 				<td><span class='long_name'><?php echo $item['name']; ?></span><span class='short_name'><?php echo character_limiter($item['name'],10); ?></span></td>
diff -rBwi --ignore-file-name-case pos-prod/application/views/sales/register.php opensourcepos/application/views/sales/register.php
9c12
< if (isset($warning))
---
> if (!empty($warning))
23c27,30
< <?php if ($show_stock_locations): ?>
---
> 	<?php
> 	if (count($stock_locations) > 1)
> 	{
> 	?>
26c33,47
< <?php endif; ?>
---
> 	<?php
> 	}
> 	?>
> 
> 	<?php
> 	if ($this->Employee->has_grant('reports_sales', $this->session->userdata('person_id')))
> 	{
> 	?>
> 	<div id="sales_overview" class="small_button">
> 		<a href="<?=site_url($controller_name . '/manage')?>"><span><?php echo $this->lang->line('sales_takings'); ?><span></a>
> 	</div>
> 	<?php
> 	}
> 	?>
> 
36,46c59
< 
< <?php
< if($mode=='sale_retail' or $mode=='sale_wholesale')
< {
< 	echo $this->lang->line('sales_find_or_scan_item');
< }
< else
< {
< 	echo $this->lang->line('sales_find_or_scan_item_or_receipt');
< }
< ?>
---
> 		<?php echo $this->lang->line('sales_find_or_scan_item_or_receipt'); ?>
49,50c62
< <?php echo form_input(array('name'=>'item','id'=>'item','size'=>'40'));?>
< <!-- no need the new item button in sale page
---
> 	<?php echo form_input(array('name'=>'item','id'=>'item','size'=>'40','tabindex'=>'1')); ?>
52c64
< 		<?php echo anchor("items/view/-1/width:360",
---
> 		<?php echo anchor("items/view/-1/width:450",
57c69
< -->
---
> 
86a99
> 				$tabindex = 2;				
89c102,105
< 		$cur_item_info = $this->Item->get_info($item['item_id']);
---
> 					if($tabindex == 3) 
> 					{
> 						$tabindex = 5;
> 					}					
110c124
< 			<td><?php echo $item['price']; ?></td>
---
> 							<td><?php echo to_currency($item['price']); ?></td>
125c139
<         		echo form_input(array('name'=>'quantity','value'=>$item['quantity'],'size'=>'2'));
---
> 				        		echo form_input(array('name'=>'quantity','value'=>$item['quantity'],'size'=>'2','tabindex'=>$tabindex));
135,136c149,156
< 				<td style="color: #2F4F4F";><?php echo $this->lang->line('sales_description_abbrv').':';?></td>
< 				<td colspan=2 style="text-align: left;">
---
> 						<?php 
> 						if($item['allow_alt_description']==1)
> 						{
> 						?>
> 							<td style="color: #2F4F4F;"><?php echo $this->lang->line('sales_description_abbrv').':';?></td>
> 						<?php 
> 						}
> 						?>
137a158
> 						<td colspan=2 style="text-align: left;">
159c180
< 				<td style="color: #2F4F4F";>
---
> 						<td style="color: #2F4F4F;">
167c188
< 				<td colspan=3 style="text-align: left;">
---
> 						<td colspan="4" style="text-align: left;">
186a207
> 					$tabindex = $tabindex + 1;					
204c224,225
< 		echo form_open("sales/select_customer",array('id'=>'select_customer_form')); ?>
---
> 		echo form_open("sales/select_customer",array('id'=>'select_customer_form'));
> 	?>
210c233
< 		<?php echo anchor("customers/view/-1/width:350",
---
> 			<?php echo anchor("customers/view/-1/width:400",
222c246
< 		<div class="float_left" style="width: 45%; font-weight: bold;"><?php echo to_currency($subtotal); ?></div>
---
> 		<div class="float_left" style="width: 45%; font-weight: bold;"><?php echo to_currency($this->config->item('tax_included') ? $tax_exclusive_subtotal : $subtotal); ?></div>
240a262
> 		<?php echo form_open("sales/cancel_sale", array('id'=>'cancel_sale_form')); ?>
243,245c265
< 		<?php echo form_open("sales/cancel_sale",array('id'=>'cancel_sale_form')); ?>
< 		<div class='small_button' id='cancel_sale_button'
< 			style='margin-top: 5px;'>
---
> 			<div class='small_button' id='cancel_sale_button' style='float:left; margin-top: 5px;'>
248c268,271
< 		</form>
---
> 			
> 			<div class='small_button' id='suspend_sale_button' style='float:right; margin-top: 5px;'>
> 				<span><?php echo $this->lang->line('sales_suspend_sale'); ?></span>
> 			</div>
249a273,275
> 	
> 		</form>
> 
256d282
< 			<div id="finish_sale">
257a284,285
> 
> 			<div id="finish_sale">
267c293,294
< 					echo $this->lang->line('sales_email_receipt'). ': '. form_checkbox(array(
---
> 					echo $this->lang->line('sales_email_receipt'). ': '
> 						. form_checkbox(array(
277c304
< 					echo "<div class='small_button' id='finish_sale_button' style='float:left;margin-top:5px;'><span>".$this->lang->line('sales_complete_sale')."</span></div>";
---
> 					echo "<div class='small_button' id='finish_sale_button' style='float:left; margin-top:5px;' tabindex='3'><span>".$this->lang->line('sales_complete_sale')."</span></div>";
279d305
< 				echo "<div class='small_button' id='suspend_sale_button' style='float:right;margin-top:5px;'><span>".$this->lang->line('sales_suspend_sale')."</span></div>";
302,305c327,328
< 	<div id="Payment_Types">
< 
< 		<div style="height: 100px;">
< 
---
> 		<div id="payment_details">
> 			<div>
309a333,380
> 							<?php echo $this->lang->line('sales_print_after_sale'); ?>
> 						</td>
> 						<td>
> 							<?php
> 							if ($print_after_sale)
> 							{
> 								echo form_checkbox(array('name'=>'sales_print_after_sale','id'=>'sales_print_after_sale','checked'=>'checked'));
> 							}
> 							else
> 							{
> 								echo form_checkbox(array('name'=>'sales_print_after_sale','id'=>'sales_print_after_sale'));
> 							}
> 							?>
> 						</td>
> 					</tr>
> 					<?php
> 					if ($mode == "sale") 
> 					{
> 					?>
> 					<tr>
> 						<td>
> 							<?php echo $this->lang->line('sales_invoice_enable'); ?>
> 						</td>
> 						<td>
> 							<?php if ($invoice_number_enabled)
> 							{
> 								echo form_checkbox(array('name'=>'sales_invoice_enable','id'=>'sales_invoice_enable','checked'=>'checked'));
> 							}
> 							else
> 							{
> 								echo form_checkbox(array('name'=>'sales_invoice_enable','id'=>'sales_invoice_enable'));
> 							}
> 							?>
> 						</td>
> 					</tr>
> 					<tr>
> 						<td>
> 							<?php echo $this->lang->line('sales_invoice_number').':   ';?>
> 						</td>
> 						<td>
> 							<?php echo form_input(array('name'=>'sales_invoice_number','id'=>'sales_invoice_number','value'=>$invoice_number,'size'=>10));?>
> 						</td>
> 					</tr>
> 					<?php 
> 					}
> 					?>
> 					<tr>
> 						<td>
317c388,389
< 					<td><span id="amount_tendered_label"><?php echo $this->lang->line( 'sales_amount_tendered' ).': '; ?></span>
---
> 						<td>
> 							<span id="amount_tendered_label"><?php echo $this->lang->line( 'sales_amount_tendered' ).': '; ?></span>
320c392
< 				<?php echo form_input( array( 'name'=>'amount_tendered', 'id'=>'amount_tendered', 'value'=>to_currency_no_money($amount_due), 'size'=>'10' ) );	?>
---
> 							<?php echo form_input( array( 'name'=>'amount_tendered', 'id'=>'amount_tendered', 'value'=>to_currency_no_money($amount_due), 'size'=>'10','tabindex'=>4 ) ); ?>
324,325c396,397
< 			<div class='small_button' id='add_payment_button'
< 				style='float: left; margin-top: 5px;'>
---
> 				
> 				<div class='small_button' id='add_payment_button' style='float: left; margin-top: 5px;'>
328c400
< 		</div>
---
> 
329a402
> 			</div>
379d446
< <div class="clearfix" style="margin-bottom: 30px;">&nbsp;</div>
381,382c448
< 
< <?php $this->load->view("partial/footer"); ?>
---
> <div class="clearfix" style="margin-bottom: 30px;">&nbsp;</div>
394c460
< 			return row[1];
---
> 			return (row.length > 1 && row[1]) || row[0];
407c473
<     	$(this).attr('value',"<?php echo $this->lang->line('sales_start_typing_item_name'); ?>");
---
>         $(this).val("<?php echo $this->lang->line('sales_start_typing_item_name'); ?>");
410c476
< 	$('#item,#customer').click(function()
---
>     var clear_fields = function()
412,413c478,485
<     	$(this).attr('value','');
<     });
---
>         if ($(this).val().match("<?php echo $this->lang->line('sales_start_typing_item_name') . '|' . 
>         	$this->lang->line('sales_start_typing_customer_name'); ?>"))
>         {
>             $(this).val('');
>         }
>     };
> 
>     $('#item, #customer').click(clear_fields);
432c504
<     	$(this).attr('value',"<?php echo $this->lang->line('sales_start_typing_customer_name'); ?>");
---
>     	$(this).val("<?php echo $this->lang->line('sales_start_typing_customer_name'); ?>");
435c507
< 	$('#comment').change(function() 
---
> 	$('#comment').keyup(function() 
439a512,534
> 	$('#sales_invoice_number').keyup(function() 
> 	{
> 		$.post('<?php echo site_url("sales/set_invoice_number");?>', {sales_invoice_number: $('#sales_invoice_number').val()});
> 	});
> 
> 	var enable_invoice_number = function() 
> 	{
> 		var enabled = $("#sales_invoice_enable").is(":checked");
> 		$("#sales_invoice_number").prop("disabled", !enabled).parents('tr').show();
> 		return enabled;
> 	}
> 
> 	enable_invoice_number();
> 
> 	$("#sales_print_after_sale").change(function() {
> 		$.post('<?php echo site_url("sales/set_print_after_sale");?>', {sales_print_after_sale: $(this).is(":checked")});
> 	});
> 	
> 	$("#sales_invoice_enable").change(function() {
> 		var enabled = enable_invoice_number();
> 		$.post('<?php echo site_url("sales/set_invoice_number_enabled");?>', {sales_invoice_number_enabled: enabled});
> 	});
> 	
458,459c553,554
< 			$('#finish_sale_form').attr('action', '<?php echo site_url("sales/suspend"); ?>');
<     		$('#finish_sale_form').submit();
---
> 			$('#cancel_sale_form').attr('action', '<?php echo site_url("sales/suspend"); ?>');
>     		$('#cancel_sale_form').submit();
476c571,586
< 	$("#payment_types").change(checkPaymentTypeGiftcard).ready(checkPaymentTypeGiftcard)
---
> 	$("#payment_types").change(check_payment_type_gifcard).ready(check_payment_type_gifcard)
> 	
> 	$("#amount_tendered").keyup(function(event){
> 		if(event.which == 13) {
> 			$('#add_payment_form').submit();
> 		}
> 	});	
> 	
>     $( "#finish_sale_button" ).keypress(function( event ) {
> 		if ( event.which == 13 ) {
> 			if (confirm('<?php echo $this->lang->line("sales_confirm_finish_sale"); ?>'))
> 			{
> 				$('#finish_sale_form').submit();
> 			}
> 		}
> 	});	    
479c589
< function post_item_form_submit(response)
---
> function post_item_form_submit(response, stay_open)
484a595,601
> 		$("#item").val(response.item_id);
> 		if (stay_open)
> 		{
> 			$("#add_item_form").ajaxSubmit();
> 		}
> 		else
> 		{
487a605
> }
493c611
< 		$("#customer").attr("value",response.person_id);
---
> 		$("#customer").val(response.person_id);
498c616
< function checkPaymentTypeGiftcard()
---
> function check_payment_type_gifcard()
503,504c621
< 		$("#amount_tendered").val('');
< 		$("#amount_tendered").focus();
---
> 		$("#amount_tendered").val('').focus();
508a626
> 		$("#amount_tendered").val('<?php echo $amount_due; ?>');
512a631
> <?php $this->load->view("partial/footer"); ?>
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/application/views/sales/suspended.php opensourcepos/application/views/sales/suspended.php
16c16
< 			<td><?php echo date('m/d/Y',strtotime($suspended_sale['sale_time']));?></td>
---
> 			<td><?php echo date($this->config->item('dateformat'),strtotime($suspended_sale['sale_time']));?></td>
diff -rBwi --ignore-file-name-case pos-prod/application/views/suppliers/form.php opensourcepos/application/views/suppliers/form.php
5c5
< <ul id="error_message_box"></ul>
---
> <ul id="error_message_box" class="error_message_box"></ul>
19a20,30
> <div class="field_row clearfix">	
> <?php echo form_label($this->lang->line('suppliers_agency_name').':', 'agency_name'); ?>
> 	<div class='form_field'>
> 	<?php echo form_input(array(
> 		'name'=>'agency_name',
> 		'id'=>'agency_name_input',
> 		'value'=>$person_info->agency_name)
> 	);?>
> 	</div>
> </div>
> 
diff -rBwi --ignore-file-name-case pos-prod/application/views/suppliers/manage.php opensourcepos/application/views/suppliers/manage.php
8c8
<     enable_search('<?php echo site_url("$controller_name/suggest")?>','<?php echo $this->lang->line("common_confirm_search")?>',false);
---
>     enable_search({suggest_url : '<?php echo site_url("$controller_name/suggest")?>', confirm_search_message : '<?php echo $this->lang->line("common_confirm_search")?>'});
24,26c24
< 				2: { sorter: false},
< 				3: { sorter: false},
< 				4: { sorter: false}
---
> 				6: { sorter: false} 
70c68
< <?php echo $this->pagination->create_links();?>
---
> <div id="pagination"><?= $links ?></div>
78a77
> 		<input type="hidden" name ='limit_from' id='limit_from'/>
Only in opensourcepos: bower.json
Only in opensourcepos: COPYING
Only in opensourcepos/css: barcode_font.css
Only in pos-prod/css: editsale.css
diff -rBwi --ignore-file-name-case pos-prod/css/general.css opensourcepos/css/general.css
99c99
< 	font-size:0.8em;
---
> 	font-size:0.9em;
141,150d140
< }
< 
< input#search
< {
< 	padding: 0px;
< }
< 
< #select_customer_form input, #select_supplier_form input
< {
< 	width: 95%;
Only in opensourcepos/css: invoice.css
Only in opensourcepos/css: invoice_email.css
Only in opensourcepos/css: jquery-ui-timepicker-addon.css
Only in opensourcepos/css: jquery-ui.structure.css
Only in opensourcepos/css: jquery-ui.theme.css
diff -rBwi --ignore-file-name-case pos-prod/css/login.css opensourcepos/css/login.css
1,11c1
< body
< {
< 	text-align:center;
< }
< #container
< {
< 	position:relative;
< 	margin-left:auto;
< 	margin-right:auto;
< 	margin-top:20px;
< 	width:360px;
---
> @import url(https://fonts.googleapis.com/css?family=Open+Sans:300,400,700);
12a3,7
> *{margin:0;padding:0;}
> 
> body{
>   background:#567;
>   font-family:'Open Sans',sans-serif;
15,21c10,16
< #top
< {
< 	position:relative;
< 	width:100%;
< 	height:20px;
< 	padding:2px;
< 	background-color:#005B7F;
---
> .button{
>   width:100px;
>   background:#3399cc;
>   display:block;
>   margin:0 auto;
>   margin-top:1%;
>   padding:10px;
23,25c18,22
< 	font-family:Verdana;
< 	color:white;
< 	font-size:12pt;
---
>   text-decoration:none;
>   color:#fff;
>   cursor:pointer;
>   transition:background .3s;
>   -webkit-transition:background .3s;
28,37c25,26
< #login_form
< {
< 	position:relative;
< 	width:100%;
< 	height:230px;
< 	padding:2px;	
< 	font-family:Verdana;
< 	color:white;
< 	font-size:10pt;
< 	background-color:#A7A7A7;
---
> .button:hover{
>   background:#2288bb;
40,44c29,35
< #welcome_message
< {
< 	text-align:center;
< 	margin-top:10px;
< 	margin-bottom:20px;
---
> #login{
>   width:400px;
>   margin:0 auto;
>   margin-top:8px;
>   margin-bottom:2%;
>   transition:opacity 1s;
>   -webkit-transition:opacity 1s;
47,48c38,43
< .error
< {
---
> #triangle{
>   width:0;
>   border-top:12x solid transparent;
>   border-right:12px solid transparent;
>   border-bottom:12px solid #3399cc;
>   border-left:12px solid transparent;
50,57d44
< 	border:3px solid #d3153b;
< 	background-color:#fbe6f2;
< 	padding:5px;
< 	width:80%;
< 	text-align:center;
< 	font-size:18px;
< 	margin-bottom:20px;
< 	
60,64c47,53
< .form_field_label
< {
< 	float:left;
< 	margin-left:20px;
< 	width:30%;
---
> #login h1{
>   background:#3399cc;
>   padding:20px 0;
>   font-size:140%;
>   font-weight:300;
>   text-align:center;
>   color:#fff;
67,70c56,58
< .form_field
< {
< 	float:left;
< 	width:30%;
---
> form{
>   background:#f0f0f0;
>   padding:6% 4%;
73,77c61,69
< #submit_button
< {
< 	position:absolute;
< 	bottom:60px;
< 	right:60px;
---
> input[type="text"],input[type="password"]{
>   width:92%;
>   background:#fff;
>   margin-bottom:4%;
>   border:1px solid #ccc;
>   padding:4%;
>   font-family:'Open Sans',sans-serif;
>   font-size:95%;
>   color:#555;
80,82c72,82
< input
< {
< 	font-family:Arial;
---
> input[type="submit"]{
>   width:100%;
>   background:#3399cc;
>   border:0;
>   padding:4%;
>   font-family:'Open Sans',sans-serif;
>   font-size:100%;
>   color:#fff;
>   cursor:pointer;
>   transition:background .3s;
>   -webkit-transition:background .3s;
84a85,87
> input[type="submit"]:hover{
>   background:#2288bb;
> }
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/css/menubar.css opensourcepos/css/menubar.css
19c19
< 	width:875px;
---
> 	width:960px;
46c46
< 	font-size:8pt;
---
> 	font-size:11px;
60c60
< 	font-size:14pt;
---
> 	font-size:14px;
80c80
< 	font-size:8pt;
---
> 	font-size:10px;
91c91
< 	font-size:8pt;
---
> 	font-size:10px;
diff -rBwi --ignore-file-name-case pos-prod/css/ospos.css opensourcepos/css/ospos.css
10a11,14
> @import url(invoice.css);
> @import url(jquery-ui.structure.css);
> @import url(jquery-ui.theme.css);
> @import url(jquery-ui-timepicker-addon.css);
17c21
< 	font-family: "Lucida Grande", "Trebuchet MS", Tahoma, Verdana, sans-serif;
---
> 	font-family: Arial, sans-serif, "Lucida Grande", "Trebuchet MS", Tahoma, Verdana;
33c37
< 	padding:0px;
---
> 	padding-bottom: 10px;
86c90
< #new_button
---
> #new_button, #print_button
130c134
< 	width:70%;
---
> 	width:93%;
137a142,146
> #config_info .wide
> {
> 	width: 30%;
> }
> 
147a157,181
> }
> 
> input#search
> {
> 	padding: 0px;
> }
> 
> select#stock_location
> {
> 	border: none;
> }
> 
> #select_customer_form input, #select_supplier_form input
> {
> 	width: 95%;
> }
> 
> input.quantity, input.discount
> {
> 	width: 40px;
> }
> 
> a.rollover img
> {
> 	padding: 3px;	
diff -rBwi --ignore-file-name-case pos-prod/css/ospos_print.css opensourcepos/css/ospos_print.css
1c1
< body
---
> #receipt_wrapper 
3c3
< 	background-color:#FFFFFF;
---
> 	/*background-color:#FFFFFF;*/
28,32d27
< .long_name
< {
< 	display:none;
< }
< 
41a37,74
> 
> /* Hide links in table for printing */
> table.innertable
> {
> 	display: table;
> }
> 
> table.innertable a 
> {
> 	color: #000000;
> 	text-decoration: none;	
> }
> 
> table.report a.expand 
> {
> 	visibility: hidden;
> }
> 
> table.report a 
> {
> 	color: #000000;
> 	text-decoration: none;
> }
> 
> table.innertable thead 
> {
> 	/*display:none;*/ 
> }
> 
> .print_show 
> {
> 	display:block !important; 
> }
> 
> .print_hide
> {
> 	display:none !important;
> }
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/css/popupbox.css opensourcepos/css/popupbox.css
51a52,58
> #permission_list ul li
> {
> 	padding-left:20px;
> 	padding-bottom: 0px;
> 	list-style:none;
> }
> 
75c82
< #error_message_box
---
> .error_message_box
79a87
> 	font-weight:bold;
diff -rBwi --ignore-file-name-case pos-prod/css/receipt.css opensourcepos/css/receipt.css
3d2
< 	font-family:Arial;
17a17,22
> #company_name img
> {
> 	max-width: 150px;
> 	max-height: 150px;
> }
> 
41a47,52
> 	margin-bottom:5px;	
> 	
> }
> 
> #receipt_items tr {
> 	margin-bottom:5px;	
59a71,81
> }
> 
> .total-value 
> {
> 	text-align: right;		
> }
> 
> .discount
> {
> 	font-weight: bold;
> }
diff -rBwi --ignore-file-name-case pos-prod/css/register.css opensourcepos/css/register.css
5d4
< 	font-family:Arial;
90d88
< 	font-family:Arial;
108c106
< #Payment_Types
---
> #payment_details
160a159,164
> #sales_overview
> {
> 	position:absolute;
> 	top:3px;
> 	right:99px;
> }
\ No newline at end of file
Only in opensourcepos/css: tabcontent.css
diff -rBwi --ignore-file-name-case pos-prod/css/tables.css opensourcepos/css/tables.css
29c29
< #table_action_header ul li span
---
> #table_action_header ul li span a
97c97
< table.tablesorter thead tr .headerSortUp 
---
> table.tablesorter thead tr .tablesorter-headerAsc 
99a100,101
> 	background-repeat:no-repeat;
> 	background-position: right; 
102c104
< table.tablesorter thead tr .headerSortDown 
---
> table.tablesorter thead .tablesorter-headerDesc 
104a107,108
> 	background-repeat:no-repeat;
> 	background-position: right; 
125a130,139
> }
> 
> .totals table tr:last-child td
> {
> 	font-weight: bold;
> }
> 
> #pagination a, #pagination strong
> {
> 	padding: 2px 3px;
diff -rBwi --ignore-file-name-case pos-prod/database/2.2.2_to_2.3.sql opensourcepos/database/2.2.2_to_2.3.sql
7a8,9
> INSERT INTO `ospos_stock_locations` ( `deleted`, `location_name` ) VALUES ('0', 'stock');
> 
10c12
<   `location_id` int(11) NOT NULL,
---
>   `location_id` int(11),
17,18c19,27
< ALTER TABLE ospos_inventory
<  ADD COLUMN trans_location int(11),
---
> UPDATE `ospos_item_quantities` SET location_id = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
> 
> ALTER TABLE `ospos_inventory`
>  ADD COLUMN trans_location int(11);
> 
> UPDATE `ospos_inventory` SET trans_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
> 
> ALTER TABLE `ospos_inventory`
>  MODIFY COLUMN trans_location int(11) NOT NULL,
24c33,36
< --INSERT INTO `ospos_stock_locations` ( `deleted`, `location_name` ) VALUES ('0', 'stock');
---
> ALTER TABLE `ospos_receivings_items`
>  ADD COLUMN item_location int(11);
>  
> UPDATE `ospos_receivings_items` SET item_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
27c39
<  ADD COLUMN item_location int(11),
---
>  MODIFY COLUMN `item_location` INT(11) NOT NULL,
30a43,46
> ALTER TABLE `ospos_sales_items`
>  ADD COLUMN `item_location` int(11);
> 
> UPDATE `ospos_sales_items` SET item_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
32,33c48,49
< ALTER TABLE ospos_sales_items
<  ADD COLUMN item_location int(11),
---
> ALTER TABLE `ospos_sales_items`
>  MODIFY `item_location` INT(11) NOT NULL,
38c54
< ALTER TABLE ospos_sales_items_taxes
---
> ALTER TABLE `ospos_sales_items_taxes`
41c57
< ALTER TABLE ospos_sales_payments
---
> ALTER TABLE `ospos_sales_payments`
44,45c60,66
< ALTER TABLE ospos_sales_suspended_items
<  ADD COLUMN item_location int(11),
---
> ALTER TABLE `ospos_sales_suspended_items`
>  ADD COLUMN `item_location` int(11);
> 
> UPDATE `ospos_sales_suspended_items` SET item_location = (SELECT MIN(`location_id`) FROM `ospos_stock_locations`);
> 
> ALTER TABLE `ospos_sales_suspended_items`
>  MODIFY COLUMN `item_location` int(11) NOT NULL,
50a72
>   MODIFY COLUMN `location_id` INT(11) NOT NULL,
Only in opensourcepos/database: 2.3.1_to_2.3.2.sql
Only in opensourcepos/database: 2.3.2_to_2.3.3.sql
Only in opensourcepos/database: 2.3.4_to_2.4.sql
diff -rBwi --ignore-file-name-case pos-prod/database/2.3_migrate_locations.sql opensourcepos/database/2.3_migrate_locations.sql
1,6c1
< UPDATE `ospos_items` set custom1=NULL, custom2=NULL, custom3=NULL, custom4=NULL, custom5=NULL, custom6=NULL, custom7=null, custom8=NULL, custom9=NULL, custom10=NULL;
< UPDATE ospos_items SET custom1=location;
< UPDATE ospos_items SET location='PGS';
< INSERT INTO `ospos_stock_locations` ( `deleted`, `location_name` ) VALUES ('0', 'stock');
< --INSERT INTO ospos_stock_locations (location_name) (SELECT location FROM ospos_items WHERE NOT EXISTS (select location from ospos_stock_locations where location_name = location));
< INSERT INTO ospos_stock_locations (location_name) (SELECT DISTINCT location FROM ospos_items);
---
> INSERT INTO ospos_stock_locations (location_name) (SELECT location FROM ospos_items WHERE NOT EXISTS (select location from ospos_stock_locations where location_name = location));
Only in opensourcepos/database: 2.3_to_2.3.1.sql
Only in opensourcepos/database: constraints.sql
diff -rBwi --ignore-file-name-case pos-prod/database/database.sql opensourcepos/database/database.sql
1,15c1
< -- phpMyAdmin SQL Dump
< -- version 3.3.9
< -- http://www.phpmyadmin.net
< --
< -- Host: localhost
< -- Generation Time: Apr 08, 2011 at 04:27 PM
< -- Server version: 5.1.54
< -- PHP Version: 5.3.3
< 
< --
< -- Database: `pos`
< --
< 
< -- --------------------------------------------------------
< 
---
> -- >> This file is autogenerated from tables.sql and constraints.sql. Do not modify directly << --
39c25,60
< ('website', '');
---
> ('website', ''),
> ('recv_invoice_format', '$CO'),
> ('sales_invoice_format', '$CO'),
> ('tax_included', '0'),
> ('invoice_default_comments', 'This is a default comment'),
> ('company_logo', ''),
> ('barcode_content', 'id'),
> ('barcode_type', 'Code39'),
> ('barcode_width', '250'),
> ('barcode_height', '50'),
> ('barcode_quality', '100'),
> ('barcode_font', 'Arial'),
> ('barcode_font_size', '10'),
> ('barcode_first_row', 'category'),
> ('barcode_second_row', 'item_code'),
> ('barcode_third_row', 'unit_price'),
> ('barcode_num_in_row', '2'),
> ('barcode_page_width', '100'),      
> ('barcode_page_cellspacing', '20'),
> ('barcode_generate_if_empty', '0'),
> ('receipt_show_taxes', '0'),
> ('use_invoice_template', '1'),
> ('invoice_email_message', 'Dear $CU, In attachment the receipt for sale $INV'),
> ('print_silently', '1'),
> ('print_header', '0'),
> ('print_footer', '0'),
> ('print_top_margin', '0'),
> ('print_left_margin', '0'),
> ('print_bottom_margin', '0'),
> ('print_right_margin', '0'),
> ('default_sales_discount', '0'),
> ('lines_per_page', '25'),
> ('show_total_discount', '1'),
> ('dateformat', 'm/d/Y'),
> ('timeformat', 'H:i:s'),
> ('currency_symbol', '$');
48a70
>   `company_name` varchar(255) DEFAULT NULL,
89a112
>   `record_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
91c114
<   `giftcard_number` varchar(25) COLLATE utf8_unicode_ci NOT NULL,
---
>   `giftcard_number` int(10) NOT NULL,
94c117
<   `person_id` INT NOT NULL,
---
>   `person_id` INT(10) DEFAULT NULL,
96,97c119,121
<   UNIQUE KEY `giftcard_number` (`giftcard_number`)
< ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=48 ;
---
>   UNIQUE KEY `giftcard_number` (`giftcard_number`),
>   KEY `person_id` (`person_id`)
> ) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
122c146
< ) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
---
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
143,144c167,168
<   `quantity` decimal(15,2) NOT NULL DEFAULT '0.00',
<   `reorder_level` decimal(15,2) NOT NULL DEFAULT '0.00',
---
>   `reorder_level` decimal(15,2) NOT NULL DEFAULT '0',
>   `receiving_quantity` int(11) NOT NULL DEFAULT '1',
145a170
>   `pic_id` int(10) DEFAULT NULL,
161,162c186,187
<   KEY `ospos_items_ibfk_1` (`supplier_id`)
< ) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
---
>   KEY `supplier_id` (`supplier_id`)
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
198c223
< ) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
---
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
232c257
<   `quantity` int(11) NOT NULL,
---
>   `quantity` int(11) NOT NULL DEFAULT '0',
236c261
< ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=0 ;
---
> ) ENGINE=InnoDB  DEFAULT CHARSET=utf8  ;
278a304
>   `gender` int(1) DEFAULT NULL,
290c316
< ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;
---
> ) ENGINE=InnoDB  DEFAULT CHARSET=utf8  ;
305a332
>   `permission_id` varchar(255) NOT NULL,
307,309c334,336
<   `person_id` int(10) NOT NULL,
<   PRIMARY KEY (`module_id`,`person_id`),
<   KEY `person_id` (`person_id`)
---
>   `location_id` int(10) DEFAULT NULL,
>   PRIMARY KEY (`permission_id`),
>   KEY `module_id` (`module_id`)
316,317c343,399
< INSERT INTO `ospos_permissions` (`module_id`, `person_id`) VALUES
< ('config', 1),
---
> INSERT INTO `ospos_permissions` (`permission_id`, `module_id`) VALUES
> ('reports_customers', 'reports'),
> ('reports_receivings', 'reports'),
> ('reports_items', 'reports'),
> ('reports_employees', 'reports'),
> ('reports_suppliers', 'reports'),
> ('reports_sales', 'reports'),
> ('reports_discounts', 'reports'),
> ('reports_taxes', 'reports'),
> ('reports_inventory', 'reports'),
> ('reports_categories', 'reports'),
> ('reports_payments', 'reports'),
> ('customers', 'customers'),
> ('employees', 'employees'),
> ('giftcards', 'giftcards'),
> ('items', 'items'),
> ('item_kits', 'item_kits'),
> ('receivings', 'receivings'),
> ('reports', 'reports'),
> ('sales', 'sales'),
> ('config', 'config'),
> ('suppliers', 'suppliers');
> 
> INSERT INTO `ospos_permissions` (`permission_id`, `module_id`, `location_id`) VALUES
> ('items_stock', 'items', 1),
> ('sales_stock', 'sales', 1),
> ('receivings_stock', 'receivings', 1);
> 
> -- --------------------------------------------------------
> 
> --
> -- Table structure for table `ospos_grants`
> --
> 
> CREATE TABLE `ospos_grants` (
>   `permission_id` varchar(255) NOT NULL,
>   `person_id` int(10) NOT NULL,
>   PRIMARY KEY (`permission_id`,`person_id`)
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
> 
> --
> -- Dumping data for table `ospos_grants`
> --
> -- --------------------------------------------------------
> 
> INSERT INTO `ospos_grants` (`permission_id`, `person_id`) VALUES
> ('reports_customers', 1),
> ('reports_receivings', 1), 
> ('reports_items', 1),
> ('reports_inventory', 1),
> ('reports_employees', 1),
> ('reports_suppliers', 1),
> ('reports_sales', 1),
> ('reports_discounts', 1),
> ('reports_taxes', 1),
> ('reports_categories', 1),
> ('reports_payments', 1),    
325a408,411
> ('config', 1),
> ('items_stock', 1),
> ('sales_stock', 1),
> ('receivings_stock', 1),
328,329d413
< -- --------------------------------------------------------
< 
340a425
>   `invoice_number` varchar(32) DEFAULT NULL,
343,344c428,430
<   KEY `employee_id` (`employee_id`)
< ) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
---
>   KEY `employee_id` (`employee_id`),
>   UNIQUE KEY `invoice_number` (`invoice_number`)
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
367a454
>   `receiving_quantity` int(11) NOT NULL DEFAULT '1',
387a475
>   `invoice_number` varchar(32) DEFAULT NULL,
389d476
<   `payment_type` varchar(512) DEFAULT NULL,
392,393c479,482
<   KEY `employee_id` (`employee_id`)
< ) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
---
>   KEY `employee_id` (`employee_id`),
>   KEY `sale_time` (`sale_time`),
>   UNIQUE KEY `invoice_number` (`invoice_number`)
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
479a569
>   `invoice_number` varchar(32) DEFAULT NULL,
481d570
<   `payment_type` varchar(512) DEFAULT NULL,
485c574
< ) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
---
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8  ;
565c654
<   `session_id` varchar(40) NOT NULL DEFAULT '0',
---
>   `id` varchar(40) NOT NULL DEFAULT '0',
567,570c656,658
<   `user_agent` varchar(120) NOT NULL,
<   `last_activity` int(10) unsigned NOT NULL DEFAULT '0',
<   `user_data` text,
<   PRIMARY KEY (`session_id`)
---
>   `data` blob NOT NULL,
>   `timestamp` int(10) unsigned NOT NULL DEFAULT '0',
>   PRIMARY KEY (`id`)
585c673
<   `location_name` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
---
>   `location_name` varchar(255) DEFAULT NULL,
588c676
< ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8;
---
> ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 ;
604a693
>   `agency_name` varchar(255) NOT NULL,
637c727,728
<   ADD CONSTRAINT `ospos_inventory_ibfk_2` FOREIGN KEY (`trans_user`) REFERENCES `ospos_employees` (`person_id`);
---
>   ADD CONSTRAINT `ospos_inventory_ibfk_2` FOREIGN KEY (`trans_user`) REFERENCES `ospos_employees` (`person_id`),
>   ADD CONSTRAINT `ospos_inventory_ibfk_3` FOREIGN KEY (`trans_location`) REFERENCES `ospos_stock_locations` (`location_id`);
662,663c753,761
<   ADD CONSTRAINT `ospos_permissions_ibfk_1` FOREIGN KEY (`person_id`) REFERENCES `ospos_employees` (`person_id`),
<   ADD CONSTRAINT `ospos_permissions_ibfk_2` FOREIGN KEY (`module_id`) REFERENCES `ospos_modules` (`module_id`);
---
>   ADD CONSTRAINT `ospos_permissions_ibfk_1` FOREIGN KEY (`module_id`) REFERENCES `ospos_modules` (`module_id`) ON DELETE CASCADE,
>   ADD CONSTRAINT `ospos_permissions_ibfk_2` FOREIGN KEY (`location_id`) REFERENCES `ospos_stock_locations` (`location_id`) ON DELETE CASCADE;
> 
> --
> -- Constraints for table `ospos_grants`
> --
> ALTER TABLE `ospos_grants`
>   ADD CONSTRAINT `ospos_grants_ibfk_1` foreign key (`permission_id`) references `ospos_permissions` (`permission_id`) ON DELETE CASCADE,
>   ADD CONSTRAINT `ospos_grants_ibfk_2` foreign key (`person_id`) references `ospos_employees` (`person_id`) ON DELETE CASCADE;
746a845,851
>   
> --
> -- Constraints for table `ospos_giftcards`
> --
> ALTER TABLE `ospos_giftcards`
>   ADD CONSTRAINT `ospos_giftcards_ibfk_1` FOREIGN KEY (`person_id`) REFERENCES `ospos_people` (`person_id`);
> 
Only in opensourcepos/database: migrate_phppos_dist.sql
Only in opensourcepos/database: phppos_migrate.sql
Only in opensourcepos/database: rename_tables.sql
Only in opensourcepos/database: resetdatabase.sh
Only in opensourcepos/database: tables.sql
Only in opensourcepos: dist
Only in opensourcepos: docker
Only in opensourcepos: Dockerfile
Only in opensourcepos: font
Only in opensourcepos: generate_languages.php
Only in pos-prod: git-svn-diff.sh
Only in opensourcepos: Gruntfile.js
Only in opensourcepos/images: favicon.ico
Only in opensourcepos/images: jquery-ui
Only in opensourcepos/images: logo.gif
Only in opensourcepos/images: tabbg.gif
Only in pos-prod/images: Thumbs.db
diff -rBwi --ignore-file-name-case pos-prod/import_customers.csv opensourcepos/import_customers.csv
1,2c1,2
< First Name,Last Name,E-Mail,Phone Number,Address 1,Address2,City,State,Zip,Country,Comments,Account Number,Taxable
< Bob,Smith,bsmith@nowhere.com,585-555-1111,123 Nowhere Street,Apt 4,Awesome,NY,11111,USA,Awesome guy,,y
\ No newline at end of file
---
> First Name,Last Name,Gender,E-Mail,Phone Number,Address 1,Address2,City,State,Zip,Country,Comments,Account Number,Taxable
> Bob,Smith,1,bsmith@nowhere.com,585-555-1111,123 Nowhere Street,Apt 4,Awesome,NY,11111,USA,Awesome guy,,y
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/import_items.csv opensourcepos/import_items.csv
1c1,2
< UPC/EAN/ISBN,Item Name,Category,Supplier ID,Cost Price,Unit Price,Tax 1 Name,Tax 1 Percent,Tax 2 Name ,Tax 2 Percent,Quantity,Reorder Level,Location,Description,Allow Alt Description,Item has Serial Number33333333,Apple iMac,Computers,,800,1200,Tax 1,8,Tax 2,10,10,1,Earth,Best Computer ever,y,
\ No newline at end of file
---
> UPC/EAN/ISBN,Item Name,Category,Supplier ID,Cost Price,Unit Price,Tax 1 Name,Tax 1 Percent,Tax 2 Name ,Tax 2 Percent,Reorder Level,Description,Allow Alt Description,Item has Serial Number,custom1,custom2,custom3,custom4,custom5,custom6,custom7,custom8,custom9,custom10,location_id,quantity
> 33333333,Apple iMac,Computers,,800,1200,Tax 1,8,Tax 2,10,1,Best Computer ever,y,,"Oz, Frank",The Bunny and the Hill,"Monkeys,Giraffes,Gorillas",English,New,Apple,,1999,D3lk3jlkjs,Hardbound,1,100
diff -rBwi --ignore-file-name-case pos-prod/index.php opensourcepos/index.php
1a2,37
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
19d54
<  *
21c56,57
< 	define('ENVIRONMENT', 'production');
---
> 	define('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');
> 
30,32d65
< 
< if (defined('ENVIRONMENT'))
< {
36c69,70
< 			error_reporting(E_ALL);
---
> 		error_reporting(-1);
> 		ini_set('display_errors', 1);
41c75,83
< 			error_reporting(0);
---
> 		ini_set('display_errors', 0);
> 		if (version_compare(PHP_VERSION, '5.3', '>='))
> 		{
> 			error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED & ~E_STRICT & ~E_USER_NOTICE & ~E_USER_DEPRECATED);
> 		}
> 		else
> 		{
> 			error_reporting(E_ALL & ~E_NOTICE & ~E_STRICT & ~E_USER_NOTICE);
> 		}
45,46c87,89
< 			exit('The application environment is not set correctly.');
< 	}
---
> 		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
> 		echo 'The application environment is not set correctly.';
> 		exit(1); // EXIT_ERROR
57d99
<  *
67c109
<  * folder then the default one you can set its name here. The folder
---
>  * folder than the default one you can set its name here. The folder
70c112
<  * http://codeigniter.com/user_guide/general/managing_apps.html
---
>  * https://codeigniter.com/user_guide/general/managing_apps.html
73d114
<  *
77a119,134
>  *---------------------------------------------------------------
>  * VIEW FOLDER NAME
>  *---------------------------------------------------------------
>  *
>  * If you want to move the view folder out of the application
>  * folder set the path to the folder here. The folder can be renamed
>  * and relocated anywhere on your server. If blank, it will default
>  * to the standard location inside your application folder. If you
>  * do move this, use the full server path to this folder.
>  *
>  * NO TRAILING SLASH!
>  */
> 	$view_folder = '';
> 
> 
> /*
95d151
<  *
121d176
<  *
143c198
< 	if (realpath($system_path) !== FALSE)
---
> 	if (($_temp = realpath($system_path)) !== FALSE)
145c200
< 		$system_path = realpath($system_path).'/';
---
> 		$system_path = $_temp.'/';
147c202,203
< 
---
> 	else
> 	{
149a206
> 	}
154c211,213
< 		exit("Your system folder path does not appear to be set correctly. Please open the following file and correct this: ".pathinfo(__FILE__, PATHINFO_BASENAME));
---
> 		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
> 		echo 'Your system folder path does not appear to be set correctly. Please open the following file and correct this: '.pathinfo(__FILE__, PATHINFO_BASENAME);
> 		exit(3); // EXIT_CONFIG
165,168d223
< 	// The PHP file extension
< 	// this global constant is deprecated.
< 	define('EXT', '.php');
< 
170c225
< 	define('BASEPATH', str_replace("\\", "/", $system_path));
---
> 	define('BASEPATH', str_replace('\\', '/', $system_path));
173c228
< 	define('FCPATH', str_replace(SELF, '', __FILE__));
---
> 	define('FCPATH', dirname(__FILE__).'/');
182c236,241
< 		define('APPPATH', $application_folder.'/');
---
> 		if (($_temp = realpath($application_folder)) !== FALSE)
> 		{
> 			$application_folder = $_temp;
> 		}
> 
> 		define('APPPATH', $application_folder.DIRECTORY_SEPARATOR);
186c245,262
< 		if ( ! is_dir(BASEPATH.$application_folder.'/'))
---
> 		if ( ! is_dir(BASEPATH.$application_folder.DIRECTORY_SEPARATOR))
> 		{
> 			header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
> 			echo 'Your application folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;
> 			exit(3); // EXIT_CONFIG
> 		}
> 
> 		define('APPPATH', BASEPATH.$application_folder.DIRECTORY_SEPARATOR);
> 	}
> 
> 	// The path to the "views" folder
> 	if ( ! is_dir($view_folder))
> 	{
> 		if ( ! empty($view_folder) && is_dir(APPPATH.$view_folder.DIRECTORY_SEPARATOR))
> 		{
> 			$view_folder = APPPATH.$view_folder;
> 		}
> 		elseif ( ! is_dir(APPPATH.'views'.DIRECTORY_SEPARATOR))
188c264,271
< 			exit("Your application folder path does not appear to be set correctly. Please open the following file and correct this: ".SELF);
---
> 			header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
> 			echo 'Your view folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;
> 			exit(3); // EXIT_CONFIG
> 		}
> 		else
> 		{
> 			$view_folder = APPPATH.'views';
> 		}
191c274,280
< 		define('APPPATH', BASEPATH.$application_folder.'/');
---
> 	if (($_temp = realpath($view_folder)) !== FALSE)
> 	{
> 		$view_folder = $_temp.DIRECTORY_SEPARATOR;
> 	}
> 	else
> 	{
> 		$view_folder = rtrim($view_folder, '/\\').DIRECTORY_SEPARATOR;
193a283,284
> 	define('VIEWPATH', $view_folder);
> 
200d290
<  *
203,205d292
< 
< /* End of file index.php */
< /* Location: ./index.php */
diff -rBwi --ignore-file-name-case pos-prod/js/common.js opensourcepos/js/common.js
24c24
< 	if(text!='')
---
> 	if(text)
26,29c26
< 		$('#feedback_bar').removeClass();
< 		$('#feedback_bar').addClass(classname);
< 		$('#feedback_bar').text(text);
< 		$('#feedback_bar').css('opacity','1');
---
> 		$('#feedback_bar').removeClass().addClass(classname).html(text).css('opacity','1');
33,34c30
< 			$('#feedback_bar').fadeTo(5000, 1);
< 			$('#feedback_bar').fadeTo("fast",0);
---
> 			$('#feedback_bar').fadeTo(5000, 1).fadeTo("fast",0);
42,82d37
< 
< //keylisteners
< 
< $(window).jkey('f1',function(){
< window.location = BASE_URL + '/customers/index';
< });
< 
< 
< $(window).jkey('f2',function(){
< window.location = BASE_URL + '/items/index';
< });
< 
< 
< $(window).jkey('f3',function(){
< window.location = BASE_URL + '/reports/index';
< });
< 
< $(window).jkey('f4',function(){
< window.location = BASE_URL + '/suppliers/index';
< });
< 
< $(window).jkey('f5',function(){
< window.location = BASE_URL + '/receivings/index';
< });
< 
< 
< $(window).jkey('f6',function(){
< window.location = BASE_URL + '/sales/index';
< });
< 
< $(window).jkey('f7',function(){
< window.location = BASE_URL + '/employees/index';
< });
< 
< $(window).jkey('f8',function(){
< window.location = BASE_URL + '/config/index';
< });
< 
< $(window).jkey('f9',function(){
< window.location = BASE_URL + '/giftcards/index';
< });
Only in pos-prod/js: datepicker.js
Only in opensourcepos/js: imgpreview.full.jquery.js
Only in pos-prod/js: jquery-1.2.6.min.js
Only in opensourcepos/js: jquery-1.8.3.js
Only in opensourcepos/js: jquery-ui-1.11.4.js
Only in opensourcepos/js: jquery-ui-timepicker-addon.js
diff -rBwi --ignore-file-name-case pos-prod/js/jquery.autocomplete.js opensourcepos/js/jquery.autocomplete.js
340a341,347
> 			// don't add q parameter (won't work for nomantim)
> 			var data = typeof options.extraParams == "function" ? 
> 			    $.extend({}, options.extraParams()) : $.extend({
> 				    q: lastWord(term),
> 				    limit: options.max
> 			    }, extraParams);
> 			
348,352c355,356
< 				type:"POST",
< 				data: $.extend({
< 					q: lastWord(term),
< 					limit: options.max
< 				}, extraParams),
---
> 				type: options.type || "POST",
> 				data: data,
Only in pos-prod/js: jquery.bgiframe.min.js
diff -rBwi --ignore-file-name-case pos-prod/js/jquery.color.js opensourcepos/js/jquery.color.js
1,4c1,9
< /*
<  * jQuery Color Animations
<  * Copyright 2007 John Resig
<  * Released under the MIT and GPL licenses.
---
> /*!
>  * jQuery Color Animations v@VERSION
>  * https://github.com/jquery/jquery-color
>  *
>  * Copyright jQuery Foundation and other contributors
>  * Released under the MIT license.
>  * http://jquery.org/license
>  *
>  * Date: @DATE
5a11
> (function( jQuery, undefined ) {
7c13
< (function(jQuery){
---
> 	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
9,120c15,660
< 	// We override the animation for all of these color styles
< 	jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function(i,attr){
< 		jQuery.fx.step[attr] = function(fx){
< 			if ( fx.state == 0 ) {
< 				fx.start = getColor( fx.elem, attr );
< 				fx.end = getRGB( fx.end );
< 			}
< 
< 			fx.elem.style[attr] = "rgb(" + [
< 				Math.max(Math.min( parseInt((fx.pos * (fx.end[0] - fx.start[0])) + fx.start[0]), 255), 0),
< 				Math.max(Math.min( parseInt((fx.pos * (fx.end[1] - fx.start[1])) + fx.start[1]), 255), 0),
< 				Math.max(Math.min( parseInt((fx.pos * (fx.end[2] - fx.start[2])) + fx.start[2]), 255), 0)
< 			].join(",") + ")";
< 		}
< 	});
< 
< 	// Color Conversion functions from highlightFade
< 	// By Blair Mitchelmore
< 	// http://jquery.offput.ca/highlightFade/
< 
< 	// Parse strings looking for color tuples [255,255,255]
< 	function getRGB(color) {
< 		var result;
< 
< 		// Check if we're already dealing with an array of colors
< 		if ( color && color.constructor == Array && color.length == 3 )
< 			return color;
< 
< 		// Look for rgb(num,num,num)
< 		if (result = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(color))
< 			return [parseInt(result[1]), parseInt(result[2]), parseInt(result[3])];
< 
< 		// Look for rgb(num%,num%,num%)
< 		if (result = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(color))
< 			return [parseFloat(result[1])*2.55, parseFloat(result[2])*2.55, parseFloat(result[3])*2.55];
< 
< 		// Look for #a0b1c2
< 		if (result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color))
< 			return [parseInt(result[1],16), parseInt(result[2],16), parseInt(result[3],16)];
< 
< 		// Look for #fff
< 		if (result = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(color))
< 			return [parseInt(result[1]+result[1],16), parseInt(result[2]+result[2],16), parseInt(result[3]+result[3],16)];
< 
< 		// Otherwise, we're most likely dealing with a named color
< 		return colors[jQuery.trim(color).toLowerCase()];
< 	}
< 	
< 	function getColor(elem, attr) {
< 		var color;
< 
< 		do {
< 			color = jQuery.curCSS(elem, attr);
< 
< 			// Keep going until we find an element that has color, or we hit the body
< 			if ( color != '' && color != 'transparent' || jQuery.nodeName(elem, "body") )
< 				break; 
< 
< 			attr = "backgroundColor";
< 		} while ( elem = elem.parentNode );
< 
< 		return getRGB(color);
< 	};
< 	
< 	// Some named colors to work with
< 	// From Interface by Stefan Petre
< 	// http://interface.eyecon.ro/
< 
< 	var colors = {
< 		aqua:[0,255,255],
< 		azure:[240,255,255],
< 		beige:[245,245,220],
< 		black:[0,0,0],
< 		blue:[0,0,255],
< 		brown:[165,42,42],
< 		cyan:[0,255,255],
< 		darkblue:[0,0,139],
< 		darkcyan:[0,139,139],
< 		darkgrey:[169,169,169],
< 		darkgreen:[0,100,0],
< 		darkkhaki:[189,183,107],
< 		darkmagenta:[139,0,139],
< 		darkolivegreen:[85,107,47],
< 		darkorange:[255,140,0],
< 		darkorchid:[153,50,204],
< 		darkred:[139,0,0],
< 		darksalmon:[233,150,122],
< 		darkviolet:[148,0,211],
< 		fuchsia:[255,0,255],
< 		gold:[255,215,0],
< 		green:[0,128,0],
< 		indigo:[75,0,130],
< 		khaki:[240,230,140],
< 		lightblue:[173,216,230],
< 		lightcyan:[224,255,255],
< 		lightgreen:[144,238,144],
< 		lightgrey:[211,211,211],
< 		lightpink:[255,182,193],
< 		lightyellow:[255,255,224],
< 		lime:[0,255,0],
< 		magenta:[255,0,255],
< 		maroon:[128,0,0],
< 		navy:[0,0,128],
< 		olive:[128,128,0],
< 		orange:[255,165,0],
< 		pink:[255,192,203],
< 		purple:[128,0,128],
< 		violet:[128,0,128],
< 		red:[255,0,0],
< 		silver:[192,192,192],
< 		white:[255,255,255],
< 		yellow:[255,255,0]
---
> 	// plusequals test for += 100 -= 100
> 	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
> 	// a set of RE's that can match strings and generate color tuples.
> 	stringParsers = [{
> 			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
> 			parse: function( execResult ) {
> 				return [
> 					execResult[ 1 ],
> 					execResult[ 2 ],
> 					execResult[ 3 ],
> 					execResult[ 4 ]
> 				];
> 			}
> 		}, {
> 			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
> 			parse: function( execResult ) {
> 				return [
> 					execResult[ 1 ] * 2.55,
> 					execResult[ 2 ] * 2.55,
> 					execResult[ 3 ] * 2.55,
> 					execResult[ 4 ]
> 				];
> 			}
> 		}, {
> 			// this regex ignores A-F because it's compared against an already lowercased string
> 			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
> 			parse: function( execResult ) {
> 				return [
> 					parseInt( execResult[ 1 ], 16 ),
> 					parseInt( execResult[ 2 ], 16 ),
> 					parseInt( execResult[ 3 ], 16 )
> 				];
> 			}
> 		}, {
> 			// this regex ignores A-F because it's compared against an already lowercased string
> 			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
> 			parse: function( execResult ) {
> 				return [
> 					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
> 					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
> 					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
> 				];
> 			}
> 		}, {
> 			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
> 			space: "hsla",
> 			parse: function( execResult ) {
> 				return [
> 					execResult[ 1 ],
> 					execResult[ 2 ] / 100,
> 					execResult[ 3 ] / 100,
> 					execResult[ 4 ]
> 				];
> 			}
> 		}],
> 
> 	// jQuery.Color( )
> 	color = jQuery.Color = function( color, green, blue, alpha ) {
> 		return new jQuery.Color.fn.parse( color, green, blue, alpha );
> 	},
> 	spaces = {
> 		rgba: {
> 			props: {
> 				red: {
> 					idx: 0,
> 					type: "byte"
> 				},
> 				green: {
> 					idx: 1,
> 					type: "byte"
> 				},
> 				blue: {
> 					idx: 2,
> 					type: "byte"
> 				}
> 			}
> 		},
> 
> 		hsla: {
> 			props: {
> 				hue: {
> 					idx: 0,
> 					type: "degrees"
> 				},
> 				saturation: {
> 					idx: 1,
> 					type: "percent"
> 				},
> 				lightness: {
> 					idx: 2,
> 					type: "percent"
> 				}
> 			}
> 		}
> 	},
> 	propTypes = {
> 		"byte": {
> 			floor: true,
> 			max: 255
> 		},
> 		"percent": {
> 			max: 1
> 		},
> 		"degrees": {
> 			mod: 360,
> 			floor: true
> 		}
> 	},
> 	support = color.support = {},
> 
> 	// element for support tests
> 	supportElem = jQuery( "<p>" )[ 0 ],
> 
> 	// colors = jQuery.Color.names
> 	colors,
> 
> 	// local aliases of functions called often
> 	each = jQuery.each;
> 
> // determine rgba support immediately
> supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
> support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;
> 
> // define cache name and alpha properties
> // for rgba and hsla spaces
> each( spaces, function( spaceName, space ) {
> 	space.cache = "_" + spaceName;
> 	space.props.alpha = {
> 		idx: 3,
> 		type: "percent",
> 		def: 1
> 	};
> });
> 
> function clamp( value, prop, allowEmpty ) {
> 	var type = propTypes[ prop.type ] || {};
> 
> 	if ( value == null ) {
> 		return (allowEmpty || !prop.def) ? null : prop.def;
> 	}
> 
> 	// ~~ is an short way of doing floor for positive numbers
> 	value = type.floor ? ~~value : parseFloat( value );
> 
> 	// IE will pass in empty strings as value for alpha,
> 	// which will hit this case
> 	if ( isNaN( value ) ) {
> 		return prop.def;
> 	}
> 
> 	if ( type.mod ) {
> 		// we add mod before modding to make sure that negatives values
> 		// get converted properly: -10 -> 350
> 		return (value + type.mod) % type.mod;
> 	}
> 
> 	// for now all property types without mod have min and max
> 	return 0 > value ? 0 : type.max < value ? type.max : value;
> }
> 
> function stringParse( string ) {
> 	var inst = color(),
> 		rgba = inst._rgba = [];
> 
> 	string = string.toLowerCase();
> 
> 	each( stringParsers, function( i, parser ) {
> 		var parsed,
> 			match = parser.re.exec( string ),
> 			values = match && parser.parse( match ),
> 			spaceName = parser.space || "rgba";
> 
> 		if ( values ) {
> 			parsed = inst[ spaceName ]( values );
> 
> 			// if this was an rgba parse the assignment might happen twice
> 			// oh well....
> 			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
> 			rgba = inst._rgba = parsed._rgba;
> 
> 			// exit each( stringParsers ) here because we matched
> 			return false;
> 		}
> 	});
> 
> 	// Found a stringParser that handled it
> 	if ( rgba.length ) {
> 
> 		// if this came from a parsed string, force "transparent" when alpha is 0
> 		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
> 		if ( rgba.join() === "0,0,0,0" ) {
> 			jQuery.extend( rgba, colors.transparent );
> 		}
> 		return inst;
> 	}
> 
> 	// named colors
> 	return colors[ string ];
> }
> 
> color.fn = jQuery.extend( color.prototype, {
> 	parse: function( red, green, blue, alpha ) {
> 		if ( red === undefined ) {
> 			this._rgba = [ null, null, null, null ];
> 			return this;
> 		}
> 		if ( red.jquery || red.nodeType ) {
> 			red = jQuery( red ).css( green );
> 			green = undefined;
> 		}
> 
> 		var inst = this,
> 			type = jQuery.type( red ),
> 			rgba = this._rgba = [];
> 
> 		// more than 1 argument specified - assume ( red, green, blue, alpha )
> 		if ( green !== undefined ) {
> 			red = [ red, green, blue, alpha ];
> 			type = "array";
> 		}
> 
> 		if ( type === "string" ) {
> 			return this.parse( stringParse( red ) || colors._default );
> 		}
> 
> 		if ( type === "array" ) {
> 			each( spaces.rgba.props, function( key, prop ) {
> 				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
> 			});
> 			return this;
> 		}
> 
> 		if ( type === "object" ) {
> 			if ( red instanceof color ) {
> 				each( spaces, function( spaceName, space ) {
> 					if ( red[ space.cache ] ) {
> 						inst[ space.cache ] = red[ space.cache ].slice();
> 					}
> 				});
> 			} else {
> 				each( spaces, function( spaceName, space ) {
> 					var cache = space.cache;
> 					each( space.props, function( key, prop ) {
> 
> 						// if the cache doesn't exist, and we know how to convert
> 						if ( !inst[ cache ] && space.to ) {
> 
> 							// if the value was null, we don't need to copy it
> 							// if the key was alpha, we don't need to copy it either
> 							if ( key === "alpha" || red[ key ] == null ) {
> 								return;
> 							}
> 							inst[ cache ] = space.to( inst._rgba );
> 						}
> 
> 						// this is the only case where we allow nulls for ALL properties.
> 						// call clamp with alwaysAllowEmpty
> 						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
> 					});
> 
> 					// everything defined but alpha?
> 					if ( inst[ cache ] && jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
> 						// use the default of 1
> 						inst[ cache ][ 3 ] = 1;
> 						if ( space.from ) {
> 							inst._rgba = space.from( inst[ cache ] );
> 						}
> 					}
> 				});
> 			}
> 			return this;
> 		}
> 	},
> 	is: function( compare ) {
> 		var is = color( compare ),
> 			same = true,
> 			inst = this;
> 
> 		each( spaces, function( _, space ) {
> 			var localCache,
> 				isCache = is[ space.cache ];
> 			if (isCache) {
> 				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
> 				each( space.props, function( _, prop ) {
> 					if ( isCache[ prop.idx ] != null ) {
> 						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
> 						return same;
> 					}
> 				});
> 			}
> 			return same;
> 		});
> 		return same;
> 	},
> 	_space: function() {
> 		var used = [],
> 			inst = this;
> 		each( spaces, function( spaceName, space ) {
> 			if ( inst[ space.cache ] ) {
> 				used.push( spaceName );
> 			}
> 		});
> 		return used.pop();
> 	},
> 	transition: function( other, distance ) {
> 		var end = color( other ),
> 			spaceName = end._space(),
> 			space = spaces[ spaceName ],
> 			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
> 			start = startColor[ space.cache ] || space.to( startColor._rgba ),
> 			result = start.slice();
> 
> 		end = end[ space.cache ];
> 		each( space.props, function( key, prop ) {
> 			var index = prop.idx,
> 				startValue = start[ index ],
> 				endValue = end[ index ],
> 				type = propTypes[ prop.type ] || {};
> 
> 			// if null, don't override start value
> 			if ( endValue === null ) {
> 				return;
> 			}
> 			// if null - use end
> 			if ( startValue === null ) {
> 				result[ index ] = endValue;
> 			} else {
> 				if ( type.mod ) {
> 					if ( endValue - startValue > type.mod / 2 ) {
> 						startValue += type.mod;
> 					} else if ( startValue - endValue > type.mod / 2 ) {
> 						startValue -= type.mod;
> 					}
> 				}
> 				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
> 			}
> 		});
> 		return this[ spaceName ]( result );
> 	},
> 	blend: function( opaque ) {
> 		// if we are already opaque - return ourself
> 		if ( this._rgba[ 3 ] === 1 ) {
> 			return this;
> 		}
> 
> 		var rgb = this._rgba.slice(),
> 			a = rgb.pop(),
> 			blend = color( opaque )._rgba;
> 
> 		return color( jQuery.map( rgb, function( v, i ) {
> 			return ( 1 - a ) * blend[ i ] + a * v;
> 		}));
> 	},
> 	toRgbaString: function() {
> 		var prefix = "rgba(",
> 			rgba = jQuery.map( this._rgba, function( v, i ) {
> 				return v == null ? ( i > 2 ? 1 : 0 ) : v;
> 			});
> 
> 		if ( rgba[ 3 ] === 1 ) {
> 			rgba.pop();
> 			prefix = "rgb(";
> 		}
> 
> 		return prefix + rgba.join() + ")";
> 	},
> 	toHslaString: function() {
> 		var prefix = "hsla(",
> 			hsla = jQuery.map( this.hsla(), function( v, i ) {
> 				if ( v == null ) {
> 					v = i > 2 ? 1 : 0;
> 				}
> 
> 				// catch 1 and 2
> 				if ( i && i < 3 ) {
> 					v = Math.round( v * 100 ) + "%";
> 				}
> 				return v;
> 			});
> 
> 		if ( hsla[ 3 ] === 1 ) {
> 			hsla.pop();
> 			prefix = "hsl(";
> 		}
> 		return prefix + hsla.join() + ")";
> 	},
> 	toHexString: function( includeAlpha ) {
> 		var rgba = this._rgba.slice(),
> 			alpha = rgba.pop();
> 
> 		if ( includeAlpha ) {
> 			rgba.push( ~~( alpha * 255 ) );
> 		}
> 
> 		return "#" + jQuery.map( rgba, function( v ) {
> 
> 			// default to 0 when nulls exist
> 			v = ( v || 0 ).toString( 16 );
> 			return v.length === 1 ? "0" + v : v;
> 		}).join("");
> 	},
> 	toString: function() {
> 		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
> 	}
> });
> color.fn.parse.prototype = color.fn;
> 
> // hsla conversions adapted from:
> // https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021
> 
> function hue2rgb( p, q, h ) {
> 	h = ( h + 1 ) % 1;
> 	if ( h * 6 < 1 ) {
> 		return p + (q - p) * h * 6;
> 	}
> 	if ( h * 2 < 1) {
> 		return q;
> 	}
> 	if ( h * 3 < 2 ) {
> 		return p + (q - p) * ((2/3) - h) * 6;
> 	}
> 	return p;
> }
> 
> spaces.hsla.to = function ( rgba ) {
> 	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
> 		return [ null, null, null, rgba[ 3 ] ];
> 	}
> 	var r = rgba[ 0 ] / 255,
> 		g = rgba[ 1 ] / 255,
> 		b = rgba[ 2 ] / 255,
> 		a = rgba[ 3 ],
> 		max = Math.max( r, g, b ),
> 		min = Math.min( r, g, b ),
> 		diff = max - min,
> 		add = max + min,
> 		l = add * 0.5,
> 		h, s;
> 
> 	if ( min === max ) {
> 		h = 0;
> 	} else if ( r === max ) {
> 		h = ( 60 * ( g - b ) / diff ) + 360;
> 	} else if ( g === max ) {
> 		h = ( 60 * ( b - r ) / diff ) + 120;
> 	} else {
> 		h = ( 60 * ( r - g ) / diff ) + 240;
> 	}
> 
> 	// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
> 	// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
> 	if ( diff === 0 ) {
> 		s = 0;
> 	} else if ( l <= 0.5 ) {
> 		s = diff / add;
> 	} else {
> 		s = diff / ( 2 - add );
> 	}
> 	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];
> };
> 
> spaces.hsla.from = function ( hsla ) {
> 	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
> 		return [ null, null, null, hsla[ 3 ] ];
> 	}
> 	var h = hsla[ 0 ] / 360,
> 		s = hsla[ 1 ],
> 		l = hsla[ 2 ],
> 		a = hsla[ 3 ],
> 		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
> 		p = 2 * l - q;
> 
> 	return [
> 		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
> 		Math.round( hue2rgb( p, q, h ) * 255 ),
> 		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
> 		a
> 	];
> };
> 
> 
> each( spaces, function( spaceName, space ) {
> 	var props = space.props,
> 		cache = space.cache,
> 		to = space.to,
> 		from = space.from;
> 
> 	// makes rgba() and hsla()
> 	color.fn[ spaceName ] = function( value ) {
> 
> 		// generate a cache for this space if it doesn't exist
> 		if ( to && !this[ cache ] ) {
> 			this[ cache ] = to( this._rgba );
> 		}
> 		if ( value === undefined ) {
> 			return this[ cache ].slice();
> 		}
> 
> 		var ret,
> 			type = jQuery.type( value ),
> 			arr = ( type === "array" || type === "object" ) ? value : arguments,
> 			local = this[ cache ].slice();
> 
> 		each( props, function( key, prop ) {
> 			var val = arr[ type === "object" ? key : prop.idx ];
> 			if ( val == null ) {
> 				val = local[ prop.idx ];
> 			}
> 			local[ prop.idx ] = clamp( val, prop );
> 		});
> 
> 		if ( from ) {
> 			ret = color( from( local ) );
> 			ret[ cache ] = local;
> 			return ret;
> 		} else {
> 			return color( local );
> 		}
> 	};
> 
> 	// makes red() green() blue() alpha() hue() saturation() lightness()
> 	each( props, function( key, prop ) {
> 		// alpha is included in more than one space
> 		if ( color.fn[ key ] ) {
> 			return;
> 		}
> 		color.fn[ key ] = function( value ) {
> 			var vtype = jQuery.type( value ),
> 				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
> 				local = this[ fn ](),
> 				cur = local[ prop.idx ],
> 				match;
> 
> 			if ( vtype === "undefined" ) {
> 				return cur;
> 			}
> 
> 			if ( vtype === "function" ) {
> 				value = value.call( this, cur );
> 				vtype = jQuery.type( value );
> 			}
> 			if ( value == null && prop.empty ) {
> 				return this;
> 			}
> 			if ( vtype === "string" ) {
> 				match = rplusequals.exec( value );
> 				if ( match ) {
> 					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
> 				}
> 			}
> 			local[ prop.idx ] = value;
> 			return this[ fn ]( local );
> 		};
> 	});
> });
> 
> // add cssHook and .fx.step function for each named hook.
> // accept a space separated string of properties
> color.hook = function( hook ) {
> 	var hooks = hook.split( " " );
> 	each( hooks, function( i, hook ) {
> 		jQuery.cssHooks[ hook ] = {
> 			set: function( elem, value ) {
> 				var parsed, curElem,
> 					backgroundColor = "";
> 
> 				if ( value !== "transparent" && ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) ) {
> 					value = color( parsed || value );
> 					if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
> 						curElem = hook === "backgroundColor" ? elem.parentNode : elem;
> 						while (
> 							(backgroundColor === "" || backgroundColor === "transparent") &&
> 							curElem && curElem.style
> 						) {
> 							try {
> 								backgroundColor = jQuery.css( curElem, "backgroundColor" );
> 								curElem = curElem.parentNode;
> 							} catch ( e ) {
> 							}
> 						}
> 
> 						value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
> 							backgroundColor :
> 							"_default" );
> 					}
> 
> 					value = value.toRgbaString();
> 				}
> 				try {
> 					elem.style[ hook ] = value;
> 				} catch( e ) {
> 					// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
> 				}
> 			}
> 		};
> 		jQuery.fx.step[ hook ] = function( fx ) {
> 			if ( !fx.colorInit ) {
> 				fx.start = color( fx.elem, hook );
> 				fx.end = color( fx.end );
> 				fx.colorInit = true;
> 			}
> 			jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
> 		};
> 	});
> 
> };
> 
> color.hook( stepHooks );
> 
> jQuery.cssHooks.borderColor = {
> 	expand: function( value ) {
> 		var expanded = {};
> 
> 		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
> 			expanded[ "border" + part + "Color" ] = value;
> 		});
> 		return expanded;
> 	}
> };
> 
> // Basic color names only.
> // Usage of any of the other color names requires adding yourself or including
> // jquery.color.svg-names.js.
> colors = jQuery.Color.names = {
> 	// 4.1. Basic color keywords
> 	aqua: "#00ffff",
> 	black: "#000000",
> 	blue: "#0000ff",
> 	fuchsia: "#ff00ff",
> 	gray: "#808080",
> 	green: "#008000",
> 	lime: "#00ff00",
> 	maroon: "#800000",
> 	navy: "#000080",
> 	olive: "#808000",
> 	purple: "#800080",
> 	red: "#ff0000",
> 	silver: "#c0c0c0",
> 	teal: "#008080",
> 	white: "#ffffff",
> 	yellow: "#ffff00",
> 
> 	// 4.2.3. "transparent" color keyword
> 	transparent: [ null, null, null, 0 ],
> 
> 	_default: "#ffffff"
123c663
< })(jQuery);
\ No newline at end of file
---
> }( jQuery ));
Only in opensourcepos/js: jquery.form-3.51.js
Only in pos-prod/js: jquery.form.js
Only in pos-prod/js: jquery.jkey-1.1.js
Only in opensourcepos/js: jquery.tablesorter-2.20.1.js
Only in pos-prod/js: jquery.tablesorter.min.js
Only in opensourcepos/js: jquery.tablesorter.staticrow.js
Only in opensourcepos/js: jquery.validate-1.13.1-min.js
Only in pos-prod/js: jquery.validate.min.js
diff -rBwi --ignore-file-name-case pos-prod/js/manage_tables.js opensourcepos/js/manage_tables.js
15c15
< function enable_search(suggest_url,confirm_search_message,ac)
---
> function enable_search(options)
16a17,21
> 	if (!options.format_item) {
> 		format_item = function(results) {
> 			return results[0];
> 		};
> 	}
25,29c30,32
< ac = typeof ac !== 'undefined' ? ac : true;
< if(ac) 
< {
<     $("#search").autocomplete(suggest_url,{max:100,delay:10, selectFirst: false});
<     }
---
> 
>     var widget = $("#search").autocomplete(options.suggest_url,{max:100,delay:10, selectFirst: false,
> 		formatItem : options.format_item, extraParams: options.extra_params});
32c35,39
< 		do_search(true);
---
> 		do_search(true, options.on_complete);
>     }).on("keypress", function(event) {
> 		if(event.which == 13) {
> 			do_search(true, options.on_complete);
> 		}
33a41
>     attach_search_listener();
38c46,47
< 
---
>         // reset page number when selecting a specific page number
> 		$('#limit_from').val(0);
41c50
< 			if(!confirm(confirm_search_message))
---
> 			if(!confirm(options.confirm_search_message))
44c53
< 		do_search(true);
---
> 		do_search(true, options.on_complete);
45a55,56
> 
> 	return widget;
48a60,74
> function attach_search_listener() 
> {
> 	 // prevent redirecting to link when search enabled
>     $("#pagination a").click(function(event) {
>     	  if ($("#search").val() || $("#search_form input:checked")) {
>     		  event.preventDefault();
>     		  // set limit_from to value included in the link
>     		  var uri_segments = event.currentTarget.href.split('/');
>     		  var limit_from = uri_segments.pop();
>     		  $('#limit_from').val(limit_from);
>     		  do_search(true);
>     	  }
>     });
> }
> 
56c82
< 		$('#spinner').show();
---
> 		$('#search').addClass("ac_loading");
58,59c84,89
< 	$('#sortable_table tbody').load($('#search_form').attr('action'),{'search':$('#search').val()},function()
< 	{
---
> 	$.post(
> 		$('#search_form').attr('action'), 
> 		// serialize all the input fields in the form
> 		$('#search_form').serialize(),
> 		function(response) {
> 			$('#sortable_table tbody').html(response.rows);
61,63c91,93
< 			on_complete();
< 				
< 		$('#spinner').hide();
---
> 				on_complete(response);
> 			$('#search').removeClass("ac_loading");
> 			//$('#spinner').hide();
66,67c96
< 		update_sortable_table();	
< 		enable_row_selection();		
---
> 			$('#pagination').html(response.pagination);
70c99,106
< 	});
---
> 			if (response.total_rows > 0)
> 			{
> 				update_sortable_table();	
> 				enable_row_selection();	
> 			}
> 		    attach_search_listener();
> 		}, "json"
> 	);
114c150
< 	$('#delete').click(function(event)
---
> 	$("#delete").click(function(event)
121a158,159
> 			} else {
> 				return false;
152c190
< 					update_sortable_table();
---
> 					$("#sortable_table tbody tr").length > 0 && update_sortable_table();
156,159d193
< 			// update rows that were affected by this delete
< 			for(index in response.ids) {
< 				update_row(response.ids[index],url.replace(/[^\/]+$/,'get_row'));
< 			}
276a310,313
> 	else
> 	{
> 		window['init_table_sorting'] && init_table_sorting();
> 	}
282,283c319,320
< 	if ($element.index() === -1) {
< 		$element = $("#sortable_table tbody a[href*='" + id + "']");
---
> 	if ($element.length === 0) {
> 		$element = $("#sortable_table tbody a[href*='/" + id + "/']");
288c325
< function update_row(row_id,url)
---
> function update_row(row_id,url,callback)
297c334,335
< 	});
---
> 		callback && typeof(callback) == "function" && callback(); 
> 	}, 'html');
Only in opensourcepos/js: nominatim.autocomplete.js
Only in opensourcepos/js: phpjsdate.js
Only in opensourcepos/js: tabcontent.js
diff -rBwi --ignore-file-name-case pos-prod/license/codeigniter_license.txt opensourcepos/license/codeigniter_license.txt
1,2c1
< Copyright (c) 2008 - 2011, EllisLab, Inc.
< All rights reserved.
---
> The MIT License (MIT)
4,6c3
< This license is a legal agreement between you and EllisLab Inc. for the use
< of CodeIgniter Software (the "Software").  By obtaining the Software you
< agree to comply with the terms and conditions of this license.
---
> Copyright (c) 2014 - 2016, British Columbia Institute of Technology
8,51c5,21
< PERMITTED USE
< You are permitted to use, copy, modify, and distribute the Software and its
< documentation, with or without modification, for any purpose, provided that
< the following conditions are met:
< 
< 1. A copy of this license agreement must be included with the distribution.
< 
< 2. Redistributions of source code must retain the above copyright notice in
<    all source code files.
< 
< 3. Redistributions in binary form must reproduce the above copyright notice
<    in the documentation and/or other materials provided with the distribution.
< 
< 4. Any files that have been modified must carry notices stating the nature
<    of the change and the names of those who changed them.
< 
< 5. Products derived from the Software must include an acknowledgment that
<    they are derived from CodeIgniter in their documentation and/or other
<    materials provided with the distribution.
< 
< 6. Products derived from the Software may not be called "CodeIgniter",
<    nor may "CodeIgniter" appear in their name, without prior written
<    permission from EllisLab, Inc.
< 
< INDEMNITY
< You agree to indemnify and hold harmless the authors of the Software and
< any contributors for any direct, indirect, incidental, or consequential
< third-party claims, actions or suits, as well as any related expenses,
< liabilities, damages, settlements or fees arising from your use or misuse
< of the Software, or a violation of any terms of this license.
< 
< DISCLAIMER OF WARRANTY
< THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESSED OR
< IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF QUALITY, PERFORMANCE,
< NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.
< 
< LIMITATIONS OF LIABILITY
< YOU ASSUME ALL RISK ASSOCIATED WITH THE INSTALLATION AND USE OF THE SOFTWARE.
< IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS OF THE SOFTWARE BE LIABLE
< FOR CLAIMS, DAMAGES OR OTHER LIABILITY ARISING FROM, OUT OF, OR IN CONNECTION
< WITH THE SOFTWARE. LICENSE HOLDERS ARE SOLELY RESPONSIBLE FOR DETERMINING THE
< APPROPRIATENESS OF USE AND ASSUME ALL RISKS ASSOCIATED WITH ITS USE, INCLUDING
< BUT NOT LIMITED TO THE RISKS OF PROGRAM ERRORS, DAMAGE TO EQUIPMENT, LOSS OF
< DATA OR SOFTWARE PROGRAMS, OR UNAVAILABILITY OR INTERRUPTION OF OPERATIONS.
---
> Permission is hereby granted, free of charge, to any person obtaining a copy
> of this software and associated documentation files (the "Software"), to deal
> in the Software without restriction, including without limitation the rights
> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
> copies of the Software, and to permit persons to whom the Software is
> furnished to do so, subject to the following conditions:
> 
> The above copyright notice and this permission notice shall be included in
> all copies or substantial portions of the Software.
> 
> THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
> THE SOFTWARE.
diff -rBwi --ignore-file-name-case pos-prod/license/codeigniter_version.txt opensourcepos/license/codeigniter_version.txt
1c1
< 2.1.0
\ No newline at end of file
---
> 3.0.5
\ No newline at end of file
Only in pos-prod/license: license.txt
Only in pos-prod: LICENSE
Only in opensourcepos: package.json
diff -rBwi --ignore-file-name-case pos-prod/README.md opensourcepos/README.md
0a1,3
> Introduction
> ------------
> 
2a6,10
> Badges
> ------
> 
> [![Build Status](https://travis-ci.org/jekkos/opensourcepos.svg?branch=master)](https://travis-ci.org/jekkos/opensourcepos)
> 
17c25,52
< A more extensive setup guide can be found at [this site](http://www.opensourceposguide.com/guide/gettingstarted/installation)
---
> FAQ
> ---
> If a blank page (HTTP status 500) shows after search completion or receipt generation, then double check php5-gd presence in your php installation. On windows check in php.ini whether the lib is installed. On Ubuntu issue `sudo apt-get install php5-gd`. Also have a look at the Dockerfile for a complete list of recommended packages.
> 
> 13/01/2016: Install using Docker
> -------------------------------
> From now on ospos can be deployed using Docker on Linux, Mac or Windows. This setup dramatically reduces the number of possible issues as all setup is now done in a Dockerfile. Docker runs natively on mac and linux, but will require more overhead on windows. Please refer to the docker documentation for instructions on how to set it up on your platform.
> 
> To build and run the image, issue following commands in a terminal with docker installed
> 
>     docker build -t me/ospos https://github.com/jekkos/opensourcepos.git
>     docker run -d -p 80:80 me/ospos
> 
> Docker will clone the latest master into the image and start a LAMP stack with the application configured. If you like to persist your changes in this install, then you can use two docker data containers to store database and filesystem changes. In this case you will need following command (first time only)
> 
>     docker run -d -v /app --name="ospos" -v /var/lib/mysql --name="ospos-sql" -p 127.0.0.1:80:80 me/ospos
> 
> After stopping the created container for the first time, this command will be replaced with
> 
>     docker run -d -v /app --volumes-from="ospos" -v /var/lib/mysql --volumes-from="ospos-sql" -p 127.0.0.1:80:80 me/ospos
> 
> Both the data and mysql directories will be persisted in a separate docker container and can be mounted within any other container using the last command. A more extensive setup guide can be found at [this site](http://www.opensourceposguide.com/guide/gettingstarted/installation)
> 
> If you like the project, and you are making money out of it on a daily basis, then consider to buy me a coffee so I can keep adding features.
> 
> 
> [![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MUN6AEG7NY6H8)
> 
Only in pos-prod: README.txt
diff -rBwi --ignore-file-name-case pos-prod/system/.htaccess opensourcepos/system/.htaccess
0a1,4
> <IfModule authz_core_module>
> 	Require all denied
> </IfModule>
> <IfModule !authz_core_module>
1a6
> </IfModule>
\ No newline at end of file
Only in pos-prod/system: cache
diff -rBwi --ignore-file-name-case pos-prod/system/core/Benchmark.php opensourcepos/system/core/Benchmark.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * CodeIgniter Benchmark Class
---
>  * Benchmark Class
27,28c49,50
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/benchmark.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/benchmark.html
33c55
< 	 * List of all benchmark markers and when they were added
---
> 	 * List of all benchmark markers
37,39c59
< 	var $marker = array();
< 
< 	// --------------------------------------------------------------------
---
> 	public $marker = array();
45c65
< 	 * execution points can be timed
---
> 	 * execution points can be timed.
47,48c67
< 	 * @access	public
< 	 * @param	string	$name	name of the marker
---
> 	 * @param	string	$name	Marker name
51c70
< 	function mark($name)
---
> 	public function mark($name)
53c72
< 		$this->marker[$name] = microtime();
---
> 		$this->marker[$name] = microtime(TRUE);
58a78,79
> 	 * Elapsed time
> 	 *
66,70c87,93
< 	 * @access	public
< 	 * @param	string	a particular marked point
< 	 * @param	string	a particular marked point
< 	 * @param	integer	the number of decimal places
< 	 * @return	mixed
---
> 	 * @param	string	$point1		A particular marked point
> 	 * @param	string	$point2		A particular marked point
> 	 * @param	int	$decimals	Number of decimal places
> 	 *
> 	 * @return	string	Calculated elapsed time on success,
> 	 *			an '{elapsed_string}' if $point1 is empty
> 	 *			or an empty string if $point1 is not found.
72c95
< 	function elapsed_time($point1 = '', $point2 = '', $decimals = 4)
---
> 	public function elapsed_time($point1 = '', $point2 = '', $decimals = 4)
74c97
< 		if ($point1 == '')
---
> 		if ($point1 === '')
86c109
< 			$this->marker[$point2] = microtime();
---
> 			$this->marker[$point2] = microtime(TRUE);
89,92c112
< 		list($sm, $ss) = explode(' ', $this->marker[$point1]);
< 		list($em, $es) = explode(' ', $this->marker[$point2]);
< 
< 		return number_format(($em + $es) - ($sm + $ss), $decimals);
---
> 		return number_format($this->marker[$point2] - $this->marker[$point1], $decimals);
100c120,121
< 	 * This function returns the {memory_usage} pseudo-variable.
---
> 	 * Simply returns the {memory_usage} marker.
> 	 *
105,106c126
< 	 * @access	public
< 	 * @return	string
---
> 	 * @return	string	'{memory_usage}'
108c128
< 	function memory_usage()
---
> 	public function memory_usage()
114,118d133
< 
< // END CI_Benchmark class
< 
< /* End of file Benchmark.php */
< /* Location: ./system/core/Benchmark.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/core/CodeIgniter.php opensourcepos/system/core/CodeIgniter.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/
36c58
< 	define('CI_VERSION', '2.2.0');
---
> 	define('CI_VERSION', '3.0.5');
38,42c60,63
< /**
<  * CodeIgniter Branch (Core = TRUE, Reactor = FALSE)
<  *
<  * @var boolean
<  *
---
> /*
>  * ------------------------------------------------------
>  *  Load the framework constants
>  * ------------------------------------------------------
44c65,70
< 	define('CI_CORE', FALSE);
---
> 	if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/constants.php'))
> 	{
> 		require_once(APPPATH.'config/'.ENVIRONMENT.'/constants.php');
> 	}
> 
> 	require_once(APPPATH.'config/constants.php');
51c77,78
< 	require(BASEPATH.'core/Common.php');
---
> 	require_once(BASEPATH.'core/Common.php');
> 
55c82
<  *  Load the framework constants
---
>  * Security procedures
58c85,90
< 	if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/constants.php'))
---
> 
> if ( ! is_php('5.4'))
> {
> 	ini_set('magic_quotes_runtime', 0);
> 
> 	if ((bool) ini_get('register_globals'))
60c92,115
< 		require(APPPATH.'config/'.ENVIRONMENT.'/constants.php');
---
> 		$_protected = array(
> 			'_SERVER',
> 			'_GET',
> 			'_POST',
> 			'_FILES',
> 			'_REQUEST',
> 			'_SESSION',
> 			'_ENV',
> 			'_COOKIE',
> 			'GLOBALS',
> 			'HTTP_RAW_POST_DATA',
> 			'system_path',
> 			'application_folder',
> 			'view_folder',
> 			'_protected',
> 			'_registered'
> 		);
> 
> 		$_registered = ini_get('variables_order');
> 		foreach (array('E' => '_ENV', 'G' => '_GET', 'P' => '_POST', 'C' => '_COOKIE', 'S' => '_SERVER') as $key => $superglobal)
> 		{
> 			if (strpos($_registered, $key) === FALSE)
> 			{
> 				continue;
62c117,118
< 	else
---
> 
> 			foreach (array_keys($$superglobal) as $var)
64c120,126
< 		require(APPPATH.'config/constants.php');
---
> 				if (isset($GLOBALS[$var]) && ! in_array($var, $_protected, TRUE))
> 				{
> 					$GLOBALS[$var] = NULL;
> 				}
> 			}
> 		}
> 	}
72,77c135,137
< 	set_error_handler('_exception_handler');
< 
< 	if ( ! is_php('5.3'))
< 	{
< 		@set_magic_quotes_runtime(0); // Kill magic quotes
< 	}
---
> 	set_error_handler('_error_handler');
> 	set_exception_handler('_exception_handler');
> 	register_shutdown_function('_shutdown_handler');
88c148
<  * overriden via data set in the main index. php file,
---
>  * overridden via data set in the main index.php file,
95c155
< 	if (isset($assign_to_config['subclass_prefix']) AND $assign_to_config['subclass_prefix'] != '')
---
> 	if ( ! empty($assign_to_config['subclass_prefix']))
102c162
<  *  Set a liberal script execution time limit
---
>  *  Should we use a Composer autoloader?
105c165,177
< 	if (function_exists("set_time_limit") == TRUE AND @ini_get("safe_mode") == 0)
---
> 	if ($composer_autoload = config_item('composer_autoload'))
> 	{
> 		if ($composer_autoload === TRUE)
> 		{
> 			file_exists(APPPATH.'vendor/autoload.php')
> 				? require_once(APPPATH.'vendor/autoload.php')
> 				: log_message('error', '$config[\'composer_autoload\'] is set to TRUE but '.APPPATH.'vendor/autoload.php was not found.');
> 		}
> 		elseif (file_exists($composer_autoload))
> 		{
> 			require_once($composer_autoload);
> 		}
> 		else
107c179,180
< 		@set_time_limit(300);
---
> 			log_message('error', 'Could not find the specified $config[\'composer_autoload\'] path: '.$composer_autoload);
> 		}
131c204
< 	$EXT->_call_hook('pre_system');
---
> 	$EXT->call_hook('pre_system');
136a210,214
>  *
>  * Note: It is important that Config is loaded first as
>  * most other classes depend on it either directly or by
>  * depending on another class that uses it.
>  *
141c219,221
< 	if (isset($assign_to_config))
---
> 	if (isset($assign_to_config) && is_array($assign_to_config))
> 	{
> 		foreach ($assign_to_config as $key => $value)
143c223,224
< 		$CFG->_assign_to_config($assign_to_config);
---
> 			$CFG->set_item($key, $value);
> 		}
148c229
<  *  Instantiate the UTF-8 class
---
>  * Important charset-related stuff
151,154c232,238
<  * Note: Order here is rather important as the UTF-8
<  * class needs to be used very early on, but it cannot
<  * properly determine if UTf-8 can be supported until
<  * after the Config class is instantiated.
---
>  * Configure mbstring and/or iconv if they are enabled
>  * and set MB_ENABLED and ICONV_ENABLED constants, so
>  * that we don't repeatedly do extension_loaded() or
>  * function_exists() calls.
>  *
>  * Note: UTF-8 class depends on this. It used to be done
>  * in it's constructor, but it's _not_ class-specific.
156a241,287
> 	$charset = strtoupper(config_item('charset'));
> 	ini_set('default_charset', $charset);
> 
> 	if (extension_loaded('mbstring'))
> 	{
> 		define('MB_ENABLED', TRUE);
> 		// mbstring.internal_encoding is deprecated starting with PHP 5.6
> 		// and it's usage triggers E_DEPRECATED messages.
> 		@ini_set('mbstring.internal_encoding', $charset);
> 		// This is required for mb_convert_encoding() to strip invalid characters.
> 		// That's utilized by CI_Utf8, but it's also done for consistency with iconv.
> 		mb_substitute_character('none');
> 	}
> 	else
> 	{
> 		define('MB_ENABLED', FALSE);
> 	}
> 
> 	// There's an ICONV_IMPL constant, but the PHP manual says that using
> 	// iconv's predefined constants is "strongly discouraged".
> 	if (extension_loaded('iconv'))
> 	{
> 		define('ICONV_ENABLED', TRUE);
> 		// iconv.internal_encoding is deprecated starting with PHP 5.6
> 		// and it's usage triggers E_DEPRECATED messages.
> 		@ini_set('iconv.internal_encoding', $charset);
> 	}
> 	else
> 	{
> 		define('ICONV_ENABLED', FALSE);
> 	}
> 
> 	if (is_php('5.6'))
> 	{
> 		ini_set('php.internal_encoding', $charset);
> 	}
> 
> /*
>  * ------------------------------------------------------
>  *  Load compatibility features
>  * ------------------------------------------------------
>  */
> 
> 	require_once(BASEPATH.'core/compat/mbstring.php');
> 	require_once(BASEPATH.'core/compat/hash.php');
> 	require_once(BASEPATH.'core/compat/password.php');
> 	require_once(BASEPATH.'core/compat/standard.php');
157a289,293
> /*
>  * ------------------------------------------------------
>  *  Instantiate the UTF-8 class
>  * ------------------------------------------------------
>  */
172,179c308
< 	$RTR =& load_class('Router', 'core');
< 	$RTR->_set_routing();
< 
< 	// Set any routing overrides that may exist in the main index file
< 	if (isset($routing))
< 	{
< 		$RTR->_set_overrides($routing);
< 	}
---
> 	$RTR =& load_class('Router', 'core', isset($routing) ? $routing : NULL);
193,195c322
< 	if ($EXT->_call_hook('cache_override') === FALSE)
< 	{
< 		if ($OUT->_display_cache($CFG, $URI) == TRUE)
---
> 	if ($EXT->call_hook('cache_override') === FALSE && $OUT->_display_cache($CFG, $URI) === TRUE)
199d325
< 	}
229c355
< 	require BASEPATH.'core/Controller.php';
---
> 	require_once BASEPATH.'core/Controller.php';
230a357,363
> 	/**
> 	 * Reference to the CI_Controller method.
> 	 *
> 	 * Returns current CI instance object
> 	 *
> 	 * @return CI_Controller
> 	 */
239c371
< 		require APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php';
---
> 		require_once APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php';
242,251d373
< 	// Load the local application controller
< 	// Note: The Router class automatically validates the controller path using the router->_validate_request().
< 	// If this include fails it means that the default controller in the Routes.php file is not resolving to something valid.
< 	if ( ! file_exists(APPPATH.'controllers/'.$RTR->fetch_directory().$RTR->fetch_class().'.php'))
< 	{
< 		show_error('Unable to load your default controller. Please make sure the controller specified in your Routes.php file is valid.');
< 	}
< 
< 	include(APPPATH.'controllers/'.$RTR->fetch_directory().$RTR->fetch_class().'.php');
< 
257c379
<  *  Security check
---
>  *  Sanity checks
260,262c382,395
<  *  None of the functions in the app controller or the
<  *  loader class can be called via the URI, nor can
<  *  controller functions that begin with an underscore
---
>  *  The Router class has already validated the request,
>  *  leaving us with 3 options here:
>  *
>  *	1) an empty class name, if we reached the default
>  *	   controller, but it didn't exist;
>  *	2) a query string which doesn't go through a
>  *	   file_exists() check
>  *	3) a regular request for a non-existing page
>  *
>  *  We handle all of these as a 404 error.
>  *
>  *  Furthermore, none of the methods in the app controller
>  *  or the loader class can be called via the URI, nor can
>  *  controller methods that begin with an underscore.
264,265d396
< 	$class  = $RTR->fetch_class();
< 	$method = $RTR->fetch_method();
267,270c398,402
< 	if ( ! class_exists($class)
< 		OR strncmp($method, '_', 1) == 0
< 		OR in_array(strtolower($method), array_map('strtolower', get_class_methods('CI_Controller')))
< 		)
---
> 	$e404 = FALSE;
> 	$class = ucfirst($RTR->class);
> 	$method = $RTR->method;
> 
> 	if (empty($class) OR ! file_exists(APPPATH.'controllers/'.$RTR->directory.$class.'.php'))
272c404,410
< 		if ( ! empty($RTR->routes['404_override']))
---
> 		$e404 = TRUE;
> 	}
> 	else
> 	{
> 		require_once(APPPATH.'controllers/'.$RTR->directory.$class.'.php');
> 
> 		if ( ! class_exists($class, FALSE) OR $method[0] === '_' OR method_exists('CI_Controller', $method))
274,277c412,429
< 			$x = explode('/', $RTR->routes['404_override']);
< 			$class = $x[0];
< 			$method = (isset($x[1]) ? $x[1] : 'index');
< 			if ( ! class_exists($class))
---
> 			$e404 = TRUE;
> 		}
> 		elseif (method_exists($class, '_remap'))
> 		{
> 			$params = array($method, array_slice($URI->rsegments, 2));
> 			$method = '_remap';
> 		}
> 		// WARNING: It appears that there are issues with is_callable() even in PHP 5.2!
> 		// Furthermore, there are bug reports and feature/change requests related to it
> 		// that make it unreliable to use in this context. Please, DO NOT change this
> 		// work-around until a better alternative is available.
> 		elseif ( ! in_array(strtolower($method), array_map('strtolower', get_class_methods($class)), TRUE))
> 		{
> 			$e404 = TRUE;
> 		}
> 	}
> 
> 	if ($e404)
279c431
< 				if ( ! file_exists(APPPATH.'controllers/'.$class.'.php'))
---
> 		if ( ! empty($RTR->routes['404_override']))
281c433,435
< 					show_404("{$class}/{$method}");
---
> 			if (sscanf($RTR->routes['404_override'], '%[^/]/%s', $error_class, $error_method) !== 2)
> 			{
> 				$error_method = 'index';
284c438,460
< 				include_once(APPPATH.'controllers/'.$class.'.php');
---
> 			$error_class = ucfirst($error_class);
> 
> 			if ( ! class_exists($error_class, FALSE))
> 			{
> 				if (file_exists(APPPATH.'controllers/'.$RTR->directory.$error_class.'.php'))
> 				{
> 					require_once(APPPATH.'controllers/'.$RTR->directory.$error_class.'.php');
> 					$e404 = ! class_exists($error_class, FALSE);
> 				}
> 				// Were we in a directory? If so, check for a global override
> 				elseif ( ! empty($RTR->directory) && file_exists(APPPATH.'controllers/'.$error_class.'.php'))
> 				{
> 					require_once(APPPATH.'controllers/'.$error_class.'.php');
> 					if (($e404 = ! class_exists($error_class, FALSE)) === FALSE)
> 					{
> 						$RTR->directory = '';
> 					}
> 				}
> 			}
> 			else
> 			{
> 				$e404 = FALSE;
> 			}
285a462,472
> 
> 		// Did we reset the $e404 flag? If so, set the rsegments, starting from index 1
> 		if ( ! $e404)
> 		{
> 			$class = $error_class;
> 			$method = $error_method;
> 
> 			$URI->rsegments = array(
> 				1 => $class,
> 				2 => $method
> 			);
289c476
< 			show_404("{$class}/{$method}");
---
> 			show_404($RTR->directory.$class.'/'.$method);
292a480,484
> 	if ($method !== '_remap')
> 	{
> 		$params = array_slice($URI->rsegments, 2);
> 	}
> 
298c490
< 	$EXT->_call_hook('pre_controller');
---
> 	$EXT->call_hook('pre_controller');
315c507
< 	$EXT->_call_hook('post_controller_constructor');
---
> 	$EXT->call_hook('post_controller_constructor');
322,361c514
< 	// Is there a "remap" function? If so, we call it instead
< 	if (method_exists($CI, '_remap'))
< 	{
< 		$CI->_remap($method, array_slice($URI->rsegments, 2));
< 	}
< 	else
< 	{
< 		// is_callable() returns TRUE on some versions of PHP 5 for private and protected
< 		// methods, so we'll use this workaround for consistent behavior
< 		if ( ! in_array(strtolower($method), array_map('strtolower', get_class_methods($CI))))
< 		{
< 			// Check and see if we are using a 404 override and use it.
< 			if ( ! empty($RTR->routes['404_override']))
< 			{
< 				$x = explode('/', $RTR->routes['404_override']);
< 				$class = $x[0];
< 				$method = (isset($x[1]) ? $x[1] : 'index');
< 				if ( ! class_exists($class))
< 				{
< 					if ( ! file_exists(APPPATH.'controllers/'.$class.'.php'))
< 					{
< 						show_404("{$class}/{$method}");
< 					}
< 
< 					include_once(APPPATH.'controllers/'.$class.'.php');
< 					unset($CI);
< 					$CI = new $class();
< 				}
< 			}
< 			else
< 			{
< 				show_404("{$class}/{$method}");
< 			}
< 		}
< 
< 		// Call the requested method.
< 		// Any URI segments present (besides the class/function) will be passed to the method for convenience
< 		call_user_func_array(array(&$CI, $method), array_slice($URI->rsegments, 2));
< 	}
< 
---
> 	call_user_func_array(array(&$CI, $method), $params);
371c524
< 	$EXT->_call_hook('post_controller');
---
> 	$EXT->call_hook('post_controller');
378c531
< 	if ($EXT->_call_hook('display_override') === FALSE)
---
> 	if ($EXT->call_hook('display_override') === FALSE)
388,402c541
< 	$EXT->_call_hook('post_system');
< 
< /*
<  * ------------------------------------------------------
<  *  Close the DB connection if one exists
<  * ------------------------------------------------------
<  */
< 	if (class_exists('CI_DB') AND isset($CI->db))
< 	{
< 		$CI->db->close();
< 	}
< 
< 
< /* End of file CodeIgniter.php */
< /* Location: ./system/core/CodeIgniter.php */
\ No newline at end of file
---
> 	$EXT->call_hook('post_system');
diff -rBwi --ignore-file-name-case pos-prod/system/core/Common.php opensourcepos/system/core/Common.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/
31a54,55
> if ( ! function_exists('is_php'))
> {
33,36c57
< * Determines if the current version of PHP is greater then the supplied value
< *
< * Since there are a few places where we conditionally test for PHP > 5
< * we'll set a static variable.
---
> 	 * Determines if the current version of PHP is equal to or greater than the supplied value
38d58
< * @access	public
42,44c62
< if ( ! function_exists('is_php'))
< {
< 	function is_php($version = '5.0.0')
---
> 	function is_php($version)
51c69
< 			$_is_php[$version] = (version_compare(PHP_VERSION, $version) < 0) ? FALSE : TRUE;
---
> 			$_is_php[$version] = version_compare(PHP_VERSION, $version, '>=');
59a78,79
> if ( ! function_exists('is_really_writable'))
> {
67,68c87,89
<  * @access	private
<  * @return	void
---
> 	 * @link	https://bugs.php.net/bug.php?id=54709
> 	 * @param	string
> 	 * @return	bool
70,71d90
< if ( ! function_exists('is_really_writable'))
< {
75c94
< 		if (DIRECTORY_SEPARATOR == '/' AND @ini_get("safe_mode") == FALSE)
---
> 		if (DIRECTORY_SEPARATOR === '/' && (is_php('5.4') OR ! ini_get('safe_mode')))
80,81c99,101
< 		// For windows servers and safe_mode "on" installations we'll actually
< 		// write a file then read it.  Bah...
---
> 		/* For Windows servers and safe_mode "on" installations we'll actually
> 		 * write a file then read it. Bah...
> 		 */
84,86c104,105
< 			$file = rtrim($file, '/').'/'.md5(mt_rand(1,100).mt_rand(1,100));
< 
< 			if (($fp = @fopen($file, FOPEN_WRITE_CREATE)) === FALSE)
---
> 			$file = rtrim($file, '/').'/'.md5(mt_rand());
> 			if (($fp = @fopen($file, 'ab')) === FALSE)
92c111
< 			@chmod($file, DIR_WRITE_MODE);
---
> 			@chmod($file, 0777);
96c115
< 		elseif ( ! is_file($file) OR ($fp = @fopen($file, FOPEN_WRITE_CREATE)) === FALSE)
---
> 		elseif ( ! is_file($file) OR ($fp = @fopen($file, 'ab')) === FALSE)
107a127,128
> if ( ! function_exists('load_class'))
> {
115d135
< * @access	public
118c138
< * @param	string	the class name prefix
---
> 	 * @param	string	an optional argument to pass to the class constructor
121,123c141
< if ( ! function_exists('load_class'))
< {
< 	function &load_class($class, $directory = 'libraries', $prefix = 'CI_')
---
> 	function &load_class($class, $directory = 'libraries', $param = NULL)
141c159
< 				$name = $prefix.$class;
---
> 				$name = 'CI_'.$class;
143c161
< 				if (class_exists($name) === FALSE)
---
> 				if (class_exists($name, FALSE) === FALSE)
145c163
< 					require($path.$directory.'/'.$class.'.php');
---
> 					require_once($path.$directory.'/'.$class.'.php');
157c175
< 			if (class_exists($name) === FALSE)
---
> 			if (class_exists($name, FALSE) === FALSE)
159c177
< 				require(APPPATH.$directory.'/'.config_item('subclass_prefix').$class.'.php');
---
> 				require_once(APPPATH.$directory.'/'.$name.'.php');
166,168c184,188
< 			// Note: We use exit() rather then show_error() in order to avoid a
< 			// self-referencing loop with the Excptions class
< 			exit('Unable to locate the specified class: '.$class.'.php');
---
> 			// Note: We use exit() rather than show_error() in order to avoid a
> 			// self-referencing loop with the Exceptions class
> 			set_status_header(503);
> 			echo 'Unable to locate the specified class: '.$class.'.php';
> 			exit(5); // EXIT_UNK_CLASS
174c194,196
< 		$_classes[$class] = new $name();
---
> 		$_classes[$class] = isset($param)
> 			? new $name($param)
> 			: new $name();
180a203,204
> if ( ! function_exists('is_loaded'))
> {
185c209
< * @access	public
---
> 	 * @param	string
188,189d211
< if ( ! function_exists('is_loaded'))
< {
194c216
< 		if ($class != '')
---
> 		if ($class !== '')
204a227,228
> if ( ! function_exists('get_config'))
> {
211c235
< * @access	private
---
> 	 * @param	array
214c238
< if ( ! function_exists('get_config'))
---
> 	function &get_config(Array $replace = array())
216,218c240
< 	function &get_config($replace = array())
< 	{
< 		static $_config;
---
> 		static $config;
220c242
< 		if (isset($_config))
---
> 		if (empty($config))
222c244,249
< 			return $_config[0];
---
> 			$file_path = APPPATH.'config/config.php';
> 			$found = FALSE;
> 			if (file_exists($file_path))
> 			{
> 				$found = TRUE;
> 				require($file_path);
226c253
< 		if ( ! defined('ENVIRONMENT') OR ! file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/config.php'))
---
> 			if (file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/config.php'))
228c255
< 			$file_path = APPPATH.'config/config.php';
---
> 				require($file_path);
230,232c257
< 
< 		// Fetch the config file
< 		if ( ! file_exists($file_path))
---
> 			elseif ( ! $found)
234c259,261
< 			exit('The configuration file does not exist.');
---
> 				set_status_header(503);
> 				echo 'The configuration file does not exist.';
> 				exit(3); // EXIT_CONFIG
237,238d263
< 		require($file_path);
< 
242c267,270
< 			exit('Your config file does not appear to be formatted correctly.');
---
> 				set_status_header(503);
> 				echo 'Your config file does not appear to be formatted correctly.';
> 				exit(3); // EXIT_CONFIG
> 			}
245,247c273
< 		// Are any values being dynamically replaced?
< 		if (count($replace) > 0)
< 		{
---
> 		// Are any values being dynamically added or replaced?
250,251d275
< 				if (isset($config[$key]))
< 				{
254,255d277
< 			}
< 		}
257c279
< 		return $_config[0] =& $config;
---
> 		return $config;
262a285,286
> if ( ! function_exists('config_item'))
> {
266c290
< * @access	public
---
> 	 * @param	string
269,270d292
< if ( ! function_exists('config_item'))
< {
273c295,318
< 		static $_config_item = array();
---
> 		static $_config;
> 
> 		if (empty($_config))
> 		{
> 			// references cannot be directly assigned to static variables, so we use an array
> 			$_config[0] =& get_config();
> 		}
> 
> 		return isset($_config[0][$item]) ? $_config[0][$item] : NULL;
> 	}
> }
> 
> // ------------------------------------------------------------------------
> 
> if ( ! function_exists('get_mimes'))
> {
> 	/**
> 	 * Returns the MIME types array from config/mimes.php
> 	 *
> 	 * @return	array
> 	 */
> 	function &get_mimes()
> 	{
> 		static $_mimes;
275c320,330
< 		if ( ! isset($_config_item[$item]))
---
> 		if (empty($_mimes))
> 		{
> 			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
> 			{
> 				$_mimes = include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
> 			}
> 			elseif (file_exists(APPPATH.'config/mimes.php'))
> 			{
> 				$_mimes = include(APPPATH.'config/mimes.php');
> 			}
> 			else
277c332,340
< 			$config =& get_config();
---
> 				$_mimes = array();
> 			}
> 		}
> 
> 		return $_mimes;
> 	}
> }
> 
> // ------------------------------------------------------------------------
279c342,358
< 			if ( ! isset($config[$item]))
---
> if ( ! function_exists('is_https'))
> {
> 	/**
> 	 * Is HTTPS?
> 	 *
> 	 * Determines if the application is accessed via an encrypted
> 	 * (HTTPS) connection.
> 	 *
> 	 * @return	bool
> 	 */
> 	function is_https()
> 	{
> 		if ( ! empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off')
> 		{
> 			return TRUE;
> 		}
> 		elseif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https')
280a360,366
> 			return TRUE;
> 		}
> 		elseif ( ! empty($_SERVER['HTTP_FRONT_END_HTTPS']) && strtolower($_SERVER['HTTP_FRONT_END_HTTPS']) !== 'off')
> 		{
> 			return TRUE;
> 		}
> 
283d368
< 			$_config_item[$item] = $config[$item];
286c371,385
< 		return $_config_item[$item];
---
> // ------------------------------------------------------------------------
> 
> if ( ! function_exists('is_cli'))
> {
> 
> 	/**
> 	 * Is CLI?
> 	 *
> 	 * Test to see if a request was made from the command line.
> 	 *
> 	 * @return 	bool
> 	 */
> 	function is_cli()
> 	{
> 		return (PHP_SAPI === 'cli' OR defined('STDIN'));
291a391,392
> if ( ! function_exists('show_error'))
> {
297c398
< * in application/errors/errors.php
---
> 	 * in application/views/errors/error_general.php
301c402,404
< * @access	public
---
> 	 * @param	string
> 	 * @param	int
> 	 * @param	string
304,305d406
< if ( ! function_exists('show_error'))
< {
307a409,424
> 		$status_code = abs($status_code);
> 		if ($status_code < 100)
> 		{
> 			$exit_status = $status_code + 9; // 9 is EXIT__AUTO_MIN
> 			if ($exit_status > 125) // 125 is EXIT__AUTO_MAX
> 			{
> 				$exit_status = 1; // EXIT_ERROR
> 			}
> 
> 			$status_code = 500;
> 		}
> 		else
> 		{
> 			$exit_status = 1; // EXIT_ERROR
> 		}
> 
310c427
< 		exit;
---
> 		exit($exit_status);
315a433,434
> if ( ! function_exists('show_404'))
> {
323c442,443
< * @access	public
---
> 	 * @param	string
> 	 * @param	bool
326,327d445
< if ( ! function_exists('show_404'))
< {
332c450
< 		exit;
---
> 		exit(4); // EXIT_UNKNOWN_FILE
337a456,457
> if ( ! function_exists('log_message'))
> {
344c464,465
< * @access	public
---
> 	 * @param	string	the error level: 'error', 'debug' or 'info'
> 	 * @param	string	the error message
347,349c468
< if ( ! function_exists('log_message'))
< {
< 	function log_message($level = 'error', $message, $php_error = FALSE)
---
> 	function log_message($level, $message)
353c472
< 		if (config_item('log_threshold') == 0)
---
> 		if ($_log === NULL)
355c474,475
< 			return;
---
> 			// references cannot be directly assigned to static variables, so we use an array
> 			$_log[0] =& load_class('Log', 'core');
358,359c478
< 		$_log =& load_class('Log');
< 		$_log->write_log($level, $message, $php_error);
---
> 		$_log[0]->write_log($level, $message);
364a484,485
> if ( ! function_exists('set_status_header'))
> {
368d488
<  * @access	public
373,374d492
< if ( ! function_exists('set_status_header'))
< {
376a495,507
> 		if (is_cli())
> 		{
> 			return;
> 		}
> 
> 		if (empty($code) OR ! is_numeric($code))
> 		{
> 			show_error('Status codes must be numeric', 500);
> 		}
> 
> 		if (empty($text))
> 		{
> 			is_int($code) OR $code = (int) $code;
377a509,511
> 				100	=> 'Continue',
> 				101	=> 'Switching Protocols',
> 
388a523
> 				303	=> 'See Other',
394a530
> 				402	=> 'Payment Required',
409a546
> 				422	=> 'Unprocessable Entity',
419,424c556
< 		if ($code == '' OR ! is_numeric($code))
< 		{
< 			show_error('Status codes must be numeric', 500);
< 		}
< 
< 		if (isset($stati[$code]) AND $text == '')
---
> 			if (isset($stati[$code]))
428,429c560
< 
< 		if ($text == '')
---
> 			else
433,438d563
< 
< 		$server_protocol = (isset($_SERVER['SERVER_PROTOCOL'])) ? $_SERVER['SERVER_PROTOCOL'] : FALSE;
< 
< 		if (substr(php_sapi_name(), 0, 3) == 'cgi')
< 		{
< 			header("Status: {$code} {$text}", TRUE);
440c565,566
< 		elseif ($server_protocol == 'HTTP/1.1' OR $server_protocol == 'HTTP/1.0')
---
> 
> 		if (strpos(PHP_SAPI, 'cgi') === 0)
442c568
< 			header($server_protocol." {$code} {$text}", TRUE, $code);
---
> 			header('Status: '.$code.' '.$text, TRUE);
446c572,573
< 			header("HTTP/1.1 {$code} {$text}", TRUE, $code);
---
> 			$server_protocol = isset($_SERVER['SERVER_PROTOCOL']) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.1';
> 			header($server_protocol.' '.$code.' '.$text, TRUE, $code);
452a580,581
> if ( ! function_exists('_error_handler'))
> {
454c583
< * Exception Handler
---
> 	 * Error Handler
456,457c585,586
< * This is the custom exception handler that is declaired at the top
< * of Codeigniter.php.  The main reason we use this is to permit
---
> 	 * This is the custom error handler that is declared at the (relative)
> 	 * top of CodeIgniter.php. The main reason we use this is to permit
459,461c588,590
< * not have access to server logs. Since this function
< * effectively intercepts PHP errors, however, we also need
< * to display errors based on the current error_reporting level.
---
> 	 * not have access to server logs. Since this function effectively
> 	 * intercepts PHP errors, however, we also need to display errors
> 	 * based on the current error_reporting level.
464c593,596
< * @access	private
---
> 	 * @param	int	$severity
> 	 * @param	string	$message
> 	 * @param	string	$filepath
> 	 * @param	int	$line
467c599
< if ( ! function_exists('_exception_handler'))
---
> 	function _error_handler($severity, $message, $filepath, $line)
469c601,609
< 	function _exception_handler($severity, $message, $filepath, $line)
---
> 		$is_error = (((E_ERROR | E_COMPILE_ERROR | E_CORE_ERROR | E_USER_ERROR) & $severity) === $severity);
> 
> 		// When an error occurred, set the status header to '500 Internal Server Error'
> 		// to indicate to the client something went wrong.
> 		// This can't be done within the $_error->show_php_error method because
> 		// it is only called when the display_errors flag is set (which isn't usually
> 		// the case in a production environment) or when errors are ignored because
> 		// they are above the error_reporting threshold.
> 		if ($is_error)
471,476c611,616
< 		 // We don't bother with "strict" notices since they tend to fill up
< 		 // the log file with excess information that isn't normally very helpful.
< 		 // For example, if you are running PHP 5 and you use version 4 style
< 		 // class functions (without prefixes like "public", "private", etc.)
< 		 // you'll get notices telling you that these have been deprecated.
< 		if ($severity == E_STRICT)
---
> 			set_status_header(500);
> 		}
> 
> 		// Should we ignore the error? We'll get the current error_reporting
> 		// level and add its bits with the severity bits to find out.
> 		if (($severity & error_reporting()) !== $severity)
481a622
> 		$_error->log_exception($severity, $message, $filepath, $line);
483,485c624,625
< 		// Should we display the error? We'll get the current error_reporting
< 		// level and add its bits with the severity bits to find out.
< 		if (($severity & error_reporting()) == $severity)
---
> 		// Should we display the error?
> 		if (str_ireplace(array('off', 'none', 'no', 'false', 'null'), '', ini_get('display_errors')))
490,491c630,633
< 		// Should we log the error?  No?  We're done...
< 		if (config_item('log_threshold') == 0)
---
> 		// If the error is fatal, the execution of the script should be stopped because
> 		// errors can't be recovered from. Halting the script conforms with PHP's
> 		// default error handling. See http://www.php.net/manual/en/errorfunc.constants.php
> 		if ($is_error)
493c635,637
< 			return;
---
> 			exit(1); // EXIT_ERROR
> 		}
> 	}
496c640,693
< 		$_error->log_exception($severity, $message, $filepath, $line);
---
> // ------------------------------------------------------------------------
> 
> if ( ! function_exists('_exception_handler'))
> {
> 	/**
> 	 * Exception Handler
> 	 *
> 	 * Sends uncaught exceptions to the logger and displays them
> 	 * only if display_errors is On so that they don't show up in
> 	 * production environments.
> 	 *
> 	 * @param	Exception	$exception
> 	 * @return	void
> 	 */
> 	function _exception_handler($exception)
> 	{
> 		$_error =& load_class('Exceptions', 'core');
> 		$_error->log_exception('error', 'Exception: '.$exception->getMessage(), $exception->getFile(), $exception->getLine());
> 
> 		// Should we display the error?
> 		if (str_ireplace(array('off', 'none', 'no', 'false', 'null'), '', ini_get('display_errors')))
> 		{
> 			$_error->show_exception($exception);
> 		}
> 
> 		exit(1); // EXIT_ERROR
> 	}
> }
> 
> // ------------------------------------------------------------------------
> 
> if ( ! function_exists('_shutdown_handler'))
> {
> 	/**
> 	 * Shutdown Handler
> 	 *
> 	 * This is the shutdown handler that is declared at the top
> 	 * of CodeIgniter.php. The main reason we use this is to simulate
> 	 * a complete custom exception handler.
> 	 *
> 	 * E_STRICT is purposively neglected because such events may have
> 	 * been caught. Duplication or none? None is preferred for now.
> 	 *
> 	 * @link	http://insomanic.me.uk/post/229851073/php-trick-catching-fatal-errors-e-error-with-a
> 	 * @return	void
> 	 */
> 	function _shutdown_handler()
> 	{
> 		$last_error = error_get_last();
> 		if (isset($last_error) &&
> 			($last_error['type'] & (E_ERROR | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING)))
> 		{
> 			_error_handler($last_error['type'], $last_error['message'], $last_error['file'], $last_error['line']);
> 		}
501a699,700
> if ( ! function_exists('remove_invisible_characters'))
> {
508d706
<  * @access	public
509a708
> 	 * @param	bool
512,513d710
< if ( ! function_exists('remove_invisible_characters'))
< {
518,520c715,716
< 		// every control character except newline (dec 10)
< 		// carriage return (dec 13), and horizontal tab (dec 09)
< 		
---
> 		// every control character except newline (dec 10),
> 		// carriage return (dec 13) and horizontal tab (dec 09)
540a737,738
> if ( ! function_exists('html_escape'))
> {
542c740
< * Returns HTML escaped variable
---
> 	 * Returns HTML escaped variable.
544,546c742,744
< * @access	public
< * @param	mixed
< * @return	mixed
---
> 	 * @param	mixed	$var		The input string or array of strings to be escaped.
> 	 * @param	bool	$double_encode	$double_encode set to FALSE prevents escaping twice.
> 	 * @return	mixed			The escaped string or array of strings as a result.
548c746
< if ( ! function_exists('html_escape'))
---
> 	function html_escape($var, $double_encode = TRUE)
550c748
< 	function html_escape($var)
---
> 		if (empty($var))
551a750,752
> 			return $var;
> 		}
> 
554c755,757
< 			return array_map('html_escape', $var);
---
> 			foreach (array_keys($var) as $key)
> 			{
> 				$var[$key] = html_escape($var[$key], $double_encode);
556c759,781
< 		else
---
> 
> 			return $var;
> 		}
> 
> 		return htmlspecialchars($var, ENT_QUOTES, config_item('charset'), $double_encode);
> 	}
> }
> 
> // ------------------------------------------------------------------------
> 
> if ( ! function_exists('_stringify_attributes'))
> {
> 	/**
> 	 * Stringify attributes for use in HTML tags.
> 	 *
> 	 * Helper function used to convert a string, array, or object
> 	 * of attributes to a string.
> 	 *
> 	 * @param	mixed	string, array, object
> 	 * @param	bool
> 	 * @return	string
> 	 */
> 	function _stringify_attributes($attributes, $js = FALSE)
558c783,803
< 			return htmlspecialchars($var, ENT_QUOTES, config_item('charset'));
---
> 		$atts = NULL;
> 
> 		if (empty($attributes))
> 		{
> 			return $atts;
> 		}
> 
> 		if (is_string($attributes))
> 		{
> 			return ' '.$attributes;
> 		}
> 
> 		$attributes = (array) $attributes;
> 
> 		foreach ($attributes as $key => $val)
> 		{
> 			$atts .= ($js) ? $key.'='.$val.',' : ' '.$key.'="'.$val.'"';
> 		}
> 
> 		return rtrim($atts, ',');
> 	}
559a805,849
> 
> // ------------------------------------------------------------------------
> 
> if ( ! function_exists('function_usable'))
> {
> 	/**
> 	 * Function usable
> 	 *
> 	 * Executes a function_exists() check, and if the Suhosin PHP
> 	 * extension is loaded - checks whether the function that is
> 	 * checked might be disabled in there as well.
> 	 *
> 	 * This is useful as function_exists() will return FALSE for
> 	 * functions disabled via the *disable_functions* php.ini
> 	 * setting, but not for *suhosin.executor.func.blacklist* and
> 	 * *suhosin.executor.disable_eval*. These settings will just
> 	 * terminate script execution if a disabled function is executed.
> 	 *
> 	 * The above described behavior turned out to be a bug in Suhosin,
> 	 * but even though a fix was commited for 0.9.34 on 2012-02-12,
> 	 * that version is yet to be released. This function will therefore
> 	 * be just temporary, but would probably be kept for a few years.
> 	 *
> 	 * @link	http://www.hardened-php.net/suhosin/
> 	 * @param	string	$function_name	Function to check for
> 	 * @return	bool	TRUE if the function exists and is safe to call,
> 	 *			FALSE otherwise.
> 	 */
> 	function function_usable($function_name)
> 	{
> 		static $_suhosin_func_blacklist;
> 
> 		if (function_exists($function_name))
> 		{
> 			if ( ! isset($_suhosin_func_blacklist))
> 			{
> 				$_suhosin_func_blacklist = extension_loaded('suhosin')
> 					? explode(',', trim(ini_get('suhosin.executor.func.blacklist')))
> 					: array();
> 			}
> 
> 			return ! in_array($function_name, $_suhosin_func_blacklist, TRUE);
> 		}
> 
> 		return FALSE;
562,563d851
< /* End of file Common.php */
< /* Location: ./system/core/Common.php */
Only in opensourcepos/system/core: compat
diff -rBwi --ignore-file-name-case pos-prod/system/core/Config.php opensourcepos/system/core/Config.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * CodeIgniter Config Class
---
>  * Config Class
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/config.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/config.html
36c58,59
< 	var $config = array();
---
> 	public $config = array();
> 
42c65,66
< 	var $is_loaded = array();
---
> 	public $is_loaded =	array();
> 
44c68
< 	 * List of paths to search when trying to load a config file
---
> 	 * List of paths to search when trying to load a config file.
45a70
> 	 * @used-by	CI_Loader
48c73,75
< 	var $_config_paths = array(APPPATH);
---
> 	public $_config_paths =	array(APPPATH);
> 
> 	// --------------------------------------------------------------------
51c78
< 	 * Constructor
---
> 	 * Class constructor
53c80
< 	 * Sets the $config data from the primary config.php file as a class variable
---
> 	 * Sets the $config data from the primary config.php file as a class variable.
55,59c82
< 	 * @access   public
< 	 * @param   string	the config file name
< 	 * @param   boolean  if configuration values should be loaded into their own section
< 	 * @param   boolean  true if errors should just return false, false if an error message should be displayed
< 	 * @return  boolean  if the file was successfully loaded or not
---
> 	 * @return	void
61c84
< 	function __construct()
---
> 	public function __construct()
64d86
< 		log_message('debug', "Config Class Initialized");
67c89
< 		if ($this->config['base_url'] == '')
---
> 		if (empty($this->config['base_url']))
69c91
< 			if (isset($_SERVER['HTTP_HOST']))
---
> 			if (isset($_SERVER['SERVER_ADDR']))
71,73c93,99
< 				$base_url = isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off' ? 'https' : 'http';
< 				$base_url .= '://'. $_SERVER['HTTP_HOST'];
< 				$base_url .= str_replace(basename($_SERVER['SCRIPT_NAME']), '', $_SERVER['SCRIPT_NAME']);
---
> 				if (strpos($_SERVER['SERVER_ADDR'], ':') !== FALSE)
> 				{
> 					$server_addr = '['.$_SERVER['SERVER_ADDR'].']';
> 				}
> 				else
> 				{
> 					$server_addr = $_SERVER['SERVER_ADDR'];
75a102,104
> 				$base_url = (is_https() ? 'https' : 'http').'://'.$server_addr
> 					.substr($_SERVER['SCRIPT_NAME'], 0, strpos($_SERVER['SCRIPT_NAME'], basename($_SERVER['SCRIPT_FILENAME'])));
> 			}
82a112,113
> 
> 		log_message('info', 'Config Class Initialized');
90,94c121,124
< 	 * @access	public
< 	 * @param	string	the config file name
< 	 * @param   boolean  if configuration values should be loaded into their own section
< 	 * @param   boolean  true if errors should just return false, false if an error message should be displayed
< 	 * @return	boolean	if the file was loaded correctly
---
> 	 * @param	string	$file			Configuration file name
> 	 * @param	bool	$use_sections		Whether configuration values should be loaded into their own section
> 	 * @param	bool	$fail_gracefully	Whether to just return FALSE or display an error message
> 	 * @return	bool	TRUE if the file was loaded correctly or FALSE on failure
96c126
< 	function load($file = '', $use_sections = FALSE, $fail_gracefully = FALSE)
---
> 	public function load($file = '', $use_sections = FALSE, $fail_gracefully = FALSE)
98,99c128
< 		$file = ($file == '') ? 'config' : str_replace('.php', '', $file);
< 		$found = FALSE;
---
> 		$file = ($file === '') ? 'config' : str_replace('.php', '', $file);
102,105d130
< 		$check_locations = defined('ENVIRONMENT')
< 			? array(ENVIRONMENT.'/'.$file, $file)
< 			: array($file);
< 
108c133
< 			foreach ($check_locations as $location)
---
> 			foreach (array($file, ENVIRONMENT.DIRECTORY_SEPARATOR.$file) as $location)
114,122c138
< 					$loaded = TRUE;
< 					continue 2;
< 				}
< 
< 				if (file_exists($file_path))
< 				{
< 					$found = TRUE;
< 					break;
< 				}
---
> 					return TRUE;
125c141
< 			if ($found === FALSE)
---
> 				if ( ! file_exists($file_path))
143,150c160,162
< 				if (isset($this->config[$file]))
< 				{
< 					$this->config[$file] = array_merge($this->config[$file], $config);
< 				}
< 				else
< 				{
< 					$this->config[$file] = $config;
< 				}
---
> 					$this->config[$file] = isset($this->config[$file])
> 						? array_merge($this->config[$file], $config)
> 						: $config;
158,159c170
< 			unset($config);
< 
---
> 				$config = NULL;
162c173
< 			break;
---
> 			}
165c176
< 		if ($loaded === FALSE)
---
> 		if ($loaded === TRUE)
167c178,180
< 			if ($fail_gracefully === TRUE)
---
> 			return TRUE;
> 		}
> 		elseif ($fail_gracefully === TRUE)
171,172d183
< 			show_error('The configuration file '.$file.'.php does not exist.');
< 		}
174c185
< 		return TRUE;
---
> 		show_error('The configuration file '.$file.'.php does not exist.');
182,187c193,195
< 	 *
< 	 * @access	public
< 	 * @param	string	the config item name
< 	 * @param	string	the index name
< 	 * @param	bool
< 	 * @return	string
---
> 	 * @param	string	$item	Config item name
> 	 * @param	string	$index	Index name
> 	 * @return	string|null	The configuration item or NULL if the item doesn't exist
189c197
< 	function item($item, $index = '')
---
> 	public function item($item, $index = '')
193,212c201
< 			if ( ! isset($this->config[$item]))
< 			{
< 				return FALSE;
< 			}
< 
< 			$pref = $this->config[$item];
< 		}
< 		else
< 		{
< 			if ( ! isset($this->config[$index]))
< 			{
< 				return FALSE;
< 			}
< 
< 			if ( ! isset($this->config[$index][$item]))
< 			{
< 				return FALSE;
< 			}
< 
< 			$pref = $this->config[$index][$item];
---
> 			return isset($this->config[$item]) ? $this->config[$item] : NULL;
215c204
< 		return $pref;
---
> 		return isset($this->config[$index], $this->config[$index][$item]) ? $this->config[$index][$item] : NULL;
221c210
< 	 * Fetch a config file item - adds slash after item (if item is not empty)
---
> 	 * Fetch a config file item with slash appended (if not empty)
223,226c212,213
< 	 * @access	public
< 	 * @param	string	the config item name
< 	 * @param	bool
< 	 * @return	string
---
> 	 * @param	string		$item	Config item name
> 	 * @return	string|null	The configuration item or NULL if the item doesn't exist
228c215
< 	function slash_item($item)
---
> 	public function slash_item($item)
232c219
< 			return FALSE;
---
> 			return NULL;
234c221
< 		if( trim($this->config[$item]) == '')
---
> 		elseif (trim($this->config[$item]) === '')
245a233
> 	 *
248,249c236,239
< 	 * @access	public
< 	 * @param	string	the URI string
---
> 	 * @uses	CI_Config::_uri_string()
> 	 *
> 	 * @param	string|string[]	$uri	URI string or an array of segments
> 	 * @param	string	$protocol
252c242,249
< 	function site_url($uri = '')
---
> 	public function site_url($uri = '', $protocol = NULL)
> 	{
> 		$base_url = $this->slash_item('base_url');
> 
> 		if (isset($protocol))
> 		{
> 			// For protocol-relative links
> 			if ($protocol === '')
254c251,253
< 		if ($uri == '')
---
> 				$base_url = substr($base_url, strpos($base_url, '//'));
> 			}
> 			else
256c255
< 			return $this->slash_item('base_url').$this->item('index_page');
---
> 				$base_url = $protocol.substr($base_url, strpos($base_url, '://'));
257a257,264
> 		}
> 
> 		if (empty($uri))
> 		{
> 			return $base_url.$this->item('index_page');
> 		}
> 
> 		$uri = $this->_uri_string($uri);
259c266
< 		if ($this->item('enable_query_strings') == FALSE)
---
> 		if ($this->item('enable_query_strings') === FALSE)
261,262c268,274
< 			$suffix = ($this->item('url_suffix') == FALSE) ? '' : $this->item('url_suffix');
< 			return $this->slash_item('base_url').$this->slash_item('index_page').$this->_uri_string($uri).$suffix;
---
> 			$suffix = isset($this->config['url_suffix']) ? $this->config['url_suffix'] : '';
> 
> 			if ($suffix !== '')
> 			{
> 				if (($offset = strpos($uri, '?')) !== FALSE)
> 				{
> 					$uri = substr($uri, 0, $offset).$suffix.substr($uri, $offset);
266c278,286
< 			return $this->slash_item('base_url').$this->item('index_page').'?'.$this->_uri_string($uri);
---
> 					$uri .= $suffix;
> 				}
> 			}
> 
> 			return $base_url.$this->slash_item('index_page').$uri;
> 		}
> 		elseif (strpos($uri, '?') === FALSE)
> 		{
> 			$uri = '?'.$uri;
267a288,289
> 
> 		return $base_url.$this->item('index_page').$uri;
273a296
> 	 *
276,277c299,302
< 	 * @access public
< 	 * @param string $uri
---
> 	 * @uses	CI_Config::_uri_string()
> 	 *
> 	 * @param	string|string[]	$uri	URI string or an array of segments
> 	 * @param	string	$protocol
280c305,312
< 	function base_url($uri = '')
---
> 	public function base_url($uri = '', $protocol = NULL)
> 	{
> 		$base_url = $this->slash_item('base_url');
> 
> 		if (isset($protocol))
> 		{
> 			// For protocol-relative links
> 			if ($protocol === '')
282c314,322
< 		return $this->slash_item('base_url').ltrim($this->_uri_string($uri), '/');
---
> 				$base_url = substr($base_url, strpos($base_url, '//'));
> 			}
> 			else
> 			{
> 				$base_url = $protocol.substr($base_url, strpos($base_url, '://'));
> 			}
> 		}
> 
> 		return $base_url.ltrim($this->_uri_string($uri), '/');
288c328,331
< 	 * Build URI string for use in Config::site_url() and Config::base_url()
---
> 	 * Build URI string
> 	 *
> 	 * @used-by	CI_Config::site_url()
> 	 * @used-by	CI_Config::base_url()
290,291c333
< 	 * @access protected
< 	 * @param  $uri
---
> 	 * @param	string|string[]	$uri	URI string or an array of segments
296c338
< 		if ($this->item('enable_query_strings') == FALSE)
---
> 		if ($this->item('enable_query_strings') === FALSE)
302c344
< 			$uri = trim($uri, '/');
---
> 			return trim($uri, '/');
304,306c346
< 		else
< 		{
< 			if (is_array($uri))
---
> 		elseif (is_array($uri))
308,317c348
< 				$i = 0;
< 				$str = '';
< 				foreach ($uri as $key => $val)
< 				{
< 					$prefix = ($i == 0) ? '' : '&';
< 					$str .= $prefix.$key.'='.$val;
< 					$i++;
< 				}
< 				$uri = $str;
< 			}
---
> 			return http_build_query($uri);
327c359
< 	 * @access	public
---
> 	 * @deprecated	3.0.0	Encourages insecure practices
330c362
< 	function system_url()
---
> 	public function system_url()
332c364
< 		$x = explode("/", preg_replace("|/*(.+?)/*$|", "\\1", BASEPATH));
---
> 		$x = explode('/', preg_replace('|/*(.+?)/*$|', '\\1', BASEPATH));
341,343c373,374
< 	 * @access	public
< 	 * @param	string	the config item key
< 	 * @param	string	the config item value
---
> 	 * @param	string	$item	Config item key
> 	 * @param	string	$value	Config item value
346c377
< 	function set_item($item, $value)
---
> 	public function set_item($item, $value)
351,372d381
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Assign to Config
< 	 *
< 	 * This function is called by the front controller (CodeIgniter.php)
< 	 * after the Config class is instantiated.  It permits config items
< 	 * to be assigned or overriden by variables contained in the index.php file
< 	 *
< 	 * @access	private
< 	 * @param	array
< 	 * @return	void
< 	 */
< 	function _assign_to_config($items = array())
< 	{
< 		if (is_array($items))
< 		{
< 			foreach ($items as $key => $val)
< 			{
< 				$this->set_item($key, $val);
< 			}
< 		}
374,379d382
< }
< 
< // END CI_Config class
< 
< /* End of file Config.php */
< /* Location: ./system/core/Config.php */
diff -rBwi --ignore-file-name-case pos-prod/system/core/Controller.php opensourcepos/system/core/Controller.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * CodeIgniter Application Controller Class
---
>  * Application Controller Class
27,28c49,50
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/general/controllers.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/general/controllers.html
31a54,58
> 	/**
> 	 * Reference to the CI singleton
> 	 *
> 	 * @var	object
> 	 */
35c62,64
< 	 * Constructor
---
> 	 * Class constructor
> 	 *
> 	 * @return	void
52,53c80
< 		
< 		log_message('debug', "Controller Class Initialized");
---
> 		log_message('info', 'Controller Class Initialized');
55a83,90
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Get the CI singleton
> 	 *
> 	 * @static
> 	 * @return	object
> 	 */
60,61d94
< }
< // END Controller class
63,64c96
< /* End of file Controller.php */
< /* Location: ./system/core/Controller.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/core/Exceptions.php opensourcepos/system/core/Exceptions.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/exceptions.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/exceptions.html
28,32d49
< 	var $action;
< 	var $severity;
< 	var $message;
< 	var $filename;
< 	var $line;
38d54
< 	 * @access public
40c56
< 	var $ob_level;
---
> 	public $ob_level;
43c59
< 	 * List if available error levels
---
> 	 * List of available error levels
46d61
< 	 * @access public
48c63
< 	var $levels = array(
---
> 	public $levels = array(
65c79,81
< 	 * Constructor
---
> 	 * Class constructor
> 	 *
> 	 * @return	void
78c94
< 	 * This function logs PHP generated error messages
---
> 	 * Logs PHP generated error messages
80,85c96,100
< 	 * @access	private
< 	 * @param	string	the error severity
< 	 * @param	string	the error string
< 	 * @param	string	the error filepath
< 	 * @param	string	the error line number
< 	 * @return	string
---
> 	 * @param	int	$severity	Log level
> 	 * @param	string	$message	Error message
> 	 * @param	string	$filepath	File path
> 	 * @param	int	$line		Line number
> 	 * @return	void
87c102
< 	function log_exception($severity, $message, $filepath, $line)
---
> 	public function log_exception($severity, $message, $filepath, $line)
89,91c104,105
< 		$severity = ( ! isset($this->levels[$severity])) ? $severity : $this->levels[$severity];
< 
< 		log_message('error', 'Severity: '.$severity.'  --> '.$message. ' '.$filepath.' '.$line, TRUE);
---
> 		$severity = isset($this->levels[$severity]) ? $this->levels[$severity] : $severity;
> 		log_message('error', 'Severity: '.$severity.' --> '.$message.' '.$filepath.' '.$line);
97c111
< 	 * 404 Page Not Found Handler
---
> 	 * 404 Error Handler
99,102c113,117
< 	 * @access	private
< 	 * @param	string	the page
< 	 * @param 	bool	log error yes/no
< 	 * @return	string
---
> 	 * @uses	CI_Exceptions::show_error()
> 	 *
> 	 * @param	string	$page		Page URI
> 	 * @param 	bool	$log_error	Whether to log the error
> 	 * @return	void
104c119,126
< 	function show_404($page = '', $log_error = TRUE)
---
> 	public function show_404($page = '', $log_error = TRUE)
> 	{
> 		if (is_cli())
> 		{
> 			$heading = 'Not Found';
> 			$message = 'The controller/method pair you requested was not found.';
> 		}
> 		else
106,107c128,130
< 		$heading = "404 Page Not Found";
< 		$message = "The page you requested was not found.";
---
> 			$heading = '404 Page Not Found';
> 			$message = 'The page you requested was not found.';
> 		}
112c135
< 			log_message('error', '404 Page Not Found --> '.$page);
---
> 			log_message('error', $heading.': '.$page);
116c139
< 		exit;
---
> 		exit(4); // EXIT_UNKNOWN_FILE
124,133c147,155
< 	 * This function takes an error message as input
< 	 * (either as a string or an array) and displays
< 	 * it using the specified template.
< 	 *
< 	 * @access	private
< 	 * @param	string	the heading
< 	 * @param	string	the message
< 	 * @param	string	the template name
< 	 * @param 	int		the status code
< 	 * @return	string
---
> 	 * Takes an error message as input (either as a string or an array)
> 	 * and displays it using the specified template.
> 	 *
> 	 * @param	string		$heading	Page heading
> 	 * @param	string|string[]	$message	Error message
> 	 * @param	string		$template	Template name
> 	 * @param 	int		$status_code	(default: 500)
> 	 *
> 	 * @return	string	Error page output
135c157
< 	function show_error($heading, $message, $template = 'error_general', $status_code = 500)
---
> 	public function show_error($heading, $message, $template = 'error_general', $status_code = 500)
137c159,163
< 		set_status_header($status_code);
---
> 		$templates_path = config_item('error_views_path');
> 		if (empty($templates_path))
> 		{
> 			$templates_path = VIEWPATH.'errors'.DIRECTORY_SEPARATOR;
> 		}
139c165,175
< 		$message = '<p>'.implode('</p><p>', ( ! is_array($message)) ? array($message) : $message).'</p>';
---
> 		if (is_cli())
> 		{
> 			$message = "\t".(is_array($message) ? implode("\n\t", $message) : $message);
> 			$template = 'cli'.DIRECTORY_SEPARATOR.$template;
> 		}
> 		else
> 		{
> 			set_status_header($status_code);
> 			$message = '<p>'.(is_array($message) ? implode('</p><p>', $message) : $message).'</p>';
> 			$template = 'html'.DIRECTORY_SEPARATOR.$template;
> 		}
146c182
< 		include(APPPATH.'errors/'.$template.'.php');
---
> 		include($templates_path.$template.'.php');
153a190,227
> 	public function show_exception($exception)
> 	{
> 		$templates_path = config_item('error_views_path');
> 		if (empty($templates_path))
> 		{
> 			$templates_path = VIEWPATH.'errors'.DIRECTORY_SEPARATOR;
> 		}
> 
> 		$message = $exception->getMessage();
> 		if (empty($message))
> 		{
> 			$message = '(null)';
> 		}
> 
> 		if (is_cli())
> 		{
> 			$templates_path .= 'cli'.DIRECTORY_SEPARATOR;
> 		}
> 		else
> 		{
> 			set_status_header(500);
> 			$templates_path .= 'html'.DIRECTORY_SEPARATOR;
> 		}
> 
> 		if (ob_get_level() > $this->ob_level + 1)
> 		{
> 			ob_end_flush();
> 		}
> 
> 		ob_start();
> 		include($templates_path.'error_exception.php');
> 		$buffer = ob_get_contents();
> 		ob_end_clean();
> 		echo $buffer;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
157,162c231,235
< 	 * @access	private
< 	 * @param	string	the error severity
< 	 * @param	string	the error string
< 	 * @param	string	the error filepath
< 	 * @param	string	the error line number
< 	 * @return	string
---
> 	 * @param	int	$severity	Error level
> 	 * @param	string	$message	Error message
> 	 * @param	string	$filepath	File path
> 	 * @param	int	$line		Line number
> 	 * @return	string	Error page output
164c237,240
< 	function show_php_error($severity, $message, $filepath, $line)
---
> 	public function show_php_error($severity, $message, $filepath, $line)
> 	{
> 		$templates_path = config_item('error_views_path');
> 		if (empty($templates_path))
166c242,243
< 		$severity = ( ! isset($this->levels[$severity])) ? $severity : $this->levels[$severity];
---
> 			$templates_path = VIEWPATH.'errors'.DIRECTORY_SEPARATOR;
> 		}
168c245
< 		$filepath = str_replace("\\", "/", $filepath);
---
> 		$severity = isset($this->levels[$severity]) ? $this->levels[$severity] : $severity;
170c247,250
< 		// For safety reasons we do not show the full file path
---
> 		// For safety reasons we don't show the full file path in non-CLI requests
> 		if ( ! is_cli())
> 		{
> 			$filepath = str_replace('\\', '/', $filepath);
176a257,263
> 			$template = 'html'.DIRECTORY_SEPARATOR.'error_php';
> 		}
> 		else
> 		{
> 			$template = 'cli'.DIRECTORY_SEPARATOR.'error_php';
> 		}
> 
182c269
< 		include(APPPATH.'errors/error_php.php');
---
> 		include($templates_path.$template.'.php');
190,193d275
< // END Exceptions Class
< 
< /* End of file Exceptions.php */
< /* Location: ./system/core/Exceptions.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/core/Hooks.php opensourcepos/system/core/Hooks.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * CodeIgniter Hooks Class
---
>  * Hooks Class
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/encryption.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/general/hooks.html
32c54
< 	 * Determines wether hooks are enabled
---
> 	 * Determines whether hooks are enabled
36c58,59
< 	var $enabled		= FALSE;
---
> 	public $enabled = FALSE;
> 
42c65,66
< 	var $hooks			= array();
---
> 	public $hooks =	array();
> 
44c68
< 	 * Determines wether hook is in progress, used to prevent infinte loops
---
> 	 * Array with class objects to use hooks methods
46c70
< 	 * @var bool
---
> 	 * @var array
48c72
< 	var $in_progress	= FALSE;
---
> 	protected $_objects = array();
51c75
< 	 * Constructor
---
> 	 * In progress flag
52a77,79
> 	 * Determines whether hook is in progress, used to prevent infinte loops
> 	 *
> 	 * @var	bool
54,60c81
< 	function __construct()
< 	{
< 		$this->_initialize();
< 		log_message('debug', "Hooks Class Initialized");
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_in_progress = FALSE;
63c84
< 	 * Initialize the Hooks Preferences
---
> 	 * Class constructor
65d85
< 	 * @access	private
68c88
< 	function _initialize()
---
> 	public function __construct()
70a91
> 		log_message('info', 'Hooks Class Initialized');
74,75c95
< 
< 		if ($CFG->item('enable_hooks') == FALSE)
---
> 		if ($CFG->item('enable_hooks') === FALSE)
81,87c101
< 		// If there are no hooks, we're done.
< 
< 		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/hooks.php'))
< 		{
< 		    include(APPPATH.'config/'.ENVIRONMENT.'/hooks.php');
< 		}
< 		elseif (is_file(APPPATH.'config/hooks.php'))
---
> 		if (file_exists(APPPATH.'config/hooks.php'))
91a106,109
> 		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/hooks.php'))
> 		{
> 			include(APPPATH.'config/'.ENVIRONMENT.'/hooks.php');
> 		}
92a111
> 		// If there are no hooks, we're done.
107c126,128
< 	 * Calls a particular hook
---
> 	 * Calls a particular hook. Called by CodeIgniter.php.
> 	 *
> 	 * @uses	CI_Hooks::_run_hook()
109,111c130,131
< 	 * @access	private
< 	 * @param	string	the hook name
< 	 * @return	mixed
---
> 	 * @param	string	$which	Hook name
> 	 * @return	bool	TRUE on success or FALSE on failure
113c133
< 	function _call_hook($which = '')
---
> 	public function call_hook($which = '')
120c140
< 		if (isset($this->hooks[$which][0]) AND is_array($this->hooks[$which][0]))
---
> 		if (is_array($this->hooks[$which]) && ! isset($this->hooks[$which]['function']))
142,144c162,163
< 	 * @access	private
< 	 * @param	array	the hook details
< 	 * @return	bool
---
> 	 * @param	array	$data	Hook details
> 	 * @return	bool	TRUE on success or FALSE on failure
146c165
< 	function _run_hook($data)
---
> 	protected function _run_hook($data)
148c167,176
< 		if ( ! is_array($data))
---
> 		// Closures/lambda functions and array($object, 'method') callables
> 		if (is_callable($data))
> 		{
> 			is_array($data)
> 				? $data[0]->{$data[1]}()
> 				: $data();
> 
> 			return TRUE;
> 		}
> 		elseif ( ! is_array($data))
159,160c187
< 
< 		if ($this->in_progress == TRUE)
---
> 		if ($this->_in_progress === TRUE)
169c196
< 		if ( ! isset($data['filepath']) OR ! isset($data['filename']))
---
> 		if ( ! isset($data['filepath'], $data['filename']))
181,183c208,211
< 		// -----------------------------------
< 		// Set class/function name
< 		// -----------------------------------
---
> 		// Determine and class and/or function names
> 		$class		= empty($data['class']) ? FALSE : $data['class'];
> 		$function	= empty($data['function']) ? FALSE : $data['function'];
> 		$params		= isset($data['params']) ? $data['params'] : '';
185,189c213
< 		$class		= FALSE;
< 		$function	= FALSE;
< 		$params		= '';
< 
< 		if (isset($data['class']) AND $data['class'] != '')
---
> 		if (empty($function))
191c215
< 			$class = $data['class'];
---
> 			return FALSE;
194,197c218,219
< 		if (isset($data['function']))
< 		{
< 			$function = $data['function'];
< 		}
---
> 		// Set the _in_progress flag
> 		$this->_in_progress = TRUE;
199c221,222
< 		if (isset($data['params']))
---
> 		// Call the requested class and/or function
> 		if ($class !== FALSE)
201c224,229
< 			$params = $data['params'];
---
> 			// The object is stored?
> 			if (isset($this->_objects[$class]))
> 			{
> 				if (method_exists($this->_objects[$class], $function))
> 				{
> 					$this->_objects[$class]->$function($params);
203,204c231
< 
< 		if ($class === FALSE AND $function === FALSE)
---
> 				else
206c233
< 			return FALSE;
---
> 					return $this->_in_progress = FALSE;
208,219c235,236
< 
< 		// -----------------------------------
< 		// Set the in_progress flag
< 		// -----------------------------------
< 
< 		$this->in_progress = TRUE;
< 
< 		// -----------------------------------
< 		// Call the requested class and/or function
< 		// -----------------------------------
< 
< 		if ($class !== FALSE)
---
> 			}
> 			else
221c238,240
< 			if ( ! class_exists($class))
---
> 				class_exists($class, FALSE) OR require_once($filepath);
> 
> 				if ( ! class_exists($class, FALSE) OR ! method_exists($class, $function))
223c242
< 				require($filepath);
---
> 					return $this->_in_progress = FALSE;
226,227c245,248
< 			$HOOK = new $class;
< 			$HOOK->$function($params);
---
> 				// Store the object and execute the method
> 				$this->_objects[$class] = new $class();
> 				$this->_objects[$class]->$function($params);
> 			}
230a252,253
> 			function_exists($function) OR require_once($filepath);
> 
233c256
< 				require($filepath);
---
> 				return $this->_in_progress = FALSE;
239c262
< 		$this->in_progress = FALSE;
---
> 		$this->_in_progress = FALSE;
244,248d266
< 
< // END CI_Hooks class
< 
< /* End of file Hooks.php */
< /* Location: ./system/core/Hooks.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/core/index.html opensourcepos/system/core/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/core/Input.php opensourcepos/system/core/Input.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/input.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/input.html
36c58,59
< 	var $ip_address				= FALSE;
---
> 	protected $ip_address = FALSE;
> 
38c61
< 	 * user agent (web browser) being used by the current user
---
> 	 * Allow GET array flag
40,44c63
< 	 * @var string
< 	 */
< 	var $user_agent				= FALSE;
< 	/**
< 	 * If FALSE, then $_GET will be set to an empty array
---
> 	 * If set to FALSE, then $_GET will be set to an empty array.
48c67,68
< 	var $_allow_get_array		= TRUE;
---
> 	protected $_allow_get_array = TRUE;
> 
50c70,72
< 	 * If TRUE, then newlines are standardized
---
> 	 * Standardize new lines flag
> 	 *
> 	 * If set to TRUE, then newlines are standardized.
54c76,77
< 	var $_standardize_newlines	= TRUE;
---
> 	protected $_standardize_newlines;
> 
56,57c79,83
< 	 * Determines whether the XSS filter is always active when GET, POST or COOKIE data is encountered
< 	 * Set automatically based on config setting
---
> 	 * Enable XSS flag
> 	 *
> 	 * Determines whether the XSS filter is always active when
> 	 * GET, POST or COOKIE data is encountered.
> 	 * Set automatically based on config setting.
61c87,88
< 	var $_enable_xss			= FALSE;
---
> 	protected $_enable_xss = FALSE;
> 
62a90,91
> 	 * Enable CSRF flag
> 	 *
64c93
< 	 * Set automatically based on config setting
---
> 	 * Set automatically based on config setting.
68c97,98
< 	var $_enable_csrf			= FALSE;
---
> 	protected $_enable_csrf = FALSE;
> 
77c107,131
< 	 * Constructor
---
> 	 * Raw input stream data
> 	 *
> 	 * Holds a cache of php://input contents
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_raw_input_stream;
> 
> 	/**
> 	 * Parsed input stream data
> 	 *
> 	 * Parsed from php://input at runtime
> 	 *
> 	 * @see	CI_Input::input_stream()
> 	 * @var	array
> 	 */
> 	protected $_input_stream;
> 
> 	protected $security;
> 	protected $uni;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
79,80c133,134
< 	 * Sets whether to globally enable the XSS processing
< 	 * and whether to allow the $_GET array
---
> 	 * Determines whether to globally enable the XSS processing
> 	 * and whether to allow the $_GET array.
86,87d139
< 		log_message('debug', "Input Class Initialized");
< 
90a143
> 		$this->_standardize_newlines	= (bool) config_item('standardize_newlines');
92,93c145
< 		global $SEC;
< 		$this->security =& $SEC;
---
> 		$this->security =& load_class('Security', 'core');
98,99c150
< 			global $UNI;
< 			$this->uni =& $UNI;
---
> 			$this->uni =& load_class('Utf8', 'core');
103a155,162
> 
> 		// CSRF Protection check
> 		if ($this->_enable_csrf === TRUE && ! is_cli())
> 		{
> 			$this->security->csrf_verify();
> 		}
> 
> 		log_message('info', 'Input Class Initialized');
111c170
< 	 * This is a helper function to retrieve values from global arrays
---
> 	 * Internal method used to retrieve values from global arrays.
113,117c172,175
< 	 * @access	private
< 	 * @param	array
< 	 * @param	string
< 	 * @param	bool
< 	 * @return	string
---
> 	 * @param	array	&$array		$_GET, $_POST, $_COOKIE, $_SERVER, etc.
> 	 * @param	mixed	$index		Index for item to be fetched from $array
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
119c177,185
< 	function _fetch_from_array(&$array, $index = '', $xss_clean = FALSE)
---
> 	protected function _fetch_from_array(&$array, $index = NULL, $xss_clean = NULL)
> 	{
> 		is_bool($xss_clean) OR $xss_clean = $this->_enable_xss;
> 
> 		// If $index is NULL, it means that the whole $array is requested
> 		isset($index) OR $index = array_keys($array);
> 
> 		// allow fetching multiple keys at once
> 		if (is_array($index))
121c187,188
< 		if ( ! isset($array[$index]))
---
> 			$output = array();
> 			foreach ($index as $key)
123c190,208
< 			return FALSE;
---
> 				$output[$key] = $this->_fetch_from_array($array, $key, $xss_clean);
> 			}
> 
> 			return $output;
> 		}
> 
> 		if (isset($array[$index]))
> 		{
> 			$value = $array[$index];
> 		}
> 		elseif (($count = preg_match_all('/(?:^[^\[]+)|\[[^]]*\]/', $index, $matches)) > 1) // Does the index contain array notation
> 		{
> 			$value = $array;
> 			for ($i = 0; $i < $count; $i++)
> 			{
> 				$key = trim($matches[0][$i], '[]');
> 				if ($key === '') // Empty notation will return the value as array
> 				{
> 					break;
126c211,221
< 		if ($xss_clean === TRUE)
---
> 				if (isset($value[$key]))
> 				{
> 					$value = $value[$key];
> 				}
> 				else
> 				{
> 					return NULL;
> 				}
> 			}
> 		}
> 		else
128c223
< 			return $this->security->xss_clean($array[$index]);
---
> 			return NULL;
131c226,228
< 		return $array[$index];
---
> 		return ($xss_clean === TRUE)
> 			? $this->security->xss_clean($value)
> 			: $value;
139,142c236,238
< 	* @access	public
< 	* @param	string
< 	* @param	bool
< 	* @return	string
---
> 	 * @param	mixed	$index		Index for item to be fetched from $_GET
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
144,147c240
< 	function get($index = NULL, $xss_clean = FALSE)
< 	{
< 		// Check if a field has been provided
< 		if ($index === NULL AND ! empty($_GET))
---
> 	public function get($index = NULL, $xss_clean = NULL)
149,158d241
< 			$get = array();
< 
< 			// loop through the full _GET array
< 			foreach (array_keys($_GET) as $key)
< 			{
< 				$get[$key] = $this->_fetch_from_array($_GET, $key, $xss_clean);
< 			}
< 			return $get;
< 		}
< 
167,170c250,252
< 	* @access	public
< 	* @param	string
< 	* @param	bool
< 	* @return	string
---
> 	 * @param	mixed	$index		Index for item to be fetched from $_POST
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
172,180c254
< 	function post($index = NULL, $xss_clean = FALSE)
< 	{
< 		// Check if a field has been provided
< 		if ($index === NULL AND ! empty($_POST))
< 		{
< 			$post = array();
< 
< 			// Loop through the full _POST array and return it
< 			foreach (array_keys($_POST) as $key)
---
> 	public function post($index = NULL, $xss_clean = NULL)
182,186d255
< 				$post[$key] = $this->_fetch_from_array($_POST, $key, $xss_clean);
< 			}
< 			return $post;
< 		}
< 
194c262
< 	* Fetch an item from either the GET array or the POST
---
> 	 * Fetch an item from POST data with fallback to GET
196,199c264,266
< 	* @access	public
< 	* @param	string	The index key
< 	* @param	bool	XSS cleaning
< 	* @return	string
---
> 	 * @param	string	$index		Index for item to be fetched from $_POST or $_GET
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
201,203c268
< 	function get_post($index = '', $xss_clean = FALSE)
< 	{
< 		if ( ! isset($_POST[$index]) )
---
> 	public function post_get($index, $xss_clean = NULL)
205c270,272
< 			return $this->get($index, $xss_clean);
---
> 		return isset($_POST[$index])
> 			? $this->post($index, $xss_clean)
> 			: $this->get($index, $xss_clean);
207c274,284
< 		else
---
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fetch an item from GET data with fallback to POST
> 	 *
> 	 * @param	string	$index		Index for item to be fetched from $_GET or $_POST
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
> 	 */
> 	public function get_post($index, $xss_clean = NULL)
209,210c286,288
< 			return $this->post($index, $xss_clean);
< 		}
---
> 		return isset($_GET[$index])
> 			? $this->get($index, $xss_clean)
> 			: $this->post($index, $xss_clean);
218,221c296,298
< 	* @access	public
< 	* @param	string
< 	* @param	bool
< 	* @return	string
---
> 	 * @param	mixed	$index		Index for item to be fetched from $_COOKIE
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
223c300
< 	function cookie($index = '', $xss_clean = FALSE)
---
> 	public function cookie($index = NULL, $xss_clean = NULL)
227a305,343
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fetch an item from the SERVER array
> 	 *
> 	 * @param	mixed	$index		Index for item to be fetched from $_SERVER
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
> 	 */
> 	public function server($index, $xss_clean = NULL)
> 	{
> 		return $this->_fetch_from_array($_SERVER, $index, $xss_clean);
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Fetch an item from the php://input stream
> 	 *
> 	 * Useful when you need to access PUT, DELETE or PATCH request data.
> 	 *
> 	 * @param	string	$index		Index for item to be fetched
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
> 	 * @return	mixed
> 	 */
> 	public function input_stream($index = NULL, $xss_clean = NULL)
> 	{
> 		// Prior to PHP 5.6, the input stream can only be read once,
> 		// so we'll need to check if we have already done that first.
> 		if ( ! is_array($this->_input_stream))
> 		{
> 			// $this->raw_input_stream will trigger __get().
> 			parse_str($this->raw_input_stream, $this->_input_stream);
> 			is_array($this->_input_stream) OR $this->_input_stream = array();
> 		}
> 
> 		return $this->_fetch_from_array($this->_input_stream, $index, $xss_clean);
> 	}
> 
233c349
< 	* Accepts six parameter, or you can submit an associative
---
> 	 * Accepts an arbitrary number of parameters (up to 7) or an associative
236,243c352,359
< 	* @access	public
< 	* @param	mixed
< 	* @param	string	the value of the cookie
< 	* @param	string	the number of seconds until expiration
< 	* @param	string	the cookie domain.  Usually:  .yourdomain.com
< 	* @param	string	the cookie path
< 	* @param	string	the cookie prefix
< 	* @param	bool	true makes the cookie secure
---
> 	 * @param	string|mixed[]	$name		Cookie name or an array containing parameters
> 	 * @param	string		$value		Cookie value
> 	 * @param	int		$expire		Cookie expiration time in seconds
> 	 * @param	string		$domain		Cookie domain (e.g.: '.yourdomain.com')
> 	 * @param	string		$path		Cookie path (default: '/')
> 	 * @param	string		$prefix		Cookie name prefix
> 	 * @param	bool		$secure		Whether to only transfer cookies via SSL
> 	 * @param	bool		$httponly	Whether to only makes the cookie accessible via HTTP (no javascript)
246c362
< 	function set_cookie($name = '', $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE)
---
> 	public function set_cookie($name, $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE, $httponly = FALSE)
251c367
< 			foreach (array('value', 'expire', 'domain', 'path', 'prefix', 'secure', 'name') as $item)
---
> 			foreach (array('value', 'expire', 'domain', 'path', 'prefix', 'secure', 'httponly', 'name') as $item)
260c376
< 		if ($prefix == '' AND config_item('cookie_prefix') != '')
---
> 		if ($prefix === '' && config_item('cookie_prefix') !== '')
264c380,381
< 		if ($domain == '' AND config_item('cookie_domain') != '')
---
> 
> 		if ($domain == '' && config_item('cookie_domain') != '')
268c385,386
< 		if ($path == '/' AND config_item('cookie_path') != '/')
---
> 
> 		if ($path === '/' && config_item('cookie_path') !== '/')
272c390,391
< 		if ($secure == FALSE AND config_item('cookie_secure') != FALSE)
---
> 
> 		if ($secure === FALSE && config_item('cookie_secure') === TRUE)
276a396,400
> 		if ($httponly === FALSE && config_item('cookie_httponly') !== FALSE)
> 		{
> 			$httponly = config_item('cookie_httponly');
> 		}
> 
286,301c410
< 		setcookie($prefix.$name, $value, $expire, $path, $domain, $secure);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	* Fetch an item from the SERVER array
< 	*
< 	* @access	public
< 	* @param	string
< 	* @param	bool
< 	* @return	string
< 	*/
< 	function server($index = '', $xss_clean = FALSE)
< 	{
< 		return $this->_fetch_from_array($_SERVER, $index, $xss_clean);
---
> 		setcookie($prefix.$name, $value, $expire, $path, $domain, $secure, $httponly);
309c418,420
< 	* @return	string
---
> 	 * Determines and validates the visitor's IP address.
> 	 *
> 	 * @return	string	IP address
319c430
< 		if ( ! empty($proxy_ips))
---
> 		if ( ! empty($proxy_ips) && ! is_array($proxy_ips))
321a433,438
> 		}
> 
> 		$this->ip_address = $this->server('REMOTE_ADDR');
> 
> 		if ($proxy_ips)
> 		{
324c441
< 				if (($spoof = $this->server($header)) !== FALSE)
---
> 				if (($spoof = $this->server($header)) !== NULL)
329,333c446
< 					if (strpos($spoof, ',') !== FALSE)
< 					{
< 						$spoof = explode(',', $spoof, 2);
< 						$spoof = $spoof[0];
< 					}
---
> 					sscanf($spoof, '%[^,]', $spoof);
337c450
< 						$spoof = FALSE;
---
> 						$spoof = NULL;
346,349c459
< 			$this->ip_address = ($spoof !== FALSE && in_array($_SERVER['REMOTE_ADDR'], $proxy_ips, TRUE))
< 				? $spoof : $_SERVER['REMOTE_ADDR'];
< 		}
< 		else
---
> 			if ($spoof)
351,354c461,468
< 			$this->ip_address = $_SERVER['REMOTE_ADDR'];
< 		}
< 
< 		if ( ! $this->valid_ip($this->ip_address))
---
> 				for ($i = 0, $c = count($proxy_ips); $i < $c; $i++)
> 				{
> 					// Check if we have an IP address or a subnet
> 					if (strpos($proxy_ips[$i], '/') === FALSE)
> 					{
> 						// An IP address (and not a subnet) is specified.
> 						// We can compare right away.
> 						if ($proxy_ips[$i] === $this->ip_address)
356c470,471
< 			$this->ip_address = '0.0.0.0';
---
> 							$this->ip_address = $spoof;
> 							break;
359c474
< 		return $this->ip_address;
---
> 						continue;
362,374c477,478
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	* Validate IP Address
< 	*
< 	* @access	public
< 	* @param	string
< 	* @param	string	ipv4 or ipv6
< 	* @return	bool
< 	*/
< 	public function valid_ip($ip, $which = '')
< 	{
< 		$which = strtolower($which);
---
> 					// We have a subnet ... now the heavy lifting begins
> 					isset($separator) OR $separator = $this->valid_ip($this->ip_address, 'ipv6') ? ':' : '.';
376,377c480,481
< 		// First check if filter_var is available
< 		if (is_callable('filter_var'))
---
> 					// If the proxy entry doesn't match the IP protocol - skip it
> 					if (strpos($proxy_ips[$i], $separator) === FALSE)
379,388c483
< 			switch ($which) {
< 				case 'ipv4':
< 					$flag = FILTER_FLAG_IPV4;
< 					break;
< 				case 'ipv6':
< 					$flag = FILTER_FLAG_IPV6;
< 					break;
< 				default:
< 					$flag = '';
< 					break;
---
> 						continue;
391,394c486,487
< 			return (bool) filter_var($ip, FILTER_VALIDATE_IP, $flag);
< 		}
< 
< 		if ($which !== 'ipv6' && $which !== 'ipv4')
---
> 					// Convert the REMOTE_ADDR IP address to binary, if needed
> 					if ( ! isset($ip, $sprintf))
396c489
< 			if (strpos($ip, ':') !== FALSE)
---
> 						if ($separator === ':')
398,400c491,499
< 				$which = 'ipv6';
< 			}
< 			elseif (strpos($ip, '.') !== FALSE)
---
> 							// Make sure we're have the "full" IPv6 format
> 							$ip = explode(':',
> 								str_replace('::',
> 									str_repeat(':', 9 - substr_count($this->ip_address, ':')),
> 									$this->ip_address
> 								)
> 							);
> 
> 							for ($j = 0; $j < 8; $j++)
402c501,504
< 				$which = 'ipv4';
---
> 								$ip[$j] = intval($ip[$j], 16);
> 							}
> 
> 							$sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';
406,407c508,509
< 				return FALSE;
< 			}
---
> 							$ip = explode('.', $this->ip_address);
> 							$sprintf = '%08b%08b%08b%08b';
410,411c512
< 		$func = '_valid_'.$which;
< 		return $this->$func($ip);
---
> 						$ip = vsprintf($sprintf, $ip);
414c515,516
< 	// --------------------------------------------------------------------
---
> 					// Split the netmask length off the network address
> 					sscanf($proxy_ips[$i], '%[^/]/%d', $netaddr, $masklen);
416,425c518,519
< 	/**
< 	* Validate IPv4 Address
< 	*
< 	* Updated version suggested by Geert De Deckere
< 	*
< 	* @access	protected
< 	* @param	string
< 	* @return	bool
< 	*/
< 	protected function _valid_ipv4($ip)
---
> 					// Again, an IPv6 address is most likely in a compressed form
> 					if ($separator === ':')
427,430c521,522
< 		$ip_segments = explode('.', $ip);
< 
< 		// Always 4 segments needed
< 		if (count($ip_segments) !== 4)
---
> 						$netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));
> 						for ($i = 0; $i < 8; $i++)
432c524,525
< 			return FALSE;
---
> 							$netaddr[$i] = intval($netaddr[$i], 16);
> 						}
434,435c527
< 		// IP can not start with 0
< 		if ($ip_segments[0][0] == '0')
---
> 					else
437c529
< 			return FALSE;
---
> 						$netaddr = explode('.', $netaddr);
440,445c532,533
< 		// Check each segment
< 		foreach ($ip_segments as $segment)
< 		{
< 			// IP segments must be digits and can not be
< 			// longer than 3 digits or greater then 255
< 			if ($segment == '' OR preg_match("/[^0-9]/", $segment) OR $segment > 255 OR strlen($segment) > 3)
---
> 					// Convert to binary and finally compare
> 					if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0)
447c535,536
< 				return FALSE;
---
> 						$this->ip_address = $spoof;
> 						break;
450,451d538
< 
< 		return TRUE;
453,479d539
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	* Validate IPv6 Address
< 	*
< 	* @access	protected
< 	* @param	string
< 	* @return	bool
< 	*/
< 	protected function _valid_ipv6($str)
< 	{
< 		// 8 groups, separated by :
< 		// 0-ffff per group
< 		// one set of consecutive 0 groups can be collapsed to ::
< 
< 		$groups = 8;
< 		$collapsed = FALSE;
< 
< 		$chunks = array_filter(
< 			preg_split('/(:{1,2})/', $str, NULL, PREG_SPLIT_DELIM_CAPTURE)
< 		);
< 
< 		// Rule out easy nonsense
< 		if (current($chunks) == ':' OR end($chunks) == ':')
< 		{
< 			return FALSE;
482,487c542
< 		// PHP supports IPv4-mapped IPv6 addresses, so we'll expect those as well
< 		if (strpos(end($chunks), '.') !== FALSE)
< 		{
< 			$ipv4 = array_pop($chunks);
< 
< 			if ( ! $this->_valid_ipv4($ipv4))
---
> 		if ( ! $this->valid_ip($this->ip_address))
489,492c544
< 				return FALSE;
< 			}
< 
< 			$groups--;
---
> 			return $this->ip_address = '0.0.0.0';
495,501c547
< 		while ($seg = array_pop($chunks))
< 		{
< 			if ($seg[0] == ':')
< 			{
< 				if (--$groups == 0)
< 				{
< 					return FALSE;	// too many groups
---
> 		return $this->ip_address;
504,507c550
< 				if (strlen($seg) > 2)
< 				{
< 					return FALSE;	// long separator
< 				}
---
> 	// --------------------------------------------------------------------
509,511c552,559
< 				if ($seg == '::')
< 				{
< 					if ($collapsed)
---
> 	/**
> 	 * Validate IP Address
> 	 *
> 	 * @param	string	$ip	IP address
> 	 * @param	string	$which	IP protocol: 'ipv4' or 'ipv6'
> 	 * @return	bool
> 	 */
> 	public function valid_ip($ip, $which = '')
513,519c561
< 						return FALSE;	// multiple collapsed
< 					}
< 
< 					$collapsed = TRUE;
< 				}
< 			}
< 			elseif (preg_match("/[^0-9a-f]/i", $seg) OR strlen($seg) > 4)
---
> 		switch (strtolower($which))
521,522c563,571
< 				return FALSE; // invalid segment
< 			}
---
> 			case 'ipv4':
> 				$which = FILTER_FLAG_IPV4;
> 				break;
> 			case 'ipv6':
> 				$which = FILTER_FLAG_IPV6;
> 				break;
> 			default:
> 				$which = NULL;
> 				break;
525c574
< 		return $collapsed OR $groups == 1;
---
> 		return (bool) filter_var($ip, FILTER_VALIDATE_IP, $which);
531c580
< 	* User Agent
---
> 	 * Fetch User Agent string
533,534c582
< 	* @access	public
< 	* @return	string
---
> 	 * @return	string|null	User Agent string or NULL if it doesn't exist
536,538c584
< 	function user_agent()
< 	{
< 		if ($this->user_agent !== FALSE)
---
> 	public function user_agent($xss_clean = NULL)
540,545c586
< 			return $this->user_agent;
< 		}
< 
< 		$this->user_agent = ( ! isset($_SERVER['HTTP_USER_AGENT'])) ? FALSE : $_SERVER['HTTP_USER_AGENT'];
< 
< 		return $this->user_agent;
---
> 		return $this->_fetch_from_array($_SERVER, 'HTTP_USER_AGENT', $xss_clean);
553,557c594
< 	* This function does the following:
< 	*
< 	* Unsets $_GET data (if query strings are not enabled)
< 	*
< 	* Unsets all globals if register_globals is enabled
---
> 	 * Internal method serving for the following purposes:
559c596,598
< 	* Standardizes newline characters to \n
---
> 	 *	- Unsets $_GET data, if query strings are not enabled
> 	 *	- Cleans POST, COOKIE and SERVER data
> 	 * 	- Standardizes newline characters to PHP_EOL
561d599
< 	* @access	private
564,588c602
< 	function _sanitize_globals()
< 	{
< 		// It would be "wrong" to unset any of these GLOBALS.
< 		$protected = array('_SERVER', '_GET', '_POST', '_FILES', '_REQUEST',
< 							'_SESSION', '_ENV', 'GLOBALS', 'HTTP_RAW_POST_DATA',
< 							'system_folder', 'application_folder', 'BM', 'EXT',
< 							'CFG', 'URI', 'RTR', 'OUT', 'IN');
< 
< 		// Unset globals for securiy.
< 		// This is effectively the same as register_globals = off
< 		foreach (array($_GET, $_POST, $_COOKIE) as $global)
< 		{
< 			if ( ! is_array($global))
< 			{
< 				if ( ! in_array($global, $protected))
< 				{
< 					global $$global;
< 					$$global = NULL;
< 				}
< 			}
< 			else
< 			{
< 				foreach ($global as $key => $val)
< 				{
< 					if ( ! in_array($key, $protected))
---
> 	protected function _sanitize_globals()
590,596d603
< 						global $$key;
< 						$$key = NULL;
< 					}
< 				}
< 			}
< 		}
< 
598c605
< 		if ($this->_allow_get_array == FALSE)
---
> 		if ($this->_allow_get_array === FALSE)
602,604c609
< 		else
< 		{
< 			if (is_array($_GET) AND count($_GET) > 0)
---
> 		elseif (is_array($_GET))
611d615
< 		}
614c618
< 		if (is_array($_POST) AND count($_POST) > 0)
---
> 		if (is_array($_POST))
623c627
< 		if (is_array($_COOKIE) AND count($_COOKIE) > 0)
---
> 		if (is_array($_COOKIE))
630,632c634,638
< 			unset($_COOKIE['$Version']);
< 			unset($_COOKIE['$Path']);
< 			unset($_COOKIE['$Domain']);
---
> 			unset(
> 				$_COOKIE['$Version'],
> 				$_COOKIE['$Path'],
> 				$_COOKIE['$Domain']
> 			);
636c642,649
< 				$_COOKIE[$this->_clean_input_keys($key)] = $this->_clean_input_data($val);
---
> 				if (($cookie_key = $this->_clean_input_keys($key)) !== FALSE)
> 				{
> 					$_COOKIE[$cookie_key] = $this->_clean_input_data($val);
> 				}
> 				else
> 				{
> 					unset($_COOKIE[$key]);
> 				}
643,650c656
< 
< 		// CSRF Protection check on HTTP requests
< 		if ($this->_enable_csrf == TRUE && ! $this->is_cli_request())
< 		{
< 			$this->security->csrf_verify();
< 		}
< 
< 		log_message('debug', "Global POST and COOKIE data sanitized");
---
> 		log_message('debug', 'Global POST, GET and COOKIE data sanitized');
658,659c664,665
< 	* This is a helper function. It escapes data and
< 	* standardizes newline characters to \n
---
> 	 * Internal method that aids in escaping data and
> 	 * standardizing newline characters to PHP_EOL.
661,662c667
< 	* @access	private
< 	* @param	string
---
> 	 * @param	string|string[]	$str	Input string(s)
665c670
< 	function _clean_input_data($str)
---
> 	protected function _clean_input_data($str)
670c675
< 			foreach ($str as $key => $val)
---
> 			foreach (array_keys($str) as $key)
672c677
< 				$new_array[$this->_clean_input_keys($key)] = $this->_clean_input_data($val);
---
> 				$new_array[$this->_clean_input_keys($key)] = $this->_clean_input_data($str[$key]);
694,700c699
< 		$str = remove_invisible_characters($str);
< 
< 		// Should we filter the input data?
< 		if ($this->_enable_xss === TRUE)
< 		{
< 			$str = $this->security->xss_clean($str);
< 		}
---
> 		$str = remove_invisible_characters($str, FALSE);
703c702
< 		if ($this->_standardize_newlines == TRUE)
---
> 		if ($this->_standardize_newlines === TRUE)
705,708c704
< 			if (strpos($str, "\r") !== FALSE)
< 			{
< 				$str = str_replace(array("\r\n", "\r", "\r\n\n"), PHP_EOL, $str);
< 			}
---
> 			return preg_replace('/(?:\r\n|[\r\n])/', PHP_EOL, $str);
719c715
< 	* This is a helper function. To prevent malicious users
---
> 	 * Internal method that helps to prevent malicious users
723,725c719,723
< 	* @access	private
< 	* @param	string
< 	* @return	string
---
> 	 * @param	string	$str	Input string
> 	 * @param	bool	$fatal	Whether to terminate script exection
> 	 *				or to return FALSE if an invalid
> 	 *				key is encountered
> 	 * @return	string|bool
727c725,729
< 	function _clean_input_keys($str)
---
> 	protected function _clean_input_keys($str, $fatal = TRUE)
> 	{
> 		if ( ! preg_match('/^[a-z0-9:_\/|-]+$/i', $str))
> 		{
> 			if ($fatal === TRUE)
729c731,733
< 		if ( ! preg_match("/^[a-z0-9:_\/-]+$/i", $str))
---
> 				return FALSE;
> 			}
> 			else
731c735,738
< 			exit('Disallowed Key Characters.');
---
> 				set_status_header(503);
> 				echo 'Disallowed Key Characters.';
> 				exit(7); // EXIT_USER_INPUT
> 			}
737c744
< 			$str = $this->uni->clean_string($str);
---
> 			return $this->uni->clean_string($str);
748,752c755
< 	 * In Apache, you can simply call apache_request_headers(), however for
< 	 * people running other webservers the function is undefined.
< 	 *
< 	 * @param	bool XSS cleaning
< 	 *
---
> 	 * @param	bool	$xss_clean	Whether to apply XSS filtering
757,758c760,761
< 		// Look at Apache go!
< 		if (function_exists('apache_request_headers'))
---
> 		// If header is already defined, return it immediately
> 		if ( ! empty($this->headers))
760c763
< 			$headers = apache_request_headers();
---
> 			return $this->headers;
762c765,767
< 		else
---
> 
> 		// In Apache, you can simply call apache_request_headers()
> 		if (function_exists('apache_request_headers'))
764c769,772
< 			$headers['Content-Type'] = (isset($_SERVER['CONTENT_TYPE'])) ? $_SERVER['CONTENT_TYPE'] : @getenv('CONTENT_TYPE');
---
> 			return $this->headers = apache_request_headers();
> 		}
> 
> 		$this->headers['Content-Type'] = isset($_SERVER['CONTENT_TYPE']) ? $_SERVER['CONTENT_TYPE'] : @getenv('CONTENT_TYPE');
768c776
< 				if (strncmp($key, 'HTTP_', 5) === 0)
---
> 			if (sscanf($key, 'HTTP_%s', $header) === 1)
770,774d777
< 					$headers[substr($key, 5)] = $this->_fetch_from_array($_SERVER, $key, $xss_clean);
< 				}
< 			}
< 		}
< 
776,779c779,780
< 		foreach ($headers as $key => $val)
< 		{
< 			$key = str_replace('_', ' ', strtolower($key));
< 			$key = str_replace(' ', '-', ucwords($key));
---
> 				$header = str_replace('_', ' ', strtolower($header));
> 				$header = str_replace(' ', '-', ucwords($header));
781c782,783
< 			$this->headers[$key] = $val;
---
> 				$this->headers[$header] = $this->_fetch_from_array($_SERVER, $key, $xss_clean);
> 			}
794,796c796,798
< 	 * @param 	string		array key for $this->headers
< 	 * @param	boolean		XSS Clean or not
< 	 * @return 	mixed		FALSE on failure, string on success
---
> 	 * @param	string		$index		Header name
> 	 * @param	bool		$xss_clean	Whether to apply XSS filtering
> 	 * @return	string|null	The requested header on success or NULL on failure
800,803c802
< 		if (empty($this->headers))
< 		{
< 			$this->request_headers();
< 		}
---
> 		static $headers;
805c804
< 		if ( ! isset($this->headers[$index]))
---
> 		if ( ! isset($headers))
807c806,810
< 			return FALSE;
---
> 			empty($this->headers) && $this->request_headers();
> 			foreach ($this->headers as $key => $value)
> 			{
> 				$headers[strtolower($key)] = $value;
> 			}
810c813,815
< 		if ($xss_clean === TRUE)
---
> 		$index = strtolower($index);
> 
> 		if ( ! isset($headers[$index]))
812c817
< 			return $this->security->xss_clean($this->headers[$index]);
---
> 			return NULL;
815c820,822
< 		return $this->headers[$index];
---
> 		return ($xss_clean === TRUE)
> 			? $this->security->xss_clean($headers[$index])
> 			: $headers[$index];
823c830
< 	 * Test to see if a request contains the HTTP_X_REQUESTED_WITH header
---
> 	 * Test to see if a request contains the HTTP_X_REQUESTED_WITH header.
825c832
< 	 * @return 	boolean
---
> 	 * @return 	bool
829c836
< 		return ($this->server('HTTP_X_REQUESTED_WITH') === 'XMLHttpRequest');
---
> 		return ( ! empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) === 'xmlhttprequest');
837c844
< 	 * Test to see if a request was made from the command line
---
> 	 * Test to see if a request was made from the command line.
838a846
> 	 * @deprecated	3.0.0	Use is_cli() instead
843c851,869
< 		return (php_sapi_name() === 'cli' OR defined('STDIN'));
---
> 		return is_cli();
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Get Request Method
> 	 *
> 	 * Return the request method
> 	 *
> 	 * @param	bool	$upper	Whether to return in upper or lower case
> 	 *				(default: FALSE)
> 	 * @return 	string
> 	 */
> 	public function method($upper = FALSE)
> 	{
> 		return ($upper)
> 			? strtoupper($this->server('REQUEST_METHOD'))
> 			: strtolower($this->server('REQUEST_METHOD'));
845a872,892
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Magic __get()
> 	 *
> 	 * Allows read access to protected properties
> 	 *
> 	 * @param	string	$name
> 	 * @return	mixed
> 	 */
> 	public function __get($name)
> 	{
> 		if ($name === 'raw_input_stream')
> 		{
> 			isset($this->_raw_input_stream) OR $this->_raw_input_stream = file_get_contents('php://input');
> 			return $this->_raw_input_stream;
> 		}
> 		elseif ($name === 'ip_address')
> 		{
> 			return $this->ip_address;
> 		}
848,849c895
< /* End of file Input.php */
< /* Location: ./system/core/Input.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/core/Lang.php opensourcepos/system/core/Lang.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/language.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/language.html
34c56,57
< 	var $language	= array();
---
> 	public $language =	array();
> 
40c63
< 	var $is_loaded	= array();
---
> 	public $is_loaded =	array();
43c66
< 	 * Constructor
---
> 	 * Class constructor
45c68
< 	 * @access	public
---
> 	 * @return	void
47c70
< 	function __construct()
---
> 	public function __construct()
49c72
< 		log_message('debug', "Language Class Initialized");
---
> 		log_message('info', 'Language Class Initialized');
57,63c80,86
< 	 * @access	public
< 	 * @param	mixed	the name of the language file to be loaded. Can be an array
< 	 * @param	string	the language (english, etc.)
< 	 * @param	bool	return loaded array of translations
< 	 * @param 	bool	add suffix to $langfile
< 	 * @param 	string	alternative path to look for language file
< 	 * @return	mixed
---
> 	 * @param	mixed	$langfile	Language file name
> 	 * @param	string	$idiom		Language name (english, etc.)
> 	 * @param	bool	$return		Whether to return the loaded array of translations
> 	 * @param 	bool	$add_suffix	Whether to add suffix to $langfile
> 	 * @param 	string	$alt_path	Alternative path to look for the language file
> 	 *
> 	 * @return	void|string[]	Array containing translations, if $return is set to TRUE
65c88,92
< 	function load($langfile = '', $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '')
---
> 	public function load($langfile, $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '')
> 	{
> 		if (is_array($langfile))
> 		{
> 			foreach ($langfile as $value)
66a94,99
> 				$this->load($value, $idiom, $return, $add_suffix, $alt_path);
> 			}
> 
> 			return;
> 		}
> 
69c102
< 		if ($add_suffix == TRUE)
---
> 		if ($add_suffix === TRUE)
71c104
< 			$langfile = str_replace('_lang.', '', $langfile).'_lang';
---
> 			$langfile = preg_replace('/_lang$/', '', $langfile).'_lang';
76c109
< 		if (in_array($langfile, $this->is_loaded, TRUE))
---
> 		if (empty($idiom) OR ! preg_match('/^[a-z_-]+$/i', $idiom))
78c111,112
< 			return;
---
> 			$config =& get_config();
> 			$idiom = empty($config['language']) ? 'english' : $config['language'];
81c115,118
< 		$config =& get_config();
---
> 		if ($return === FALSE && isset($this->is_loaded[$langfile]) && $this->is_loaded[$langfile] === $idiom)
> 		{
> 			return;
> 		}
83c120,122
< 		if ($idiom == '')
---
> 		// Load the base file, so any others found can override it
> 		$basepath = BASEPATH.'language/'.$idiom.'/'.$langfile;
> 		if (($found = file_exists($basepath)) === TRUE)
85,86c124
< 			$deft_lang = ( ! isset($config['language'])) ? 'english' : $config['language'];
< 			$idiom = ($deft_lang == '') ? 'english' : $deft_lang;
---
> 			include($basepath);
89,90c127,131
< 		// Determine where the language file is and load it
< 		if ($alt_path != '' && file_exists($alt_path.'language/'.$idiom.'/'.$langfile))
---
> 		// Do we have an alternative path to look in?
> 		if ($alt_path !== '')
> 		{
> 			$alt_path .= 'language/'.$idiom.'/'.$langfile;
> 			if (file_exists($alt_path))
92c133,135
< 			include($alt_path.'language/'.$idiom.'/'.$langfile);
---
> 				include($alt_path);
> 				$found = TRUE;
> 			}
96,97d138
< 			$found = FALSE;
< 
100c141,142
< 				if (file_exists($package_path.'language/'.$idiom.'/'.$langfile))
---
> 				$package_path .= 'language/'.$idiom.'/'.$langfile;
> 				if ($basepath !== $package_path && file_exists($package_path))
102c144
< 					include($package_path.'language/'.$idiom.'/'.$langfile);
---
> 					include($package_path);
106a149
> 		}
112,113d154
< 		}
< 
115c156
< 		if ( ! isset($lang))
---
> 		if ( ! isset($lang) OR ! is_array($lang))
117a159,163
> 
> 			if ($return === TRUE)
> 			{
> 				return array();
> 			}
121c167
< 		if ($return == TRUE)
---
> 		if ($return === TRUE)
126c172
< 		$this->is_loaded[] = $langfile;
---
> 		$this->is_loaded[$langfile] = $idiom;
128d173
< 		unset($lang);
130c175
< 		log_message('debug', 'Language file loaded: language/'.$idiom.'/'.$langfile);
---
> 		log_message('info', 'Language file loaded: language/'.$idiom.'/'.$langfile);
137c182,184
< 	 * Fetch a single line of text from the language array
---
> 	 * Language line
> 	 *
> 	 * Fetches a single line of text from the language array
139,141c186,188
< 	 * @access	public
< 	 * @param	string	$line	the language line
< 	 * @return	string
---
> 	 * @param	string	$line		Language line key
> 	 * @param	bool	$log_errors	Whether to log an error message if the line is not found
> 	 * @return	string	Translation
143c190
< 	function line($line = '')
---
> 	public function line($line, $log_errors = TRUE)
145c192
< 		$value = ($line == '' OR ! isset($this->language[$line])) ? FALSE : $this->language[$line];
---
> 		$value = isset($this->language[$line]) ? $this->language[$line] : FALSE;
148c195
< 		if ($value === FALSE)
---
> 		if ($value === FALSE && $log_errors === TRUE)
157,160d203
< // END Language Class
< 
< /* End of file Lang.php */
< /* Location: ./system/core/Lang.php */
diff -rBwi --ignore-file-name-case pos-prod/system/core/Loader.php opensourcepos/system/core/Loader.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
21c43
<  * Loads views and files
---
>  * Loads framework components.
25d46
<  * @author		ExpressionEngine Dev Team
27c48,49
<  * @link		http://codeigniter.com/user_guide/libraries/loader.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/loader.html
36d57
< 	 * @access protected
43d64
< 	 * @access protected
45c66,67
< 	protected $_ci_view_paths		= array();
---
> 	protected $_ci_view_paths =	array(VIEWPATH	=> TRUE);
> 
50d71
< 	 * @access protected
52c73,74
< 	protected $_ci_library_paths	= array();
---
> 	protected $_ci_library_paths =	array(APPPATH, BASEPATH);
> 
57d78
< 	 * @access protected
59c80,81
< 	protected $_ci_model_paths		= array();
---
> 	protected $_ci_model_paths =	array(APPPATH);
> 
64,72d85
< 	 * @access protected
< 	 */
< 	protected $_ci_helper_paths		= array();
< 	/**
< 	 * List of loaded base classes
< 	 * Set by the controller class
< 	 *
< 	 * @var array
< 	 * @access protected
74c87,88
< 	protected $_base_classes		= array(); // Set by the controller class
---
> 	protected $_ci_helper_paths =	array(APPPATH, BASEPATH);
> 
79d92
< 	 * @access protected
86d99
< 	 * @access protected
89,95c102
< 	/**
< 	 * List of loaded files
< 	 *
< 	 * @var array
< 	 * @access protected
< 	 */
< 	protected $_ci_loaded_files		= array();
---
> 
100d106
< 	 * @access protected
107d113
< 	 * @access protected
114d120
< 	 * @access protected
116,117c122,127
< 	protected $_ci_varmap			= array('unit_test' => 'unit',
< 											'user_agent' => 'agent');
---
> 	protected $_ci_varmap =	array(
> 		'unit_test' => 'unit',
> 		'user_agent' => 'agent'
> 	);
> 
> 	// --------------------------------------------------------------------
120c130,132
< 	 * Constructor
---
> 	 * Class constructor
> 	 *
> 	 * Sets component load paths, gets the initial output buffering level.
122c134
< 	 * Sets the path to the view files and gets the initial output buffering level
---
> 	 * @return	void
127,130c139
< 		$this->_ci_library_paths = array(APPPATH, BASEPATH);
< 		$this->_ci_helper_paths = array(APPPATH, BASEPATH);
< 		$this->_ci_model_paths = array(APPPATH);
< 		$this->_ci_view_paths = array(APPPATH.'views/'	=> TRUE);
---
> 		$this->_ci_classes =& is_loaded();
132c141
< 		log_message('debug', "Loader Class Initialized");
---
> 		log_message('info', 'Loader Class Initialized');
138c147
< 	 * Initialize the Loader
---
> 	 * Initializer
140,143c149,153
< 	 * This method is called once in CI_Controller.
< 	 *
< 	 * @param 	array
< 	 * @return 	object
---
> 	 * @todo	Figure out a way to move this to the constructor
> 	 *		without breaking *package_path*() methods.
> 	 * @uses	CI_Loader::_ci_autoloader()
> 	 * @used-by	CI_Controller::__construct()
> 	 * @return	void
147,151d156
< 		$this->_ci_classes = array();
< 		$this->_ci_loaded_files = array();
< 		$this->_ci_models = array();
< 		$this->_base_classes =& is_loaded();
< 
153,154d157
< 
< 		return $this;
162,164c165
< 	 * A utility function to test if a class is in the self::$_ci_classes array.
< 	 * This function returns the object name if the class tested for is loaded,
< 	 * and returns FALSE if it isn't.
---
> 	 * A utility method to test if a class is in the self::$_ci_classes array.
166c167
< 	 * It is mainly used in the form_helper -> _get_validation_object()
---
> 	 * @used-by	Mainly used by Form Helper function _get_validation_object().
168,169c169,170
< 	 * @param 	string	class being checked for
< 	 * @return 	mixed	class object name on the CI SuperObject or FALSE
---
> 	 * @param 	string		$class	Class name to check for
> 	 * @return 	string|bool	Class object name if loaded or FALSE
173,178c174
< 		if (isset($this->_ci_classes[$class]))
< 		{
< 			return $this->_ci_classes[$class];
< 		}
< 
< 		return FALSE;
---
> 		return array_search(ucfirst($class), $this->_ci_classes, TRUE);
184c180
< 	 * Class Loader
---
> 	 * Library Loader
186,187c182,183
< 	 * This function lets users load and instantiate classes.
< 	 * It is designed to be called from a user's app controllers.
---
> 	 * Loads and instantiates libraries.
> 	 * Designed to be called from application controllers.
189,192c185,188
< 	 * @param	string	the name of the class
< 	 * @param	mixed	the optional parameters
< 	 * @param	string	an optional object name
< 	 * @return	void
---
> 	 * @param	string	$library	Library name
> 	 * @param	array	$params		Optional parameters to pass to the library class constructor
> 	 * @param	string	$object_name	An optional object name to assign to
> 	 * @return	object
194c190
< 	public function library($library = '', $params = NULL, $object_name = NULL)
---
> 	public function library($library, $params = NULL, $object_name = NULL)
196c192
< 		if (is_array($library))
---
> 		if (empty($library))
198c194,198
< 			foreach ($library as $class)
---
> 			return $this;
> 		}
> 		elseif (is_array($library))
> 		{
> 			foreach ($library as $key => $value)
200c200,206
< 				$this->library($class, $params);
---
> 				if (is_int($key))
> 				{
> 					$this->library($value, $params);
> 				}
> 				else
> 				{
> 					$this->library($key, $params, $value);
202,203d207
< 
< 			return;
206,208c210
< 		if ($library == '' OR isset($this->_base_classes[$library]))
< 		{
< 			return FALSE;
---
> 			return $this;
211c213
< 		if ( ! is_null($params) && ! is_array($params))
---
> 		if ($params !== NULL && ! is_array($params))
216c218,219
< 		$this->_ci_load_class($library, $params, $object_name);
---
> 		$this->_ci_load_library($library, $params, $object_name);
> 		return $this;
224c227
< 	 * This function lets users load and instantiate models.
---
> 	 * Loads and instantiates models.
226,229c229,232
< 	 * @param	string	the name of the class
< 	 * @param	string	name for the model
< 	 * @param	bool	database connection
< 	 * @return	void
---
> 	 * @param	string	$model		Model name
> 	 * @param	string	$name		An optional object name to assign to
> 	 * @param	bool	$db_conn	An optional database connection configuration to initialize
> 	 * @return	object
233,235c236
< 		if (is_array($model))
< 		{
< 			foreach ($model as $babe)
---
> 		if (empty($model))
237c238
< 				$this->model($babe);
---
> 			return $this;
239c240,244
< 			return;
---
> 		elseif (is_array($model))
> 		{
> 			foreach ($model as $key => $value)
> 			{
> 				is_int($key) ? $this->model($value, '', $db_conn) : $this->model($key, $value, $db_conn);
242,244c247
< 		if ($model == '')
< 		{
< 			return;
---
> 			return $this;
253c256
< 			$path = substr($model, 0, $last_slash + 1);
---
> 			$path = substr($model, 0, ++$last_slash);
256c259
< 			$model = substr($model, $last_slash + 1);
---
> 			$model = substr($model, $last_slash);
259c262
< 		if ($name == '')
---
> 		if (empty($name))
266c269
< 			return;
---
> 			return $this;
272c275
< 			show_error('The model name you are loading is the name of a resource that is already being used: '.$name);
---
> 			throw new RuntimeException('The model name you are loading is the name of a resource that is already being used: '.$name);
275,277c278
< 		$model = strtolower($model);
< 
< 		foreach ($this->_ci_model_paths as $mod_path)
---
> 		if ($db_conn !== FALSE && ! class_exists('CI_DB', FALSE))
279c280
< 			if ( ! file_exists($mod_path.'models/'.$path.$model.'.php'))
---
> 			if ($db_conn === TRUE)
281c282,285
< 				continue;
---
> 				$db_conn = '';
> 			}
> 
> 			$this->database($db_conn, FALSE, TRUE);
284c288,296
< 			if ($db_conn !== FALSE AND ! class_exists('CI_DB'))
---
> 		// Note: All of the code under this condition used to be just:
> 		//
> 		//       load_class('Model', 'core');
> 		//
> 		//       However, load_class() instantiates classes
> 		//       to cache them for later use and that prevents
> 		//       MY_Model from being an abstract class and is
> 		//       sub-optimal otherwise anyway.
> 		if ( ! class_exists('CI_Model', FALSE))
286c298,299
< 				if ($db_conn === TRUE)
---
> 			$app_path = APPPATH.'core'.DIRECTORY_SEPARATOR;
> 			if (file_exists($app_path.'Model.php'))
288c301,309
< 					$db_conn = '';
---
> 				require_once($app_path.'Model.php');
> 				if ( ! class_exists('CI_Model', FALSE))
> 				{
> 					throw new RuntimeException($app_path."Model.php exists, but doesn't declare class CI_Model");
> 				}
> 			}
> 			elseif ( ! class_exists('CI_Model', FALSE))
> 			{
> 				require_once(BASEPATH.'core'.DIRECTORY_SEPARATOR.'Model.php');
291c312,320
< 				$CI->load->database($db_conn, FALSE, TRUE);
---
> 			$class = config_item('subclass_prefix').'Model';
> 			if (file_exists($app_path.$class.'.php'))
> 			{
> 				require_once($app_path.$class.'.php');
> 				if ( ! class_exists($class, FALSE))
> 				{
> 					throw new RuntimeException($app_path.$class.".php exists, but doesn't declare class ".$class);
> 				}
> 			}
294c323,328
< 			if ( ! class_exists('CI_Model'))
---
> 		$model = ucfirst($model);
> 		if ( ! class_exists($model, FALSE))
> 		{
> 			foreach ($this->_ci_model_paths as $mod_path)
> 			{
> 				if ( ! file_exists($mod_path.'models/'.$path.$model.'.php'))
296c330
< 				load_class('Model', 'core');
---
> 					continue;
299a334,337
> 				if ( ! class_exists($model, FALSE))
> 				{
> 					throw new RuntimeException($mod_path."models/".$path.$model.".php exists, but doesn't declare class ".$model);
> 				}
301,303c339,340
< 			$model = ucfirst($model);
< 
< 			$CI->$name = new $model();
---
> 				break;
> 			}
305,306c342,349
< 			$this->_ci_models[] = $name;
< 			return;
---
> 			if ( ! class_exists($model, FALSE))
> 			{
> 				throw new RuntimeException('Unable to locate the model you have specified: '.$model);
> 			}
> 		}
> 		elseif ( ! is_subclass_of($model, 'CI_Model'))
> 		{
> 			throw new RuntimeException("Class ".$model." already exists and doesn't extend CI_Model");
309,310c352,354
< 		// couldn't find the model
< 		show_error('Unable to locate the model you have specified: '.$model);
---
> 		$this->_ci_models[] = $name;
> 		$CI->$name = new $model();
> 		return $this;
318,321c362,368
< 	 * @param	string	the DB credentials
< 	 * @param	bool	whether to return the DB object
< 	 * @param	bool	whether to enable active record (this allows us to override the config setting)
< 	 * @return	object
---
> 	 * @param	mixed	$params		Database configuration options
> 	 * @param	bool	$return 	Whether to return the database object
> 	 * @param	bool	$query_builder	Whether to enable Query Builder
> 	 *					(overrides the configuration setting)
> 	 *
> 	 * @return	object|bool	Database object if $return is set to TRUE,
> 	 *					FALSE on failure, CI_Loader instance in any other case
323c370
< 	public function database($params = '', $return = FALSE, $active_record = NULL)
---
> 	public function database($params = '', $return = FALSE, $query_builder = NULL)
329c376
< 		if (class_exists('CI_DB') AND $return == FALSE AND $active_record == NULL AND isset($CI->db) AND is_object($CI->db))
---
> 		if ($return === FALSE && $query_builder === NULL && isset($CI->db) && is_object($CI->db) && ! empty($CI->db->conn_id))
338c385
< 			return DB($params, $active_record);
---
> 			return DB($params, $query_builder);
346c393,394
< 		$CI->db =& DB($params, $active_record);
---
> 		$CI->db =& DB($params, $query_builder);
> 		return $this;
352c400
< 	 * Load the Utilities Class
---
> 	 * Load the Database Utilities Class
354c402,404
< 	 * @return	string
---
> 	 * @param	object	$db	Database object
> 	 * @param	bool	$return	Whether to return the DB Utilities class object or not
> 	 * @return	object
356,358c406
< 	public function dbutil()
< 	{
< 		if ( ! class_exists('CI_DB'))
---
> 	public function dbutil($db = NULL, $return = FALSE)
360,362d407
< 			$this->database();
< 		}
< 
365,367c410,414
< 		// for backwards compatibility, load dbforge so we can extend dbutils off it
< 		// this use is deprecated and strongly discouraged
< 		$CI->load->dbforge();
---
> 		if ( ! is_object($db) OR ! ($db instanceof CI_DB))
> 		{
> 			class_exists('CI_DB', FALSE) OR $this->database();
> 			$db =& $CI->db;
> 		}
370,371c417,418
< 		require_once(BASEPATH.'database/drivers/'.$CI->db->dbdriver.'/'.$CI->db->dbdriver.'_utility.php');
< 		$class = 'CI_DB_'.$CI->db->dbdriver.'_utility';
---
> 		require_once(BASEPATH.'database/drivers/'.$db->dbdriver.'/'.$db->dbdriver.'_utility.php');
> 		$class = 'CI_DB_'.$db->dbdriver.'_utility';
373c420,426
< 		$CI->dbutil = new $class();
---
> 		if ($return === TRUE)
> 		{
> 			return new $class($db);
> 		}
> 
> 		$CI->dbutil = new $class($db);
> 		return $this;
381c434,436
< 	 * @return	string
---
> 	 * @param	object	$db	Database object
> 	 * @param	bool	$return	Whether to return the DB Forge class object or not
> 	 * @return	object
383c438
< 	public function dbforge()
---
> 	public function dbforge($db = NULL, $return = FALSE)
385c440,441
< 		if ( ! class_exists('CI_DB'))
---
> 		$CI =& get_instance();
> 		if ( ! is_object($db) OR ! ($db instanceof CI_DB))
387c443,444
< 			$this->database();
---
> 			class_exists('CI_DB', FALSE) OR $this->database();
> 			$db =& $CI->db;
390,391d446
< 		$CI =& get_instance();
< 
393,394c448,462
< 		require_once(BASEPATH.'database/drivers/'.$CI->db->dbdriver.'/'.$CI->db->dbdriver.'_forge.php');
< 		$class = 'CI_DB_'.$CI->db->dbdriver.'_forge';
---
> 		require_once(BASEPATH.'database/drivers/'.$db->dbdriver.'/'.$db->dbdriver.'_forge.php');
> 
> 		if ( ! empty($db->subdriver))
> 		{
> 			$driver_path = BASEPATH.'database/drivers/'.$db->dbdriver.'/subdrivers/'.$db->dbdriver.'_'.$db->subdriver.'_forge.php';
> 			if (file_exists($driver_path))
> 			{
> 				require_once($driver_path);
> 				$class = 'CI_DB_'.$db->dbdriver.'_'.$db->subdriver.'_forge';
> 			}
> 		}
> 		else
> 		{
> 			$class = 'CI_DB_'.$db->dbdriver.'_forge';
> 		}
396c464,470
< 		$CI->dbforge = new $class();
---
> 		if ($return === TRUE)
> 		{
> 			return new $class($db);
> 		}
> 
> 		$CI->dbforge = new $class($db);
> 		return $this;
402,404c476
< 	 * Load View
< 	 *
< 	 * This function is used to load a "view" file.  It has three parameters:
---
> 	 * View Loader
406,410c478
< 	 * 1. The name of the "view" file to be included.
< 	 * 2. An associative array of data to be extracted for use in the view.
< 	 * 3. TRUE/FALSE - whether to return the data or load it.  In
< 	 * some cases it's advantageous to be able to return data so that
< 	 * a developer can process it in some way.
---
> 	 * Loads "view" files.
412,415c480,485
< 	 * @param	string
< 	 * @param	array
< 	 * @param	bool
< 	 * @return	void
---
> 	 * @param	string	$view	View name
> 	 * @param	array	$vars	An associative array of data
> 	 *				to be extracted for use in the view
> 	 * @param	bool	$return	Whether to return the view output
> 	 *				or leave it to the Output class
> 	 * @return	object|string
425c495
< 	 * Load File
---
> 	 * Generic File Loader
427,431c497,499
< 	 * This is a generic file loader
< 	 *
< 	 * @param	string
< 	 * @param	bool
< 	 * @return	string
---
> 	 * @param	string	$path	File path
> 	 * @param	bool	$return	Whether to return the file output
> 	 * @return	object|string
446,448c514,518
< 	 * @param	array
< 	 * @param 	string
< 	 * @return	void
---
> 	 * @param	array|object|string	$vars
> 	 *					An associative array or object containing values
> 	 *					to be set, or a value's name if string
> 	 * @param 	string	$val	Value to set, only used if $vars is a string
> 	 * @return	object
450c520
< 	public function vars($vars = array(), $val = '')
---
> 	public function vars($vars, $val = '')
452c522
< 		if ($val != '' AND is_string($vars))
---
> 		if (is_string($vars))
459c529
< 		if (is_array($vars) AND count($vars) > 0)
---
> 		if (is_array($vars) && count($vars) > 0)
465a536,552
> 
> 		return $this;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Clear Cached Variables
> 	 *
> 	 * Clears the cached variables.
> 	 *
> 	 * @return	CI_Loader
> 	 */
> 	public function clear_vars()
> 	{
> 		$this->_ci_cached_vars = array();
> 		return $this;
475,476c562,563
< 	 * @param	array
< 	 * @return	void
---
> 	 * @param	string	$key	Variable name
> 	 * @return	mixed	The variable or NULL if not found
486c573
< 	 * Load Helper
---
> 	 * Get Variables
488c575
< 	 * This function loads the specified helper file.
---
> 	 * Retrieves all loaded variables.
490,491c577,590
< 	 * @param	mixed
< 	 * @return	void
---
> 	 * @return	array
> 	 */
> 	public function get_vars()
> 	{
> 		return $this->_ci_cached_vars;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Helper Loader
> 	 *
> 	 * @param	string|string[]	$helpers	Helper name(s)
> 	 * @return	object
502,503d600
< 			$ext_helper = APPPATH.'helpers/'.config_item('subclass_prefix').$helper.'.php';
< 
505c602,604
< 			if (file_exists($ext_helper))
---
> 			$ext_helper = config_item('subclass_prefix').$helper;
> 			$ext_loaded = FALSE;
> 			foreach ($this->_ci_helper_paths as $path)
507c606,611
< 				$base_helper = BASEPATH.'helpers/'.$helper.'.php';
---
> 				if (file_exists($path.'helpers/'.$ext_helper.'.php'))
> 				{
> 					include_once($path.'helpers/'.$ext_helper.'.php');
> 					$ext_loaded = TRUE;
> 				}
> 			}
508a613,616
> 			// If we have loaded extensions - check if the base one is here
> 			if ($ext_loaded === TRUE)
> 			{
> 				$base_helper = BASEPATH.'helpers/'.$helper.'.php';
514d621
< 				include_once($ext_helper);
518c624
< 				log_message('debug', 'Helper loaded: '.$helper);
---
> 				log_message('info', 'Helper loaded: '.$helper);
522c628
< 			// Try to load the helper
---
> 			// No extensions found ... try loading regular helpers and/or overrides
530c636
< 					log_message('debug', 'Helper loaded: '.$helper);
---
> 					log_message('info', 'Helper loaded: '.$helper);
540a647,648
> 
> 		return $this;
548,549c656,657
< 	 * This is simply an alias to the above function in case the
< 	 * user has written the plural form of this function.
---
> 	 * An alias for the helper() method in case the developer has
> 	 * written the plural form of it.
551,552c659,661
< 	 * @param	array
< 	 * @return	void
---
> 	 * @uses	CI_Loader::helper()
> 	 * @param	string|string[]	$helpers	Helper name(s)
> 	 * @return	object
556c665
< 		$this->helper($helpers);
---
> 		return $this->helper($helpers);
562c671
< 	 * Loads a language file
---
> 	 * Language Loader
564,566c673,677
< 	 * @param	array
< 	 * @param	string
< 	 * @return	void
---
> 	 * Loads language files.
> 	 *
> 	 * @param	string|string[]	$files	List of language file names to load
> 	 * @param	string		Language name
> 	 * @return	object
568,577c679
< 	public function language($file = array(), $lang = '')
< 	{
< 		$CI =& get_instance();
< 
< 		if ( ! is_array($file))
< 		{
< 			$file = array($file);
< 		}
< 
< 		foreach ($file as $langfile)
---
> 	public function language($files, $lang = '')
579,580c681,682
< 			$CI->lang->load($langfile, $lang);
< 		}
---
> 		get_instance()->lang->load($files, $lang);
> 		return $this;
586c688
< 	 * Loads a config file
---
> 	 * Config Loader
588,591c690,696
< 	 * @param	string
< 	 * @param	bool
< 	 * @param 	bool
< 	 * @return	void
---
> 	 * Loads a config file (an alias for CI_Config::load()).
> 	 *
> 	 * @uses	CI_Config::load()
> 	 * @param	string	$file			Configuration file name
> 	 * @param	bool	$use_sections		Whether configuration values should be loaded into their own section
> 	 * @param	bool	$fail_gracefully	Whether to just return FALSE or display an error message
> 	 * @return	bool	TRUE if the file was loaded correctly or FALSE on failure
593c698
< 	public function config($file = '', $use_sections = FALSE, $fail_gracefully = FALSE)
---
> 	public function config($file, $use_sections = FALSE, $fail_gracefully = FALSE)
595,596c700
< 		$CI =& get_instance();
< 		$CI->config->load($file, $use_sections, $fail_gracefully);
---
> 		return get_instance()->config->load($file, $use_sections, $fail_gracefully);
602c706
< 	 * Driver
---
> 	 * Driver Loader
604c708
< 	 * Loads a driver library
---
> 	 * Loads a driver library.
606,609c710,715
< 	 * @param	string	the name of the class
< 	 * @param	mixed	the optional parameters
< 	 * @param	string	an optional object name
< 	 * @return	void
---
> 	 * @param	string|string[]	$library	Driver name(s)
> 	 * @param	array		$params		Optional parameters to pass to the driver
> 	 * @param	string		$object_name	An optional object name to assign to
> 	 *
> 	 * @return	object|bool	Object or FALSE on failure if $library is a string
> 	 *				and $object_name is set. CI_Loader instance otherwise.
611c717
< 	public function driver($library = '', $params = NULL, $object_name = NULL)
---
> 	public function driver($library, $params = NULL, $object_name = NULL)
613c719
< 		if ( ! class_exists('CI_Driver_Library'))
---
> 		if (is_array($library))
615,616c721,730
< 			// we aren't instantiating an object here, that'll be done by the Library itself
< 			require BASEPATH.'libraries/Driver.php';
---
> 			foreach ($library as $key => $value)
> 			{
> 				if (is_int($key))
> 				{
> 					$this->driver($value, $params);
> 				}
> 				else
> 				{
> 					$this->driver($key, $params, $value);
> 				}
619c733,735
< 		if ($library == '')
---
> 			return $this;
> 		}
> 		elseif (empty($library))
623a740,745
> 		if ( ! class_exists('CI_Driver_Library', FALSE))
> 		{
> 			// We aren't instantiating an object here, just making the base class available
> 			require BASEPATH.'libraries/Driver.php';
> 		}
> 
639c761,762
< 	 * Prepends a parent path to the library, model, helper, and config path arrays
---
> 	 * Prepends a parent path to the library, model, helper and config
> 	 * path arrays.
641,643c764,771
< 	 * @param	string
< 	 * @param 	boolean
< 	 * @return	void
---
> 	 * @see	CI_Loader::$_ci_library_paths
> 	 * @see	CI_Loader::$_ci_model_paths
> 	 * @see CI_Loader::$_ci_helper_paths
> 	 * @see CI_Config::$_config_paths
> 	 *
> 	 * @param	string	$path		Path to add
> 	 * @param 	bool	$view_cascade	(default: TRUE)
> 	 * @return	object
657c785,787
< 		array_unshift($config->_config_paths, $path);
---
> 		$config->_config_paths[] = $path;
> 
> 		return $this;
665c795
< 	 * Return a list of all package paths, by default it will ignore BASEPATH.
---
> 	 * Return a list of all package paths.
667,668c797,798
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	bool	$include_base	Whether to include BASEPATH (default: FALSE)
> 	 * @return	array
672c802
< 		return $include_base === TRUE ? $this->_ci_library_paths : $this->_ci_model_paths;
---
> 		return ($include_base === TRUE) ? $this->_ci_library_paths : $this->_ci_model_paths;
680,681c810,812
< 	 * Remove a path from the library, model, and helper path arrays if it exists
< 	 * If no path is provided, the most recently added path is removed.
---
> 	 * Remove a path from the library, model, helper and/or config
> 	 * path arrays if it exists. If no path is provided, the most recently
> 	 * added path will be removed removed.
683,685c814,815
< 	 * @param	type
< 	 * @param 	bool
< 	 * @return	type
---
> 	 * @param	string	$path	Path to remove
> 	 * @return	object
687c817
< 	public function remove_package_path($path = '', $remove_config_path = TRUE)
---
> 	public function remove_package_path($path = '')
691c821
< 		if ($path == '')
---
> 		if ($path === '')
693,697c823,827
< 			$void = array_shift($this->_ci_library_paths);
< 			$void = array_shift($this->_ci_model_paths);
< 			$void = array_shift($this->_ci_helper_paths);
< 			$void = array_shift($this->_ci_view_paths);
< 			$void = array_shift($config->_config_paths);
---
> 			array_shift($this->_ci_library_paths);
> 			array_shift($this->_ci_model_paths);
> 			array_shift($this->_ci_helper_paths);
> 			array_shift($this->_ci_view_paths);
> 			array_pop($config->_config_paths);
726a857,858
> 
> 		return $this;
732c864,866
< 	 * Loader
---
> 	 * Internal CI Data Loader
> 	 *
> 	 * Used to load views and files.
734d867
< 	 * This function is used to load views and files.
736c869
< 	 * variables made available to view files
---
> 	 * variables made available to view files.
738,739c871,874
< 	 * @param	array
< 	 * @return	void
---
> 	 * @used-by	CI_Loader::view()
> 	 * @used-by	CI_Loader::file()
> 	 * @param	array	$_ci_data	Data to load
> 	 * @return	object
746c881
< 			$$_ci_val = ( ! isset($_ci_data[$_ci_val])) ? FALSE : $_ci_data[$_ci_val];
---
> 			$$_ci_val = isset($_ci_data[$_ci_val]) ? $_ci_data[$_ci_val] : FALSE;
752c887
< 		if ($_ci_path != '')
---
> 		if (is_string($_ci_path) && $_ci_path !== '')
760c895
< 			$_ci_file = ($_ci_ext == '') ? $_ci_view.'.php' : $_ci_view;
---
> 			$_ci_file = ($_ci_ext === '') ? $_ci_view.'.php' : $_ci_view;
762c897
< 			foreach ($this->_ci_view_paths as $view_file => $cascade)
---
> 			foreach ($this->_ci_view_paths as $_ci_view_file => $cascade)
764c899
< 				if (file_exists($view_file.$_ci_file))
---
> 				if (file_exists($_ci_view_file.$_ci_file))
766c901
< 					$_ci_path = $view_file.$_ci_file;
---
> 					$_ci_path = $_ci_view_file.$_ci_file;
798c932
< 		 * You can either set variables using the dedicated $this->load_vars()
---
> 		 * You can either set variables using the dedicated $this->load->vars()
804a939,946
> 			foreach (array_keys($_ci_vars) as $key)
> 			{
> 				if (strncmp($key, '_ci_', 4) === 0)
> 				{
> 					unset($_ci_vars[$key]);
> 				}
> 			}
> 
814,819c956,960
< 		 * 2. So that the final rendered template can be
< 		 * post-processed by the output class.  Why do we
< 		 * need post processing?  For one thing, in order to
< 		 * show the elapsed page load time.  Unless we
< 		 * can intercept the content right before it's sent to
< 		 * the browser and then stop the timer it won't be accurate.
---
> 		 * 2. So that the final rendered template can be post-processed by
> 		 *	the output class. Why do we need post processing? For one thing,
> 		 *	in order to show the elapsed page load time. Unless we can
> 		 *	intercept the content right before it's sent to the browser and
> 		 *	then stop the timer it won't be accurate.
826,827c967
< 
< 		if ((bool) @ini_get('short_open_tag') === FALSE AND config_item('rewrite_short_tags') == TRUE)
---
> 		if ( ! is_php('5.4') && ! ini_get('short_open_tag') && config_item('rewrite_short_tags') === TRUE)
829c969
< 			echo eval('?>'.preg_replace("/;*\s*\?>/", "; ?>", str_replace('<?=', '<?php echo ', file_get_contents($_ci_path))));
---
> 			echo eval('?>'.preg_replace('/;*\s*\?>/', '; ?>', str_replace('<?=', '<?php echo ', file_get_contents($_ci_path))));
836c976
< 		log_message('debug', 'File loaded: '.$_ci_path);
---
> 		log_message('info', 'File loaded: '.$_ci_path);
854d993
< 		 *
864a1004,1005
> 
> 		return $this;
870c1011
< 	 * Load class
---
> 	 * Internal CI Library Loader
872c1013,1014
< 	 * This function loads the requested class.
---
> 	 * @used-by	CI_Loader::library()
> 	 * @uses	CI_Loader::_ci_init_library()
874,876c1016,1018
< 	 * @param	string	the item that is being loaded
< 	 * @param	mixed	any additional parameters
< 	 * @param	string	an optional object name
---
> 	 * @param	string	$class		Class name to load
> 	 * @param	mixed	$params		Optional parameters to pass to the class constructor
> 	 * @param	string	$object_name	Optional object name to assign to
879c1021
< 	protected function _ci_load_class($class, $params = NULL, $object_name = NULL)
---
> 	protected function _ci_load_library($class, $params = NULL, $object_name = NULL)
888d1029
< 		$subdir = '';
892c1033
< 			$subdir = substr($class, 0, $last_slash + 1);
---
> 			$subdir = substr($class, 0, ++$last_slash);
895c1036
< 			$class = substr($class, $last_slash + 1);
---
> 			$class = substr($class, $last_slash);
897,899c1038
< 
< 		// We'll test for both lowercase and capitalized versions of the file name
< 		foreach (array(ucfirst($class), strtolower($class)) as $class)
---
> 		else
901c1040,1043
< 			$subclass = APPPATH.'libraries/'.$subdir.config_item('subclass_prefix').$class.'.php';
---
> 			$subdir = '';
> 		}
> 
> 		$class = ucfirst($class);
903,904c1045,1046
< 			// Is this a class extension request?
< 			if (file_exists($subclass))
---
> 		// Is this a stock library? There are a few special conditions if so ...
> 		if (file_exists(BASEPATH.'libraries/'.$subdir.$class.'.php'))
906c1048,1049
< 				$baseclass = BASEPATH.'libraries/'.ucfirst($class).'.php';
---
> 			return $this->_ci_load_stock_library($class, $subdir, $params, $object_name);
> 		}
908c1051,1055
< 				if ( ! file_exists($baseclass))
---
> 		// Let's search for the requested library file and load it.
> 		foreach ($this->_ci_library_paths as $path)
> 		{
> 			// BASEPATH has already been checked for
> 			if ($path === BASEPATH)
910,911c1057
< 					log_message('error', "Unable to load the requested class: ".$class);
< 					show_error("Unable to load the requested class: ".$class);
---
> 				continue;
913a1060,1061
> 			$filepath = $path.'libraries/'.$subdir.$class.'.php';
> 
915c1063
< 				if (in_array($subclass, $this->_ci_loaded_files))
---
> 			if (class_exists($class, FALSE))
920c1068
< 					if ( ! is_null($object_name))
---
> 				if ($object_name !== NULL)
925c1073
< 							return $this->_ci_init_class($class, config_item('subclass_prefix'), $params, $object_name);
---
> 						return $this->_ci_init_library($class, '', $params, $object_name);
929,930c1077
< 					$is_duplicate = TRUE;
< 					log_message('debug', $class." class already loaded. Second attempt ignored.");
---
> 				log_message('debug', $class.' class already loaded. Second attempt ignored.');
932a1080,1084
> 			// Does the file exist? No? Bummer...
> 			elseif ( ! file_exists($filepath))
> 			{
> 				continue;
> 			}
934,936c1086,1088
< 				include_once($baseclass);
< 				include_once($subclass);
< 				$this->_ci_loaded_files[] = $subclass;
---
> 			include_once($filepath);
> 			return $this->_ci_init_library($class, '', $params, $object_name);
> 		}
938c1090,1093
< 				return $this->_ci_init_class($class, config_item('subclass_prefix'), $params, $object_name);
---
> 		// One last attempt. Maybe the library is in a subdirectory, but it wasn't specified?
> 		if ($subdir === '')
> 		{
> 			return $this->_ci_load_library($class.'/'.$class, $params, $object_name);
941,943c1096,1115
< 			// Lets search for the requested library file and load it.
< 			$is_duplicate = FALSE;
< 			foreach ($this->_ci_library_paths as $path)
---
> 		// If we got this far we were unable to find the requested class.
> 		log_message('error', 'Unable to load the requested class: '.$class);
> 		show_error('Unable to load the requested class: '.$class);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Internal CI Stock Library Loader
> 	 *
> 	 * @used-by	CI_Loader::_ci_load_library()
> 	 * @uses	CI_Loader::_ci_init_library()
> 	 *
> 	 * @param	string	$library	Library name to load
> 	 * @param	string	$file_path	Path to the library filename, relative to libraries/
> 	 * @param	mixed	$params		Optional parameters to pass to the class constructor
> 	 * @param	string	$object_name	Optional object name to assign to
> 	 * @return	void
> 	 */
> 	protected function _ci_load_stock_library($library_name, $file_path, $params, $object_name)
945c1117
< 				$filepath = $path.'libraries/'.$subdir.$class.'.php';
---
> 		$prefix = 'CI_';
947,948c1119
< 				// Does the file exist?  No?  Bummer...
< 				if ( ! file_exists($filepath))
---
> 		if (class_exists($prefix.$library_name, FALSE))
950c1121,1123
< 					continue;
---
> 			if (class_exists(config_item('subclass_prefix').$library_name, FALSE))
> 			{
> 				$prefix = config_item('subclass_prefix');
953,955d1125
< 				// Safety:  Was the class already loaded by a previous call?
< 				if (in_array($filepath, $this->_ci_loaded_files))
< 				{
959c1129
< 					if ( ! is_null($object_name))
---
> 			if ($object_name !== NULL)
964c1134
< 							return $this->_ci_init_class($class, '', $params, $object_name);
---
> 					return $this->_ci_init_library($library_name, $prefix, $params, $object_name);
968,969c1138
< 					$is_duplicate = TRUE;
< 					log_message('debug', $class." class already loaded. Second attempt ignored.");
---
> 			log_message('debug', $library_name.' class already loaded. Second attempt ignored.');
973,975c1142,1161
< 				include_once($filepath);
< 				$this->_ci_loaded_files[] = $filepath;
< 				return $this->_ci_init_class($class, '', $params, $object_name);
---
> 		$paths = $this->_ci_library_paths;
> 		array_pop($paths); // BASEPATH
> 		array_pop($paths); // APPPATH (needs to be the first path checked)
> 		array_unshift($paths, APPPATH);
> 
> 		foreach ($paths as $path)
> 		{
> 			if (file_exists($path = $path.'libraries/'.$file_path.$library_name.'.php'))
> 			{
> 				// Override
> 				include_once($path);
> 				if (class_exists($prefix.$library_name, FALSE))
> 				{
> 					return $this->_ci_init_library($library_name, $prefix, $params, $object_name);
> 				}
> 				else
> 				{
> 					log_message('debug', $path.' exists, but does not declare '.$prefix.$library_name);
> 				}
> 			}
978c1164
< 		} // END FOREACH
---
> 		include_once(BASEPATH.'libraries/'.$file_path.$library_name.'.php');
980,981c1166,1170
< 		// One last attempt.  Maybe the library is in a subdirectory, but it wasn't specified?
< 		if ($subdir == '')
---
> 		// Check for extensions
> 		$subclass = config_item('subclass_prefix').$library_name;
> 		foreach ($paths as $path)
> 		{
> 			if (file_exists($path = $path.'libraries/'.$file_path.$subclass.'.php'))
983,984c1172,1176
< 			$path = strtolower($class).'/'.$class;
< 			return $this->_ci_load_class($path, $params);
---
> 				include_once($path);
> 				if (class_exists($subclass, FALSE))
> 				{
> 					$prefix = config_item('subclass_prefix');
> 					break;
986,989c1178
< 
< 		// If we got this far we were unable to find the requested class.
< 		// We do not issue errors if the load call failed due to a duplicate request
< 		if ($is_duplicate == FALSE)
---
> 				else
991,992c1180,1181
< 			log_message('error', "Unable to load the requested class: ".$class);
< 			show_error("Unable to load the requested class: ".$class);
---
> 					log_message('debug', $path.' exists, but does not declare '.$subclass);
> 				}
995a1185,1187
> 		return $this->_ci_init_library($library_name, $prefix, $params, $object_name);
> 	}
> 
999c1191,1194
< 	 * Instantiates a class
---
> 	 * Internal CI Library Instantiator
> 	 *
> 	 * @used-by	CI_Loader::_ci_load_stock_library()
> 	 * @used-by	CI_Loader::_ci_load_library()
1001,1005c1196,1203
< 	 * @param	string
< 	 * @param	string
< 	 * @param	bool
< 	 * @param	string	an optional object name
< 	 * @return	null
---
> 	 * @param	string		$class		Class name
> 	 * @param	string		$prefix		Class name prefix
> 	 * @param	array|null|bool	$config		Optional configuration to pass to the class constructor:
> 	 *						FALSE to skip;
> 	 *						NULL to search in config paths;
> 	 *						array containing configuration data
> 	 * @param	string		$object_name	Optional object name to assign to
> 	 * @return	void
1007c1205
< 	protected function _ci_init_class($class, $prefix = '', $config = FALSE, $object_name = NULL)
---
> 	protected function _ci_init_library($class, $prefix, $config = FALSE, $object_name = NULL)
1017,1018c1215
< 				// Break on the first found file, thus package files
< 				// are not overridden by default paths
---
> 				$found = FALSE;
1022,1034c1219,1221
< 					// are case-sensitive with regard to file names. Check for environment
< 					// first, global next
< 					if (defined('ENVIRONMENT') AND file_exists($path .'config/'.ENVIRONMENT.'/'.strtolower($class).'.php'))
< 					{
< 						include($path .'config/'.ENVIRONMENT.'/'.strtolower($class).'.php');
< 						break;
< 					}
< 					elseif (defined('ENVIRONMENT') AND file_exists($path .'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php'))
< 					{
< 						include($path .'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php');
< 						break;
< 					}
< 					elseif (file_exists($path .'config/'.strtolower($class).'.php'))
---
> 					// are case-sensitive with regard to file names. Load global first,
> 					// override with environment next
> 					if (file_exists($path.'config/'.strtolower($class).'.php'))
1037c1224
< 						break;
---
> 						$found = TRUE;
1042,1045c1229
< 						break;
< 					}
< 				}
< 			}
---
> 						$found = TRUE;
1048,1050c1232
< 		if ($prefix == '')
< 		{
< 			if (class_exists('CI_'.$class))
---
> 					if (file_exists($path.'config/'.ENVIRONMENT.'/'.strtolower($class).'.php'))
1052c1234,1235
< 				$name = 'CI_'.$class;
---
> 						include($path.'config/'.ENVIRONMENT.'/'.strtolower($class).'.php');
> 						$found = TRUE;
1054c1237
< 			elseif (class_exists(config_item('subclass_prefix').$class))
---
> 					elseif (file_exists($path.'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php'))
1056c1239,1240
< 				$name = config_item('subclass_prefix').$class;
---
> 						include($path.'config/'.ENVIRONMENT.'/'.ucfirst(strtolower($class)).'.php');
> 						$found = TRUE;
1058c1242,1245
< 			else
---
> 
> 					// Break on the first found configuration, thus package
> 					// files are not overridden by default paths
> 					if ($found === TRUE)
1060c1247,1248
< 				$name = $class;
---
> 						break;
> 					}
1063,1065d1250
< 		else
< 		{
< 			$name = $prefix.$class;
1067a1253,1254
> 		$class_name = $prefix.$class;
> 
1069c1256
< 		if ( ! class_exists($name))
---
> 		if ( ! class_exists($class_name, FALSE))
1071,1072c1258,1259
< 			log_message('error', "Non-existent class: ".$name);
< 			show_error("Non-existent class: ".$class);
---
> 			log_message('error', 'Non-existent class: '.$class_name);
> 			show_error('Non-existent class: '.$class_name);
1077,1079c1264
< 		$class = strtolower($class);
< 
< 		if (is_null($object_name))
---
> 		if (empty($object_name))
1081,1083c1266,1267
< 			$classvar = ( ! isset($this->_ci_varmap[$class])) ? $class : $this->_ci_varmap[$class];
< 		}
< 		else
---
> 			$object_name = strtolower($class);
> 			if (isset($this->_ci_varmap[$object_name]))
1085c1269,1270
< 			$classvar = $object_name;
---
> 				$object_name = $this->_ci_varmap[$object_name];
> 			}
1088,1091c1273
< 		// Save the class name and object name
< 		$this->_ci_classes[$class] = $classvar;
< 
< 		// Instantiate the class
---
> 		// Don't overwrite existing properties
1093c1275
< 		if ($config !== NULL)
---
> 		if (isset($CI->$object_name))
1095,1097c1277
< 			$CI->$classvar = new $name($config);
< 		}
< 		else
---
> 			if ($CI->$object_name instanceof $class_name)
1099c1279,1280
< 			$CI->$classvar = new $name;
---
> 				log_message('debug', $class_name." has already been instantiated as '".$object_name."'. Second attempt aborted.");
> 				return;
1100a1282,1292
> 
> 			show_error("Resource '".$object_name."' already exists and is not a ".$class_name." instance.");
> 		}
> 
> 		// Save the class name and object name
> 		$this->_ci_classes[$object_name] = $class;
> 
> 		// Instantiate the class
> 		$CI->$object_name = isset($config)
> 			? new $class_name($config)
> 			: new $class_name();
1106c1298
< 	 * Autoloader
---
> 	 * CI Autoloader
1108,1109c1300
< 	 * The config/autoload.php file contains an array that permits sub-systems,
< 	 * libraries, and helpers to be loaded automatically.
---
> 	 * Loads component listed in the config/autoload.php file.
1111c1302
< 	 * @param	array
---
> 	 * @used-by	CI_Loader::initialize()
1114c1305
< 	private function _ci_autoloader()
---
> 	protected function _ci_autoloader()
1116c1307
< 		if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/autoload.php'))
---
> 		if (file_exists(APPPATH.'config/autoload.php'))
1118c1309
< 			include(APPPATH.'config/'.ENVIRONMENT.'/autoload.php');
---
> 			include(APPPATH.'config/autoload.php');
1120c1311,1312
< 		else
---
> 
> 		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/autoload.php'))
1122c1314
< 			include(APPPATH.'config/autoload.php');
---
> 			include(APPPATH.'config/'.ENVIRONMENT.'/autoload.php');
1127c1319
< 			return FALSE;
---
> 			return;
1142,1143c1334
< 			$CI =& get_instance();
< 			foreach ($autoload['config'] as $key => $val)
---
> 			foreach ($autoload['config'] as $val)
1145c1336
< 				$CI->config->load($val);
---
> 				$this->config($val);
1152c1343
< 			if (isset($autoload[$type]) AND count($autoload[$type]) > 0)
---
> 			if (isset($autoload[$type]) && count($autoload[$type]) > 0)
1158,1160c1349,1350
< 		// A little tweak to remain backward compatible
< 		// The $autoload['core'] item was deprecated
< 		if ( ! isset($autoload['libraries']) AND isset($autoload['core']))
---
> 		// Autoload drivers
> 		if (isset($autoload['drivers']))
1162c1352
< 			$autoload['libraries'] = $autoload['core'];
---
> 			$this->driver($autoload['drivers']);
1166c1356
< 		if (isset($autoload['libraries']) AND count($autoload['libraries']) > 0)
---
> 		if (isset($autoload['libraries']) && count($autoload['libraries']) > 0)
1176,1179c1366
< 			foreach ($autoload['libraries'] as $item)
< 			{
< 				$this->library($item);
< 			}
---
> 			$this->library($autoload['libraries']);
1192c1379
< 	 * Object to Array
---
> 	 * CI Object to Array translator
1194c1381,1382
< 	 * Takes an object as input and converts the class variables to array key/vals
---
> 	 * Takes an object as input and converts the class variables to
> 	 * an associative array with key/value pairs.
1196c1384
< 	 * @param	object
---
> 	 * @param	object	$object	Object data to translate
1201c1389
< 		return (is_object($object)) ? get_object_vars($object) : $object;
---
> 		return is_object($object) ? get_object_vars($object) : $object;
1207c1395,1397
< 	 * Get a reference to a specific library or model
---
> 	 * CI Component getter
> 	 *
> 	 * Get a reference to a specific library or model.
1209c1399
< 	 * @param 	string
---
> 	 * @param 	string	$component	Component name
1223c1413,1414
< 	 * This function preps the name of various items to make loading them more reliable.
---
> 	 * This function prepares filenames of various items to
> 	 * make their loading more reliable.
1225,1226c1416,1417
< 	 * @param	mixed
< 	 * @param 	string
---
> 	 * @param	string|string[]	$filename	Filename(s)
> 	 * @param 	string		$extension	Filename extension
1233c1424
< 			return array(strtolower(str_replace('.php', '', str_replace($extension, '', $filename)).$extension));
---
> 			return array(strtolower(str_replace(array($extension, '.php'), '', $filename).$extension));
1239c1430
< 				$filename[$key] = strtolower(str_replace('.php', '', str_replace($extension, '', $val)).$extension);
---
> 				$filename[$key] = strtolower(str_replace(array($extension, '.php'), '', $val).$extension);
1245d1435
< }
1247,1248c1437
< /* End of file Loader.php */
< /* Location: ./system/core/Loader.php */
\ No newline at end of file
---
> }
Only in opensourcepos/system/core: Log.php
diff -rBwi --ignore-file-name-case pos-prod/system/core/Model.php opensourcepos/system/core/Model.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * CodeIgniter Model Class
---
>  * Model Class
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/config.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/config.html
30c52
< 	 * Constructor
---
> 	 * Class constructor
32c54
< 	 * @access public
---
> 	 * @return	void
34c56
< 	function __construct()
---
> 	public function __construct()
36c58
< 		log_message('debug', "Model Class Initialized");
---
> 		log_message('info', 'Model Class Initialized');
38a61,62
> 	// --------------------------------------------------------------------
> 
40c64
< 	 * __get
---
> 	 * __get magic
45,46c69
< 	 * @param	string
< 	 * @access private
---
> 	 * @param	string	$key
48c71
< 	function __get($key)
---
> 	public function __get($key)
50,52c73,77
< 		$CI =& get_instance();
< 		return $CI->$key;
< 	}
---
> 		// Debugging note:
> 		//	If you're here because you're getting an error message
> 		//	saying 'Undefined Property: system/core/Model.php', it's
> 		//	most likely a typo in your model code.
> 		return get_instance()->$key;
54d78
< // END Model Class
56,57c80
< /* End of file Model.php */
< /* Location: ./system/core/Model.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/core/Output.php opensourcepos/system/core/Output.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
21c43
<  * Responsible for sending final output to browser
---
>  * Responsible for sending final output to the browser.
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/output.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/output.html
32c54
< 	 * Current output string
---
> 	 * Final output string
35d56
< 	 * @access 	protected
37c58,59
< 	protected $final_output;
---
> 	public $final_output;
> 
42d63
< 	 * @access 	protected
44c65,66
< 	protected $cache_expiration	= 0;
---
> 	public $cache_expiration = 0;
> 
49d70
< 	 * @access 	protected
51c72,73
< 	protected $headers			= array();
---
> 	public $headers = array();
> 
56d77
< 	 * @access 	protected
58c79,80
< 	protected $mime_types		= array();
---
> 	public $mimes =	array();
> 
60c82
< 	 * Determines wether profiler is enabled
---
> 	 * Mime-type for the current page
62,63c84,91
< 	 * @var book
< 	 * @access 	protected
---
> 	 * @var	string
> 	 */
> 	protected $mime_type = 'text/html';
> 
> 	/**
> 	 * Enable Profiler flag
> 	 *
> 	 * @var	bool
65c93,94
< 	protected $enable_profiler	= FALSE;
---
> 	public $enable_profiler = FALSE;
> 
67c96
< 	 * Determines if output compression is enabled
---
> 	 * php.ini zlib.output_compression flag
70d98
< 	 * @access 	protected
72a101,108
> 
> 	/**
> 	 * CI output compression flag
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_compress_output = FALSE;
> 
77d112
< 	 * @access 	protected
81c117,119
< 	 * Whether or not to parse variables like {elapsed_time} and {memory_usage}
---
> 	 * Parse markers flag
> 	 *
> 	 * Whether or not to parse variables like {elapsed_time} and {memory_usage}.
84d121
< 	 * @access 	protected
86c123
< 	protected $parse_exec_vars	= TRUE;
---
> 	public $parse_exec_vars = TRUE;
89c126
< 	 * Constructor
---
> 	 * Class constructor
90a128,130
> 	 * Determines whether zLib output compression will be used.
> 	 *
> 	 * @return	void
92c132
< 	function __construct()
---
> 	public function __construct()
94c134,139
< 		$this->_zlib_oc = @ini_get('zlib.output_compression');
---
> 		$this->_zlib_oc = (bool) ini_get('zlib.output_compression');
> 		$this->_compress_output = (
> 			$this->_zlib_oc === FALSE
> 			&& config_item('compress_output') === TRUE
> 			&& extension_loaded('zlib')
> 		);
97,107c142
< 		if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
< 		{
< 		    include APPPATH.'config/'.ENVIRONMENT.'/mimes.php';
< 		}
< 		else
< 		{
< 			include APPPATH.'config/mimes.php';
< 		}
< 
< 
< 		$this->mime_types = $mimes;
---
> 		$this->mimes =& get_mimes();
109c144
< 		log_message('debug', "Output Class Initialized");
---
> 		log_message('info', 'Output Class Initialized');
117c152
< 	 * Returns the current output string
---
> 	 * Returns the current output string.
119d153
< 	 * @access	public
122c156
< 	function get_output()
---
> 	public function get_output()
132c166
< 	 * Sets the output string
---
> 	 * Sets the output string.
134,136c168,169
< 	 * @access	public
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$output	Output data
> 	 * @return	CI_Output
138c171
< 	function set_output($output)
---
> 	public function set_output($output)
150c182
< 	 * Appends data onto the output string
---
> 	 * Appends data onto the output string.
152,154c184,185
< 	 * @access	public
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$output	Data to append
> 	 * @return	CI_Output
156,162c187
< 	function append_output($output)
< 	{
< 		if ($this->final_output == '')
< 		{
< 			$this->final_output = $output;
< 		}
< 		else
---
> 	public function append_output($output)
165,166d189
< 		}
< 
175c198
< 	 * Lets you set a server header which will be outputted with the final display.
---
> 	 * Lets you set a server header which will be sent with the final output.
177,178c200,201
< 	 * Note:  If a file is cached, headers will not be sent.  We need to figure out
< 	 * how to permit header data to be saved with the cache data...
---
> 	 * Note: If a file is cached, headers will not be sent.
> 	 * @todo	We need to figure out how to permit headers to be cached.
180,183c203,205
< 	 * @access	public
< 	 * @param	string
< 	 * @param 	bool
< 	 * @return	void
---
> 	 * @param	string	$header		Header
> 	 * @param	bool	$replace	Whether to replace the old header value, if already set
> 	 * @return	CI_Output
185c207
< 	function set_header($header, $replace = TRUE)
---
> 	public function set_header($header, $replace = TRUE)
191,192c213
< 
< 		if ($this->_zlib_oc && strncasecmp($header, 'content-length', 14) == 0)
---
> 		if ($this->_zlib_oc && strncasecmp($header, 'content-length', 14) === 0)
194c215
< 			return;
---
> 			return $this;
205c225
< 	 * Set Content Type Header
---
> 	 * Set Content-Type Header
207,209c227,229
< 	 * @access	public
< 	 * @param	string	extension of the file we're outputting
< 	 * @return	void
---
> 	 * @param	string	$mime_type	Extension of the file we're outputting
> 	 * @param	string	$charset	Character set (default: NULL)
> 	 * @return	CI_Output
211c231
< 	function set_content_type($mime_type)
---
> 	public function set_content_type($mime_type, $charset = NULL)
218c238
< 			if (isset($this->mime_types[$extension]))
---
> 			if (isset($this->mimes[$extension]))
220c240
< 				$mime_type =& $this->mime_types[$extension];
---
> 				$mime_type =& $this->mimes[$extension];
229c249
< 		$header = 'Content-Type: '.$mime_type;
---
> 		$this->mime_type = $mime_type;
231c251,257
< 		$this->headers[] = array($header, TRUE);
---
> 		if (empty($charset))
> 		{
> 			$charset = config_item('charset');
> 		}
> 
> 		$header = 'Content-Type: '.$mime_type
> 			.(empty($charset) ? '' : '; charset='.$charset);
232a259
> 		$this->headers[] = array($header, TRUE);
238a266,318
> 	 * Get Current Content-Type Header
> 	 *
> 	 * @return	string	'text/html', if not already set
> 	 */
> 	public function get_content_type()
> 	{
> 		for ($i = 0, $c = count($this->headers); $i < $c; $i++)
> 		{
> 			if (sscanf($this->headers[$i][0], 'Content-Type: %[^;]', $content_type) === 1)
> 			{
> 				return $content_type;
> 			}
> 		}
> 
> 		return 'text/html';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Get Header
> 	 *
> 	 * @param	string	$header_name
> 	 * @return	string
> 	 */
> 	public function get_header($header)
> 	{
> 		// Combine headers already sent with our batched headers
> 		$headers = array_merge(
> 			// We only need [x][0] from our multi-dimensional array
> 			array_map('array_shift', $this->headers),
> 			headers_list()
> 		);
> 
> 		if (empty($headers) OR empty($header))
> 		{
> 			return NULL;
> 		}
> 
> 		for ($i = 0, $c = count($headers); $i < $c; $i++)
> 		{
> 			if (strncasecmp($header, $headers[$i], $l = strlen($header)) === 0)
> 			{
> 				return trim(substr($headers[$i], $l+1));
> 			}
> 		}
> 
> 		return NULL;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
240d319
< 	 * moved to Common procedural functions in 1.7.2
242,245c321,326
< 	 * @access	public
< 	 * @param	int		the status code
< 	 * @param	string
< 	 * @return	void
---
> 	 * As of version 1.7.2, this is an alias for common function
> 	 * set_status_header().
> 	 *
> 	 * @param	int	$code	Status code (default: 200)
> 	 * @param	string	$text	Optional message
> 	 * @return	CI_Output
247c328
< 	function set_status_header($code = 200, $text = '')
---
> 	public function set_status_header($code = 200, $text = '')
259,261c339,340
< 	 * @access	public
< 	 * @param	bool
< 	 * @return	void
---
> 	 * @param	bool	$val	TRUE to enable or FALSE to disable
> 	 * @return	CI_Output
263c342
< 	function enable_profiler($val = TRUE)
---
> 	public function enable_profiler($val = TRUE)
265,266c344
< 		$this->enable_profiler = (is_bool($val)) ? $val : TRUE;
< 
---
> 		$this->enable_profiler = is_bool($val) ? $val : TRUE;
275c353,354
< 	 * Allows override of default / config settings for Profiler section display
---
> 	 * Allows override of default/config settings for
> 	 * Profiler section display.
277,279c356,357
< 	 * @access	public
< 	 * @param	array
< 	 * @return	void
---
> 	 * @param	array	$sections	Profiler sections
> 	 * @return	CI_Output
281c359,361
< 	function set_profiler_sections($sections)
---
> 	public function set_profiler_sections($sections)
> 	{
> 		if (isset($sections['query_toggle_count']))
282a363,366
> 			$this->_profiler_sections['query_toggle_count'] = (int) $sections['query_toggle_count'];
> 			unset($sections['query_toggle_count']);
> 		}
> 
285c369
< 			$this->_profiler_sections[$section] = ($enable !== FALSE) ? TRUE : FALSE;
---
> 			$this->_profiler_sections[$section] = ($enable !== FALSE);
296,298c380,381
< 	 * @access	public
< 	 * @param	integer
< 	 * @return	void
---
> 	 * @param	int	$time	Cache expiration time in minutes
> 	 * @return	CI_Output
300c383
< 	function cache($time)
---
> 	public function cache($time)
302,303c385
< 		$this->cache_expiration = ( ! is_numeric($time)) ? 0 : $time;
< 
---
> 		$this->cache_expiration = is_numeric($time) ? $time : 0;
312,314c394,396
< 	 * All "view" data is automatically put into this variable by the controller class:
< 	 *
< 	 * $this->final_output
---
> 	 * Processes and sends finalized output data to the browser along
> 	 * with any server headers and profile data. It also stops benchmark
> 	 * timers so the page rendering speed and memory usage can be shown.
316,318c398,399
< 	 * This function sends the finalized output data to the browser along
< 	 * with any server headers and profile data.  It also stops the
< 	 * benchmark timer so the page rendering speed and memory usage can be shown.
---
> 	 * Note: All "view" data is automatically put into $this->final_output
> 	 *	 by controller class.
320,322c401,403
< 	 * @access	public
< 	 * @param 	string
< 	 * @return	mixed
---
> 	 * @uses	CI_Output::$final_output
> 	 * @param	string	$output	Output data override
> 	 * @return	void
324c405
< 	function _display($output = '')
---
> 	public function _display($output = '')
326c407
< 		// Note:  We use globals because we can't use $CI =& get_instance()
---
> 		// Note:  We use load_class() because we can't use $CI =& get_instance()
329c410,411
< 		global $BM, $CFG;
---
> 		$BM =& load_class('Benchmark', 'core');
> 		$CFG =& load_class('Config', 'core');
332c414
< 		if (class_exists('CI_Controller'))
---
> 		if (class_exists('CI_Controller', FALSE))
340c422
< 		if ($output == '')
---
> 		if ($output === '')
364,367c446,447
< 			$memory	 = ( ! function_exists('memory_get_usage')) ? '0' : round(memory_get_usage()/1024/1024, 2).'MB';
< 
< 			$output = str_replace('{elapsed_time}', $elapsed, $output);
< 			$output = str_replace('{memory_usage}', $memory, $output);
---
> 			$memory	= round(memory_get_usage() / 1024 / 1024, 2).'MB';
> 			$output = str_replace(array('{elapsed_time}', '{memory_usage}'), array($elapsed, $memory), $output);
373,377c453,455
< 		if ($CFG->item('compress_output') === TRUE && $this->_zlib_oc == FALSE)
< 		{
< 			if (extension_loaded('zlib'))
< 			{
< 				if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) AND strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE)
---
> 		if (isset($CI) // This means that we're not serving a cache file, if we were, it would already be compressed
> 			&& $this->_compress_output === TRUE
> 			&& isset($_SERVER['HTTP_ACCEPT_ENCODING']) && strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE)
381,382d458
< 			}
< 		}
401a478,492
> 			if ($this->_compress_output === TRUE)
> 			{
> 				if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE)
> 				{
> 					header('Content-Encoding: gzip');
> 					header('Content-Length: '.strlen($output));
> 				}
> 				else
> 				{
> 					// User agent doesn't support gzip compression,
> 					// so we'll have to decompress our cache
> 					$output = gzinflate(substr($output, 10, -8));
> 				}
> 			}
> 
403,405c494,496
< 			log_message('debug', "Final output sent to browser");
< 			log_message('debug', "Total execution time: ".$elapsed);
< 			return TRUE;
---
> 			log_message('info', 'Final output sent to browser');
> 			log_message('debug', 'Total execution time: '.$elapsed);
> 			return;
412c503
< 		if ($this->enable_profiler == TRUE)
---
> 		if ($this->enable_profiler === TRUE)
423c513,514
< 			if (preg_match("|</body>.*?</html>|is", $output))
---
> 			$output = preg_replace('|</body>.*?</html>|is', '', $output, -1, $count).$CI->profiler->run();
> 			if ($count > 0)
425,426d515
< 				$output  = preg_replace("|</body>.*?</html>|is", '', $output);
< 				$output .= $CI->profiler->run();
429,432d517
< 			else
< 			{
< 				$output .= $CI->profiler->run();
< 			}
435,436d519
< 		// --------------------------------------------------------------------
< 
448,449c531,532
< 		log_message('debug', "Final output sent to browser");
< 		log_message('debug', "Total execution time: ".$elapsed);
---
> 		log_message('info', 'Final output sent to browser');
> 		log_message('debug', 'Total execution time: '.$elapsed);
455c538
< 	 * Write a Cache File
---
> 	 * Write Cache
457,458c540
< 	 * @access	public
< 	 * @param 	string
---
> 	 * @param	string	$output	Output data to cache
461c543
< 	function _write_cache($output)
---
> 	public function _write_cache($output)
465,466c547
< 
< 		$cache_path = ($path == '') ? APPPATH.'cache/' : $path;
---
> 		$cache_path = ($path === '') ? APPPATH.'cache/' : $path;
470c551
< 			log_message('error', "Unable to write cache file: ".$cache_path);
---
> 			log_message('error', 'Unable to write cache file: '.$cache_path);
474,476c555,569
< 		$uri =	$CI->config->item('base_url').
< 				$CI->config->item('index_page').
< 				$CI->uri->uri_string();
---
> 		$uri = $CI->config->item('base_url')
> 			.$CI->config->item('index_page')
> 			.$CI->uri->uri_string();
> 
> 		if (($cache_query_string = $CI->config->item('cache_query_string')) && ! empty($_SERVER['QUERY_STRING']))
> 		{
> 			if (is_array($cache_query_string))
> 			{
> 				$uri .= '?'.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));
> 			}
> 			else
> 			{
> 				$uri .= '?'.$_SERVER['QUERY_STRING'];
> 			}
> 		}
480c573
< 		if ( ! $fp = @fopen($cache_path, FOPEN_WRITE_CREATE_DESTRUCTIVE))
---
> 		if ( ! $fp = @fopen($cache_path, 'w+b'))
482c575
< 			log_message('error', "Unable to write cache file: ".$cache_path);
---
> 			log_message('error', 'Unable to write cache file: '.$cache_path);
485a579,593
> 		if (flock($fp, LOCK_EX))
> 		{
> 			// If output compression is enabled, compress the cache
> 			// itself, so that we don't have to do that each time
> 			// we're serving it
> 			if ($this->_compress_output === TRUE)
> 			{
> 				$output = gzencode($output);
> 
> 				if ($this->get_header('content-type') === NULL)
> 				{
> 					$this->set_content_type($this->mime_type);
> 				}
> 			}
> 
488c596,606
< 		if (flock($fp, LOCK_EX))
---
> 			// Put together our serialized info.
> 			$cache_info = serialize(array(
> 				'expire'	=> $expire,
> 				'headers'	=> $this->headers
> 			));
> 
> 			$output = $cache_info.'ENDCI--->'.$output;
> 
> 			for ($written = 0, $length = strlen($output); $written < $length; $written += $result)
> 			{
> 				if (($result = fwrite($fp, substr($output, $written))) === FALSE)
490c608,611
< 			fwrite($fp, $expire.'TS--->'.$output);
---
> 					break;
> 				}
> 			}
> 
495c616
< 			log_message('error', "Unable to secure a file lock for file at: ".$cache_path);
---
> 			log_message('error', 'Unable to secure a file lock for file at: '.$cache_path);
499d620
< 		@chmod($cache_path, FILE_WRITE_MODE);
501c622,634
< 		log_message('debug', "Cache file written: ".$cache_path);
---
> 		if (is_int($result))
> 		{
> 			chmod($cache_path, 0640);
> 			log_message('debug', 'Cache file written: '.$cache_path);
> 
> 			// Send HTTP cache-control headers to browser to match file cache settings.
> 			$this->set_cache_header($_SERVER['REQUEST_TIME'], $expire);
> 		}
> 		else
> 		{
> 			@unlink($cache_path);
> 			log_message('error', 'Unable to write the complete cache content at: '.$cache_path);
> 		}
507c640
< 	 * Update/serve a cached file
---
> 	 * Update/serve cached output
509,512c642,647
< 	 * @access	public
< 	 * @param 	object	config class
< 	 * @param 	object	uri class
< 	 * @return	void
---
> 	 * @uses	CI_Config
> 	 * @uses	CI_URI
> 	 *
> 	 * @param	object	&$CFG	CI_Config class instance
> 	 * @param	object	&$URI	CI_URI class instance
> 	 * @return	bool	TRUE on success or FALSE on failure
514c649
< 	function _display_cache(&$CFG, &$URI)
---
> 	public function _display_cache(&$CFG, &$URI)
516c651
< 		$cache_path = ($CFG->item('cache_path') == '') ? APPPATH.'cache/' : $CFG->item('cache_path');
---
> 		$cache_path = ($CFG->item('cache_path') === '') ? APPPATH.'cache/' : $CFG->item('cache_path');
519,521c654
< 		$uri =	$CFG->item('base_url').
< 				$CFG->item('index_page').
< 				$URI->uri_string;
---
> 		$uri = $CFG->item('base_url').$CFG->item('index_page').$URI->uri_string;
523,525c656
< 		$filepath = $cache_path.md5($uri);
< 
< 		if ( ! @file_exists($filepath))
---
> 		if (($cache_query_string = $CFG->item('cache_query_string')) && ! empty($_SERVER['QUERY_STRING']))
527c658,664
< 			return FALSE;
---
> 			if (is_array($cache_query_string))
> 			{
> 				$uri .= '?'.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));
> 			}
> 			else
> 			{
> 				$uri .= '?'.$_SERVER['QUERY_STRING'];
528a666,668
> 		}
> 
> 		$filepath = $cache_path.md5($uri);
530c670
< 		if ( ! $fp = @fopen($filepath, FOPEN_READ))
---
> 		if ( ! file_exists($filepath) OR ! $fp = @fopen($filepath, 'rb'))
537,541c677
< 		$cache = '';
< 		if (filesize($filepath) > 0)
< 		{
< 			$cache = fread($fp, filesize($filepath));
< 		}
---
> 		$cache = (filesize($filepath) > 0) ? fread($fp, filesize($filepath)) : '';
546,547c682,683
< 		// Strip out the embedded timestamp
< 		if ( ! preg_match("/(\d+TS--->)/", $cache, $match))
---
> 		// Look for embedded serialized file info.
> 		if ( ! preg_match('/^(.*)ENDCI--->/', $cache, $match))
552,555c688,694
< 		// Has the file expired? If so we'll delete it.
< 		if (time() >= trim(str_replace('TS--->', '', $match['1'])))
< 		{
< 			if (is_really_writable($cache_path))
---
> 		$cache_info = unserialize($match[1]);
> 		$expire = $cache_info['expire'];
> 
> 		$last_modified = filemtime($filepath);
> 
> 		// Has the file expired?
> 		if ($_SERVER['REQUEST_TIME'] >= $expire && is_really_writable($cache_path))
556a696
> 			// If so we'll delete it.
558c698
< 				log_message('debug', "Cache file has expired. File deleted");
---
> 			log_message('debug', 'Cache file has expired. File deleted.');
560a701,710
> 		else
> 		{
> 			// Or else send the HTTP cache control headers.
> 			$this->set_cache_header($last_modified, $expire);
> 		}
> 
> 		// Add headers from cache file.
> 		foreach ($cache_info['headers'] as $header)
> 		{
> 			$this->set_header($header[0], $header[1]);
564,565c714,766
< 		$this->_display(str_replace($match['0'], '', $cache));
< 		log_message('debug', "Cache file is current. Sending it to browser.");
---
> 		$this->_display(substr($cache, strlen($match[0])));
> 		log_message('debug', 'Cache file is current. Sending it to browser.');
> 		return TRUE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Delete cache
> 	 *
> 	 * @param	string	$uri	URI string
> 	 * @return	bool
> 	 */
> 	public function delete_cache($uri = '')
> 	{
> 		$CI =& get_instance();
> 		$cache_path = $CI->config->item('cache_path');
> 		if ($cache_path === '')
> 		{
> 			$cache_path = APPPATH.'cache/';
> 		}
> 
> 		if ( ! is_dir($cache_path))
> 		{
> 			log_message('error', 'Unable to find cache path: '.$cache_path);
> 			return FALSE;
> 		}
> 
> 		if (empty($uri))
> 		{
> 			$uri = $CI->uri->uri_string();
> 
> 			if (($cache_query_string = $CI->config->item('cache_query_string')) && ! empty($_SERVER['QUERY_STRING']))
> 			{
> 				if (is_array($cache_query_string))
> 				{
> 					$uri .= '?'.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));
> 				}
> 				else
> 				{
> 					$uri .= '?'.$_SERVER['QUERY_STRING'];
> 				}
> 			}
> 		}
> 
> 		$cache_path .= md5($CI->config->item('base_url').$CI->config->item('index_page').ltrim($uri, '/'));
> 
> 		if ( ! @unlink($cache_path))
> 		{
> 			log_message('error', 'Unable to delete cache file for '.$uri);
> 			return FALSE;
> 		}
> 
568a770
> 	// --------------------------------------------------------------------
569a772,797
> 	/**
> 	 * Set Cache Header
> 	 *
> 	 * Set the HTTP headers to match the server-side file cache settings
> 	 * in order to reduce bandwidth.
> 	 *
> 	 * @param	int	$last_modified	Timestamp of when the page was last modified
> 	 * @param	int	$expiration	Timestamp of when should the requested page expire from cache
> 	 * @return	void
> 	 */
> 	public function set_cache_header($last_modified, $expiration)
> 	{
> 		$max_age = $expiration - $_SERVER['REQUEST_TIME'];
> 
> 		if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) && $last_modified <= strtotime($_SERVER['HTTP_IF_MODIFIED_SINCE']))
> 		{
> 			$this->set_status_header(304);
> 			exit;
> 		}
> 		else
> 		{
> 			header('Pragma: public');
> 			header('Cache-Control: max-age='.$max_age.', public');
> 			header('Expires: '.gmdate('D, d M Y H:i:s', $expiration).' GMT');
> 			header('Last-modified: '.gmdate('D, d M Y H:i:s', $last_modified).' GMT');
> 		}
571d798
< // END Output Class
573,574c800
< /* End of file Output.php */
< /* Location: ./system/core/Output.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/core/Router.php opensourcepos/system/core/Router.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
25d46
<  * @author		ExpressionEngine Dev Team
27c48,49
<  * @link		http://codeigniter.com/user_guide/general/routing.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/general/routing.html
32c54
< 	 * Config class
---
> 	 * CI_Config class object
35d56
< 	 * @access public
37c58,59
< 	var $config;
---
> 	public $config;
> 
42d63
< 	 * @access public
44,51c65,66
< 	var $routes			= array();
< 	/**
< 	 * List of error routes
< 	 *
< 	 * @var array
< 	 * @access public
< 	 */
< 	var $error_routes	= array();
---
> 	public $routes =	array();
> 
56d70
< 	 * @access public
58c72,73
< 	var $class			= '';
---
> 	public $class =		'';
> 
63d77
< 	 * @access public
65c79,80
< 	var $method			= 'index';
---
> 	public $method =	'index';
> 
70d84
< 	 * @access public
72c86,87
< 	var $directory		= '';
---
> 	public $directory;
> 
77d91
< 	 * @access public
79c93,103
< 	var $default_controller;
---
> 	public $default_controller;
> 
> 	/**
> 	 * Translate URI dashes
> 	 *
> 	 * Determines whether dashes in controller & method segments
> 	 * should be automatically replaced by underscores.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $translate_uri_dashes = FALSE;
82c106,117
< 	 * Constructor
---
> 	 * Enable query strings flag
> 	 *
> 	 * Determines whether to use GET parameters or segment URIs
> 	 *
> 	 * @var	bool
> 	 */
> 	public $enable_query_strings = FALSE;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
84a120,122
> 	 *
> 	 * @param	array	$routing
> 	 * @return	void
86c124
< 	function __construct()
---
> 	public function __construct($routing = NULL)
90c128,142
< 		log_message('debug', "Router Class Initialized");
---
> 
> 		$this->enable_query_strings = ( ! is_cli() && $this->config->item('enable_query_strings') === TRUE);
> 
> 		// If a directory override is configured, it has to be set before any dynamic routing logic
> 		is_array($routing) && isset($routing['directory']) && $this->set_directory($routing['directory']);
> 		$this->_set_routing();
> 
> 		// Set any routing overrides that may exist in the main index file
> 		if (is_array($routing))
> 		{
> 			empty($routing['controller']) OR $this->set_class($routing['controller']);
> 			empty($routing['function'])   OR $this->set_method($routing['function']);
> 		}
> 
> 		log_message('info', 'Router Class Initialized');
96c148
< 	 * Set the route mapping
---
> 	 * Set route mapping
98c150
< 	 * This function determines what should be served based on the URI request,
---
> 	 * Determines what should be served based on the URI request,
101d152
< 	 * @access	private
104,110c155
< 	function _set_routing()
< 	{
< 		// Are query strings enabled in the config file?  Normally CI doesn't utilize query strings
< 		// since URI segments are more search-engine friendly, but they can optionally be used.
< 		// If this feature is enabled, we will gather the directory/class/method a little differently
< 		$segments = array();
< 		if ($this->config->item('enable_query_strings') === TRUE AND isset($_GET[$this->config->item('controller_trigger')]))
---
> 	protected function _set_routing()
112c157,160
< 			if (isset($_GET[$this->config->item('directory_trigger')]))
---
> 		// Load the routes.php file. It would be great if we could
> 		// skip this for enable_query_strings = TRUE, but then
> 		// default_controller would be empty ...
> 		if (file_exists(APPPATH.'config/routes.php'))
114,115c162
< 				$this->set_directory(trim($this->uri->_filter_uri($_GET[$this->config->item('directory_trigger')])));
< 				$segments[] = $this->fetch_directory();
---
> 			include(APPPATH.'config/routes.php');
118c165
< 			if (isset($_GET[$this->config->item('controller_trigger')]))
---
> 		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/routes.php'))
120,121c167
< 				$this->set_class(trim($this->uri->_filter_uri($_GET[$this->config->item('controller_trigger')])));
< 				$segments[] = $this->fetch_class();
---
> 			include(APPPATH.'config/'.ENVIRONMENT.'/routes.php');
124c170,171
< 			if (isset($_GET[$this->config->item('function_trigger')]))
---
> 		// Validate & get reserved routes
> 		if (isset($route) && is_array($route))
126,128c173,176
< 				$this->set_method(trim($this->uri->_filter_uri($_GET[$this->config->item('function_trigger')])));
< 				$segments[] = $this->fetch_method();
< 			}
---
> 			isset($route['default_controller']) && $this->default_controller = $route['default_controller'];
> 			isset($route['translate_uri_dashes']) && $this->translate_uri_dashes = $route['translate_uri_dashes'];
> 			unset($route['default_controller'], $route['translate_uri_dashes']);
> 			$this->routes = $route;
131,132c179,182
< 		// Load the routes.php file.
< 		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/routes.php'))
---
> 		// Are query strings enabled in the config file? Normally CI doesn't utilize query strings
> 		// since URI segments are more search-engine friendly, but they can optionally be used.
> 		// If this feature is enabled, we will gather the directory/class/method a little differently
> 		if ($this->enable_query_strings)
134,136c184,185
< 			include(APPPATH.'config/'.ENVIRONMENT.'/routes.php');
< 		}
< 		elseif (is_file(APPPATH.'config/routes.php'))
---
> 			// If the directory is set at this time, it means an override exists, so skip the checks
> 			if ( ! isset($this->directory))
138,146c187,188
< 			include(APPPATH.'config/routes.php');
< 		}
< 
< 		$this->routes = ( ! isset($route) OR ! is_array($route)) ? array() : $route;
< 		unset($route);
< 
< 		// Set the default controller so we can display it in the event
< 		// the URI doesn't correlated to a valid controller.
< 		$this->default_controller = ( ! isset($this->routes['default_controller']) OR $this->routes['default_controller'] == '') ? FALSE : strtolower($this->routes['default_controller']);
---
> 				$_d = $this->config->item('directory_trigger');
> 				$_d = isset($_GET[$_d]) ? trim($_GET[$_d], " \t\n\r\0\x0B/") : '';
148,149c190
< 		// Were there any query string segments?  If so, we'll validate them and bail out since we're done.
< 		if (count($segments) > 0)
---
> 				if ($_d !== '')
151c192,194
< 			return $this->_validate_request($segments);
---
> 					$this->uri->filter_uri($_d);
> 					$this->set_directory($_d);
> 				}
154,155c197,201
< 		// Fetch the complete URI string
< 		$this->uri->_fetch_uri_string();
---
> 			$_c = trim($this->config->item('controller_trigger'));
> 			if ( ! empty($_GET[$_c]))
> 			{
> 				$this->uri->filter_uri($_GET[$_c]);
> 				$this->set_class($_GET[$_c]);
157,158c203,204
< 		// Is there a URI string? If not, the default controller specified in the "routes" file will be shown.
< 		if ($this->uri->uri_string == '')
---
> 				$_f = trim($this->config->item('function_trigger'));
> 				if ( ! empty($_GET[$_f]))
160c206,207
< 			return $this->_set_default_controller();
---
> 					$this->uri->filter_uri($_GET[$_f]);
> 					$this->set_method($_GET[$_f]);
163,173c210,213
< 		// Do we need to remove the URL suffix?
< 		$this->uri->_remove_url_suffix();
< 
< 		// Compile the segments into an array
< 		$this->uri->_explode_segments();
< 
< 		// Parse any custom routing that may exist
< 		$this->_parse_routes();
< 
< 		// Re-index the segment array so that it starts with 1 rather than 0
< 		$this->uri->_reindex_segments();
---
> 				$this->uri->rsegments = array(
> 					1 => $this->class,
> 					2 => $this->method
> 				);
175,186c215
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Set the default controller
< 	 *
< 	 * @access	private
< 	 * @return	void
< 	 */
< 	function _set_default_controller()
< 	{
< 		if ($this->default_controller === FALSE)
---
> 			else
188c217
< 			show_error("Unable to determine what should be displayed. A default route has not been specified in the routing file.");
---
> 				$this->_set_default_controller();
190,193d218
< 		// Is the method being specified?
< 		if (strpos($this->default_controller, '/') !== FALSE)
< 		{
< 			$x = explode('/', $this->default_controller);
195,197c220,228
< 			$this->set_class($x[0]);
< 			$this->set_method($x[1]);
< 			$this->_set_request($x);
---
> 			// Routing rules don't apply to query strings and we don't need to detect
> 			// directories, so we're done here
> 			return;
> 		}
> 
> 		// Is there anything to parse?
> 		if ($this->uri->uri_string !== '')
> 		{
> 			$this->_parse_routes();
201,203c232
< 			$this->set_class($this->default_controller);
< 			$this->set_method('index');
< 			$this->_set_request(array($this->default_controller, 'index'));
---
> 			$this->_set_default_controller();
205,209d233
< 
< 		// re-index the routed segments array so it starts with 1 rather than 0
< 		$this->uri->_reindex_segments();
< 
< 		log_message('debug', "No URI present. Default controller set.");
215c239
< 	 * Set the Route
---
> 	 * Set request route
217,218c241,242
< 	 * This function takes an array of URI segments as
< 	 * input, and sets the current class/method
---
> 	 * Takes an array of URI segments as input and sets the class/method
> 	 * to be called.
220,222c244,245
< 	 * @access	private
< 	 * @param	array
< 	 * @param	bool
---
> 	 * @used-by	CI_Router::_parse_routes()
> 	 * @param	array	$segments	URI segments
225c248
< 	function _set_request($segments = array())
---
> 	protected function _set_request($segments = array())
227a251,257
> 		// If we don't have any segments left - try the default controller;
> 		// WARNING: Directories get shifted out of the segments array!
> 		if (empty($segments))
> 		{
> 			$this->_set_default_controller();
> 			return;
> 		}
229c259
< 		if (count($segments) == 0)
---
> 		if ($this->translate_uri_dashes === TRUE)
231c261,265
< 			return $this->_set_default_controller();
---
> 			$segments[0] = str_replace('-', '_', $segments[0]);
> 			if (isset($segments[1]))
> 			{
> 				$segments[1] = str_replace('-', '_', $segments[1]);
> 			}
238d270
< 			// A standard method request
243,244d274
< 			// This lets the "routed" segment array identify that the default
< 			// index method is being used.
248,250c278,279
< 		// Update our "routed" segment array to contain the segments.
< 		// Note: If there is no custom routing, this array will be
< 		// identical to $this->uri->segments
---
> 		array_unshift($segments, NULL);
> 		unset($segments[0]);
257,258c286
< 	 * Validates the supplied segments.  Attempts to determine the path to
< 	 * the controller.
---
> 	 * Set default controller
260,262c288
< 	 * @access	private
< 	 * @param	array
< 	 * @return	array
---
> 	 * @return	void
264c290
< 	function _validate_request($segments)
---
> 	protected function _set_default_controller()
266c292
< 		if (count($segments) == 0)
---
> 		if (empty($this->default_controller))
268c294
< 			return $segments;
---
> 			show_error('Unable to determine what should be displayed. A default route has not been specified in the routing file.');
271,272c297,298
< 		// Does the requested controller exist in the root folder?
< 		if (file_exists(APPPATH.'controllers/'.$segments[0].'.php'))
---
> 		// Is the method being specified?
> 		if (sscanf($this->default_controller, '%[^/]/%s', $class, $method) !== 2)
274c300
< 			return $segments;
---
> 			$method = 'index';
277,278c303
< 		// Is the controller in a sub-folder?
< 		if (is_dir(APPPATH.'controllers/'.$segments[0]))
---
> 		if ( ! file_exists(APPPATH.'controllers/'.$this->directory.ucfirst($class).'.php'))
280,282c305,307
< 			// Set the directory and remove it from the segment array
< 			$this->set_directory($segments[0]);
< 			$segments = array_slice($segments, 1);
---
> 			// This will trigger 404 later
> 			return;
> 		}
284,291c309,310
< 			if (count($segments) > 0)
< 			{
< 				// Does the requested controller exist in the sub-folder?
< 				if ( ! file_exists(APPPATH.'controllers/'.$this->fetch_directory().$segments[0].'.php'))
< 				{
< 					if ( ! empty($this->routes['404_override']))
< 					{
< 						$x = explode('/', $this->routes['404_override']);
---
> 		$this->set_class($class);
> 		$this->set_method($method);
293,295c312,316
< 						$this->set_directory('');
< 						$this->set_class($x[0]);
< 						$this->set_method(isset($x[1]) ? $x[1] : 'index');
---
> 		// Assign routed segments, index starting from 1
> 		$this->uri->rsegments = array(
> 			1 => $class,
> 			2 => $method
> 		);
297,303c318
< 						return $x;
< 					}
< 					else
< 					{
< 						show_404($this->fetch_directory().$segments[0]);
< 					}
< 				}
---
> 		log_message('debug', 'No URI present. Default controller set.');
305,310d319
< 			else
< 			{
< 				// Is the method being specified in the route?
< 				if (strpos($this->default_controller, '/') !== FALSE)
< 				{
< 					$x = explode('/', $this->default_controller);
312,315c321,332
< 					$this->set_class($x[0]);
< 					$this->set_method($x[1]);
< 				}
< 				else
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Validate request
> 	 *
> 	 * Attempts validate the URI request and determine the controller path.
> 	 *
> 	 * @used-by	CI_Router::_set_request()
> 	 * @param	array	$segments	URI segments
> 	 * @return	mixed	URI segments
> 	 */
> 	protected function _validate_request($segments)
317,319c334,335
< 					$this->set_class($this->default_controller);
< 					$this->set_method('index');
< 				}
---
> 		$c = count($segments);
> 		$directory_override = isset($this->directory);
321,322c337,339
< 				// Does the default controller exist in the sub-folder?
< 				if ( ! file_exists(APPPATH.'controllers/'.$this->fetch_directory().$this->default_controller.'.php'))
---
> 		// Loop through our segments and return as soon as a controller
> 		// is found or when such a directory doesn't exist
> 		while ($c-- > 0)
324,326c341,342
< 					$this->directory = '';
< 					return array();
< 				}
---
> 			$test = $this->directory
> 				.ucfirst($this->translate_uri_dashes === TRUE ? str_replace('-', '_', $segments[0]) : $segments[0]);
327a344,350
> 			if ( ! file_exists(APPPATH.'controllers/'.$test.'.php')
> 				&& $directory_override === FALSE
> 				&& is_dir(APPPATH.'controllers/'.$this->directory.$segments[0])
> 			)
> 			{
> 				$this->set_directory(array_shift($segments), TRUE);
> 				continue;
333,348c356,357
< 
< 		// If we've gotten this far it means that the URI does not correlate to a valid
< 		// controller class.  We will now see if there is an override
< 		if ( ! empty($this->routes['404_override']))
< 		{
< 			$x = explode('/', $this->routes['404_override']);
< 
< 			$this->set_class($x[0]);
< 			$this->set_method(isset($x[1]) ? $x[1] : 'index');
< 
< 			return $x;
< 		}
< 
< 
< 		// Nothing else to do at this point but show a 404
< 		show_404($segments[0]);
---
> 		// This means that all segments were actually directories
> 		return $segments;
356,358c365,366
< 	 * This function matches any routes that may exist in
< 	 * the config/routes.php file against the URI to
< 	 * determine if the class/method need to be remapped.
---
> 	 * Matches any routes that may exist in the config/routes.php file
> 	 * against the URI to determine if the class/method need to be remapped.
360d367
< 	 * @access	private
363c370
< 	function _parse_routes()
---
> 	protected function _parse_routes()
368,372c375,376
< 		// Is there a literal match?  If so we're done
< 		if (isset($this->routes[$uri]))
< 		{
< 			return $this->_set_request(explode('/', $this->routes[$uri]));
< 		}
---
> 		// Get HTTP verb
> 		$http_verb = isset($_SERVER['REQUEST_METHOD']) ? strtolower($_SERVER['REQUEST_METHOD']) : 'cli';
374c378
< 		// Loop through the route array looking for wild-cards
---
> 		// Loop through the route array looking for wildcards
377,378c381,396
< 			// Convert wild-cards to RegEx
< 			$key = str_replace(':any', '.+', str_replace(':num', '[0-9]+', $key));
---
> 			// Check if route format is using HTTP verbs
> 			if (is_array($val))
> 			{
> 				$val = array_change_key_case($val, CASE_LOWER);
> 				if (isset($val[$http_verb]))
> 				{
> 					$val = $val[$http_verb];
> 				}
> 				else
> 				{
> 					continue;
> 				}
> 			}
> 
> 			// Convert wildcards to RegEx
> 			$key = str_replace(array(':any', ':num'), array('[^/]+', '[0-9]+'), $key);
381c399
< 			if (preg_match('#^'.$key.'$#', $uri))
---
> 			if (preg_match('#^'.$key.'$#', $uri, $matches))
383,384c401,411
< 				// Do we have a back-reference?
< 				if (strpos($val, '$') !== FALSE AND strpos($key, '(') !== FALSE)
---
> 				// Are we using callbacks to process back-references?
> 				if ( ! is_string($val) && is_callable($val))
> 				{
> 					// Remove the original string from the matches array.
> 					array_shift($matches);
> 
> 					// Execute the callback using the values in matches as its parameters.
> 					$val = call_user_func_array($val, $matches);
> 				}
> 				// Are we using the default routing method for back-references?
> 				elseif (strpos($val, '$') !== FALSE && strpos($key, '(') !== FALSE)
389c416,417
< 				return $this->_set_request(explode('/', $val));
---
> 				$this->_set_request(explode('/', $val));
> 				return;
395c423
< 		$this->_set_request($this->uri->segments);
---
> 		$this->_set_request(array_values($this->uri->segments));
401c429
< 	 * Set the class name
---
> 	 * Set class name
403,404c431
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$class	Class name
407c434
< 	function set_class($class)
---
> 	public function set_class($class)
417c444
< 	 * @access	public
---
> 	 * @deprecated	3.0.0	Read the 'class' property instead
420c447
< 	function fetch_class()
---
> 	public function fetch_class()
428c455
< 	 *  Set the method name
---
> 	 * Set method name
430,431c457
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$method	Method name
434c460
< 	function set_method($method)
---
> 	public function set_method($method)
444c470
< 	 * @access	public
---
> 	 * @deprecated	3.0.0	Read the 'method' property instead
447,449c473
< 	function fetch_method()
< 	{
< 		if ($this->method == $this->fetch_class())
---
> 	public function fetch_method()
451,453d474
< 			return 'index';
< 		}
< 
460c481
< 	 *  Set the directory name
---
> 	 * Set directory name
462,463c483,484
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$dir	Directory name
> 	 * @param	bool	$append	Whether we're appending rather than setting the full value
466c487,489
< 	function set_directory($dir)
---
> 	public function set_directory($dir, $append = FALSE)
> 	{
> 		if ($append !== TRUE OR empty($this->directory))
468c491
< 		$this->directory = str_replace(array('/', '.'), '', $dir).'/';
---
> 			$this->directory = str_replace('.', '', trim($dir, '/')).'/';
470,479c493
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 *  Fetch the sub-directory (if any) that contains the requested controller class
< 	 *
< 	 * @access	public
< 	 * @return	string
< 	 */
< 	function fetch_directory()
---
> 		else
481c495,496
< 		return $this->directory;
---
> 			$this->directory .= str_replace('.', '', trim($dir, '/')).'/';
> 		}
487c502
< 	 *  Set the controller overrides
---
> 	 * Fetch directory
489,491c504,508
< 	 * @access	public
< 	 * @param	array
< 	 * @return	null
---
> 	 * Feches the sub-directory (if any) that contains the requested
> 	 * controller class.
> 	 *
> 	 * @deprecated	3.0.0	Read the 'directory' property instead
> 	 * @return	string
493,500c510
< 	function _set_overrides($routing)
< 	{
< 		if ( ! is_array($routing))
< 		{
< 			return;
< 		}
< 
< 		if (isset($routing['directory']))
---
> 	public function fetch_directory()
502,514c512
< 			$this->set_directory($routing['directory']);
< 		}
< 
< 		if (isset($routing['controller']) AND $routing['controller'] != '')
< 		{
< 			$this->set_class($routing['controller']);
< 		}
< 
< 		if (isset($routing['function']))
< 		{
< 			$routing['function'] = ($routing['function'] == '') ? 'index' : $routing['function'];
< 			$this->set_method($routing['function']);
< 		}
---
> 		return $this->directory;
519,522d515
< // END Router Class
< 
< /* End of file Router.php */
< /* Location: ./system/core/Router.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/core/Security.php opensourcepos/system/core/Security.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/security.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/security.html
30c52,87
< 	 * Random Hash for protecting URLs
---
> 	 * List of sanitize filename strings
> 	 *
> 	 * @var	array
> 	 */
> 	public $filename_bad_chars =	array(
> 		'../', '<!--', '-->', '<', '>',
> 		"'", '"', '&', '$', '#',
> 		'{', '}', '[', ']', '=',
> 		';', '?', '%20', '%22',
> 		'%3c',		// <
> 		'%253c',	// <
> 		'%3e',		// >
> 		'%0e',		// >
> 		'%28',		// (
> 		'%29',		// )
> 		'%2528',	// (
> 		'%26',		// &
> 		'%24',		// $
> 		'%3f',		// ?
> 		'%3b',		// ;
> 		'%3d'		// =
> 	);
> 
> 	/**
> 	 * Character set
> 	 *
> 	 * Will be overridden by the constructor.
> 	 *
> 	 * @var	string
> 	 */
> 	public $charset = 'UTF-8';
> 
> 	/**
> 	 * XSS Hash
> 	 *
> 	 * Random Hash for protecting URLs.
33d89
< 	 * @access protected
35c91,92
< 	protected $_xss_hash			= '';
---
> 	protected $_xss_hash;
> 
36a94,95
> 	 * CSRF Hash
> 	 *
40d98
< 	 * @access protected
42c100,101
< 	protected $_csrf_hash			= '';
---
> 	protected $_csrf_hash;
> 
44,45c103,106
< 	 * Expiration time for Cross Site Request Forgery Protection Cookie
< 	 * Defaults to two hours (in seconds)
---
> 	 * CSRF Expire time
> 	 *
> 	 * Expiration time for Cross Site Request Forgery protection cookie.
> 	 * Defaults to two hours (in seconds).
48d108
< 	 * @access protected
52c113,115
< 	 * Token name for Cross Site Request Forgery Protection Cookie
---
> 	 * CSRF Token name
> 	 *
> 	 * Token name for Cross Site Request Forgery protection cookie.
55d117
< 	 * @access protected
59c122,124
< 	 * Cookie name for Cross Site Request Forgery Protection Cookie
---
> 	 * CSRF Cookie name
> 	 *
> 	 * Cookie name for Cross Site Request Forgery protection cookie.
62d126
< 	 * @access protected
69d133
< 	 * @access protected
76d139
< 		'window.location'	=> '[removed]',
84d146
< 	/* never allowed, regex replacement */
86c148
< 	 * List of never allowed regex replacement
---
> 	 * List of never allowed regex replacements
89d150
< 	 * @access protected
92a154
> 		'(document|(document\.)?window)\.(location|on\w*)',
95c157,160
< 		'Redirect\s+302',
---
> 		'wscript\s*:', // IE
> 		'jscript\s*:', // IE
> 		'vbs\s*:', // IE
> 		'Redirect\s+30\d',
100c165
< 	 * Constructor
---
> 	 * Class constructor
107c172
< 		if (config_item('csrf_protection') === TRUE)
---
> 		if (config_item('csrf_protection'))
112c177
< 				if (FALSE !== ($val = config_item($key)))
---
> 				if (NULL !== ($val = config_item($key)))
119c184
< 			if (config_item('cookie_prefix'))
---
> 			if ($cookie_prefix = config_item('cookie_prefix'))
121c186
< 				$this->_csrf_cookie_name = config_item('cookie_prefix').$this->_csrf_cookie_name;
---
> 				$this->_csrf_cookie_name = $cookie_prefix.$this->_csrf_cookie_name;
128c193,195
< 		log_message('debug', "Security Class Initialized");
---
> 		$this->charset = strtoupper(config_item('charset'));
> 
> 		log_message('info', 'Security Class Initialized');
134c201
< 	 * Verify Cross Site Request Forgery Protection
---
> 	 * CSRF Verify
136c203
< 	 * @return	object
---
> 	 * @return	CI_Security
146,147c213,214
< 		// Do the tokens exist in both the _POST and _COOKIE arrays?
< 		if ( ! isset($_POST[$this->_csrf_token_name], $_COOKIE[$this->_csrf_cookie_name]))
---
> 		// Check if URI has been whitelisted from CSRF checks
> 		if ($exclude_uris = config_item('csrf_exclude_uris'))
149c216,223
< 			$this->csrf_show_error();
---
> 			$uri = load_class('URI', 'core');
> 			foreach ($exclude_uris as $excluded)
> 			{
> 				if (preg_match('#^'.$excluded.'$#i'.(UTF8_ENABLED ? 'u' : ''), $uri->uri_string()))
> 				{
> 					return $this;
> 				}
> 			}
152,153c226,228
< 		// Do the tokens match?
< 		if ($_POST[$this->_csrf_token_name] != $_COOKIE[$this->_csrf_cookie_name])
---
> 		// Do the tokens exist in both the _POST and _COOKIE arrays?
> 		if ( ! isset($_POST[$this->_csrf_token_name], $_COOKIE[$this->_csrf_cookie_name])
> 			OR $_POST[$this->_csrf_token_name] !== $_COOKIE[$this->_csrf_cookie_name]) // Do the tokens match?
158,159c233
< 		// We kill this since we're done and we don't want to
< 		// polute the _POST array
---
> 		// We kill this since we're done and we don't want to polute the _POST array
161a236,238
> 		// Regenerate on every submission?
> 		if (config_item('csrf_regenerate'))
> 		{
163a241,243
> 			$this->_csrf_hash = NULL;
> 		}
> 
167,168c247
< 		log_message('debug', 'CSRF token verified');
< 
---
> 		log_message('info', 'CSRF token verified');
175c254
< 	 * Set Cross Site Request Forgery Protection Cookie
---
> 	 * CSRF Set Cookie
177c256,257
< 	 * @return	object
---
> 	 * @codeCoverageIgnore
> 	 * @return	CI_Security
182c262
< 		$secure_cookie = (config_item('cookie_secure') === TRUE) ? 1 : 0;
---
> 		$secure_cookie = (bool) config_item('cookie_secure');
184c264
< 		if ($secure_cookie && (empty($_SERVER['HTTPS']) OR strtolower($_SERVER['HTTPS']) === 'off'))
---
> 		if ($secure_cookie && ! is_https())
189,191c269,278
< 		setcookie($this->_csrf_cookie_name, $this->_csrf_hash, $expire, config_item('cookie_path'), config_item('cookie_domain'), $secure_cookie);
< 
< 		log_message('debug', "CRSF cookie Set");
---
> 		setcookie(
> 			$this->_csrf_cookie_name,
> 			$this->_csrf_hash,
> 			$expire,
> 			config_item('cookie_path'),
> 			config_item('cookie_domain'),
> 			$secure_cookie,
> 			config_item('cookie_httponly')
> 		);
> 		log_message('info', 'CSRF cookie sent');
205c292
< 		show_error('The action you have requested is not allowed.');
---
> 		show_error('The action you have requested is not allowed.', 403);
213,215c300,301
< 	 * Getter Method
< 	 *
< 	 * @return 	string 	self::_csrf_hash
---
> 	 * @see		CI_Security::$_csrf_hash
> 	 * @return 	string	CSRF hash
227,229c313,314
< 	 * Getter Method
< 	 *
< 	 * @return 	string 	self::csrf_token_name
---
> 	 * @see		CI_Security::$_csrf_token_name
> 	 * @return	string	CSRF token name
242c327
< 	 * prevented.  This function does a fair amount of work but
---
> 	 * prevented.  This method does a fair amount of work but
248,250c333,335
< 	 * Note: This function should only be used to deal with data
< 	 * upon submission.  It's not something that should
< 	 * be used for general runtime processing.
---
> 	 * Note: Should only be used to deal with data upon submission.
> 	 *	 It's not something that should be used for general
> 	 *	 runtime processing.
252,253c337,338
< 	 * This function was based in part on some code and ideas I
< 	 * got from Bitflux: http://channel.bitflux.ch/wiki/XSS_Prevention
---
> 	 * @link	http://channel.bitflux.ch/wiki/XSS_Prevention
> 	 * 		Based in part on some code and ideas from Bitflux.
254a340
> 	 * @link	http://ha.ckers.org/xss.html
257,258c343
< 	 * harvested from examining vulnerabilities in other programs:
< 	 * http://ha.ckers.org/xss.html
---
> 	 *		harvested from examining vulnerabilities in other programs.
260,261c345,346
< 	 * @param	mixed	string or array
< 	 * @param 	bool
---
> 	 * @param	string|string[]	$str		Input data
> 	 * @param 	bool		$is_image	Whether the input is an image
266,269c351
< 		/*
< 		 * Is the string an array?
< 		 *
< 		 */
---
> 		// Is the string an array?
280,282c362
< 		/*
< 		 * Remove Invisible Characters
< 		 */
---
> 		// Remove Invisible Characters
285,287d364
< 		// Validate Entities in URLs
< 		$str = $this->_validate_entities($str);
< 
296d372
< 		 *
297a374,375
> 		do
> 		{
298a377,378
> 		}
> 		while (preg_match('/%[0-9a-f]{2,}/i', $str));
306d385
< 		 *
307a387,388
> 		$str = preg_replace_callback("/[^a-z0-9>]+[a-z0-9]+=([\'\"]).*?\\1/si", array($this, '_convert_attribute'), $str);
> 		$str = preg_replace_callback('/<\w+.*/si', array($this, '_decode_entity'), $str);
309,315c390
< 		$str = preg_replace_callback("/[a-z]+=([\'\"]).*?\\1/si", array($this, '_convert_attribute'), $str);
< 
< 		$str = preg_replace_callback("/<\w+.*?(?=>|<|$)/si", array($this, '_decode_entity'), $str);
< 
< 		/*
< 		 * Remove Invisible Characters Again!
< 		 */
---
> 		// Remove Invisible Characters Again!
326,328d400
< 
< 		if (strpos($str, "\t") !== FALSE)
< 		{
330d401
< 		}
332,334c403
< 		/*
< 		 * Capture converted string for later comparison
< 		 */
---
> 		// Capture converted string for later comparison
354c423
< 			$str = preg_replace('/<\?(php)/i', "&lt;?\\1", $str);
---
> 			$str = preg_replace('/<\?(php)/i', '&lt;?\\1', $str);
368,369c437,439
< 			'javascript', 'expression', 'vbscript', 'script', 'base64',
< 			'applet', 'alert', 'document', 'write', 'cookie', 'window'
---
> 			'javascript', 'expression', 'vbscript', 'jscript', 'wscript',
> 			'vbs', 'script', 'base64', 'applet', 'alert', 'document',
> 			'write', 'cookie', 'window', 'confirm', 'prompt', 'eval'
374,379c444
< 			$temp = '';
< 
< 			for ($i = 0, $wordlen = strlen($word); $i < $wordlen; $i++)
< 			{
< 				$temp .= substr($word, $i, 1)."\s*";
< 			}
---
> 			$word = implode('\s*', str_split($word)).'\s*';
383c448
< 			$str = preg_replace_callback('#('.substr($temp, 0, -3).')(\W)#is', array($this, '_compact_exploded_words'), $str);
---
> 			$str = preg_replace_callback('#('.substr($word, 0, -3).')(\W)#is', array($this, '_compact_exploded_words'), $str);
388c453
< 		 * We used to do some version comparisons and use of stripos for PHP5,
---
> 		 * We used to do some version comparisons and use of stripos(),
390a456,461
> 		 *
> 		 * Note: It was reported that not only space characters, but all in
> 		 * the following pattern can be parsed as separators between a tag name
> 		 * and its attributes: [\d\s"\'`;,\/\=\(\x00\x0B\x09\x0C]
> 		 * ... however, remove_invisible_characters() above already strips the
> 		 * hex-encoded ones, so we'll skip them below.
396c467
< 			if (preg_match("/<a/i", $str))
---
> 			if (preg_match('/<a/i', $str))
398c469
< 				$str = preg_replace_callback("#<a\s+([^>]*?)(>|$)#si", array($this, '_js_link_removal'), $str);
---
> 				$str = preg_replace_callback('#<a[^a-z0-9>]+([^>]*?)(?:>|$)#si', array($this, '_js_link_removal'), $str);
401c472
< 			if (preg_match("/<img/i", $str))
---
> 			if (preg_match('/<img/i', $str))
403c474
< 				$str = preg_replace_callback("#<img\s+([^>]*?)(\s?/?>|$)#si", array($this, '_js_img_removal'), $str);
---
> 				$str = preg_replace_callback('#<img[^a-z0-9]+([^>]*?)(?:\s?/?>|$)#si', array($this, '_js_img_removal'), $str);
406c477
< 			if (preg_match("/script/i", $str) OR preg_match("/xss/i", $str))
---
> 			if (preg_match('/script|xss/i', $str))
408c479
< 				$str = preg_replace("#<(/*)(script|xss)(.*?)\>#si", '[removed]', $str);
---
> 				$str = preg_replace('#</*(?:script|xss).*?>#si', '[removed]', $str);
411,412c482
< 		while($original != $str);
< 
---
> 		while ($original !== $str);
415,417d484
< 		// Remove evil attributes such as style, onclick and xmlns
< 		$str = $this->_remove_evil_attributes($str, $is_image);
< 
427,428c494,516
< 		$naughty = 'alert|applet|audio|basefont|base|behavior|bgsound|blink|body|embed|expression|form|frameset|frame|head|html|ilayer|iframe|input|isindex|layer|link|meta|object|plaintext|style|script|textarea|title|video|xml|xss';
< 		$str = preg_replace_callback('#<(/*\s*)('.$naughty.')([^><]*)([><]*)#is', array($this, '_sanitize_naughty_html'), $str);
---
> 		$pattern = '#'
> 			.'<((?<slash>/*\s*)(?<tagName>[a-z0-9]+)(?=[^a-z0-9]|$)' // tag start and name, followed by a non-tag character
> 			.'[^\s\042\047a-z0-9>/=]*' // a valid attribute character immediately after the tag would count as a separator
> 			// optional attributes
> 			.'(?<attributes>(?:[\s\042\047/=]*' // non-attribute characters, excluding > (tag close) for obvious reasons
> 			.'[^\s\042\047>/=]+' // attribute characters
> 			// optional attribute-value
> 				.'(?:\s*=' // attribute-value separator
> 					.'(?:[^\s\042\047=><`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=><`]*))' // single, double or non-quoted value
> 				.')?' // end optional attribute-value group
> 			.')*)' // end optional attributes group
> 			.'[^>]*)(?<closeTag>\>)?#isS';
> 
> 		// Note: It would be nice to optimize this for speed, BUT
> 		//       only matching the naughty elements here results in
> 		//       false positives and in turn - vulnerabilities!
> 		do
> 		{
> 			$old_str = $str;
> 			$str = preg_replace_callback($pattern, array($this, '_sanitize_naughty_html'), $str);
> 		}
> 		while ($old_str !== $str);
> 		unset($old_str);
442,443c530,534
< 		$str = preg_replace('#(alert|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si', "\\1\\2&#40;\\3&#41;", $str);
< 
---
> 		$str = preg_replace(
> 			'#(alert|prompt|confirm|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si',
> 			'\\1\\2&#40;\\3&#41;',
> 			$str
> 		);
462c552
< 			return ($str == $converted_string) ? TRUE: FALSE;
---
> 			return ($str === $converted_string);
465d554
< 		log_message('debug', "XSS Filtering completed");
472c561
< 	 * Random Hash for protecting URLs
---
> 	 * XSS Hash
474c563,566
< 	 * @return	string
---
> 	 * Generates the XSS hash if needed and returns it.
> 	 *
> 	 * @see		CI_Security::$_xss_hash
> 	 * @return	string	XSS hash
478c570
< 		if ($this->_xss_hash == '')
---
> 		if ($this->_xss_hash === NULL)
480,481c572,575
< 			mt_srand();
< 			$this->_xss_hash = md5(time() + mt_rand(0, 1999999999));
---
> 			$rand = $this->get_random_bytes(16);
> 			$this->_xss_hash = ($rand === FALSE)
> 				? md5(uniqid(mt_rand(), TRUE))
> 				: bin2hex($rand);
489a584,641
> 	 * Get random bytes
> 	 *
> 	 * @param	int	$length	Output length
> 	 * @return	string
> 	 */
> 	public function get_random_bytes($length)
> 	{
> 		if (empty($length) OR ! ctype_digit((string) $length))
> 		{
> 			return FALSE;
> 		}
> 
> 		if (function_exists('random_bytes'))
> 		{
> 			try
> 			{
> 				// The cast is required to avoid TypeError
> 				return random_bytes((int) $length);
> 			}
> 			catch (Exception $e)
> 			{
> 				// If random_bytes() can't do the job, we can't either ...
> 				// There's no point in using fallbacks.
> 				log_message('error', $e->getMessage());
> 				return FALSE;
> 			}
> 		}
> 
> 		// Unfortunately, none of the following PRNGs is guaranteed to exist ...
> 		if (defined('MCRYPT_DEV_URANDOM') && ($output = mcrypt_create_iv($length, MCRYPT_DEV_URANDOM)) !== FALSE)
> 		{
> 			return $output;
> 		}
> 
> 
> 		if (is_readable('/dev/urandom') && ($fp = fopen('/dev/urandom', 'rb')) !== FALSE)
> 		{
> 			// Try not to waste entropy ...
> 			is_php('5.4') && stream_set_chunk_size($fp, $length);
> 			$output = fread($fp, $length);
> 			fclose($fp);
> 			if ($output !== FALSE)
> 			{
> 				return $output;
> 			}
> 		}
> 
> 		if (function_exists('openssl_random_pseudo_bytes'))
> 		{
> 			return openssl_random_pseudo_bytes($length);
> 		}
> 
> 		return FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
492c644
< 	 * This function is a replacement for html_entity_decode()
---
> 	 * A replacement for html_entity_decode()
500,501c652,655
< 	 * @param	string
< 	 * @param	string
---
> 	 * @link	http://php.net/html-entity-decode
> 	 *
> 	 * @param	string	$str		Input
> 	 * @param	string	$charset	Character set
504c658
< 	public function entity_decode($str, $charset='UTF-8')
---
> 	public function entity_decode($str, $charset = NULL)
506c660
< 		if (stristr($str, '&') === FALSE)
---
> 		if (strpos($str, '&') === FALSE)
511,513c665,721
< 		$str = html_entity_decode($str, ENT_COMPAT, $charset);
< 		$str = preg_replace('~&#x(0*[0-9a-f]{2,5})~ei', 'chr(hexdec("\\1"))', $str);
< 		return preg_replace('~&#([0-9]{2,4})~e', 'chr(\\1)', $str);
---
> 		static $_entities;
> 
> 		isset($charset) OR $charset = $this->charset;
> 		$flag = is_php('5.4')
> 			? ENT_COMPAT | ENT_HTML5
> 			: ENT_COMPAT;
> 
> 		do
> 		{
> 			$str_compare = $str;
> 
> 			// Decode standard entities, avoiding false positives
> 			if (preg_match_all('/&[a-z]{2,}(?![a-z;])/i', $str, $matches))
> 			{
> 				if ( ! isset($_entities))
> 				{
> 					$_entities = array_map(
> 						'strtolower',
> 						is_php('5.3.4')
> 							? get_html_translation_table(HTML_ENTITIES, $flag, $charset)
> 							: get_html_translation_table(HTML_ENTITIES, $flag)
> 					);
> 
> 					// If we're not on PHP 5.4+, add the possibly dangerous HTML 5
> 					// entities to the array manually
> 					if ($flag === ENT_COMPAT)
> 					{
> 						$_entities[':'] = '&colon;';
> 						$_entities['('] = '&lpar;';
> 						$_entities[')'] = '&rpar;';
> 						$_entities["\n"] = '&newline;';
> 						$_entities["\t"] = '&tab;';
> 					}
> 				}
> 
> 				$replace = array();
> 				$matches = array_unique(array_map('strtolower', $matches[0]));
> 				foreach ($matches as &$match)
> 				{
> 					if (($char = array_search($match.';', $_entities, TRUE)) !== FALSE)
> 					{
> 						$replace[$match] = $char;
> 					}
> 				}
> 
> 				$str = str_ireplace(array_keys($replace), array_values($replace), $str);
> 			}
> 
> 			// Decode numeric & UTF16 two byte entities
> 			$str = html_entity_decode(
> 				preg_replace('/(&#(?:x0*[0-9a-f]{2,5}(?![0-9a-f;])|(?:0*\d{2,4}(?![0-9;]))))/iS', '$1;', $str),
> 				$flag,
> 				$charset
> 			);
> 		}
> 		while ($str_compare !== $str);
> 		return $str;
519c727
< 	 * Filename Security
---
> 	 * Sanitize Filename
521,522c729,730
< 	 * @param	string
< 	 * @param 	bool
---
> 	 * @param	string	$str		Input file name
> 	 * @param 	bool	$relative_path	Whether to preserve paths
527,559c735
< 		$bad = array(
< 			"../",
< 			"<!--",
< 			"-->",
< 			"<",
< 			">",
< 			"'",
< 			'"',
< 			'&',
< 			'$',
< 			'#',
< 			'{',
< 			'}',
< 			'[',
< 			']',
< 			'=',
< 			';',
< 			'?',
< 			"%20",
< 			"%22",
< 			"%3c",		// <
< 			"%253c",	// <
< 			"%3e",		// >
< 			"%0e",		// >
< 			"%28",		// (
< 			"%29",		// )
< 			"%2528",	// (
< 			"%26",		// &
< 			"%24",		// $
< 			"%3f",		// ?
< 			"%3b",		// ;
< 			"%3d"		// =
< 		);
---
> 		$bad = $this->filename_bad_chars;
568c744,772
< 		return stripslashes(str_replace($bad, '', $str));
---
> 
> 		do
> 		{
> 			$old = $str;
> 			$str = str_replace($bad, '', $str);
> 		}
> 		while ($old !== $str);
> 
> 		return stripslashes($str);
> 	}
> 
> 	// ----------------------------------------------------------------
> 
> 	/**
> 	 * Strip Image Tags
> 	 *
> 	 * @param	string	$str
> 	 * @return	string
> 	 */
> 	public function strip_image_tags($str)
> 	{
> 		return preg_replace(
> 			array(
> 				'#<img[\s/]+.*?src\s*=\s*(["\'])([^\\1]+?)\\1.*?\>#i',
> 				'#<img[\s/]+.*?src\s*=\s*?(([^\s"\'=<>`]+)).*?\>#i'
> 			),
> 			'\\2',
> 			$str
> 		);
576,577c780,781
< 	 * Callback function for xss_clean() to remove whitespace from
< 	 * things like j a v a s c r i p t
---
> 	 * Callback method for xss_clean() to remove whitespace from
> 	 * things like 'j a v a s c r i p t'.
579,580c783,785
< 	 * @param	type
< 	 * @return	type
---
> 	 * @used-by	CI_Security::xss_clean()
> 	 * @param	array	$matches
> 	 * @return	string
589,590c794,797
< 	/*
< 	 * Remove Evil HTML Attributes (like evenhandlers and style)
---
> 	/**
> 	 * Sanitize Naughty HTML
> 	 *
> 	 * Callback method for xss_clean() to remove naughty HTML elements.
592,602c799,801
< 	 * It removes the evil attribute and either:
< 	 * 	- Everything up until a space
< 	 *		For example, everything between the pipes:
< 	 *		<a |style=document.write('hello');alert('world');| class=link>
< 	 * 	- Everything inside the quotes
< 	 *		For example, everything between the pipes:
< 	 *		<a |style="document.write('hello'); alert('world');"| class="link">
< 	 *
< 	 * @param string $str The string to check
< 	 * @param boolean $is_image TRUE if this is an image
< 	 * @return string The string with the evil attributes removed
---
> 	 * @used-by	CI_Security::xss_clean()
> 	 * @param	array	$matches
> 	 * @return	string
604c803
< 	protected function _remove_evil_attributes($str, $is_image)
---
> 	protected function _sanitize_naughty_html($matches)
606,607c805,810
< 		// All javascript event handlers (e.g. onload, onclick, onmouseover), style, and xmlns
< 		$evil_attributes = array('on\w*', 'style', 'xmlns', 'formaction');
---
> 		static $naughty_tags    = array(
> 			'alert', 'prompt', 'confirm', 'applet', 'audio', 'basefont', 'base', 'behavior', 'bgsound',
> 			'blink', 'body', 'embed', 'expression', 'form', 'frameset', 'frame', 'head', 'html', 'ilayer',
> 			'iframe', 'input', 'button', 'select', 'isindex', 'layer', 'link', 'meta', 'keygen', 'object',
> 			'plaintext', 'style', 'script', 'textarea', 'title', 'math', 'video', 'svg', 'xml', 'xss'
> 		);
609c812,817
< 		if ($is_image === TRUE)
---
> 		static $evil_attributes = array(
> 			'on\w+', 'style', 'xmlns', 'formaction', 'form', 'xlink:href', 'FSCommand', 'seekSegmentTime'
> 		);
> 
> 		// First, escape unclosed tags
> 		if (empty($matches['closeTag']))
611,615c819
< 			/*
< 			 * Adobe Photoshop puts XML metadata into JFIF images, 
< 			 * including namespacing, so we have to allow this for images.
< 			 */
< 			unset($evil_attributes[array_search('xmlns', $evil_attributes)]);
---
> 			return '&lt;'.$matches[1];
616a821,830
> 		// Is the element that we caught naughty? If so, escape it
> 		elseif (in_array(strtolower($matches['tagName']), $naughty_tags, TRUE))
> 		{
> 			return '&lt;'.$matches[1].'&gt;';
> 		}
> 		// For other tags, see if their attributes are "evil" and strip those
> 		elseif (isset($matches['attributes']))
> 		{
> 			// We'll store the already fitlered attributes here
> 			$attributes = array();
618,620c832,837
< 		do {
< 			$count = 0;
< 			$attribs = array();
---
> 			// Attribute-catching pattern
> 			$attributes_pattern = '#'
> 				.'(?<name>[^\s\042\047>/=]+)' // attribute characters
> 				// optional attribute-value
> 				.'(?:\s*=(?<value>[^\s\042\047=><`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=><`]*)))' // attribute-value separator
> 				.'#i';
622,623c839,840
< 			// find occurrences of illegal attribute strings with quotes (042 and 047 are octal quotes)
< 			preg_match_all('/('.implode('|', $evil_attributes).')\s*=\s*(\042|\047)([^\\2]*?)(\\2)/is', $str, $matches, PREG_SET_ORDER);
---
> 			// Blacklist pattern for evil attribute names
> 			$is_evil_pattern = '#^('.implode('|', $evil_attributes).')$#i';
625c842,843
< 			foreach ($matches as $attr)
---
> 			// Each iteration filters a single attribute
> 			do
627,631c845,848
< 				$attribs[] = preg_quote($attr[0], '/');
< 			}
< 
< 			// find occurrences of illegal attribute strings without quotes
< 			preg_match_all('/('.implode('|', $evil_attributes).')\s*=\s*([^\s>]*)/is', $str, $matches, PREG_SET_ORDER);
---
> 				// Strip any non-alpha characters that may preceed an attribute.
> 				// Browsers often parse these incorrectly and that has been a
> 				// of numerous XSS issues we've had.
> 				$matches['attributes'] = preg_replace('#^[^a-z]+#i', '', $matches['attributes']);
633c850
< 			foreach ($matches as $attr)
---
> 				if ( ! preg_match($attributes_pattern, $matches['attributes'], $attribute, PREG_OFFSET_CAPTURE))
635c852,853
< 				$attribs[] = preg_quote($attr[0], '/');
---
> 					// No (valid) attribute found? Discard everything else inside the tag
> 					break;
638,639c856,861
< 			// replace illegal attribute strings that are inside an html tag
< 			if (count($attribs) > 0)
---
> 				if (
> 					// Is it indeed an "evil" attribute?
> 					preg_match($is_evil_pattern, $attribute['name'][0])
> 					// Or does it have an equals sign, but no value and not quoted? Strip that too!
> 					OR (trim($attribute['value'][0]) === '')
> 				)
641c863
< 				$str = preg_replace('/(<?)(\/?[^><]+?)([^A-Za-z<>\-])(.*?)('.implode('|', $attribs).')(.*?)([\s><]?)([><]*)/i', '$1$2 $4$6$7$8', $str, -1, $count);
---
> 					$attributes[] = 'xss=removed';
643,646c865,867
< 
< 		} while ($count);
< 
< 		return $str;
---
> 				else
> 				{
> 					$attributes[] = $attribute[0][0];
649,662c870,872
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Sanitize Naughty HTML
< 	 *
< 	 * Callback function for xss_clean() to remove naughty HTML elements
< 	 *
< 	 * @param	array
< 	 * @return	string
< 	 */
< 	protected function _sanitize_naughty_html($matches)
< 	{
< 		// encode opening brace
< 		$str = '&lt;'.$matches[1].$matches[2].$matches[3];
---
> 				$matches['attributes'] = substr($matches['attributes'], $attribute[0][1] + strlen($attribute[0][0]));
> 			}
> 			while ($matches['attributes'] !== '');
664,666c874,878
< 		// encode captured opening or closing brace to prevent recursive vectors
< 		$str .= str_replace(array('>', '<'), array('&gt;', '&lt;'),
< 							$matches[4]);
---
> 			$attributes = empty($attributes)
> 				? ''
> 				: ' '.implode(' ', $attributes);
> 			return '<'.$matches['slash'].$matches['tagName'].$attributes.'>';
> 		}
668c880
< 		return $str;
---
> 		return $matches[0];
676c888,889
< 	 * Callback function for xss_clean() to sanitize links
---
> 	 * Callback method for xss_clean() to sanitize links.
> 	 *
679c892
< 	 * PHP 5.2+ on link-heavy strings
---
> 	 * PHP 5.2+ on link-heavy strings.
681c894,895
< 	 * @param	array
---
> 	 * @used-by	CI_Security::xss_clean()
> 	 * @param	array	$match
689c903
< 				'#href=.*?(alert\(|alert&\#40;|javascript\:|livescript\:|mocha\:|charset\=|window\.|document\.|\.cookie|<script|<xss|data\s*:)#si',
---
> 				'#href=.*?(?:(?:alert|prompt|confirm)(?:\(|&\#40;)|javascript:|livescript:|mocha:|charset=|window\.|document\.|\.cookie|<script|<xss|data\s*:)#si',
691c905
< 				$this->_filter_attributes(str_replace(array('<', '>'), '', $match[1]))
---
> 				$this->_filter_attributes($match[1])
702c916,917
< 	 * Callback function for xss_clean() to sanitize image tags
---
> 	 * Callback method for xss_clean() to sanitize image tags.
> 	 *
705c920
< 	 * PHP 5.2+ on image tag heavy strings
---
> 	 * PHP 5.2+ on image tag heavy strings.
707c922,923
< 	 * @param	array
---
> 	 * @used-by	CI_Security::xss_clean()
> 	 * @param	array	$match
715c931
< 				'#src=.*?(alert\(|alert&\#40;|javascript\:|livescript\:|mocha\:|charset\=|window\.|document\.|\.cookie|<script|<xss|base64\s*,)#si',
---
> 				'#src=.*?(?:(?:alert|prompt|confirm|eval)(?:\(|&\#40;)|javascript:|livescript:|mocha:|charset=|window\.|document\.|\.cookie|<script|<xss|base64\s*,)#si',
717c933
< 				$this->_filter_attributes(str_replace(array('<', '>'), '', $match[1]))
---
> 				$this->_filter_attributes($match[1])
728,730c944,945
< 	 * Used as a callback for XSS Clean
< 	 *
< 	 * @param	array
---
> 	 * @used-by	CI_Security::xss_clean()
> 	 * @param	array	$match
743c958
< 	 * Filters tag attributes for consistency and safety
---
> 	 * Filters tag attributes for consistency and safety.
745c960,962
< 	 * @param	string
---
> 	 * @used-by	CI_Security::_js_img_removal()
> 	 * @used-by	CI_Security::_js_link_removal()
> 	 * @param	string	$str
756c972
< 				$out .= preg_replace("#/\*.*?\*/#s", '', $match);
---
> 				$out .= preg_replace('#/\*.*?\*/#s', '', $match);
768,770c984,985
< 	 * Used as a callback for XSS Clean
< 	 *
< 	 * @param	array
---
> 	 * @used-by	CI_Security::xss_clean()
> 	 * @param	array	$match
775,793c990
< 		return $this->entity_decode($match[0], strtoupper(config_item('charset')));
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Validate URL entities
< 	 *
< 	 * Called by xss_clean()
< 	 *
< 	 * @param 	string
< 	 * @return 	string
< 	 */
< 	protected function _validate_entities($str)
< 	{
< 		/*
< 		 * Protect GET variables in URLs
< 		 */
< 
---
> 		// Protect GET variables in URLs
794a992
> 		$match = preg_replace('|\&([a-z\_0-9\-]+)\=([a-z\_0-9\-/]+)|i', $this->xss_hash().'\\1=\\2', $match[0]);
796,820c994,999
< 		$str = preg_replace('|\&([a-z\_0-9\-]+)\=([a-z\_0-9\-]+)|i', $this->xss_hash()."\\1=\\2", $str);
< 
< 		/*
< 		 * Validate standard character entities
< 		 *
< 		 * Add a semicolon if missing.  We do this to enable
< 		 * the conversion of entities to ASCII later.
< 		 *
< 		 */
< 		$str = preg_replace('#(&\#?[0-9a-z]{2,})([\x00-\x20])*;?#i', "\\1;\\2", $str);
< 
< 		/*
< 		 * Validate UTF16 two byte encoding (x00)
< 		 *
< 		 * Just as above, adds a semicolon if missing.
< 		 *
< 		 */
< 		$str = preg_replace('#(&\#x?)([0-9A-F]+);?#i',"\\1\\2;",$str);
< 
< 		/*
< 		 * Un-Protect GET variables in URLs
< 		 */
< 		$str = str_replace($this->xss_hash(), '&', $str);
< 
< 		return $str;
---
> 		// Decode, then un-protect URL GET vars
> 		return str_replace(
> 			$this->xss_hash(),
> 			'&',
> 			$this->entity_decode($match, $this->charset)
> 		);
823c1002
< 	// ----------------------------------------------------------------------
---
> 	// --------------------------------------------------------------------
828,829c1007
< 	 * A utility function for xss_clean()
< 	 *
---
> 	 * @used-by	CI_Security::xss_clean()
848c1026
< 	 * Set Cross Site Request Forgery Protection Cookie
---
> 	 * Set CSRF Hash and Cookie
854c1032
< 		if ($this->_csrf_hash == '')
---
> 		if ($this->_csrf_hash === NULL)
856c1034
< 			// If the cookie exists we will use it's value.
---
> 			// If the cookie exists we will use its value.
860,861c1038,1039
< 			if (isset($_COOKIE[$this->_csrf_cookie_name]) &&
< 				preg_match('#^[0-9a-f]{32}$#iS', $_COOKIE[$this->_csrf_cookie_name]) === 1)
---
> 			if (isset($_COOKIE[$this->_csrf_cookie_name]) && is_string($_COOKIE[$this->_csrf_cookie_name])
> 				&& preg_match('#^[0-9a-f]{32}$#iS', $_COOKIE[$this->_csrf_cookie_name]) === 1)
866c1044,1047
< 			return $this->_csrf_hash = md5(uniqid(rand(), TRUE));
---
> 			$rand = $this->get_random_bytes(16);
> 			$this->_csrf_hash = ($rand === FALSE)
> 				? md5(uniqid(mt_rand(), TRUE))
> 				: bin2hex($rand);
873,875d1053
< 
< /* End of file Security.php */
< /* Location: ./system/libraries/Security.php */
diff -rBwi --ignore-file-name-case pos-prod/system/core/URI.php opensourcepos/system/core/URI.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/uri.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/uri.html
35d56
< 	 * @access public
37c58,59
< 	var	$keyval			= array();
---
> 	public $keyval = array();
> 
42d63
< 	 * @access public
44c65,66
< 	var $uri_string;
---
> 	public $uri_string = '';
> 
47a70,71
> 	 * Starts at 1 instead of 0.
> 	 *
49d72
< 	 * @access public
51c74,75
< 	var $segments		= array();
---
> 	public $segments = array();
> 
53,54c77,79
< 	 * Re-indexed list of uri segments
< 	 * Starts at 1 instead of 0
---
> 	 * List of routed URI segments
> 	 *
> 	 * Starts at 1 instead of 0.
57d81
< 	 * @access public
59c83
< 	var $rsegments		= array();
---
> 	public $rsegments = array();
62c86
< 	 * Constructor
---
> 	 * Permitted URI chars
64,66c88
< 	 * Simply globalizes the $RTR object.  The front
< 	 * loads the Router class early on so it's not available
< 	 * normally as other classes are.
---
> 	 * PCRE character group allowed in URI segments
68c90
< 	 * @access	public
---
> 	 * @var	string
70,77c92
< 	function __construct()
< 	{
< 		$this->config =& load_class('Config', 'core');
< 		log_message('debug', "URI Class Initialized");
< 	}
< 
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_permitted_uri_chars;
80c95
< 	 * Get the URI String
---
> 	 * Class constructor
82,83c97
< 	 * @access	private
< 	 * @return	string
---
> 	 * @return	void
85,90c99
< 	function _fetch_uri_string()
< 	{
< 		if (strtoupper($this->config->item('uri_protocol')) == 'AUTO')
< 		{
< 			// Is the request coming from the command line?
< 			if (php_sapi_name() == 'cli' or defined('STDIN'))
---
> 	public function __construct()
92,94c101
< 				$this->_set_uri_string($this->_parse_cli_args());
< 				return;
< 			}
---
> 		$this->config =& load_class('Config', 'core');
96,97c103,105
< 			// Let's try the REQUEST_URI first, this will work in most situations
< 			if ($uri = $this->_detect_uri())
---
> 		// If query strings are enabled, we don't need to parse any segments.
> 		// However, they don't make sense under CLI.
> 		if (is_cli() OR $this->config->item('enable_query_strings') !== TRUE)
99,101c107
< 				$this->_set_uri_string($uri);
< 				return;
< 			}
---
> 			$this->_permitted_uri_chars = $this->config->item('permitted_uri_chars');
103,106c109,110
< 			// Is there a PATH_INFO variable?
< 			// Note: some servers seem to have trouble with getenv() so we'll test it two ways
< 			$path = (isset($_SERVER['PATH_INFO'])) ? $_SERVER['PATH_INFO'] : @getenv('PATH_INFO');
< 			if (trim($path, '/') != '' && $path != "/".SELF)
---
> 			// If it's a CLI request, ignore the configuration
> 			if (is_cli())
108,109c112
< 				$this->_set_uri_string($path);
< 				return;
---
> 				$uri = $this->_parse_argv();
111,114c114
< 
< 			// No PATH_INFO?... What about QUERY_STRING?
< 			$path =  (isset($_SERVER['QUERY_STRING'])) ? $_SERVER['QUERY_STRING'] : @getenv('QUERY_STRING');
< 			if (trim($path, '/') != '')
---
> 			else
116,118c116,117
< 				$this->_set_uri_string($path);
< 				return;
< 			}
---
> 				$protocol = $this->config->item('uri_protocol');
> 				empty($protocol) && $protocol = 'REQUEST_URI';
120,121c119
< 			// As a last ditch effort lets try using the $_GET array
< 			if (is_array($_GET) && count($_GET) == 1 && trim(key($_GET), '/') != '')
---
> 				switch ($protocol)
123,124c121,133
< 				$this->_set_uri_string(key($_GET));
< 				return;
---
> 					case 'AUTO': // For BC purposes only
> 					case 'REQUEST_URI':
> 						$uri = $this->_parse_request_uri();
> 						break;
> 					case 'QUERY_STRING':
> 						$uri = $this->_parse_query_string();
> 						break;
> 					case 'PATH_INFO':
> 					default:
> 						$uri = isset($_SERVER[$protocol])
> 							? $_SERVER[$protocol]
> 							: $this->_parse_request_uri();
> 						break;
126,129d134
< 
< 			// We've exhausted all our options...
< 			$this->uri_string = '';
< 			return;
132,142c137
< 		$uri = strtoupper($this->config->item('uri_protocol'));
< 
< 		if ($uri == 'REQUEST_URI')
< 		{
< 			$this->_set_uri_string($this->_detect_uri());
< 			return;
< 		}
< 		elseif ($uri == 'CLI')
< 		{
< 			$this->_set_uri_string($this->_parse_cli_args());
< 			return;
---
> 			$this->_set_uri_string($uri);
145,146c140
< 		$path = (isset($_SERVER[$uri])) ? $_SERVER[$uri] : @getenv($uri);
< 		$this->_set_uri_string($path);
---
> 		log_message('info', 'URI Class Initialized');
152c146
< 	 * Set the URI String
---
> 	 * Set URI String
154,156c148,149
< 	 * @access	public
< 	 * @param 	string
< 	 * @return	string
---
> 	 * @param 	string	$str
> 	 * @return	void
158c151
< 	function _set_uri_string($str)
---
> 	protected function _set_uri_string($str)
160,161c153,154
< 		// Filter out control characters
< 		$str = remove_invisible_characters($str, FALSE);
---
> 		// Filter out control characters and trim slashes
> 		$this->uri_string = trim(remove_invisible_characters($str, FALSE), '/');
163,164c156,184
< 		// If the URI contains only a slash we'll kill it
< 		$this->uri_string = ($str == '/') ? '' : $str;
---
> 		if ($this->uri_string !== '')
> 		{
> 			// Remove the URL suffix, if present
> 			if (($suffix = (string) $this->config->item('url_suffix')) !== '')
> 			{
> 				$slen = strlen($suffix);
> 
> 				if (substr($this->uri_string, -$slen) === $suffix)
> 				{
> 					$this->uri_string = substr($this->uri_string, 0, -$slen);
> 				}
> 			}
> 
> 			$this->segments[0] = NULL;
> 			// Populate the segments array
> 			foreach (explode('/', trim($this->uri_string, '/')) as $val)
> 			{
> 				$val = trim($val);
> 				// Filter segments for security
> 				$this->filter_uri($val);
> 
> 				if ($val !== '')
> 				{
> 					$this->segments[] = $val;
> 				}
> 			}
> 
> 			unset($this->segments[0]);
> 		}
170c190
< 	 * Detects the URI
---
> 	 * Parse REQUEST_URI
172,173c192,193
< 	 * This function will detect the URI automatically and fix the query string
< 	 * if necessary.
---
> 	 * Will parse REQUEST_URI and automatically detect the URI from it,
> 	 * while fixing the query string if necessary.
175d194
< 	 * @access	private
178c197
< 	private function _detect_uri()
---
> 	protected function _parse_request_uri()
180c199
< 		if ( ! isset($_SERVER['REQUEST_URI']) OR ! isset($_SERVER['SCRIPT_NAME']))
---
> 		if ( ! isset($_SERVER['REQUEST_URI'], $_SERVER['SCRIPT_NAME']))
185c204,211
< 		$uri = $_SERVER['REQUEST_URI'];
---
> 		// parse_url() returns false if no host is present, but the path or query string
> 		// contains a colon followed by a number
> 		$uri = parse_url('http://dummy'.$_SERVER['REQUEST_URI']);
> 		$query = isset($uri['query']) ? $uri['query'] : '';
> 		$uri = isset($uri['path']) ? $uri['path'] : '';
> 
> 		if (isset($_SERVER['SCRIPT_NAME'][0]))
> 		{
188c214
< 			$uri = substr($uri, strlen($_SERVER['SCRIPT_NAME']));
---
> 				$uri = (string) substr($uri, strlen($_SERVER['SCRIPT_NAME']));
192c218,219
< 			$uri = substr($uri, strlen(dirname($_SERVER['SCRIPT_NAME'])));
---
> 				$uri = (string) substr($uri, strlen(dirname($_SERVER['SCRIPT_NAME'])));
> 			}
197c224
< 		if (strncmp($uri, '?/', 2) === 0)
---
> 		if (trim($uri, '/') === '' && strncmp($query, '/', 1) === 0)
199,206c226,228
< 			$uri = substr($uri, 2);
< 		}
< 		$parts = preg_split('#\?#i', $uri, 2);
< 		$uri = $parts[0];
< 		if (isset($parts[1]))
< 		{
< 			$_SERVER['QUERY_STRING'] = $parts[1];
< 			parse_str($_SERVER['QUERY_STRING'], $_GET);
---
> 			$query = explode('?', $query, 2);
> 			$uri = $query[0];
> 			$_SERVER['QUERY_STRING'] = isset($query[1]) ? $query[1] : '';
210,211c232
< 			$_SERVER['QUERY_STRING'] = '';
< 			$_GET = array();
---
> 			$_SERVER['QUERY_STRING'] = $query;
214c235,237
< 		if ($uri == '/' || empty($uri))
---
> 		parse_str($_SERVER['QUERY_STRING'], $_GET);
> 
> 		if ($uri === '/' OR $uri === '')
219,220d241
< 		$uri = parse_url($uri, PHP_URL_PATH);
< 
222c243
< 		return str_replace(array('//', '../'), '/', trim($uri, '/'));
---
> 		return $this->_remove_relative_directory($uri);
228c249
< 	 * Parse cli arguments
---
> 	 * Parse QUERY_STRING
230c251
< 	 * Take each command line argument and assume it is a URI segment.
---
> 	 * Will parse QUERY_STRING and automatically detect the URI from it.
232d252
< 	 * @access	private
235c255
< 	private function _parse_cli_args()
---
> 	protected function _parse_query_string()
237,240c257
< 		$args = array_slice($_SERVER['argv'], 1);
< 
< 		return $args ? '/' . implode('/', $args) : '';
< 	}
---
> 		$uri = isset($_SERVER['QUERY_STRING']) ? $_SERVER['QUERY_STRING'] : @getenv('QUERY_STRING');
242,251c259
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Filter segments for malicious characters
< 	 *
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function _filter_uri($str)
---
> 		if (trim($uri, '/') === '')
253,259c261
< 		if ($str != '' && $this->config->item('permitted_uri_chars') != '' && $this->config->item('enable_query_strings') == FALSE)
< 		{
< 			// preg_quote() in PHP 5.3 escapes -, so the str_replace() and addition of - to preg_quote() is to maintain backwards
< 			// compatibility as many are unaware of how characters in the permitted_uri_chars will be parsed as a regex pattern
< 			if ( ! preg_match("|^[".str_replace(array('\\-', '\-'), '-', preg_quote($this->config->item('permitted_uri_chars'), '-'))."]+$|i", $str))
< 			{
< 				show_error('The URI you submitted has disallowed characters.', 400);
---
> 			return '';
260a263,267
> 		elseif (strncmp($uri, '/', 1) === 0)
> 		{
> 			$uri = explode('?', $uri, 2);
> 			$_SERVER['QUERY_STRING'] = isset($uri[1]) ? $uri[1] : '';
> 			$uri = $uri[0];
263,265c270
< 		// Convert programatic characters to entities
< 		$bad	= array('$',		'(',		')',		'%28',		'%29');
< 		$good	= array('&#36;',	'&#40;',	'&#41;',	'&#40;',	'&#41;');
---
> 		parse_str($_SERVER['QUERY_STRING'], $_GET);
267c272
< 		return str_replace($bad, $good, $str);
---
> 		return $this->_remove_relative_directory($uri);
273c278
< 	 * Remove the suffix from the URL if needed
---
> 	 * Parse CLI arguments
275,276c280,282
< 	 * @access	private
< 	 * @return	void
---
> 	 * Take each command line argument and assume it is a URI segment.
> 	 *
> 	 * @return	string
278,280c284
< 	function _remove_url_suffix()
< 	{
< 		if  ($this->config->item('url_suffix') != "")
---
> 	protected function _parse_argv()
282,283c286,287
< 			$this->uri_string = preg_replace("|".preg_quote($this->config->item('url_suffix'))."$|", "", $this->uri_string);
< 		}
---
> 		$args = array_slice($_SERVER['argv'], 1);
> 		return $args ? implode('/', $args) : '';
289,290c293
< 	 * Explode the URI Segments. The individual segments will
< 	 * be stored in the $this->segments array.
---
> 	 * Remove relative directory (../) and multi slashes (///)
292,293c295,298
< 	 * @access	private
< 	 * @return	void
---
> 	 * Do some final cleaning of the URI and return it, currently only used in self::_parse_request_uri()
> 	 *
> 	 * @param	string	$uri
> 	 * @return	string
295c300
< 	function _explode_segments()
---
> 	protected function _remove_relative_directory($uri)
297c302,304
< 		foreach (explode("/", preg_replace("|/*(.+?)/*$|", "\\1", $this->uri_string)) as $val)
---
> 		$uris = array();
> 		$tok = strtok($uri, '/');
> 		while ($tok !== FALSE)
299,302c306
< 			// Filter segments for security
< 			$val = trim($this->_filter_uri($val));
< 
< 			if ($val != '')
---
> 			if (( ! empty($tok) OR $tok === '0') && $tok !== '..')
304c308
< 				$this->segments[] = $val;
---
> 				$uris[] = $tok;
305a310
> 			$tok = strtok('/');
306a312,313
> 
> 		return implode('/', $uris);
311c319
< 	 * Re-index Segments
---
> 	 * Filter URI
313,316c321
< 	 * This function re-indexes the $this->segment array so that it
< 	 * starts at 1 rather than 0.  Doing so makes it simpler to
< 	 * use functions like $this->uri->segment(n) since there is
< 	 * a 1:1 relationship between the segment array and the actual segments.
---
> 	 * Filters segments for malicious characters.
318c323
< 	 * @access	private
---
> 	 * @param	string	$str
321c326
< 	function _reindex_segments()
---
> 	public function filter_uri(&$str)
323,326c328,331
< 		array_unshift($this->segments, NULL);
< 		array_unshift($this->rsegments, NULL);
< 		unset($this->segments[0]);
< 		unset($this->rsegments[0]);
---
> 		if ( ! empty($str) && ! empty($this->_permitted_uri_chars) && ! preg_match('/^['.$this->_permitted_uri_chars.']+$/i'.(UTF8_ENABLED ? 'u' : ''), $str))
> 		{
> 			show_error('The URI you submitted has disallowed characters.', 400);
> 		}
332c337
< 	 * Fetch a URI Segment
---
> 	 * Fetch URI Segment
334,339c339,342
< 	 * This function returns the URI segment based on the number provided.
< 	 *
< 	 * @access	public
< 	 * @param	integer
< 	 * @param	bool
< 	 * @return	string
---
> 	 * @see		CI_URI::$segments
> 	 * @param	int		$n		Index
> 	 * @param	mixed		$no_result	What to return if the segment index is not found
> 	 * @return	mixed
341c344
< 	function segment($n, $no_result = FALSE)
---
> 	public function segment($n, $no_result = NULL)
343c346
< 		return ( ! isset($this->segments[$n])) ? $no_result : $this->segments[$n];
---
> 		return isset($this->segments[$n]) ? $this->segments[$n] : $no_result;
349c352
< 	 * Fetch a URI "routed" Segment
---
> 	 * Fetch URI "routed" Segment
351,353c354,356
< 	 * This function returns the re-routed URI segment (assuming routing rules are used)
< 	 * based on the number provided.  If there is no routing this function returns the
< 	 * same result as $this->segment()
---
> 	 * Returns the re-routed URI segment (assuming routing rules are used)
> 	 * based on the index provided. If there is no routing, will return
> 	 * the same result as CI_URI::segment().
355,358c358,362
< 	 * @access	public
< 	 * @param	integer
< 	 * @param	bool
< 	 * @return	string
---
> 	 * @see		CI_URI::$rsegments
> 	 * @see		CI_URI::segment()
> 	 * @param	int		$n		Index
> 	 * @param	mixed		$no_result	What to return if the segment index is not found
> 	 * @return	mixed
360c364
< 	function rsegment($n, $no_result = FALSE)
---
> 	public function rsegment($n, $no_result = NULL)
362c366
< 		return ( ! isset($this->rsegments[$n])) ? $no_result : $this->rsegments[$n];
---
> 		return isset($this->rsegments[$n]) ? $this->rsegments[$n] : $no_result;
368c372
< 	 * Generate a key value pair from the URI string
---
> 	 * URI to assoc
370,371c374,375
< 	 * This function generates and associative array of URI data starting
< 	 * at the supplied segment. For example, if this is your URI:
---
> 	 * Generates an associative array of URI data starting at the supplied
> 	 * segment index. For example, if this is your URI:
375c379
< 	 * You can use this function to generate an array with this prototype:
---
> 	 * You can use this method to generate an array with this prototype:
383,385c387,388
< 	 * @access	public
< 	 * @param	integer	the starting segment number
< 	 * @param	array	an array of default values
---
> 	 * @param	int	$n		Index (default: 3)
> 	 * @param	array	$default	Default values
388c391
< 	function uri_to_assoc($n = 3, $default = array())
---
> 	public function uri_to_assoc($n = 3, $default = array())
391a395,397
> 
> 	// --------------------------------------------------------------------
> 
393c399
< 	 * Identical to above only it uses the re-routed segment array
---
> 	 * Routed URI to assoc
395,398c401,402
< 	 * @access 	public
< 	 * @param 	integer	the starting segment number
< 	 * @param 	array	an array of default values
< 	 * @return 	array
---
> 	 * Identical to CI_URI::uri_to_assoc(), only it uses the re-routed
> 	 * segment array.
399a404,407
> 	 * @see		CI_URI::uri_to_assoc()
> 	 * @param 	int	$n		Index (default: 3)
> 	 * @param 	array	$default	Default values
> 	 * @return 	array
401c409
< 	function ruri_to_assoc($n = 3, $default = array())
---
> 	public function ruri_to_assoc($n = 3, $default = array())
409c417,419
< 	 * Generate a key value pair from the URI string or Re-routed URI string
---
> 	 * Internal URI-to-assoc
> 	 *
> 	 * Generates a key/value pair from the URI string or re-routed URI string.
411,414c421,425
< 	 * @access	private
< 	 * @param	integer	the starting segment number
< 	 * @param	array	an array of default values
< 	 * @param	string	which array we should use
---
> 	 * @used-by	CI_URI::uri_to_assoc()
> 	 * @used-by	CI_URI::ruri_to_assoc()
> 	 * @param	int	$n		Index (default: 3)
> 	 * @param	array	$default	Default values
> 	 * @param	string	$which		Array name ('segment' or 'rsegment')
417c428
< 	function _uri_to_assoc($n = 3, $default = array(), $which = 'segment')
---
> 	protected function _uri_to_assoc($n = 3, $default = array(), $which = 'segment')
419,429d429
< 		if ($which == 'segment')
< 		{
< 			$total_segments = 'total_segments';
< 			$segment_array = 'segment_array';
< 		}
< 		else
< 		{
< 			$total_segments = 'total_rsegments';
< 			$segment_array = 'rsegment_array';
< 		}
< 
435c435
< 		if (isset($this->keyval[$n]))
---
> 		if (isset($this->keyval[$which], $this->keyval[$which][$n]))
437c437
< 			return $this->keyval[$n];
---
> 			return $this->keyval[$which][$n];
440,445c440,441
< 		if ($this->$total_segments() < $n)
< 		{
< 			if (count($default) == 0)
< 			{
< 				return array();
< 			}
---
> 		$total_segments = "total_{$which}s";
> 		$segment_array = "{$which}_array";
447,448c443
< 			$retval = array();
< 			foreach ($default as $val)
---
> 		if ($this->$total_segments() < $n)
450,452c445,447
< 				$retval[$val] = FALSE;
< 			}
< 			return $retval;
---
> 			return (count($default) === 0)
> 				? array()
> 				: array_fill_keys($default, NULL);
468c462
< 				$retval[$seg] = FALSE;
---
> 				$retval[$seg] = NULL;
481c475
< 					$retval[$val] = FALSE;
---
> 					$retval[$val] = NULL;
487c481,482
< 		$this->keyval[$n] = $retval;
---
> 		isset($this->keyval[$which]) OR $this->keyval[$which] = array();
> 		$this->keyval[$which][$n] = $retval;
494c489
< 	 * Generate a URI string from an associative array
---
> 	 * Assoc to URI
495a491
> 	 * Generates a URI string from an associative array.
497,499c493,494
< 	 * @access	public
< 	 * @param	array	an associative array of key/values
< 	 * @return	array
---
> 	 * @param	array	$array	Input array of key/value pairs
> 	 * @return	string	URI string
501c496
< 	function assoc_to_uri($array)
---
> 	public function assoc_to_uri($array)
516c511,513
< 	 * Fetch a URI Segment and add a trailing slash
---
> 	 * Slash segment
> 	 *
> 	 * Fetches an URI segment with a slash.
518,520c515,516
< 	 * @access	public
< 	 * @param	integer
< 	 * @param	string
---
> 	 * @param	int	$n	Index
> 	 * @param	string	$where	Where to add the slash ('trailing' or 'leading')
523c519
< 	function slash_segment($n, $where = 'trailing')
---
> 	public function slash_segment($n, $where = 'trailing')
531c527
< 	 * Fetch a URI Segment and add a trailing slash
---
> 	 * Slash routed segment
533,535c529,532
< 	 * @access	public
< 	 * @param	integer
< 	 * @param	string
---
> 	 * Fetches an URI routed segment with a slash.
> 	 *
> 	 * @param	int	$n	Index
> 	 * @param	string	$where	Where to add the slash ('trailing' or 'leading')
538c535
< 	function slash_rsegment($n, $where = 'trailing')
---
> 	public function slash_rsegment($n, $where = 'trailing')
546c543,545
< 	 * Fetch a URI Segment and add a trailing slash - helper function
---
> 	 * Internal Slash segment
> 	 *
> 	 * Fetches an URI Segment and adds a slash to it.
548,551c547,552
< 	 * @access	private
< 	 * @param	integer
< 	 * @param	string
< 	 * @param	string
---
> 	 * @used-by	CI_URI::slash_segment()
> 	 * @used-by	CI_URI::slash_rsegment()
> 	 *
> 	 * @param	int	$n	Index
> 	 * @param	string	$where	Where to add the slash ('trailing' or 'leading')
> 	 * @param	string	$which	Array name ('segment' or 'rsegment')
554c555
< 	function _slash_segment($n, $where = 'trailing', $which = 'segment')
---
> 	protected function _slash_segment($n, $where = 'trailing', $which = 'segment')
556,557c557
< 		$leading	= '/';
< 		$trailing	= '/';
---
> 		$leading = $trailing = '/';
559c559
< 		if ($where == 'trailing')
---
> 		if ($where === 'trailing')
563c563
< 		elseif ($where == 'leading')
---
> 		elseif ($where === 'leading')
576,577c576
< 	 * @access	public
< 	 * @return	array
---
> 	 * @return	array	CI_URI::$segments
579c578
< 	function segment_array()
---
> 	public function segment_array()
589,590c588
< 	 * @access	public
< 	 * @return	array
---
> 	 * @return	array	CI_URI::$rsegments
592c590
< 	function rsegment_array()
---
> 	public function rsegment_array()
602,603c600
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
605c602
< 	function total_segments()
---
> 	public function total_segments()
615,616c612
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
618c614
< 	function total_rsegments()
---
> 	public function total_rsegments()
626c622
< 	 * Fetch the entire URI string
---
> 	 * Fetch URI string
628,629c624
< 	 * @access	public
< 	 * @return	string
---
> 	 * @return	string	CI_URI::$uri_string
631c626
< 	function uri_string()
---
> 	public function uri_string()
640c634
< 	 * Fetch the entire Re-routed URI string
---
> 	 * Fetch Re-routed URI string
642d635
< 	 * @access	public
645c638
< 	function ruri_string()
---
> 	public function ruri_string()
647c640
< 		return '/'.implode('/', $this->rsegment_array());
---
> 		return ltrim(load_class('Router', 'core')->directory, '/').implode('/', $this->rsegments);
651,654d643
< // END URI Class
< 
< /* End of file URI.php */
< /* Location: ./system/core/URI.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/core/Utf8.php opensourcepos/system/core/Utf8.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 2.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/utf8.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/utf8.html
32c54
< 	 * Constructor
---
> 	 * Class constructor
34c56
< 	 * Determines if UTF-8 support is to be enabled
---
> 	 * Determines if UTF-8 support is to be enabled.
35a58
> 	 * @return	void
37c60
< 	function __construct()
---
> 	public function __construct()
39,42d61
< 		log_message('debug', "Utf8 Class Initialized");
< 
< 		global $CFG;
< 
44,47c63,65
< 			preg_match('/./u', 'é') === 1					// PCRE must support UTF-8
< 			AND function_exists('iconv')					// iconv must be installed
< 			AND ini_get('mbstring.func_overload') != 1		// Multibyte string function overloading cannot be enabled
< 			AND $CFG->item('charset') == 'UTF-8'			// Application charset must be UTF-8
---
> 			defined('PREG_BAD_UTF8_ERROR')				// PCRE must support UTF-8
> 			&& (ICONV_ENABLED === TRUE OR MB_ENABLED === TRUE)	// iconv or mbstring must be installed
> 			&& strtoupper(config_item('charset')) === 'UTF-8'	// Application charset must be UTF-8
50,51d67
< 			log_message('debug', "UTF-8 Support Enabled");
< 
53,60c69
< 
< 			// set internal encoding for multibyte string functions if necessary
< 			// and set a flag so we don't have to repeatedly use extension_loaded()
< 			// or function_exists()
< 			if (extension_loaded('mbstring'))
< 			{
< 				define('MB_ENABLED', TRUE);
< 				mb_internal_encoding('UTF-8');
---
> 			log_message('debug', 'UTF-8 Support Enabled');
64,69d72
< 				define('MB_ENABLED', FALSE);
< 			}
< 		}
< 		else
< 		{
< 			log_message('debug', "UTF-8 Support Disabled");
70a74
> 			log_message('debug', 'UTF-8 Support Disabled');
71a76,77
> 
> 		log_message('info', 'Utf8 Class Initialized');
79c85
< 	 * Ensures strings are UTF-8
---
> 	 * Ensures strings contain only valid UTF-8 characters.
81,82c87
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$str	String to clean
85c90
< 	function clean_string($str)
---
> 	public function clean_string($str)
87c92,98
< 		if ($this->_is_ascii($str) === FALSE)
---
> 		if ($this->is_ascii($str) === FALSE)
> 		{
> 			if (MB_ENABLED)
> 			{
> 				$str = mb_convert_encoding($str, 'UTF-8', 'UTF-8');
> 			}
> 			elseif (ICONV_ENABLED)
90a102
> 		}
102c114
< 	 * problems in XML
---
> 	 * problems in XML.
104,105c116
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$str	String to clean
108c119
< 	function safe_ascii_for_xml($str)
---
> 	public function safe_ascii_for_xml($str)
118c129
< 	 * Attempts to convert a string to UTF-8
---
> 	 * Attempts to convert a string to UTF-8.
120,123c131,133
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string	- input encoding
< 	 * @return	string
---
> 	 * @param	string	$str		Input string
> 	 * @param	string	$encoding	Input encoding
> 	 * @return	string	$str encoded in UTF-8 or FALSE on failure
125,127c135
< 	function convert_to_utf8($str, $encoding)
< 	{
< 		if (function_exists('iconv'))
---
> 	public function convert_to_utf8($str, $encoding)
129,131c137
< 			$str = @iconv($encoding, 'UTF-8', $str);
< 		}
< 		elseif (function_exists('mb_convert_encoding'))
---
> 		if (MB_ENABLED)
133c139
< 			$str = @mb_convert_encoding($str, 'UTF-8', $encoding);
---
> 			return mb_convert_encoding($str, 'UTF-8', $encoding);
135c141
< 		else
---
> 		elseif (ICONV_ENABLED)
137c143
< 			return FALSE;
---
> 			return @iconv($encoding, 'UTF-8', $str);
140c146
< 		return $str;
---
> 		return FALSE;
148c154
< 	 * Tests if a string is standard 7-bit ASCII or not
---
> 	 * Tests if a string is standard 7-bit ASCII or not.
150,151c156
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$str	String to check
154c159
< 	function _is_ascii($str)
---
> 	public function is_ascii($str)
156c161
< 		return (preg_match('/[^\x00-\x7F]/S', $str) == 0);
---
> 		return (preg_match('/[^\x00-\x7F]/S', $str) === 0);
159,160d163
< 	// --------------------------------------------------------------------
< 
162,165d164
< // End Utf8 Class
< 
< /* End of file Utf8.php */
< /* Location: ./system/core/Utf8.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/DB.php opensourcepos/system/database/DB.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,25c44,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
<  * @param 	string
<  * @param 	bool	Determines if active record should be used or not
---
>  * @author	EllisLab Dev Team
>  * @link	https://codeigniter.com/user_guide/database/
>  *
>  * @param 	string|string[]	$params
>  * @param 	bool		$query_builder_override
>  *				Determines if query builder should be used or not
27c51
< function &DB($params = '', $active_record_override = NULL)
---
> function &DB($params = '', $query_builder_override = NULL)
30c54
< 	if (is_string($params) AND strpos($params, '://') === FALSE)
---
> 	if (is_string($params) && strpos($params, '://') === FALSE)
33,35c57,58
< 		if ( ! defined('ENVIRONMENT') OR ! file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/database.php'))
< 		{
< 			if ( ! file_exists($file_path = APPPATH.'config/database.php'))
---
> 		if ( ! file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/database.php')
> 			&& ! file_exists($file_path = APPPATH.'config/database.php'))
39d61
< 		}
43c65,85
< 		if ( ! isset($db) OR count($db) == 0)
---
> 		// Make packages contain database config files,
> 		// given that the controller instance already exists
> 		if (class_exists('CI_Controller', FALSE))
> 		{
> 			foreach (get_instance()->load->get_package_paths() as $path)
> 			{
> 				if ($path !== APPPATH)
> 				{
> 					if (file_exists($file_path = $path.'config/'.ENVIRONMENT.'/database.php'))
> 					{
> 						include($file_path);
> 					}
> 					elseif (file_exists($file_path = $path.'config/database.php'))
> 					{
> 						include($file_path);
> 					}
> 				}
> 			}
> 		}
> 
> 		if ( ! isset($db) OR count($db) === 0)
48c90
< 		if ($params != '')
---
> 		if ($params !== '')
53c95
< 		if ( ! isset($active_group) OR ! isset($db[$active_group]))
---
> 		if ( ! isset($active_group))
55c97,101
< 			show_error('You have specified an invalid database connection group.');
---
> 			show_error('You have not specified a database connection group via $active_group in your config/database.php file.');
> 		}
> 		elseif ( ! isset($db[$active_group]))
> 		{
> 			show_error('You have specified an invalid database connection group ('.$active_group.') in your config/database.php file.');
62,63c108,109
< 
< 		/* parse the URL from the DSN string
---
> 		/**
> 		 * Parse the URL from the DSN string
69,70c115
< 
< 		if (($dns = @parse_url($params)) === FALSE)
---
> 		if (($dsn = @parse_url($params)) === FALSE)
76,80c121,126
< 							'dbdriver'	=> $dns['scheme'],
< 							'hostname'	=> (isset($dns['host'])) ? rawurldecode($dns['host']) : '',
< 							'username'	=> (isset($dns['user'])) ? rawurldecode($dns['user']) : '',
< 							'password'	=> (isset($dns['pass'])) ? rawurldecode($dns['pass']) : '',
< 							'database'	=> (isset($dns['path'])) ? rawurldecode(substr($dns['path'], 1)) : ''
---
> 			'dbdriver'	=> $dsn['scheme'],
> 			'hostname'	=> isset($dsn['host']) ? rawurldecode($dsn['host']) : '',
> 			'port'		=> isset($dsn['port']) ? rawurldecode($dsn['port']) : '',
> 			'username'	=> isset($dsn['user']) ? rawurldecode($dsn['user']) : '',
> 			'password'	=> isset($dsn['pass']) ? rawurldecode($dsn['pass']) : '',
> 			'database'	=> isset($dsn['path']) ? rawurldecode(substr($dsn['path'], 1)) : ''
84c130
< 		if (isset($dns['query']))
---
> 		if (isset($dsn['query']))
86c132
< 			parse_str($dns['query'], $extra);
---
> 			parse_str($dsn['query'], $extra);
90,95c136
< 				// booleans please
< 				if (strtoupper($val) == "TRUE")
< 				{
< 					$val = TRUE;
< 				}
< 				elseif (strtoupper($val) == "FALSE")
---
> 				if (is_string($val) && in_array(strtoupper($val), array('TRUE', 'FALSE', 'NULL')))
97c138
< 					$val = FALSE;
---
> 					$val = var_export($val, TRUE);
106c147
< 	if ( ! isset($params['dbdriver']) OR $params['dbdriver'] == '')
---
> 	if (empty($params['dbdriver']))
111c152
< 	// Load the DB classes.  Note: Since the active record class is optional
---
> 	// Load the DB classes. Note: Since the query builder class is optional
113,116c154,162
< 	// based on whether we're using the active record class or not.
< 	// Kudos to Paul for discovering this clever use of eval()
< 
< 	if ($active_record_override !== NULL)
---
> 	// based on whether we're using the query builder class or not.
> 	if ($query_builder_override !== NULL)
> 	{
> 		$query_builder = $query_builder_override;
> 	}
> 	// Backwards compatibility work-around for keeping the
> 	// $active_record config variable working. Should be
> 	// removed in v3.1
> 	elseif ( ! isset($query_builder) && isset($active_record))
118c164
< 		$active_record = $active_record_override;
---
> 		$query_builder = $active_record;
123c169
< 	if ( ! isset($active_record) OR $active_record == TRUE)
---
> 	if ( ! isset($query_builder) OR $query_builder === TRUE)
125,127c171,172
< 		require_once(BASEPATH.'database/DB_active_rec.php');
< 
< 		if ( ! class_exists('CI_DB'))
---
> 		require_once(BASEPATH.'database/DB_query_builder.php');
> 		if ( ! class_exists('CI_DB', FALSE))
129c174,182
< 			eval('class CI_DB extends CI_DB_active_record { }');
---
> 			/**
> 			 * CI_DB
> 			 *
> 			 * Acts as an alias for both CI_DB_driver and CI_DB_query_builder.
> 			 *
> 			 * @see	CI_DB_query_builder
> 			 * @see	CI_DB_driver
> 			 */
> 			class CI_DB extends CI_DB_query_builder { }
132,134c185
< 	else
< 	{
< 		if ( ! class_exists('CI_DB'))
---
> 	elseif ( ! class_exists('CI_DB', FALSE))
136,137c187,190
< 			eval('class CI_DB extends CI_DB_driver { }');
< 		}
---
> 		/**
> 	 	 * @ignore
> 		 */
> 		class CI_DB extends CI_DB_driver { }
140c193,197
< 	require_once(BASEPATH.'database/drivers/'.$params['dbdriver'].'/'.$params['dbdriver'].'_driver.php');
---
> 	// Load the DB driver
> 	$driver_file = BASEPATH.'database/drivers/'.$params['dbdriver'].'/'.$params['dbdriver'].'_driver.php';
> 
> 	file_exists($driver_file) OR show_error('Invalid DB driver');
> 	require_once($driver_file);
146c203,204
< 	if ($DB->autoinit == TRUE)
---
> 	// Check for a subdriver
> 	if ( ! empty($DB->subdriver))
148,149c206
< 		$DB->initialize();
< 	}
---
> 		$driver_file = BASEPATH.'database/drivers/'.$DB->dbdriver.'/subdrivers/'.$DB->dbdriver.'_'.$DB->subdriver.'_driver.php';
151c208
< 	if (isset($params['stricton']) && $params['stricton'] == TRUE)
---
> 		if (file_exists($driver_file))
153c210,213
< 		$DB->query('SET SESSION sql_mode="STRICT_ALL_TABLES"');
---
> 			require_once($driver_file);
> 			$driver = 'CI_DB_'.$DB->dbdriver.'_'.$DB->subdriver.'_driver';
> 			$DB = new $driver($params);
> 		}
155a216
> 	$DB->initialize();
158,162d218
< 
< 
< 
< /* End of file DB.php */
< /* Location: ./system/database/DB.php */
\ No newline at end of file
Only in pos-prod/system/database: DB_active_rec.php
diff -rBwi --ignore-file-name-case pos-prod/system/database/DB_cache.php opensourcepos/system/database/DB_cache.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
27,28c49,54
< 	var $CI;
< 	var $db;	// allows passing of db object so that multiple database connections and returned db objects can be supported
---
> 	/**
> 	 * CI Singleton
> 	 *
> 	 * @var	object
> 	 */
> 	public $CI;
31c57,60
< 	 * Constructor
---
> 	 * Database object
> 	 *
> 	 * Allows passing of DB object so that multiple database connections
> 	 * and returned DB objects can be supported.
33c62,69
< 	 * Grabs the CI super object instance so we can access it.
---
> 	 * @var	object
> 	 */
> 	public $db;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
34a71,72
> 	 * @param	object	&$db
> 	 * @return	void
36c74
< 	function __construct(&$db)
---
> 	public function __construct(&$db)
38,39c76
< 		// Assign the main CI object to $this->CI
< 		// and load the file helper since we use it a lot
---
> 		// Assign the main CI object to $this->CI and load the file helper since we use it a lot
42a80,81
> 
> 		$this->check_path();
50,51c89
< 	 * @access	public
< 	 * @param	string	the path to the cache directory
---
> 	 * @param	string	$path	Path to the cache directory
54c92
< 	function check_path($path = '')
---
> 	public function check_path($path = '')
56c94
< 		if ($path == '')
---
> 		if ($path === '')
58c96
< 			if ($this->db->cachedir == '')
---
> 			if ($this->db->cachedir === '')
67c105,107
< 		$path = preg_replace("/(.+?)\/*$/", "\\1/",  $path);
---
> 		$path = realpath($path)
> 			? rtrim(realpath($path), DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR
> 			: rtrim($path, '/').'/';
69c109
< 		if ( ! is_dir($path) OR ! is_really_writable($path))
---
> 		if ( ! is_dir($path))
70a111,112
> 			log_message('debug', 'DB cache path error: '.$path);
> 
74a117,124
> 		if ( ! is_really_writable($path))
> 		{
> 			log_message('debug', 'DB cache dir not writable: '.$path);
> 
> 			// If the path is not really writable we'll turn off caching
> 			return $this->db->cache_off();
> 		}
> 
85c135
< 	 * An MD5 hash of the SQL statement will become the cache file name
---
> 	 * An MD5 hash of the SQL statement will become the cache file name.
87c137
< 	 * @access	public
---
> 	 * @param	string	$sql
90c140
< 	function read($sql)
---
> 	public function read($sql)
92,96d141
< 		if ( ! $this->check_path())
< 		{
< 			return $this->db->cache_off();
< 		}
< 
103c146
< 		if (FALSE === ($cachedata = read_file($filepath)))
---
> 		if (FALSE === ($cachedata = @file_get_contents($filepath)))
116c159,160
< 	 * @access	public
---
> 	 * @param	string	$sql
> 	 * @param	object	$object
119c163
< 	function write($sql, $object)
---
> 	public function write($sql, $object)
121,125d164
< 		if ( ! $this->check_path())
< 		{
< 			return $this->db->cache_off();
< 		}
< 
134,136c170
< 		if ( ! @is_dir($dir_path))
< 		{
< 			if ( ! @mkdir($dir_path, DIR_WRITE_MODE))
---
> 		if ( ! is_dir($dir_path) && ! @mkdir($dir_path, 0750))
141,143d174
< 			@chmod($dir_path, DIR_WRITE_MODE);
< 		}
< 
149c180
< 		@chmod($dir_path.$filename, FILE_WRITE_MODE);
---
> 		chmod($dir_path.$filename, 0640);
158,159c189,191
< 	 * @access	public
< 	 * @return	bool
---
> 	 * @param	string	$segment_one
> 	 * @param	string	$segment_two
> 	 * @return	void
161c193
< 	function delete($segment_one = '', $segment_two = '')
---
> 	public function delete($segment_one = '', $segment_two = '')
163c195
< 		if ($segment_one == '')
---
> 		if ($segment_one === '')
168c200
< 		if ($segment_two == '')
---
> 		if ($segment_two === '')
183,184c214
< 	 * @access	public
< 	 * @return	bool
---
> 	 * @return	void
186c216
< 	function delete_all()
---
> 	public function delete_all()
188c218
< 		delete_files($this->db->cachedir, TRUE);
---
> 		delete_files($this->db->cachedir, TRUE, TRUE);
192,195d221
< 
< 
< /* End of file DB_cache.php */
< /* Location: ./system/database/DB_cache.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/DB_driver.php opensourcepos/system/database/DB_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
28,29c50,136
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
>  */
> abstract class CI_DB_driver {
> 
> 	/**
> 	 * Data Source Name / Connect string
> 	 *
> 	 * @var	string
> 	 */
> 	public $dsn;
> 
> 	/**
> 	 * Username
> 	 *
> 	 * @var	string
> 	 */
> 	public $username;
> 
> 	/**
> 	 * Password
> 	 *
> 	 * @var	string
> 	 */
> 	public $password;
> 
> 	/**
> 	 * Hostname
> 	 *
> 	 * @var	string
> 	 */
> 	public $hostname;
> 
> 	/**
> 	 * Database name
> 	 *
> 	 * @var	string
> 	 */
> 	public $database;
> 
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver		= 'mysqli';
> 
> 	/**
> 	 * Sub-driver
> 	 *
> 	 * @used-by	CI_DB_pdo_driver
> 	 * @var	string
> 	 */
> 	public $subdriver;
> 
> 	/**
> 	 * Table prefix
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbprefix		= '';
> 
> 	/**
> 	 * Character set
> 	 *
> 	 * @var	string
> 	 */
> 	public $char_set		= 'utf8';
> 
> 	/**
> 	 * Collation
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbcollat		= 'utf8_general_ci';
> 
> 	/**
> 	 * Encryption flag/data
> 	 *
> 	 * @var	mixed
> 	 */
> 	public $encrypt			= FALSE;
> 
> 	/**
> 	 * Swap Prefix
> 	 *
> 	 * @var	string
31c138
< class CI_DB_driver {
---
> 	public $swap_pre		= '';
33,71c140,145
< 	var $username;
< 	var $password;
< 	var $hostname;
< 	var $database;
< 	var $dbdriver		= 'mysql';
< 	var $dbprefix		= '';
< 	var $char_set		= 'utf8';
< 	var $dbcollat		= 'utf8_general_ci';
< 	var $autoinit		= TRUE; // Whether to automatically initialize the DB
< 	var $swap_pre		= '';
< 	var $port			= '';
< 	var $pconnect		= FALSE;
< 	var $conn_id		= FALSE;
< 	var $result_id		= FALSE;
< 	var $db_debug		= FALSE;
< 	var $benchmark		= 0;
< 	var $query_count	= 0;
< 	var $bind_marker	= '?';
< 	var $save_queries	= TRUE;
< 	var $queries		= array();
< 	var $query_times	= array();
< 	var $data_cache		= array();
< 	var $trans_enabled	= TRUE;
< 	var $trans_strict	= TRUE;
< 	var $_trans_depth	= 0;
< 	var $_trans_status	= TRUE; // Used with transactions to determine if a rollback should occur
< 	var $cache_on		= FALSE;
< 	var $cachedir		= '';
< 	var $cache_autodel	= FALSE;
< 	var $CACHE; // The cache class object
< 
< 	// Private variables
< 	var $_protect_identifiers	= TRUE;
< 	var $_reserved_identifiers	= array('*'); // Identifiers that should NOT be escaped
< 
< 	// These are use with Oracle
< 	var $stmt_id;
< 	var $curs_id;
< 	var $limit_used;
---
> 	/**
> 	 * Database port
> 	 *
> 	 * @var	int
> 	 */
> 	public $port			= '';
72a147,159
> 	/**
> 	 * Persistent connection flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $pconnect		= FALSE;
> 
> 	/**
> 	 * Connection ID
> 	 *
> 	 * @var	object|resource
> 	 */
> 	public $conn_id			= FALSE;
73a161,182
> 	/**
> 	 * Result ID
> 	 *
> 	 * @var	object|resource
> 	 */
> 	public $result_id		= FALSE;
> 
> 	/**
> 	 * Debug flag
> 	 *
> 	 * Whether to display error messages.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $db_debug		= FALSE;
> 
> 	/**
> 	 * Benchmark time
> 	 *
> 	 * @var	int
> 	 */
> 	public $benchmark		= 0;
76,77c185,229
< 	 * Constructor.  Accepts one parameter containing the database
< 	 * connection settings.
---
> 	 * Executed queries count
> 	 *
> 	 * @var	int
> 	 */
> 	public $query_count		= 0;
> 
> 	/**
> 	 * Bind marker
> 	 *
> 	 * Character used to identify values in a prepared statement.
> 	 *
> 	 * @var	string
> 	 */
> 	public $bind_marker		= '?';
> 
> 	/**
> 	 * Save queries flag
> 	 *
> 	 * Whether to keep an in-memory history of queries for debugging purposes.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $save_queries		= TRUE;
> 
> 	/**
> 	 * Queries list
> 	 *
> 	 * @see	CI_DB_driver::$save_queries
> 	 * @var	string[]
> 	 */
> 	public $queries			= array();
> 
> 	/**
> 	 * Query times
> 	 *
> 	 * A list of times that queries took to execute.
> 	 *
> 	 * @var	array
> 	 */
> 	public $query_times		= array();
> 
> 	/**
> 	 * Data cache
> 	 *
> 	 * An internal generic value cache.
79c231
< 	 * @param array
---
> 	 * @var	array
81c233,365
< 	function __construct($params)
---
> 	public $data_cache		= array();
> 
> 	/**
> 	 * Transaction enabled flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $trans_enabled		= TRUE;
> 
> 	/**
> 	 * Strict transaction mode flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $trans_strict		= TRUE;
> 
> 	/**
> 	 * Transaction depth level
> 	 *
> 	 * @var	int
> 	 */
> 	protected $_trans_depth		= 0;
> 
> 	/**
> 	 * Transaction status flag
> 	 *
> 	 * Used with transactions to determine if a rollback should occur.
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_trans_status	= TRUE;
> 
> 	/**
> 	 * Transaction failure flag
> 	 *
> 	 * Used with transactions to determine if a transaction has failed.
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_trans_failure	= FALSE;
> 
> 	/**
> 	 * Cache On flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $cache_on		= FALSE;
> 
> 	/**
> 	 * Cache directory path
> 	 *
> 	 * @var	bool
> 	 */
> 	public $cachedir		= '';
> 
> 	/**
> 	 * Cache auto-delete flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $cache_autodel		= FALSE;
> 
> 	/**
> 	 * DB Cache object
> 	 *
> 	 * @see	CI_DB_cache
> 	 * @var	object
> 	 */
> 	public $CACHE;
> 
> 	/**
> 	 * Protect identifiers flag
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_protect_identifiers		= TRUE;
> 
> 	/**
> 	 * List of reserved identifiers
> 	 *
> 	 * Identifiers that must NOT be escaped.
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_reserved_identifiers	= array('*');
> 
> 	/**
> 	 * Identifier escape character
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_escape_char = '"';
> 
> 	/**
> 	 * ESCAPE statement string
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_like_escape_str = " ESCAPE '%s' ";
> 
> 	/**
> 	 * ESCAPE character
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_like_escape_chr = '!';
> 
> 	/**
> 	 * ORDER BY random keyword
> 	 *
> 	 * @var	array
> 	 */
> 	protected $_random_keyword = array('RAND()', 'RAND(%d)');
> 
> 	/**
> 	 * COUNT string
> 	 *
> 	 * @used-by	CI_DB_driver::count_all()
> 	 * @used-by	CI_DB_query_builder::count_all_results()
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_count_string = 'SELECT COUNT(*) AS ';
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
> 	 *
> 	 * @param	array	$params
> 	 * @return	void
> 	 */
> 	public function __construct($params)
91c375
< 		log_message('debug', 'Database Driver Class Initialized');
---
> 		log_message('info', 'Database Driver Class Initialized');
99,101c383
< 	 * @access	private Called by the constructor
< 	 * @param	mixed
< 	 * @return	void
---
> 	 * @return	bool
103c385
< 	function initialize()
---
> 	public function initialize()
105,107c387,393
< 		// If an existing connection resource is available
< 		// there is no need to connect and select the database
< 		if (is_resource($this->conn_id) OR is_object($this->conn_id))
---
> 		/* If an established connection is available, then there's
> 		 * no need to connect and select the database.
> 		 *
> 		 * Depending on the database driver, conn_id can be either
> 		 * boolean TRUE, a resource or an object.
> 		 */
> 		if ($this->conn_id)
115c401,427
< 		$this->conn_id = ($this->pconnect == FALSE) ? $this->db_connect() : $this->db_pconnect();
---
> 		$this->conn_id = $this->db_connect($this->pconnect);
> 
> 		// No connection resource? Check if there is a failover else throw an error
> 		if ( ! $this->conn_id)
> 		{
> 			// Check if there is a failover set
> 			if ( ! empty($this->failover) && is_array($this->failover))
> 			{
> 				// Go over all the failovers
> 				foreach ($this->failover as $failover)
> 				{
> 					// Replace the current settings with those of the failover
> 					foreach ($failover as $key => $val)
> 					{
> 						$this->$key = $val;
> 					}
> 
> 					// Try to connect
> 					$this->conn_id = $this->db_connect($this->pconnect);
> 
> 					// If a connection is made break the foreach loop
> 					if ($this->conn_id)
> 					{
> 						break;
> 					}
> 				}
> 			}
117c429
< 		// No connection resource?  Throw an error
---
> 			// We still don't have a connection?
127a441
> 		}
129c443,445
< 		// ----------------------------------------------------------------
---
> 		// Now we set the character set and that's all
> 		return $this->db_set_charset($this->char_set);
> 	}
131,136c447
< 		// Select the DB... assuming a database name is specified in the config file
< 		if ($this->database != '')
< 		{
< 			if ( ! $this->db_select())
< 			{
< 				log_message('error', 'Unable to select database: '.$this->database);
---
> 	// --------------------------------------------------------------------
138c449,456
< 				if ($this->db_debug)
---
> 	/**
> 	 * DB connect
> 	 *
> 	 * This is just a dummy method that all drivers will override.
> 	 *
> 	 * @return	mixed
> 	 */
> 	public function db_connect()
140,142c458
< 					$this->display_error('db_unable_to_select', $this->database);
< 				}
< 				return FALSE;
---
> 		return TRUE;
144c460,468
< 			else
---
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Persistent database connection
> 	 *
> 	 * @return	mixed
> 	 */
> 	public function db_pconnect()
146,147c470,486
< 				// We've selected the DB. Now we set the character set
< 				if ( ! $this->db_set_charset($this->char_set, $this->dbcollat))
---
> 		return $this->db_connect(TRUE);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Reconnect
> 	 *
> 	 * Keep / reestablish the db connection if no queries have been
> 	 * sent for a length of time exceeding the server's idle timeout.
> 	 *
> 	 * This is just a dummy method to allow drivers without such
> 	 * functionality to not declare it, while others will override it.
> 	 *
> 	 * @return	void
> 	 */
> 	public function reconnect()
149d487
< 					return FALSE;
151a490,501
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Select database
> 	 *
> 	 * This is just a dummy method to allow drivers without such
> 	 * functionality to not declare it, while others will override it.
> 	 *
> 	 * @return	bool
> 	 */
> 	public function db_select()
> 	{
154d503
< 		}
156c505,514
< 		return TRUE;
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Last error
> 	 *
> 	 * @return	array
> 	 */
> 	public function error()
> 	{
> 		return array('code' => NULL, 'message' => NULL);
164,165d521
< 	 * @access	public
< 	 * @param	string
167c523
< 	 * @return	resource
---
> 	 * @return	bool
169c525
< 	function db_set_charset($charset, $collation)
---
> 	public function db_set_charset($charset)
171c527
< 		if ( ! $this->_db_set_charset($this->char_set, $this->dbcollat))
---
> 		if (method_exists($this, '_db_set_charset') && ! $this->_db_set_charset($charset))
173c529
< 			log_message('error', 'Unable to set database connection charset: '.$this->char_set);
---
> 			log_message('error', 'Unable to set database connection charset: '.$charset);
177c533
< 				$this->display_error('db_unable_to_set_charset', $this->char_set);
---
> 				$this->display_error('db_unable_to_set_charset', $charset);
191d546
< 	 * @access	public
194c549
< 	function platform()
---
> 	public function platform()
202,203c557,560
< 	 * Database Version Number.  Returns a string containing the
< 	 * version of the database being used
---
> 	 * Database version number
> 	 *
> 	 * Returns a string containing the version of the database being used.
> 	 * Most drivers will override this method.
205d561
< 	 * @access	public
208c564
< 	function version()
---
> 	public function version()
210c566
< 		if (FALSE === ($sql = $this->_version()))
---
> 		if (isset($this->data_cache['version']))
212c568,571
< 			if ($this->db_debug)
---
> 			return $this->data_cache['version'];
> 		}
> 
> 		if (FALSE === ($sql = $this->_version()))
214c573
< 				return $this->display_error('db_unsupported_function');
---
> 			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
216c575,577
< 			return FALSE;
---
> 
> 		$query = $this->query($sql)->row();
> 		return $this->data_cache['version'] = $query->ver;
219,221c580
< 		// Some DBs have functions that return the version, and don't run special
< 		// SQL queries per se. In these instances, just return the result.
< 		$driver_version_exceptions = array('oci8', 'sqlite', 'cubrid');
---
> 	// --------------------------------------------------------------------
223,227c582,587
< 		if (in_array($this->dbdriver, $driver_version_exceptions))
< 		{
< 			return $sql;
< 		}
< 		else
---
> 	/**
> 	 * Version number query string
> 	 *
> 	 * @return	string
> 	 */
> 	protected function _version()
229,231c589
< 			$query = $this->query($sql);
< 			return $query->row('ver');
< 		}
---
> 		return 'SELECT VERSION() AS ver';
245,247c603,605
< 	 * @access	public
< 	 * @param	string	An SQL query string
< 	 * @param	array	An array of binding data
---
> 	 * @param	string	$sql
> 	 * @param	array	$binds = FALSE		An array of binding data
> 	 * @param	bool	$return_object = NULL
250,252c608
< 	function query($sql, $binds = FALSE, $return_object = TRUE)
< 	{
< 		if ($sql == '')
---
> 	public function query($sql, $binds = FALSE, $return_object = NULL)
254c610
< 			if ($this->db_debug)
---
> 		if ($sql === '')
257c613
< 				return $this->display_error('db_invalid_query');
---
> 			return ($this->db_debug) ? $this->display_error('db_invalid_query') : FALSE;
259c615,617
< 			return FALSE;
---
> 		elseif ( ! is_bool($return_object))
> 		{
> 			$return_object = ! $this->is_write_type($sql);
263c621
< 		if ( ($this->dbprefix != '' AND $this->swap_pre != '') AND ($this->dbprefix != $this->swap_pre) )
---
> 		if ($this->dbprefix !== '' && $this->swap_pre !== '' && $this->dbprefix !== $this->swap_pre)
265c623
< 			$sql = preg_replace("/(\W)".$this->swap_pre."(\S+?)/", "\\1".$this->dbprefix."\\2", $sql);
---
> 			$sql = preg_replace('/(\W)'.$this->swap_pre.'(\S+?)/', '\\1'.$this->dbprefix.'\\2', $sql);
277,279c635
< 		if ($this->cache_on == TRUE AND stristr($sql, 'SELECT'))
< 		{
< 			if ($this->_cache_init())
---
> 		if ($this->cache_on === TRUE && $return_object === TRUE && $this->_cache_init())
287d642
< 		}
290c645
< 		if ($this->save_queries == TRUE)
---
> 		if ($this->save_queries === TRUE)
296c651
< 		$time_start = list($sm, $ss) = explode(' ', microtime());
---
> 		$time_start = microtime(TRUE);
301c656
< 			if ($this->save_queries == TRUE)
---
> 			if ($this->save_queries === TRUE)
306a662,663
> 			if ($this->_trans_depth !== 0)
> 			{
307a665,671
> 			}
> 
> 			// Grab the error now, as we might run some additional queries before displaying the error
> 			$error = $this->error();
> 
> 			// Log errors
> 			log_message('error', 'Query error: '.$error['message'].' - Invalid query: '.$sql);
311,315d674
< 				// grab the error number and message now, as we might run some
< 				// additional queries before displaying the error
< 				$error_no = $this->_error_number();
< 				$error_msg = $this->_error_message();
< 
319a679,681
> 				while ($this->_trans_depth !== 0)
> 				{
> 					$trans_depth = $this->_trans_depth;
320a683,688
> 					if ($trans_depth === $this->_trans_depth)
> 					{
> 						log_message('error', 'Database: Failure during an automated transaction commit/rollback!');
> 						break;
> 					}
> 				}
322,330c690,691
< 				// Log and display errors
< 				log_message('error', 'Query error: '.$error_msg);
< 				return $this->display_error(
< 										array(
< 												'Error Number: '.$error_no,
< 												$error_msg,
< 												$sql
< 											)
< 										);
---
> 				// Display errors
> 				return $this->display_error(array('Error Number: '.$error['code'], $error['message'], $sql));
337,338c698,699
< 		$time_end = list($em, $es) = explode(' ', microtime());
< 		$this->benchmark += ($em + $es) - ($sm + $ss);
---
> 		$time_end = microtime(TRUE);
> 		$this->benchmark += $time_end - $time_start;
340c701
< 		if ($this->save_queries == TRUE)
---
> 		if ($this->save_queries === TRUE)
342c703
< 			$this->query_times[] = ($em + $es) - ($sm + $ss);
---
> 			$this->query_times[] = $time_end - $time_start;
348,354c709,713
< 		// Was the query a "write" type?
< 		// If so we'll simply return true
< 		if ($this->is_write_type($sql) === TRUE)
< 		{
< 			// If caching is enabled we'll auto-cleanup any
< 			// existing files related to this particular URI
< 			if ($this->cache_on == TRUE AND $this->cache_autodel == TRUE AND $this->_cache_init())
---
> 		// Will we have a result object instantiated? If not - we'll simply return TRUE
> 		if ($return_object !== TRUE)
> 		{
> 			// If caching is enabled we'll auto-cleanup any existing files related to this particular URI
> 			if ($this->cache_on === TRUE && $this->cache_autodel === TRUE && $this->_cache_init())
362,369d720
< 		// Return TRUE if we don't need to create a result object
< 		// Currently only the Oracle driver uses this when stored
< 		// procedures are used
< 		if ($return_object !== TRUE)
< 		{
< 			return TRUE;
< 		}
< 
373,386c723
< 		$RES			= new $driver();
< 		$RES->conn_id	= $this->conn_id;
< 		$RES->result_id	= $this->result_id;
< 
< 		if ($this->dbdriver == 'oci8')
< 		{
< 			$RES->stmt_id		= $this->stmt_id;
< 			$RES->curs_id		= NULL;
< 			$RES->limit_used	= $this->limit_used;
< 			$this->stmt_id		= FALSE;
< 		}
< 
< 		// oci8 vars must be set before calling this
< 		$RES->num_rows	= $RES->num_rows();
---
> 		$RES		= new $driver($this);
390c727
< 		if ($this->cache_on == TRUE AND $this->_cache_init())
---
> 		if ($this->cache_on === TRUE && $this->_cache_init())
398,399c735
< 			$CR = new CI_DB_result();
< 			$CR->num_rows		= $RES->num_rows();
---
> 			$CR = new CI_DB_result($this);
401a738
> 			$CR->num_rows		= $RES->num_rows();
418d754
< 	 * @access	public
421c757
< 	function load_rdriver()
---
> 	public function load_rdriver()
425c761
< 		if ( ! class_exists($driver))
---
> 		if ( ! class_exists($driver, FALSE))
427,428c763,764
< 			include_once(BASEPATH.'database/DB_result.php');
< 			include_once(BASEPATH.'database/drivers/'.$this->dbdriver.'/'.$this->dbdriver.'_result.php');
---
> 			require_once(BASEPATH.'database/DB_result.php');
> 			require_once(BASEPATH.'database/drivers/'.$this->dbdriver.'/'.$this->dbdriver.'_result.php');
442d777
< 	 * @access	public
446c781
< 	function simple_query($sql)
---
> 	public function simple_query($sql)
450c785,788
< 			$this->initialize();
---
> 			if ( ! $this->initialize())
> 			{
> 				return FALSE;
> 			}
462d799
< 	 * @access	public
465c802
< 	function trans_off()
---
> 	public function trans_off()
473a811
> 	 *
475,477c813,814
< 	 * transactions, if one group fails all groups will be rolled back.
< 	 * If strict mode is disabled, each group is treated autonomously, meaning
< 	 * a failure of one group will not affect any others
---
> 	 * transactions, if one group fails all subsequent groups will be
> 	 * rolled back.
479c816,819
< 	 * @access	public
---
> 	 * If strict mode is disabled, each group is treated autonomously,
> 	 * meaning a failure of one group will not affect any others
> 	 *
> 	 * @param	bool	$mode = TRUE
482c822
< 	function trans_strict($mode = TRUE)
---
> 	public function trans_strict($mode = TRUE)
492,493c832,833
< 	 * @access	public
< 	 * @return	void
---
> 	 * @param	bool	$test_mode = FALSE
> 	 * @return	bool
495c835
< 	function trans_start($test_mode = FALSE)
---
> 	public function trans_start($test_mode = FALSE)
502,509c842
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			$this->_trans_depth += 1;
< 			return;
< 		}
< 
< 		$this->trans_begin($test_mode);
---
> 		return $this->trans_begin($test_mode);
517d849
< 	 * @access	public
520c852
< 	function trans_complete()
---
> 	public function trans_complete()
527,533d858
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 1)
< 		{
< 			$this->_trans_depth -= 1;
< 			return TRUE;
< 		}
< 
535c860
< 		if ($this->_trans_status === FALSE)
---
> 		if ($this->_trans_status === FALSE OR $this->_trans_failure === TRUE)
540,541c865,866
< 			// the _trans_status flag so that subsequent groups of transactions
< 			// will be permitted.
---
> 			// the _trans_status flag so that subsequent groups of
> 			// transactions will be permitted.
551,552c876
< 		$this->trans_commit();
< 		return TRUE;
---
> 		return $this->trans_commit();
560d883
< 	 * @access	public
563c886
< 	function trans_status()
---
> 	public function trans_status()
570a894,974
> 	 * Begin Transaction
> 	 *
> 	 * @param	bool	$test_mode
> 	 * @return	bool
> 	 */
> 	public function trans_begin($test_mode = FALSE)
> 	{
> 		if ( ! $this->trans_enabled)
> 		{
> 			return FALSE;
> 		}
> 		// When transactions are nested we only begin/commit/rollback the outermost ones
> 		elseif ($this->_trans_depth > 0)
> 		{
> 			$this->_trans_depth++;
> 			return TRUE;
> 		}
> 
> 		// Reset the transaction failure flag.
> 		// If the $test_mode flag is set to TRUE transactions will be rolled back
> 		// even if the queries produce a successful result.
> 		$this->_trans_failure = ($test_mode === TRUE);
> 
> 		if ($this->_trans_begin())
> 		{
> 			$this->_trans_depth++;
> 			return TRUE;
> 		}
> 
> 		return FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Commit Transaction
> 	 *
> 	 * @return	bool
> 	 */
> 	public function trans_commit()
> 	{
> 		if ( ! $this->trans_enabled OR $this->_trans_depth === 0)
> 		{
> 			return FALSE;
> 		}
> 		// When transactions are nested we only begin/commit/rollback the outermost ones
> 		elseif ($this->_trans_depth > 1 OR $this->_trans_commit())
> 		{
> 			$this->_trans_depth--;
> 			return TRUE;
> 		}
> 
> 		return FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Rollback Transaction
> 	 *
> 	 * @return	bool
> 	 */
> 	public function trans_rollback()
> 	{
> 		if ( ! $this->trans_enabled OR $this->_trans_depth === 0)
> 		{
> 			return FALSE;
> 		}
> 		// When transactions are nested we only begin/commit/rollback the outermost ones
> 		elseif ($this->_trans_depth > 1 OR $this->_trans_rollback())
> 		{
> 			$this->_trans_depth--;
> 			return TRUE;
> 		}
> 
> 		return FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
573d976
< 	 * @access	public
578c981
< 	function compile_binds($sql, $binds)
---
> 	public function compile_binds($sql, $binds)
580c983
< 		if (strpos($sql, $this->bind_marker) === FALSE)
---
> 		if (empty($binds) OR empty($this->bind_marker) OR strpos($sql, $this->bind_marker) === FALSE)
584,585c987
< 
< 		if ( ! is_array($binds))
---
> 		elseif ( ! is_array($binds))
587a990,996
> 			$bind_count = 1;
> 		}
> 		else
> 		{
> 			// Make sure we're using numeric keys
> 			$binds = array_values($binds);
> 			$bind_count = count($binds);
590,591c999,1009
< 		// Get the sql segments around the bind markers
< 		$segments = explode($this->bind_marker, $sql);
---
> 		// We'll need the marker length later
> 		$ml = strlen($this->bind_marker);
> 
> 		// Make sure not to replace a chunk inside a string that happens to match the bind marker
> 		if ($c = preg_match_all("/'[^']*'/i", $sql, $matches))
> 		{
> 			$c = preg_match_all('/'.preg_quote($this->bind_marker, '/').'/i',
> 				str_replace($matches[0],
> 					str_replace($this->bind_marker, str_repeat(' ', $ml), $matches[0]),
> 					$sql, $c),
> 				$matches, PREG_OFFSET_CAPTURE);
593,596c1011,1019
< 		// The count of bind should be 1 less then the count of segments
< 		// If there are more bind arguments trim it down
< 		if (count($binds) >= count($segments)) {
< 			$binds = array_slice($binds, 0, count($segments)-1);
---
> 			// Bind values' count must match the count of markers in the query
> 			if ($bind_count !== $c)
> 			{
> 				return $sql;
> 			}
> 		}
> 		elseif (($c = preg_match_all('/'.preg_quote($this->bind_marker, '/').'/i', $sql, $matches, PREG_OFFSET_CAPTURE)) !== $bind_count)
> 		{
> 			return $sql;
599,602c1022,1026
< 		// Construct the binded query
< 		$result = $segments[0];
< 		$i = 0;
< 		foreach ($binds as $bind)
---
> 		do
> 		{
> 			$c--;
> 			$escaped_value = $this->escape($binds[$c]);
> 			if (is_array($escaped_value))
604,605c1028
< 			$result .= $this->escape($bind);
< 			$result .= $segments[++$i];
---
> 				$escaped_value = '('.implode(',', $escaped_value).')';
606a1030,1032
> 			$sql = substr_replace($sql, $escaped_value, $matches[0][$c][1], $ml);
> 		}
> 		while ($c !== 0);
608c1034
< 		return $result;
---
> 		return $sql;
616d1041
< 	 * @access	public
618c1043
< 	 * @return	boolean
---
> 	 * @return	bool
620,622c1045
< 	function is_write_type($sql)
< 	{
< 		if ( ! preg_match('/^\s*"?(SET|INSERT|UPDATE|DELETE|REPLACE|CREATE|DROP|TRUNCATE|LOAD DATA|COPY|ALTER|GRANT|REVOKE|LOCK|UNLOCK)\s+/i', $sql))
---
> 	public function is_write_type($sql)
624,626c1047
< 			return FALSE;
< 		}
< 		return TRUE;
---
> 		return (bool) preg_match('/^\s*"?(SET|INSERT|UPDATE|DELETE|REPLACE|CREATE|DROP|TRUNCATE|LOAD|COPY|ALTER|RENAME|GRANT|REVOKE|LOCK|UNLOCK|REINDEX)\s/i', $sql);
634,636c1055,1056
< 	 * @access	public
< 	 * @param	integer	The number of decimal places
< 	 * @return	integer
---
> 	 * @param	int	The number of decimal places
> 	 * @return	string
638c1058
< 	function elapsed_time($decimals = 6)
---
> 	public function elapsed_time($decimals = 6)
648,649c1068
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
651c1070
< 	function total_queries()
---
> 	public function total_queries()
661,662c1080
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	string
664c1082
< 	function last_query()
---
> 	public function last_query()
677d1094
< 	 * @access	public
681c1098
< 	function escape($str)
---
> 	public function escape($str)
683c1100,1105
< 		if (is_string($str))
---
> 		if (is_array($str))
> 		{
> 			$str = array_map(array(&$this, 'escape'), $str);
> 			return $str;
> 		}
> 		elseif (is_string($str) OR (is_object($str) && method_exists($str, '__toString')))
685c1107
< 			$str = "'".$this->escape_str($str)."'";
---
> 			return "'".$this->escape_str($str)."'";
689c1111,1139
< 			$str = ($str === FALSE) ? 0 : 1;
---
> 			return ($str === FALSE) ? 0 : 1;
> 		}
> 		elseif ($str === NULL)
> 		{
> 			return 'NULL';
> 		}
> 
> 		return $str;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Escape String
> 	 *
> 	 * @param	string|string[]	$str	Input string
> 	 * @param	bool	$like	Whether or not the string will be used in a LIKE condition
> 	 * @return	string
> 	 */
> 	public function escape_str($str, $like = FALSE)
> 	{
> 		if (is_array($str))
> 		{
> 			foreach ($str as $key => $val)
> 			{
> 				$str[$key] = $this->escape_str($val, $like);
> 			}
> 
> 			return $str;
691c1141,1145
< 		elseif (is_null($str))
---
> 
> 		$str = $this->_escape_str($str);
> 
> 		// escape LIKE condition wildcards
> 		if ($like === TRUE)
693c1147,1151
< 			$str = 'NULL';
---
> 			return str_replace(
> 				array($this->_like_escape_chr, '%', '_'),
> 				array($this->_like_escape_chr.$this->_like_escape_chr, $this->_like_escape_chr.'%', $this->_like_escape_chr.'_'),
> 				$str
> 			);
707,708c1165
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string|string[]
711c1168
< 	function escape_like_str($str)
---
> 	public function escape_like_str($str)
718a1176,1188
> 	 * Platform-dependant string escape
> 	 *
> 	 * @param	string
> 	 * @return	string
> 	 */
> 	protected function _escape_str($str)
> 	{
> 		return str_replace("'", "''", remove_invisible_characters($str));
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
724,725c1194
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table	Table name
728c1197
< 	function primary($table = '')
---
> 	public function primary($table)
730a1200,1201
> 		return is_array($fields) ? current($fields) : FALSE;
> 	}
732c1203,1214
< 		if ( ! is_array($fields))
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * "Count All" query
> 	 *
> 	 * Generates a platform-specific query string that counts all records in
> 	 * the specified database
> 	 *
> 	 * @param	string
> 	 * @return	int
> 	 */
> 	public function count_all($table = '')
734c1216,1224
< 			return FALSE;
---
> 		if ($table === '')
> 		{
> 			return 0;
> 		}
> 
> 		$query = $this->query($this->_count_string.$this->escape_identifiers('numrows').' FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE));
> 		if ($query->num_rows() === 0)
> 		{
> 			return 0;
737c1227,1229
< 		return current($fields);
---
> 		$query = $query->row();
> 		$this->_reset_select();
> 		return (int) $query->numrows;
745c1237
< 	 * @access	public
---
> 	 * @param	string	$constrain_by_prefix = FALSE
748c1240
< 	function list_tables($constrain_by_prefix = FALSE)
---
> 	public function list_tables($constrain_by_prefix = FALSE)
758,762c1250
< 			if ($this->db_debug)
< 			{
< 				return $this->display_error('db_unsupported_function');
< 			}
< 			return FALSE;
---
> 			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
765c1253
< 		$retval = array();
---
> 		$this->data_cache['table_names'] = array();
768,769d1255
< 		if ($query->num_rows() > 0)
< 		{
771a1258,1260
> 			// Do we know from which column to get the table name?
> 			if ( ! isset($key))
> 			{
774c1263,1267
< 					$retval[] = $row['TABLE_NAME'];
---
> 					$key = 'table_name';
> 				}
> 				elseif (isset($row['TABLE_NAME']))
> 				{
> 					$key = 'TABLE_NAME';
778c1271,1277
< 					$retval[] = array_shift($row);
---
> 					/* We have no other choice but to just get the first element's key.
> 					 * Due to array_shift() accepting its argument by reference, if
> 					 * E_STRICT is on, this would trigger a warning. So we'll have to
> 					 * assign it first.
> 					 */
> 					$key = array_keys($row);
> 					$key = array_shift($key);
780a1280,1281
> 
> 			$this->data_cache['table_names'][] = $row[$key];
783d1283
< 		$this->data_cache['table_names'] = $retval;
791,792c1291,1293
< 	 * @access	public
< 	 * @return	boolean
---
> 	 *
> 	 * @param	string	$table_name
> 	 * @return	bool
794c1295
< 	function table_exists($table_name)
---
> 	public function table_exists($table_name)
796c1297
< 		return ( ! in_array($this->_protect_identifiers($table_name, TRUE, FALSE, FALSE), $this->list_tables())) ? FALSE : TRUE;
---
> 		return in_array($this->protect_identifiers($table_name, TRUE, FALSE, FALSE), $this->list_tables());
802c1303
< 	 * Fetch MySQL Field Names
---
> 	 * Fetch Field Names
804,805c1305
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table	Table name
808c1308
< 	function list_fields($table = '')
---
> 	public function list_fields($table)
816,824d1315
< 		if ($table == '')
< 		{
< 			if ($this->db_debug)
< 			{
< 				return $this->display_error('db_field_param_missing');
< 			}
< 			return FALSE;
< 		}
< 
827,831c1318
< 			if ($this->db_debug)
< 			{
< 				return $this->display_error('db_unsupported_function');
< 			}
< 			return FALSE;
---
> 			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
834a1322
> 		$this->data_cache['field_names'][$table] = array();
836d1323
< 		$retval = array();
838a1326,1328
> 			// Do we know from where to get the column's name?
> 			if ( ! isset($key))
> 			{
841c1331,1335
< 				$retval[] = $row['COLUMN_NAME'];
---
> 					$key = 'column_name';
> 				}
> 				elseif (isset($row['COLUMN_NAME']))
> 				{
> 					$key = 'COLUMN_NAME';
845c1339,1341
< 				$retval[] = current($row);
---
> 					// We have no other choice but to just get the first element's key.
> 					$key = key($row);
> 				}
846a1343,1344
> 
> 			$this->data_cache['field_names'][$table][] = $row[$key];
849d1346
< 		$this->data_cache['field_names'][$table] = $retval;
857c1354
< 	 * @access	public
---
> 	 *
860c1357
< 	 * @return	boolean
---
> 	 * @return	bool
862c1359
< 	function field_exists($field_name, $table_name)
---
> 	public function field_exists($field_name, $table_name)
864c1361
< 		return ( ! in_array($field_name, $this->list_fields($table_name))) ? FALSE : TRUE;
---
> 		return in_array($field_name, $this->list_fields($table_name));
872,874c1369,1386
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @param	string	$table	the table name
> 	 * @return	array
> 	 */
> 	public function field_data($table)
> 	{
> 		$query = $this->query($this->_field_data($this->protect_identifiers($table, TRUE, NULL, FALSE)));
> 		return ($query) ? $query->field_data() : FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Escape the SQL Identifiers
> 	 *
> 	 * This function escapes column and table names
> 	 *
> 	 * @param	mixed
> 	 * @return	mixed
876c1388
< 	function field_data($table = '')
---
> 	public function escape_identifiers($item)
878c1390
< 		if ($table == '')
---
> 		if ($this->_escape_char === '' OR empty($item) OR in_array($item, $this->_reserved_identifiers))
880c1392,1394
< 			if ($this->db_debug)
---
> 			return $item;
> 		}
> 		elseif (is_array($item))
882c1396,1425
< 				return $this->display_error('db_field_param_missing');
---
> 			foreach ($item as $key => $value)
> 			{
> 				$item[$key] = $this->escape_identifiers($value);
> 			}
> 
> 			return $item;
> 		}
> 		// Avoid breaking functions and literal values inside queries
> 		elseif (ctype_digit($item) OR $item[0] === "'" OR ($this->_escape_char !== '"' && $item[0] === '"') OR strpos($item, '(') !== FALSE)
> 		{
> 			return $item;
> 		}
> 
> 		static $preg_ec = array();
> 
> 		if (empty($preg_ec))
> 		{
> 			if (is_array($this->_escape_char))
> 			{
> 				$preg_ec = array(
> 					preg_quote($this->_escape_char[0], '/'),
> 					preg_quote($this->_escape_char[1], '/'),
> 					$this->_escape_char[0],
> 					$this->_escape_char[1]
> 				);
> 			}
> 			else
> 			{
> 				$preg_ec[0] = $preg_ec[1] = preg_quote($this->_escape_char, '/');
> 				$preg_ec[2] = $preg_ec[3] = $this->_escape_char;
884d1426
< 			return FALSE;
887c1429,1435
< 		$query = $this->query($this->_field_data($this->_protect_identifiers($table, TRUE, NULL, FALSE)));
---
> 		foreach ($this->_reserved_identifiers as $id)
> 		{
> 			if (strpos($item, '.'.$id) !== FALSE)
> 			{
> 				return preg_replace('/'.$preg_ec[0].'?([^'.$preg_ec[1].'\.]+)'.$preg_ec[1].'?\./i', $preg_ec[2].'$1'.$preg_ec[3].'.', $item);
> 			}
> 		}
889c1437
< 		return $query->field_data();
---
> 		return preg_replace('/'.$preg_ec[0].'?([^'.$preg_ec[1].'\.]+)'.$preg_ec[1].'?(\.)?/i', $preg_ec[2].'$1'.$preg_ec[3].'$2', $item);
897d1444
< 	 * @access	public
902c1449
< 	function insert_string($table, $data)
---
> 	public function insert_string($table, $data)
904,905c1451
< 		$fields = array();
< 		$values = array();
---
> 		$fields = $values = array();
909c1455
< 			$fields[] = $this->_escape_identifiers($key);
---
> 			$fields[] = $this->escape_identifiers($key);
913c1459,1476
< 		return $this->_insert($this->_protect_identifiers($table, TRUE, NULL, FALSE), $fields, $values);
---
> 		return $this->_insert($this->protect_identifiers($table, TRUE, NULL, FALSE), $fields, $values);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Insert statement
> 	 *
> 	 * Generates a platform-specific insert string from the supplied data
> 	 *
> 	 * @param	string	the table name
> 	 * @param	array	the insert keys
> 	 * @param	array	the insert values
> 	 * @return	string
> 	 */
> 	protected function _insert($table, $keys, $values)
> 	{
> 		return 'INSERT INTO '.$table.' ('.implode(', ', $keys).') VALUES ('.implode(', ', $values).')';
921d1483
< 	 * @access	public
927c1489
< 	function update_string($table, $data, $where)
---
> 	public function update_string($table, $data, $where)
929c1491
< 		if ($where == '')
---
> 		if (empty($where))
933a1496,1497
> 		$this->where($where);
> 
937c1501
< 			$fields[$this->_protect_identifiers($key)] = $this->escape($val);
---
> 			$fields[$this->protect_identifiers($key)] = $this->escape($val);
940,942c1504,1506
< 		if ( ! is_array($where))
< 		{
< 			$dest = array($where);
---
> 		$sql = $this->_update($this->protect_identifiers($table, TRUE, NULL, FALSE), $fields);
> 		$this->_reset_write();
> 		return $sql;
944,949d1507
< 		else
< 		{
< 			$dest = array();
< 			foreach ($where as $key => $val)
< 			{
< 				$prefix = (count($dest) == 0) ? '' : ' AND ';
951c1509,1520
< 				if ($val !== '')
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Update statement
> 	 *
> 	 * Generates a platform-specific update string from the supplied data
> 	 *
> 	 * @param	string	the table name
> 	 * @param	array	the update data
> 	 * @return	string
> 	 */
> 	protected function _update($table, $values)
953c1522
< 					if ( ! $this->_has_operator($key))
---
> 		foreach ($values as $key => $val)
955c1524
< 						$key .= ' =';
---
> 			$valstr[] = $key.' = '.$val;
958c1527,1530
< 					$val = ' '.$this->escape($val);
---
> 		return 'UPDATE '.$table.' SET '.implode(', ', $valstr)
> 			.$this->_compile_wh('qb_where')
> 			.$this->_compile_order_by()
> 			.($this->qb_limit ? ' LIMIT '.$this->qb_limit : '');
961,963c1533
< 				$dest[] = $prefix.$key.$val;
< 			}
< 		}
---
> 	// --------------------------------------------------------------------
965c1535,1543
< 		return $this->_update($this->_protect_identifiers($table, TRUE, NULL, FALSE), $fields, $dest);
---
> 	/**
> 	 * Tests whether the string has an SQL operator
> 	 *
> 	 * @param	string
> 	 * @return	bool
> 	 */
> 	protected function _has_operator($str)
> 	{
> 		return (bool) preg_match('/(<|>|!|=|\sIS NULL|\sIS NOT NULL|\sEXISTS|\sBETWEEN|\sLIKE|\sIN\s*\(|\s)/i', trim($str));
971c1549
< 	 * Tests whether the string has an SQL operator
---
> 	 * Returns the SQL string operator
973d1550
< 	 * @access	private
975c1552
< 	 * @return	bool
---
> 	 * @return	string
977c1554
< 	function _has_operator($str)
---
> 	protected function _get_operator($str)
979,980c1556,1558
< 		$str = trim($str);
< 		if ( ! preg_match("/(\s|<|>|!|=|is null|is not null)/i", $str))
---
> 		static $_operators;
> 
> 		if (empty($_operators))
982c1560,1577
< 			return FALSE;
---
> 			$_les = ($this->_like_escape_str !== '')
> 				? '\s+'.preg_quote(trim(sprintf($this->_like_escape_str, $this->_like_escape_chr)), '/')
> 				: '';
> 			$_operators = array(
> 				'\s*(?:<|>|!)?=\s*',             // =, <=, >=, !=
> 				'\s*<>?\s*',                     // <, <>
> 				'\s*>\s*',                       // >
> 				'\s+IS NULL',                    // IS NULL
> 				'\s+IS NOT NULL',                // IS NOT NULL
> 				'\s+EXISTS\s*\(.*\)',        // EXISTS(sql)
> 				'\s+NOT EXISTS\s*\(.*\)',    // NOT EXISTS(sql)
> 				'\s+BETWEEN\s+',                 // BETWEEN value AND value
> 				'\s+IN\s*\(.*\)',            // IN(list)
> 				'\s+NOT IN\s*\(.*\)',        // NOT IN (list)
> 				'\s+LIKE\s+\S.*('.$_les.')?',    // LIKE 'expr'[ ESCAPE '%s']
> 				'\s+NOT LIKE\s+\S.*('.$_les.')?' // NOT LIKE 'expr'[ ESCAPE '%s']
> 			);
> 
985c1580,1581
< 		return TRUE;
---
> 		return preg_match('/'.implode('|', $_operators).'/i', $str, $match)
> 			? $match[0] : FALSE;
993,995c1589
< 	 * @access	public
< 	 * @param	string	the function name
< 	 * @param	mixed	any parameters needed by the function
---
> 	 * @param	string	$function	Function name
998c1592
< 	function call_function($function)
---
> 	public function call_function($function)
1000c1594
< 		$driver = ($this->dbdriver == 'postgre') ? 'pg_' : $this->dbdriver.'_';
---
> 		$driver = ($this->dbdriver === 'postgre') ? 'pg_' : $this->dbdriver.'_';
1009,1025c1603
< 			if ($this->db_debug)
< 			{
< 				return $this->display_error('db_unsupported_function');
< 			}
< 			return FALSE;
< 		}
< 		else
< 		{
< 			$args = (func_num_args() > 1) ? array_splice(func_get_args(), 1) : null;
< 			if (is_null($args))
< 			{
< 				return call_user_func($function);
< 			}
< 			else
< 			{
< 				return call_user_func_array($function, $args);
< 			}
---
> 			return ($this->db_debug) ? $this->display_error('db_unsupported_function') : FALSE;
1026a1605,1608
> 
> 		return (func_num_args() > 1)
> 			? call_user_func_array($function, array_slice(func_get_args(), 1))
> 			: call_user_func($function);
1034d1615
< 	 * @access	public
1038c1619
< 	function cache_set_path($path = '')
---
> 	public function cache_set_path($path = '')
1048,1049c1629
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	bool	cache_on value
1051c1631
< 	function cache_on()
---
> 	public function cache_on()
1053,1054c1633
< 		$this->cache_on = TRUE;
< 		return TRUE;
---
> 		return $this->cache_on = TRUE;
1062,1063c1641
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	bool	cache_on value
1065c1643
< 	function cache_off()
---
> 	public function cache_off()
1067,1068c1645
< 		$this->cache_on = FALSE;
< 		return FALSE;
---
> 		return $this->cache_on = FALSE;
1077,1078c1653,1655
< 	 * @access	public
< 	 * @return	void
---
> 	 * @param	string	$segment_one = ''
> 	 * @param	string	$segment_two = ''
> 	 * @return	bool
1080,1082c1657
< 	function cache_delete($segment_one = '', $segment_two = '')
< 	{
< 		if ( ! $this->_cache_init())
---
> 	public function cache_delete($segment_one = '', $segment_two = '')
1084,1086c1659,1661
< 			return FALSE;
< 		}
< 		return $this->CACHE->delete($segment_one, $segment_two);
---
> 		return $this->_cache_init()
> 			? $this->CACHE->delete($segment_one, $segment_two)
> 			: FALSE;
1094,1095c1669
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	bool
1097c1671
< 	function cache_delete_all()
---
> 	public function cache_delete_all()
1099,1104c1673,1675
< 		if ( ! $this->_cache_init())
< 		{
< 			return FALSE;
< 		}
< 
< 		return $this->CACHE->delete_all();
---
> 		return $this->_cache_init()
> 			? $this->CACHE->delete_all()
> 			: FALSE;
1112,1113c1683
< 	 * @access	private
< 	 * @return	void
---
> 	 * @return	bool
1115c1685
< 	function _cache_init()
---
> 	protected function _cache_init()
1117c1687
< 		if (is_object($this->CACHE) AND class_exists('CI_DB_Cache'))
---
> 		if ( ! class_exists('CI_DB_Cache', FALSE))
1119c1689
< 			return TRUE;
---
> 			require_once(BASEPATH.'database/DB_cache.php');
1121,1122c1691
< 
< 		if ( ! class_exists('CI_DB_Cache'))
---
> 		elseif (is_object($this->CACHE))
1124,1127c1693
< 			if ( ! @include(BASEPATH.'database/DB_cache.php'))
< 			{
< 				return $this->cache_off();
< 			}
---
> 			return TRUE;
1139d1704
< 	 * @access	public
1142c1707
< 	function close()
---
> 	public function close()
1144c1709
< 		if (is_resource($this->conn_id) OR is_object($this->conn_id))
---
> 		if ($this->conn_id)
1146c1711,1712
< 			$this->_close($this->conn_id);
---
> 			$this->_close();
> 			$this->conn_id = FALSE;
1147a1714,1726
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Close DB Connection
> 	 *
> 	 * This method would be overridden by most of the drivers.
> 	 *
> 	 * @return	void
> 	 */
> 	protected function _close()
> 	{
1156d1734
< 	 * @access	public
1159,1160c1737,1738
< 	 * @param	boolean	whether to localize the message
< 	 * @return	string	sends the application/error_db.php template
---
> 	 * @param	bool	whether to localize the message
> 	 * @return	string	sends the application/views/errors/error_db.php template
1162c1740
< 	function display_error($error = '', $swap = '', $native = FALSE)
---
> 	public function display_error($error = '', $swap = '', $native = FALSE)
1169c1747
< 		if ($native == TRUE)
---
> 		if ($native === TRUE)
1171c1749
< 			$message = $error;
---
> 			$message = (array) $error;
1175c1753
< 			$message = ( ! is_array($error)) ? array(str_replace('%s', $swap, $LANG->line($error))) : $error;
---
> 			$message = is_array($error) ? $error : array(str_replace('%s', $swap, $LANG->line($error)));
1186c1762,1770
< 			if (isset($call['file']) && strpos($call['file'], BASEPATH.'database') === FALSE)
---
> 			if (isset($call['file'], $call['class']))
> 			{
> 				// We'll need this on Windows, as APPPATH and BASEPATH will always use forward slashes
> 				if (DIRECTORY_SEPARATOR !== '/')
> 				{
> 					$call['file'] = str_replace('\\', '/', $call['file']);
> 				}
> 
> 				if (strpos($call['file'], BASEPATH.'database') === FALSE && strpos($call['class'], 'Loader') === FALSE)
1189c1773
< 				$message[] = 'Filename: '.str_replace(array(BASEPATH, APPPATH), '', $call['file']);
---
> 					$message[] = 'Filename: '.str_replace(array(APPPATH, BASEPATH), '', $call['file']);
1194a1778
> 		}
1198,1214c1782
< 		exit;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Protect Identifiers
< 	 *
< 	 * This function adds backticks if appropriate based on db type
< 	 *
< 	 * @access	private
< 	 * @param	mixed	the item to escape
< 	 * @return	mixed	the item with backticks
< 	 */
< 	function protect_identifiers($item, $prefix_single = FALSE)
< 	{
< 		return $this->_protect_identifiers($item, $prefix_single);
---
> 		exit(8); // EXIT_DATABASE
1222c1790
< 	 * This function is used extensively by the Active Record class, and by
---
> 	 * This function is used extensively by the Query Builder class, and by
1228c1796
< 	 * SELECT * FROM hostname.database.table.column AS c FROM hostname.database.table
---
> 	 * SELECT hostname.database.table.column AS c FROM hostname.database.table
1239d1806
< 	 * @access	private
1246c1813
< 	function _protect_identifiers($item, $prefix_single = FALSE, $protect_identifiers = NULL, $field_exists = TRUE)
---
> 	public function protect_identifiers($item, $prefix_single = FALSE, $protect_identifiers = NULL, $field_exists = TRUE)
1259c1825
< 				$escaped_array[$this->_protect_identifiers($k)] = $this->_protect_identifiers($v);
---
> 				$escaped_array[$this->protect_identifiers($k)] = $this->protect_identifiers($v, $prefix_single, $protect_identifiers, $field_exists);
1264a1831,1842
> 		// This is basically a bug fix for queries that use MAX, MIN, etc.
> 		// If a parenthesis is found we know that we do not need to
> 		// escape the data or add a prefix. There's probably a more graceful
> 		// way to deal with this, but I'm not thinking of it -- Rick
> 		//
> 		// Added exception for single quotes as well, we don't want to alter
> 		// literal strings. -- Narf
> 		if (strcspn($item, "()'") !== strlen($item))
> 		{
> 			return $item;
> 		}
> 
1266c1844
< 		$item = preg_replace('/[\t ]+/', ' ', $item);
---
> 		$item = preg_replace('/\s+/', ' ', trim($item));
1269,1270c1847,1848
< 		// Basically we remove everything to the right of the first space
< 		if (strpos($item, ' ') !== FALSE)
---
> 		// Note: strripos() is used in order to support spaces in table names
> 		if ($offset = strripos($item, ' AS '))
1272,1273c1850,1860
< 			$alias = strstr($item, ' ');
< 			$item = substr($item, 0, - strlen($alias));
---
> 			$alias = ($protect_identifiers)
> 				? substr($item, $offset, 4).$this->escape_identifiers(substr($item, $offset + 4))
> 				: substr($item, $offset);
> 			$item = substr($item, 0, $offset);
> 		}
> 		elseif ($offset = strrpos($item, ' '))
> 		{
> 			$alias = ($protect_identifiers)
> 				? ' '.$this->escape_identifiers(substr($item, $offset + 1))
> 				: substr($item, $offset);
> 			$item = substr($item, 0, $offset);
1280,1288d1866
< 		// This is basically a bug fix for queries that use MAX, MIN, etc.
< 		// If a parenthesis is found we know that we do not need to
< 		// escape the data or add a prefix.  There's probably a more graceful
< 		// way to deal with this, but I'm not thinking of it -- Rick
< 		if (strpos($item, '(') !== FALSE)
< 		{
< 			return $item.$alias;
< 		}
< 
1299c1877,1880
< 			if (in_array($parts[0], $this->ar_aliased_tables))
---
> 			//
> 			// NOTE: The ! empty() condition prevents this method
> 			//       from breaking when QB isn't enabled.
> 			if ( ! empty($this->qb_aliased_tables) && in_array($parts[0], $this->qb_aliased_tables))
1307c1888
< 							$parts[$key] = $this->_escape_identifiers($val);
---
> 							$parts[$key] = $this->escape_identifiers($val);
1317c1899
< 			if ($this->dbprefix != '')
---
> 			if ($this->dbprefix !== '')
1341c1923
< 				if ($field_exists == FALSE)
---
> 				if ($field_exists === FALSE)
1347c1929
< 				if ($this->swap_pre != '' && strncmp($parts[$i], $this->swap_pre, strlen($this->swap_pre)) === 0)
---
> 				if ($this->swap_pre !== '' && strpos($parts[$i], $this->swap_pre) === 0)
1349c1931
< 					$parts[$i] = preg_replace("/^".$this->swap_pre."(\S+?)/", $this->dbprefix."\\1", $parts[$i]);
---
> 					$parts[$i] = preg_replace('/^'.$this->swap_pre.'(\S+?)/', $this->dbprefix.'\\1', $parts[$i]);
1353c1934
< 				if (substr($parts[$i], 0, strlen($this->dbprefix)) != $this->dbprefix)
---
> 				elseif (strpos($parts[$i], $this->dbprefix) !== 0)
1364c1945
< 				$item = $this->_escape_identifiers($item);
---
> 				$item = $this->escape_identifiers($item);
1371c1952
< 		if ($this->dbprefix != '')
---
> 		if ($this->dbprefix !== '')
1374c1955
< 			if ($this->swap_pre != '' && strncmp($item, $this->swap_pre, strlen($this->swap_pre)) === 0)
---
> 			if ($this->swap_pre !== '' && strpos($item, $this->swap_pre) === 0)
1376c1957
< 				$item = preg_replace("/^".$this->swap_pre."(\S+?)/", $this->dbprefix."\\1", $item);
---
> 				$item = preg_replace('/^'.$this->swap_pre.'(\S+?)/', $this->dbprefix.'\\1', $item);
1380c1960
< 			if ($prefix_single == TRUE AND substr($item, 0, strlen($this->dbprefix)) != $this->dbprefix)
---
> 			elseif ($prefix_single === TRUE && strpos($item, $this->dbprefix) !== 0)
1386c1966
< 		if ($protect_identifiers === TRUE AND ! in_array($item, $this->_reserved_identifiers))
---
> 		if ($protect_identifiers === TRUE && ! in_array($item, $this->_reserved_identifiers))
1388c1968
< 			$item = $this->_escape_identifiers($item);
---
> 			$item = $this->escape_identifiers($item);
1397,1399c1977,1978
< 	 * Dummy method that allows Active Record class to be disabled
< 	 *
< 	 * This function is used extensively by every db driver.
---
> 	 * Dummy method that allows Query Builder class to be disabled
> 	 * and keep count_all() working.
1408,1410d1986
< 
< /* End of file DB_driver.php */
< /* Location: ./system/database/DB_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/DB_forge.php opensourcepos/system/database/DB_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * Database Utility Class
---
>  * Database Forge Class
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
25c47
< class CI_DB_forge {
---
> abstract class CI_DB_forge {
27,30c49,54
< 	var $fields			= array();
< 	var $keys			= array();
< 	var $primary_keys	= array();
< 	var $db_char_set	=	'';
---
> 	/**
> 	 * Database object
> 	 *
> 	 * @var	object
> 	 */
> 	protected $db;
33c57
< 	 * Constructor
---
> 	 * Fields data
35c59,64
< 	 * Grabs the CI super object instance so we can access it.
---
> 	 * @var	array
> 	 */
> 	public $fields		= array();
> 
> 	/**
> 	 * Keys data
36a66
> 	 * @var	array
38c68,167
< 	function __construct()
---
> 	public $keys		= array();
> 
> 	/**
> 	 * Primary Keys data
> 	 *
> 	 * @var	array
> 	 */
> 	public $primary_keys	= array();
> 
> 	/**
> 	 * Database character set
> 	 *
> 	 * @var	string
> 	 */
> 	public $db_char_set	= '';
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * CREATE DATABASE statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_create_database	= 'CREATE DATABASE %s';
> 
> 	/**
> 	 * DROP DATABASE statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_drop_database	= 'DROP DATABASE %s';
> 
> 	/**
> 	 * CREATE TABLE statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_create_table	= "%s %s (%s\n)";
> 
> 	/**
> 	 * CREATE TABLE IF statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_create_table_if	= 'CREATE TABLE IF NOT EXISTS';
> 
> 	/**
> 	 * CREATE TABLE keys flag
> 	 *
> 	 * Whether table keys are created from within the
> 	 * CREATE TABLE statement.
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_create_table_keys	= FALSE;
> 
> 	/**
> 	 * DROP TABLE IF EXISTS statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_drop_table_if	= 'DROP TABLE IF EXISTS';
> 
> 	/**
> 	 * RENAME TABLE statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_rename_table	= 'ALTER TABLE %s RENAME TO %s;';
> 
> 	/**
> 	 * UNSIGNED support
> 	 *
> 	 * @var	bool|array
> 	 */
> 	protected $_unsigned		= TRUE;
> 
> 	/**
> 	 * NULL value representation in CREATE/ALTER TABLE statements
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_null		= '';
> 
> 	/**
> 	 * DEFAULT value representation in CREATE/ALTER TABLE statements
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_default		= ' DEFAULT ';
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
> 	 *
> 	 * @param	object	&$db	Database object
> 	 * @return	void
> 	 */
> 	public function __construct(&$db)
40,43c169,170
< 		// Assign the main database object to $this->db
< 		$CI =& get_instance();
< 		$this->db =& $CI->db;
< 		log_message('debug', "Database Forge Class Initialized");
---
> 		$this->db =& $db;
> 		log_message('info', 'Database Forge Class Initialized');
51,52c178
< 	 * @access	public
< 	 * @param	string	the database name
---
> 	 * @param	string	$db_name
55c181,187
< 	function create_database($db_name)
---
> 	public function create_database($db_name)
> 	{
> 		if ($this->_create_database === FALSE)
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
> 		elseif ( ! $this->db->query(sprintf($this->_create_database, $db_name, $this->db->char_set, $this->db->dbcollat)))
57c189,190
< 		$sql = $this->_create_database($db_name);
---
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unable_to_drop') : FALSE;
> 		}
59c192
< 		if (is_bool($sql))
---
> 		if ( ! empty($this->db->data_cache['db_names']))
61c194
< 			return $sql;
---
> 			$this->db->data_cache['db_names'][] = $db_name;
64c197
< 		return $this->db->query($sql);
---
> 		return TRUE;
72,73c205
< 	 * @access	public
< 	 * @param	string	the database name
---
> 	 * @param	string	$db_name
76c208,210
< 	function drop_database($db_name)
---
> 	public function drop_database($db_name)
> 	{
> 		if ($this->_drop_database === FALSE)
78c212,217
< 		$sql = $this->_drop_database($db_name);
---
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
> 		elseif ( ! $this->db->query(sprintf($this->_drop_database, $db_name)))
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unable_to_drop') : FALSE;
> 		}
80c219
< 		if (is_bool($sql))
---
> 		if ( ! empty($this->db->data_cache['db_names']))
82c221,225
< 			return $sql;
---
> 			$key = array_search(strtolower($db_name), array_map('strtolower', $this->db->data_cache['db_names']), TRUE);
> 			if ($key !== FALSE)
> 			{
> 				unset($this->db->data_cache['db_names'][$key]);
> 			}
85c228
< 		return $this->db->query($sql);
---
> 		return TRUE;
93,96c236,238
< 	 * @access	public
< 	 * @param	string	key
< 	 * @param	string	type
< 	 * @return	void
---
> 	 * @param	string	$key
> 	 * @param	bool	$primary
> 	 * @return	CI_DB_forge
98c240
< 	function add_key($key = '', $primary = FALSE)
---
> 	public function add_key($key, $primary = FALSE)
100c242,248
< 		if (is_array($key))
---
> 		// DO NOT change this! This condition is only applicable
> 		// for PRIMARY keys because you can only have one such,
> 		// and therefore all fields you add to it will be included
> 		// in the same, composite PRIMARY KEY.
> 		//
> 		// It's not the same for regular indexes.
> 		if ($primary === TRUE && is_array($key))
107,112c255
< 			return;
< 		}
< 
< 		if ($key == '')
< 		{
< 			show_error('Key information is required for that operation.');
---
> 			return $this;
122a266,267
> 
> 		return $this;
130,132c275,276
< 	 * @access	public
< 	 * @param	string	collation
< 	 * @return	void
---
> 	 * @param	array	$field
> 	 * @return	CI_DB_forge
134,136c278
< 	function add_field($field = '')
< 	{
< 		if ($field == '')
---
> 	public function add_field($field)
138,140d279
< 			show_error('Field information is required.');
< 		}
< 
143c282
< 			if ($field == 'id')
---
> 			if ($field === 'id')
169a309
> 		return $this;
177,178c317,319
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table		Table name
> 	 * @param	bool	$if_not_exists	Whether to add IF NOT EXISTS condition
> 	 * @param	array	$attributes	Associative array of table attributes
181c322
< 	function create_table($table = '', $if_not_exists = FALSE)
---
> 	public function create_table($table, $if_not_exists = FALSE, array $attributes = array())
183c324
< 		if ($table == '')
---
> 		if ($table === '')
186a328,331
> 		else
> 		{
> 			$table = $this->db->dbprefix.$table;
> 		}
188c333
< 		if (count($this->fields) == 0)
---
> 		if (count($this->fields) === 0)
193c338
< 		$sql = $this->_create_table($this->db->dbprefix.$table, $this->fields, $this->primary_keys, $this->keys, $if_not_exists);
---
> 		$sql = $this->_create_table($table, $if_not_exists, $attributes);
194a340,341
> 		if (is_bool($sql))
> 		{
196c343,443
< 		return $this->db->query($sql);
---
> 			if ($sql === FALSE)
> 			{
> 				return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 			}
> 		}
> 
> 		if (($result = $this->db->query($sql)) !== FALSE)
> 		{
> 			empty($this->db->data_cache['table_names']) OR $this->db->data_cache['table_names'][] = $table;
> 
> 			// Most databases don't support creating indexes from within the CREATE TABLE statement
> 			if ( ! empty($this->keys))
> 			{
> 				for ($i = 0, $sqls = $this->_process_indexes($table), $c = count($sqls); $i < $c; $i++)
> 				{
> 					$this->db->query($sqls[$i]);
> 				}
> 			}
> 		}
> 
> 		$this->_reset();
> 		return $result;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Create Table
> 	 *
> 	 * @param	string	$table		Table name
> 	 * @param	bool	$if_not_exists	Whether to add 'IF NOT EXISTS' condition
> 	 * @param	array	$attributes	Associative array of table attributes
> 	 * @return	mixed
> 	 */
> 	protected function _create_table($table, $if_not_exists, $attributes)
> 	{
> 		if ($if_not_exists === TRUE && $this->_create_table_if === FALSE)
> 		{
> 			if ($this->db->table_exists($table))
> 			{
> 				return TRUE;
> 			}
> 			else
> 			{
> 				$if_not_exists = FALSE;
> 			}
> 		}
> 
> 		$sql = ($if_not_exists)
> 			? sprintf($this->_create_table_if, $this->db->escape_identifiers($table))
> 			: 'CREATE TABLE';
> 
> 		$columns = $this->_process_fields(TRUE);
> 		for ($i = 0, $c = count($columns); $i < $c; $i++)
> 		{
> 			$columns[$i] = ($columns[$i]['_literal'] !== FALSE)
> 					? "\n\t".$columns[$i]['_literal']
> 					: "\n\t".$this->_process_column($columns[$i]);
> 		}
> 
> 		$columns = implode(',', $columns)
> 				.$this->_process_primary_keys($table);
> 
> 		// Are indexes created from within the CREATE TABLE statement? (e.g. in MySQL)
> 		if ($this->_create_table_keys === TRUE)
> 		{
> 			$columns .= $this->_process_indexes($table);
> 		}
> 
> 		// _create_table will usually have the following format: "%s %s (%s\n)"
> 		$sql = sprintf($this->_create_table.'%s',
> 			$sql,
> 			$this->db->escape_identifiers($table),
> 			$columns,
> 			$this->_create_table_attr($attributes)
> 		);
> 
> 		return $sql;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * CREATE TABLE attributes
> 	 *
> 	 * @param	array	$attributes	Associative array of table attributes
> 	 * @return	string
> 	 */
> 	protected function _create_table_attr($attributes)
> 	{
> 		$sql = '';
> 
> 		foreach (array_keys($attributes) as $key)
> 		{
> 			if (is_string($key))
> 			{
> 				$sql .= ' '.strtoupper($key).' '.$attributes[$key];
> 			}
> 		}
> 
> 		return $sql;
204,205c451,452
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table_name	Table name
> 	 * @param	bool	$if_exists	Whether to add an IF EXISTS condition
208c455
< 	function drop_table($table_name)
---
> 	public function drop_table($table_name, $if_exists = FALSE)
210c457,460
< 		$sql = $this->_drop_table($this->db->dbprefix.$table_name);
---
> 		if ($table_name === '')
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_table_name_required') : FALSE;
> 		}
212c462
< 		if (is_bool($sql))
---
> 		if (($query = $this->_drop_table($this->db->dbprefix.$table_name, $if_exists)) === TRUE)
214c464
< 			return $sql;
---
> 			return TRUE;
217c467,512
< 		return $this->db->query($sql);
---
> 		$query = $this->db->query($query);
> 
> 		// Update table list cache
> 		if ($query && ! empty($this->db->data_cache['table_names']))
> 		{
> 			$key = array_search(strtolower($this->db->dbprefix.$table_name), array_map('strtolower', $this->db->data_cache['table_names']), TRUE);
> 			if ($key !== FALSE)
> 			{
> 				unset($this->db->data_cache['table_names'][$key]);
> 			}
> 		}
> 
> 		return $query;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Drop Table
> 	 *
> 	 * Generates a platform-specific DROP TABLE string
> 	 *
> 	 * @param	string	$table		Table name
> 	 * @param	bool	$if_exists	Whether to add an IF EXISTS condition
> 	 * @return	string
> 	 */
> 	protected function _drop_table($table, $if_exists)
> 	{
> 		$sql = 'DROP TABLE';
> 
> 		if ($if_exists)
> 		{
> 			if ($this->_drop_table_if === FALSE)
> 			{
> 				if ( ! $this->db->table_exists($table))
> 				{
> 					return TRUE;
> 				}
> 			}
> 			else
> 			{
> 				$sql = sprintf($this->_drop_table_if, $this->db->escape_identifiers($table));
> 			}
> 		}
> 
> 		return $sql.' '.$this->db->escape_identifiers($table);
225,227c520,521
< 	 * @access	public
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
---
> 	 * @param	string	$table_name	Old table name
> 	 * @param	string	$new_table_name	New table name
230c524
< 	function rename_table($table_name, $new_table_name)
---
> 	public function rename_table($table_name, $new_table_name)
232c526
< 		if ($table_name == '' OR $new_table_name == '')
---
> 		if ($table_name === '' OR $new_table_name === '')
234a529,533
> 			return FALSE;
> 		}
> 		elseif ($this->_rename_table === FALSE)
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
237,238c536,550
< 		$sql = $this->_rename_table($this->db->dbprefix.$table_name, $this->db->dbprefix.$new_table_name);
< 		return $this->db->query($sql);
---
> 		$result = $this->db->query(sprintf($this->_rename_table,
> 						$this->db->escape_identifiers($this->db->dbprefix.$table_name),
> 						$this->db->escape_identifiers($this->db->dbprefix.$new_table_name))
> 					);
> 
> 		if ($result && ! empty($this->db->data_cache['table_names']))
> 		{
> 			$key = array_search(strtolower($this->db->dbprefix.$table_name), array_map('strtolower', $this->db->data_cache['table_names']), TRUE);
> 			if ($key !== FALSE)
> 			{
> 				$this->db->data_cache['table_names'][$key] = $this->db->dbprefix.$new_table_name;
> 			}
> 		}
> 
> 		return $result;
246,249c558,561
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	string	the column name
< 	 * @param	string	the column definition
---
> 	 * @todo	Remove deprecated $_after option in 3.1+
> 	 * @param	string	$table	Table name
> 	 * @param	array	$field	Column definition
> 	 * @param	string	$_after	Column for AFTER clause (deprecated)
252c564,569
< 	function add_column($table = '', $field = array(), $after_field = '')
---
> 	public function add_column($table, $field, $_after = NULL)
> 	{
> 		// Work-around for literal column definitions
> 		is_array($field) OR $field = array($field);
> 
> 		foreach (array_keys($field) as $k)
254c571,572
< 		if ($table == '')
---
> 			// Backwards-compatibility work-around for MySQL/CUBRID AFTER clause (remove in 3.1+)
> 			if ($_after !== NULL && is_array($field[$k]) && ! isset($field[$k]['after']))
256c574,577
< 			show_error('A table name is required for that operation.');
---
> 				$field[$k]['after'] = $_after;
> 			}
> 
> 			$this->add_field(array($k => $field[$k]));
259,260c580,585
< 		// add field info into field array, but we can only do one at a time
< 		// so we cycle through
---
> 		$sqls = $this->_alter_table('ADD', $this->db->dbprefix.$table, $this->_process_fields());
> 		$this->_reset();
> 		if ($sqls === FALSE)
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
262c587,632
< 		foreach ($field as $k => $v)
---
> 		for ($i = 0, $c = count($sqls); $i < $c; $i++)
> 		{
> 			if ($this->db->query($sqls[$i]) === FALSE)
> 			{
> 				return FALSE;
> 			}
> 		}
> 
> 		return TRUE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Column Drop
> 	 *
> 	 * @param	string	$table		Table name
> 	 * @param	string	$column_name	Column name
> 	 * @return	bool
> 	 */
> 	public function drop_column($table, $column_name)
> 	{
> 		$sql = $this->_alter_table('DROP', $this->db->dbprefix.$table, $column_name);
> 		if ($sql === FALSE)
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
> 
> 		return $this->db->query($sql);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Column Modify
> 	 *
> 	 * @param	string	$table	Table name
> 	 * @param	string	$field	Column definition
> 	 * @return	bool
> 	 */
> 	public function modify_column($table, $field)
> 	{
> 		// Work-around for literal column definitions
> 		is_array($field) OR $field = array($field);
> 
> 		foreach (array_keys($field) as $k)
264a635
> 		}
266c637
< 			if (count($this->fields) == 0)
---
> 		if (count($this->fields) === 0)
271,272c642
< 			$sql = $this->_alter_table('ADD', $this->db->dbprefix.$table, $this->fields, $after_field);
< 
---
> 		$sqls = $this->_alter_table('CHANGE', $this->db->dbprefix.$table, $this->_process_fields());
273a644,647
> 		if ($sqls === FALSE)
> 		{
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
275c649,651
< 			if ($this->db->query($sql) === FALSE)
---
> 		for ($i = 0, $c = count($sqls); $i < $c; $i++)
> 		{
> 			if ($this->db->query($sqls[$i]) === FALSE)
281a658
> 	}
282a660,691
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * ALTER TABLE
> 	 *
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
> 	 */
> 	protected function _alter_table($alter_type, $table, $field)
> 	{
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table).' ';
> 
> 		// DROP has everything it needs now.
> 		if ($alter_type === 'DROP')
> 		{
> 			return $sql.'DROP COLUMN '.$this->db->escape_identifiers($field);
> 		}
> 
> 		$sql .= ($alter_type === 'ADD')
> 			? 'ADD '
> 			: $alter_type.' COLUMN ';
> 
> 		$sqls = array();
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
> 		{
> 			$sqls[] = $sql
> 				.($field[$i]['_literal'] !== FALSE ? $field[$i]['_literal'] : $this->_process_column($field[$i]));
> 		}
> 
> 		return $sqls;
288c697
< 	 * Column Drop
---
> 	 * Process fields
290,293c699,700
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	string	the column name
< 	 * @return	bool
---
> 	 * @param	bool	$create_table
> 	 * @return	array
295c702
< 	function drop_column($table = '', $column_name = '')
---
> 	protected function _process_fields($create_table = FALSE)
296a704
> 		$fields = array();
298c706
< 		if ($table == '')
---
> 		foreach ($this->fields as $key => $attributes)
300c708,711
< 			show_error('A table name is required for that operation.');
---
> 			if (is_int($key) && ! is_array($attributes))
> 			{
> 				$fields[] = array('_literal' => $attributes);
> 				continue;
303c714,716
< 		if ($column_name == '')
---
> 			$attributes = array_change_key_case($attributes, CASE_UPPER);
> 
> 			if ($create_table === TRUE && empty($attributes['TYPE']))
305c718
< 			show_error('A column name is required for that operation.');
---
> 				continue;
308c721
< 		$sql = $this->_alter_table('DROP', $this->db->dbprefix.$table, $column_name);
---
> 			isset($attributes['TYPE']) && $this->_attr_type($attributes);
310c723,794
< 		return $this->db->query($sql);
---
> 			$field = array(
> 				'name'			=> $key,
> 				'new_name'		=> isset($attributes['NAME']) ? $attributes['NAME'] : NULL,
> 				'type'			=> isset($attributes['TYPE']) ? $attributes['TYPE'] : NULL,
> 				'length'		=> '',
> 				'unsigned'		=> '',
> 				'null'			=> '',
> 				'unique'		=> '',
> 				'default'		=> '',
> 				'auto_increment'	=> '',
> 				'_literal'		=> FALSE
> 			);
> 
> 			isset($attributes['TYPE']) && $this->_attr_unsigned($attributes, $field);
> 
> 			if ($create_table === FALSE)
> 			{
> 				if (isset($attributes['AFTER']))
> 				{
> 					$field['after'] = $attributes['AFTER'];
> 				}
> 				elseif (isset($attributes['FIRST']))
> 				{
> 					$field['first'] = (bool) $attributes['FIRST'];
> 				}
> 			}
> 
> 			$this->_attr_default($attributes, $field);
> 
> 			if (isset($attributes['NULL']))
> 			{
> 				if ($attributes['NULL'] === TRUE)
> 				{
> 					$field['null'] = empty($this->_null) ? '' : ' '.$this->_null;
> 				}
> 				else
> 				{
> 					$field['null'] = ' NOT NULL';
> 				}
> 			}
> 			elseif ($create_table === TRUE)
> 			{
> 				$field['null'] = ' NOT NULL';
> 			}
> 
> 			$this->_attr_auto_increment($attributes, $field);
> 			$this->_attr_unique($attributes, $field);
> 
> 			if (isset($attributes['COMMENT']))
> 			{
> 				$field['comment'] = $this->db->escape($attributes['COMMENT']);
> 			}
> 
> 			if (isset($attributes['TYPE']) && ! empty($attributes['CONSTRAINT']))
> 			{
> 				switch (strtoupper($attributes['TYPE']))
> 				{
> 					case 'ENUM':
> 					case 'SET':
> 						$attributes['CONSTRAINT'] = $this->db->escape($attributes['CONSTRAINT']);
> 					default:
> 						$field['length'] = is_array($attributes['CONSTRAINT'])
> 							? '('.implode(',', $attributes['CONSTRAINT']).')'
> 							: '('.$attributes['CONSTRAINT'].')';
> 						break;
> 				}
> 			}
> 
> 			$fields[] = $field;
> 		}
> 
> 		return $fields;
316c800
< 	 * Column Modify
---
> 	 * Process column
318,322c802,803
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	string	the column name
< 	 * @param	string	the column definition
< 	 * @return	bool
---
> 	 * @param	array	$field
> 	 * @return	string
324c805
< 	function modify_column($table = '', $field = array())
---
> 	protected function _process_column($field)
326c807,826
< 		if ($table == '')
---
> 		return $this->db->escape_identifiers($field['name'])
> 			.' '.$field['type'].$field['length']
> 			.$field['unsigned']
> 			.$field['default']
> 			.$field['null']
> 			.$field['auto_increment']
> 			.$field['unique'];
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Field attribute TYPE
> 	 *
> 	 * Performs a data type mapping between different databases.
> 	 *
> 	 * @param	array	&$attributes
> 	 * @return	void
> 	 */
> 	protected function _attr_type(&$attributes)
328c828
< 			show_error('A table name is required for that operation.');
---
> 		// Usually overridden by drivers
331,332c831
< 		// add field info into field array, but we can only do one at a time
< 		// so we cycle through
---
> 	// --------------------------------------------------------------------
334c833,849
< 		foreach ($field as $k => $v)
---
> 	/**
> 	 * Field attribute UNSIGNED
> 	 *
> 	 * Depending on the _unsigned property value:
> 	 *
> 	 *	- TRUE will always set $field['unsigned'] to 'UNSIGNED'
> 	 *	- FALSE will always set $field['unsigned'] to ''
> 	 *	- array(TYPE) will set $field['unsigned'] to 'UNSIGNED',
> 	 *		if $attributes['TYPE'] is found in the array
> 	 *	- array(TYPE => UTYPE) will change $field['type'],
> 	 *		from TYPE to UTYPE in case of a match
> 	 *
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
> 	 */
> 	protected function _attr_unsigned(&$attributes, &$field)
336,337c851
< 			// If no name provided, use the current name
< 			if ( ! isset($field[$k]['name']))
---
> 		if (empty($attributes['UNSIGNED']) OR $attributes['UNSIGNED'] !== TRUE)
339c853
< 				$field[$k]['name'] = $k;
---
> 			return;
342c856,857
< 			$this->add_field(array($k => $field[$k]));
---
> 		// Reset the attribute in order to avoid issues if we do type conversion
> 		$attributes['UNSIGNED'] = FALSE;
344c859
< 			if (count($this->fields) == 0)
---
> 		if (is_array($this->_unsigned))
346c861,872
< 				show_error('Field information is required.');
---
> 			foreach (array_keys($this->_unsigned) as $key)
> 			{
> 				if (is_int($key) && strcasecmp($attributes['TYPE'], $this->_unsigned[$key]) === 0)
> 				{
> 					$field['unsigned'] = ' UNSIGNED';
> 					return;
> 				}
> 				elseif (is_string($key) && strcasecmp($attributes['TYPE'], $key) === 0)
> 				{
> 					$field['type'] = $key;
> 					return;
> 				}
349c875,876
< 			$sql = $this->_alter_table('CHANGE', $this->db->dbprefix.$table, $this->fields);
---
> 			return;
> 		}
351c878,881
< 			$this->_reset();
---
> 		$field['unsigned'] = ($this->_unsigned === TRUE) ? ' UNSIGNED' : '';
> 	}
> 
> 	// --------------------------------------------------------------------
353c883,890
< 			if ($this->db->query($sql) === FALSE)
---
> 	/**
> 	 * Field attribute DEFAULT
> 	 *
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
> 	 */
> 	protected function _attr_default(&$attributes, &$field)
355c892,910
< 				return FALSE;
---
> 		if ($this->_default === FALSE)
> 		{
> 			return;
> 		}
> 
> 		if (array_key_exists('DEFAULT', $attributes))
> 		{
> 			if ($attributes['DEFAULT'] === NULL)
> 			{
> 				$field['default'] = empty($this->_null) ? '' : $this->_default.$this->_null;
> 
> 				// Override the NULL attribute if that's our default
> 				$attributes['NULL'] = TRUE;
> 				$field['null'] = empty($this->_null) ? '' : ' '.$this->_null;
> 			}
> 			else
> 			{
> 				$field['default'] = $this->_default.$this->db->escape($attributes['DEFAULT']);
> 			}
359c914,1015
< 		return TRUE;
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Field attribute UNIQUE
> 	 *
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
> 	 */
> 	protected function _attr_unique(&$attributes, &$field)
> 	{
> 		if ( ! empty($attributes['UNIQUE']) && $attributes['UNIQUE'] === TRUE)
> 		{
> 			$field['unique'] = ' UNIQUE';
> 		}
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Field attribute AUTO_INCREMENT
> 	 *
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
> 	 */
> 	protected function _attr_auto_increment(&$attributes, &$field)
> 	{
> 		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
> 		{
> 			$field['auto_increment'] = ' AUTO_INCREMENT';
> 		}
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Process primary keys
> 	 *
> 	 * @param	string	$table	Table name
> 	 * @return	string
> 	 */
> 	protected function _process_primary_keys($table)
> 	{
> 		$sql = '';
> 
> 		for ($i = 0, $c = count($this->primary_keys); $i < $c; $i++)
> 		{
> 			if ( ! isset($this->fields[$this->primary_keys[$i]]))
> 			{
> 				unset($this->primary_keys[$i]);
> 			}
> 		}
> 
> 		if (count($this->primary_keys) > 0)
> 		{
> 			$sql .= ",\n\tCONSTRAINT ".$this->db->escape_identifiers('pk_'.$table)
> 				.' PRIMARY KEY('.implode(', ', $this->db->escape_identifiers($this->primary_keys)).')';
> 		}
> 
> 		return $sql;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Process indexes
> 	 *
> 	 * @param	string	$table
> 	 * @return	string
> 	 */
> 	protected function _process_indexes($table)
> 	{
> 		$sqls = array();
> 
> 		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
> 		{
> 			if (is_array($this->keys[$i]))
> 			{
> 				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
> 				{
> 					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
> 					{
> 						unset($this->keys[$i][$i2]);
> 						continue;
> 					}
> 				}
> 			}
> 			elseif ( ! isset($this->fields[$this->keys[$i]]))
> 			{
> 				unset($this->keys[$i]);
> 				continue;
> 			}
> 
> 			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
> 
> 			$sqls[] = 'CREATE INDEX '.$this->db->escape_identifiers($table.'_'.implode('_', $this->keys[$i]))
> 				.' ON '.$this->db->escape_identifiers($table)
> 				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).');';
> 		}
> 
> 		return $sqls;
369d1024
< 	 * @access	private
372c1027
< 	function _reset()
---
> 	protected function _reset()
374,376c1029
< 		$this->fields		= array();
< 		$this->keys			= array();
< 		$this->primary_keys	= array();
---
> 		$this->fields = $this->keys = $this->primary_keys = array();
380,382d1032
< 
< /* End of file DB_forge.php */
< /* Location: ./system/database/DB_forge.php */
\ No newline at end of file
Only in opensourcepos/system/database: DB_query_builder.php
diff -rBwi --ignore-file-name-case pos-prod/system/database/DB_result.php opensourcepos/system/database/DB_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
31,38c53,146
< 	var $conn_id				= NULL;
< 	var $result_id				= NULL;
< 	var $result_array			= array();
< 	var $result_object			= array();
< 	var $custom_result_object	= array();
< 	var $current_row			= 0;
< 	var $num_rows				= 0;
< 	var $row_data				= NULL;
---
> 	/**
> 	 * Connection ID
> 	 *
> 	 * @var	resource|object
> 	 */
> 	public $conn_id;
> 
> 	/**
> 	 * Result ID
> 	 *
> 	 * @var	resource|object
> 	 */
> 	public $result_id;
> 
> 	/**
> 	 * Result Array
> 	 *
> 	 * @var	array[]
> 	 */
> 	public $result_array			= array();
> 
> 	/**
> 	 * Result Object
> 	 *
> 	 * @var	object[]
> 	 */
> 	public $result_object			= array();
> 
> 	/**
> 	 * Custom Result Object
> 	 *
> 	 * @var	object[]
> 	 */
> 	public $custom_result_object		= array();
> 
> 	/**
> 	 * Current Row index
> 	 *
> 	 * @var	int
> 	 */
> 	public $current_row			= 0;
> 
> 	/**
> 	 * Number of rows
> 	 *
> 	 * @var	int
> 	 */
> 	public $num_rows;
> 
> 	/**
> 	 * Row data
> 	 *
> 	 * @var	array
> 	 */
> 	public $row_data;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	object	$driver_object
> 	 * @return	void
> 	 */
> 	public function __construct(&$driver_object)
> 	{
> 		$this->conn_id = $driver_object->conn_id;
> 		$this->result_id = $driver_object->result_id;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Number of rows in the result set
> 	 *
> 	 * @return	int
> 	 */
> 	public function num_rows()
> 	{
> 		if (is_int($this->num_rows))
> 		{
> 			return $this->num_rows;
> 		}
> 		elseif (count($this->result_array) > 0)
> 		{
> 			return $this->num_rows = count($this->result_array);
> 		}
> 		elseif (count($this->result_object) > 0)
> 		{
> 			return $this->num_rows = count($this->result_object);
> 		}
> 
> 		return $this->num_rows = count($this->result_array());
> 	}
39a148
> 	// --------------------------------------------------------------------
44,46c153,154
< 	 * @access	public
< 	 * @param	string	can be "object" or "array"
< 	 * @return	mixed	either a result object or array
---
> 	 * @param	string	$type	'object', 'array' or a custom class name
> 	 * @return	array
50,52c158,169
< 		if ($type == 'array') return $this->result_array();
< 		else if ($type == 'object') return $this->result_object();
< 		else return $this->custom_result_object($type);
---
> 		if ($type === 'array')
> 		{
> 			return $this->result_array();
> 		}
> 		elseif ($type === 'object')
> 		{
> 			return $this->result_object();
> 		}
> 		else
> 		{
> 			return $this->custom_result_object($type);
> 		}
60,61c177,178
< 	 * @param class_name A string that represents the type of object you want back
< 	 * @return array of objects
---
> 	 * @param	string	$class_name
> 	 * @return	array
65c182
< 		if (array_key_exists($class_name, $this->custom_result_object))
---
> 		if (isset($this->custom_result_object[$class_name]))
69,70c186
< 
< 		if ($this->result_id === FALSE OR $this->num_rows() == 0)
---
> 		elseif ( ! $this->result_id OR $this->num_rows === 0)
75,77c191,200
< 		// add the data to the object
< 		$this->_data_seek(0);
< 		$result_object = array();
---
> 		// Don't fetch the result set again if we already have it
> 		$_data = NULL;
> 		if (($c = count($this->result_array)) > 0)
> 		{
> 			$_data = 'result_array';
> 		}
> 		elseif (($c = count($this->result_object)) > 0)
> 		{
> 			$_data = 'result_object';
> 		}
79c202,204
< 		while ($row = $this->_fetch_object())
---
> 		if ($_data !== NULL)
> 		{
> 			for ($i = 0; $i < $c; $i++)
81c206
< 			$object = new $class_name();
---
> 				$this->custom_result_object[$class_name][$i] = new $class_name();
83c208
< 			foreach ($row as $key => $value)
---
> 				foreach ($this->{$_data}[$i] as $key => $value)
85c210,211
< 				$object->$key = $value;
---
> 					$this->custom_result_object[$class_name][$i]->$key = $value;
> 				}
88c214,222
< 			$result_object[] = $object;
---
> 			return $this->custom_result_object[$class_name];
> 		}
> 
> 		is_null($this->row_data) OR $this->data_seek(0);
> 		$this->custom_result_object[$class_name] = array();
> 
> 		while ($row = $this->_fetch_object($class_name))
> 		{
> 			$this->custom_result_object[$class_name][] = $row;
91,92c225
< 		// return the array
< 		return $this->custom_result_object[$class_name] = $result_object;
---
> 		return $this->custom_result_object[$class_name];
100,101c233
< 	 * @access	public
< 	 * @return	object
---
> 	 * @return	array
110,113c242,245
< 		// In the event that query caching is on the result_id variable
< 		// will return FALSE since there isn't a valid SQL resource so
< 		// we'll simply return an empty array.
< 		if ($this->result_id === FALSE OR $this->num_rows() == 0)
---
> 		// In the event that query caching is on, the result_id variable
> 		// will not be a valid resource so we'll simply return an empty
> 		// array.
> 		if ( ! $this->result_id OR $this->num_rows === 0)
118c250,260
< 		$this->_data_seek(0);
---
> 		if (($c = count($this->result_array)) > 0)
> 		{
> 			for ($i = 0; $i < $c; $i++)
> 			{
> 				$this->result_object[$i] = (object) $this->result_array[$i];
> 			}
> 
> 			return $this->result_object;
> 		}
> 
> 		is_null($this->row_data) OR $this->data_seek(0);
132d273
< 	 * @access	public
142,145c283,286
< 		// In the event that query caching is on the result_id variable
< 		// will return FALSE since there isn't a valid SQL resource so
< 		// we'll simply return an empty array.
< 		if ($this->result_id === FALSE OR $this->num_rows() == 0)
---
> 		// In the event that query caching is on, the result_id variable
> 		// will not be a valid resource so we'll simply return an empty
> 		// array.
> 		if ( ! $this->result_id OR $this->num_rows === 0)
150c291,301
< 		$this->_data_seek(0);
---
> 		if (($c = count($this->result_object)) > 0)
> 		{
> 			for ($i = 0; $i < $c; $i++)
> 			{
> 				$this->result_array[$i] = (array) $this->result_object[$i];
> 			}
> 
> 			return $this->result_array;
> 		}
> 
> 		is_null($this->row_data) OR $this->data_seek(0);
162c313,315
< 	 * Query result.  Acts as a wrapper function for the following functions.
---
> 	 * Row
> 	 *
> 	 * A wrapper method.
164,167c317,319
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string	can be "object" or "array"
< 	 * @return	mixed	either a result object or array
---
> 	 * @param	mixed	$n
> 	 * @param	string	$type	'object' or 'array'
> 	 * @return	mixed
174c326,329
< 			if ( ! is_array($this->row_data))
---
> 			is_array($this->row_data) OR $this->row_data = $this->row_array(0);
> 
> 			// array_key_exists() instead of isset() to allow for NULL values
> 			if (empty($this->row_data) OR ! array_key_exists($n, $this->row_data))
176c331
< 				$this->row_data = $this->row_array(0);
---
> 				return NULL;
179,181d333
< 			// array_key_exists() instead of isset() to allow for MySQL NULL values
< 			if (array_key_exists($n, $this->row_data))
< 			{
184,186d335
< 			// reset the $n variable if the result was not achieved
< 			$n = 0;
< 		}
188,189c337,338
< 		if ($type == 'object') return $this->row_object($n);
< 		else if ($type == 'array') return $this->row_array($n);
---
> 		if ($type === 'object') return $this->row_object($n);
> 		elseif ($type === 'array') return $this->row_array($n);
198,199c347,349
< 	 * @access	public
< 	 * @return	object
---
> 	 * @param	mixed	$key
> 	 * @param	mixed	$value
> 	 * @return	void
219c368
< 		if ($key != '' AND ! is_null($value))
---
> 		if ($key !== '' && $value !== NULL)
230c379,380
< 	 * @access	public
---
> 	 * @param	int	$n
> 	 * @param	string	$type
235c385
< 		$result = $this->custom_result_object($type);
---
> 		isset($this->custom_result_object[$type]) OR $this->custom_result_object($type);
237c387
< 		if (count($result) == 0)
---
> 		if (count($this->custom_result_object[$type]) === 0)
239c389
< 			return $result;
---
> 			return NULL;
242c392
< 		if ($n != $this->current_row AND isset($result[$n]))
---
> 		if ($n !== $this->current_row && isset($this->custom_result_object[$type][$n]))
247c397
< 		return $result[$this->current_row];
---
> 		return $this->custom_result_object[$type][$this->current_row];
249a400,401
> 	// --------------------------------------------------------------------
> 
253c405
< 	 * @access	public
---
> 	 * @param	int	$n
259,260c411
< 
< 		if (count($result) == 0)
---
> 		if (count($result) === 0)
262c413
< 			return $result;
---
> 			return NULL;
265c416
< 		if ($n != $this->current_row AND isset($result[$n]))
---
> 		if ($n !== $this->current_row && isset($result[$n]))
278c429
< 	 * @access	public
---
> 	 * @param	int	$n
284,285c435
< 
< 		if (count($result) == 0)
---
> 		if (count($result) === 0)
287c437
< 			return $result;
---
> 			return NULL;
290c440
< 		if ($n != $this->current_row AND isset($result[$n]))
---
> 		if ($n !== $this->current_row && isset($result[$n]))
304,305c453,454
< 	 * @access	public
< 	 * @return	object
---
> 	 * @param	string	$type
> 	 * @return	mixed
310,315c459
< 
< 		if (count($result) == 0)
< 		{
< 			return $result;
< 		}
< 		return $result[0];
---
> 		return (count($result) === 0) ? NULL : $result[0];
323,324c467,468
< 	 * @access	public
< 	 * @return	object
---
> 	 * @param	string	$type
> 	 * @return	mixed
329,334c473
< 
< 		if (count($result) == 0)
< 		{
< 			return $result;
< 		}
< 		return $result[count($result) -1];
---
> 		return (count($result) === 0) ? NULL : $result[count($result) - 1];
342,343c481,482
< 	 * @access	public
< 	 * @return	object
---
> 	 * @param	string	$type
> 	 * @return	mixed
348,349c487
< 
< 		if (count($result) == 0)
---
> 		if (count($result) === 0)
351c489
< 			return $result;
---
> 			return NULL;
354,359c492,494
< 		if (isset($result[$this->current_row + 1]))
< 		{
< 			++$this->current_row;
< 		}
< 
< 		return $result[$this->current_row];
---
> 		return isset($result[$this->current_row + 1])
> 			? $result[++$this->current_row]
> 			: NULL;
367,368c502,503
< 	 * @access	public
< 	 * @return	object
---
> 	 * @param	string	$type
> 	 * @return	mixed
373,374c508
< 
< 		if (count($result) == 0)
---
> 		if (count($result) === 0)
376c510
< 			return $result;
---
> 			return NULL;
389c523,545
< 	 * The following functions are normally overloaded by the identically named
---
> 	 * Returns an unbuffered row and move pointer to next row
> 	 *
> 	 * @param	string	$type	'array', 'object' or a custom class name
> 	 * @return	mixed
> 	 */
> 	public function unbuffered_row($type = 'object')
> 	{
> 		if ($type === 'array')
> 		{
> 			return $this->_fetch_assoc();
> 		}
> 		elseif ($type === 'object')
> 		{
> 			return $this->_fetch_object();
> 		}
> 
> 		return $this->_fetch_object($type);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * The following methods are normally overloaded by the identically named
397,404d552
< 	public function num_rows() { return $this->num_rows; }
< 	public function num_fields() { return 0; }
< 	public function list_fields() { return array(); }
< 	public function field_data() { return array(); }
< 	public function free_result() { return TRUE; }
< 	protected function _data_seek() { return TRUE; }
< 	protected function _fetch_assoc() { return array(); }
< 	protected function _fetch_object() { return array(); }
405a554,646
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Number of fields in the result set
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @return	int
> 	 */
> 	public function num_fields()
> 	{
> 		return 0;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fetch Field Names
> 	 *
> 	 * Generates an array of column names.
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @return	array
> 	 */
> 	public function list_fields()
> 	{
> 		return array();
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Field data
> 	 *
> 	 * Generates an array of objects containing field meta-data.
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @return	array
> 	 */
> 	public function field_data()
> 	{
> 		return array();
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Free the result
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @return	void
> 	 */
> 	public function free_result()
> 	{
> 		$this->result_id = FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Data Seek
> 	 *
> 	 * Moves the internal pointer to the desired offset. We call
> 	 * this internally before fetching results to make sure the
> 	 * result set starts at zero.
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @param	int	$n
> 	 * @return	bool
> 	 */
> 	public function data_seek($n = 0)
> 	{
> 		return FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Result - associative array
> 	 *
> 	 * Returns the result set as an array.
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @return	array
> 	 */
> 	protected function _fetch_assoc()
> 	{
> 		return array();
407d647
< // END DB_result class
409,410c649,666
< /* End of file DB_result.php */
< /* Location: ./system/database/DB_result.php */
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Result - object
> 	 *
> 	 * Returns the result set as an object.
> 	 *
> 	 * Overridden by driver result classes.
> 	 *
> 	 * @param	string	$class_name
> 	 * @return	object
> 	 */
> 	protected function _fetch_object($class_name = 'stdClass')
> 	{
> 		return array();
> 	}
> 
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/DB_utility.php opensourcepos/system/database/DB_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
25c47
< class CI_DB_utility extends CI_DB_forge {
---
> abstract class CI_DB_utility {
27,28c49,63
< 	var $db;
< 	var $data_cache		= array();
---
> 	/**
> 	 * Database object
> 	 *
> 	 * @var	object
> 	 */
> 	protected $db;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * List databases statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_list_databases		= FALSE;
31c66
< 	 * Constructor
---
> 	 * OPTIMIZE TABLE statement
33c68,73
< 	 * Grabs the CI super object instance so we can access it.
---
> 	 * @var	string
> 	 */
> 	protected $_optimize_table	= FALSE;
> 
> 	/**
> 	 * REPAIR TABLE statement
34a75
> 	 * @var	string
36,40c77,79
< 	function __construct()
< 	{
< 		// Assign the main database object to $this->db
< 		$CI =& get_instance();
< 		$this->db =& $CI->db;
---
> 	protected $_repair_table	= FALSE;
> 
> 	// --------------------------------------------------------------------
42c81,90
< 		log_message('debug', "Database Utility Class Initialized");
---
> 	/**
> 	 * Class constructor
> 	 *
> 	 * @param	object	&$db	Database object
> 	 * @return	void
> 	 */
> 	public function __construct(&$db)
> 	{
> 		$this->db =& $db;
> 		log_message('info', 'Database Utility Class Initialized');
50,51c98
< 	 * @access	public
< 	 * @return	bool
---
> 	 * @return	array
53c100
< 	function list_databases()
---
> 	public function list_databases()
56c103
< 		if (isset($this->data_cache['db_names']))
---
> 		if (isset($this->db->data_cache['db_names']))
58c105
< 			return $this->data_cache['db_names'];
---
> 			return $this->db->data_cache['db_names'];
60,63c107
< 
< 		$query = $this->db->query($this->_list_databases());
< 		$dbs = array();
< 		if ($query->num_rows() > 0)
---
> 		elseif ($this->_list_databases === FALSE)
65c109,115
< 			foreach ($query->result_array() as $row)
---
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
> 
> 		$this->db->data_cache['db_names'] = array();
> 
> 		$query = $this->db->query($this->_list_databases);
> 		if ($query === FALSE)
67c117
< 				$dbs[] = current($row);
---
> 			return $this->db->data_cache['db_names'];
68a119,122
> 
> 		for ($i = 0, $query = $query->result_array(), $c = count($query); $i < $c; $i++)
> 		{
> 			$this->db->data_cache['db_names'][] = current($query[$i]);
71,72c125
< 		$this->data_cache['db_names'] = $dbs;
< 		return $this->data_cache['db_names'];
---
> 		return $this->db->data_cache['db_names'];
80,93c133,136
< 	 * @access	public
< 	 * @param	string
< 	 * @return	boolean
< 	 */
< 	function database_exists($database_name)
< 	{
< 		// Some databases won't have access to the list_databases() function, so
< 		// this is intended to allow them to override with their own functions as
< 		// defined in $driver_utility.php
< 		if (method_exists($this, '_database_exists'))
< 		{
< 			return $this->_database_exists($database_name);
< 		}
< 		else
---
> 	 * @param	string	$database_name
> 	 * @return	bool
> 	 */
> 	public function database_exists($database_name)
95,96c138
< 			return ( ! in_array($database_name, $this->list_databases())) ? FALSE : TRUE;
< 		}
---
> 		return in_array($database_name, $this->list_databases());
105,107c146,147
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	bool
---
> 	 * @param	string	$table_name
> 	 * @return	mixed
109c149
< 	function optimize_table($table_name)
---
> 	public function optimize_table($table_name)
111,113c151
< 		$sql = $this->_optimize_table($table_name);
< 
< 		if (is_bool($sql))
---
> 		if ($this->_optimize_table === FALSE)
115c153
< 				show_error('db_must_use_set');
---
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
118,119c156,161
< 		$query = $this->db->query($sql);
< 		$res = $query->result_array();
---
> 		$query = $this->db->query(sprintf($this->_optimize_table, $this->db->escape_identifiers($table_name)));
> 		if ($query !== FALSE)
> 		{
> 			$query = $query->result_array();
> 			return current($query);
> 		}
121,123c163
< 		// Note: Due to a bug in current() that affects some versions
< 		// of PHP we can not pass function call directly into it
< 		return current($res);
---
> 		return FALSE;
131,132c171
< 	 * @access	public
< 	 * @return	array
---
> 	 * @return	mixed
134c173,175
< 	function optimize_database()
---
> 	public function optimize_database()
> 	{
> 		if ($this->_optimize_table === FALSE)
135a177,179
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
> 		}
> 
139,141c183,184
< 			$sql = $this->_optimize_table($table_name);
< 
< 			if (is_bool($sql))
---
> 			$res = $this->db->query(sprintf($this->_optimize_table, $this->db->escape_identifiers($table_name)));
> 			if (is_bool($res))
143c186
< 				return $sql;
---
> 				return $res;
146,147d188
< 			$query = $this->db->query($sql);
< 
149,151c190
< 			// Note: Due to a bug in current() that affects some versions
< 			// of PHP we can not pass function call directly into it
< 			$res = $query->result_array();
---
> 			$res = $res->result_array();
168,170c207,208
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	bool
---
> 	 * @param	string	$table_name
> 	 * @return	mixed
172c210
< 	function repair_table($table_name)
---
> 	public function repair_table($table_name)
174,176c212
< 		$sql = $this->_repair_table($table_name);
< 
< 		if (is_bool($sql))
---
> 		if ($this->_repair_table === FALSE)
178c214
< 			return $sql;
---
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
181c217,221
< 		$query = $this->db->query($sql);
---
> 		$query = $this->db->query(sprintf($this->_repair_table, $this->db->escape_identifiers($table_name)));
> 		if (is_bool($query))
> 		{
> 			return $query;
> 		}
183,186c223,224
< 		// Note: Due to a bug in current() that affects some versions
< 		// of PHP we can not pass function call directly into it
< 		$res = $query->result_array();
< 		return current($res);
---
> 		$query = $query->result_array();
> 		return current($query);
194,198c232,235
< 	 * @access	public
< 	 * @param	object	The query result object
< 	 * @param	string	The delimiter - comma by default
< 	 * @param	string	The newline character - \n by default
< 	 * @param	string	The enclosure - double quote by default
---
> 	 * @param	object	$query		Query result object
> 	 * @param	string	$delim		Delimiter (default: ,)
> 	 * @param	string	$newline	Newline character (default: \n)
> 	 * @param	string	$enclosure	Enclosure (default: ")
201c238
< 	function csv_from_result($query, $delim = ",", $newline = "\n", $enclosure = '"')
---
> 	public function csv_from_result($query, $delim = ',', $newline = "\n", $enclosure = '"')
216,217c252
< 		$out = rtrim($out);
< 		$out .= $newline;
---
> 		$out = substr($out, 0, -strlen($delim)).$newline;
220c255
< 		foreach ($query->result_array() as $row)
---
> 		while ($row = $query->unbuffered_row('array'))
221a257
> 			$line = array();
224c260
< 				$out .= $enclosure.str_replace($enclosure, $enclosure.$enclosure, $item).$enclosure.$delim;
---
> 				$line[] = $enclosure.str_replace($enclosure, $enclosure.$enclosure, $item).$enclosure;
226,227c262
< 			$out = rtrim($out);
< 			$out .= $newline;
---
> 			$out .= implode($delim, $line).$newline;
238,240c273,274
< 	 * @access	public
< 	 * @param	object	The query result object
< 	 * @param	array	Any preferences
---
> 	 * @param	object	$query	Query result object
> 	 * @param	array	$params	Any preferences
243c277
< 	function xml_from_result($query, $params = array())
---
> 	public function xml_from_result($query, $params = array())
263,264c297
< 		$CI =& get_instance();
< 		$CI->load->helper('xml');
---
> 		get_instance()->load->helper('xml');
267,268c300,301
< 		$xml = "<{$root}>".$newline;
< 		foreach ($query->result_array() as $row)
---
> 		$xml = '<'.$root.'>'.$newline;
> 		while ($row = $query->unbuffered_row())
270,271c303
< 			$xml .= $tab."<{$element}>".$newline;
< 
---
> 			$xml .= $tab.'<'.$element.'>'.$newline;
274c306
< 				$xml .= $tab.$tab."<{$key}>".xml_convert($val)."</{$key}>".$newline;
---
> 				$xml .= $tab.$tab.'<'.$key.'>'.xml_convert($val).'</'.$key.'>'.$newline;
276c308
< 			$xml .= $tab."</{$element}>".$newline;
---
> 			$xml .= $tab.'</'.$element.'>'.$newline;
278d309
< 		$xml .= "</$root>".$newline;
280c311
< 		return $xml;
---
> 		return $xml.'</'.$root.'>'.$newline;
288,289c319,320
< 	 * @access	public
< 	 * @return	void
---
> 	 * @param	array	$params
> 	 * @return	string
291c322
< 	function backup($params = array())
---
> 	public function backup($params = array())
301,302d331
< 		// ------------------------------------------------------
< 
311c340,341
< 							'newline'		=> "\n"
---
> 			'newline'		=> "\n",
> 			'foreign_key_checks'	=> TRUE
326,327d355
< 		// ------------------------------------------------------
< 
330c358
< 		if (count($prefs['tables']) == 0)
---
> 		if (count($prefs['tables']) === 0)
335,336d362
< 		// ------------------------------------------------------
< 
343,344d368
< 		// ------------------------------------------------------
< 
347,348c371,372
< 		if (($prefs['format'] == 'gzip' AND ! @function_exists('gzencode'))
< 		OR ($prefs['format'] == 'zip'  AND ! @function_exists('gzcompress')))
---
> 		if (($prefs['format'] === 'gzip' && ! function_exists('gzencode'))
> 			OR ($prefs['format'] === 'zip' && ! function_exists('gzcompress')))
352c376
< 				return $this->db->display_error('db_unsuported_compression');
---
> 				return $this->db->display_error('db_unsupported_compression');
358,370c382,383
< 		// ------------------------------------------------------
< 
< 		// Set the filename if not provided - Only needed with Zip files
< 		if ($prefs['filename'] == '' AND $prefs['format'] == 'zip')
< 		{
< 			$prefs['filename'] = (count($prefs['tables']) == 1) ? $prefs['tables'] : $this->db->database;
< 			$prefs['filename'] .= '_'.date('Y-m-d_H-i', time());
< 		}
< 
< 		// ------------------------------------------------------
< 
< 		// Was a Gzip file requested?
< 		if ($prefs['format'] == 'gzip')
---
> 		// Was a Zip file requested?
> 		if ($prefs['format'] === 'zip')
372,378c385,386
< 			return gzencode($this->_backup($prefs));
< 		}
< 
< 		// ------------------------------------------------------
< 
< 		// Was a text file requested?
< 		if ($prefs['format'] == 'txt')
---
> 			// Set the filename if not provided (only needed with Zip files)
> 			if ($prefs['filename'] === '')
380c388,389
< 			return $this->_backup($prefs);
---
> 				$prefs['filename'] = (count($prefs['tables']) === 1 ? $prefs['tables'] : $this->db->database)
> 							.date('Y-m-d_H-i', time()).'.sql';
382,386c391
< 
< 		// ------------------------------------------------------
< 
< 		// Was a Zip file requested?
< 		if ($prefs['format'] == 'zip')
---
> 			else
389c394
< 			if (preg_match("|.+?\.zip$|", $prefs['filename']))
---
> 				if (preg_match('|.+?\.zip$|', $prefs['filename']))
395c400
< 			if ( ! preg_match("|.+?\.sql$|", $prefs['filename']))
---
> 				if ( ! preg_match('|.+?\.sql$|', $prefs['filename']))
398a404
> 			}
407c412,414
< 
---
> 		elseif ($prefs['format'] === 'txt') // Was a text file requested?
> 		{
> 			return $this->_backup($prefs);
409c416,418
< 
---
> 		elseif ($prefs['format'] === 'gzip') // Was a Gzip file requested?
> 		{
> 			return gzencode($this->_backup($prefs));
411a421,422
> 		return;
> 	}
413,414c424
< /* End of file DB_utility.php */
< /* Location: ./system/database/DB_utility.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/cubrid/cubrid_driver.php opensourcepos/system/database/drivers/cubrid/cubrid_driver.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		Esen Sagynov
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 2.0.2
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
29c51
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @link		https://codeigniter.com/user_guide/database/
33,35c55,60
< 	// Default CUBRID Broker port. Will be used unless user
< 	// explicitly specifies another one.
< 	const DEFAULT_PORT = 33000;
---
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver = 'cubrid';
37c62,67
< 	var $dbdriver = 'cubrid';
---
> 	/**
> 	 * Auto-commit flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $auto_commit = TRUE;
39,40c69
< 	// The character used for escaping - no need in CUBRID
< 	var	$_escape_char = '';
---
> 	// --------------------------------------------------------------------
42,44c71,76
< 	// clause and character used for LIKE escape sequences - not used in CUBRID
< 	var $_like_escape_str = '';
< 	var $_like_escape_chr = '';
---
> 	/**
> 	 * Identifier escape character
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_escape_char = '`';
47,49c79,81
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
---
> 	 * ORDER BY random keyword
> 	 *
> 	 * @var	array
51,52c83,85
< 	var $_count_string = 'SELECT COUNT(*) AS ';
< 	var $_random_keyword = ' RAND()'; // database specific random keyword
---
> 	protected $_random_keyword = array('RANDOM()', 'RANDOM(%d)');
> 
> 	// --------------------------------------------------------------------
55c88
< 	 * Non-persistent database connection
---
> 	 * Class constructor
57,58c90,91
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @param	array	$params
> 	 * @return	void
60,63c93
< 	function db_connect()
< 	{
< 		// If no port is defined by the user, use the default value
< 		if ($this->port == '')
---
> 	public function __construct($params)
65,68c95
< 			$this->port = self::DEFAULT_PORT;
< 		}
< 
< 		$conn = cubrid_connect($this->hostname, $this->port, $this->database, $this->username, $this->password);
---
> 		parent::__construct($params);
70c97
< 		if ($conn)
---
> 		if (preg_match('/^CUBRID:[^:]+(:[0-9][1-9]{0,4})?:[^:]+:[^:]*:[^:]*:(\?.+)?$/', $this->dsn, $matches))
72,74c99
< 			// Check if a user wants to run queries in dry, i.e. run the
< 			// queries but not commit them.
< 			if (isset($this->auto_commit) && ! $this->auto_commit)
---
> 			if (stripos($matches[2], 'autocommit=off') !== FALSE)
76c101,102
< 				cubrid_set_autocommit($conn, CUBRID_AUTOCOMMIT_FALSE);
---
> 				$this->auto_commit = FALSE;
> 			}
80,82c106,107
< 				cubrid_set_autocommit($conn, CUBRID_AUTOCOMMIT_TRUE);
< 				$this->auto_commit = TRUE;
< 			}
---
> 			// If no port is defined by the user, use the default value
> 			empty($this->port) OR $this->port = 33000;
84,85d108
< 
< 		return $conn;
91,98c114
< 	 * Persistent database connection
< 	 * In CUBRID persistent DB connection is supported natively in CUBRID
< 	 * engine which can be configured in the CUBRID Broker configuration
< 	 * file by setting the CCI_PCONNECT parameter to ON. In that case, all
< 	 * connections established between the client application and the
< 	 * server will become persistent. This is calling the same
< 	 * @cubrid_connect function will establish persisten connection
< 	 * considering that the CCI_PCONNECT is ON.
---
> 	 * Non-persistent database connection
100c116
< 	 * @access	private called by the base class
---
> 	 * @param	bool	$persistent
103c119,121
< 	function db_pconnect()
---
> 	public function db_connect($persistent = FALSE)
> 	{
> 		if (preg_match('/^CUBRID:[^:]+(:[0-9][1-9]{0,4})?:[^:]+:([^:]*):([^:]*):(\?.+)?$/', $this->dsn, $matches))
105c123,132
< 		return $this->db_connect();
---
> 			$func = ($persistent !== TRUE) ? 'cubrid_connect_with_url' : 'cubrid_pconnect_with_url';
> 			return ($matches[2] === '' && $matches[3] === '' && $this->username !== '' && $this->password !== '')
> 				? $func($this->dsn, $this->username, $this->password)
> 				: $func($this->dsn);
> 		}
> 
> 		$func = ($persistent !== TRUE) ? 'cubrid_connect' : 'cubrid_pconnect';
> 		return ($this->username !== '')
> 			? $func($this->hostname, $this->port, $this->database, $this->username, $this->password)
> 			: $func($this->hostname, $this->port, $this->database);
116d142
< 	 * @access	public
119c145
< 	function reconnect()
---
> 	public function reconnect()
130c156
< 	 * Select the database
---
> 	 * Database version number
132,133c158
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @return	string
135c160
< 	function db_select()
---
> 	public function version()
137,154c162
< 		// In CUBRID there is no need to select a database as the database
< 		// is chosen at the connection time.
< 		// So, to determine if the database is "selected", all we have to
< 		// do is ping the server and return that value.
< 		return cubrid_ping($this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Set client character set
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
< 	 */
< 	function db_set_charset($charset, $collation)
---
> 		if (isset($this->data_cache['version']))
156,159c164
< 		// In CUBRID, there is no need to set charset or collation.
< 		// This is why returning true will allow the application continue
< 		// its normal process.
< 		return TRUE;
---
> 			return $this->data_cache['version'];
162,177c167,169
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Version number query string
< 	 *
< 	 * @access	public
< 	 * @return	string
< 	 */
< 	function _version()
< 	{
< 		// To obtain the CUBRID Server version, no need to run the SQL query.
< 		// CUBRID PHP API provides a function to determin this value.
< 		// This is why we also need to add 'cubrid' value to the list of
< 		// $driver_version_exceptions array in DB_driver class in
< 		// version() function.
< 		return cubrid_get_server_info($this->conn_id);
---
> 		return ( ! $this->conn_id OR ($version = cubrid_get_server_info($this->conn_id)) === FALSE)
> 			? FALSE
> 			: $this->data_cache['version'] = $version;
185,186c177
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
---
> 	 * @param	string	$sql	an SQL query
189c180
< 	function _execute($sql)
---
> 	protected function _execute($sql)
191,209c182
< 		$sql = $this->_prep_query($sql);
< 		return @cubrid_query($sql, $this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
< 	 *
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
< 	 */
< 	function _prep_query($sql)
< 	{
< 		// No need to prepare
< 		return $sql;
---
> 		return cubrid_query($sql, $this->conn_id);
217d189
< 	 * @access	public
220c192
< 	function trans_begin($test_mode = FALSE)
---
> 	protected function _trans_begin()
222c194
< 		if ( ! $this->trans_enabled)
---
> 		if (($autocommit = cubrid_get_autocommit($this->conn_id)) === NULL)
224c196
< 			return TRUE;
---
> 			return FALSE;
226,228c198
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		elseif ($autocommit === TRUE)
230,240c200
< 			return TRUE;
< 		}
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		if (cubrid_get_autocommit($this->conn_id))
< 		{
< 			cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_FALSE);
---
> 			return cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_FALSE);
251d210
< 	 * @access	public
254c213
< 	function trans_commit()
---
> 	protected function _trans_commit()
256c215
< 		if ( ! $this->trans_enabled)
---
> 		if ( ! cubrid_commit($this->conn_id))
258c217
< 			return TRUE;
---
> 			return FALSE;
261,268d219
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		cubrid_commit($this->conn_id);
< 
271c222
< 			cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE);
---
> 			return cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE);
282d232
< 	 * @access	public
285c235
< 	function trans_rollback()
---
> 	protected function _trans_rollback()
287c237
< 		if ( ! $this->trans_enabled)
---
> 		if ( ! cubrid_rollback($this->conn_id))
289,295c239
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
---
> 			return FALSE;
298,299d241
< 		cubrid_rollback($this->conn_id);
< 
311c253
< 	 * Escape String
---
> 	 * Platform-dependant string escape
313d254
< 	 * @access	public
315d255
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
318,322c258
< 	function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
< 		{
< 			foreach ($str as $key => $val)
---
> 	protected function _escape_str($str)
324,345c260
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
< 		}
< 
< 		if (function_exists('cubrid_real_escape_string') AND is_resource($this->conn_id))
< 		{
< 			$str = cubrid_real_escape_string($str, $this->conn_id);
< 		}
< 		else
< 		{
< 			$str = addslashes($str);
< 		}
< 
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
< 		{
< 			$str = str_replace(array('%', '_'), array('\\%', '\\_'), $str);
< 		}
< 
< 		return $str;
---
> 		return cubrid_real_escape_string($str, $this->conn_id);
353,354c268
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
356c270
< 	function affected_rows()
---
> 	public function affected_rows()
358c272
< 		return @cubrid_affected_rows($this->conn_id);
---
> 		return cubrid_affected_rows();
366,384c280
< 	 * @access	public
< 	 * @return	integer
< 	 */
< 	function insert_id()
< 	{
< 		return @cubrid_insert_id($this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified table
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
---
> 	 * @return	int
386c282
< 	function count_all($table = '')
---
> 	public function insert_id()
388,402c284
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 		
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
< 		{
< 			return 0;
< 		}
< 
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		return cubrid_insert_id($this->conn_id);
412,413c294
< 	 * @access	private
< 	 * @param	boolean
---
> 	 * @param	bool	$prefix_limit
416c297
< 	function _list_tables($prefix_limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
418c299
< 		$sql = "SHOW TABLES";
---
> 		$sql = 'SHOW TABLES';
420c301
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
422c303
< 			$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%'";
---
> 			return $sql." LIKE '".$this->escape_like_str($this->dbprefix)."%'";
435,436c316
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table
439c319
< 	function _list_columns($table = '')
---
> 	protected function _list_columns($table = '')
441c321
< 		return "SHOW COLUMNS FROM ".$this->_protect_identifiers($table, TRUE, NULL, FALSE);
---
> 		return 'SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE);
447,449c327
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
---
> 	 * Returns an object with field data
451,453c329,330
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @param	string	$table
> 	 * @return	array
455c332
< 	function _field_data($table)
---
> 	public function field_data($table)
457,468c334
< 		return "SELECT * FROM ".$table." LIMIT 1";
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
< 	 * @return	string
< 	 */
< 	function _error_message()
---
> 		if (($query = $this->query('SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE)
470c336
< 		return cubrid_error($this->conn_id);
---
> 			return FALSE;
471a338
> 		$query = $query->result_object();
473,481c340,341
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message number
< 	 *
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
483,484c343,344
< 		return cubrid_errno($this->conn_id);
< 	}
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->Field;
486c346,349
< 	// --------------------------------------------------------------------
---
> 			sscanf($query[$i]->Type, '%[a-z](%d)',
> 				$retval[$i]->type,
> 				$retval[$i]->max_length
> 			);
488,684c351,352
< 	/**
< 	 * Escape the SQL Identifiers
< 	 *
< 	 * This function escapes column and table names
< 	 *
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
< 		{
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
< 		}
< 
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
< 		{
< 			$str = $this->_escape_char.$item.$this->_escape_char;
< 		}
< 
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
< 	 *
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
< 	 */
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
< 		{
< 			$tables = array($tables);
< 		}
< 
< 		return '('.implode(', ', $tables).')';
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
< 	 */
< 	function _insert($table, $keys, $values)
< 	{
< 		return "INSERT INTO ".$table." (\"".implode('", "', $keys)."\") VALUES (".implode(', ', $values).")";
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 
< 	/**
< 	 * Replace statement
< 	 *
< 	 * Generates a platform-specific replace string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
< 	 */
< 	function _replace($table, $keys, $values)
< 	{
< 		return "REPLACE INTO ".$table." (\"".implode('", "', $keys)."\") VALUES (".implode(', ', $values).")";
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert_batch statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
< 	 */
< 	function _insert_batch($table, $keys, $values)
< 	{
< 		return "INSERT INTO ".$table." (\"".implode('", "', $keys)."\") VALUES ".implode(', ', $values);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 
< 	/**
< 	 * Update statement
< 	 *
< 	 * Generates a platform-specific update string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
< 	 * @return	string
< 	 */
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
< 	{
< 		foreach ($values as $key => $val)
< 		{
< 			$valstr[] = sprintf('"%s" = %s', $key, $val);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 
< 	/**
< 	 * Update_Batch statement
< 	 *
< 	 * Generates a platform-specific batch update string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @return	string
< 	 */
< 	function _update_batch($table, $values, $index, $where = NULL)
< 	{
< 		$ids = array();
< 		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
< 
< 		foreach ($values as $key => $val)
< 		{
< 			$ids[] = $val[$index];
< 
< 			foreach (array_keys($val) as $field)
< 			{
< 				if ($field != $index)
< 				{
< 					$final[$field][] = 'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
< 				}
< 			}
< 		}
< 
< 		$sql = "UPDATE ".$table." SET ";
< 		$cases = '';
< 
< 		foreach ($final as $k => $v)
< 		{
< 			$cases .= $k.' = CASE '."\n";
< 			foreach ($v as $row)
< 			{
< 				$cases .= $row."\n";
< 			}
< 
< 			$cases .= 'ELSE '.$k.' END, ';
---
> 			$retval[$i]->default		= $query[$i]->Default;
> 			$retval[$i]->primary_key	= (int) ($query[$i]->Key === 'PRI');
687,710c355
< 		$sql .= substr($cases, 0, -2);
< 
< 		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
< 
< 		return $sql;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 
< 	/**
< 	 * Truncate statement
< 	 *
< 	 * Generates a platform-specific truncate string from the supplied data
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _truncate($table)
< 	{
< 		return "TRUNCATE ".$table;
---
> 		return $retval;
716c361
< 	 * Delete statement
---
> 	 * Error
718c363,364
< 	 * Generates a platform-specific delete string from the supplied data
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
720,724c366
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
< 	 * @return	string
---
> 	 * @return	array
726,730c368
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
< 	{
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
---
> 	public function error()
732,744c370
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
< 			{
< 				$conditions .= " AND ";
< 			}
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		return "DELETE FROM ".$table.$conditions.$limit;
---
> 		return array('code' => cubrid_errno($this->conn_id), 'message' => cubrid_error($this->conn_id));
750c376
< 	 * Limit string
---
> 	 * FROM tables
752c378,379
< 	 * Generates a platform-specific LIMIT clause
---
> 	 * Groups tables in FROM clauses if needed, so there is no confusion
> 	 * about operator precedence.
754,757d380
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
760,762c383
< 	function _limit($sql, $limit, $offset)
< 	{
< 		if ($offset == 0)
---
> 	protected function _from_tables()
764,766c385
< 			$offset = '';
< 		}
< 		else
---
> 		if ( ! empty($this->qb_join) && count($this->qb_from) > 1)
768c387
< 			$offset .= ", ";
---
> 			return '('.implode(', ', $this->qb_from).')';
771c390
< 		return $sql."LIMIT ".$offset.$limit;
---
> 		return implode(', ', $this->qb_from);
779,780d397
< 	 * @access	public
< 	 * @param	resource
783c400
< 	function _close($conn_id)
---
> 	protected function _close()
785c402
< 		@cubrid_close($conn_id);
---
> 		cubrid_close($this->conn_id);
789,792d405
< 
< 
< /* End of file cubrid_driver.php */
< /* Location: ./system/database/drivers/cubrid/cubrid_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/cubrid/cubrid_forge.php opensourcepos/system/database/drivers/cubrid/cubrid_forge.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		Esen Sagynov
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
23c45
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * Create database
---
> 	 * CREATE DATABASE statement
30,32c52
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,41c54
< 	function _create_database($name)
< 	{
< 		// CUBRID does not allow to create a database in SQL. The GUI tools
< 		// have to be used for this purpose.
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_database	= FALSE;
44c57,60
< 	 * Drop database
---
> 	 * CREATE TABLE keys flag
> 	 *
> 	 * Whether table keys are created from within the
> 	 * CREATE TABLE statement.
46,48c62
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	bool
50,57c64
< 	function _drop_database($name)
< 	{
< 		// CUBRID does not allow to drop a database in SQL. The GUI tools
< 		// have to be used for this purpose.
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_table_keys	= TRUE;
60c67
< 	 * Process Fields
---
> 	 * DROP DATABASE statement
62,64c69
< 	 * @access	private
< 	 * @param	mixed	the fields
< 	 * @return	string
---
> 	 * @var	string
66,82c71
< 	function _process_fields($fields)
< 	{
< 		$current_field_count = 0;
< 		$sql = '';
< 
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
---
> 	protected $_drop_database	= FALSE;
84c73,78
< 				$sql .= "\n\t\"" . $this->db->_protect_identifiers($field) . "\"";
---
> 	/**
> 	 * CREATE TABLE IF statement
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_create_table_if	= FALSE;
86,89c80,93
< 				if (array_key_exists('NAME', $attributes))
< 				{
< 					$sql .= ' '.$this->db->_protect_identifiers($attributes['NAME']).' ';
< 				}
---
> 	/**
> 	 * UNSIGNED support
> 	 *
> 	 * @var	array
> 	 */
> 	protected $_unsigned		= array(
> 		'SHORT'		=> 'INTEGER',
> 		'SMALLINT'	=> 'INTEGER',
> 		'INT'		=> 'BIGINT',
> 		'INTEGER'	=> 'BIGINT',
> 		'BIGINT'	=> 'NUMERIC',
> 		'FLOAT'		=> 'DOUBLE',
> 		'REAL'		=> 'DOUBLE'
> 	);
91,93c95
< 				if (array_key_exists('TYPE', $attributes))
< 				{
< 					$sql .= ' '.$attributes['TYPE'];
---
> 	// --------------------------------------------------------------------
95,97c97,105
< 					if (array_key_exists('CONSTRAINT', $attributes))
< 					{
< 						switch ($attributes['TYPE'])
---
> 	/**
> 	 * ALTER TABLE
> 	 *
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
> 	 */
> 	protected function _alter_table($alter_type, $table, $field)
99,116c107
< 							case 'decimal':
< 							case 'float':
< 							case 'numeric':
< 								$sql .= '('.implode(',', $attributes['CONSTRAINT']).')';
< 								break;
< 							case 'enum': 	// As of version 8.4.0 CUBRID does not support
< 											// enum data type.
< 											break;
< 							case 'set':
< 								$sql .= '("'.implode('","', $attributes['CONSTRAINT']).'")';
< 								break;
< 							default:
< 								$sql .= '('.$attributes['CONSTRAINT'].')';
< 						}
< 					}
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
---
> 		if (in_array($alter_type, array('DROP', 'ADD'), TRUE))
118,120c109
< 					//$sql .= ' UNSIGNED';
< 					// As of version 8.4.0 CUBRID does not support UNSIGNED INTEGER data type.
< 					// Will be supported in the next release as a part of MySQL Compatibility.
---
> 			return parent::_alter_table($alter_type, $table, $field);
123c112,114
< 				if (array_key_exists('DEFAULT', $attributes))
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
> 		$sqls = array();
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
125,128c116
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
---
> 			if ($field[$i]['_literal'] !== FALSE)
130c118
< 					$sql .= ' NULL';
---
> 				$sqls[] = $sql.' CHANGE '.$field[$i]['_literal'];
134,144c122,123
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' AUTO_INCREMENT';
< 				}
< 
< 				if (array_key_exists('UNIQUE', $attributes) && $attributes['UNIQUE'] === TRUE)
< 				{
< 					$sql .= ' UNIQUE';
---
> 				$alter_type = empty($field[$i]['new_name']) ? ' MODIFY ' : ' CHANGE ';
> 				$sqls[] = $sql.$alter_type.$this->_process_column($field[$i]);
148,155c127
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
< 			{
< 				$sql .= ',';
< 			}
< 		}
< 
< 		return $sql;
---
> 		return $sqls;
161c133
< 	 * Create Table
---
> 	 * Process column
163,169c135,136
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	mixed	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @param	array	$field
> 	 * @return	string
171c138
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
---
> 	protected function _process_column($field)
173c140,141
< 		$sql = 'CREATE TABLE ';
---
> 		$extra_clause = isset($field['after'])
> 			? ' AFTER '.$this->db->escape_identifiers($field['after']) : '';
175c143
< 		if ($if_not_exists === TRUE)
---
> 		if (empty($extra_clause) && isset($field['first']) && $field['first'] === TRUE)
177,178c145
< 			//$sql .= 'IF NOT EXISTS ';
< 			// As of version 8.4.0 CUBRID does not support this SQL syntax.
---
> 			$extra_clause = ' FIRST';
181,216c148,156
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 
< 		$sql .= $this->_process_fields($fields);
< 
< 		// If there is a PK defined
< 		if (count($primary_keys) > 0)
< 		{
< 			$key_name = "pk_" . $table . "_" .
< 				$this->db->_protect_identifiers(implode('_', $primary_keys));
< 			
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tCONSTRAINT " . $key_name . " PRIMARY KEY(" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key_name = $this->db->_protect_identifiers(implode('_', $key));
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key_name = $this->db->_protect_identifiers($key);
< 					$key = array($key_name);
< 				}
< 				
< 				$sql .= ",\n\tKEY \"{$key_name}\" (" . implode(', ', $key) . ")";
< 			}
< 		}
< 
< 		$sql .= "\n);";
< 
< 		return $sql;
---
> 		return $this->db->escape_identifiers($field['name'])
> 			.(empty($field['new_name']) ? '' : ' '.$this->db->escape_identifiers($field['new_name']))
> 			.' '.$field['type'].$field['length']
> 			.$field['unsigned']
> 			.$field['null']
> 			.$field['default']
> 			.$field['auto_increment']
> 			.$field['unique']
> 			.$extra_clause;
222c162
< 	 * Drop Table
---
> 	 * Field attribute TYPE
224,225c164,167
< 	 * @access	private
< 	 * @return	string
---
> 	 * Performs a data type mapping between different databases.
> 	 *
> 	 * @param	array	&$attributes
> 	 * @return	void
227c169,171
< 	function _drop_table($table)
---
> 	protected function _attr_type(&$attributes)
> 	{
> 		switch (strtoupper($attributes['TYPE']))
229c173,182
< 		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table);
---
> 			case 'TINYINT':
> 				$attributes['TYPE'] = 'SMALLINT';
> 				$attributes['UNSIGNED'] = FALSE;
> 				return;
> 			case 'MEDIUMINT':
> 				$attributes['TYPE'] = 'INTEGER';
> 				$attributes['UNSIGNED'] = FALSE;
> 				return;
> 			default: return;
> 		}
235,238c188
< 	 * Alter table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * Process indexes
240,245c190,191
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	array	fields
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	string	$table	(ignored)
> 	 * @return	string
247c193
< 	function _alter_table($alter_type, $table, $fields, $after_field = '')
---
> 	protected function _process_indexes($table)
249c195
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ";
---
> 		$sql = '';
251,252c197,201
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
---
> 		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
> 		{
> 			if (is_array($this->keys[$i]))
> 			{
> 				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
254c203,206
< 			return $sql.$this->db->_protect_identifiers($fields);
---
> 					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
> 					{
> 						unset($this->keys[$i][$i2]);
> 						continue;
256,259c208,210
< 
< 		$sql .= $this->_process_fields($fields);
< 
< 		if ($after_field != '')
---
> 				}
> 			}
> 			elseif ( ! isset($this->fields[$this->keys[$i]]))
261c212,213
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 				unset($this->keys[$i]);
> 				continue;
264c216,219
< 		return $sql;
---
> 			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
> 
> 			$sql .= ",\n\tKEY ".$this->db->escape_identifiers(implode('_', $this->keys[$i]))
> 				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).')';
267c222
< 	// --------------------------------------------------------------------
---
> 		$this->keys = array();
269,281d223
< 	/**
< 	 * Rename a table
< 	 *
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
< 	 */
< 	function _rename_table($table_name, $new_table_name)
< 	{
< 		$sql = 'RENAME TABLE '.$this->db->_protect_identifiers($table_name)." AS ".$this->db->_protect_identifiers($new_table_name);
286,288d227
< 
< /* End of file cubrid_forge.php */
< /* Location: ./system/database/drivers/cubrid/cubrid_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/cubrid/cubrid_result.php opensourcepos/system/database/drivers/cubrid/cubrid_result.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		Esen Sagynov
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 2.0.2
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // --------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
25c47
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @link		https://codeigniter.com/user_guide/database/
32,33c54
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c56
< 	function num_rows()
---
> 	public function num_rows()
37c58,60
< 		return @cubrid_num_rows($this->result_id);
---
> 		return is_int($this->num_rows)
> 			? $this->num_rows
> 			: $this->num_rows = cubrid_num_rows($this->result_id);
45,46c68
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c70
< 	function num_fields()
---
> 	public function num_fields()
50c72
< 		return @cubrid_num_fields($this->result_id);
---
> 		return cubrid_num_fields($this->result_id);
60d81
< 	 * @access	public
63c84
< 	function list_fields()
---
> 	public function list_fields()
75d95
< 	 * @access	public
78c98
< 	function field_data()
---
> 	public function field_data()
82,111c102
< 		$tablePrimaryKeys = array();
< 
< 		while ($field = cubrid_fetch_field($this->result_id))
< 		{
< 			$F				= new stdClass();
< 			$F->name		= $field->name;
< 			$F->type		= $field->type;
< 			$F->default		= $field->def;
< 			$F->max_length	= $field->max_length;
< 
< 			// At this moment primary_key property is not returned when
< 			// cubrid_fetch_field is called. The following code will
< 			// provide a patch for it. primary_key property will be added
< 			// in the next release.
< 
< 			// TODO: later version of CUBRID will provide primary_key
< 			// property.
< 			// When PK is defined in CUBRID, an index is automatically
< 			// created in the db_index system table in the form of
< 			// pk_tblname_fieldname. So the following will count how many
< 			// columns are there which satisfy this format.
< 			// The query will search for exact single columns, thus
< 			// compound PK is not supported.
< 			$res = cubrid_query($this->conn_id,
< 				"SELECT COUNT(*) FROM db_index WHERE class_name = '" . $field->table .
< 				"' AND is_primary_key = 'YES' AND index_name = 'pk_" .
< 				$field->table . "_" . $field->name . "'"
< 			);
< 
< 			if ($res)
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
113,127c104,108
< 				$row = cubrid_fetch_array($res, CUBRID_NUM);
< 				$F->primary_key = ($row[0] > 0 ? 1 : null);
< 			}
< 			else
< 			{
< 				$F->primary_key = null;
< 			}
< 
< 			if (is_resource($res))
< 			{
< 				cubrid_close_request($res);
< 				$this->result_id = FALSE;
< 			}
< 
< 			$retval[] = $F;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= cubrid_field_name($this->result_id, $i);
> 			$retval[$i]->type		= cubrid_field_type($this->result_id, $i);
> 			$retval[$i]->max_length		= cubrid_field_len($this->result_id, $i);
> 			$retval[$i]->primary_key	= (int) (strpos(cubrid_field_flags($this->result_id, $i), 'primary_key') !== FALSE);
138c119
< 	 * @return	null
---
> 	 * @return	void
140c121
< 	function free_result()
---
> 	public function free_result()
142,144c123,124
< 		if(is_resource($this->result_id) ||
< 			get_resource_type($this->result_id) == "Unknown" &&
< 			preg_match('/Resource id #/', strval($this->result_id)))
---
> 		if (is_resource($this->result_id) OR
> 			(get_resource_type($this->result_id) === 'Unknown' && preg_match('/Resource id #/', strval($this->result_id))))
158c138
< 	 * result set starts at zero
---
> 	 * result set starts at zero.
160,161c140,141
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	int	$n
> 	 * @return	bool
163c143
< 	function _data_seek($n = 0)
---
> 	public function data_seek($n = 0)
175d154
< 	 * @access	private
178c157
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
190c169
< 	 * @access	private
---
> 	 * @param	string	$class_name
193c172
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
195c174
< 		return cubrid_fetch_object($this->result_id);
---
> 		return cubrid_fetch_object($this->result_id, $class_name);
199,202d177
< 
< 
< /* End of file cubrid_result.php */
< /* Location: ./system/database/drivers/cubrid/cubrid_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/cubrid/cubrid_utility.php opensourcepos/system/database/drivers/cubrid/cubrid_utility.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		Esen Sagynov
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
23c45
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @link		https://codeigniter.com/user_guide/database/
30d51
< 	 * @access	private
33,40c54
< 	function _list_databases()
< 	{
< 		// CUBRID does not allow to see the list of all databases on the
< 		// server. It is the way its architecture is designed. Every
< 		// database is independent and isolated.
< 		// For this reason we can return only the name of the currect
< 		// connected database.
< 		if ($this->conn_id)
---
> 	public function list_databases()
42,44c56
< 			return "SELECT '" . $this->database . "'";
< 		}
< 		else
---
> 		if (isset($this->db->data_cache['db_names']))
46c58
< 			return FALSE;
---
> 			return $this->db->data_cache['db_names'];
48,50d59
< 	}
< 
< 	// --------------------------------------------------------------------
52,67c61
< 	/**
< 	 * Optimize table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 * @link 	http://www.cubrid.org/manual/840/en/Optimize%20Database
< 	 */
< 	function _optimize_table($table)
< 	{
< 		// No SQL based support in CUBRID as of version 8.4.0. Database or
< 		// table optimization can be performed using CUBRID Manager
< 		// database administration tool. See the link above for more info.
< 		return FALSE;
---
> 		return $this->db->data_cache['db_names'] = cubrid_list_dbs($this->db->conn_id);
73,91d66
< 	 * Repair table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be repaired
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 * @link 	http://www.cubrid.org/manual/840/en/Checking%20Database%20Consistency
< 	 */
< 	function _repair_table($table)
< 	{
< 		// Not supported in CUBRID as of version 8.4.0. Database or
< 		// table consistency can be checked using CUBRID Manager
< 		// database administration tool. See the link above for more info.
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 	/**
94d68
< 	 * @access	private
98c72
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
103c77
< 		return $this->db->display_error('db_unsuported_feature');
---
> 		return $this->db->display_error('db_unsupported_feature');
106,108d79
< 
< /* End of file cubrid_utility.php */
< /* Location: ./system/database/drivers/cubrid/cubrid_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/cubrid/index.html opensourcepos/system/database/drivers/cubrid/index.html
0a1
> <!DOCTYPE html>
Only in opensourcepos/system/database/drivers: ibase
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/index.html opensourcepos/system/database/drivers/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mssql/index.html opensourcepos/system/database/drivers/mssql/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mssql/mssql_driver.php opensourcepos/system/database/drivers/mssql/mssql_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
33,49d54
< 	var $dbdriver = 'mssql';
< 
< 	// The character used for escaping
< 	var $_escape_char = '';
< 
< 	// clause and character used for LIKE escape sequences
< 	var $_like_escape_str = " ESCAPE '%s' ";
< 	var $_like_escape_chr = '!';
< 
< 	/**
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
< 	 */
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword = ' ASC'; // not currently supported
< 
51c56
< 	 * Non-persistent database connection
---
> 	 * Database driver
53,54c58
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	string
56,64c60
< 	function db_connect()
< 	{
< 		if ($this->port != '')
< 		{
< 			$this->hostname .= ','.$this->port;
< 		}
< 
< 		return @mssql_connect($this->hostname, $this->username, $this->password);
< 	}
---
> 	public $dbdriver = 'mssql';
69c65
< 	 * Persistent database connection
---
> 	 * ORDER BY random keyword
71,72c67
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	array
74,84c69
< 	function db_pconnect()
< 	{
< 		if ($this->port != '')
< 		{
< 			$this->hostname .= ','.$this->port;
< 		}
< 
< 		return @mssql_pconnect($this->hostname, $this->username, $this->password);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_random_keyword = array('NEWID()', 'RAND(%d)');
87c72
< 	 * Reconnect
---
> 	 * Quoted identifier flag
89,90c74,75
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
---
> 	 * Whether to use SQL-92 standard quoted identifier
> 	 * (double quotes) or brackets for identifier escaping.
92,93c77
< 	 * @access	public
< 	 * @return	void
---
> 	 * @var	bool
95,98c79
< 	function reconnect()
< 	{
< 		// not implemented in MSSQL
< 	}
---
> 	protected $_quoted_identifier = TRUE;
103c84
< 	 * Select the database
---
> 	 * Class constructor
105,106c86,89
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * Appends the port number to the hostname, if needed.
> 	 *
> 	 * @param	array	$params
> 	 * @return	void
108c91
< 	function db_select()
---
> 	public function __construct($params)
110,113c93
< 		// Note: The brackets are required in the event that the DB name
< 		// contains reserved characters
< 		return @mssql_select_db('['.$this->database.']', $this->conn_id);
< 	}
---
> 		parent::__construct($params);
115,125c95
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Set client character set
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
< 	 */
< 	function db_set_charset($charset, $collation)
---
> 		if ( ! empty($this->port))
127,128c97,98
< 		// @todo - add support if needed
< 		return TRUE;
---
> 			$this->hostname .= (DIRECTORY_SEPARATOR === '\\' ? ',' : ':').$this->port;
> 		}
134c104
< 	 * Execute the query
---
> 	 * Non-persistent database connection
136,137c106
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
---
> 	 * @param	bool	$persistent
140c109
< 	function _execute($sql)
---
> 	public function db_connect($persistent = FALSE)
142,144c111,113
< 		$sql = $this->_prep_query($sql);
< 		return @mssql_query($sql, $this->conn_id);
< 	}
---
> 		$this->conn_id = ($persistent)
> 				? mssql_pconnect($this->hostname, $this->username, $this->password)
> 				: mssql_connect($this->hostname, $this->username, $this->password);
146,157c115
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
< 	 *
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
< 	 */
< 	function _prep_query($sql)
---
> 		if ( ! $this->conn_id)
159c117
< 		return $sql;
---
> 			return FALSE;
162c120
< 	// --------------------------------------------------------------------
---
> 		// ----------------------------------------------------------------
164,172c122,123
< 	/**
< 	 * Begin Transaction
< 	 *
< 	 * @access	public
< 	 * @return	bool
< 	 */
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
---
> 		// Select the DB... assuming a database name is specified in the config file
> 		if ($this->database !== '' && ! $this->db_select())
174,175c125
< 			return TRUE;
< 		}
---
> 			log_message('error', 'Unable to select database: '.$this->database);
177,180c127,129
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
---
> 			return ($this->db_debug === TRUE)
> 				? $this->display_error('db_unable_to_select', $this->database)
> 				: FALSE;
183,186c132,136
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
---
> 		// Determine how identifiers are escaped
> 		$query = $this->query('SELECT CASE WHEN (@@OPTIONS | 256) = @@OPTIONS THEN 1 ELSE 0 END AS qi');
> 		$query = $query->row_array();
> 		$this->_quoted_identifier = empty($query) ? FALSE : (bool) $query['qi'];
> 		$this->_escape_char = ($this->_quoted_identifier) ? '"' : array('[', ']');
188,189c138
< 		$this->simple_query('BEGIN TRAN');
< 		return TRUE;
---
> 		return $this->conn_id;
195c144
< 	 * Commit Transaction
---
> 	 * Select the database
197c146
< 	 * @access	public
---
> 	 * @param	string	$database
200c149
< 	function trans_commit()
---
> 	public function db_select($database = '')
202c151
< 		if ( ! $this->trans_enabled)
---
> 		if ($database === '')
204c153
< 			return TRUE;
---
> 			$database = $this->database;
207,208c156,158
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		// Note: Escaping is required in the event that the DB name
> 		// contains reserved characters.
> 		if (mssql_select_db('['.$database.']', $this->conn_id))
209a160
> 			$this->database = $database;
213,214c164
< 		$this->simple_query('COMMIT TRAN');
< 		return TRUE;
---
> 		return FALSE;
220c170
< 	 * Rollback Transaction
---
> 	 * Execute the query
222,223c172,173
< 	 * @access	public
< 	 * @return	bool
---
> 	 * @param	string	$sql	an SQL query
> 	 * @return	mixed	resource if rows are returned, bool otherwise
225,227c175
< 	function trans_rollback()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _execute($sql)
229,239c177
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		$this->simple_query('ROLLBACK TRAN');
< 		return TRUE;
---
> 		return mssql_query($sql, $this->conn_id);
245c183
< 	 * Escape String
---
> 	 * Begin Transaction
247,250c185
< 	 * @access	public
< 	 * @param	string
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
< 	 * @return	string
---
> 	 * @return	bool
252,254c187
< 	function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
---
> 	protected function _trans_begin()
256,261c189
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
---
> 		return $this->simple_query('BEGIN TRAN');
264,265c192
< 		// Escape single quotes
< 		$str = str_replace("'", "''", remove_invisible_characters($str));
---
> 	// --------------------------------------------------------------------
267,268c194,199
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
---
> 	/**
> 	 * Commit Transaction
> 	 *
> 	 * @return	bool
> 	 */
> 	protected function _trans_commit()
270,277c201
< 			$str = str_replace(
< 				array($this->_like_escape_chr, '%', '_'),
< 				array($this->_like_escape_chr.$this->_like_escape_chr, $this->_like_escape_chr.'%', $this->_like_escape_chr.'_'),
< 				$str
< 			);
< 		}
< 
< 		return $str;
---
> 		return $this->simple_query('COMMIT TRAN');
283c207
< 	 * Affected Rows
---
> 	 * Rollback Transaction
285,286c209
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	bool
288c211
< 	function affected_rows()
---
> 	protected function _trans_rollback()
290c213
< 		return @mssql_rows_affected($this->conn_id);
---
> 		return $this->simple_query('ROLLBACK TRAN');
296,298c219
< 	* Insert ID
< 	*
< 	* Returns the last id created in the Identity column.
---
> 	 * Affected Rows
300,301c221
< 	* @access public
< 	* @return integer
---
> 	 * @return	int
303c223
< 	function insert_id()
---
> 	public function affected_rows()
305,309c225
< 		$ver = self::_parse_major_version($this->version());
< 		$sql = ($ver >= 8 ? "SELECT SCOPE_IDENTITY() AS last_id" : "SELECT @@IDENTITY AS last_id");
< 		$query = $this->query($sql);
< 		$row = $query->row();
< 		return $row->last_id;
---
> 		return mssql_rows_affected($this->conn_id);
315c231
< 	* Parse major version
---
> 	 * Insert ID
317,318c233
< 	* Grabs the major version number from the
< 	* database server version string passed in.
---
> 	 * Returns the last id created in the Identity column.
320,322c235
< 	* @access private
< 	* @param string $version
< 	* @return int16 major version number
---
> 	 * @return	string
324c237
< 	function _parse_major_version($version)
---
> 	public function insert_id()
326,327c239,245
< 		preg_match('/([0-9]+)\.([0-9]+)\.([0-9]+)/', $version, $ver_info);
< 		return $ver_info[1]; // return the major version b/c that's all we're interested in.
---
> 		$query = version_compare($this->version(), '8', '>=')
> 			? 'SELECT SCOPE_IDENTITY() AS last_id'
> 			: 'SELECT @@IDENTITY AS last_id';
> 
> 		$query = $this->query($query);
> 		$query = $query->row();
> 		return $query->last_id;
333c251
< 	* Version number query string
---
> 	 * Set client character set
335,336c253,254
< 	* @access public
< 	* @return string
---
> 	 * @param	string	$charset
> 	 * @return	bool
338c256
< 	function _version()
---
> 	protected function _db_set_charset($charset)
340c258
< 		return "SELECT @@VERSION AS ver";
---
> 		return (ini_set('mssql.charset', $charset) !== FALSE);
346,349c264
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
---
> 	 * Version number query string
351,352d265
< 	 * @access	public
< 	 * @param	string
355,364c268
< 	function count_all($table = '')
< 	{
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
---
> 	protected function _version()
366,371c270
< 			return 0;
< 		}
< 
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		return "SELECT SERVERPROPERTY('ProductVersion') AS ver";
381,382c280
< 	 * @access	private
< 	 * @param	boolean
---
> 	 * @param	bool	$prefix_limit
385c283
< 	function _list_tables($prefix_limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
387c285,287
< 		$sql = "SELECT name FROM sysobjects WHERE type = 'U' ORDER BY name";
---
> 		$sql = 'SELECT '.$this->escape_identifiers('name')
> 			.' FROM '.$this->escape_identifiers('sysobjects')
> 			.' WHERE '.$this->escape_identifiers('type')." = 'U'";
389,390c289
< 		// for future compatibility
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
392,393c291,292
< 			//$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
< 			return FALSE; // not currently supported
---
> 			$sql .= ' AND '.$this->escape_identifiers('name')." LIKE '".$this->escape_like_str($this->dbprefix)."%' "
> 				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
396c295
< 		return $sql;
---
> 		return $sql.' ORDER BY '.$this->escape_identifiers('name');
406,407c305
< 	 * @access	private
< 	 * @param	string	the table name
---
> 	 * @param	string	$table
410c308
< 	function _list_columns($table = '')
---
> 	protected function _list_columns($table = '')
412c310,312
< 		return "SELECT * FROM INFORMATION_SCHEMA.Columns WHERE TABLE_NAME = '".$table."'";
---
> 		return 'SELECT COLUMN_NAME
> 			FROM INFORMATION_SCHEMA.Columns
> 			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
418,420c318
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
---
> 	 * Returns an object with field data
422,424c320,321
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @param	string	$table
> 	 * @return	array
426c323
< 	function _field_data($table)
---
> 	public function field_data($table)
428,431c325,327
< 		return "SELECT TOP 1 * FROM ".$table;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 		$sql = 'SELECT COLUMN_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, COLUMN_DEFAULT
> 			FROM INFORMATION_SCHEMA.Columns
> 			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
433,439c329
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
< 	 * @return	string
< 	 */
< 	function _error_message()
---
> 		if (($query = $this->query($sql)) === FALSE)
441c331
< 		return mssql_get_last_message();
---
> 			return FALSE;
442a333
> 		$query = $query->result_object();
444,452c335,336
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message number
< 	 *
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
454,455c338,345
< 		// Are error numbers supported?
< 		return '';
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->COLUMN_NAME;
> 			$retval[$i]->type		= $query[$i]->DATA_TYPE;
> 			$retval[$i]->max_length		= ($query[$i]->CHARACTER_MAXIMUM_LENGTH > 0) ? $query[$i]->CHARACTER_MAXIMUM_LENGTH : $query[$i]->NUMERIC_PRECISION;
> 			$retval[$i]->default		= $query[$i]->COLUMN_DEFAULT;
> 		}
> 
> 		return $retval;
461c351
< 	 * Escape the SQL Identifiers
---
> 	 * Error
463c353,354
< 	 * This function escapes column and table names
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
465,467c356
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
---
> 	 * @return	array
469c358
< 	function _escape_identifiers($item)
---
> 	public function error()
471,474c360,363
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
< 		}
---
> 		// We need this because the error info is discarded by the
> 		// server the first time you request it, and query() already
> 		// calls error() once for logging purposes when a query fails.
> 		static $error = array('code' => 0, 'message' => NULL);
476,478c365,366
< 		foreach ($this->_reserved_identifiers as $id)
< 		{
< 			if (strpos($item, '.'.$id) !== FALSE)
---
> 		$message = mssql_get_last_message();
> 		if ( ! empty($message))
480,484c368,369
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
---
> 			$error['code']    = $this->query('SELECT @@ERROR AS code')->row()->code;
> 			$error['message'] = $message;
487,497c372
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
< 		{
< 			$str = $this->_escape_char.$item.$this->_escape_char;
< 		}
< 
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
---
> 		return $error;
503c378
< 	 * From Tables
---
> 	 * Update statement
505,506c380
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
---
> 	 * Generates a platform-specific update string from the supplied data
508,510c382,384
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @param	string	$table
> 	 * @param	array	$values
> 	 * @return	string
512,514c386
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
---
> 	protected function _update($table, $values)
516,519c388,390
< 			$tables = array($tables);
< 		}
< 
< 		return implode(', ', $tables);
---
> 		$this->qb_limit = FALSE;
> 		$this->qb_orderby = array();
> 		return parent::_update($table, $values);
525c396
< 	 * Insert statement
---
> 	 * Truncate statement
527c398,401
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Generates a platform-specific truncate string from the supplied data
> 	 *
> 	 * If the database does not support the TRUNCATE statement,
> 	 * then this method maps to 'DELETE FROM table'
529,532c403
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
---
> 	 * @param	string	$table
535c406
< 	function _insert($table, $keys, $values)
---
> 	protected function _truncate($table)
537c408
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		return 'TRUNCATE TABLE '.$table;
543c414
< 	 * Update statement
---
> 	 * Delete statement
545c416
< 	 * Generates a platform-specific update string from the supplied data
---
> 	 * Generates a platform-specific delete string from the supplied data
547,552c418
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
---
> 	 * @param	string	$table
555c421
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
---
> 	protected function _delete($table)
557c423
< 		foreach ($values as $key => $val)
---
> 		if ($this->qb_limit)
559c425
< 			$valstr[] = $key." = ".$val;
---
> 			return 'WITH ci_delete AS (SELECT TOP '.$this->qb_limit.' * FROM '.$table.$this->_compile_wh('qb_where').') DELETE FROM ci_delete';
562,572c428
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
---
> 		return parent::_delete($table);
579c434
< 	 * Truncate statement
---
> 	 * LIMIT
581,583c436
< 	 * Generates a platform-specific truncate string from the supplied data
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
---
> 	 * Generates a platform-specific LIMIT clause
585,586c438
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$sql	SQL Query
589c441
< 	function _truncate($table)
---
> 	protected function _limit($sql)
591,594c443
< 		return "TRUNCATE ".$table;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 		$limit = $this->qb_offset + $this->qb_limit;
596,607c445,447
< 	/**
< 	 * Delete statement
< 	 *
< 	 * Generates a platform-specific delete string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
< 	 * @return	string
< 	 */
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
---
> 		// As of SQL Server 2005 (9.0.*) ROW_NUMBER() is supported,
> 		// however an ORDER BY clause is required for it to work
> 		if (version_compare($this->version(), '9', '>=') && $this->qb_offset && ! empty($this->qb_orderby))
609c449
< 		$conditions = '';
---
> 			$orderby = $this->_compile_order_by();
611,614c451,452
< 		if (count($where) > 0 OR count($like) > 0)
< 		{
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
---
> 			// We have to strip the ORDER BY clause
> 			$sql = trim(substr($sql, 0, strrpos($sql, $orderby)));
616c454,455
< 			if (count($where) > 0 && count($like) > 0)
---
> 			// Get the fields to select from our subquery, so that we can avoid CI_rownum appearing in the actual results
> 			if (count($this->qb_select) === 0)
618c457
< 				$conditions .= " AND ";
---
> 				$select = '*'; // Inevitable
620c459,470
< 			$conditions .= implode("\n", $like);
---
> 			else
> 			{
> 				// Use only field names and their aliases, everything else is out of our scope.
> 				$select = array();
> 				$field_regexp = ($this->_quoted_identifier)
> 					? '("[^\"]+")' : '(\[[^\]]+\])';
> 				for ($i = 0, $c = count($this->qb_select); $i < $c; $i++)
> 				{
> 					$select[] = preg_match('/(?:\s|\.)'.$field_regexp.'$/i', $this->qb_select[$i], $m)
> 						? $m[1] : $this->qb_select[$i];
> 				}
> 				$select = implode(', ', $select);
623c473,477
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
---
> 			return 'SELECT '.$select." FROM (\n\n"
> 				.preg_replace('/^(SELECT( DISTINCT)?)/i', '\\1 ROW_NUMBER() OVER('.trim($orderby).') AS '.$this->escape_identifiers('CI_rownum').', ', $sql)
> 				."\n\n) ".$this->escape_identifiers('CI_subquery')
> 				."\nWHERE ".$this->escape_identifiers('CI_rownum').' BETWEEN '.($this->qb_offset + 1).' AND '.$limit;
> 		}
625c479
< 		return "DELETE FROM ".$table.$conditions.$limit;
---
> 		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$limit.' ', $sql);
631c485
< 	 * Limit string
---
> 	 * Insert batch statement
633c487
< 	 * Generates a platform-specific LIMIT clause
---
> 	 * Generates a platform-specific insert string from the supplied data.
635,639c489,492
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
< 	 * @return	string
---
> 	 * @param	string	$table	Table name
> 	 * @param	array	$keys	INSERT keys
> 	 * @param	array	$values	INSERT values
> 	 * @return	string|bool
641c494
< 	function _limit($sql, $limit, $offset)
---
> 	protected function _insert_batch($table, $keys, $values)
643c496,500
< 		$i = $limit + $offset;
---
> 		// Multiple-value inserts are only supported as of SQL Server 2008
> 		if (version_compare($this->version(), '10', '>='))
> 		{
> 			return parent::_insert_batch($table, $keys, $values);
> 		}
645c502
< 		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$i.' ', $sql);
---
> 		return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
653,654d509
< 	 * @access	public
< 	 * @param	resource
657c512
< 	function _close($conn_id)
---
> 	protected function _close()
659c514
< 		@mssql_close($conn_id);
---
> 		mssql_close($this->conn_id);
663,667d517
< 
< 
< 
< /* End of file mssql_driver.php */
< /* Location: ./system/database/drivers/mssql/mssql_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mssql/mssql_forge.php opensourcepos/system/database/drivers/mssql/mssql_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c52
< 	 * Create database
---
> 	 * CREATE TABLE IF statement
30,32c54
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,39c56
< 	function _create_database($name)
< 	{
< 		return "CREATE DATABASE ".$name;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_table_if	= "IF NOT EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nCREATE TABLE";
42c59
< 	 * Drop database
---
> 	 * DROP TABLE IF statement
44,46c61
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
48,53c63
< 	function _drop_database($name)
< 	{
< 		return "DROP DATABASE ".$name;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_drop_table_if	= "IF EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nDROP TABLE";
56c66
< 	 * Drop Table
---
> 	 * UNSIGNED support
58,59c68
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	array
61,64c70,75
< 	function _drop_table($table)
< 	{
< 		return "DROP TABLE ".$this->db->_escape_identifiers($table);
< 	}
---
> 	protected $_unsigned		= array(
> 		'TINYINT'	=> 'SMALLINT',
> 		'SMALLINT'	=> 'INT',
> 		'INT'		=> 'BIGINT',
> 		'REAL'		=> 'FLOAT'
> 	);
69c80
< 	 * Create Table
---
> 	 * ALTER TABLE
71,77c82,85
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
79,127c87
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
< 	{
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
< 		{
< 			$sql .= 'IF NOT EXISTS ';
< 		}
< 
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 		$current_field_count = 0;
< 
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				$sql .=  ' '.$attributes['TYPE'];
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
< 				{
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
< 				{
< 					$sql .= ' NULL';
< 				}
< 				else
---
> 	protected function _alter_table($alter_type, $table, $field)
129,139c89
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' AUTO_INCREMENT';
< 				}
< 			}
< 
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
---
> 		if (in_array($alter_type, array('ADD', 'DROP'), TRUE))
141,142c91
< 				$sql .= ',';
< 			}
---
> 			return parent::_alter_table($alter_type, $table, $field);
145c94,96
< 		if (count($primary_keys) > 0)
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table).' ALTER COLUMN ';
> 		$sqls = array();
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
147,148c98
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
---
> 			$sqls[] = $sql.$this->_process_column($field[$i]);
151,170c101
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
< 				}
< 
< 				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
< 			}
< 		}
< 
< 		$sql .= "\n)";
< 
< 		return $sql;
---
> 		return $sqls;
176c107
< 	 * Alter table query
---
> 	 * Field attribute TYPE
178,179c109
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * Performs a data type mapping between different databases.
181,189c111,112
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	array	&$attributes
> 	 * @return	void
191c114
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
---
> 	protected function _attr_type(&$attributes)
193,203c116
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
< 		{
< 			return $sql;
< 		}
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
---
> 		switch (strtoupper($attributes['TYPE']))
205c118,125
< 			$sql .= " DEFAULT \"$default_value\"";
---
> 			case 'MEDIUMINT':
> 				$attributes['TYPE'] = 'INTEGER';
> 				$attributes['UNSIGNED'] = FALSE;
> 				return;
> 			case 'INTEGER':
> 				$attributes['TYPE'] = 'INT';
> 				return;
> 			default: return;
207,223d126
< 
< 		if ($null === NULL)
< 		{
< 			$sql .= ' NULL';
< 		}
< 		else
< 		{
< 			$sql .= ' NOT NULL';
< 		}
< 
< 		if ($after_field != '')
< 		{
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
< 		}
< 
< 		return $sql;
< 
229c132
< 	 * Rename a table
---
> 	 * Field attribute AUTO_INCREMENT
231,236c134,136
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
---
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
238c138,140
< 	function _rename_table($table_name, $new_table_name)
---
> 	protected function _attr_auto_increment(&$attributes, &$field)
> 	{
> 		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
240,242c142
< 		// I think this syntax will work, but can find little documentation on renaming tables in MSSQL
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
< 		return $sql;
---
> 			$field['auto_increment'] = ' IDENTITY(1,1)';
247,248c146
< /* End of file mssql_forge.php */
< /* Location: ./system/database/drivers/mssql/mssql_forge.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mssql/mssql_result.php opensourcepos/system/database/drivers/mssql/mssql_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22a45,46
>  * @package		CodeIgniter
>  * @subpackage	Drivers
24,25c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
32,33c56
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c58
< 	function num_rows()
---
> 	public function num_rows()
37c60,62
< 		return @mssql_num_rows($this->result_id);
---
> 		return is_int($this->num_rows)
> 			? $this->num_rows
> 			: $this->num_rows = mssql_num_rows($this->result_id);
45,46c70
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c72
< 	function num_fields()
---
> 	public function num_fields()
50c74
< 		return @mssql_num_fields($this->result_id);
---
> 		return mssql_num_fields($this->result_id);
60d83
< 	 * @access	public
63c86
< 	function list_fields()
---
> 	public function list_fields()
65a89
> 		mssql_field_seek($this->result_id, 0);
81d104
< 	 * @access	public
84c107
< 	function field_data()
---
> 	public function field_data()
87c110
< 		while ($field = mssql_fetch_field($this->result_id))
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
89,94c112
< 			$F				= new stdClass();
< 			$F->name		= $field->name;
< 			$F->type		= $field->type;
< 			$F->max_length	= $field->max_length;
< 			$F->primary_key = 0;
< 			$F->default		= '';
---
> 			$field = mssql_fetch_field($this->result_id, $i);
96c114,117
< 			$retval[] = $F;
---
> 			$retval[$i]		= new stdClass();
> 			$retval[$i]->name	= $field->name;
> 			$retval[$i]->type	= $field->type;
> 			$retval[$i]->max_length	= $field->max_length;
107c128
< 	 * @return	null
---
> 	 * @return	void
109c130
< 	function free_result()
---
> 	public function free_result()
125c146
< 	 * result set starts at zero
---
> 	 * result set starts at zero.
127,128c148,149
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	int	$n
> 	 * @return	bool
130c151
< 	function _data_seek($n = 0)
---
> 	public function data_seek($n = 0)
142d162
< 	 * @access	private
145c165
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
157c177
< 	 * @access	private
---
> 	 * @param	string	$class_name
160c180,184
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
> 	{
> 		$row = mssql_fetch_object($this->result_id);
> 
> 		if ($class_name === 'stdClass' OR ! $row)
162c186
< 		return mssql_fetch_object($this->result_id);
---
> 			return $row;
164a189,192
> 		$class_name = new $class_name();
> 		foreach ($row as $key => $value)
> 		{
> 			$class_name->$key = $value;
166a195,196
> 		return $class_name;
> 	}
168,169c198
< /* End of file mssql_result.php */
< /* Location: ./system/database/drivers/mssql/mssql_result.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mssql/mssql_utility.php opensourcepos/system/database/drivers/mssql/mssql_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c52
< 	 * List databases
---
> 	 * List databases statement
30,31c54
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	string
33,38c56
< 	function _list_databases()
< 	{
< 		return "EXEC sp_helpdb"; // Can also be: EXEC sp_databases
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_list_databases	= 'EXEC sp_helpdb'; // Can also be: EXEC sp_databases
41c59
< 	 * Optimize table query
---
> 	 * OPTIMIZE TABLE statement
43,47c61
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
49,54c63
< 	function _optimize_table($table)
< 	{
< 		return FALSE; // Is this supported in MS SQL?
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_optimize_table	= 'ALTER INDEX all ON %s REORGANIZE';
57,59c66
< 	 * Repair table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be repaired
---
> 	 * Export
61,77c68,69
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		return FALSE; // Is this supported in MS SQL?
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * MSSQL Export
< 	 *
< 	 * @access	private
< 	 * @param	array	Preferences
< 	 * @return	mixed
---
> 	 * @param	array	$params	Preferences
> 	 * @return	bool
79c71
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
82c74
< 		return $this->db->display_error('db_unsuported_feature');
---
> 		return $this->db->display_error('db_unsupported_feature');
86,88d77
< 
< /* End of file mssql_utility.php */
< /* Location: ./system/database/drivers/mssql/mssql_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysql/index.html opensourcepos/system/database/drivers/mysql/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysql/mysql_driver.php opensourcepos/system/database/drivers/mysql/mysql_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
33,36c55,60
< 	var $dbdriver = 'mysql';
< 
< 	// The character used for escaping
< 	var	$_escape_char = '`';
---
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver = 'mysql';
38,40c62,67
< 	// clause and character used for LIKE escape sequences - not used in MySQL
< 	var $_like_escape_str = '';
< 	var $_like_escape_chr = '';
---
> 	/**
> 	 * Compression flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $compress = FALSE;
42a70,71
> 	 * DELETE hack flag
> 	 *
45a75,76
> 	 *
> 	 * @var	bool
47,58c78
< 	var $delete_hack = TRUE;
< 
< 	/**
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
< 	 */
< 	var $_count_string = 'SELECT COUNT(*) AS ';
< 	var $_random_keyword = ' RAND()'; // database specific random keyword
< 
< 	// whether SET NAMES must be used to set the character set
< 	var $use_set_names;
---
> 	public $delete_hack = TRUE;
61c81
< 	 * Non-persistent database connection
---
> 	 * Strict ON flag
63,64c83,85
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * Whether we're running in strict SQL mode.
> 	 *
> 	 * @var	bool
66,74c87
< 	function db_connect()
< 	{
< 		if ($this->port != '')
< 		{
< 			$this->hostname .= ':'.$this->port;
< 		}
< 
< 		return @mysql_connect($this->hostname, $this->username, $this->password, TRUE);
< 	}
---
> 	public $stricton;
79c92
< 	 * Persistent database connection
---
> 	 * Identifier escape character
81,82c94
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	string
84,92c96
< 	function db_pconnect()
< 	{
< 		if ($this->port != '')
< 		{
< 			$this->hostname .= ':'.$this->port;
< 		}
< 
< 		return @mysql_pconnect($this->hostname, $this->username, $this->password);
< 	}
---
> 	protected $_escape_char = '`';
97c101
< 	 * Reconnect
---
> 	 * Class constructor
99,102c103
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
< 	 *
< 	 * @access	public
---
> 	 * @param	array	$params
105c106
< 	function reconnect()
---
> 	public function __construct($params)
107c108,110
< 		if (mysql_ping($this->conn_id) === FALSE)
---
> 		parent::__construct($params);
> 
> 		if ( ! empty($this->port))
109c112
< 			$this->conn_id = FALSE;
---
> 			$this->hostname .= ':'.$this->port;
116c119
< 	 * Select the database
---
> 	 * Non-persistent database connection
118c121
< 	 * @access	private called by the base class
---
> 	 * @param	bool	$persistent
121c124
< 	function db_select()
---
> 	public function db_connect($persistent = FALSE)
123,126c126
< 		return @mysql_select_db($this->database, $this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 		$client_flags = ($this->compress === FALSE) ? 0 : MYSQL_CLIENT_COMPRESS;
128,138c128
< 	/**
< 	 * Set client character set
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
< 	 */
< 	function db_set_charset($charset, $collation)
< 	{
< 		if ( ! isset($this->use_set_names))
---
> 		if ($this->encrypt === TRUE)
140,141c130
< 			// mysql_set_charset() requires PHP >= 5.2.3 and MySQL >= 5.0.7, use SET NAMES as fallback
< 			$this->use_set_names = (version_compare(PHP_VERSION, '5.2.3', '>=') && version_compare(mysql_get_server_info(), '5.0.7', '>=')) ? FALSE : TRUE;
---
> 			$client_flags = $client_flags | MYSQL_CLIENT_SSL;
144,152c133,136
< 		if ($this->use_set_names === TRUE)
< 		{
< 			return @mysql_query("SET NAMES '".$this->escape_str($charset)."' COLLATE '".$this->escape_str($collation)."'", $this->conn_id);
< 		}
< 		else
< 		{
< 			return @mysql_set_charset($charset, $this->conn_id);
< 		}
< 	}
---
> 		// Error suppression is necessary mostly due to PHP 5.5+ issuing E_DEPRECATED messages
> 		$this->conn_id = ($persistent === TRUE)
> 			? mysql_pconnect($this->hostname, $this->username, $this->password, $client_flags)
> 			: mysql_connect($this->hostname, $this->username, $this->password, TRUE, $client_flags);
154c138
< 	// --------------------------------------------------------------------
---
> 		// ----------------------------------------------------------------
156,162c140,141
< 	/**
< 	 * Version number query string
< 	 *
< 	 * @access	public
< 	 * @return	string
< 	 */
< 	function _version()
---
> 		// Select the DB... assuming a database name is specified in the config file
> 		if ($this->database !== '' && ! $this->db_select())
164,167c143
< 		return "SELECT version() AS ver";
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 			log_message('error', 'Unable to select database: '.$this->database);
169,179c145,147
< 	/**
< 	 * Execute the query
< 	 *
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
< 	 * @return	resource
< 	 */
< 	function _execute($sql)
< 	{
< 		$sql = $this->_prep_query($sql);
< 		return @mysql_query($sql, $this->conn_id);
---
> 			return ($this->db_debug === TRUE)
> 				? $this->display_error('db_unable_to_select', $this->database)
> 				: FALSE;
182,193c150
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
< 	 *
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
< 	 */
< 	function _prep_query($sql)
---
> 		if (isset($this->stricton) && is_resource($this->conn_id))
195,197c152
< 		// "DELETE FROM TABLE" returns 0 affected rows This hack modifies
< 		// the query so that it returns the number of affected rows
< 		if ($this->delete_hack === TRUE)
---
> 			if ($this->stricton)
199c154,156
< 			if (preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
---
> 				$this->simple_query('SET SESSION sql_mode = CONCAT(@@sql_mode, ",", "STRICT_ALL_TABLES")');
> 			}
> 			else
201c158,168
< 				$sql = preg_replace("/^\s*DELETE\s+FROM\s+(\S+)\s*$/", "DELETE FROM \\1 WHERE 1=1", $sql);
---
> 				$this->simple_query(
> 					'SET SESSION sql_mode =
> 					REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
> 					@@sql_mode,
> 					"STRICT_ALL_TABLES,", ""),
> 					",STRICT_ALL_TABLES", ""),
> 					"STRICT_ALL_TABLES", ""),
> 					"STRICT_TRANS_TABLES,", ""),
> 					",STRICT_TRANS_TABLES", ""),
> 					"STRICT_TRANS_TABLES", "")'
> 				);
205c172
< 		return $sql;
---
> 		return $this->conn_id;
211c178
< 	 * Begin Transaction
---
> 	 * Reconnect
213,214c180,183
< 	 * @access	public
< 	 * @return	bool
---
> 	 * Keep / reestablish the db connection if no queries have been
> 	 * sent for a length of time exceeding the server's idle timeout
> 	 *
> 	 * @return	void
216,218c185
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	public function reconnect()
220,224c187
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if (mysql_ping($this->conn_id) === FALSE)
226c189
< 			return TRUE;
---
> 			$this->conn_id = FALSE;
228,236d190
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		$this->simple_query('SET AUTOCOMMIT=0');
< 		$this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
< 		return TRUE;
242c196
< 	 * Commit Transaction
---
> 	 * Select the database
244c198
< 	 * @access	public
---
> 	 * @param	string	$database
247c201
< 	function trans_commit()
---
> 	public function db_select($database = '')
249c203
< 		if ( ! $this->trans_enabled)
---
> 		if ($database === '')
251c205
< 			return TRUE;
---
> 			$database = $this->database;
254,255c208
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if (mysql_select_db($database, $this->conn_id))
256a210
> 			$this->database = $database;
260,262c214
< 		$this->simple_query('COMMIT');
< 		$this->simple_query('SET AUTOCOMMIT=1');
< 		return TRUE;
---
> 		return FALSE;
268c220
< 	 * Rollback Transaction
---
> 	 * Set client character set
270c222
< 	 * @access	public
---
> 	 * @param	string	$charset
273,281c225
< 	function trans_rollback()
< 	{
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 	protected function _db_set_charset($charset)
283,288c227
< 			return TRUE;
< 		}
< 
< 		$this->simple_query('ROLLBACK');
< 		$this->simple_query('SET AUTOCOMMIT=1');
< 		return TRUE;
---
> 		return mysql_set_charset($charset, $this->conn_id);
294c233
< 	 * Escape String
---
> 	 * Database version number
296,298d234
< 	 * @access	public
< 	 * @param	string
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
301,303c237
< 	function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
---
> 	public function version()
305c239
< 			foreach ($str as $key => $val)
---
> 		if (isset($this->data_cache['version']))
307,310c241
< 				$str[$key] = $this->escape_str($val, $like);
< 	   		}
< 
< 	   		return $str;
---
> 			return $this->data_cache['version'];
313c244
< 		if (function_exists('mysql_real_escape_string') AND is_resource($this->conn_id))
---
> 		if ( ! $this->conn_id OR ($version = mysql_get_server_info($this->conn_id)) === FALSE)
315,323c246
< 			$str = mysql_real_escape_string($str, $this->conn_id);
< 		}
< 		elseif (function_exists('mysql_escape_string'))
< 		{
< 			$str = mysql_escape_string($str);
< 		}
< 		else
< 		{
< 			$str = addslashes($str);
---
> 			return FALSE;
326,345c249
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
< 		{
< 			$str = str_replace(array('%', '_'), array('\\%', '\\_'), $str);
< 		}
< 
< 		return $str;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Affected Rows
< 	 *
< 	 * @access	public
< 	 * @return	integer
< 	 */
< 	function affected_rows()
< 	{
< 		return @mysql_affected_rows($this->conn_id);
---
> 		return $this->data_cache['version'] = $version;
351c255
< 	 * Insert ID
---
> 	 * Execute the query
353,354c257,258
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @param	string	$sql	an SQL query
> 	 * @return	mixed
356c260
< 	function insert_id()
---
> 	protected function _execute($sql)
358c262
< 		return @mysql_insert_id($this->conn_id);
---
> 		return mysql_query($this->_prep_query($sql), $this->conn_id);
364c268
< 	 * "Count All" query
---
> 	 * Prep the query
366,367c270
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
---
> 	 * If needed, each database adapter can prep the query string
369,370c272
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$sql	an SQL query
373c275
< 	function count_all($table = '')
---
> 	protected function _prep_query($sql)
375,382c277,279
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
---
> 		// mysql_affected_rows() returns 0 for "DELETE FROM TABLE" queries. This hack
> 		// modifies the query so that it a proper number of affected rows is returned.
> 		if ($this->delete_hack === TRUE && preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
384c281
< 			return 0;
---
> 			return trim($sql).' WHERE 1=1';
387,389c284
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		return $sql;
395,397c290
< 	 * List table query
< 	 *
< 	 * Generates a platform-specific query string so that the table names can be fetched
---
> 	 * Begin Transaction
399,401c292
< 	 * @access	private
< 	 * @param	boolean
< 	 * @return	string
---
> 	 * @return	bool
403,407c294
< 	function _list_tables($prefix_limit = FALSE)
< 	{
< 		$sql = "SHOW TABLES FROM ".$this->_escape_char.$this->database.$this->_escape_char;
< 
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 	protected function _trans_begin()
409,412c296,297
< 			$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%'";
< 		}
< 
< 		return $sql;
---
> 		$this->simple_query('SET AUTOCOMMIT=0');
> 		return $this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
418,420c303
< 	 * Show column query
< 	 *
< 	 * Generates a platform-specific query string so that the column names can be fetched
---
> 	 * Commit Transaction
422,424c305
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
---
> 	 * @return	bool
426c307,309
< 	function _list_columns($table = '')
---
> 	protected function _trans_commit()
> 	{
> 		if ($this->simple_query('COMMIT'))
428c311,312
< 		return "SHOW COLUMNS FROM ".$this->_protect_identifiers($table, TRUE, NULL, FALSE);
---
> 			$this->simple_query('SET AUTOCOMMIT=1');
> 			return TRUE;
431,444c315
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _field_data($table)
< 	{
< 		return "DESCRIBE ".$table;
---
> 		return FALSE;
450c321
< 	 * The error message string
---
> 	 * Rollback Transaction
452,453c323
< 	 * @access	private
< 	 * @return	string
---
> 	 * @return	bool
455c325
< 	function _error_message()
---
> 	protected function _trans_rollback()
457c327,330
< 		return mysql_error($this->conn_id);
---
> 		if ($this->simple_query('ROLLBACK'))
> 		{
> 			$this->simple_query('SET AUTOCOMMIT=1');
> 			return TRUE;
460,470c333
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message number
< 	 *
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
< 	{
< 		return mysql_errno($this->conn_id);
---
> 		return FALSE;
476c339
< 	 * Escape the SQL Identifiers
---
> 	 * Platform-dependant string escape
478,480d340
< 	 * This function escapes column and table names
< 	 *
< 	 * @access	private
484,486c344
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
---
> 	protected function _escape_str($str)
488,512c346
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
< 		{
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
< 		}
< 
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
< 		{
< 			$str = $this->_escape_char.$item.$this->_escape_char;
< 		}
< 
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
---
> 		return mysql_real_escape_string($str, $this->conn_id);
518,521c352
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
---
> 	 * Affected Rows
523,525c354
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @return	int
527c356
< 	function _from_tables($tables)
---
> 	public function affected_rows()
529,534c358
< 		if ( ! is_array($tables))
< 		{
< 			$tables = array($tables);
< 		}
< 
< 		return '('.implode(', ', $tables).')';
---
> 		return mysql_affected_rows($this->conn_id);
540,542c364
< 	 * Insert statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Insert ID
544,548c366
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
---
> 	 * @return	int
550c368
< 	function _insert($table, $keys, $values)
---
> 	public function insert_id()
552c370
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		return mysql_insert_id($this->conn_id);
559c376
< 	 * Replace statement
---
> 	 * List table query
561c378
< 	 * Generates a platform-specific replace string from the supplied data
---
> 	 * Generates a platform-specific query string so that the table names can be fetched
563,566c380
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
---
> 	 * @param	bool	$prefix_limit
569c383
< 	function _replace($table, $keys, $values)
---
> 	protected function _list_tables($prefix_limit = FALSE)
571,574c385
< 		return "REPLACE INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 		$sql = 'SHOW TABLES FROM '.$this->escape_identifiers($this->database);
576,587c387
< 	/**
< 	 * Insert_batch statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
< 	 */
< 	function _insert_batch($table, $keys, $values)
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
589c389
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
---
> 			return $sql." LIKE '".$this->escape_like_str($this->dbprefix)."%'";
592c392,393
< 	// --------------------------------------------------------------------
---
> 		return $sql;
> 	}
593a395
> 	// --------------------------------------------------------------------
596c398
< 	 * Update statement
---
> 	 * Show column query
598c400
< 	 * Generates a platform-specific update string from the supplied data
---
> 	 * Generates a platform-specific query string so that the column names can be fetched
600,605c402
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
---
> 	 * @param	string	$table
608c405
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
---
> 	protected function _list_columns($table = '')
610,625c407
< 		foreach ($values as $key => $val)
< 		{
< 			$valstr[] = $key . ' = ' . $val;
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
---
> 		return 'SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE);
632c413
< 	 * Update_Batch statement
---
> 	 * Returns an object with field data
634,640c415,416
< 	 * Generates a platform-specific batch update string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @return	string
---
> 	 * @param	string	$table
> 	 * @return	array
642,647c418
< 	function _update_batch($table, $values, $index, $where = NULL)
< 	{
< 		$ids = array();
< 		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
< 
< 		foreach ($values as $key => $val)
---
> 	public function field_data($table)
649,653c420
< 			$ids[] = $val[$index];
< 
< 			foreach (array_keys($val) as $field)
< 			{
< 				if ($field != $index)
---
> 		if (($query = $this->query('SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE)
655,656c422
< 					$final[$field][] =  'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
< 				}
---
> 			return FALSE;
658,661c424
< 		}
< 
< 		$sql = "UPDATE ".$table." SET ";
< 		$cases = '';
---
> 		$query = $query->result_object();
663c426,427
< 		foreach ($final as $k => $v)
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
665,672c429,430
< 			$cases .= $k.' = CASE '."\n";
< 			foreach ($v as $row)
< 			{
< 				$cases .= $row."\n";
< 			}
< 
< 			$cases .= 'ELSE '.$k.' END, ';
< 		}
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->Field;
674c432,435
< 		$sql .= substr($cases, 0, -2);
---
> 			sscanf($query[$i]->Type, '%[a-z](%d)',
> 				$retval[$i]->type,
> 				$retval[$i]->max_length
> 			);
676,678c437,438
< 		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
< 
< 		return $sql;
---
> 			$retval[$i]->default		= $query[$i]->Default;
> 			$retval[$i]->primary_key	= (int) ($query[$i]->Key === 'PRI');
681,697c441
< 	// --------------------------------------------------------------------
< 
< 
< 	/**
< 	 * Truncate statement
< 	 *
< 	 * Generates a platform-specific truncate string from the supplied data
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _truncate($table)
< 	{
< 		return "TRUNCATE ".$table;
---
> 		return $retval;
703c447
< 	 * Delete statement
---
> 	 * Error
705c449,450
< 	 * Generates a platform-specific delete string from the supplied data
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
707,711c452
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
< 	 * @return	string
---
> 	 * @return	array
713,717c454
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
< 	{
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
---
> 	public function error()
719,731c456
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
< 			{
< 				$conditions .= " AND ";
< 			}
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		return "DELETE FROM ".$table.$conditions.$limit;
---
> 		return array('code' => mysql_errno($this->conn_id), 'message' => mysql_error($this->conn_id));
737c462
< 	 * Limit string
---
> 	 * FROM tables
739c464,465
< 	 * Generates a platform-specific LIMIT clause
---
> 	 * Groups tables in FROM clauses if needed, so there is no confusion
> 	 * about operator precedence.
741,744d466
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
747,749c469
< 	function _limit($sql, $limit, $offset)
< 	{
< 		if ($offset == 0)
---
> 	protected function _from_tables()
751,753c471
< 			$offset = '';
< 		}
< 		else
---
> 		if ( ! empty($this->qb_join) && count($this->qb_from) > 1)
755c473
< 			$offset .= ", ";
---
> 			return '('.implode(', ', $this->qb_from).')';
758c476
< 		return $sql."LIMIT ".$offset.$limit;
---
> 		return implode(', ', $this->qb_from);
766,767d483
< 	 * @access	public
< 	 * @param	resource
770c486
< 	function _close($conn_id)
---
> 	protected function _close()
772c488,490
< 		@mysql_close($conn_id);
---
> 		// Error suppression to avoid annoying E_WARNINGs in cases
> 		// where the connection has already been closed for some reason.
> 		@mysql_close($this->conn_id);
776,779d493
< 
< 
< /* End of file mysql_driver.php */
< /* Location: ./system/database/drivers/mysql/mysql_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysql/mysql_forge.php opensourcepos/system/database/drivers/mysql/mysql_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * Create database
---
> 	 * CREATE DATABASE statement
30,32c52
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,37c54
< 	function _create_database($name)
< 	{
< 		return "CREATE DATABASE ".$name;
< 	}
---
> 	protected $_create_database	= 'CREATE DATABASE %s CHARACTER SET %s COLLATE %s';
39c56,64
< 	// --------------------------------------------------------------------
---
> 	/**
> 	 * CREATE TABLE keys flag
> 	 *
> 	 * Whether table keys are created from within the
> 	 * CREATE TABLE statement.
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_create_table_keys	= TRUE;
42c67
< 	 * Drop database
---
> 	 * UNSIGNED support
44,46c69
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	array
48,51c71,91
< 	function _drop_database($name)
< 	{
< 		return "DROP DATABASE ".$name;
< 	}
---
> 	protected $_unsigned		= array(
> 		'TINYINT',
> 		'SMALLINT',
> 		'MEDIUMINT',
> 		'INT',
> 		'INTEGER',
> 		'BIGINT',
> 		'REAL',
> 		'DOUBLE',
> 		'DOUBLE PRECISION',
> 		'FLOAT',
> 		'DECIMAL',
> 		'NUMERIC'
> 	);
> 
> 	/**
> 	 * NULL value representation in CREATE/ALTER TABLE statements
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_null = 'NULL';
56c96
< 	 * Process Fields
---
> 	 * CREATE TABLE attributes
58,59c98
< 	 * @access	private
< 	 * @param	mixed	the fields
---
> 	 * @param	array	$attributes	Associative array of table attributes
62c101
< 	function _process_fields($fields)
---
> 	protected function _create_table_attr($attributes)
64d102
< 		$current_field_count = 0;
67,117c105
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				if (array_key_exists('NAME', $attributes))
< 				{
< 					$sql .= ' '.$this->db->_protect_identifiers($attributes['NAME']).' ';
< 				}
< 
< 				if (array_key_exists('TYPE', $attributes))
< 				{
< 					$sql .=  ' '.$attributes['TYPE'];
< 
< 					if (array_key_exists('CONSTRAINT', $attributes))
< 					{
< 						switch ($attributes['TYPE'])
< 						{
< 							case 'decimal':
< 							case 'float':
< 							case 'numeric':
< 								$sql .= '('.implode(',', $attributes['CONSTRAINT']).')';
< 							break;
< 
< 							case 'enum':
< 							case 'set':
< 								$sql .= '("'.implode('","', $attributes['CONSTRAINT']).'")';
< 							break;
< 
< 							default:
< 								$sql .= '('.$attributes['CONSTRAINT'].')';
< 						}
< 					}
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
---
> 		foreach (array_keys($attributes) as $key)
119,122c107
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
---
> 			if (is_string($key))
124c109
< 					$sql .= ' NULL';
---
> 				$sql .= ' '.strtoupper($key).' = '.$attributes[$key];
126,128d110
< 				else
< 				{
< 					$sql .= ' NOT NULL';
131c113
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
---
> 		if ( ! empty($this->db->char_set) && ! strpos($sql, 'CHARACTER SET') && ! strpos($sql, 'CHARSET'))
133,134c115
< 					$sql .= ' AUTO_INCREMENT';
< 				}
---
> 			$sql .= ' DEFAULT CHARACTER SET = '.$this->db->char_set;
137,138c118
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
---
> 		if ( ! empty($this->db->dbcollat) && ! strpos($sql, 'COLLATE'))
140,141c120
< 				$sql .= ',';
< 			}
---
> 			$sql .= ' COLLATE = '.$this->db->dbcollat;
150c129
< 	 * Create Table
---
> 	 * ALTER TABLE
152,158c131,134
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	mixed	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
160c136
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
---
> 	protected function _alter_table($alter_type, $table, $field)
162,164c138
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
---
> 		if ($alter_type === 'DROP')
166c140
< 			$sql .= 'IF NOT EXISTS ';
---
> 			return parent::_alter_table($alter_type, $table, $field);
169,173c143,144
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 
< 		$sql .= $this->_process_fields($fields);
< 
< 		if (count($primary_keys) > 0)
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
175,180c146
< 			$key_name = $this->db->_protect_identifiers(implode('_', $primary_keys));
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY ".$key_name." (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
---
> 			if ($field[$i]['_literal'] !== FALSE)
182c148,152
< 			foreach ($keys as $key)
---
> 				$field[$i] = ($alter_type === 'ADD')
> 						? "\n\tADD ".$field[$i]['_literal']
> 						: "\n\tMODIFY ".$field[$i]['_literal'];
> 			}
> 			else
184c154
< 				if (is_array($key))
---
> 				if ($alter_type === 'ADD')
186,187c156
< 					$key_name = $this->db->_protect_identifiers(implode('_', $key));
< 					$key = $this->db->_protect_identifiers($key);
---
> 					$field[$i]['_literal'] = "\n\tADD ";
191,192c160
< 					$key_name = $this->db->_protect_identifiers($key);
< 					$key = array($key_name);
---
> 					$field[$i]['_literal'] = empty($field[$i]['new_name']) ? "\n\tMODIFY " : "\n\tCHANGE ";
195c163
< 				$sql .= ",\n\tKEY {$key_name} (" . implode(', ', $key) . ")";
---
> 				$field[$i] = $field[$i]['_literal'].$this->_process_column($field[$i]);
199,201c167
< 		$sql .= "\n) DEFAULT CHARACTER SET {$this->db->char_set} COLLATE {$this->db->dbcollat};";
< 
< 		return $sql;
---
> 		return array($sql.implode(',', $field));
207c173
< 	 * Drop Table
---
> 	 * Process column
209c175
< 	 * @access	private
---
> 	 * @param	array	$field
212c178
< 	function _drop_table($table)
---
> 	protected function _process_column($field)
214c180,198
< 		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table);
---
> 		$extra_clause = isset($field['after'])
> 			? ' AFTER '.$this->db->escape_identifiers($field['after']) : '';
> 
> 		if (empty($extra_clause) && isset($field['first']) && $field['first'] === TRUE)
> 		{
> 			$extra_clause = ' FIRST';
> 		}
> 
> 
> 		return $this->db->escape_identifiers($field['name'])
> 			.(empty($field['new_name']) ? '' : ' '.$this->db->escape_identifiers($field['new_name']))
> 			.' '.$field['type'].$field['length']
> 			.$field['unsigned']
> 			.$field['null']
> 			.$field['default']
> 			.$field['auto_increment']
> 			.$field['unique']
> 			.(empty($field['comment']) ? '' : ' COMMENT '.$field['comment'])
> 			.$extra_clause;
220c204
< 	 * Alter table query
---
> 	 * Process indexes
222,230c206,207
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
< 	 *
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	array	fields
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	string	$table	(ignored)
> 	 * @return	string
232c209
< 	function _alter_table($alter_type, $table, $fields, $after_field = '')
---
> 	protected function _process_indexes($table)
234c211
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ";
---
> 		$sql = '';
236,237c213,217
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
---
> 		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
> 		{
> 			if (is_array($this->keys[$i]))
> 			{
> 				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
239c219,222
< 			return $sql.$this->db->_protect_identifiers($fields);
---
> 					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
> 					{
> 						unset($this->keys[$i][$i2]);
> 						continue;
241,244c224,226
< 
< 		$sql .= $this->_process_fields($fields);
< 
< 		if ($after_field != '')
---
> 				}
> 			}
> 			elseif ( ! isset($this->fields[$this->keys[$i]]))
246c228,229
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 				unset($this->keys[$i]);
> 				continue;
249c232,235
< 		return $sql;
---
> 			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
> 
> 			$sql .= ",\n\tKEY ".$this->db->escape_identifiers(implode('_', $this->keys[$i]))
> 				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).')';
252c238
< 	// --------------------------------------------------------------------
---
> 		$this->keys = array();
254,266d239
< 	/**
< 	 * Rename a table
< 	 *
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
< 	 */
< 	function _rename_table($table_name, $new_table_name)
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
271,273d243
< 
< /* End of file mysql_forge.php */
< /* Location: ./system/database/drivers/mysql/mysql_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysql/mysql_result.php opensourcepos/system/database/drivers/mysql/mysql_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // --------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
29a52,68
> 	 * Class constructor
> 	 *
> 	 * @param	object	&$driver_object
> 	 * @return	void
> 	 */
> 	public function __construct(&$driver_object)
> 	{
> 		parent::__construct($driver_object);
> 
> 		// Required, due to mysql_data_seek() causing nightmares
> 		// with empty result sets
> 		$this->num_rows = mysql_num_rows($this->result_id);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
32,33c71
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c73
< 	function num_rows()
---
> 	public function num_rows()
37c75
< 		return @mysql_num_rows($this->result_id);
---
> 		return $this->num_rows;
45,46c83
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c85
< 	function num_fields()
---
> 	public function num_fields()
50c87
< 		return @mysql_num_fields($this->result_id);
---
> 		return mysql_num_fields($this->result_id);
60d96
< 	 * @access	public
63c99
< 	function list_fields()
---
> 	public function list_fields()
65a102
> 		mysql_field_seek($this->result_id, 0);
81d117
< 	 * @access	public
84c120
< 	function field_data()
---
> 	public function field_data()
87c123
< 		while ($field = mysql_fetch_object($this->result_id))
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
89,101c125,129
< 			preg_match('/([a-zA-Z]+)(\(\d+\))?/', $field->Type, $matches);
< 
< 			$type = (array_key_exists(1, $matches)) ? $matches[1] : NULL;
< 			$length = (array_key_exists(2, $matches)) ? preg_replace('/[^\d]/', '', $matches[2]) : NULL;
< 
< 			$F				= new stdClass();
< 			$F->name		= $field->Field;
< 			$F->type		= $type;
< 			$F->default		= $field->Default;
< 			$F->max_length	= $length;
< 			$F->primary_key = ( $field->Key == 'PRI' ? 1 : 0 );
< 
< 			$retval[] = $F;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= mysql_field_name($this->result_id, $i);
> 			$retval[$i]->type		= mysql_field_type($this->result_id, $i);
> 			$retval[$i]->max_length		= mysql_field_len($this->result_id, $i);
> 			$retval[$i]->primary_key	= (int) (strpos(mysql_field_flags($this->result_id, $i), 'primary_key') !== FALSE);
112c140
< 	 * @return	null
---
> 	 * @return	void
114c142
< 	function free_result()
---
> 	public function free_result()
130c158
< 	 * result set starts at zero
---
> 	 * result set starts at zero.
132,133c160,161
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	int	$n
> 	 * @return	bool
135c163
< 	function _data_seek($n = 0)
---
> 	public function data_seek($n = 0)
137c165,167
< 		return mysql_data_seek($this->result_id, $n);
---
> 		return $this->num_rows
> 			? mysql_data_seek($this->result_id, $n)
> 			: FALSE;
147d176
< 	 * @access	private
150c179
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
162c191
< 	 * @access	private
---
> 	 * @param	string	$class_name
165c194
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
167c196
< 		return mysql_fetch_object($this->result_id);
---
> 		return mysql_fetch_object($this->result_id, $class_name);
171,174d199
< 
< 
< /* End of file mysql_result.php */
< /* Location: ./system/database/drivers/mysql/mysql_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysql/mysql_utility.php opensourcepos/system/database/drivers/mysql/mysql_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * List databases
---
> 	 * List databases statement
30,31c52
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	string
33,38c54
< 	function _list_databases()
< 	{
< 		return "SHOW DATABASES";
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_list_databases	= 'SHOW DATABASES';
41c57
< 	 * Optimize table query
---
> 	 * OPTIMIZE TABLE statement
43,47c59
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
49,54c61
< 	function _optimize_table($table)
< 	{
< 		return "OPTIMIZE TABLE ".$this->db->_escape_identifiers($table);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_optimize_table	= 'OPTIMIZE TABLE %s';
57,59c64
< 	 * Repair table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be repaired
---
> 	 * REPAIR TABLE statement
61,63c66
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
65,68c68
< 	function _repair_table($table)
< 	{
< 		return "REPAIR TABLE ".$this->db->_escape_identifiers($table);
< 	}
---
> 	protected $_repair_table	= 'REPAIR TABLE %s';
72c73
< 	 * MySQL Export
---
> 	 * Export
74,75c75
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
78c78
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
80c80
< 		if (count($params) == 0)
---
> 		if (count($params) === 0)
89a90,96
> 
> 		// Do we need to include a statement to disable foreign key checks?
> 		if ($foreign_key_checks === FALSE)
> 		{
> 			$output .= 'SET foreign_key_checks = 0;'.$newline;
> 		}
> 
99c106
< 			$query = $this->db->query("SHOW CREATE TABLE `".$this->db->database.'`.`'.$table.'`');
---
> 			$query = $this->db->query('SHOW CREATE TABLE '.$this->db->escape_identifiers($this->db->database.'.'.$table));
110c117
< 			if ($add_drop == TRUE)
---
> 			if ($add_drop === TRUE)
112c119
< 				$output .= 'DROP TABLE IF EXISTS '.$table.';'.$newline.$newline;
---
> 				$output .= 'DROP TABLE IF EXISTS '.$this->db->protect_identifiers($table).';'.$newline.$newline;
126c133
< 			if ($add_insert == FALSE)
---
> 			if ($add_insert === FALSE)
132c139
< 			$query = $this->db->query("SELECT * FROM $table");
---
> 			$query = $this->db->query('SELECT * FROM '.$this->db->protect_identifiers($table));
134c141
< 			if ($query->num_rows() == 0)
---
> 			if ($query->num_rows() === 0)
149,150c156
< 				$is_int[$i] = (in_array(
< 										strtolower(mysql_field_type($query->result_id, $i)),
---
> 				$is_int[$i] = in_array(strtolower(mysql_field_type($query->result_id, $i)),
152,153c158
< 										TRUE)
< 										) ? TRUE : FALSE;
---
> 							TRUE);
156c161
< 				$field_str .= '`'.$field->name.'`, ';
---
> 				$field_str .= $this->db->escape_identifiers($field->name).', ';
161,162c166
< 			$field_str = preg_replace( "/, $/" , "" , $field_str);
< 
---
> 			$field_str = preg_replace('/, $/' , '', $field_str);
180,187c184
< 						if ($is_int[$i] == FALSE)
< 						{
< 							$val_str .= $this->db->escape($v);
< 						}
< 						else
< 						{
< 							$val_str .= $v;
< 						}
---
> 						$val_str .= ($is_int[$i] === FALSE) ? $this->db->escape($v) : $v;
196c193
< 				$val_str = preg_replace( "/, $/" , "" , $val_str);
---
> 				$val_str = preg_replace('/, $/' , '', $val_str);
199c196
< 				$output .= 'INSERT INTO '.$table.' ('.$field_str.') VALUES ('.$val_str.');'.$newline;
---
> 				$output .= 'INSERT INTO '.$this->db->protect_identifiers($table).' ('.$field_str.') VALUES ('.$val_str.');'.$newline;
205c202,205
< 		return $output;
---
> 		// Do we need to include a statement to re-enable foreign key checks?
> 		if ($foreign_key_checks === FALSE)
> 		{
> 			$output .= 'SET foreign_key_checks = 1;'.$newline;
206a207,208
> 
> 		return $output;
209,210c211
< /* End of file mysql_utility.php */
< /* Location: ./system/database/drivers/mysql/mysql_utility.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysqli/index.html opensourcepos/system/database/drivers/mysqli/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysqli/mysqli_driver.php opensourcepos/system/database/drivers/mysqli/mysqli_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * MySQLi Database Adapter Class - MySQLi only works with PHP 5
---
>  * MySQLi Database Adapter Class
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
33,40c55,60
< 	var $dbdriver = 'mysqli';
< 
< 	// The character used for escaping
< 	var $_escape_char = '`';
< 
< 	// clause and character used for LIKE escape sequences - not used in MySQL
< 	var $_like_escape_str = '';
< 	var $_like_escape_chr = '';
---
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver = 'mysqli';
43,45c63,65
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
---
> 	 * Compression flag
> 	 *
> 	 * @var	bool
47,48c67
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword = ' RAND()'; // database specific random keyword
---
> 	public $compress = FALSE;
50a70,71
> 	 * DELETE hack flag
> 	 *
54,63d74
< 	 */
< 	var $delete_hack = TRUE;
< 
< 	// whether SET NAMES must be used to set the character set
< 	var $use_set_names;
< 	
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Non-persistent database connection
65,66c76
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	bool
68,81c78
< 	function db_connect()
< 	{
< 		if ($this->port != '')
< 		{
< 			return @mysqli_connect($this->hostname, $this->username, $this->password, $this->database, $this->port);
< 		}
< 		else
< 		{
< 			return @mysqli_connect($this->hostname, $this->username, $this->password, $this->database);
< 		}
< 
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	public $delete_hack = TRUE;
84c81,83
< 	 * Persistent database connection
---
> 	 * Strict ON flag
> 	 *
> 	 * Whether we're running in strict SQL mode.
86,87c85
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	bool
89,92c87
< 	function db_pconnect()
< 	{
< 		return $this->db_connect();
< 	}
---
> 	public $stricton;
97,100c92
< 	 * Reconnect
< 	 *
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
---
> 	 * Identifier escape character
102,103c94
< 	 * @access	public
< 	 * @return	void
---
> 	 * @var	string
105,111c96
< 	function reconnect()
< 	{
< 		if (mysqli_ping($this->conn_id) === FALSE)
< 		{
< 			$this->conn_id = FALSE;
< 		}
< 	}
---
> 	protected $_escape_char = '`';
116c101
< 	 * Select the database
---
> 	 * MySQLi object
118,119c103,105
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * Has to be preserved without being assigned to $conn_id.
> 	 *
> 	 * @var	MySQLi
121,124c107
< 	function db_select()
< 	{
< 		return @mysqli_select_db($this->conn_id, $this->database);
< 	}
---
> 	protected $_mysqli;
129c112
< 	 * Set client character set
---
> 	 * Database connection
131,134c114,115
< 	 * @access	private
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
---
> 	 * @param	bool	$persistent
> 	 * @return	object
136,138c117
< 	function _db_set_charset($charset, $collation)
< 	{
< 		if ( ! isset($this->use_set_names))
---
> 	public function db_connect($persistent = FALSE)
140,144c119,120
< 			// mysqli_set_charset() requires MySQL >= 5.0.7, use SET NAMES as fallback
< 			$this->use_set_names = (version_compare(mysqli_get_server_info($this->conn_id), '5.0.7', '>=')) ? FALSE : TRUE;
< 		}
< 
< 		if ($this->use_set_names === TRUE)
---
> 		// Do we have a socket path?
> 		if ($this->hostname[0] === '/')
146c122,124
< 			return @mysqli_query($this->conn_id, "SET NAMES '".$this->escape_str($charset)."' COLLATE '".$this->escape_str($collation)."'");
---
> 			$hostname = NULL;
> 			$port = NULL;
> 			$socket = $this->hostname;
150,164c128,132
< 			return @mysqli_set_charset($this->conn_id, $charset);
< 		}
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Version number query string
< 	 *
< 	 * @access	public
< 	 * @return	string
< 	 */
< 	function _version()
< 	{
< 		return "SELECT version() AS ver";
---
> 			// Persistent connection support was added in PHP 5.3.0
> 			$hostname = ($persistent === TRUE && is_php('5.3'))
> 				? 'p:'.$this->hostname : $this->hostname;
> 			$port = empty($this->port) ? NULL : $this->port;
> 			$socket = NULL;
167c135,136
< 	// --------------------------------------------------------------------
---
> 		$client_flags = ($this->compress === TRUE) ? MYSQLI_CLIENT_COMPRESS : 0;
> 		$this->_mysqli = mysqli_init();
169,181c138
< 	/**
< 	 * Execute the query
< 	 *
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
< 	 * @return	resource
< 	 */
< 	function _execute($sql)
< 	{
< 		$sql = $this->_prep_query($sql);
< 		$result = @mysqli_query($this->conn_id, $sql);
< 		return $result;
< 	}
---
> 		$this->_mysqli->options(MYSQLI_OPT_CONNECT_TIMEOUT, 10);
183,198c140
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
< 	 *
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
< 	 */
< 	function _prep_query($sql)
< 	{
< 		// "DELETE FROM TABLE" returns 0 affected rows This hack modifies
< 		// the query so that it returns the number of affected rows
< 		if ($this->delete_hack === TRUE)
---
> 		if (isset($this->stricton))
200c142
< 			if (preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
---
> 			if ($this->stricton)
202c144
< 				$sql = preg_replace("/^\s*DELETE\s+FROM\s+(\S+)\s*$/", "DELETE FROM \\1 WHERE 1=1", $sql);
---
> 				$this->_mysqli->options(MYSQLI_INIT_COMMAND, 'SET SESSION sql_mode = CONCAT(@@sql_mode, ",", "STRICT_ALL_TABLES")');
203a146,158
> 			else
> 			{
> 				$this->_mysqli->options(MYSQLI_INIT_COMMAND,
> 					'SET SESSION sql_mode =
> 					REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
> 					@@sql_mode,
> 					"STRICT_ALL_TABLES,", ""),
> 					",STRICT_ALL_TABLES", ""),
> 					"STRICT_ALL_TABLES", ""),
> 					"STRICT_TRANS_TABLES,", ""),
> 					",STRICT_TRANS_TABLES", ""),
> 					"STRICT_TRANS_TABLES", "")'
> 				);
205,206d159
< 
< 		return $sql;
209c162,169
< 	// --------------------------------------------------------------------
---
> 		if (is_array($this->encrypt))
> 		{
> 			$ssl = array();
> 			empty($this->encrypt['ssl_key'])    OR $ssl['key']    = $this->encrypt['ssl_key'];
> 			empty($this->encrypt['ssl_cert'])   OR $ssl['cert']   = $this->encrypt['ssl_cert'];
> 			empty($this->encrypt['ssl_ca'])     OR $ssl['ca']     = $this->encrypt['ssl_ca'];
> 			empty($this->encrypt['ssl_capath']) OR $ssl['capath'] = $this->encrypt['ssl_capath'];
> 			empty($this->encrypt['ssl_cipher']) OR $ssl['cipher'] = $this->encrypt['ssl_cipher'];
211,217c171
< 	/**
< 	 * Begin Transaction
< 	 *
< 	 * @access	public
< 	 * @return	bool
< 	 */
< 	function trans_begin($test_mode = FALSE)
---
> 			if ( ! empty($ssl))
219c173
< 		if ( ! $this->trans_enabled)
---
> 				if (isset($this->encrypt['ssl_verify']))
221c175,177
< 			return TRUE;
---
> 					if ($this->encrypt['ssl_verify'])
> 					{
> 						defined('MYSQLI_OPT_SSL_VERIFY_SERVER_CERT') && $this->_mysqli->options(MYSQLI_OPT_SSL_VERIFY_SERVER_CERT, TRUE);
223,225c179,185
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 					// Apparently (when it exists), setting MYSQLI_OPT_SSL_VERIFY_SERVER_CERT
> 					// to FALSE didn't do anything, so PHP 5.6.16 introduced yet another
> 					// constant ...
> 					//
> 					// https://secure.php.net/ChangeLog-5.php#5.6.16
> 					// https://bugs.php.net/bug.php?id=68344
> 					elseif (defined('MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT'))
227c187
< 			return TRUE;
---
> 						$this->_mysqli->options(MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT, TRUE);
229,237d188
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		$this->simple_query('SET AUTOCOMMIT=0');
< 		$this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
< 		return TRUE;
240c191,200
< 	// --------------------------------------------------------------------
---
> 				$client_flags |= MYSQLI_CLIENT_SSL;
> 				$this->_mysqli->ssl_set(
> 					isset($ssl['key'])    ? $ssl['key']    : NULL,
> 					isset($ssl['cert'])   ? $ssl['cert']   : NULL,
> 					isset($ssl['ca'])     ? $ssl['ca']     : NULL,
> 					isset($ssl['capath']) ? $ssl['capath'] : NULL,
> 					isset($ssl['cipher']) ? $ssl['cipher'] : NULL
> 				);
> 			}
> 		}
242,248c202
< 	/**
< 	 * Commit Transaction
< 	 *
< 	 * @access	public
< 	 * @return	bool
< 	 */
< 	function trans_commit()
---
> 		if ($this->_mysqli->real_connect($hostname, $this->username, $this->password, $this->database, $port, $socket, $client_flags))
250c204,209
< 		if ( ! $this->trans_enabled)
---
> 			// Prior to version 5.7.3, MySQL silently downgrades to an unencrypted connection if SSL setup fails
> 			if (
> 				($client_flags & MYSQLI_CLIENT_SSL)
> 				&& version_compare($this->_mysqli->client_info, '5.7.3', '<=')
> 				&& empty($this->_mysqli->query("SHOW STATUS LIKE 'ssl_cipher'")->fetch_object()->Value)
> 			)
252c211,214
< 			return TRUE;
---
> 				$this->_mysqli->close();
> 				$message = 'MySQLi was configured for an SSL connection, but got an unencrypted connection instead!';
> 				log_message('error', $message);
> 				return ($this->db->db_debug) ? $this->db->display_error($message, '', TRUE) : FALSE;
255,258c217
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
---
> 			return $this->_mysqli;
261,263c220
< 		$this->simple_query('COMMIT');
< 		$this->simple_query('SET AUTOCOMMIT=1');
< 		return TRUE;
---
> 		return FALSE;
269c226
< 	 * Rollback Transaction
---
> 	 * Reconnect
271,272c228,231
< 	 * @access	public
< 	 * @return	bool
---
> 	 * Keep / reestablish the db connection if no queries have been
> 	 * sent for a length of time exceeding the server's idle timeout
> 	 *
> 	 * @return	void
274c233
< 	function trans_rollback()
---
> 	public function reconnect()
276,282c235
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if ($this->conn_id !== FALSE && $this->conn_id->ping() === FALSE)
284c237
< 			return TRUE;
---
> 			$this->conn_id = FALSE;
286,289d238
< 
< 		$this->simple_query('ROLLBACK');
< 		$this->simple_query('SET AUTOCOMMIT=1');
< 		return TRUE;
295c244
< 	 * Escape String
---
> 	 * Select the database
297,300c246,247
< 	 * @access	public
< 	 * @param	string
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
< 	 * @return	string
---
> 	 * @param	string	$database
> 	 * @return	bool
302c249
< 	function escape_str($str, $like = FALSE)
---
> 	public function db_select($database = '')
304c251
< 		if (is_array($str))
---
> 		if ($database === '')
306,311c253
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
---
> 			$database = $this->database;
314,322c256
< 		if (function_exists('mysqli_real_escape_string') AND is_object($this->conn_id))
< 		{
< 			$str = mysqli_real_escape_string($this->conn_id, $str);
< 		}
< 		elseif (function_exists('mysql_escape_string'))
< 		{
< 			$str = mysql_escape_string($str);
< 		}
< 		else
---
> 		if ($this->conn_id->select_db($database))
324,330c258,259
< 			$str = addslashes($str);
< 		}
< 
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
< 		{
< 			$str = str_replace(array('%', '_'), array('\\%', '\\_'), $str);
---
> 			$this->database = $database;
> 			return TRUE;
333c262
< 		return $str;
---
> 		return FALSE;
339,352c268
< 	 * Affected Rows
< 	 *
< 	 * @access	public
< 	 * @return	integer
< 	 */
< 	function affected_rows()
< 	{
< 		return @mysqli_affected_rows($this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert ID
---
> 	 * Set client character set
354,355c270,271
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @param	string	$charset
> 	 * @return	bool
357c273
< 	function insert_id()
---
> 	protected function _db_set_charset($charset)
359c275
< 		return @mysqli_insert_id($this->conn_id);
---
> 		return $this->conn_id->set_charset($charset);
365,368c281
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
---
> 	 * Database version number
370,371d282
< 	 * @access	public
< 	 * @param	string
374,376c285
< 	function count_all($table = '')
< 	{
< 		if ($table == '')
---
> 	public function version()
378,383c287
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
---
> 		if (isset($this->data_cache['version']))
385c289
< 			return 0;
---
> 			return $this->data_cache['version'];
388,390c292
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		return $this->data_cache['version'] = $this->conn_id->server_info;
396,398c298
< 	 * List table query
< 	 *
< 	 * Generates a platform-specific query string so that the table names can be fetched
---
> 	 * Execute the query
400,402c300,301
< 	 * @access	private
< 	 * @param	boolean
< 	 * @return	string
---
> 	 * @param	string	$sql	an SQL query
> 	 * @return	mixed
404,408c303
< 	function _list_tables($prefix_limit = FALSE)
< 	{
< 		$sql = "SHOW TABLES FROM ".$this->_escape_char.$this->database.$this->_escape_char;
< 
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 	protected function _execute($sql)
410,413c305
< 			$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%'";
< 		}
< 
< 		return $sql;
---
> 		return $this->conn_id->query($this->_prep_query($sql));
419c311
< 	 * Show column query
---
> 	 * Prep the query
421c313
< 	 * Generates a platform-specific query string so that the column names can be fetched
---
> 	 * If needed, each database adapter can prep the query string
423,424c315
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$sql	an SQL query
427c318
< 	function _list_columns($table = '')
---
> 	protected function _prep_query($sql)
429,443c320,322
< 		return "SHOW COLUMNS FROM ".$this->_protect_identifiers($table, TRUE, NULL, FALSE);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _field_data($table)
---
> 		// mysqli_affected_rows() returns 0 for "DELETE FROM TABLE" queries. This hack
> 		// modifies the query so that it a proper number of affected rows is returned.
> 		if ($this->delete_hack === TRUE && preg_match('/^\s*DELETE\s+FROM\s+(\S+)\s*$/i', $sql))
445c324
< 		return "DESCRIBE ".$table;
---
> 			return trim($sql).' WHERE 1=1';
448,458c327
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
< 	 * @return	string
< 	 */
< 	function _error_message()
< 	{
< 		return mysqli_error($this->conn_id);
---
> 		return $sql;
464c333
< 	 * The error message number
---
> 	 * Begin Transaction
466,467c335
< 	 * @access	private
< 	 * @return	integer
---
> 	 * @return	bool
469c337
< 	function _error_number()
---
> 	protected function _trans_begin()
471c339,342
< 		return mysqli_errno($this->conn_id);
---
> 		$this->conn_id->autocommit(FALSE);
> 		return is_php('5.5')
> 			? $this->conn_id->begin_transaction()
> 			: $this->simple_query('START TRANSACTION'); // can also be BEGIN or BEGIN WORK
477,479c348
< 	 * Escape the SQL Identifiers
< 	 *
< 	 * This function escapes column and table names
---
> 	 * Commit Transaction
481,483c350
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
---
> 	 * @return	bool
485,503c352
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
< 		{
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
< 		}
< 
< 		if (strpos($item, '.') !== FALSE)
---
> 	protected function _trans_commit()
505,507c354
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
---
> 		if ($this->conn_id->commit())
509c356,357
< 			$str = $this->_escape_char.$item.$this->_escape_char;
---
> 			$this->conn_id->autocommit(TRUE);
> 			return TRUE;
512,513c360
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
---
> 		return FALSE;
519,522c366
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
---
> 	 * Rollback Transaction
524,526c368
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @return	bool
528c370
< 	function _from_tables($tables)
---
> 	protected function _trans_rollback()
530c372
< 		if ( ! is_array($tables))
---
> 		if ($this->conn_id->rollback())
532c374,375
< 			$tables = array($tables);
---
> 			$this->conn_id->autocommit(TRUE);
> 			return TRUE;
535c378
< 		return '('.implode(', ', $tables).')';
---
> 		return FALSE;
541,543c384
< 	 * Insert statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Platform-dependant string escape
545,548c386
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
---
> 	 * @param	string
551c389
< 	function _insert($table, $keys, $values)
---
> 	protected function _escape_str($str)
553c391
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		return $this->conn_id->real_escape_string($str);
559,561c397
< 	 * Insert_batch statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Affected Rows
563,567c399
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
---
> 	 * @return	int
569c401
< 	function _insert_batch($table, $keys, $values)
---
> 	public function affected_rows()
571c403
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
---
> 		return $this->conn_id->affected_rows;
578,580c409
< 	 * Replace statement
< 	 *
< 	 * Generates a platform-specific replace string from the supplied data
---
> 	 * Insert ID
582,586c411
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
---
> 	 * @return	int
588c413
< 	function _replace($table, $keys, $values)
---
> 	public function insert_id()
590c415
< 		return "REPLACE INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		return $this->conn_id->insert_id;
596c421
< 	 * Update statement
---
> 	 * List table query
598c423
< 	 * Generates a platform-specific update string from the supplied data
---
> 	 * Generates a platform-specific query string so that the table names can be fetched
600,605c425
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
---
> 	 * @param	bool	$prefix_limit
608c428
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
610c430,432
< 		foreach ($values as $key => $val)
---
> 		$sql = 'SHOW TABLES FROM '.$this->escape_identifiers($this->database);
> 
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
612c434
< 			$valstr[] = $key." = ".$val;
---
> 			return $sql." LIKE '".$this->escape_like_str($this->dbprefix)."%'";
615,624d436
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
631c443
< 	 * Update_Batch statement
---
> 	 * Show column query
633c445
< 	 * Generates a platform-specific batch update string from the supplied data
---
> 	 * Generates a platform-specific query string so that the column names can be fetched
635,638c447
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
---
> 	 * @param	string	$table
641,646c450
< 	function _update_batch($table, $values, $index, $where = NULL)
< 	{
< 		$ids = array();
< 		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
< 
< 		foreach ($values as $key => $val)
---
> 	protected function _list_columns($table = '')
648,656c452
< 			$ids[] = $val[$index];
< 
< 			foreach (array_keys($val) as $field)
< 			{
< 				if ($field != $index)
< 				{
< 					$final[$field][] =  'WHEN '.$index.' = '.$val[$index].' THEN '.$val[$field];
< 				}
< 			}
---
> 		return 'SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE);
659,660c455
< 		$sql = "UPDATE ".$table." SET ";
< 		$cases = '';
---
> 	// --------------------------------------------------------------------
662c457,463
< 		foreach ($final as $k => $v)
---
> 	/**
> 	 * Returns an object with field data
> 	 *
> 	 * @param	string	$table
> 	 * @return	array
> 	 */
> 	public function field_data($table)
664,665c465
< 			$cases .= $k.' = CASE '."\n";
< 			foreach ($v as $row)
---
> 		if (($query = $this->query('SHOW COLUMNS FROM '.$this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE)
667c467
< 				$cases .= $row."\n";
---
> 			return FALSE;
668a469
> 		$query = $query->result_object();
670,673c471,475
< 			$cases .= 'ELSE '.$k.' END, ';
< 		}
< 
< 		$sql .= substr($cases, 0, -2);
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
> 		{
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->Field;
675c477,480
< 		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
---
> 			sscanf($query[$i]->Type, '%[a-z](%d)',
> 				$retval[$i]->type,
> 				$retval[$i]->max_length
> 			);
677c482,483
< 		return $sql;
---
> 			$retval[$i]->default		= $query[$i]->Default;
> 			$retval[$i]->primary_key	= (int) ($query[$i]->Key === 'PRI');
680,695c486
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Truncate statement
< 	 *
< 	 * Generates a platform-specific truncate string from the supplied data
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _truncate($table)
< 	{
< 		return "TRUNCATE ".$table;
---
> 		return $retval;
701c492
< 	 * Delete statement
---
> 	 * Error
703c494,495
< 	 * Generates a platform-specific delete string from the supplied data
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occurred.
705,709c497
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
< 	 * @return	string
---
> 	 * @return	array
711,715c499
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
< 	{
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
---
> 	public function error()
717,720c501
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
---
> 		if ( ! empty($this->_mysqli->connect_errno))
722c503,506
< 				$conditions .= " AND ";
---
> 			return array(
> 				'code' => $this->_mysqli->connect_errno,
> 				'message' => is_php('5.2.9') ? $this->_mysqli->connect_error : mysqli_connect_error()
> 			);
724,727d507
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
729c509
< 		return "DELETE FROM ".$table.$conditions.$limit;
---
> 		return array('code' => $this->conn_id->errno, 'message' => $this->conn_id->error);
735c515
< 	 * Limit string
---
> 	 * FROM tables
737c517,518
< 	 * Generates a platform-specific LIMIT clause
---
> 	 * Groups tables in FROM clauses if needed, so there is no confusion
> 	 * about operator precedence.
739,742d519
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
745c522
< 	function _limit($sql, $limit, $offset)
---
> 	protected function _from_tables()
747,749c524
< 		$sql .= "LIMIT ".$limit;
< 
< 		if ($offset > 0)
---
> 		if ( ! empty($this->qb_join) && count($this->qb_from) > 1)
751c526
< 			$sql .= " OFFSET ".$offset;
---
> 			return '('.implode(', ', $this->qb_from).')';
754c529
< 		return $sql;
---
> 		return implode(', ', $this->qb_from);
762,763d536
< 	 * @access	public
< 	 * @param	resource
766c539
< 	function _close($conn_id)
---
> 	protected function _close()
768c541
< 		@mysqli_close($conn_id);
---
> 		$this->conn_id->close();
773,776d544
< 
< 
< /* End of file mysqli_driver.php */
< /* Location: ./system/database/drivers/mysqli/mysqli_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysqli/mysqli_forge.php opensourcepos/system/database/drivers/mysqli/mysqli_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c52
< 	 * Create database
---
> 	 * CREATE DATABASE statement
30,32c54
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,37c56
< 	function _create_database($name)
< 	{
< 		return "CREATE DATABASE ".$name;
< 	}
---
> 	protected $_create_database	= 'CREATE DATABASE %s CHARACTER SET %s COLLATE %s';
39c58,66
< 	// --------------------------------------------------------------------
---
> 	/**
> 	 * CREATE TABLE keys flag
> 	 *
> 	 * Whether table keys are created from within the
> 	 * CREATE TABLE statement.
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_create_table_keys	= TRUE;
42c69
< 	 * Drop database
---
> 	 * UNSIGNED support
44,46c71
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	array
48,51c73,93
< 	function _drop_database($name)
< 	{
< 		return "DROP DATABASE ".$name;
< 	}
---
> 	protected $_unsigned		= array(
> 		'TINYINT',
> 		'SMALLINT',
> 		'MEDIUMINT',
> 		'INT',
> 		'INTEGER',
> 		'BIGINT',
> 		'REAL',
> 		'DOUBLE',
> 		'DOUBLE PRECISION',
> 		'FLOAT',
> 		'DECIMAL',
> 		'NUMERIC'
> 	);
> 
> 	/**
> 	 * NULL value representation in CREATE/ALTER TABLE statements
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_null = 'NULL';
56c98
< 	 * Process Fields
---
> 	 * CREATE TABLE attributes
58,59c100
< 	 * @access	private
< 	 * @param	mixed	the fields
---
> 	 * @param	array	$attributes	Associative array of table attributes
62c103
< 	function _process_fields($fields)
---
> 	protected function _create_table_attr($attributes)
64d104
< 		$current_field_count = 0;
67,82c107
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				if (array_key_exists('NAME', $attributes))
---
> 		foreach (array_keys($attributes) as $key)
84,107c109
< 					$sql .= ' '.$this->db->_protect_identifiers($attributes['NAME']).' ';
< 				}
< 
< 				if (array_key_exists('TYPE', $attributes))
< 				{
< 					$sql .=  ' '.$attributes['TYPE'];
< 				}
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
< 				{
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
---
> 			if (is_string($key))
109c111
< 					$sql .= ' NULL';
---
> 				$sql .= ' '.strtoupper($key).' = '.$attributes[$key];
111,113d112
< 				else
< 				{
< 					$sql .= ' NOT NULL';
116c115
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
---
> 		if ( ! empty($this->db->char_set) && ! strpos($sql, 'CHARACTER SET') && ! strpos($sql, 'CHARSET'))
118,119c117
< 					$sql .= ' AUTO_INCREMENT';
< 				}
---
> 			$sql .= ' DEFAULT CHARACTER SET = '.$this->db->char_set;
122,123c120
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
---
> 		if ( ! empty($this->db->dbcollat) && ! strpos($sql, 'COLLATE'))
125,126c122
< 				$sql .= ',';
< 			}
---
> 			$sql .= ' COLLATE = '.$this->db->dbcollat;
135c131
< 	 * Create Table
---
> 	 * ALTER TABLE
137,143c133,136
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	mixed	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
145c138
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
---
> 	protected function _alter_table($alter_type, $table, $field)
147,149c140
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
---
> 		if ($alter_type === 'DROP')
151c142
< 			$sql .= 'IF NOT EXISTS ';
---
> 			return parent::_alter_table($alter_type, $table, $field);
154,158c145,146
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 
< 		$sql .= $this->_process_fields($fields);
< 
< 		if (count($primary_keys) > 0)
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
160,165c148
< 			$key_name = $this->db->_protect_identifiers(implode('_', $primary_keys));
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY ".$key_name." (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
---
> 			if ($field[$i]['_literal'] !== FALSE)
167c150,154
< 			foreach ($keys as $key)
---
> 				$field[$i] = ($alter_type === 'ADD')
> 						? "\n\tADD ".$field[$i]['_literal']
> 						: "\n\tMODIFY ".$field[$i]['_literal'];
> 			}
> 			else
169c156
< 				if (is_array($key))
---
> 				if ($alter_type === 'ADD')
171,172c158
< 					$key_name = $this->db->_protect_identifiers(implode('_', $key));
< 					$key = $this->db->_protect_identifiers($key);
---
> 					$field[$i]['_literal'] = "\n\tADD ";
176,177c162
< 					$key_name = $this->db->_protect_identifiers($key);
< 					$key = array($key_name);
---
> 					$field[$i]['_literal'] = empty($field[$i]['new_name']) ? "\n\tMODIFY " : "\n\tCHANGE ";
180c165
< 				$sql .= ",\n\tKEY {$key_name} (" . implode(', ', $key) . ")";
---
> 				$field[$i] = $field[$i]['_literal'].$this->_process_column($field[$i]);
184,186c169
< 		$sql .= "\n) DEFAULT CHARACTER SET {$this->db->char_set} COLLATE {$this->db->dbcollat};";
< 
< 		return $sql;
---
> 		return array($sql.implode(',', $field));
192c175
< 	 * Drop Table
---
> 	 * Process column
194c177
< 	 * @access	private
---
> 	 * @param	array	$field
197c180
< 	function _drop_table($table)
---
> 	protected function _process_column($field)
199c182,199
< 		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table);
---
> 		$extra_clause = isset($field['after'])
> 			? ' AFTER '.$this->db->escape_identifiers($field['after']) : '';
> 
> 		if (empty($extra_clause) && isset($field['first']) && $field['first'] === TRUE)
> 		{
> 			$extra_clause = ' FIRST';
> 		}
> 
> 		return $this->db->escape_identifiers($field['name'])
> 			.(empty($field['new_name']) ? '' : ' '.$this->db->escape_identifiers($field['new_name']))
> 			.' '.$field['type'].$field['length']
> 			.$field['unsigned']
> 			.$field['null']
> 			.$field['default']
> 			.$field['auto_increment']
> 			.$field['unique']
> 			.(empty($field['comment']) ? '' : ' COMMENT '.$field['comment'])
> 			.$extra_clause;
205,208c205
< 	 * Alter table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * Process indexes
210,215c207,208
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	array	fields
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	string	$table	(ignored)
> 	 * @return	string
217c210
< 	function _alter_table($alter_type, $table, $fields, $after_field = '')
---
> 	protected function _process_indexes($table)
219c212
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ";
---
> 		$sql = '';
221,222c214,220
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
---
> 		for ($i = 0, $c = count($this->keys); $i < $c; $i++)
> 		{
> 			if (is_array($this->keys[$i]))
> 			{
> 				for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++)
> 				{
> 					if ( ! isset($this->fields[$this->keys[$i][$i2]]))
224c222,223
< 			return $sql.$this->db->_protect_identifiers($fields);
---
> 						unset($this->keys[$i][$i2]);
> 						continue;
226,229c225,227
< 
< 		$sql .= $this->_process_fields($fields);
< 
< 		if ($after_field != '')
---
> 				}
> 			}
> 			elseif ( ! isset($this->fields[$this->keys[$i]]))
231c229,230
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 				unset($this->keys[$i]);
> 				continue;
234c233,236
< 		return $sql;
---
> 			is_array($this->keys[$i]) OR $this->keys[$i] = array($this->keys[$i]);
> 
> 			$sql .= ",\n\tKEY ".$this->db->escape_identifiers(implode('_', $this->keys[$i]))
> 				.' ('.implode(', ', $this->db->escape_identifiers($this->keys[$i])).')';
237c239
< 	// --------------------------------------------------------------------
---
> 		$this->keys = array();
239,251d240
< 	/**
< 	 * Rename a table
< 	 *
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
< 	 */
< 	function _rename_table($table_name, $new_table_name)
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
256,258d244
< 
< /* End of file mysqli_forge.php */
< /* Location: ./system/database/drivers/mysqli/mysqli_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysqli/mysqli_result.php opensourcepos/system/database/drivers/mysqli/mysqli_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22a45,46
>  * @package		CodeIgniter
>  * @subpackage	Drivers
24,25c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
32,33c56
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c58
< 	function num_rows()
---
> 	public function num_rows()
37c60,62
< 		return @mysqli_num_rows($this->result_id);
---
> 		return is_int($this->num_rows)
> 			? $this->num_rows
> 			: $this->num_rows = $this->result_id->num_rows;
45,46c70
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c72
< 	function num_fields()
---
> 	public function num_fields()
50c74
< 		return @mysqli_num_fields($this->result_id);
---
> 		return $this->result_id->field_count;
60d83
< 	 * @access	public
63c86
< 	function list_fields()
---
> 	public function list_fields()
66c89,90
< 		while ($field = mysqli_fetch_field($this->result_id))
---
> 		$this->result_id->field_seek(0);
> 		while ($field = $this->result_id->fetch_field())
81d104
< 	 * @access	public
84c107
< 	function field_data()
---
> 	public function field_data()
87c110,111
< 		while ($field = mysqli_fetch_object($this->result_id))
---
> 		$field_data = $this->result_id->fetch_fields();
> 		for ($i = 0, $c = count($field_data); $i < $c; $i++)
89,101c113,118
< 			preg_match('/([a-zA-Z]+)(\(\d+\))?/', $field->Type, $matches);
< 
< 			$type = (array_key_exists(1, $matches)) ? $matches[1] : NULL;
< 			$length = (array_key_exists(2, $matches)) ? preg_replace('/[^\d]/', '', $matches[2]) : NULL;
< 
< 			$F				= new stdClass();
< 			$F->name		= $field->Field;
< 			$F->type		= $type;
< 			$F->default		= $field->Default;
< 			$F->max_length	= $length;
< 			$F->primary_key = ( $field->Key == 'PRI' ? 1 : 0 );
< 
< 			$retval[] = $F;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $field_data[$i]->name;
> 			$retval[$i]->type		= $field_data[$i]->type;
> 			$retval[$i]->max_length		= $field_data[$i]->max_length;
> 			$retval[$i]->primary_key	= (int) ($field_data[$i]->flags & 2);
> 			$retval[$i]->default		= $field_data[$i]->def;
112c129
< 	 * @return	null
---
> 	 * @return	void
114c131
< 	function free_result()
---
> 	public function free_result()
118c135
< 			mysqli_free_result($this->result_id);
---
> 			$this->result_id->free();
130c147
< 	 * result set starts at zero
---
> 	 * result set starts at zero.
132,133c149,150
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	int	$n
> 	 * @return	bool
135c152
< 	function _data_seek($n = 0)
---
> 	public function data_seek($n = 0)
137c154
< 		return mysqli_data_seek($this->result_id, $n);
---
> 		return $this->result_id->data_seek($n);
147d163
< 	 * @access	private
150c166
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
152c168
< 		return mysqli_fetch_assoc($this->result_id);
---
> 		return $this->result_id->fetch_assoc();
162c178
< 	 * @access	private
---
> 	 * @param	string	$class_name
165c181
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
167c183
< 		return mysqli_fetch_object($this->result_id);
---
> 		return $this->result_id->fetch_object($class_name);
171,174d186
< 
< 
< /* End of file mysqli_result.php */
< /* Location: ./system/database/drivers/mysqli/mysqli_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/mysqli/mysqli_utility.php opensourcepos/system/database/drivers/mysqli/mysqli_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c52
< 	 * List databases
---
> 	 * List databases statement
30,31c54
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	string
33,38c56
< 	function _list_databases()
< 	{
< 		return "SHOW DATABASES";
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_list_databases	= 'SHOW DATABASES';
41c59
< 	 * Optimize table query
---
> 	 * OPTIMIZE TABLE statement
43,47c61
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
49,54c63
< 	function _optimize_table($table)
< 	{
< 		return "OPTIMIZE TABLE ".$this->db->_escape_identifiers($table);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_optimize_table	= 'OPTIMIZE TABLE %s';
57c66
< 	 * Repair table query
---
> 	 * REPAIR TABLE statement
59,63c68
< 	 * Generates a platform-specific query so that a table can be repaired
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
65,68c70
< 	function _repair_table($table)
< 	{
< 		return "REPAIR TABLE ".$this->db->_escape_identifiers($table);
< 	}
---
> 	protected $_repair_table	= 'REPAIR TABLE %s';
73c75
< 	 * MySQLi Export
---
> 	 * Export
75,76c77
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
79c80,82
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
> 	{
> 		if (count($params) === 0)
81,82c84
< 		// Currently unsupported
< 		return $this->db->display_error('db_unsuported_feature');
---
> 			return FALSE;
83a86,113
> 
> 		// Extract the prefs for simplicity
> 		extract($params);
> 
> 		// Build the output
> 		$output = '';
> 
> 		// Do we need to include a statement to disable foreign key checks?
> 		if ($foreign_key_checks === FALSE)
> 		{
> 			$output .= 'SET foreign_key_checks = 0;'.$newline;
> 		}
> 
> 		foreach ( (array) $tables as $table)
> 		{
> 			// Is the table in the "ignore" list?
> 			if (in_array($table, (array) $ignore, TRUE))
> 			{
> 				continue;
> 			}
> 
> 			// Get the table schema
> 			$query = $this->db->query('SHOW CREATE TABLE '.$this->db->escape_identifiers($this->db->database.'.'.$table));
> 
> 			// No result means the table name was invalid
> 			if ($query === FALSE)
> 			{
> 				continue;
86,87c116,213
< /* End of file mysqli_utility.php */
< /* Location: ./system/database/drivers/mysqli/mysqli_utility.php */
\ No newline at end of file
---
> 			// Write out the table schema
> 			$output .= '#'.$newline.'# TABLE STRUCTURE FOR: '.$table.$newline.'#'.$newline.$newline;
> 
> 			if ($add_drop === TRUE)
> 			{
> 				$output .= 'DROP TABLE IF EXISTS '.$this->db->protect_identifiers($table).';'.$newline.$newline;
> 			}
> 
> 			$i = 0;
> 			$result = $query->result_array();
> 			foreach ($result[0] as $val)
> 			{
> 				if ($i++ % 2)
> 				{
> 					$output .= $val.';'.$newline.$newline;
> 				}
> 			}
> 
> 			// If inserts are not needed we're done...
> 			if ($add_insert === FALSE)
> 			{
> 				continue;
> 			}
> 
> 			// Grab all the data from the current table
> 			$query = $this->db->query('SELECT * FROM '.$this->db->protect_identifiers($table));
> 
> 			if ($query->num_rows() === 0)
> 			{
> 				continue;
> 			}
> 
> 			// Fetch the field names and determine if the field is an
> 			// integer type. We use this info to decide whether to
> 			// surround the data with quotes or not
> 
> 			$i = 0;
> 			$field_str = '';
> 			$is_int = array();
> 			while ($field = $query->result_id->fetch_field())
> 			{
> 				// Most versions of MySQL store timestamp as a string
> 				$is_int[$i] = in_array(strtolower($field->type),
> 							array('tinyint', 'smallint', 'mediumint', 'int', 'bigint'), //, 'timestamp'),
> 							TRUE);
> 
> 				// Create a string of field names
> 				$field_str .= $this->db->escape_identifiers($field->name).', ';
> 				$i++;
> 			}
> 
> 			// Trim off the end comma
> 			$field_str = preg_replace('/, $/' , '', $field_str);
> 
> 			// Build the insert string
> 			foreach ($query->result_array() as $row)
> 			{
> 				$val_str = '';
> 
> 				$i = 0;
> 				foreach ($row as $v)
> 				{
> 					// Is the value NULL?
> 					if ($v === NULL)
> 					{
> 						$val_str .= 'NULL';
> 					}
> 					else
> 					{
> 						// Escape the data if it's not an integer
> 						$val_str .= ($is_int[$i] === FALSE) ? $this->db->escape($v) : $v;
> 					}
> 
> 					// Append a comma
> 					$val_str .= ', ';
> 					$i++;
> 				}
> 
> 				// Remove the comma at the end of the string
> 				$val_str = preg_replace('/, $/' , '', $val_str);
> 
> 				// Build the INSERT string
> 				$output .= 'INSERT INTO '.$this->db->protect_identifiers($table).' ('.$field_str.') VALUES ('.$val_str.');'.$newline;
> 			}
> 
> 			$output .= $newline.$newline;
> 		}
> 
> 		// Do we need to include a statement to re-enable foreign key checks?
> 		if ($foreign_key_checks === FALSE)
> 		{
> 			$output .= 'SET foreign_key_checks = 1;'.$newline;
> 		}
> 
> 		return $output;
> 	}
> 
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/oci8/index.html opensourcepos/system/database/drivers/oci8/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/oci8/oci8_driver.php opensourcepos/system/database/drivers/oci8/oci8_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright   Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.4.1
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
39d60
<  *
44c64,69
< 	var $dbdriver = 'oci8';
---
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver = 'oci8';
46,47c71,76
< 	// The character used for excaping
< 	var $_escape_char = '"';
---
> 	/**
> 	 * Statement ID
> 	 *
> 	 * @var	resource
> 	 */
> 	public $stmt_id;
49,51c78,83
< 	// clause and character used for LIKE escape sequences
< 	var $_like_escape_str = " escape '%s' ";
< 	var $_like_escape_chr = '!';
---
> 	/**
> 	 * Cursor ID
> 	 *
> 	 * @var	resource
> 	 */
> 	public $curs_id;
54,56c86,88
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
---
> 	 * Commit mode flag
> 	 *
> 	 * @var	int
58,59c90
< 	var $_count_string = "SELECT COUNT(1) AS ";
< 	var $_random_keyword = ' ASC'; // not currently supported
---
> 	public $commit_mode = OCI_COMMIT_ON_SUCCESS;
61,62c92,100
< 	// Set "auto commit" by default
< 	var $_commit = OCI_COMMIT_ON_SUCCESS;
---
> 	/**
> 	 * Limit used flag
> 	 *
> 	 * If we use LIMIT, we'll add a field that will
> 	 * throw off num_fields later.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $limit_used;
64,66c102
< 	// need to track statement id and cursor id
< 	var $stmt_id;
< 	var $curs_id;
---
> 	// --------------------------------------------------------------------
68,70c104,110
< 	// if we use a limit, we will add a field that will
< 	// throw off num_fields later
< 	var $limit_used;
---
> 	/**
> 	 * Reset $stmt_id flag
> 	 *
> 	 * Used by stored_procedure() to prevent _execute() from
> 	 * re-setting the statement ID.
> 	 */
> 	protected $_reset_stmt_id = TRUE;
73c113
< 	 * Non-persistent database connection
---
> 	 * List of reserved identifiers
75,76c115,117
< 	 * @access  private called by the base class
< 	 * @return  resource
---
> 	 * Identifiers that must NOT be escaped.
> 	 *
> 	 * @var	string[]
78,81c119
< 	public function db_connect()
< 	{
< 		return @oci_connect($this->username, $this->password, $this->hostname, $this->char_set);
< 	}
---
> 	protected $_reserved_identifiers = array('*', 'rownum');
83c121,126
< 	// --------------------------------------------------------------------
---
> 	/**
> 	 * ORDER BY random keyword
> 	 *
> 	 * @var	array
> 	 */
> 	protected $_random_keyword = array('ASC', 'ASC'); // not currently supported
86c129
< 	 * Persistent database connection
---
> 	 * COUNT string
88,89c131,134
< 	 * @access  private called by the base class
< 	 * @return  resource
---
> 	 * @used-by	CI_DB_driver::count_all()
> 	 * @used-by	CI_DB_query_builder::count_all_results()
> 	 *
> 	 * @var	string
91,94c136
< 	public function db_pconnect()
< 	{
< 		return @oci_pconnect($this->username, $this->password, $this->hostname, $this->char_set);
< 	}
---
> 	protected $_count_string = 'SELECT COUNT(1) AS ';
99,102c141
< 	 * Reconnect
< 	 *
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
---
> 	 * Class constructor
104c143
< 	 * @access	public
---
> 	 * @param	array	$params
107c146,166
< 	public function reconnect()
---
> 	public function __construct($params)
> 	{
> 		parent::__construct($params);
> 
> 		$valid_dsns = array(
> 			'tns'	=> '/^\(DESCRIPTION=(\(.+\)){2,}\)$/', // TNS
> 			// Easy Connect string (Oracle 10g+)
> 			'ec'	=> '/^(\/\/)?[a-z0-9.:_-]+(:[1-9][0-9]{0,4})?(\/[a-z0-9$_]+)?(:[^\/])?(\/[a-z0-9$_]+)?$/i',
> 			'in'	=> '/^[a-z0-9$_]+$/i' // Instance name (defined in tnsnames.ora)
> 		);
> 
> 		/* Space characters don't have any effect when actually
> 		 * connecting, but can be a hassle while validating the DSN.
> 		 */
> 		$this->dsn = str_replace(array("\n", "\r", "\t", ' '), '', $this->dsn);
> 
> 		if ($this->dsn !== '')
> 		{
> 			foreach ($valid_dsns as $regexp)
> 			{
> 				if (preg_match($regexp, $this->dsn))
109d167
< 		// not implemented in oracle
111a170,171
> 			}
> 		}
113c173,192
< 	// --------------------------------------------------------------------
---
> 		// Legacy support for TNS in the hostname configuration field
> 		$this->hostname = str_replace(array("\n", "\r", "\t", ' '), '', $this->hostname);
> 		if (preg_match($valid_dsns['tns'], $this->hostname))
> 		{
> 			$this->dsn = $this->hostname;
> 			return;
> 		}
> 		elseif ($this->hostname !== '' && strpos($this->hostname, '/') === FALSE && strpos($this->hostname, ':') === FALSE
> 			&& (( ! empty($this->port) && ctype_digit($this->port)) OR $this->database !== ''))
> 		{
> 			/* If the hostname field isn't empty, doesn't contain
> 			 * ':' and/or '/' and if port and/or database aren't
> 			 * empty, then the hostname field is most likely indeed
> 			 * just a hostname. Therefore we'll try and build an
> 			 * Easy Connect string from these 3 settings, assuming
> 			 * that the database field is a service name.
> 			 */
> 			$this->dsn = $this->hostname
> 				.(( ! empty($this->port) && ctype_digit($this->port)) ? ':'.$this->port : '')
> 				.($this->database !== '' ? '/'.ltrim($this->database, '/') : '');
115,119c194,201
< 	/**
< 	 * Select the database
< 	 *
< 	 * @access  private called by the base class
< 	 * @return  resource
---
> 			if (preg_match($valid_dsns['ec'], $this->dsn))
> 			{
> 				return;
> 			}
> 		}
> 
> 		/* At this point, we can only try and validate the hostname and
> 		 * database fields separately as DSNs.
121c203
< 	public function db_select()
---
> 		if (preg_match($valid_dsns['ec'], $this->hostname) OR preg_match($valid_dsns['in'], $this->hostname))
123,124c205,206
< 		// Not in Oracle - schemas are actually usernames
< 		return TRUE;
---
> 			$this->dsn = $this->hostname;
> 			return;
127c209,216
< 	// --------------------------------------------------------------------
---
> 		$this->database = str_replace(array("\n", "\r", "\t", ' '), '', $this->database);
> 		foreach ($valid_dsns as $regexp)
> 		{
> 			if (preg_match($regexp, $this->database))
> 			{
> 				return;
> 			}
> 		}
129,135c218,220
< 	/**
< 	 * Set client character set
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
---
> 		/* Well - OK, an empty string should work as well.
> 		 * PHP will try to use environment variables to
> 		 * determine which Oracle instance to connect to.
137,140c222
< 	public function db_set_charset($charset, $collation)
< 	{
< 		// @todo - add support if needed
< 		return TRUE;
---
> 		$this->dsn = '';
146c228
< 	 * Version number query string
---
> 	 * Non-persistent database connection
148,149c230,231
< 	 * @access  protected
< 	 * @return  string
---
> 	 * @param	bool	$persistent
> 	 * @return	resource
151c233
< 	protected function _version()
---
> 	public function db_connect($persistent = FALSE)
153c235,238
< 		return oci_server_version($this->conn_id);
---
> 		$func = ($persistent === TRUE) ? 'oci_pconnect' : 'oci_connect';
> 		return empty($this->char_set)
> 			? $func($this->username, $this->password, $this->dsn)
> 			: $func($this->username, $this->password, $this->dsn, $this->char_set);
159c244
< 	 * Execute the query
---
> 	 * Database version number
161,163c246
< 	 * @access  protected  called by the base class
< 	 * @param   string  an SQL query
< 	 * @return  resource
---
> 	 * @return	string
165c248
< 	protected function _execute($sql)
---
> 	public function version()
167,172c250,252
< 		// oracle must parse the query before it is run. All of the actions with
< 		// the query are based on the statement id returned by ociparse
< 		$this->stmt_id = FALSE;
< 		$this->_set_stmt_id($sql);
< 		oci_set_prefetch($this->stmt_id, 1000);
< 		return @oci_execute($this->stmt_id, $this->_commit);
---
> 		if (isset($this->data_cache['version']))
> 		{
> 			return $this->data_cache['version'];
175,182c255
< 	/**
< 	 * Generate a statement ID
< 	 *
< 	 * @access  private
< 	 * @param   string  an SQL query
< 	 * @return  none
< 	 */
< 	private function _set_stmt_id($sql)
---
> 		if ( ! $this->conn_id OR ($version_string = oci_server_version($this->conn_id)) === FALSE)
184c257,259
< 		if ( ! is_resource($this->stmt_id))
---
> 			return FALSE;
> 		}
> 		elseif (preg_match('#Release\s(\d+(?:\.\d+)+)#', $version_string, $match))
186c261
< 			$this->stmt_id = oci_parse($this->conn_id, $this->_prep_query($sql));
---
> 			return $this->data_cache['version'] = $match[1];
187a263,264
> 
> 		return FALSE;
193,195c270
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
---
> 	 * Execute the query
197,199c272,278
< 	 * @access  private called by execute()
< 	 * @param   string  an SQL query
< 	 * @return  string
---
> 	 * @param	string	$sql	an SQL query
> 	 * @return	resource
> 	 */
> 	protected function _execute($sql)
> 	{
> 		/* Oracle must parse the query before it is run. All of the actions with
> 		 * the query are based on the statement id returned by oci_parse().
201c280
< 	private function _prep_query($sql)
---
> 		if ($this->_reset_stmt_id === TRUE)
203c282,286
< 		return $sql;
---
> 			$this->stmt_id = oci_parse($this->conn_id, $sql);
> 		}
> 
> 		oci_set_prefetch($this->stmt_id, 1000);
> 		return oci_execute($this->stmt_id, $this->commit_mode);
209c292
< 	 * getCursor.  Returns a cursor from the datbase
---
> 	 * Get cursor. Returns a cursor from the database
211,212c294
< 	 * @access  public
< 	 * @return  cursor id
---
> 	 * @return	resource
216,217c298
< 		$this->curs_id = oci_new_cursor($this->conn_id);
< 		return $this->curs_id;
---
> 		return $this->curs_id = oci_new_cursor($this->conn_id);
225,229c306,309
< 	 * @access  public
< 	 * @param   package	 package stored procedure is in
< 	 * @param   procedure   stored procedure to execute
< 	 * @param   params	  array of parameters
< 	 * @return  array
---
> 	 * @param	string	package name in which the stored procedure is in
> 	 * @param	string	stored procedure name to execute
> 	 * @param	array	parameters
> 	 * @return	mixed
240c320
< 	public function stored_procedure($package, $procedure, $params)
---
> 	public function stored_procedure($package, $procedure, array $params)
242,244c322
< 		if ($package == '' OR $procedure == '' OR ! is_array($params))
< 		{
< 			if ($this->db_debug)
---
> 		if ($package === '' OR $procedure === '')
247,249c325
< 				return $this->display_error('db_invalid_query');
< 			}
< 			return FALSE;
---
> 			return ($this->db_debug) ? $this->display_error('db_invalid_query') : FALSE;
253c329
< 		$sql = "begin $package.$procedure(";
---
> 		$sql = 'BEGIN '.$package.'.'.$procedure.'(';
258c334
< 			$sql .= $param['name'] . ",";
---
> 			$sql .= $param['name'].',';
260c336
< 			if (array_key_exists('type', $param) && ($param['type'] === OCI_B_CURSOR))
---
> 			if (isset($param['type']) && $param['type'] === OCI_B_CURSOR)
265c341
< 		$sql = trim($sql, ",") . "); end;";
---
> 		$sql = trim($sql, ',').'); END;';
267,268c343,344
< 		$this->stmt_id = FALSE;
< 		$this->_set_stmt_id($sql);
---
> 		$this->_reset_stmt_id = FALSE;
> 		$this->stmt_id = oci_parse($this->conn_id, $sql);
270c346,348
< 		$this->query($sql, FALSE, $have_cursor);
---
> 		$result = $this->query($sql, FALSE, $have_cursor);
> 		$this->_reset_stmt_id = TRUE;
> 		return $result;
278,279c356,357
< 	 * @access  private
< 	 * @return  none
---
> 	 * @param	array	$params
> 	 * @return	void
281c359
< 	private function _bind_params($params)
---
> 	protected function _bind_params($params)
307d384
< 	 * @access	public
310,312c387
< 	public function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_begin()
314,328c389
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		$this->_commit = OCI_DEFAULT;
---
> 		$this->commit_mode = is_php('5.3.2') ? OCI_NO_AUTO_COMMIT : OCI_DEFAULT;
337d397
< 	 * @access	public
340,342c400
< 	public function trans_commit()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_commit()
344,345c402
< 			return TRUE;
< 		}
---
> 		$this->commit_mode = OCI_COMMIT_ON_SUCCESS;
347,355c404
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		$ret = oci_commit($this->conn_id);
< 		$this->_commit = OCI_COMMIT_ON_SUCCESS;
< 		return $ret;
---
> 		return oci_commit($this->conn_id);
363d411
< 	 * @access	public
366c414
< 	public function trans_rollback()
---
> 	protected function _trans_rollback()
368,416c416,417
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		$ret = oci_rollback($this->conn_id);
< 		$this->_commit = OCI_COMMIT_ON_SUCCESS;
< 		return $ret;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Escape String
< 	 *
< 	 * @access  public
< 	 * @param   string
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
< 	 * @return  string
< 	 */
< 	public function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
< 		{
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
< 		}
< 
< 		$str = remove_invisible_characters($str);
< 
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
< 		{
< 			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
< 								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
< 								$str);
< 		}
< 
< 		return $str;
---
> 		$this->commit_mode = OCI_COMMIT_ON_SUCCESS;
> 		return oci_rollback($this->conn_id);
424,425c425
< 	 * @access  public
< 	 * @return  integer
---
> 	 * @return	int
429c429
< 		return @oci_num_rows($this->stmt_id);
---
> 		return oci_num_rows($this->stmt_id);
437,438c437
< 	 * @access  public
< 	 * @return  integer
---
> 	 * @return	int
449,479d447
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
< 	 *
< 	 * @access  public
< 	 * @param   string
< 	 * @return  string
< 	 */
< 	public function count_all($table = '')
< 	{
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query == FALSE)
< 		{
< 			return 0;
< 		}
< 
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
484,485c452
< 	 * @access	protected
< 	 * @param	boolean
---
> 	 * @param	bool	$prefix_limit
490c457
< 		$sql = "SELECT TABLE_NAME FROM ALL_TABLES";
---
> 		$sql = 'SELECT "TABLE_NAME" FROM "ALL_TABLES"';
492c459
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
494c461,462
< 			$sql .= " WHERE TABLE_NAME LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
---
> 			return $sql.' WHERE "TABLE_NAME" LIKE \''.$this->escape_like_str($this->dbprefix)."%' "
> 				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
507,508c475
< 	 * @access  protected
< 	 * @param   string  the table name
---
> 	 * @param	string	$table
513c480,482
< 		return "SELECT COLUMN_NAME FROM all_tab_columns WHERE table_name = '$table'";
---
> 		if (strpos($table, '.') !== FALSE)
> 		{
> 			sscanf($table, '%[^.].%s', $owner, $table);
515,527c484
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
< 	 *
< 	 * @access  public
< 	 * @param   string  the table name
< 	 * @return  object
< 	 */
< 	protected function _field_data($table)
---
> 		else
529c486
< 		return "SELECT * FROM ".$table." where rownum = 1";
---
> 			$owner = $this->username;
532,544c489,491
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access  protected
< 	 * @return  string
< 	 */
< 	protected function _error_message()
< 	{
< 		// If the error was during connection, no conn_id should be passed
< 		$error = is_resource($this->conn_id) ? oci_error($this->conn_id) : oci_error();
< 		return $error['message'];
---
> 		return 'SELECT COLUMN_NAME FROM ALL_TAB_COLUMNS
> 			WHERE UPPER(OWNER) = '.$this->escape(strtoupper($owner)).'
> 				AND UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
550c497
< 	 * The error message number
---
> 	 * Returns an object with field data
552,553c499,500
< 	 * @access  protected
< 	 * @return  integer
---
> 	 * @param	string	$table
> 	 * @return	array
555c502,508
< 	protected function _error_number()
---
> 	public function field_data($table)
> 	{
> 		if (strpos($table, '.') !== FALSE)
> 		{
> 			sscanf($table, '%[^.].%s', $owner, $table);
> 		}
> 		else
557,559c510
< 		// Same as _error_message()
< 		$error = is_resource($this->conn_id) ? oci_error($this->conn_id) : oci_error();
< 		return $error['code'];
---
> 			$owner = $this->username;
562c513,516
< 	// --------------------------------------------------------------------
---
> 		$sql = 'SELECT COLUMN_NAME, DATA_TYPE, CHAR_LENGTH, DATA_PRECISION, DATA_LENGTH, DATA_DEFAULT, NULLABLE
> 			FROM ALL_TAB_COLUMNS
> 			WHERE UPPER(OWNER) = '.$this->escape(strtoupper($owner)).'
> 				AND UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
564,573c518
< 	/**
< 	 * Escape the SQL Identifiers
< 	 *
< 	 * This function escapes column and table names
< 	 *
< 	 * @access	protected
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	protected function _escape_identifiers($item)
---
> 		if (($query = $this->query($sql)) === FALSE)
575,577c520
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
---
> 			return FALSE;
578a522
> 		$query = $query->result_object();
580c524,525
< 		foreach ($this->_reserved_identifiers as $id)
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
582,584c527,529
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->COLUMN_NAME;
> 			$retval[$i]->type		= $query[$i]->DATA_TYPE;
586,588c531,535
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
---
> 			$length = ($query[$i]->CHAR_LENGTH > 0)
> 				? $query[$i]->CHAR_LENGTH : $query[$i]->DATA_PRECISION;
> 			if ($length === NULL)
> 			{
> 				$length = $query[$i]->DATA_LENGTH;
589a537
> 			$retval[$i]->max_length		= $length;
591c539,540
< 		if (strpos($item, '.') !== FALSE)
---
> 			$default = $query[$i]->DATA_DEFAULT;
> 			if ($default === NULL && $query[$i]->NULLABLE === 'N')
593c542
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
---
> 				$default = '';
595,597c544
< 		else
< 		{
< 			$str = $this->_escape_char.$item.$this->_escape_char;
---
> 			$retval[$i]->default = $default;
600,601c547
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
---
> 		return $retval;
607c553
< 	 * From Tables
---
> 	 * Error
609,610c555,556
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
612,614c558
< 	 * @access	protected
< 	 * @param	type
< 	 * @return	type
---
> 	 * @return	array
616c560
< 	protected function _from_tables($tables)
---
> 	public function error()
618c562,565
< 		if ( ! is_array($tables))
---
> 		/* oci_error() returns an array that already contains the
> 		 * 'code' and 'message' keys, so we can just return it.
> 		 */
> 		if (is_resource($this->curs_id))
620c567
< 			$tables = array($tables);
---
> 			return oci_error($this->curs_id);
622,623c569,571
< 
< 		return implode(', ', $tables);
---
> 		elseif (is_resource($this->stmt_id))
> 		{
> 			return oci_error($this->stmt_id);
625,639c573
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access  public
< 	 * @param   string  the table name
< 	 * @param   array   the insert keys
< 	 * @param   array   the insert values
< 	 * @return  string
< 	 */
< 	protected function _insert($table, $keys, $values)
---
> 		elseif (is_resource($this->conn_id))
641c575,578
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 			return oci_error($this->conn_id);
> 		}
> 
> 		return oci_error();
647c584
< 	 * Insert_batch statement
---
> 	 * Insert batch statement
651,654c588,590
< 	 * @access      protected
< 	 * @param       string  the table name
< 	 * @param       array   the insert keys
< 	 * @param       array   the insert values
---
> 	 * @param	string	$table	Table name
> 	 * @param	array	$keys	INSERT keys
> 	 * @param 	array	$values	INSERT values
667,704c603
< 		$sql .= 'SELECT * FROM dual';
< 
< 		return $sql;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Update statement
< 	 *
< 	 * Generates a platform-specific update string from the supplied data
< 	 *
< 	 * @access	protected
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
< 	 * @return	string
< 	 */
< 	protected function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
< 	{
< 		foreach ($values as $key => $val)
< 		{
< 			$valstr[] = $key." = ".$val;
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
---
> 		return $sql.'SELECT * FROM dual';
713,714d611
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
716,717c613,616
< 	 * @access	protected
< 	 * @param	string	the table name
---
> 	 * If the database does not support the TRUNCATE statement,
> 	 * then this method maps to 'DELETE FROM table'
> 	 *
> 	 * @param	string	$table
722c621
< 		return "TRUNCATE TABLE ".$table;
---
> 		return 'TRUNCATE TABLE '.$table;
732,735c631
< 	 * @access	protected
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
---
> 	 * @param	string	$table
738,742c634
< 	protected function _delete($table, $where = array(), $like = array(), $limit = FALSE)
< 	{
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
---
> 	protected function _delete($table)
744,747c636
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
---
> 		if ($this->qb_limit)
749c638,639
< 				$conditions .= " AND ";
---
> 			$this->where('rownum <= ',$this->qb_limit, FALSE);
> 			$this->qb_limit = FALSE;
751,754d640
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
756c642
< 		return "DELETE FROM ".$table.$conditions.$limit;
---
> 		return parent::_delete($table);
762c648
< 	 * Limit string
---
> 	 * LIMIT
766,769c652
< 	 * @access  protected
< 	 * @param   string  the sql query string
< 	 * @param   integer the number of rows to limit the query to
< 	 * @param   integer the offset value
---
> 	 * @param	string	$sql	SQL Query
772c655
< 	protected function _limit($sql, $limit, $offset)
---
> 	protected function _limit($sql)
774,777c657
< 		$limit = $offset + $limit;
< 		$newsql = "SELECT * FROM (select inner_query.*, rownum rnum FROM ($sql) inner_query WHERE rownum < $limit)";
< 
< 		if ($offset != 0)
---
> 		if (version_compare($this->version(), '12.1', '>='))
779c659,662
< 			$newsql .= " WHERE rnum >= $offset";
---
> 			// OFFSET-FETCH can be used only with the ORDER BY clause
> 			empty($this->qb_orderby) && $sql .= ' ORDER BY 1';
> 
> 			return $sql.' OFFSET '.(int) $this->qb_offset.' ROWS FETCH NEXT '.$this->qb_limit.' ROWS ONLY';
782d664
< 		// remember that we used limits
784,785c666,667
< 
< 		return $newsql;
---
> 		return 'SELECT * FROM (SELECT inner_query.*, rownum rnum FROM ('.$sql.') inner_query WHERE rownum < '.($this->qb_offset + $this->qb_limit + 1).')'
> 			.($this->qb_offset ? ' WHERE rnum >= '.($this->qb_offset + 1) : '');
793,794d674
< 	 * @access  protected
< 	 * @param   resource
797c677
< 	protected function _close($conn_id)
---
> 	protected function _close()
799c679
< 		@oci_close($conn_id);
---
> 		oci_close($this->conn_id);
804,808d682
< 
< 
< 
< /* End of file oci8_driver.php */
< /* Location: ./system/database/drivers/oci8/oci8_driver.php */
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/oci8/oci8_forge.php opensourcepos/system/database/drivers/oci8/oci8_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.4.1
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * Create database
---
> 	 * CREATE DATABASE statement
30,32c52
< 	 * @access	public
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,39c54
< 	function _create_database($name)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_database	= FALSE;
42c57
< 	 * Drop database
---
> 	 * DROP DATABASE statement
44,46c59
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
48,53c61
< 	function _drop_database($name)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_drop_database	= FALSE;
56c64
< 	 * Create Table
---
> 	 * DROP TABLE IF statement
58,64c66
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @var	string
66,160c68
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
< 	{
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
< 		{
< 			$sql .= 'IF NOT EXISTS ';
< 		}
< 
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 		$current_field_count = 0;
< 
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				$sql .=  ' '.$attributes['TYPE'];
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
< 				{
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
< 				{
< 					$sql .= ' NULL';
< 				}
< 				else
< 				{
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' AUTO_INCREMENT';
< 				}
< 			}
< 
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
< 			{
< 				$sql .= ',';
< 			}
< 		}
< 
< 		if (count($primary_keys) > 0)
< 		{
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
< 				}
< 
< 				$sql .= ",\n\tUNIQUE COLUMNS (" . implode(', ', $key) . ")";
< 			}
< 		}
< 
< 		$sql .= "\n)";
< 
< 		return $sql;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_drop_table_if	= FALSE;
163c71
< 	 * Drop Table
---
> 	 * UNSIGNED support
165,166c73
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	bool|array
168,171c75
< 	function _drop_table($table)
< 	{
< 		return FALSE;
< 	}
---
> 	protected $_unsigned		= FALSE;
176,179c80
< 	 * Alter table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * ALTER TABLE
181,189c82,85
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
191c87
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
---
> 	protected function _alter_table($alter_type, $table, $field)
193,196c89
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
---
> 		if ($alter_type === 'DROP')
198c91
< 			return $sql;
---
> 			return parent::_alter_table($alter_type, $table, $field);
200,203c93
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
---
> 		elseif ($alter_type === 'CHANGE')
205c95
< 			$sql .= " DEFAULT \"$default_value\"";
---
> 			$alter_type = 'MODIFY';
208c98,102
< 		if ($null === NULL)
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
> 		$sqls = array();
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
> 		{
> 			if ($field[$i]['_literal'] !== FALSE)
210c104
< 			$sql .= ' NULL';
---
> 				$field[$i] = "\n\t".$field[$i]['_literal'];
214c108,114
< 			$sql .= ' NOT NULL';
---
> 				$field[$i]['_literal'] = "\n\t".$this->_process_column($field[$i]);
> 
> 				if ( ! empty($field[$i]['comment']))
> 				{
> 					$sqls[] = 'COMMENT ON COLUMN '
> 						.$this->db->escape_identifiers($table).'.'.$this->db->escape_identifiers($field[$i]['name'])
> 						.' IS '.$field[$i]['comment'];
217c117
< 		if ($after_field != '')
---
> 				if ($alter_type === 'MODIFY' && ! empty($field[$i]['new_name']))
219c119,122
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 					$sqls[] = $sql.' RENAME COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
> 						.' '.$this->db->escape_identifiers($field[$i]['new_name']);
> 				}
> 			}
222c125,128
< 		return $sql;
---
> 		$sql .= ' '.$alter_type.' ';
> 		$sql .= (count($field) === 1)
> 				? $field[0]
> 				: '('.implode(',', $field).')';
223a130,132
> 		// RENAME COLUMN must be executed after MODIFY
> 		array_unshift($sqls, $sql);
> 		return $sql;
229,231c138
< 	 * Rename a table
< 	 *
< 	 * Generates a platform-specific query so that a table can be renamed
---
> 	 * Field attribute AUTO_INCREMENT
233,236c140,142
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
---
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
238c144
< 	function _rename_table($table_name, $new_table_name)
---
> 	protected function _attr_auto_increment(&$attributes, &$field)
240,241c146
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
< 		return $sql;
---
> 		// Not supported - sequences and triggers must be used instead
246,248d149
< 
< /* End of file oci8_forge.php */
< /* Location: ./system/database/drivers/oci8/oci8_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/oci8/oci8_result.php opensourcepos/system/database/drivers/oci8/oci8_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright   Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.4.1
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28a51,55
> 	/**
> 	 * Statement ID
> 	 *
> 	 * @var	resource
> 	 */
29a57,62
> 
> 	/**
> 	 * Cursor ID
> 	 *
> 	 * @var	resource
> 	 */
31d63
< 	public $limit_used;
34c66
< 	 * Number of rows in the result set.
---
> 	 * Limit used flag
36,37c68,73
< 	 * Oracle doesn't have a graceful way to retun the number of rows
< 	 * so we have to use what amounts to a hack.
---
> 	 * @var	bool
> 	 */
> 	public $limit_used;
> 
> 	/**
> 	 * Commit mode flag
39c75
< 	 * @return  integer
---
> 	 * @var	int
41,46c77
< 	public function num_rows()
< 	{
< 		if ($this->num_rows === 0 && count($this->result_array()) > 0)
< 		{
< 			$this->num_rows = count($this->result_array());
< 			@oci_execute($this->stmt_id, OCI_DEFAULT);
---
> 	public $commit_mode;
48c79,87
< 			if ($this->curs_id)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
> 	 *
> 	 * @param	object	&$driver_object
> 	 * @return	void
> 	 */
> 	public function __construct(&$driver_object)
50,52c89
< 				@oci_execute($this->curs_id, OCI_DEFAULT);
< 			}
< 		}
---
> 		parent::__construct($driver_object);
54c91,95
< 		return $this->num_rows;
---
> 		$this->stmt_id = $driver_object->stmt_id;
> 		$this->curs_id = $driver_object->curs_id;
> 		$this->limit_used = $driver_object->limit_used;
> 		$this->commit_mode =& $driver_object->commit_mode;
> 		$driver_object->stmt_id = FALSE;
62,63c103
< 	 * @access  public
< 	 * @return  integer
---
> 	 * @return	int
67c107
< 		$count = @oci_num_fields($this->stmt_id);
---
> 		$count = oci_num_fields($this->stmt_id);
70,75c110
< 		if ($this->limit_used)
< 		{
< 			$count = $count - 1;
< 		}
< 
< 		return $count;
---
> 		return ($this->limit_used) ? $count - 1 : $count;
85d119
< 	 * @access	public
105d138
< 	 * @access  public
129c162
< 	 * @return	null
---
> 	 * @return	void
137a171,181
> 
> 		if (is_resource($this->stmt_id))
> 		{
> 			oci_free_statement($this->stmt_id);
> 		}
> 
> 		if (is_resource($this->curs_id))
> 		{
> 			oci_cancel($this->curs_id);
> 			$this->curs_id = NULL;
> 		}
147d190
< 	 * @access  protected
163c206
< 	 * @access  protected
---
> 	 * @param	string	$class_name
166c209
< 	protected function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
168,172c211,213
< 		$id = ($this->curs_id) ? $this->curs_id : $this->stmt_id;
< 		return @oci_fetch_object($id);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 		$row = ($this->curs_id)
> 			? oci_fetch_object($this->curs_id)
> 			: oci_fetch_object($this->stmt_id);
174,180c215
< 	/**
< 	 * Query result.  "array" version.
< 	 *
< 	 * @access  public
< 	 * @return  array
< 	 */
< 	public function result_array()
---
> 		if ($class_name === 'stdClass' OR ! $row)
182,184c217
< 		if (count($this->result_array) > 0)
< 		{
< 			return $this->result_array;
---
> 			return $row;
187,188c220,221
< 		$row = NULL;
< 		while ($row = $this->_fetch_assoc())
---
> 		$class_name = new $class_name();
> 		foreach ($row as $key => $value)
190c223
< 			$this->result_array[] = $row;
---
> 			$class_name->$key = $value;
193,210c226
< 		return $this->result_array;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Data Seek
< 	 *
< 	 * Moves the internal pointer to the desired offset.  We call
< 	 * this internally before fetching results to make sure the
< 	 * result set starts at zero
< 	 *
< 	 * @access	protected
< 	 * @return	array
< 	 */
< 	protected function _data_seek($n = 0)
< 	{
< 		return FALSE; // Not needed
---
> 		return $class_name;
214,217d229
< 
< 
< /* End of file oci8_result.php */
< /* Location: ./system/database/drivers/oci8/oci8_result.php */
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/oci8/oci8_utility.php opensourcepos/system/database/drivers/oci8/oci8_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.4.1
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * List databases
---
> 	 * List databases statement
30,31c52
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	string
33,38c54
< 	function _list_databases()
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_list_databases	= 'SELECT username FROM dba_users'; // Schemas are actual usernames
41c57
< 	 * Optimize table query
---
> 	 * Export
43,76c59
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _optimize_table($table)
< 	{
< 		return FALSE; // Is this supported in Oracle?
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Repair table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be repaired
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		return FALSE; // Is this supported in Oracle?
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Oracle Export
< 	 *
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
79c62
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
82,83c65
< 		return $this->db->display_error('db_unsuported_feature');
< 	}
---
> 		return $this->db->display_error('db_unsupported_feature');
86,87c68
< /* End of file oci8_utility.php */
< /* Location: ./system/database/drivers/oci8/oci8_utility.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/odbc/index.html opensourcepos/system/database/drivers/odbc/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/odbc/odbc_driver.php opensourcepos/system/database/drivers/odbc/odbc_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
33,57d54
< 	var $dbdriver = 'odbc';
< 
< 	// the character used to excape - not necessary for ODBC
< 	var $_escape_char = '';
< 
< 	// clause and character used for LIKE escape sequences
< 	var $_like_escape_str = " {escape '%s'} ";
< 	var $_like_escape_chr = '!';
< 
< 	/**
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
< 	 */
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword;
< 
< 
< 	function __construct($params)
< 	{
< 		parent::__construct($params);
< 
< 		$this->_random_keyword = ' RND('.time().')'; // database specific random keyword
< 	}
< 
59c56
< 	 * Non-persistent database connection
---
> 	 * Database driver
61,62c58
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	string
64,69c60
< 	function db_connect()
< 	{
< 		return @odbc_connect($this->hostname, $this->username, $this->password);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	public $dbdriver = 'odbc';
72c63
< 	 * Persistent database connection
---
> 	 * Database schema
74,75c65
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	string
77,80c67
< 	function db_pconnect()
< 	{
< 		return @odbc_pconnect($this->hostname, $this->username, $this->password);
< 	}
---
> 	public $schema = 'public';
85c72
< 	 * Reconnect
---
> 	 * Identifier escape character
87,88c74
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
---
> 	 * Must be empty for ODBC.
90,91c76
< 	 * @access	public
< 	 * @return	void
---
> 	 * @var	string
93,98c78
< 	function reconnect()
< 	{
< 		// not implemented in odbc
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_escape_char = '';
101c81
< 	 * Select the database
---
> 	 * ESCAPE statement string
103,104c83
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	string
106,112c85
< 	function db_select()
< 	{
< 		// Not needed for ODBC
< 		return TRUE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_like_escape_str = " {escape '%s'} ";
115c88
< 	 * Set client character set
---
> 	 * ORDER BY random keyword
117,120c90
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
---
> 	 * @var	array
122,126c92
< 	function db_set_charset($charset, $collation)
< 	{
< 		// @todo - add support if needed
< 		return TRUE;
< 	}
---
> 	protected $_random_keyword = array('RND()', 'RND(%d)');
131c97
< 	 * Version number query string
---
> 	 * Class constructor
133,134c99,100
< 	 * @access	public
< 	 * @return	string
---
> 	 * @param	array	$params
> 	 * @return	void
136c102,107
< 	function _version()
---
> 	public function __construct($params)
> 	{
> 		parent::__construct($params);
> 
> 		// Legacy support for DSN in the hostname field
> 		if (empty($this->dsn))
138c109,110
< 		return "SELECT version() AS ver";
---
> 			$this->dsn = $this->hostname;
> 		}
144c116
< 	 * Execute the query
---
> 	 * Non-persistent database connection
146,147c118
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
---
> 	 * @param	bool	$persistent
150c121
< 	function _execute($sql)
---
> 	public function db_connect($persistent = FALSE)
152,153c123,125
< 		$sql = $this->_prep_query($sql);
< 		return @odbc_exec($this->conn_id, $sql);
---
> 		return ($persistent === TRUE)
> 			? odbc_pconnect($this->dsn, $this->username, $this->password)
> 			: odbc_connect($this->dsn, $this->username, $this->password);
159,161c131
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
---
> 	 * Execute the query
163,165c133,134
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
---
> 	 * @param	string	$sql	an SQL query
> 	 * @return	resource
167c136
< 	function _prep_query($sql)
---
> 	protected function _execute($sql)
169c138
< 		return $sql;
---
> 		return odbc_exec($this->conn_id, $sql);
177d145
< 	 * @access	public
180,188c148
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 	protected function _trans_begin()
190,197d149
< 			return TRUE;
< 		}
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
206d157
< 	 * @access	public
209,211c160
< 	function trans_commit()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_commit()
213,217c162
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if (odbc_commit($this->conn_id))
218a164
> 			odbc_autocommit($this->conn_id, TRUE);
222,224c168
< 		$ret = odbc_commit($this->conn_id);
< 		odbc_autocommit($this->conn_id, TRUE);
< 		return $ret;
---
> 		return FALSE;
232d175
< 	 * @access	public
235,237c178
< 	function trans_rollback()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_rollback()
239,243c180
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if (odbc_rollback($this->conn_id))
244a182
> 			odbc_autocommit($this->conn_id, TRUE);
248,250c186
< 		$ret = odbc_rollback($this->conn_id);
< 		odbc_autocommit($this->conn_id, TRUE);
< 		return $ret;
---
> 		return FALSE;
256c192
< 	 * Escape String
---
> 	 * Determines if a query is a "write" type.
258,261c194,195
< 	 * @access	public
< 	 * @param	string
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
< 	 * @return	string
---
> 	 * @param	string	An SQL query string
> 	 * @return	bool
263,267c197
< 	function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
< 		{
< 			foreach ($str as $key => $val)
---
> 	public function is_write_type($sql)
269,279c199
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
< 		}
< 
< 		// ODBC doesn't require escaping
< 		$str = remove_invisible_characters($str);
< 
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
---
> 		if (preg_match('#^(INSERT|UPDATE).*RETURNING\s.+(\,\s?.+)*$#i', $sql))
281,283c201
< 			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
< 								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
< 								$str);
---
> 			return FALSE;
286c204
< 		return $str;
---
> 		return parent::is_write_type($sql);
292c210
< 	 * Affected Rows
---
> 	 * Platform-dependant string escape
294,295c212,213
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @param	string
> 	 * @return	string
297c215
< 	function affected_rows()
---
> 	protected function _escape_str($str)
299c217
< 		return @odbc_num_rows($this->conn_id);
---
> 		return remove_invisible_characters($str);
305c223
< 	 * Insert ID
---
> 	 * Affected Rows
307,308c225
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
310c227
< 	function insert_id()
---
> 	public function affected_rows()
312c229
< 		return @odbc_insert_id($this->conn_id);
---
> 		return odbc_num_rows($this->result_id);
318,321c235
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
---
> 	 * Insert ID
323,325c237
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
---
> 	 * @return	bool
327c239
< 	function count_all($table = '')
---
> 	public function insert_id()
329,343c241
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
< 		{
< 			return 0;
< 		}
< 
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
353,354c251
< 	 * @access	private
< 	 * @param	boolean
---
> 	 * @param	bool	$prefix_limit
357c254
< 	function _list_tables($prefix_limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
359c256
< 		$sql = "SHOW TABLES FROM `".$this->database."`";
---
> 		$sql = "SELECT table_name FROM information_schema.tables WHERE table_schema = '".$this->schema."'";
361c258
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
363,364c260,261
< 			//$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
< 			return FALSE; // not currently supported
---
> 			return $sql." AND table_name LIKE '".$this->escape_like_str($this->dbprefix)."%' "
> 				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
377,378c274
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table
381c277
< 	function _list_columns($table = '')
---
> 	protected function _list_columns($table = '')
383c279
< 		return "SHOW COLUMNS FROM ".$table;
---
> 		return 'SHOW COLUMNS FROM '.$table;
393,407c289
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _field_data($table)
< 	{
< 		return "SELECT TOP 1 FROM ".$table;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
---
> 	 * @param	string	$table
410,423c292
< 	function _error_message()
< 	{
< 		return odbc_errormsg($this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message number
< 	 *
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
---
> 	protected function _field_data($table)
425c294
< 		return odbc_error($this->conn_id);
---
> 		return 'SELECT TOP 1 FROM '.$table;
431c300
< 	 * Escape the SQL Identifiers
---
> 	 * Error
433c302,303
< 	 * This function escapes column and table names
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
435,437c305
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
---
> 	 * @return	array
439,461c307
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
< 		{
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
< 		}
< 
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
---
> 	public function error()
463,507c309
< 			$str = $this->_escape_char.$item.$this->_escape_char;
< 		}
< 
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
< 	 *
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
< 	 */
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
< 		{
< 			$tables = array($tables);
< 		}
< 
< 		return '('.implode(', ', $tables).')';
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
< 	 */
< 	function _insert($table, $keys, $values)
< 	{
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		return array('code' => odbc_error($this->conn_id), 'message' => odbc_errormsg($this->conn_id));
517,522c319,320
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
---
> 	 * @param	string	$table
> 	 * @param	array	$values
525,527c323
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
< 	{
< 		foreach ($values as $key => $val)
---
> 	protected function _update($table, $values)
529,542c325,327
< 			$valstr[] = $key." = ".$val;
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
---
> 		$this->qb_limit = FALSE;
> 		$this->qb_orderby = array();
> 		return parent::_update($table, $values);
552,553d335
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
555,556c337,340
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * If the database does not support the TRUNCATE statement,
> 	 * then this method maps to 'DELETE FROM table'
> 	 *
> 	 * @param	string	$table
559c343
< 	function _truncate($table)
---
> 	protected function _truncate($table)
561c345
< 		return $this->_delete($table);
---
> 		return 'DELETE FROM '.$table;
571,574c355
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
---
> 	 * @param	string	$table
577c358
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
---
> 	protected function _delete($table)
579,614c360,361
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
< 		{
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
< 			{
< 				$conditions .= " AND ";
< 			}
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		return "DELETE FROM ".$table.$conditions.$limit;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Limit string
< 	 *
< 	 * Generates a platform-specific LIMIT clause
< 	 *
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
< 	 * @return	string
< 	 */
< 	function _limit($sql, $limit, $offset)
< 	{
< 		// Does ODBC doesn't use the LIMIT clause?
< 		return $sql;
---
> 		$this->qb_limit = FALSE;
> 		return parent::_delete($table);
622,623d368
< 	 * @access	public
< 	 * @param	resource
626c371
< 	function _close($conn_id)
---
> 	protected function _close()
628c373
< 		@odbc_close($conn_id);
---
> 		odbc_close($this->conn_id);
633,637d376
< 
< 
< 
< /* End of file odbc_driver.php */
< /* Location: ./system/database/drivers/odbc/odbc_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/odbc/odbc_forge.php opensourcepos/system/database/drivers/odbc/odbc_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/database/
28c52
< 	 * Create database
---
> 	 * CREATE TABLE IF statement
30,32c54
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,45c56
< 	function _create_database()
< 	{
< 		// ODBC has no "create database" command since it's
< 		// designed to connect to an existing database
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_table_if	= FALSE;
48c59
< 	 * Drop database
---
> 	 * DROP TABLE IF statement
50,52c61
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
54,65c63
< 	function _drop_database($name)
< 	{
< 		// ODBC has no "drop database" command since it's
< 		// designed to connect to an existing database
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_drop_table_if	= FALSE;
68c66
< 	 * Create Table
---
> 	 * UNSIGNED support
70,76c68
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @var	bool|array
78,170c70
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
< 	{
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
< 		{
< 			$sql .= 'IF NOT EXISTS ';
< 		}
< 
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 		$current_field_count = 0;
< 
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				$sql .=  ' '.$attributes['TYPE'];
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
< 				{
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
< 				{
< 					$sql .= ' NULL';
< 				}
< 				else
< 				{
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' AUTO_INCREMENT';
< 				}
< 			}
< 
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
< 			{
< 				$sql .= ',';
< 			}
< 		}
< 
< 		if (count($primary_keys) > 0)
< 		{
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
< 				}
< 
< 				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
< 			}
< 		}
< 
< 		$sql .= "\n)";
< 
< 		return $sql;
< 	}
---
> 	protected $_unsigned		= FALSE;
175c75
< 	 * Drop Table
---
> 	 * Field attribute AUTO_INCREMENT
177,178c77,79
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
180,183c81
< 	function _drop_table($table)
< 	{
< 		// Not a supported ODBC feature
< 		if ($this->db->db_debug)
---
> 	protected function _attr_auto_increment(&$attributes, &$field)
185c83
< 			return $this->db->display_error('db_unsuported_feature');
---
> 		// Not supported (in most databases at least)
187,190d84
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
192,215d85
< 	/**
< 	 * Alter table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
< 	 *
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
< 	 */
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
< 		{
< 			return $sql;
217,266d86
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
< 		{
< 			$sql .= " DEFAULT \"$default_value\"";
< 		}
< 
< 		if ($null === NULL)
< 		{
< 			$sql .= ' NULL';
< 		}
< 		else
< 		{
< 			$sql .= ' NOT NULL';
< 		}
< 
< 		if ($after_field != '')
< 		{
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
< 		}
< 
< 		return $sql;
< 
< 	}
< 
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Rename a table
< 	 *
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
< 	 */
< 	function _rename_table($table_name, $new_table_name)
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
< 		return $sql;
< 	}
< 
< 
< }
< 
< /* End of file odbc_forge.php */
< /* Location: ./system/database/drivers/odbc/odbc_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/odbc/odbc_result.php opensourcepos/system/database/drivers/odbc/odbc_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22a45,46
>  * @package		CodeIgniter
>  * @subpackage	Drivers
24,25c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
32,33c56
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c58,70
< 	function num_rows()
---
> 	public function num_rows()
> 	{
> 		if (is_int($this->num_rows))
> 		{
> 			return $this->num_rows;
> 		}
> 		elseif (($this->num_rows = odbc_num_rows($this->result_id)) !== -1)
> 		{
> 			return $this->num_rows;
> 		}
> 
> 		// Work-around for ODBC subdrivers that don't support num_rows()
> 		if (count($this->result_array) > 0)
37c72,79
< 		return @odbc_num_rows($this->result_id);
---
> 			return $this->num_rows = count($this->result_array);
> 		}
> 		elseif (count($this->result_object) > 0)
> 		{
> 			return $this->num_rows = count($this->result_object);
> 		}
> 
> 		return $this->num_rows = count($this->result_array());
45,46c87
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c89
< 	function num_fields()
---
> 	public function num_fields()
50c91
< 		return @odbc_num_fields($this->result_id);
---
> 		return odbc_num_fields($this->result_id);
60d100
< 	 * @access	public
63c103
< 	function list_fields()
---
> 	public function list_fields()
66c106,110
< 		for ($i = 0; $i < $this->num_fields(); $i++)
---
> 		$num_fields = $this->num_fields();
> 
> 		if ($num_fields > 0)
> 		{
> 			for ($i = 1; $i <= $num_fields; $i++)
69a114
> 		}
81d125
< 	 * @access	public
84c128
< 	function field_data()
---
> 	public function field_data()
87c131
< 		for ($i = 0; $i < $this->num_fields(); $i++)
---
> 		for ($i = 0, $odbc_index = 1, $c = $this->num_fields(); $i < $c; $i++, $odbc_index++)
89,96c133,138
< 			$F				= new stdClass();
< 			$F->name		= odbc_field_name($this->result_id, $i);
< 			$F->type		= odbc_field_type($this->result_id, $i);
< 			$F->max_length	= odbc_field_len($this->result_id, $i);
< 			$F->primary_key = 0;
< 			$F->default		= '';
< 
< 			$retval[] = $F;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= odbc_field_name($this->result_id, $odbc_index);
> 			$retval[$i]->type		= odbc_field_type($this->result_id, $odbc_index);
> 			$retval[$i]->max_length		= odbc_field_len($this->result_id, $odbc_index);
> 			$retval[$i]->primary_key	= 0;
> 			$retval[$i]->default		= '';
107c149
< 	 * @return	null
---
> 	 * @return	void
109c151
< 	function free_result()
---
> 	public function free_result()
121,137d162
< 	 * Data Seek
< 	 *
< 	 * Moves the internal pointer to the desired offset.  We call
< 	 * this internally before fetching results to make sure the
< 	 * result set starts at zero
< 	 *
< 	 * @access	private
< 	 * @return	array
< 	 */
< 	function _data_seek($n = 0)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
142d166
< 	 * @access	private
145,147c169
< 	function _fetch_assoc()
< 	{
< 		if (function_exists('odbc_fetch_object'))
---
> 	protected function _fetch_assoc()
151,155d172
< 		else
< 		{
< 			return $this->_odbc_fetch_array($this->result_id);
< 		}
< 	}
164c181
< 	 * @access	private
---
> 	 * @param	string	$class_name
167c184
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
169c186,188
< 		if (function_exists('odbc_fetch_object'))
---
> 		$row = odbc_fetch_object($this->result_id);
> 
> 		if ($class_name === 'stdClass' OR ! $row)
171c190
< 			return odbc_fetch_object($this->result_id);
---
> 			return $row;
173c192,194
< 		else
---
> 
> 		$class_name = new $class_name();
> 		foreach ($row as $key => $value)
175c196
< 			return $this->_odbc_fetch_object($this->result_id);
---
> 			$class_name->$key = $value;
176a198,199
> 
> 		return $class_name;
178a202,204
> }
> 
> // --------------------------------------------------------------------
179a206,207
> if ( ! function_exists('odbc_fetch_array'))
> {
181c209
< 	 * Result - object
---
> 	 * ODBC Fetch array
183,184c211,212
< 	 * subsititutes the odbc_fetch_object function when
< 	 * not available (odbc_fetch_object requires unixODBC)
---
> 	 * Emulates the native odbc_fetch_array() function when
> 	 * it is not available (odbc_fetch_array() requires unixODBC)
186,187c214,216
< 	 * @access	private
< 	 * @return	object
---
> 	 * @param	resource	&$result
> 	 * @param	int		$rownumber
> 	 * @return	array
189c218,219
< 	function _odbc_fetch_object(& $odbc_result) {
---
> 	function odbc_fetch_array(&$result, $rownumber = 1)
> 	{
191,195c221,223
< 		$rs_obj = FALSE;
< 		if (odbc_fetch_into($odbc_result, $rs)) {
< 			foreach ($rs as $k=>$v) {
< 				$field_name= odbc_field_name($odbc_result, $k+1);
< 				$rs_obj->$field_name = $v;
---
> 		if ( ! odbc_fetch_into($result, $rs, $rownumber))
> 		{
> 			return FALSE;
196a225,233
> 
> 		$rs_assoc = array();
> 		foreach ($rs as $k => $v)
> 		{
> 			$field_name = odbc_field_name($result, $k+1);
> 			$rs_assoc[$field_name] = $v;
> 		}
> 
> 		return $rs_assoc;
198d234
< 		return $rs_obj;
200a237
> // --------------------------------------------------------------------
201a239,240
> if ( ! function_exists('odbc_fetch_object'))
> {
203c242
< 	 * Result - array
---
> 	 * ODBC Fetch object
205,206c244,245
< 	 * subsititutes the odbc_fetch_array function when
< 	 * not available (odbc_fetch_array requires unixODBC)
---
> 	 * Emulates the native odbc_fetch_object() function when
> 	 * it is not available.
208,209c247,249
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	resource	&$result
> 	 * @param	int		$rownumber
> 	 * @return	object
211c251,252
< 	function _odbc_fetch_array(& $odbc_result) {
---
> 	function odbc_fetch_object(&$result, $rownumber = 1)
> 	{
213,221c254,256
< 		$rs_assoc = FALSE;
< 		if (odbc_fetch_into($odbc_result, $rs)) {
< 			$rs_assoc=array();
< 			foreach ($rs as $k=>$v) {
< 				$field_name= odbc_field_name($odbc_result, $k+1);
< 				$rs_assoc[$field_name] = $v;
< 			}
< 		}
< 		return $rs_assoc;
---
> 		if ( ! odbc_fetch_into($result, $rs, $rownumber))
> 		{
> 			return FALSE;
223a259,263
> 		$rs_object = new stdClass();
> 		foreach ($rs as $k => $v)
> 		{
> 			$field_name = odbc_field_name($result, $k+1);
> 			$rs_object->$field_name = $v;
226,228c266,268
< 
< /* End of file odbc_result.php */
< /* Location: ./system/database/drivers/odbc/odbc_result.php */
\ No newline at end of file
---
> 		return $rs_object;
> 	}
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/odbc/odbc_utility.php opensourcepos/system/database/drivers/odbc/odbc_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/database/
28,46c52
< 	 * List databases
< 	 *
< 	 * @access	private
< 	 * @return	bool
< 	 */
< 	function _list_databases()
< 	{
< 		// Not sure if ODBC lets you list all databases...
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Optimize table query
---
> 	 * Export
48,91c54
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _optimize_table($table)
< 	{
< 		// Not a supported ODBC feature
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Repair table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be repaired
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		// Not a supported ODBC feature
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * ODBC Export
< 	 *
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
94c57
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
97c60
< 		return $this->db->display_error('db_unsuported_feature');
---
> 		return $this->db->display_error('db_unsupported_feature');
101,103d63
< 
< /* End of file odbc_utility.php */
< /* Location: ./system/database/drivers/odbc/odbc_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/pdo/index.html opensourcepos/system/database/drivers/pdo/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/pdo/pdo_driver.php opensourcepos/system/database/drivers/pdo/pdo_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,9d29
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
11,12c31,35
<  * @link		http://codeigniter.com
<  * @since		Version 2.1.2
---
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
29c51
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @link		https://codeigniter.com/user_guide/database/
33,39c55,60
< 	var $dbdriver = 'pdo';
< 
< 	// the character used to excape - not necessary for PDO
< 	var $_escape_char = '';
< 	var $_like_escape_str;
< 	var $_like_escape_chr;
< 
---
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver = 'pdo';
42,44c63,65
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
---
> 	 * PDO Options
> 	 *
> 	 * @var	array
46,47c67
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword;
---
> 	public $options = array();
49c69
< 	var $options = array();
---
> 	// --------------------------------------------------------------------
51c71,79
< 	function __construct($params)
---
> 	/**
> 	 * Class constructor
> 	 *
> 	 * Validates the DSN string and/or detects the subdriver.
> 	 *
> 	 * @param	array	$params
> 	 * @return	void
> 	 */
> 	public function __construct($params)
55,62c83
< 		// clause and character used for LIKE escape sequences
< 		if (strpos($this->hostname, 'mysql') !== FALSE)
< 		{
< 			$this->_like_escape_str = '';
< 			$this->_like_escape_chr = '';
< 
< 			//Prior to this version, the charset can't be set in the dsn
< 			if(is_php('5.3.6'))
---
> 		if (preg_match('/([^:]+):/', $this->dsn, $match) && count($match) === 2)
64c85,88
< 				$this->hostname .= ";charset={$this->char_set}";
---
> 			// If there is a minimum valid dsn string pattern found, we're done
> 			// This is for general PDO users, who tend to have a full DSN string.
> 			$this->subdriver = $match[1];
> 			return;
66,70c90,91
< 
< 			//Set the charset with the connection options
< 			$this->options['PDO::MYSQL_ATTR_INIT_COMMAND'] = "SET NAMES {$this->char_set}";
< 		}
< 		elseif (strpos($this->hostname, 'odbc') !== FALSE)
---
> 		// Legacy support for DSN specified in the hostname field
> 		elseif (preg_match('/([^:]+):/', $this->hostname, $match) && count($match) === 2)
72,73c93,96
< 			$this->_like_escape_str = " {escape '%s'} ";
< 			$this->_like_escape_chr = '!';
---
> 			$this->dsn = $this->hostname;
> 			$this->hostname = NULL;
> 			$this->subdriver = $match[1];
> 			return;
75c98
< 		else
---
> 		elseif (in_array($this->subdriver, array('mssql', 'sybase'), TRUE))
77,78c100
< 			$this->_like_escape_str = " ESCAPE '%s' ";
< 			$this->_like_escape_chr = '!';
---
> 			$this->subdriver = 'dblib';
80,85c102,104
< 
< 		empty($this->database) OR $this->hostname .= ';dbname='.$this->database;
< 
< 		$this->trans_enabled = FALSE;
< 
< 		$this->_random_keyword = ' RND('.time().')'; // database specific random keyword
---
> 		elseif ($this->subdriver === '4D')
> 		{
> 			$this->subdriver = '4d';
86a106,108
> 		elseif ( ! in_array($this->subdriver, array('4d', 'cubrid', 'dblib', 'firebird', 'ibm', 'informix', 'mysql', 'oci', 'odbc', 'pgsql', 'sqlite', 'sqlsrv'), TRUE))
> 		{
> 			log_message('error', 'PDO: Invalid or non-existent subdriver');
88,94c110
< 	/**
< 	 * Non-persistent database connection
< 	 *
< 	 * @access	private called by the base class
< 	 * @return	resource
< 	 */
< 	function db_connect()
---
> 			if ($this->db_debug)
96c112,114
< 		$this->options['PDO::ATTR_ERRMODE'] = PDO::ERRMODE_SILENT;
---
> 				show_error('Invalid or non-existent PDO subdriver');
> 			}
> 		}
98c116
< 		return new PDO($this->hostname, $this->username, $this->password, $this->options);
---
> 		$this->dsn = NULL;
104c122
< 	 * Persistent database connection
---
> 	 * Database connection
106,107c124,125
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @param	bool	$persistent
> 	 * @return	object
109c127
< 	function db_pconnect()
---
> 	public function db_connect($persistent = FALSE)
111,112c129
< 		$this->options['PDO::ATTR_ERRMODE'] = PDO::ERRMODE_SILENT;
< 		$this->options['PDO::ATTR_PERSISTENT'] = TRUE;
---
> 		$this->options[PDO::ATTR_PERSISTENT] = $persistent;
114c131,133
< 		return new PDO($this->hostname, $this->username, $this->password, $this->options);
---
> 		try
> 		{
> 			return new PDO($this->dsn, $this->username, $this->password, $this->options);
116,128c135
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Reconnect
< 	 *
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
< 	 *
< 	 * @access	public
< 	 * @return	void
< 	 */
< 	function reconnect()
---
> 		catch (PDOException $e)
130c137
< 		if ($this->db->db_debug)
---
> 			if ($this->db_debug && empty($this->failover))
132c139
< 			return $this->db->display_error('db_unsuported_feature');
---
> 				$this->display_error($e->getMessage(), '', TRUE);
136,148d143
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Select the database
< 	 *
< 	 * @access	private called by the base class
< 	 * @return	resource
< 	 */
< 	function db_select()
< 	{
< 		// Not needed for PDO
< 		return TRUE;
154c149
< 	 * Set client character set
---
> 	 * Database version number
156,172d150
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
< 	 */
< 	function db_set_charset($charset, $collation)
< 	{
< 		// @todo - add support if needed
< 		return TRUE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Version number query string
< 	 *
< 	 * @access	public
175,194c153
< 	function _version()
< 	{
< 		return $this->conn_id->getAttribute(PDO::ATTR_CLIENT_VERSION);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Execute the query
< 	 *
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
< 	 * @return	object
< 	 */
< 	function _execute($sql)
< 	{
< 		$sql = $this->_prep_query($sql);
< 		$result_id = $this->conn_id->prepare($sql);
< 
< 		if (is_object($result_id) && ($result = $result_id->execute()))
---
> 	public function version()
196c155
< 			if (is_numeric(stripos($sql, 'SELECT')))
---
> 		if (isset($this->data_cache['version']))
198c157
< 				$this->affect_rows = count($result_id->fetchAll());
---
> 			return $this->data_cache['version'];
200c159,161
< 			else
---
> 
> 		// Not all subdrivers support the getAttribute() method
> 		try
202,203c163
< 				$this->affect_rows = $result_id->rowCount();
< 			}
---
> 			return $this->data_cache['version'] = $this->conn_id->getAttribute(PDO::ATTR_SERVER_VERSION);
205c165
< 		else
---
> 		catch (PDOException $e)
207,208c167
< 			$this->affect_rows = 0;
< 			$result = FALSE;
---
> 			return parent::version();
210,211d168
< 
< 		return $result;
217,219c174
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
---
> 	 * Execute the query
221,223c176,177
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
---
> 	 * @param	string	$sql	SQL query
> 	 * @return	mixed
225c179
< 	function _prep_query($sql)
---
> 	protected function _execute($sql)
227c181
< 		return $sql;
---
> 		return $this->conn_id->query($sql);
235d188
< 	 * @access	public
238,246c191
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 	protected function _trans_begin()
248,255d192
< 			return TRUE;
< 		}
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = (bool) ($test_mode === TRUE);
< 
264d200
< 	 * @access	public
267,269c203
< 	function trans_commit()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_commit()
271,281c205
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		$ret = $this->conn->commit();
< 		return $ret;
---
> 		return $this->conn_id->commit();
289d212
< 	 * @access	public
292,300c215
< 	function trans_rollback()
< 	{
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 	protected function _trans_rollback()
302,306c217
< 			return TRUE;
< 		}
< 
< 		$ret = $this->conn_id->rollBack();
< 		return $ret;
---
> 		return $this->conn_id->rollBack();
312c223
< 	 * Escape String
---
> 	 * Platform-dependant string escape
314d224
< 	 * @access	public
316d225
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
319,321c228
< 	function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
---
> 	protected function _escape_str($str)
323,330d229
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
< 		}
< 		
335,348c234,236
< 		if (strpos($str, "'") === 0)
< 		{
< 			$str = substr($str, 1, -1);
< 		}
< 		
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
< 		{
< 			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
< 								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
< 								$str);
< 		}
< 
< 		return $str;
---
> 		return ($str[0] === "'")
> 			? substr($str, 1, -1)
> 			: $str;
356,357c244
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
359c246
< 	function affected_rows()
---
> 	public function affected_rows()
361c248
< 		return $this->affect_rows;
---
> 		return is_object($this->result_id) ? $this->result_id->rowCount() : 0;
369,370c256,257
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @param	string	$name
> 	 * @return	int
372,389c259
< 	function insert_id($name=NULL)
< 	{
< 		//Convenience method for postgres insertid
< 		if (strpos($this->hostname, 'pgsql') !== FALSE)
< 		{
< 			$v = $this->_version();
< 
< 			$table	= func_num_args() > 0 ? func_get_arg(0) : NULL;
< 
< 			if ($table == NULL && $v >= '8.1')
< 			{
< 				$sql='SELECT LASTVAL() as ins_id';
< 			}
< 			$query = $this->query($sql);
< 			$row = $query->row();
< 			return $row->ins_id;
< 		}
< 		else
---
> 	public function insert_id($name = NULL)
393,464d262
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function count_all($table = '')
< 	{
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
< 		{
< 			return 0;
< 		}
< 
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Show table query
< 	 *
< 	 * Generates a platform-specific query string so that the table names can be fetched
< 	 *
< 	 * @access	private
< 	 * @param	boolean
< 	 * @return	string
< 	 */
< 	function _list_tables($prefix_limit = FALSE)
< 	{
< 		$sql = "SHOW TABLES FROM `".$this->database."`";
< 
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
< 		{
< 			//$sql .= " LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
< 			return FALSE; // not currently supported
< 		}
< 
< 		return $sql;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Show column query
< 	 *
< 	 * Generates a platform-specific query string so that the column names can be fetched
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _list_columns($table = '')
< 	{
< 		return "SHOW COLUMNS FROM ".$table;
< 	}
473,487c271
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _field_data($table)
< 	{
< 		return "SELECT TOP 1 FROM ".$table;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
---
> 	 * @param	string	$table
490c274
< 	function _error_message()
---
> 	protected function _field_data($table)
492,493c276
< 		$error_array = $this->conn_id->errorInfo();
< 		return $error_array[2];
---
> 		return 'SELECT TOP 1 * FROM '.$this->protect_identifiers($table);
499c282
< 	 * The error message number
---
> 	 * Error
501,512c284,285
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
< 	{
< 		return $this->conn_id->errorCode();
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Escape the SQL Identifiers
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
514,518c287
< 	 * This function escapes column and table names
< 	 *
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
---
> 	 * @return	array
520,527c289
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
---
> 	public function error()
529,536c291,292
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
< 		}
---
> 		$error = array('code' => '00000', 'message' => '');
> 		$pdo_error = $this->conn_id->errorInfo();
538,605c294
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 			
< 		}
< 		else
< 		{
< 			$str = $this->_escape_char.$item.$this->_escape_char;
< 		}
< 
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
< 	 *
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
< 	 */
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
< 		{
< 			$tables = array($tables);
< 		}
< 
< 		return (count($tables) == 1) ? $tables[0] : '('.implode(', ', $tables).')';
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
< 	 */
< 	function _insert($table, $keys, $values)
< 	{
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
< 	}
< 	
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Insert_batch statement
< 	 *
< 	 * Generates a platform-specific insert string from the supplied data
< 	 *
< 	 * @access  public
< 	 * @param   string  the table name
< 	 * @param   array   the insert keys
< 	 * @param   array   the insert values
< 	 * @return  string
< 	 */
< 	function _insert_batch($table, $keys, $values)
---
> 		if (empty($pdo_error[0]))
607c296
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
---
> 			return $error;
610,627c299,300
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Update statement
< 	 *
< 	 * Generates a platform-specific update string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
< 	 * @return	string
< 	 */
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
< 	{
< 		foreach ($values as $key => $val)
---
> 		$error['code'] = isset($pdo_error[1]) ? $pdo_error[0].'/'.$pdo_error[1] : $pdo_error[0];
> 		if (isset($pdo_error[2]))
629c302
< 			$valstr[] = $key." = ".$val;
---
> 			 $error['message'] = $pdo_error[2];
632,642c305
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
---
> 		return $error;
652,655c315,317
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
---
> 	 * @param	string	$table	Table name
> 	 * @param	array	$values	Update data
> 	 * @param	string	$index	WHERE key
658c320
< 	function _update_batch($table, $values, $index, $where = NULL)
---
> 	protected function _update_batch($table, $values, $index)
661,662d322
< 		$where = ($where != '' AND count($where) >=1) ? implode(" ", $where).' AND ' : '';
< 
669c329
< 				if ($field != $index)
---
> 				if ($field !== $index)
676d335
< 		$sql = "UPDATE ".$table." SET ";
690,692c349
< 		$sql .= substr($cases, 0, -2);
< 
< 		$sql .= ' WHERE '.$where.$index.' IN ('.implode(',', $ids).')';
---
> 		$this->where($index.' IN('.implode(',', $ids).')', NULL, FALSE);
694c351
< 		return $sql;
---
> 		return 'UPDATE '.$table.' SET '.substr($cases, 0, -2).$this->_compile_wh('qb_where');
704,719d359
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _truncate($table)
< 	{
< 		return $this->_delete($table);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Delete statement
721c361,362
< 	 * Generates a platform-specific delete string from the supplied data
---
> 	 * If the database does not support the TRUNCATE statement,
> 	 * then this method maps to 'DELETE FROM table'
723,726c364
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
---
> 	 * @param	string	$table
729,738c367
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
< 	{
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
< 		{
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
---
> 	protected function _truncate($table)
740c369
< 				$conditions .= " AND ";
---
> 		return 'TRUNCATE TABLE '.$table;
742,745d370
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
747d371
< 		return "DELETE FROM ".$table.$conditions.$limit;
749,811d372
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Limit string
< 	 *
< 	 * Generates a platform-specific LIMIT clause
< 	 *
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
< 	 * @return	string
< 	 */
< 	function _limit($sql, $limit, $offset)
< 	{
< 		if (strpos($this->hostname, 'cubrid') !== FALSE || strpos($this->hostname, 'sqlite') !== FALSE)
< 		{
< 			if ($offset == 0)
< 			{
< 				$offset = '';
< 			}
< 			else
< 			{
< 				$offset .= ", ";
< 			}
< 
< 			return $sql."LIMIT ".$offset.$limit;
< 		}
< 		else
< 		{
< 			$sql .= "LIMIT ".$limit;
< 
< 			if ($offset > 0)
< 			{
< 				$sql .= " OFFSET ".$offset;
< 			}
< 			
< 			return $sql;
< 		}
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Close DB Connection
< 	 *
< 	 * @access	public
< 	 * @param	resource
< 	 * @return	void
< 	 */
< 	function _close($conn_id)
< 	{
< 		$this->conn_id = null;
< 	}
< 
< 
< }
< 
< 
< 
< /* End of file pdo_driver.php */
< /* Location: ./system/database/drivers/pdo/pdo_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/pdo/pdo_forge.php opensourcepos/system/database/drivers/pdo/pdo_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,9d29
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
11,12c31,35
<  * @link		http://codeigniter.com
<  * @since		Version 2.1.2
---
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
23c47
<  * @link		http://codeigniter.com/database/
---
>  * @link		https://codeigniter.com/database/
28,196c52
< 	 * Create database
< 	 *
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
< 	 */
< 	function _create_database()
< 	{
< 		// PDO has no "create database" command since it's
< 		// designed to connect to an existing database
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Drop database
< 	 *
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
< 	 */
< 	function _drop_database($name)
< 	{
< 		// PDO has no "drop database" command since it's
< 		// designed to connect to an existing database
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Create Table
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
< 	 */
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
< 	{
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
< 		{
< 			$sql .= 'IF NOT EXISTS ';
< 		}
< 
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 		$current_field_count = 0;
< 
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				$sql .=  ' '.$attributes['TYPE'];
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
< 				{
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
< 				{
< 					$sql .= ' NULL';
< 				}
< 				else
< 				{
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' AUTO_INCREMENT';
< 				}
< 			}
< 
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
< 			{
< 				$sql .= ',';
< 			}
< 		}
< 
< 		if (count($primary_keys) > 0)
< 		{
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
< 				}
< 
< 				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
< 			}
< 		}
< 
< 		$sql .= "\n)";
< 
< 		return $sql;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Drop Table
< 	 *
< 	 * @access	private
< 	 * @return	bool
< 	 */
< 	function _drop_table($table)
< 	{
< 		// Not a supported PDO feature
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Alter table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * CREATE TABLE IF statement
198,206c54
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @var	string
208,244c56
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
< 		{
< 			return $sql;
< 		}
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
< 		{
< 			$sql .= " DEFAULT \"$default_value\"";
< 		}
< 
< 		if ($null === NULL)
< 		{
< 			$sql .= ' NULL';
< 		}
< 		else
< 		{
< 			$sql .= ' NOT NULL';
< 		}
< 
< 		if ($after_field != '')
< 		{
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
< 		}
< 
< 		return $sql;
< 
< 	}
< 
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_table_if	= FALSE;
247,249c59
< 	 * Rename a table
< 	 *
< 	 * Generates a platform-specific query so that a table can be renamed
---
> 	 * DROP TABLE IF statement
251,254c61
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
---
> 	 * @var	string
256,261c63
< 	function _rename_table($table_name, $new_table_name)
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
< 		return $sql;
< 	}
< 
---
> 	protected $_drop_table_if	= FALSE;
264,266d65
< 
< /* End of file pdo_forge.php */
< /* Location: ./system/database/drivers/pdo/pdo_forge.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/pdo/pdo_result.php opensourcepos/system/database/drivers/pdo/pdo_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,9d29
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
11,12c31,35
<  * @link		http://codeigniter.com
<  * @since		Version 2.1.2
---
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22a45,46
>  * @package		CodeIgniter
>  * @subpackage	Drivers
25c49
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @link		https://codeigniter.com/user_guide/database/
29,30d52
< 	public $num_rows;
< 
42c64
< 		elseif (($this->num_rows = $this->result_id->rowCount()) > 0)
---
> 		elseif (count($this->result_array) > 0)
44c66,74
< 			return $this->num_rows;
---
> 			return $this->num_rows = count($this->result_array);
> 		}
> 		elseif (count($this->result_object) > 0)
> 		{
> 			return $this->num_rows = count($this->result_object);
> 		}
> 		elseif (($num_rows = $this->result_id->rowCount()) > 0)
> 		{
> 			return $this->num_rows = $num_rows;
47,49c77
< 		$this->num_rows = count($this->result_id->fetchAll());
< 		$this->result_id->execute();
< 		return $this->num_rows;
---
> 		return $this->num_rows = count($this->result_array());
57,58c85
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
60c87
< 	function num_fields()
---
> 	public function num_fields()
72,73c99
< 	 * @access	public
< 	 * @return	array
---
> 	 * @return	bool
75c101
< 	function list_fields()
---
> 	public function list_fields()
77c103,104
< 		if ($this->db->db_debug)
---
> 		$field_names = array();
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
79c106,109
< 			return $this->db->display_error('db_unsuported_feature');
---
> 			// Might trigger an E_WARNING due to not all subdrivers
> 			// supporting getColumnMeta()
> 			$field_names[$i] = @$this->result_id->getColumnMeta($i);
> 			$field_names[$i] = $field_names[$i]['name'];
81c111,112
< 		return FALSE;
---
> 
> 		return $field_names;
91d121
< 	 * @access	public
94c124
< 	function field_data()
---
> 	public function field_data()
96,97d125
< 		$data = array();
< 	
100c128,130
< 			for($i = 0; $i < $this->num_fields(); $i++)
---
> 			$retval = array();
> 
> 			for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
102c132,138
< 				$data[] = $this->result_id->getColumnMeta($i);
---
> 				$field = $this->result_id->getColumnMeta($i);
> 
> 				$retval[$i]			= new stdClass();
> 				$retval[$i]->name		= $field['name'];
> 				$retval[$i]->type		= $field['native_type'];
> 				$retval[$i]->max_length		= ($field['len'] > 0) ? $field['len'] : NULL;
> 				$retval[$i]->primary_key	= (int) ( ! empty($field['flags']) && in_array('primary_key', $field['flags'], TRUE));
105c141
< 			return $data;
---
> 			return $retval;
111c147
< 				return $this->db->display_error('db_unsuported_feature');
---
> 				return $this->db->display_error('db_unsupported_feature');
122c159
< 	 * @return	null
---
> 	 * @return	void
124c161
< 	function free_result()
---
> 	public function free_result()
135,151d171
< 	 * Data Seek
< 	 *
< 	 * Moves the internal pointer to the desired offset.  We call
< 	 * this internally before fetching results to make sure the
< 	 * result set starts at zero
< 	 *
< 	 * @access	private
< 	 * @return	array
< 	 */
< 	function _data_seek($n = 0)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
156d175
< 	 * @access	private
159c178
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
171c190
< 	 * @access	private
---
> 	 * @param	string	$class_name
174c193
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
176c195
< 		return $this->result_id->fetchObject();
---
> 		return $this->result_id->fetchObject($class_name);
180,183d198
< 
< 
< /* End of file pdo_result.php */
< /* Location: ./system/database/drivers/pdo/pdo_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/pdo/pdo_utility.php opensourcepos/system/database/drivers/pdo/pdo_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,9d29
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
11,12c31,35
<  * @link		http://codeigniter.com
<  * @since		Version 2.1.2
---
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.1.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
23c47
<  * @link		http://codeigniter.com/database/
---
>  * @link		https://codeigniter.com/database/
28,46c52
< 	 * List databases
< 	 *
< 	 * @access	private
< 	 * @return	bool
< 	 */
< 	function _list_databases()
< 	{
< 		// Not sure if PDO lets you list all databases...
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Optimize table query
---
> 	 * Export
48,91c54
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _optimize_table($table)
< 	{
< 		// Not a supported PDO feature
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Repair table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be repaired
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		// Not a supported PDO feature
< 		if ($this->db->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * PDO Export
< 	 *
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
94c57
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
97c60
< 		return $this->db->display_error('db_unsuported_feature');
---
> 		return $this->db->display_error('db_unsupported_feature');
101,103d63
< 
< /* End of file pdo_utility.php */
< /* Location: ./system/database/drivers/pdo/pdo_utility.php */
\ No newline at end of file
Only in opensourcepos/system/database/drivers/pdo: subdrivers
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/postgre/index.html opensourcepos/system/database/drivers/postgre/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/postgre/postgre_driver.php opensourcepos/system/database/drivers/postgre/postgre_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
33c55,60
< 	var $dbdriver = 'postgre';
---
> 	/**
> 	 * Database driver
> 	 *
> 	 * @var	string
> 	 */
> 	public $dbdriver = 'postgre';
35c62,67
< 	var $_escape_char = '"';
---
> 	/**
> 	 * Database schema
> 	 *
> 	 * @var	string
> 	 */
> 	public $schema = 'public';
37,39c69
< 	// clause and character used for LIKE escape sequences
< 	var $_like_escape_str = " ESCAPE '%s' ";
< 	var $_like_escape_chr = '!';
---
> 	// --------------------------------------------------------------------
42,44c72,74
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
---
> 	 * ORDER BY random keyword
> 	 *
> 	 * @var	array
46,47c76,78
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword = ' RANDOM()'; // database specific random keyword
---
> 	protected $_random_keyword = array('RANDOM()', 'RANDOM()');
> 
> 	// --------------------------------------------------------------------
50c81
< 	 * Connection String
---
> 	 * Class constructor
52,53c83,86
< 	 * @access	private
< 	 * @return	string
---
> 	 * Creates a DSN string to be used for db_connect() and db_pconnect()
> 	 *
> 	 * @param	array	$params
> 	 * @return	void
55c88
< 	function _connect_string()
---
> 	public function __construct($params)
57,63c90
< 		$components = array(
< 								'hostname'	=> 'host',
< 								'port'		=> 'port',
< 								'database'	=> 'dbname',
< 								'username'	=> 'user',
< 								'password'	=> 'password'
< 							);
---
> 		parent::__construct($params);
65,66c92
< 		$connect_string = "";
< 		foreach ($components as $key => $val)
---
> 		if ( ! empty($this->dsn))
68c94,99
< 			if (isset($this->$key) && $this->$key != '')
---
> 			return;
> 		}
> 
> 		$this->dsn === '' OR $this->dsn = '';
> 
> 		if (strpos($this->hostname, '/') !== FALSE)
70c101,102
< 				$connect_string .= " $val=".$this->$key;
---
> 			// If UNIX sockets are used, we shouldn't set a port
> 			$this->port = '';
71a104,109
> 
> 		$this->hostname === '' OR $this->dsn = 'host='.$this->hostname.' ';
> 
> 		if ( ! empty($this->port) && ctype_digit($this->port))
> 		{
> 			$this->dsn .= 'port='.$this->port.' ';
73c111,120
< 		return trim($connect_string);
---
> 
> 		if ($this->username !== '')
> 		{
> 			$this->dsn .= 'user='.$this->username.' ';
> 
> 			/* An empty password is valid!
> 			 *
> 			 * $db['password'] = NULL must be done in order to ignore it.
> 			 */
> 			$this->password === NULL OR $this->dsn .= "password='".$this->password."' ";
76c123
< 	// --------------------------------------------------------------------
---
> 		$this->database === '' OR $this->dsn .= 'dbname='.$this->database.' ';
78,79c125,127
< 	/**
< 	 * Non-persistent database connection
---
> 		/* We don't have these options as elements in our standard configuration
> 		 * array, but they might be set by parse_url() if the configuration was
> 		 * provided via string. Example:
81,82c129
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 		 * postgre://username:password@localhost:5432/database?connect_timeout=5&sslmode=1
84c131,133
< 	function db_connect()
---
> 		foreach (array('connect_timeout', 'options', 'sslmode', 'service') as $key)
> 		{
> 			if (isset($this->$key) && is_string($this->key) && $this->key !== '')
86c135,139
< 		return @pg_connect($this->_connect_string());
---
> 				$this->dsn .= $key."='".$this->key."' ";
> 			}
> 		}
> 
> 		$this->dsn = rtrim($this->dsn);
92c145
< 	 * Persistent database connection
---
> 	 * Database connection
94c147
< 	 * @access	private called by the base class
---
> 	 * @param	bool	$persistent
97c150,161
< 	function db_pconnect()
---
> 	public function db_connect($persistent = FALSE)
> 	{
> 		$this->conn_id = ($persistent === TRUE)
> 			? pg_pconnect($this->dsn)
> 			: pg_connect($this->dsn);
> 
> 		if ($this->conn_id !== FALSE)
> 		{
> 			if ($persistent === TRUE
> 				&& pg_connection_status($this->conn_id) === PGSQL_CONNECTION_BAD
> 				&& pg_ping($this->conn_id) === FALSE
> 			)
99c163,169
< 		return @pg_pconnect($this->_connect_string());
---
> 				return FALSE;
> 			}
> 
> 			empty($this->schema) OR $this->simple_query('SET search_path TO '.$this->schema.',public');
> 		}
> 
> 		return $this->conn_id;
110d179
< 	 * @access	public
113c182
< 	function reconnect()
---
> 	public function reconnect()
124c193
< 	 * Select the database
---
> 	 * Set client character set
126,127c195,196
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @param	string	$charset
> 	 * @return	bool
129c198
< 	function db_select()
---
> 	protected function _db_set_charset($charset)
131,132c200
< 		// Not needed for Postgre so we'll return TRUE
< 		return TRUE;
---
> 		return (pg_set_client_encoding($this->conn_id, $charset) === 0);
138c206
< 	 * Set client character set
---
> 	 * Database version number
140,143c208
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
---
> 	 * @return	string
145c210,212
< 	function db_set_charset($charset, $collation)
---
> 	public function version()
> 	{
> 		if (isset($this->data_cache['version']))
147,148c214
< 		// @todo - add support if needed
< 		return TRUE;
---
> 			return $this->data_cache['version'];
151c217,220
< 	// --------------------------------------------------------------------
---
> 		if ( ! $this->conn_id OR ($pg_version = pg_version($this->conn_id)) === FALSE)
> 		{
> 			return FALSE;
> 		}
153,157c222,225
< 	/**
< 	 * Version number query string
< 	 *
< 	 * @access	public
< 	 * @return	string
---
> 		/* If PHP was compiled with PostgreSQL lib versions earlier
> 		 * than 7.4, pg_version() won't return the server version
> 		 * and so we'll have to fall back to running a query in
> 		 * order to get it.
159,161c227,229
< 	function _version()
< 	{
< 		return "SELECT version() AS ver";
---
> 		return isset($pg_version['server'])
> 			? $this->data_cache['version'] = $pg_version['server']
> 			: parent::version();
169,170c237
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
---
> 	 * @param	string	$sql	an SQL query
173c240
< 	function _execute($sql)
---
> 	protected function _execute($sql)
175,176c242
< 		$sql = $this->_prep_query($sql);
< 		return @pg_query($this->conn_id, $sql);
---
> 		return pg_query($this->conn_id, $sql);
182,184c248
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
---
> 	 * Begin Transaction
186,188c250
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
---
> 	 * @return	bool
190c252
< 	function _prep_query($sql)
---
> 	protected function _trans_begin()
192c254
< 		return $sql;
---
> 		return (bool) pg_query($this->conn_id, 'BEGIN');
198c260
< 	 * Begin Transaction
---
> 	 * Commit Transaction
200d261
< 	 * @access	public
203,205c264
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_commit()
207,221c266
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		return @pg_exec($this->conn_id, "begin");
---
> 		return (bool) pg_query($this->conn_id, 'COMMIT');
227c272
< 	 * Commit Transaction
---
> 	 * Rollback Transaction
229d273
< 	 * @access	public
232c276
< 	function trans_commit()
---
> 	protected function _trans_rollback()
234,245c278
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		return @pg_exec($this->conn_id, "commit");
---
> 		return (bool) pg_query($this->conn_id, 'ROLLBACK');
251c284
< 	 * Rollback Transaction
---
> 	 * Determines if a query is a "write" type.
253c286
< 	 * @access	public
---
> 	 * @param	string	An SQL query string
256c289
< 	function trans_rollback()
---
> 	public function is_write_type($sql)
258,264c291
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if (preg_match('#^(INSERT|UPDATE).*RETURNING\s.+(\,\s?.+)*$#i', $sql))
266c293
< 			return TRUE;
---
> 			return FALSE;
269c296
< 		return @pg_exec($this->conn_id, "rollback");
---
> 		return parent::is_write_type($sql);
275c302
< 	 * Escape String
---
> 	 * Platform-dependant string escape
277d303
< 	 * @access	public
279d304
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
282c307
< 	function escape_str($str, $like = FALSE)
---
> 	protected function _escape_str($str)
284,291c309
< 		if (is_array($str))
< 		{
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
---
> 		return pg_escape_string($this->conn_id, $str);
294c312
< 		$str = pg_escape_string($str);
---
> 	// --------------------------------------------------------------------
296,297c314,328
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
---
> 	/**
> 	 * "Smart" Escape String
> 	 *
> 	 * Escapes data based on type
> 	 *
> 	 * @param	string	$str
> 	 * @return	mixed
> 	 */
> 	public function escape($str)
> 	{
> 		if (is_php('5.4.4') && (is_string($str) OR (is_object($str) && method_exists($str, '__toString'))))
> 		{
> 			return pg_escape_literal($this->conn_id, $str);
> 		}
> 		elseif (is_bool($str))
299,301c330
< 			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
< 								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
< 								$str);
---
> 			return ($str) ? 'TRUE' : 'FALSE';
304c333
< 		return $str;
---
> 		return parent::escape($str);
312,313c341
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
315c343
< 	function affected_rows()
---
> 	public function affected_rows()
317c345
< 		return @pg_affected_rows($this->result_id);
---
> 		return pg_affected_rows($this->result_id);
325,326c353
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	string
328c355
< 	function insert_id()
---
> 	public function insert_id()
330,331c357,358
< 		$v = $this->_version();
< 		$v = $v['server'];
---
> 		$v = pg_version($this->conn_id);
> 		$v = isset($v['server']) ? $v['server'] : 0; // 'server' key is only available since PosgreSQL 7.4
333,334c360,361
< 		$table	= func_num_args() > 0 ? func_get_arg(0) : NULL;
< 		$column	= func_num_args() > 1 ? func_get_arg(1) : NULL;
---
> 		$table	= (func_num_args() > 0) ? func_get_arg(0) : NULL;
> 		$column	= (func_num_args() > 1) ? func_get_arg(1) : NULL;
336c363
< 		if ($table == NULL && $v >= '8.1')
---
> 		if ($table === NULL && $v >= '8.1')
340c367
< 		elseif ($table != NULL && $column != NULL && $v >= '8.0')
---
> 		elseif ($table !== NULL)
342,347c369
< 			$sql = sprintf("SELECT pg_get_serial_sequence('%s','%s') as seq", $table, $column);
< 			$query = $this->query($sql);
< 			$row = $query->row();
< 			$sql = sprintf("SELECT CURRVAL('%s') as ins_id", $row->seq);
< 		}
< 		elseif ($table != NULL)
---
> 			if ($column !== NULL && $v >= '8.0')
349,350c371,374
< 			// seq_name passed in table parameter
< 			$sql = sprintf("SELECT CURRVAL('%s') as ins_id", $table);
---
> 				$sql = 'SELECT pg_get_serial_sequence(\''.$table."', '".$column."') AS seq";
> 				$query = $this->query($sql);
> 				$query = $query->row();
> 				$seq = $query->seq;
354,358c378,379
< 			return pg_last_oid($this->result_id);
< 		}
< 		$query = $this->query($sql);
< 		$row = $query->row();
< 		return $row->ins_id;
---
> 				// seq_name passed in table parameter
> 				$seq = $table;
361,377c382
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function count_all($table = '')
< 	{
< 		if ($table == '')
< 		{
< 			return 0;
---
> 			$sql = 'SELECT CURRVAL(\''.$seq."') AS ins_id";
379,382c384
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
---
> 		else
384c386
< 			return 0;
---
> 			return pg_last_oid($this->result_id);
387,389c389,391
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		$query = $this->query($sql);
> 		$query = $query->row();
> 		return (int) $query->ins_id;
399,400c401
< 	 * @access	private
< 	 * @param	boolean
---
> 	 * @param	bool	$prefix_limit
403c404
< 	function _list_tables($prefix_limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
405c406
< 		$sql = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'";
---
> 		$sql = 'SELECT "table_name" FROM "information_schema"."tables" WHERE "table_schema" = \''.$this->schema."'";
407c408
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix !== '')
409c410,412
< 			$sql .= " AND table_name LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
---
> 			return $sql.' AND "table_name" LIKE \''
> 				.$this->escape_like_str($this->dbprefix)."%' "
> 				.sprintf($this->_like_escape_str, $this->_like_escape_chr);
418c421
< 	 * Show column query
---
> 	 * List column query
422,423c425
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$table
426c428
< 	function _list_columns($table = '')
---
> 	protected function _list_columns($table = '')
428c430,432
< 		return "SELECT column_name FROM information_schema.columns WHERE table_name ='".$table."'";
---
> 		return 'SELECT "column_name"
> 			FROM "information_schema"."columns"
> 			WHERE LOWER("table_name") = '.$this->escape(strtolower($table));
434,436c438
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
---
> 	 * Returns an object with field data
438,440c440,441
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @param	string	$table
> 	 * @return	array
442c443
< 	function _field_data($table)
---
> 	public function field_data($table)
444,445c445,447
< 		return "SELECT * FROM ".$table." LIMIT 1";
< 	}
---
> 		$sql = 'SELECT "column_name", "data_type", "character_maximum_length", "numeric_precision", "column_default"
> 			FROM "information_schema"."columns"
> 			WHERE LOWER("table_name") = '.$this->escape(strtolower($table));
447c449,453
< 	// --------------------------------------------------------------------
---
> 		if (($query = $this->query($sql)) === FALSE)
> 		{
> 			return FALSE;
> 		}
> 		$query = $query->result_object();
449,455c455,456
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
< 	 * @return	string
< 	 */
< 	function _error_message()
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
457c458,465
< 		return pg_last_error($this->conn_id);
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->column_name;
> 			$retval[$i]->type		= $query[$i]->data_type;
> 			$retval[$i]->max_length		= ($query[$i]->character_maximum_length > 0) ? $query[$i]->character_maximum_length : $query[$i]->numeric_precision;
> 			$retval[$i]->default		= $query[$i]->column_default;
> 		}
> 
> 		return $retval;
463c471
< 	 * The error message number
---
> 	 * Error
465,466c473,476
< 	 * @access	private
< 	 * @return	integer
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
> 	 *
> 	 * @return	array
468c478
< 	function _error_number()
---
> 	public function error()
470c480
< 		return '';
---
> 		return array('code' => '', 'message' => pg_last_error($this->conn_id));
476,478c486
< 	 * Escape the SQL Identifiers
< 	 *
< 	 * This function escapes column and table names
---
> 	 * ORDER BY
480,482c488,491
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
---
> 	 * @param	string	$orderby
> 	 * @param	string	$direction	ASC, DESC or RANDOM
> 	 * @param	bool	$escape
> 	 * @return	object
484,486c493
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
---
> 	public function order_by($orderby, $direction = '', $escape = NULL)
488,491c495,496
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
---
> 		$direction = strtoupper(trim($direction));
> 		if ($direction === 'RANDOM')
493c498
< 			if (strpos($item, '.'.$id) !== FALSE)
---
> 			if ( ! is_float($orderby) && ctype_digit((string) $orderby))
495,499c500,502
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
---
> 				$orderby = ($orderby > 1)
> 					? (float) '0.'.$orderby
> 					: (float) $orderby;
502,506c505
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
---
> 			if (is_float($orderby))
508c507
< 			$str = $this->_escape_char.$item.$this->_escape_char;
---
> 				$this->simple_query('SET SEED '.$orderby);
511,512c510,512
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
---
> 			$orderby = $this->_random_keyword[0];
> 			$direction = '';
> 			$escape = FALSE;
515,534c515
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
< 	 *
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
< 	 */
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
< 		{
< 			$tables = array($tables);
< 		}
< 
< 		return implode(', ', $tables);
---
> 		return parent::order_by($orderby, $direction, $escape);
540c521
< 	 * Insert statement
---
> 	 * Update statement
542c523
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Generates a platform-specific update string from the supplied data
544,547c525,526
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
---
> 	 * @param	string	$table
> 	 * @param	array	$values
550c529
< 	function _insert($table, $keys, $values)
---
> 	protected function _update($table, $values)
552c531,533
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		$this->qb_limit = FALSE;
> 		$this->qb_orderby = array();
> 		return parent::_update($table, $values);
558c539
< 	 * Insert_batch statement
---
> 	 * Update_Batch statement
560c541
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Generates a platform-specific batch update string from the supplied data
562,565c543,545
< 	 * @access  public
< 	 * @param   string  the table name
< 	 * @param   array   the insert keys
< 	 * @param   array   the insert values
---
> 	 * @param	string	$table	Table name
> 	 * @param	array	$values	Update data
> 	 * @param	string	$index	WHERE key
568c548
< 	function _insert_batch($table, $keys, $values)
---
> 	protected function _update_batch($table, $values, $index)
570,573c550,553
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES ".implode(', ', $values);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 		$ids = array();
> 		foreach ($values as $key => $val)
> 		{
> 			$ids[] = $val[$index];
575,588c555
< 	/**
< 	 * Update statement
< 	 *
< 	 * Generates a platform-specific update string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
< 	 * @return	string
< 	 */
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
---
> 			foreach (array_keys($val) as $field)
590c557
< 		foreach ($values as $key => $val)
---
> 				if ($field !== $index)
592c559,561
< 			$valstr[] = $key." = ".$val;
---
> 					$final[$field][] = 'WHEN '.$val[$index].' THEN '.$val[$field];
> 				}
> 			}
595,605c564,569
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
---
> 		$cases = '';
> 		foreach ($final as $k => $v)
> 		{
> 			$cases .= $k.' = (CASE '.$index."\n"
> 				.implode("\n", $v)."\n"
> 				.'ELSE '.$k.' END), ';
608c572
< 	// --------------------------------------------------------------------
---
> 		$this->where($index.' IN('.implode(',', $ids).')', NULL, FALSE);
610,623c574
< 	/**
< 	 * Truncate statement
< 	 *
< 	 * Generates a platform-specific truncate string from the supplied data
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _truncate($table)
< 	{
< 		return "TRUNCATE ".$table;
---
> 		return 'UPDATE '.$table.' SET '.substr($cases, 0, -2).$this->_compile_wh('qb_where');
633,636c584
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
---
> 	 * @param	string	$table
639,643c587
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
< 	{
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
---
> 	protected function _delete($table)
645,657c589,590
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
< 			{
< 				$conditions .= " AND ";
< 			}
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		return "DELETE FROM ".$table.$conditions.$limit;
---
> 		$this->qb_limit = FALSE;
> 		return parent::_delete($table);
662c596
< 	 * Limit string
---
> 	 * LIMIT
666,669c600
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
---
> 	 * @param	string	$sql	SQL Query
672,676c603
< 	function _limit($sql, $limit, $offset)
< 	{
< 		$sql .= "LIMIT ".$limit;
< 
< 		if ($offset > 0)
---
> 	protected function _limit($sql)
678,681c605
< 			$sql .= " OFFSET ".$offset;
< 		}
< 
< 		return $sql;
---
> 		return $sql.' LIMIT '.$this->qb_limit.($this->qb_offset ? ' OFFSET '.$this->qb_offset : '');
689,690d612
< 	 * @access	public
< 	 * @param	resource
693c615
< 	function _close($conn_id)
---
> 	protected function _close()
695c617
< 		@pg_close($conn_id);
---
> 		pg_close($this->conn_id);
700,703d620
< 
< 
< /* End of file postgre_driver.php */
< /* Location: ./system/database/drivers/postgre/postgre_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/postgre/postgre_forge.php opensourcepos/system/database/drivers/postgre/postgre_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c52
< 	 * Create database
---
> 	 * UNSIGNED support
30,32c54
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	array
34,39c56,66
< 	function _create_database($name)
< 	{
< 		return "CREATE DATABASE ".$name;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_unsigned		= array(
> 		'INT2'		=> 'INTEGER',
> 		'SMALLINT'	=> 'INTEGER',
> 		'INT'		=> 'BIGINT',
> 		'INT4'		=> 'BIGINT',
> 		'INTEGER'	=> 'BIGINT',
> 		'INT8'		=> 'NUMERIC',
> 		'BIGINT'	=> 'NUMERIC',
> 		'REAL'		=> 'DOUBLE PRECISION',
> 		'FLOAT'		=> 'DOUBLE PRECISION'
> 	);
42c69
< 	 * Drop database
---
> 	 * NULL value representation in CREATE/ALTER TABLE statements
44,46c71
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
48,51c73
< 	function _drop_database($name)
< 	{
< 		return "DROP DATABASE ".$name;
< 	}
---
> 	protected $_null = 'NULL';
56c78
< 	 * Create Table
---
> 	 * Class constructor
58,64c80,81
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @param	object	&$db	Database object
> 	 * @return	void
66,70c83
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
< 	{
< 		$sql = 'CREATE TABLE ';
< 
< 		if ($if_not_exists === TRUE)
---
> 	public function __construct(&$db)
72,79c85
< 			if ($this->db->table_exists($table))
< 			{
< 				return "SELECT * FROM $table"; // Needs to return innocous but valid SQL statement
< 			}
< 		}
< 
< 		$sql .= $this->db->_escape_identifiers($table)." (";
< 		$current_field_count = 0;
---
> 		parent::__construct($db);
81,86c87
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
---
> 		if (version_compare($this->db->version(), '9.0', '>'))
88c89
< 				$sql .= "\n\t$attributes";
---
> 			$this->create_table_if = 'CREATE TABLE IF NOT EXISTS';
90,127d90
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				$is_unsigned = (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE);
< 
< 				// Convert datatypes to be PostgreSQL-compatible
< 				switch (strtoupper($attributes['TYPE']))
< 				{
< 					case 'TINYINT':
< 						$attributes['TYPE'] = 'SMALLINT';
< 						break;
< 					case 'SMALLINT':
< 						$attributes['TYPE'] = ($is_unsigned) ? 'INTEGER' : 'SMALLINT';
< 						break;
< 					case 'MEDIUMINT':
< 						$attributes['TYPE'] = 'INTEGER';
< 						break;
< 					case 'INT':
< 						$attributes['TYPE'] = ($is_unsigned) ? 'BIGINT' : 'INTEGER';
< 						break;
< 					case 'BIGINT':
< 						$attributes['TYPE'] = ($is_unsigned) ? 'NUMERIC' : 'BIGINT';
< 						break;
< 					case 'DOUBLE':
< 						$attributes['TYPE'] = 'DOUBLE PRECISION';
< 						break;
< 					case 'DATETIME':
< 						$attributes['TYPE'] = 'TIMESTAMP';
< 						break;
< 					case 'LONGTEXT':
< 						$attributes['TYPE'] = 'TEXT';
< 						break;
< 					case 'BLOB':
< 						$attributes['TYPE'] = 'BYTEA';
< 						break;
130,139c93
< 				// If this is an auto-incrementing primary key, use the serial data type instead
< 				if (in_array($field, $primary_keys) && array_key_exists('AUTO_INCREMENT', $attributes) 
< 					&& $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' SERIAL';
< 				}
< 				else
< 				{
< 					$sql .=  ' '.$attributes['TYPE'];
< 				}
---
> 	// --------------------------------------------------------------------
141,142c95,103
< 				// Modified to prevent constraints with integer data types
< 				if (array_key_exists('CONSTRAINT', $attributes) && strpos($attributes['TYPE'], 'INT') === false)
---
> 	/**
> 	 * ALTER TABLE
> 	 *
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
> 	 */
> 	protected function _alter_table($alter_type, $table, $field)
144,147c105
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
---
> 		if (in_array($alter_type, array('DROP', 'ADD'), TRUE))
149c107
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
---
> 			return parent::_alter_table($alter_type, $table, $field);
152c110,112
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table);
> 		$sqls = array();
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
154,156c114
< 					$sql .= ' NULL';
< 				}
< 				else
---
> 			if ($field[$i]['_literal'] !== FALSE)
158c116
< 					$sql .= ' NOT NULL';
---
> 				return FALSE;
161,162c119
< 				// Added new attribute to create unqite fields. Also works with MySQL
< 				if (array_key_exists('UNIQUE', $attributes) && $attributes['UNIQUE'] === TRUE)
---
> 			if (version_compare($this->db->version(), '8', '>=') && isset($field[$i]['type']))
164,165c121,122
< 					$sql .= ' UNIQUE';
< 				}
---
> 				$sqls[] = $sql.' ALTER COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
> 					.' TYPE '.$field[$i]['type'].$field[$i]['length'];
168,169c125
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
---
> 			if ( ! empty($field[$i]['default']))
171,172c127,128
< 				$sql .= ',';
< 			}
---
> 				$sqls[] = $sql.' ALTER COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
> 					.' SET DEFAULT '.$field[$i]['default'];
175,178c131
< 		if (count($primary_keys) > 0)
< 		{
< 			// Something seems to break when passing an array to _protect_identifiers()
< 			foreach ($primary_keys as $index => $key)
---
> 			if (isset($field[$i]['null']))
180c133,134
< 				$primary_keys[$index] = $this->db->_protect_identifiers($key);
---
> 				$sqls[] = $sql.' ALTER COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
> 					.($field[$i]['null'] === TRUE ? ' DROP NOT NULL' : ' SET NOT NULL');
183,188c137
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		$sql .= "\n);";
< 
< 		if (is_array($keys) && count($keys) > 0)
---
> 			if ( ! empty($field[$i]['new_name']))
190,198c139,140
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
---
> 				$sqls[] = $sql.' RENAME COLUMN '.$this->db->escape_identifiers($field[$i]['name'])
> 					.' TO '.$this->db->escape_identifiers($field[$i]['new_name']);
201c143
< 				foreach ($key as $field)
---
> 			if ( ! empty($field[$i]['comment']))
203,204c145,147
< 					$sql .= "CREATE INDEX " . $table . "_" . str_replace(array('"', "'"), '', $field) . "_index ON $table ($field); ";
< 				}
---
> 				$sqls[] = 'COMMENT ON COLUMN '
> 					.$this->db->escape_identifiers($table).'.'.$this->db->escape_identifiers($field[$i]['name'])
> 					.' IS '.$field[$i]['comment'];
208c151
< 		return $sql;
---
> 		return $sqls;
214c157
< 	 * Drop Table
---
> 	 * Field attribute TYPE
216,230c159
< 	 * @access    private
< 	 * @return    bool
< 	 */
< 	function _drop_table($table)
< 	{
< 		return "DROP TABLE IF EXISTS ".$this->db->_escape_identifiers($table)." CASCADE";
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Alter table query
< 	 *
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * Performs a data type mapping between different databases.
232,240c161,162
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	array	&$attributes
> 	 * @return	void
242,247c164
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
---
> 	protected function _attr_type(&$attributes)
249,263c166,167
< 			return $sql;
< 		}
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
< 		{
< 			$sql .= " DEFAULT \"$default_value\"";
< 		}
< 
< 		if ($null === NULL)
< 		{
< 			$sql .= ' NULL';
< 		}
< 		else
---
> 		// Reset field lenghts for data types that don't support it
> 		if (isset($attributes['CONSTRAINT']) && stripos($attributes['TYPE'], 'int') !== FALSE)
265c169
< 			$sql .= ' NOT NULL';
---
> 			$attributes['CONSTRAINT'] = NULL;
268c172
< 		if ($after_field != '')
---
> 		switch (strtoupper($attributes['TYPE']))
270c174,182
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 			case 'TINYINT':
> 				$attributes['TYPE'] = 'SMALLINT';
> 				$attributes['UNSIGNED'] = FALSE;
> 				return;
> 			case 'MEDIUMINT':
> 				$attributes['TYPE'] = 'INTEGER';
> 				$attributes['UNSIGNED'] = FALSE;
> 				return;
> 			default: return;
272,274d183
< 
< 		return $sql;
< 
280c189
< 	 * Rename a table
---
> 	 * Field attribute AUTO_INCREMENT
282,287c191,193
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
---
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
289c195,197
< 	function _rename_table($table_name, $new_table_name)
---
> 	protected function _attr_auto_increment(&$attributes, &$field)
> 	{
> 		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE)
291,292c199,201
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
< 		return $sql;
---
> 			$field['type'] = ($field['type'] === 'NUMERIC')
> 				? 'BIGSERIAL'
> 				: 'SERIAL';
298,299c205
< /* End of file postgre_forge.php */
< /* Location: ./system/database/drivers/postgre/postgre_forge.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/postgre/postgre_result.php opensourcepos/system/database/drivers/postgre/postgre_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22a45,46
>  * @package		CodeIgniter
>  * @subpackage	Drivers
24,25c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
32,33c56
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c58
< 	function num_rows()
---
> 	public function num_rows()
37c60,62
< 		return @pg_num_rows($this->result_id);
---
> 		return is_int($this->num_rows)
> 			? $this->num_rows
> 			: $this->num_rows = pg_num_rows($this->result_id);
45,46c70
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c72
< 	function num_fields()
---
> 	public function num_fields()
50c74
< 		return @pg_num_fields($this->result_id);
---
> 		return pg_num_fields($this->result_id);
60d83
< 	 * @access	public
63c86
< 	function list_fields()
---
> 	public function list_fields()
66c89
< 		for ($i = 0; $i < $this->num_fields(); $i++)
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
81d103
< 	 * @access	public
84c106
< 	function field_data()
---
> 	public function field_data()
87c109
< 		for ($i = 0; $i < $this->num_fields(); $i++)
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
89,96c111,114
< 			$F				= new stdClass();
< 			$F->name		= pg_field_name($this->result_id, $i);
< 			$F->type		= pg_field_type($this->result_id, $i);
< 			$F->max_length	= pg_field_size($this->result_id, $i);
< 			$F->primary_key = 0;
< 			$F->default		= '';
< 
< 			$retval[] = $F;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= pg_field_name($this->result_id, $i);
> 			$retval[$i]->type		= pg_field_type($this->result_id, $i);
> 			$retval[$i]->max_length		= pg_field_size($this->result_id, $i);
107c125
< 	 * @return	null
---
> 	 * @return	void
109c127
< 	function free_result()
---
> 	public function free_result()
125c143
< 	 * result set starts at zero
---
> 	 * result set starts at zero.
127,128c145,146
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	int	$n
> 	 * @return	bool
130c148
< 	function _data_seek($n = 0)
---
> 	public function data_seek($n = 0)
142d159
< 	 * @access	private
145c162
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
157c174
< 	 * @access	private
---
> 	 * @param	string	$class_name
160c177
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
162c179
< 		return pg_fetch_object($this->result_id);
---
> 		return pg_fetch_object($this->result_id, NULL, $class_name);
166,169d182
< 
< 
< /* End of file postgre_result.php */
< /* Location: ./system/database/drivers/postgre/postgre_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/postgre/postgre_utility.php opensourcepos/system/database/drivers/postgre/postgre_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
20a43,44
>  * @package		CodeIgniter
>  * @subpackage	Drivers
22,23c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c52
< 	 * List databases
---
> 	 * List databases statement
30,31c54
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	string
33,38c56
< 	function _list_databases()
< 	{
< 		return "SELECT datname FROM pg_database";
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_list_databases	= 'SELECT datname FROM pg_database';
41c59
< 	 * Optimize table query
---
> 	 * OPTIMIZE TABLE statement
43,47c61
< 	 * Is table optimization supported in Postgre?
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
49,52c63
< 	function _optimize_table($table)
< 	{
< 		return FALSE;
< 	}
---
> 	protected $_optimize_table	= 'REINDEX TABLE %s';
57c68
< 	 * Repair table query
---
> 	 * Export
59,76c70
< 	 * Are table repairs supported in Postgre?
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Postgre Export
< 	 *
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
79c73
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
82c76
< 		return $this->db->display_error('db_unsuported_feature');
---
> 		return $this->db->display_error('db_unsupported_feature');
85,88d78
< 
< 
< /* End of file postgre_utility.php */
< /* Location: ./system/database/drivers/postgre/postgre_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlite/index.html opensourcepos/system/database/drivers/sqlite/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlite/sqlite_driver.php opensourcepos/system/database/drivers/sqlite/sqlite_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,18c38
< 
< // ------------------------------------------------------------------------
< 
< 
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
30,31c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
35,76d54
< 	var $dbdriver = 'sqlite';
< 
< 	// The character used to escape with - not needed for SQLite
< 	var $_escape_char = '';
< 
< 	// clause and character used for LIKE escape sequences
< 	var $_like_escape_str = " ESCAPE '%s' ";
< 	var $_like_escape_chr = '!';
< 
< 	/**
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
< 	 */
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword = ' Random()'; // database specific random keyword
< 
< 	/**
< 	 * Non-persistent database connection
< 	 *
< 	 * @access	private called by the base class
< 	 * @return	resource
< 	 */
< 	function db_connect()
< 	{
< 		if ( ! $conn_id = @sqlite_open($this->database, FILE_WRITE_MODE, $error))
< 		{
< 			log_message('error', $error);
< 
< 			if ($this->db_debug)
< 			{
< 				$this->display_error($error, '', TRUE);
< 			}
< 
< 			return FALSE;
< 		}
< 
< 		return $conn_id;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
78c56
< 	 * Persistent database connection
---
> 	 * Database driver
80,81c58
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	string
83,98c60
< 	function db_pconnect()
< 	{
< 		if ( ! $conn_id = @sqlite_popen($this->database, FILE_WRITE_MODE, $error))
< 		{
< 			log_message('error', $error);
< 
< 			if ($this->db_debug)
< 			{
< 				$this->display_error($error, '', TRUE);
< 			}
< 
< 			return FALSE;
< 		}
< 
< 		return $conn_id;
< 	}
---
> 	public $dbdriver = 'sqlite';
103c65
< 	 * Reconnect
---
> 	 * ORDER BY random keyword
105,109c67
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
< 	 *
< 	 * @access	public
< 	 * @return	void
---
> 	 * @var	array
111,114c69
< 	function reconnect()
< 	{
< 		// not implemented in SQLite
< 	}
---
> 	protected $_random_keyword = array('RANDOM()', 'RANDOM()');
119c74
< 	 * Select the database
---
> 	 * Non-persistent database connection
121c76
< 	 * @access	private called by the base class
---
> 	 * @param	bool	$persistent
124c79
< 	function db_select()
---
> 	public function db_connect($persistent = FALSE)
126,127c81,84
< 		return TRUE;
< 	}
---
> 		$error = NULL;
> 		$conn_id = ($persistent === TRUE)
> 			? sqlite_popen($this->database, 0666, $error)
> 			: sqlite_open($this->database, 0666, $error);
129c86
< 	// --------------------------------------------------------------------
---
> 		isset($error) && log_message('error', $error);
131,142c88
< 	/**
< 	 * Set client character set
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
< 	 */
< 	function db_set_charset($charset, $collation)
< 	{
< 		// @todo - add support if needed
< 		return TRUE;
---
> 		return $conn_id;
148c94
< 	 * Version number query string
---
> 	 * Database version number
150d95
< 	 * @access	public
153c98
< 	function _version()
---
> 	public function version()
155c100,102
< 		return sqlite_libversion();
---
> 		return isset($this->data_cache['version'])
> 			? $this->data_cache['version']
> 			: $this->data_cache['version'] = sqlite_libversion();
163,164c110
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
---
> 	 * @param	string	$sql	an SQL query
167c113
< 	function _execute($sql)
---
> 	protected function _execute($sql)
169,186c115,117
< 		$sql = $this->_prep_query($sql);
< 		return @sqlite_query($this->conn_id, $sql);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Prep the query
< 	 *
< 	 * If needed, each database adapter can prep the query string
< 	 *
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
< 	 */
< 	function _prep_query($sql)
< 	{
< 		return $sql;
---
> 		return $this->is_write_type($sql)
> 			? sqlite_exec($this->conn_id, $sql)
> 			: sqlite_query($this->conn_id, $sql);
194d124
< 	 * @access	public
197,199c127
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_begin()
201,216c129
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		$this->simple_query('BEGIN TRANSACTION');
< 		return TRUE;
---
> 		return $this->simple_query('BEGIN TRANSACTION');
224d136
< 	 * @access	public
227,235c139
< 	function trans_commit()
< 	{
< 		if ( ! $this->trans_enabled)
< 		{
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 	protected function _trans_commit()
237,241c141
< 			return TRUE;
< 		}
< 
< 		$this->simple_query('COMMIT');
< 		return TRUE;
---
> 		return $this->simple_query('COMMIT');
249d148
< 	 * @access	public
252,254c151
< 	function trans_rollback()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _trans_rollback()
256,266c153
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		$this->simple_query('ROLLBACK');
< 		return TRUE;
---
> 		return $this->simple_query('ROLLBACK');
272c159
< 	 * Escape String
---
> 	 * Platform-dependant string escape
274d160
< 	 * @access	public
276d161
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
279,294c164
< 	function escape_str($str, $like = FALSE)
< 	{
< 		if (is_array($str))
< 		{
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = $this->escape_str($val, $like);
< 			}
< 
< 			return $str;
< 		}
< 
< 		$str = sqlite_escape_string($str);
< 
< 		// escape LIKE condition wildcards
< 		if ($like === TRUE)
---
> 	protected function _escape_str($str)
296,301c166
< 			$str = str_replace(	array('%', '_', $this->_like_escape_chr),
< 								array($this->_like_escape_chr.'%', $this->_like_escape_chr.'_', $this->_like_escape_chr.$this->_like_escape_chr),
< 								$str);
< 		}
< 
< 		return $str;
---
> 		return sqlite_escape_string($str);
309,310c174
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
312c176
< 	function affected_rows()
---
> 	public function affected_rows()
322,323c186
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
325c188
< 	function insert_id()
---
> 	public function insert_id()
327,358c190
< 		return @sqlite_last_insert_rowid($this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function count_all($table = '')
< 	{
< 		if ($table == '')
< 		{
< 			return 0;
< 		}
< 
< 		$query = $this->query($this->_count_string . $this->_protect_identifiers('numrows') . " FROM " . $this->_protect_identifiers($table, TRUE, NULL, FALSE));
< 
< 		if ($query->num_rows() == 0)
< 		{
< 			return 0;
< 		}
< 
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return (int) $row->numrows;
---
> 		return sqlite_last_insert_rowid($this->conn_id);
368,369c200
< 	 * @access	private
< 	 * @param	boolean
---
> 	 * @param	bool	$prefix_limit
372c203
< 	function _list_tables($prefix_limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
376c207
< 		if ($prefix_limit !== FALSE AND $this->dbprefix != '')
---
> 		if ($prefix_limit !== FALSE && $this->dbprefix != '')
378c209
< 			$sql .= " AND 'name' LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
---
> 			return $sql." AND 'name' LIKE '".$this->escape_like_str($this->dbprefix)."%' ".sprintf($this->_like_escape_str, $this->_like_escape_chr);
390,392c222,223
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
---
> 	 * @param	string	$table
> 	 * @return	bool
394c225
< 	function _list_columns($table = '')
---
> 	protected function _list_columns($table = '')
403,405c234
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
---
> 	 * Returns an object with field data
407,409c236,237
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @param	string	$table
> 	 * @return	array
411c239
< 	function _field_data($table)
---
> 	public function field_data($table)
413,424c241
< 		return "SELECT * FROM ".$table." LIMIT 1";
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
< 	 * @return	string
< 	 */
< 	function _error_message()
---
> 		if (($query = $this->query('PRAGMA TABLE_INFO('.$this->protect_identifiers($table, TRUE, NULL, FALSE).')')) === FALSE)
426,468c243
< 		return sqlite_error_string(sqlite_last_error($this->conn_id));
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message number
< 	 *
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
< 	{
< 		return sqlite_last_error($this->conn_id);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Escape the SQL Identifiers
< 	 *
< 	 * This function escapes column and table names
< 	 *
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function _escape_identifiers($item)
< 	{
< 		if ($this->_escape_char == '')
< 		{
< 			return $item;
< 		}
< 
< 		foreach ($this->_reserved_identifiers as $id)
< 		{
< 			if (strpos($item, '.'.$id) !== FALSE)
< 			{
< 				$str = $this->_escape_char. str_replace('.', $this->_escape_char.'.', $item);
< 
< 				// remove duplicates if the user already included the escape
< 				return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
< 			}
---
> 			return FALSE;
471,475c246,247
< 		if (strpos($item, '.') !== FALSE)
< 		{
< 			$str = $this->_escape_char.str_replace('.', $this->_escape_char.'.'.$this->_escape_char, $item).$this->_escape_char;
< 		}
< 		else
---
> 		$query = $query->result_array();
> 		if (empty($query))
477,481c249
< 			$str = $this->_escape_char.$item.$this->_escape_char;
< 		}
< 
< 		// remove duplicates if the user already included the escape
< 		return preg_replace('/['.$this->_escape_char.']+/', $this->_escape_char, $str);
---
> 			return FALSE;
484,498c252,253
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * From Tables
< 	 *
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
< 	 *
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
< 	 */
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
500c255,260
< 			$tables = array($tables);
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]['name'];
> 			$retval[$i]->type		= $query[$i]['type'];
> 			$retval[$i]->max_length		= NULL;
> 			$retval[$i]->default		= $query[$i]['dflt_value'];
> 			$retval[$i]->primary_key	= isset($query[$i]['pk']) ? (int) $query[$i]['pk'] : 0;
503c263
< 		return '('.implode(', ', $tables).')';
---
> 		return $retval;
509c269
< 	 * Insert statement
---
> 	 * Error
511c271,272
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
513,517c274
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
< 	 * @return	string
---
> 	 * @return	array
519c276
< 	function _insert($table, $keys, $values)
---
> 	public function error()
521c278,280
< 		return "INSERT INTO ".$table." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		$error = array('code' => sqlite_last_error($this->conn_id));
> 		$error['message'] = sqlite_error_string($error['code']);
> 		return $error;
527c286
< 	 * Update statement
---
> 	 * Replace statement
529c288
< 	 * Generates a platform-specific update string from the supplied data
---
> 	 * Generates a platform-specific replace string from the supplied data
531,536c290,292
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
---
> 	 * @param	string	$table	Table name
> 	 * @param	array	$keys	INSERT keys
> 	 * @param	array	$values	INSERT values
539,541c295
< 	function _update($table, $values, $where, $orderby = array(), $limit = FALSE)
< 	{
< 		foreach ($values as $key => $val)
---
> 	protected function _replace($table, $keys, $values)
543c297
< 			$valstr[] = $key." = ".$val;
---
> 		return 'INSERT OR '.parent::_replace($table, $keys, $values);
546,559d299
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		$orderby = (count($orderby) >= 1)?' ORDER BY '.implode(", ", $orderby):'';
< 
< 		$sql = "UPDATE ".$table." SET ".implode(', ', $valstr);
< 
< 		$sql .= ($where != '' AND count($where) >=1) ? " WHERE ".implode(" ", $where) : '';
< 
< 		$sql .= $orderby.$limit;
< 
< 		return $sql;
< 	}
< 
< 
566,581d305
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	string
< 	 */
< 	function _truncate($table)
< 	{
< 		return $this->_delete($table);
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Delete statement
583c307,308
< 	 * Generates a platform-specific delete string from the supplied data
---
> 	 * If the database does not support the TRUNCATE statement,
> 	 * then this function maps to 'DELETE FROM table'
585,588c310
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
---
> 	 * @param	string	$table
591c313
< 	function _delete($table, $where = array(), $like = array(), $limit = FALSE)
---
> 	protected function _truncate($table)
593,636c315
< 		$conditions = '';
< 
< 		if (count($where) > 0 OR count($like) > 0)
< 		{
< 			$conditions = "\nWHERE ";
< 			$conditions .= implode("\n", $this->ar_where);
< 
< 			if (count($where) > 0 && count($like) > 0)
< 			{
< 				$conditions .= " AND ";
< 			}
< 			$conditions .= implode("\n", $like);
< 		}
< 
< 		$limit = ( ! $limit) ? '' : ' LIMIT '.$limit;
< 
< 		return "DELETE FROM ".$table.$conditions.$limit;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Limit string
< 	 *
< 	 * Generates a platform-specific LIMIT clause
< 	 *
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
< 	 * @return	string
< 	 */
< 	function _limit($sql, $limit, $offset)
< 	{
< 		if ($offset == 0)
< 		{
< 			$offset = '';
< 		}
< 		else
< 		{
< 			$offset .= ", ";
< 		}
< 
< 		return $sql."LIMIT ".$offset.$limit;
---
> 		return 'DELETE FROM '.$table;
644,645d322
< 	 * @access	public
< 	 * @param	resource
648c325
< 	function _close($conn_id)
---
> 	protected function _close()
650c327
< 		@sqlite_close($conn_id);
---
> 		sqlite_close($this->conn_id);
655,658d330
< 
< 
< /* End of file sqlite_driver.php */
< /* Location: ./system/database/drivers/sqlite/sqlite_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlite/sqlite_forge.php opensourcepos/system/database/drivers/sqlite/sqlite_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * Create database
---
> 	 * CREATE TABLE IF statement
30,32c52
< 	 * @access	public
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,39c54,68
< 	function _create_database()
< 	{
< 		// In SQLite, a database is created when you connect to the database.
< 		// We'll return TRUE so that an error isn't generated
< 		return TRUE;
< 	}
---
> 	protected $_create_table_if	= FALSE;
> 
> 	/**
> 	 * UNSIGNED support
> 	 *
> 	 * @var	bool|array
> 	 */
> 	protected $_unsigned		= FALSE;
> 
> 	/**
> 	 * NULL value representation in CREATE/ALTER TABLE statements
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_null		= 'NULL';
44c73
< 	 * Drop database
---
> 	 * Create database
46,47c75
< 	 * @access	private
< 	 * @param	string	the database name
---
> 	 * @param	string	$db_name	(ignored)
50c78
< 	function _drop_database($name)
---
> 	public function create_database($db_name = '')
52,59c80,81
< 		if ( ! @file_exists($this->db->database) OR ! @unlink($this->db->database))
< 		{
< 			if ($this->db->db_debug)
< 			{
< 				return $this->db->display_error('db_unable_to_drop');
< 			}
< 			return FALSE;
< 		}
---
> 		// In SQLite, a database is created when you connect to the database.
> 		// We'll return TRUE so that an error isn't generated
65c88
< 	 * Create Table
---
> 	 * Drop database
67,72c90
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
---
> 	 * @param	string	$db_name	(ignored)
75,115c93
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
< 	{
< 		$sql = 'CREATE TABLE ';
< 
< 		// IF NOT EXISTS added to SQLite in 3.3.0
< 		if ($if_not_exists === TRUE && version_compare($this->db->_version(), '3.3.0', '>=') === TRUE)
< 		{
< 			$sql .= 'IF NOT EXISTS ';
< 		}
< 
< 		$sql .= $this->db->_escape_identifiers($table)."(";
< 		$current_field_count = 0;
< 
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
< 			{
< 				$sql .= "\n\t$attributes";
< 			}
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
< 
< 				$sql .=  ' '.$attributes['TYPE'];
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
---
> 	public function drop_database($db_name = '')
117,120c95
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
---
> 		if ( ! file_exists($this->db->database) OR ! @unlink($this->db->database))
122c97
< 					$sql .= ' NULL';
---
> 			return ($this->db->db_debug) ? $this->db->display_error('db_unable_to_drop') : FALSE;
124c99
< 				else
---
> 		elseif ( ! empty($this->db->data_cache['db_names']))
126,129c101,102
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
---
> 			$key = array_search(strtolower($this->db->database), array_map('strtolower', $this->db->data_cache['db_names']), TRUE);
> 			if ($key !== FALSE)
131c104
< 					$sql .= ' AUTO_INCREMENT';
---
> 				unset($this->db->data_cache['db_names'][$key]);
135,139c108
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
< 			{
< 				$sql .= ',';
< 			}
---
> 		return TRUE;
142,146c111
< 		if (count($primary_keys) > 0)
< 		{
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
< 		}
---
> 	// --------------------------------------------------------------------
148,159c113,134
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
< 				}
---
> 	/**
> 	 * ALTER TABLE
> 	 *
> 	 * @todo	implement drop_column(), modify_column()
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
> 	 */
> 	protected function _alter_table($alter_type, $table, $field)
> 	{
> 		if ($alter_type === 'DROP' OR $alter_type === 'CHANGE')
> 		{
> 			// drop_column():
> 			//	BEGIN TRANSACTION;
> 			//	CREATE TEMPORARY TABLE t1_backup(a,b);
> 			//	INSERT INTO t1_backup SELECT a,b FROM t1;
> 			//	DROP TABLE t1;
> 			//	CREATE TABLE t1(a,b);
> 			//	INSERT INTO t1 SELECT a,b FROM t1_backup;
> 			//	DROP TABLE t1_backup;
> 			//	COMMIT;
161,162c136
< 				$sql .= ",\n\tUNIQUE (" . implode(', ', $key) . ")";
< 			}
---
> 			return FALSE;
165,167c139
< 		$sql .= "\n)";
< 
< 		return $sql;
---
> 		return parent::_alter_table($alter_type, $table, $field);
173,175c145
< 	 * Drop Table
< 	 *
< 	 *  Unsupported feature in SQLite
---
> 	 * Process column
177,178c147,148
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @param	array	$field
> 	 * @return	string
180,182c150
< 	function _drop_table($table)
< 	{
< 		if ($this->db->db_debug)
---
> 	protected function _process_column($field)
184,186c152,157
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return array();
---
> 		return $this->db->escape_identifiers($field['name'])
> 			.' '.$field['type']
> 			.$field['auto_increment']
> 			.$field['null']
> 			.$field['unique']
> 			.$field['default'];
192c163
< 	 * Alter table query
---
> 	 * Field attribute TYPE
194,195c165
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * Performs a data type mapping between different databases.
197,231c167,170
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
< 	 */
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
< 		{
< 			// SQLite does not support dropping columns
< 			// http://www.sqlite.org/omitted.html
< 			// http://www.sqlite.org/faq.html#q11
< 			return FALSE;
< 		}
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
< 		{
< 			$sql .= " DEFAULT \"$default_value\"";
< 		}
< 
< 		if ($null === NULL)
< 		{
< 			$sql .= ' NULL';
< 		}
< 		else
---
> 	 * @param	array	&$attributes
> 	 * @return	void
> 	 */
> 	protected function _attr_type(&$attributes)
233,236c172
< 			$sql .= ' NOT NULL';
< 		}
< 
< 		if ($after_field != '')
---
> 		switch (strtoupper($attributes['TYPE']))
238c174,178
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 			case 'ENUM':
> 			case 'SET':
> 				$attributes['TYPE'] = 'TEXT';
> 				return;
> 			default: return;
240,242d179
< 
< 		return $sql;
< 
248c185
< 	 * Rename a table
---
> 	 * Field attribute AUTO_INCREMENT
250,255c187,189
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
---
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
257c191,193
< 	function _rename_table($table_name, $new_table_name)
---
> 	protected function _attr_auto_increment(&$attributes, &$field)
> 	{
> 		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
259,260c195,201
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name);
< 		return $sql;
---
> 			$field['type'] = 'INTEGER PRIMARY KEY';
> 			$field['default'] = '';
> 			$field['null'] = '';
> 			$field['unique'] = '';
> 			$field['auto_increment'] = ' AUTOINCREMENT';
> 
> 			$this->primary_keys = array();
264,265c205
< /* End of file sqlite_forge.php */
< /* Location: ./system/database/drivers/sqlite/sqlite_forge.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlite/sqlite_result.php opensourcepos/system/database/drivers/sqlite/sqlite_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
32,33c54
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c56
< 	function num_rows()
---
> 	public function num_rows()
37c58,60
< 		return @sqlite_num_rows($this->result_id);
---
> 		return is_int($this->num_rows)
> 			? $this->num_rows
> 			: $this->num_rows = @sqlite_num_rows($this->result_id);
45,46c68
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c70
< 	function num_fields()
---
> 	public function num_fields()
60d81
< 	 * @access	public
63c84
< 	function list_fields()
---
> 	public function list_fields()
66c87
< 		for ($i = 0; $i < $this->num_fields(); $i++)
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
68c89
< 			$field_names[] = sqlite_field_name($this->result_id, $i);
---
> 			$field_names[$i] = sqlite_field_name($this->result_id, $i);
81d101
< 	 * @access	public
84c104
< 	function field_data()
---
> 	public function field_data()
87c107
< 		for ($i = 0; $i < $this->num_fields(); $i++)
---
> 		for ($i = 0, $c = $this->num_fields(); $i < $c; $i++)
89,96c109,112
< 			$F				= new stdClass();
< 			$F->name		= sqlite_field_name($this->result_id, $i);
< 			$F->type		= 'varchar';
< 			$F->max_length	= 0;
< 			$F->primary_key = 0;
< 			$F->default		= '';
< 
< 			$retval[] = $F;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= sqlite_field_name($this->result_id, $i);
> 			$retval[$i]->type		= NULL;
> 			$retval[$i]->max_length		= NULL;
105,116d120
< 	 * Free the result
< 	 *
< 	 * @return	null
< 	 */
< 	function free_result()
< 	{
< 		// Not implemented in SQLite
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
121c125
< 	 * result set starts at zero
---
> 	 * result set starts at zero.
123,124c127,128
< 	 * @access	private
< 	 * @return	array
---
> 	 * @param	int	$n
> 	 * @return	bool
126c130
< 	function _data_seek($n = 0)
---
> 	public function data_seek($n = 0)
138d141
< 	 * @access	private
141c144
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
153c156
< 	 * @access	private
---
> 	 * @param	string	$class_name
156c159
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
158,172c161
< 		if (function_exists('sqlite_fetch_object'))
< 		{
< 			return sqlite_fetch_object($this->result_id);
< 		}
< 		else
< 		{
< 			$arr = sqlite_fetch_array($this->result_id, SQLITE_ASSOC);
< 			if (is_array($arr))
< 			{
< 				$obj = (object) $arr;
< 				return $obj;
< 			} else {
< 				return NULL;
< 			}
< 		}
---
> 		return sqlite_fetch_object($this->result_id, $class_name);
176,179d164
< 
< 
< /* End of file sqlite_result.php */
< /* Location: ./system/database/drivers/sqlite/sqlite_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlite/sqlite_utility.php opensourcepos/system/database/drivers/sqlite/sqlite_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.3.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28,82c50
< 	 * List databases
< 	 *
< 	 * I don't believe you can do a database listing with SQLite
< 	 * since each database is its own file.  I suppose we could
< 	 * try reading a directory looking for SQLite files, but
< 	 * that doesn't seem like a terribly good idea
< 	 *
< 	 * @access	private
< 	 * @return	bool
< 	 */
< 	function _list_databases()
< 	{
< 		if ($this->db_debug)
< 		{
< 			return $this->db->display_error('db_unsuported_feature');
< 		}
< 		return array();
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Optimize table query
< 	 *
< 	 * Is optimization even supported in SQLite?
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _optimize_table($table)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Repair table query
< 	 *
< 	 * Are table repairs even supported in SQLite?
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		return FALSE;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * SQLite Export
---
> 	 * Export
84,85c52
< 	 * @access	private
< 	 * @param	array	Preferences
---
> 	 * @param	array	$params	Preferences
88c55
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
91,92c58
< 		return $this->db->display_error('db_unsuported_feature');
< 	}
---
> 		return $this->db->display_error('db_unsupported_feature');
95,96c61
< /* End of file sqlite_utility.php */
< /* Location: ./system/database/drivers/sqlite/sqlite_utility.php */
\ No newline at end of file
---
> }
Only in opensourcepos/system/database/drivers: sqlite3
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlsrv/index.html opensourcepos/system/database/drivers/sqlsrv/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlsrv/sqlsrv_driver.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.3
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22c44
<  * creates dynamically based on whether the active record
---
>  * creates dynamically based on whether the query builder
28,29c50,51
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
33,41d54
< 	var $dbdriver = 'sqlsrv';
< 
< 	// The character used for escaping
< 	var $_escape_char = '';
< 
< 	// clause and character used for LIKE escape sequences
< 	var $_like_escape_str = " ESCAPE '%s' ";
< 	var $_like_escape_chr = '!';
< 
43,45c56,58
< 	 * The syntax to count rows is slightly different across different
< 	 * database engines, so this string appears in each driver and is
< 	 * used for the count_all() and count_all_results() functions.
---
> 	 * Database driver
> 	 *
> 	 * @var	string
47,48c60
< 	var $_count_string = "SELECT COUNT(*) AS ";
< 	var $_random_keyword = ' ASC'; // not currently supported
---
> 	public $dbdriver = 'sqlsrv';
51c63
< 	 * Non-persistent database connection
---
> 	 * Scrollable flag
53,54c65,70
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * Determines what cursor type to use when executing queries.
> 	 *
> 	 * FALSE or SQLSRV_CURSOR_FORWARD would increase performance,
> 	 * but would disable num_rows() (and possibly insert_id())
> 	 *
> 	 * @var	mixed
56,77c72
< 	function db_connect($pooling = false)
< 	{
< 		// Check for a UTF-8 charset being passed as CI's default 'utf8'.
< 		$character_set = (0 === strcasecmp('utf8', $this->char_set)) ? 'UTF-8' : $this->char_set;
< 
< 		$connection = array(
< 			'UID'				=> empty($this->username) ? '' : $this->username,
< 			'PWD'				=> empty($this->password) ? '' : $this->password,
< 			'Database'			=> $this->database,
< 			'ConnectionPooling' => $pooling ? 1 : 0,
< 			'CharacterSet'		=> $character_set,
< 			'ReturnDatesAsStrings' => 1
< 		);
< 		
< 		// If the username and password are both empty, assume this is a 
< 		// 'Windows Authentication Mode' connection.
< 		if(empty($connection['UID']) && empty($connection['PWD'])) {
< 			unset($connection['UID'], $connection['PWD']);
< 		}
< 
< 		return sqlsrv_connect($this->hostname, $connection);
< 	}
---
> 	public $scrollable;
82c77
< 	 * Persistent database connection
---
> 	 * ORDER BY random keyword
84,85c79
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @var	array
87,92c81
< 	function db_pconnect()
< 	{
< 		$this->db_connect(TRUE);
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_random_keyword = array('NEWID()', 'RAND(%d)');
95c84
< 	 * Reconnect
---
> 	 * Quoted identifier flag
97,98c86,87
< 	 * Keep / reestablish the db connection if no queries have been
< 	 * sent for a length of time exceeding the server's idle timeout
---
> 	 * Whether to use SQL-92 standard quoted identifier
> 	 * (double quotes) or brackets for identifier escaping.
100,101c89
< 	 * @access	public
< 	 * @return	void
---
> 	 * @var	bool
103,106c91
< 	function reconnect()
< 	{
< 		// not implemented in MSSQL
< 	}
---
> 	protected $_quoted_identifier = TRUE;
111c96
< 	 * Select the database
---
> 	 * Class constructor
113,114c98,99
< 	 * @access	private called by the base class
< 	 * @return	resource
---
> 	 * @param	array	$params
> 	 * @return	void
116c101
< 	function db_select()
---
> 	public function __construct($params)
118,119c103
< 		return $this->_execute('USE ' . $this->database);
< 	}
---
> 		parent::__construct($params);
121,131c105,106
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Set client character set
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	resource
< 	 */
< 	function db_set_charset($charset, $collation)
---
> 		// This is only supported as of SQLSRV 3.0
> 		if ($this->scrollable === NULL)
133,134c108,110
< 		// @todo - add support if needed
< 		return TRUE;
---
> 			$this->scrollable = defined('SQLSRV_CURSOR_CLIENT_BUFFERED')
> 				? SQLSRV_CURSOR_CLIENT_BUFFERED
> 				: FALSE;
136,152d111
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Execute the query
< 	 *
< 	 * @access	private called by the base class
< 	 * @param	string	an SQL query
< 	 * @return	resource
< 	 */
< 	function _execute($sql)
< 	{
< 		$sql = $this->_prep_query($sql);
< 		return sqlsrv_query($this->conn_id, $sql, null, array(
< 			'Scrollable'				=> SQLSRV_CURSOR_STATIC,
< 			'SendStreamParamsAtExec'	=> true
< 		));
158c117
< 	 * Prep the query
---
> 	 * Database connection
160,164c119,120
< 	 * If needed, each database adapter can prep the query string
< 	 *
< 	 * @access	private called by execute()
< 	 * @param	string	an SQL query
< 	 * @return	string
---
> 	 * @param	bool	$pooling
> 	 * @return	resource
166c122
< 	function _prep_query($sql)
---
> 	public function db_connect($pooling = FALSE)
168,169c124,125
< 		return $sql;
< 	}
---
> 		$charset = in_array(strtolower($this->char_set), array('utf-8', 'utf8'), TRUE)
> 			? 'UTF-8' : SQLSRV_ENC_CHAR;
171c127,135
< 	// --------------------------------------------------------------------
---
> 		$connection = array(
> 			'UID'			=> empty($this->username) ? '' : $this->username,
> 			'PWD'			=> empty($this->password) ? '' : $this->password,
> 			'Database'		=> $this->database,
> 			'ConnectionPooling'	=> ($pooling === TRUE) ? 1 : 0,
> 			'CharacterSet'		=> $charset,
> 			'Encrypt'		=> ($this->encrypt === TRUE) ? 1 : 0,
> 			'ReturnDatesAsStrings'	=> 1
> 		);
173,181c137,139
< 	/**
< 	 * Begin Transaction
< 	 *
< 	 * @access	public
< 	 * @return	bool
< 	 */
< 	function trans_begin($test_mode = FALSE)
< 	{
< 		if ( ! $this->trans_enabled)
---
> 		// If the username and password are both empty, assume this is a
> 		// 'Windows Authentication Mode' connection.
> 		if (empty($connection['UID']) && empty($connection['PWD']))
183c141
< 			return TRUE;
---
> 			unset($connection['UID'], $connection['PWD']);
186,187c144
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if (FALSE !== ($this->conn_id = sqlsrv_connect($this->hostname, $connection)))
189c146,150
< 			return TRUE;
---
> 			// Determine how identifiers are escaped
> 			$query = $this->query('SELECT CASE WHEN (@@OPTIONS | 256) = @@OPTIONS THEN 1 ELSE 0 END AS qi');
> 			$query = $query->row_array();
> 			$this->_quoted_identifier = empty($query) ? FALSE : (bool) $query['qi'];
> 			$this->_escape_char = ($this->_quoted_identifier) ? '"' : array('[', ']');
192,197c153
< 		// Reset the transaction failure flag.
< 		// If the $test_mode flag is set to TRUE transactions will be rolled back
< 		// even if the queries produce a successful result.
< 		$this->_trans_failure = ($test_mode === TRUE) ? TRUE : FALSE;
< 
< 		return sqlsrv_begin_transaction($this->conn_id);
---
> 		return $this->conn_id;
203c159
< 	 * Commit Transaction
---
> 	 * Select the database
205c161
< 	 * @access	public
---
> 	 * @param	string	$database
208c164
< 	function trans_commit()
---
> 	public function db_select($database = '')
210c166
< 		if ( ! $this->trans_enabled)
---
> 		if ($database === '')
212c168
< 			return TRUE;
---
> 			$database = $this->database;
215,216c171
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
---
> 		if ($this->_execute('USE '.$this->escape_identifiers($database)))
217a173
> 			$this->database = $database;
221c177
< 		return sqlsrv_commit($this->conn_id);
---
> 		return FALSE;
227c183
< 	 * Rollback Transaction
---
> 	 * Execute the query
229,230c185,186
< 	 * @access	public
< 	 * @return	bool
---
> 	 * @param	string	$sql	an SQL query
> 	 * @return	resource
232,234c188
< 	function trans_rollback()
< 	{
< 		if ( ! $this->trans_enabled)
---
> 	protected function _execute($sql)
236,245c190,192
< 			return TRUE;
< 		}
< 
< 		// When transactions are nested we only begin/commit/rollback the outermost ones
< 		if ($this->_trans_depth > 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		return sqlsrv_rollback($this->conn_id);
---
> 		return ($this->scrollable === FALSE OR $this->is_write_type($sql))
> 			? sqlsrv_query($this->conn_id, $sql)
> 			: sqlsrv_query($this->conn_id, $sql, NULL, array('Scrollable' => $this->scrollable));
251c198
< 	 * Escape String
---
> 	 * Begin Transaction
253,256c200
< 	 * @access	public
< 	 * @param	string
< 	 * @param	bool	whether or not the string will be used in a LIKE condition
< 	 * @return	string
---
> 	 * @return	bool
258c202
< 	function escape_str($str, $like = FALSE)
---
> 	protected function _trans_begin()
260,261c204
< 		// Escape single quotes
< 		return str_replace("'", "''", $str);
---
> 		return sqlsrv_begin_transaction($this->conn_id);
267c210
< 	 * Affected Rows
---
> 	 * Commit Transaction
269,270c212
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	bool
272c214
< 	function affected_rows()
---
> 	protected function _trans_commit()
274c216
< 		return @sqlrv_rows_affected($this->conn_id);
---
> 		return sqlsrv_commit($this->conn_id);
280,282c222
< 	* Insert ID
< 	*
< 	* Returns the last id created in the Identity column.
---
> 	 * Rollback Transaction
284,285c224
< 	* @access public
< 	* @return integer
---
> 	 * @return	bool
287c226
< 	function insert_id()
---
> 	protected function _trans_rollback()
289c228
< 		return $this->query('select @@IDENTITY as insert_id')->row('insert_id');
---
> 		return sqlsrv_rollback($this->conn_id);
295,298c234
< 	* Parse major version
< 	*
< 	* Grabs the major version number from the
< 	* database server version string passed in.
---
> 	 * Affected Rows
300,302c236
< 	* @access private
< 	* @param string $version
< 	* @return int16 major version number
---
> 	 * @return	int
304c238
< 	function _parse_major_version($version)
---
> 	public function affected_rows()
306,307c240
< 		preg_match('/([0-9]+)\.([0-9]+)\.([0-9]+)/', $version, $ver_info);
< 		return $ver_info[1]; // return the major version b/c that's all we're interested in.
---
> 		return sqlsrv_rows_affected($this->result_id);
313c246,248
< 	* Version number query string
---
> 	 * Insert ID
> 	 *
> 	 * Returns the last id created in the Identity column.
315d249
< 	* @access public
318c252
< 	function _version()
---
> 	public function insert_id()
320,321c254
< 		$info = sqlsrv_server_info($this->conn_id);
< 		return sprintf("select '%s' as ver", $info['SQLServerVersion']);
---
> 		return $this->query('SELECT SCOPE_IDENTITY() AS insert_id')->row()->insert_id;
327,330c260
< 	 * "Count All" query
< 	 *
< 	 * Generates a platform-specific query string that counts all records in
< 	 * the specified database
---
> 	 * Database version number
332,333d261
< 	 * @access	public
< 	 * @param	string
336c264
< 	function count_all($table = '')
---
> 	public function version()
338,341c266,269
< 		if ($table == '')
< 			return '0';
< 	
< 		$query = $this->query("SELECT COUNT(*) AS numrows FROM " . $this->dbprefix . $table);
---
> 		if (isset($this->data_cache['version']))
> 		{
> 			return $this->data_cache['version'];
> 		}
343,344c271,274
< 		if ($query->num_rows() == 0)
< 			return '0';
---
> 		if ( ! $this->conn_id OR ($info = sqlsrv_server_info($this->conn_id)) === FALSE)
> 		{
> 			return FALSE;
> 		}
346,348c276
< 		$row = $query->row();
< 		$this->_reset_select();
< 		return $row->numrows;
---
> 		return $this->data_cache['version'] = $info['SQLServerVersion'];
358,360c286,287
< 	 * @access	private
< 	 * @param	boolean
< 	 * @return	string
---
> 	 * @param	bool
> 	 * @return	string	$prefix_limit
362c289
< 	function _list_tables($prefix_limit = FALSE)
---
> 	protected function _list_tables($prefix_limit = FALSE)
364c291,301
< 		return "SELECT name FROM sysobjects WHERE type = 'U' ORDER BY name";
---
> 		$sql = 'SELECT '.$this->escape_identifiers('name')
> 			.' FROM '.$this->escape_identifiers('sysobjects')
> 			.' WHERE '.$this->escape_identifiers('type')." = 'U'";
> 
> 		if ($prefix_limit === TRUE && $this->dbprefix !== '')
> 		{
> 			$sql .= ' AND '.$this->escape_identifiers('name')." LIKE '".$this->escape_like_str($this->dbprefix)."%' "
> 				.sprintf($this->_escape_like_str, $this->_escape_like_chr);
> 		}
> 
> 		return $sql.' ORDER BY '.$this->escape_identifiers('name');
374,375c311
< 	 * @access	private
< 	 * @param	string	the table name
---
> 	 * @param	string	$table
378c314
< 	function _list_columns($table = '')
---
> 	protected function _list_columns($table = '')
380c316,318
< 		return "SELECT * FROM INFORMATION_SCHEMA.Columns WHERE TABLE_NAME = '".$this->_escape_table($table)."'";
---
> 		return 'SELECT COLUMN_NAME
> 			FROM INFORMATION_SCHEMA.Columns
> 			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
386,388c324
< 	 * Field data query
< 	 *
< 	 * Generates a platform-specific query so that the column data can be retrieved
---
> 	 * Returns an object with field data
390,392c326,327
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @param	string	$table
> 	 * @return	array
394c329
< 	function _field_data($table)
---
> 	public function field_data($table)
396,397c331,333
< 		return "SELECT TOP 1 * FROM " . $this->_escape_table($table);	
< 	}
---
> 		$sql = 'SELECT COLUMN_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, COLUMN_DEFAULT
> 			FROM INFORMATION_SCHEMA.Columns
> 			WHERE UPPER(TABLE_NAME) = '.$this->escape(strtoupper($table));
399,407c335
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message string
< 	 *
< 	 * @access	private
< 	 * @return	string
< 	 */
< 	function _error_message()
---
> 		if (($query = $this->query($sql)) === FALSE)
409,410c337
< 		$error = array_shift(sqlsrv_errors());
< 		return !empty($error['message']) ? $error['message'] : null;
---
> 			return FALSE;
411a339
> 		$query = $query->result_object();
413,421c341,342
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * The error message number
< 	 *
< 	 * @access	private
< 	 * @return	integer
< 	 */
< 	function _error_number()
---
> 		$retval = array();
> 		for ($i = 0, $c = count($query); $i < $c; $i++)
423,424c344,351
< 		$error = array_shift(sqlsrv_errors());
< 		return isset($error['SQLSTATE']) ? $error['SQLSTATE'] : null;
---
> 			$retval[$i]			= new stdClass();
> 			$retval[$i]->name		= $query[$i]->COLUMN_NAME;
> 			$retval[$i]->type		= $query[$i]->DATA_TYPE;
> 			$retval[$i]->max_length		= ($query[$i]->CHARACTER_MAXIMUM_LENGTH > 0) ? $query[$i]->CHARACTER_MAXIMUM_LENGTH : $query[$i]->NUMERIC_PRECISION;
> 			$retval[$i]->default		= $query[$i]->COLUMN_DEFAULT;
> 		}
> 
> 		return $retval;
430c357
< 	 * Escape Table Name
---
> 	 * Error
432,433c359,360
< 	 * This function adds backticks if the table name has a period
< 	 * in it. Some DBs will get cranky unless periods are escaped
---
> 	 * Returns an array containing code and message of the last
> 	 * database error that has occured.
435,437c362
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	string
---
> 	 * @return	array
439c364,369
< 	function _escape_table($table)
---
> 	public function error()
> 	{
> 		$error = array('code' => '00000', 'message' => '');
> 		$sqlsrv_errors = sqlsrv_errors(SQLSRV_ERR_ERRORS);
> 
> 		if ( ! is_array($sqlsrv_errors))
441c371
< 		return $table;
---
> 			return $error;
443a374,382
> 		$sqlsrv_error = array_shift($sqlsrv_errors);
> 		if (isset($sqlsrv_error['SQLSTATE']))
> 		{
> 			$error['code'] = isset($sqlsrv_error['code']) ? $sqlsrv_error['SQLSTATE'].'/'.$sqlsrv_error['code'] : $sqlsrv_error['SQLSTATE'];
> 		}
> 		elseif (isset($sqlsrv_error['code']))
> 		{
> 			$error['code'] = $sqlsrv_error['code'];
> 		}
445,454c384
< 	/**
< 	 * Escape the SQL Identifiers
< 	 *
< 	 * This function escapes column and table names
< 	 *
< 	 * @access	private
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function _escape_identifiers($item)
---
> 		if (isset($sqlsrv_error['message']))
456c386,389
< 		return $item;
---
> 			$error['message'] = $sqlsrv_error['message'];
> 		}
> 
> 		return $error;
462c395
< 	 * From Tables
---
> 	 * Update statement
464,465c397
< 	 * This function implicitly groups FROM tables so there is no confusion
< 	 * about operator precedence in harmony with SQL standards
---
> 	 * Generates a platform-specific update string from the supplied data
467,469c399,401
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @param	string	$table
> 	 * @param	array	$values
> 	 * @return	string
471,473c403
< 	function _from_tables($tables)
< 	{
< 		if ( ! is_array($tables))
---
> 	protected function _update($table, $values)
475,478c405,407
< 			$tables = array($tables);
< 		}
< 
< 		return implode(', ', $tables);
---
> 		$this->qb_limit = FALSE;
> 		$this->qb_orderby = array();
> 		return parent::_update($table, $values);
484c413
< 	 * Insert statement
---
> 	 * Truncate statement
486c415
< 	 * Generates a platform-specific insert string from the supplied data
---
> 	 * Generates a platform-specific truncate string from the supplied data
488,491c417,420
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the insert keys
< 	 * @param	array	the insert values
---
> 	 * If the database does not support the TRUNCATE statement,
> 	 * then this method maps to 'DELETE FROM table'
> 	 *
> 	 * @param	string	$table
494c423
< 	function _insert($table, $keys, $values)
---
> 	protected function _truncate($table)
496c425
< 		return "INSERT INTO ".$this->_escape_table($table)." (".implode(', ', $keys).") VALUES (".implode(', ', $values).")";
---
> 		return 'TRUNCATE TABLE '.$table;
502c431
< 	 * Update statement
---
> 	 * Delete statement
504c433
< 	 * Generates a platform-specific update string from the supplied data
---
> 	 * Generates a platform-specific delete string from the supplied data
506,511c435
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the update data
< 	 * @param	array	the where clause
< 	 * @param	array	the orderby clause
< 	 * @param	array	the limit clause
---
> 	 * @param	string	$table
514c438
< 	function _update($table, $values, $where)
---
> 	protected function _delete($table)
516c440
< 		foreach($values as $key => $val)
---
> 		if ($this->qb_limit)
518c442
< 			$valstr[] = $key." = ".$val;
---
> 			return 'WITH ci_delete AS (SELECT TOP '.$this->qb_limit.' * FROM '.$table.$this->_compile_wh('qb_where').') DELETE FROM ci_delete';
521c445
< 		return "UPDATE ".$this->_escape_table($table)." SET ".implode(', ', $valstr)." WHERE ".implode(" ", $where);
---
> 		return parent::_delete($table);
527c451
< 	 * Truncate statement
---
> 	 * LIMIT
529,531c453
< 	 * Generates a platform-specific truncate string from the supplied data
< 	 * If the database does not support the truncate() command
< 	 * This function maps to "DELETE FROM table"
---
> 	 * Generates a platform-specific LIMIT clause
533,534c455
< 	 * @access	public
< 	 * @param	string	the table name
---
> 	 * @param	string	$sql	SQL Query
537c458,461
< 	function _truncate($table)
---
> 	protected function _limit($sql)
> 	{
> 		// As of SQL Server 2012 (11.0.*) OFFSET is supported
> 		if (version_compare($this->version(), '11', '>='))
539c463,466
< 		return "TRUNCATE TABLE ".$table;
---
> 			// SQL Server OFFSET-FETCH can be used only with the ORDER BY clause
> 			empty($this->qb_orderby) && $sql .= ' ORDER BY 1';
> 
> 			return $sql.' OFFSET '.(int) $this->qb_offset.' ROWS FETCH NEXT '.$this->qb_limit.' ROWS ONLY';
542c469
< 	// --------------------------------------------------------------------
---
> 		$limit = $this->qb_offset + $this->qb_limit;
544,555c471,490
< 	/**
< 	 * Delete statement
< 	 *
< 	 * Generates a platform-specific delete string from the supplied data
< 	 *
< 	 * @access	public
< 	 * @param	string	the table name
< 	 * @param	array	the where clause
< 	 * @param	string	the limit clause
< 	 * @return	string
< 	 */
< 	function _delete($table, $where)
---
> 		// An ORDER BY clause is required for ROW_NUMBER() to work
> 		if ($this->qb_offset && ! empty($this->qb_orderby))
> 		{
> 			$orderby = $this->_compile_order_by();
> 
> 			// We have to strip the ORDER BY clause
> 			$sql = trim(substr($sql, 0, strrpos($sql, $orderby)));
> 
> 			// Get the fields to select from our subquery, so that we can avoid CI_rownum appearing in the actual results
> 			if (count($this->qb_select) === 0)
> 			{
> 				$select = '*'; // Inevitable
> 			}
> 			else
> 			{
> 				// Use only field names and their aliases, everything else is out of our scope.
> 				$select = array();
> 				$field_regexp = ($this->_quoted_identifier)
> 					? '("[^\"]+")' : '(\[[^\]]+\])';
> 				for ($i = 0, $c = count($this->qb_select); $i < $c; $i++)
557c492,504
< 		return "DELETE FROM ".$this->_escape_table($table)." WHERE ".implode(" ", $where);
---
> 					$select[] = preg_match('/(?:\s|\.)'.$field_regexp.'$/i', $this->qb_select[$i], $m)
> 						? $m[1] : $this->qb_select[$i];
> 				}
> 				$select = implode(', ', $select);
> 			}
> 
> 			return 'SELECT '.$select." FROM (\n\n"
> 				.preg_replace('/^(SELECT( DISTINCT)?)/i', '\\1 ROW_NUMBER() OVER('.trim($orderby).') AS '.$this->escape_identifiers('CI_rownum').', ', $sql)
> 				."\n\n) ".$this->escape_identifiers('CI_subquery')
> 				."\nWHERE ".$this->escape_identifiers('CI_rownum').' BETWEEN '.($this->qb_offset + 1).' AND '.$limit;
> 		}
> 
> 		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$limit.' ', $sql);
563c510
< 	 * Limit string
---
> 	 * Insert batch statement
565c512
< 	 * Generates a platform-specific LIMIT clause
---
> 	 * Generates a platform-specific insert string from the supplied data.
567,571c514,517
< 	 * @access	public
< 	 * @param	string	the sql query string
< 	 * @param	integer	the number of rows to limit the query to
< 	 * @param	integer	the offset value
< 	 * @return	string
---
> 	 * @param	string	$table	Table name
> 	 * @param	array	$keys	INSERT keys
> 	 * @param	array	$values	INSERT values
> 	 * @return	string|bool
573c519,522
< 	function _limit($sql, $limit, $offset)
---
> 	protected function _insert_batch($table, $keys, $values)
> 	{
> 		// Multiple-value inserts are only supported as of SQL Server 2008
> 		if (version_compare($this->version(), '10', '>='))
575c524,525
< 		$i = $limit + $offset;
---
> 			return parent::_insert_batch($table, $keys, $values);
> 		}
577c527
< 		return preg_replace('/(^\SELECT (DISTINCT)?)/i','\\1 TOP '.$i.' ', $sql);		
---
> 		return ($this->db->db_debug) ? $this->db->display_error('db_unsupported_feature') : FALSE;
585,586d534
< 	 * @access	public
< 	 * @param	resource
589c537
< 	function _close($conn_id)
---
> 	protected function _close()
591c539
< 		@sqlsrv_close($conn_id);
---
> 		sqlsrv_close($this->conn_id);
595,599d542
< 
< 
< 
< /* End of file mssql_driver.php */
< /* Location: ./system/database/drivers/mssql/mssql_driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlsrv/sqlsrv_forge.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_forge.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.3
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * Create database
---
> 	 * CREATE TABLE IF statement
30,32c52
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
34,39c54
< 	function _create_database($name)
< 	{
< 		return "CREATE DATABASE ".$name;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_create_table_if	= "IF NOT EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nCREATE TABLE";
42c57
< 	 * Drop database
---
> 	 * DROP TABLE IF statement
44,46c59
< 	 * @access	private
< 	 * @param	string	the database name
< 	 * @return	bool
---
> 	 * @var	string
48,53c61
< 	function _drop_database($name)
< 	{
< 		return "DROP DATABASE ".$name;
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_drop_table_if	= "IF EXISTS (SELECT * FROM sysobjects WHERE ID = object_id(N'%s') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)\nDROP TABLE";
56c64
< 	 * Drop Table
---
> 	 * UNSIGNED support
58,59c66
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	array
61,65c68,73
< 	function _drop_table($table)
< 	{
< 		return "IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = '"
< 			.$table."')) DROP TABLE [dbo].[".$table."]";
< 	}
---
> 	protected $_unsigned		= array(
> 		'TINYINT'	=> 'SMALLINT',
> 		'SMALLINT'	=> 'INT',
> 		'INT'		=> 'BIGINT',
> 		'REAL'		=> 'FLOAT'
> 	);
70c78
< 	 * Create Table
---
> 	 * ALTER TABLE
72,78c80,83
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @param	array	the fields
< 	 * @param	mixed	primary key(s)
< 	 * @param	mixed	key(s)
< 	 * @param	boolean	should 'IF NOT EXISTS' be added to the SQL
< 	 * @return	bool
---
> 	 * @param	string	$alter_type	ALTER type
> 	 * @param	string	$table		Table name
> 	 * @param	mixed	$field		Column definition
> 	 * @return	string|string[]
80c85
< 	function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists)
---
> 	protected function _alter_table($alter_type, $table, $field)
82,83c87
< 		$sql = '';
< 		if ($if_not_exists === TRUE)
---
> 		if (in_array($alter_type, array('ADD', 'DROP'), TRUE))
85c89
< 			$sql = "IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = ";
---
> 			return parent::_alter_table($alter_type, $table, $field);
87,88d90
< 		$sql .= $this->db->_escape_identifiers($table).")) CREATE TABLE ".$this->db->_escape_identifiers($table)." (";
< 		$current_field_count = 0;
90,95c92,94
< 		foreach ($fields as $field=>$attributes)
< 		{
< 			// Numeric field names aren't allowed in databases, so if the key is
< 			// numeric, we know it was assigned by PHP and the developer manually
< 			// entered the field information, so we'll simply add it to the list
< 			if (is_numeric($field))
---
> 		$sql = 'ALTER TABLE '.$this->db->escape_identifiers($table).' ALTER COLUMN ';
> 		$sqls = array();
> 		for ($i = 0, $c = count($field); $i < $c; $i++)
97c96
< 				$sql .= "\n\t$attributes";
---
> 			$sqls[] = $sql.$this->_process_column($field[$i]);
99,103d97
< 			else
< 			{
< 				$attributes = array_change_key_case($attributes, CASE_UPPER);
< 
< 				$sql .= "\n\t".$this->db->_protect_identifiers($field);
105,169c99
< 				$sql .=  ' '.$attributes['TYPE'];
< 
< 				if (array_key_exists('CONSTRAINT', $attributes))
< 				{
< 					$sql .= '('.$attributes['CONSTRAINT'].')';
< 				}
< 
< 				if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE)
< 				{
< 					$sql .= ' UNSIGNED';
< 				}
< 
< 				if (array_key_exists('DEFAULT', $attributes))
< 				{
< 					$sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\'';
< 				}
< 
< 				if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE)
< 				{
< 					$sql .= ' NULL';
< 				}
< 				else
< 				{
< 					$sql .= ' NOT NULL';
< 				}
< 
< 				if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE)
< 				{
< 					$sql .= ' IDENTITY(1,1)';
< 				}
< 			}
< 
< 			// don't add a comma on the end of the last field
< 			if (++$current_field_count < count($fields))
< 			{
< 				$sql .= ',';
< 			}
< 		}
< 
< 		if (count($primary_keys) > 0)
< 		{
< 			$primary_keys = $this->db->_protect_identifiers($primary_keys);
< 			$sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")";
< 		}
< 
< 		if (is_array($keys) && count($keys) > 0)
< 		{
< 			foreach ($keys as $key)
< 			{
< 				if (is_array($key))
< 				{
< 					$key = $this->db->_protect_identifiers($key);
< 				}
< 				else
< 				{
< 					$key = array($this->db->_protect_identifiers($key));
< 				}
< 
< 				$sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")";
< 			}
< 		}
< 
< 		$sql .= "\n)";
< 
< 		return $sql;
---
> 		return $sqls;
175c105
< 	 * Alter table query
---
> 	 * Field attribute TYPE
177,178c107
< 	 * Generates a platform-specific query so that a table can be altered
< 	 * Called by add_column(), drop_column(), and column_alter(),
---
> 	 * Performs a data type mapping between different databases.
180,188c109,110
< 	 * @access	private
< 	 * @param	string	the ALTER type (ADD, DROP, CHANGE)
< 	 * @param	string	the column name
< 	 * @param	string	the table name
< 	 * @param	string	the column definition
< 	 * @param	string	the default value
< 	 * @param	boolean	should 'NOT NULL' be added
< 	 * @param	string	the field after which we should add the new field
< 	 * @return	object
---
> 	 * @param	array	&$attributes
> 	 * @return	void
190,211c112
< 	function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '')
< 	{
< 		$sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name);
< 
< 		// DROP has everything it needs now.
< 		if ($alter_type == 'DROP')
< 		{
< 			return $sql;
< 		}
< 
< 		$sql .= " $column_definition";
< 
< 		if ($default_value != '')
< 		{
< 			$sql .= " DEFAULT \"$default_value\"";
< 		}
< 
< 		if ($null === NULL)
< 		{
< 			$sql .= ' NULL';
< 		}
< 		else
---
> 	protected function _attr_type(&$attributes)
213,216c114
< 			$sql .= ' NOT NULL';
< 		}
< 
< 		if ($after_field != '')
---
> 		switch (strtoupper($attributes['TYPE']))
218c116,123
< 			$sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field);
---
> 			case 'MEDIUMINT':
> 				$attributes['TYPE'] = 'INTEGER';
> 				$attributes['UNSIGNED'] = FALSE;
> 				return;
> 			case 'INTEGER':
> 				$attributes['TYPE'] = 'INT';
> 				return;
> 			default: return;
220,222d124
< 
< 		return $sql;
< 
228c130
< 	 * Rename a table
---
> 	 * Field attribute AUTO_INCREMENT
230,235c132,134
< 	 * Generates a platform-specific query so that a table can be renamed
< 	 *
< 	 * @access	private
< 	 * @param	string	the old table name
< 	 * @param	string	the new table name
< 	 * @return	string
---
> 	 * @param	array	&$attributes
> 	 * @param	array	&$field
> 	 * @return	void
237c136,138
< 	function _rename_table($table_name, $new_table_name)
---
> 	protected function _attr_auto_increment(&$attributes, &$field)
> 	{
> 		if ( ! empty($attributes['AUTO_INCREMENT']) && $attributes['AUTO_INCREMENT'] === TRUE && stripos($field['type'], 'int') !== FALSE)
239c140
< 		return 'EXEC sp_rename '.$this->db->_protect_identifiers($table_name).", ".$this->db->_protect_identifiers($new_table_name);
---
> 			$field['auto_increment'] = ' IDENTITY(1,1)';
244,245c144
< /* End of file sqlsrv_forge.php */
< /* Location: ./system/database/drivers/sqlsrv/sqlsrv_forge.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlsrv/sqlsrv_result.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_result.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.3
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
29a52,75
> 	 * Scrollable flag
> 	 *
> 	 * @var	mixed
> 	 */
> 	public $scrollable;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	object	$driver_object
> 	 * @return	void
> 	 */
> 	public function __construct(&$driver_object)
> 	{
> 		parent::__construct($driver_object);
> 
> 		$this->scrollable = $driver_object->scrollable;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
32,33c78
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
35c80,83
< 	function num_rows()
---
> 	public function num_rows()
> 	{
> 		// sqlsrv_num_rows() doesn't work with the FORWARD and DYNAMIC cursors (FALSE is the same as FORWARD)
> 		if ( ! in_array($this->scrollable, array(FALSE, SQLSRV_CURSOR_FORWARD, SQLSRV_CURSOR_DYNAMIC), TRUE))
37c85,90
< 		return @sqlsrv_num_rows($this->result_id);
---
> 			return parent::num_rows();
> 		}
> 
> 		return is_int($this->num_rows)
> 			? $this->num_rows
> 			: $this->num_rows = sqlsrv_num_rows($this->result_id);
45,46c98
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
48c100
< 	function num_fields()
---
> 	public function num_fields()
60d111
< 	 * @access	public
63c114
< 	function list_fields()
---
> 	public function list_fields()
81d131
< 	 * @access	public
84c134
< 	function field_data()
---
> 	public function field_data()
87c137
< 		foreach(sqlsrv_field_metadata($this->result_id) as $offset => $field)
---
> 		foreach (sqlsrv_field_metadata($this->result_id) as $i => $field)
89,96c139,142
< 			$F 				= new stdClass();
< 			$F->name 		= $field['Name'];
< 			$F->type 		= $field['Type'];
< 			$F->max_length	= $field['Size'];
< 			$F->primary_key = 0;
< 			$F->default		= '';
< 			
< 			$retval[] = $F;
---
> 			$retval[$i]		= new stdClass();
> 			$retval[$i]->name	= $field['Name'];
> 			$retval[$i]->type	= $field['Type'];
> 			$retval[$i]->max_length	= $field['Size'];
107c153
< 	 * @return	null
---
> 	 * @return	void
109c155
< 	function free_result()
---
> 	public function free_result()
121,137d166
< 	 * Data Seek
< 	 *
< 	 * Moves the internal pointer to the desired offset.  We call
< 	 * this internally before fetching results to make sure the
< 	 * result set starts at zero
< 	 *
< 	 * @access	private
< 	 * @return	array
< 	 */
< 	function _data_seek($n = 0)
< 	{
< 		// Not implemented
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
142d170
< 	 * @access	private
145c173
< 	function _fetch_assoc()
---
> 	protected function _fetch_assoc()
157c185
< 	 * @access	private
---
> 	 * @param	string	$class_name
160c188
< 	function _fetch_object()
---
> 	protected function _fetch_object($class_name = 'stdClass')
162c190
< 		return sqlsrv_fetch_object($this->result_id);
---
> 		return sqlsrv_fetch_object($this->result_id, $class_name);
166,169d193
< 
< 
< /* End of file mssql_result.php */
< /* Location: ./system/database/drivers/mssql/mssql_result.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/drivers/sqlsrv/sqlsrv_utility.php opensourcepos/system/database/drivers/sqlsrv/sqlsrv_utility.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.3
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
22,23c44,45
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/database/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/database/
28c50
< 	 * List databases
---
> 	 * List databases statement
30,31c52
< 	 * @access	private
< 	 * @return	bool
---
> 	 * @var	string
33,38c54
< 	function _list_databases()
< 	{
< 		return "EXEC sp_helpdb"; // Can also be: EXEC sp_databases
< 	}
< 
< 	// --------------------------------------------------------------------
---
> 	protected $_list_databases	= 'EXEC sp_helpdb'; // Can also be: EXEC sp_databases
41c57
< 	 * Optimize table query
---
> 	 * OPTIMIZE TABLE statement
43,47c59
< 	 * Generates a platform-specific query so that a table can be optimized
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
---
> 	 * @var	string
49,52c61
< 	function _optimize_table($table)
< 	{
< 		return FALSE; // Is this supported in MS SQL?
< 	}
---
> 	protected $_optimize_table	= 'ALTER INDEX all ON %s REORGANIZE';
57c66
< 	 * Repair table query
---
> 	 * Export
59,77c68,69
< 	 * Generates a platform-specific query so that a table can be repaired
< 	 *
< 	 * @access	private
< 	 * @param	string	the table name
< 	 * @return	object
< 	 */
< 	function _repair_table($table)
< 	{
< 		return FALSE; // Is this supported in MS SQL?
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * MSSQL Export
< 	 *
< 	 * @access	private
< 	 * @param	array	Preferences
< 	 * @return	mixed
---
> 	 * @param	array	$params	Preferences
> 	 * @return	bool
79c71
< 	function _backup($params = array())
---
> 	protected function _backup($params = array())
82c74
< 		return $this->db->display_error('db_unsuported_feature');
---
> 		return $this->db->display_error('db_unsupported_feature');
86,88d77
< 
< /* End of file mssql_utility.php */
< /* Location: ./system/database/drivers/mssql/mssql_utility.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/database/index.html opensourcepos/system/database/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/fonts/index.html opensourcepos/system/fonts/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/array_helper.php opensourcepos/system/helpers/array_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/array_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/array_helper.html
29a52,53
> if ( ! function_exists('element'))
> {
34c58
<  * If the element is empty it returns FALSE (or whatever you specify as the default value.)
---
> 	 * If the element is empty it returns NULL (or whatever you specify as the default value.)
36d59
<  * @access	public
42c65
< if ( ! function_exists('element'))
---
> 	function element($item, array $array, $default = NULL)
44,51c67
< 	function element($item, $array, $default = FALSE)
< 	{
< 		if ( ! isset($array[$item]) OR $array[$item] == "")
< 		{
< 			return $default;
< 		}
< 
< 		return $array[$item];
---
> 		return array_key_exists($item, $array) ? $array[$item] : $default;
56a73,74
> if ( ! function_exists('random_element'))
> {
60d77
<  * @access	public
64,65d80
< if ( ! function_exists('random_element'))
< {
68,73c83
< 		if ( ! is_array($array))
< 		{
< 			return $array;
< 		}
< 
< 		return $array[array_rand($array)];
---
> 		return is_array($array) ? $array[array_rand($array)] : $array;
78a89,90
> if ( ! function_exists('elements'))
> {
85d96
<  * @access	public
91,93c102
< if ( ! function_exists('elements'))
< {
< 	function elements($items, $array, $default = FALSE)
---
> 	function elements($items, array $array, $default = NULL)
97,100c106
< 		if ( ! is_array($items))
< 		{
< 			$items = array($items);
< 		}
---
> 		is_array($items) OR $items = array($items);
104,111c110
< 			if (isset($array[$item]))
< 			{
< 				$return[$item] = $array[$item];
< 			}
< 			else
< 			{
< 				$return[$item] = $default;
< 			}
---
> 			$return[$item] = array_key_exists($item, $array) ? $array[$item] : $default;
117,119d115
< 
< /* End of file array_helper.php */
< /* Location: ./system/helpers/array_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/captcha_helper.php opensourcepos/system/helpers/captcha_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/xml_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/captcha_helper.html
29a52,53
> if ( ! function_exists('create_captcha'))
> {
33,37c57,60
<  * @access	public
<  * @param	array	array of data for the CAPTCHA
<  * @param	string	path to create the image in
<  * @param	string	URL to the CAPTCHA image folder
<  * @param	string	server path to font
---
> 	 * @param	array	$data		data for the CAPTCHA
> 	 * @param	string	$img_path	path to create the image in
> 	 * @param	string	$img_url	URL to the CAPTCHA image folder
> 	 * @param	string	$font_path	server path to font
40,41d62
< if ( ! function_exists('create_captcha'))
< {
44c65,83
< 		$defaults = array('word' => '', 'img_path' => '', 'img_url' => '', 'img_width' => '150', 'img_height' => '30', 'font_path' => '', 'expiration' => 7200);
---
> 		$defaults = array(
> 			'word'		=> '',
> 			'img_path'	=> '',
> 			'img_url'	=> '',
> 			'img_width'	=> '150',
> 			'img_height'	=> '30',
> 			'font_path'	=> '',
> 			'expiration'	=> 7200,
> 			'word_length'	=> 8,
> 			'font_size'	=> 16,
> 			'img_id'	=> '',
> 			'pool'		=> '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
> 			'colors'	=> array(
> 				'background'	=> array(255,255,255),
> 				'border'	=> array(153,102,102),
> 				'text'		=> array(204,153,153),
> 				'grid'		=> array(255,182,182)
> 			)
> 		);
48,50c87
< 			if ( ! is_array($data))
< 			{
< 				if ( ! isset($$key) OR $$key == '')
---
> 			if ( ! is_array($data) && empty($$key))
54d90
< 			}
57c93
< 				$$key = ( ! isset($data[$key])) ? $val : $data[$key];
---
> 				$$key = isset($data[$key]) ? $data[$key] : $val;
61,76c97,99
< 		if ($img_path == '' OR $img_url == '')
< 		{
< 			return FALSE;
< 		}
< 
< 		if ( ! @is_dir($img_path))
< 		{
< 			return FALSE;
< 		}
< 
< 		if ( ! is_writable($img_path))
< 		{
< 			return FALSE;
< 		}
< 
< 		if ( ! extension_loaded('gd'))
---
> 		if ($img_path === '' OR $img_url === ''
> 			OR ! is_dir($img_path) OR ! is_really_writable($img_path)
> 			OR ! extension_loaded('gd'))
85,86c108
< 		list($usec, $sec) = explode(" ", microtime());
< 		$now = ((float)$usec + (float)$sec);
---
> 		$now = microtime(TRUE);
92,96c113
< 			if ($filename != "." and $filename != ".." and $filename != "index.html")
< 			{
< 				$name = str_replace(".jpg", "", $filename);
< 
< 				if (($name + $expiration) < $now)
---
> 			if (substr($filename, -4) === '.jpg' && (str_replace('.jpg', '', $filename) + $expiration) < $now)
101d117
< 		}
109c125
< 	   if ($word == '')
---
> 		if (empty($word))
111c127,129
< 			$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
---
> 			$word = '';
> 			$pool_length = strlen($pool);
> 			$rand_max = $pool_length - 1;
113,114c131,132
< 			$str = '';
< 			for ($i = 0; $i < 8; $i++)
---
> 			// PHP7 or a suitable polyfill
> 			if (function_exists('random_int'))
116c134,147
< 				$str .= substr($pool, mt_rand(0, strlen($pool) -1), 1);
---
> 				try
> 				{
> 					for ($i = 0; $i < $word_length; $i++)
> 					{
> 						$word .= $pool[random_int(0, $rand_max)];
> 					}
> 				}
> 				catch (Exception $e)
> 				{
> 					// This means fallback to the next possible
> 					// alternative to random_int()
> 					$word = '';
> 				}
> 			}
119c150,160
< 			$word = $str;
---
> 		if (empty($word))
> 		{
> 			// Nobody will have a larger character pool than
> 			// 256 characters, but let's handle it just in case ...
> 			//
> 			// No, I do not care that the fallback to mt_rand() can
> 			// handle it; if you trigger this, you're very obviously
> 			// trying to break it. -- Narf
> 			if ($pool_length > 256)
> 			{
> 				return FALSE;
122,124c163,165
< 		// -----------------------------------
< 		// Determine angle and position
< 		// -----------------------------------
---
> 			// We'll try using the operating system's PRNG first,
> 			// which we can access through CI_Security::get_random_bytes()
> 			$security = get_instance()->security;
126,129c167,187
< 		$length	= strlen($word);
< 		$angle	= ($length >= 6) ? rand(-($length-6), ($length-6)) : 0;
< 		$x_axis	= rand(6, (360/$length)-16);
< 		$y_axis = ($angle >= 0 ) ? rand($img_height, $img_width) : rand(6, $img_height);
---
> 			// To avoid numerous get_random_bytes() calls, we'll
> 			// just try fetching as much bytes as we need at once.
> 			if (($bytes = $security->get_random_bytes($pool_length)) !== FALSE)
> 			{
> 				$byte_index = $word_index = 0;
> 				while ($word_index < $word_length)
> 				{
> 					// Do we have more random data to use?
> 					// It could be exhausted by previous iterations
> 					// ignoring bytes higher than $rand_max.
> 					if ($byte_index === $pool_length)
> 					{
> 						// No failures should be possible if the
> 						// first get_random_bytes() call didn't
> 						// return FALSE, but still ...
> 						for ($i = 0; $i < 5; $i++)
> 						{
> 							if (($bytes = $security->get_random_bytes($pool_length)) === FALSE)
> 							{
> 								continue;
> 							}
131,133c189,191
< 		// -----------------------------------
< 		// Create image
< 		// -----------------------------------
---
> 							$byte_index = 0;
> 							break;
> 						}
135,136c193
< 		// PHP.net recommends imagecreatetruecolor(), but it isn't always available
< 		if (function_exists('imagecreatetruecolor'))
---
> 						if ($bytes === FALSE)
138c195,197
< 			$im = imagecreatetruecolor($img_width, $img_height);
---
> 							// Sadly, this means fallback to mt_rand()
> 							$word = '';
> 							break;
140c199,202
< 		else
---
> 					}
> 
> 					list(, $rand_index) = unpack('C', $bytes[$byte_index++]);
> 					if ($rand_index > $rand_max)
142c204,222
< 			$im = imagecreate($img_width, $img_height);
---
> 						continue;
> 					}
> 
> 					$word .= $pool[$rand_index];
> 					$word_index++;
> 				}
> 			}
> 		}
> 
> 		if (empty($word))
> 		{
> 			for ($i = 0; $i < $word_length; $i++)
> 			{
> 				$word .= $pool[mt_rand(0, $rand_max)];
> 			}
> 		}
> 		elseif ( ! is_string($word))
> 		{
> 			$word = (string) $word;
146c226
< 		//  Assign colors
---
> 		// Determine angle and position
147a228,231
> 		$length	= strlen($word);
> 		$angle	= ($length >= 6) ? mt_rand(-($length-6), ($length-6)) : 0;
> 		$x_axis	= mt_rand(6, (360/$length)-16);
> 		$y_axis = ($angle >= 0) ? mt_rand($img_height, $img_width) : mt_rand(6, $img_height);
149,153c233,237
< 		$bg_color		= imagecolorallocate ($im, 255, 255, 255);
< 		$border_color	= imagecolorallocate ($im, 153, 102, 102);
< 		$text_color		= imagecolorallocate ($im, 204, 153, 153);
< 		$grid_color		= imagecolorallocate($im, 255, 182, 182);
< 		$shadow_color	= imagecolorallocate($im, 255, 240, 240);
---
> 		// Create image
> 		// PHP.net recommends imagecreatetruecolor(), but it isn't always available
> 		$im = function_exists('imagecreatetruecolor')
> 			? imagecreatetruecolor($img_width, $img_height)
> 			: imagecreate($img_width, $img_height);
156,157c240,243
< 		//  Create the rectangle
< 		// -----------------------------------
---
> 		//  Assign colors
> 		// ----------------------------------
> 
> 		is_array($colors) OR $colors = $defaults['colors'];
159c245,253
< 		ImageFilledRectangle($im, 0, 0, $img_width, $img_height, $bg_color);
---
> 		foreach (array_keys($defaults['colors']) as $key)
> 		{
> 			// Check for a possible missing value
> 			is_array($colors[$key]) OR $colors[$key] = $defaults['colors'][$key];
> 			$colors[$key] = imagecolorallocate($im, $colors[$key][0], $colors[$key][1], $colors[$key][2]);
> 		}
> 
> 		// Create the rectangle
> 		ImageFilledRectangle($im, 0, 0, $img_width, $img_height, $colors['background']);
171c264
< 		for ($i = 0; $i < ($circles * $points) - 1; $i++)
---
> 		for ($i = 0, $cp = ($circles * $points) - 1; $i < $cp; $i++)
173c266
< 			$theta = $theta + $thetac;
---
> 			$theta += $thetac;
177c270
< 			$theta = $theta + $thetac;
---
> 			$theta += $thetac;
181,182c274,275
< 			imageline($im, $x, $y, $x1, $y1, $grid_color);
< 			$theta = $theta - $thetac;
---
> 			imageline($im, $x, $y, $x1, $y1, $colors['grid']);
> 			$theta -= $thetac;
189,191c282,283
< 		$use_font = ($font_path != '' AND file_exists($font_path) AND function_exists('imagettftext')) ? TRUE : FALSE;
< 
< 		if ($use_font == FALSE)
---
> 		$use_font = ($font_path !== '' && file_exists($font_path) && function_exists('imagettftext'));
> 		if ($use_font === FALSE)
193,194c285,286
< 			$font_size = 5;
< 			$x = rand(0, $img_width/($length/3));
---
> 			($font_size > 5) && $font_size = 5;
> 			$x = mt_rand(0, $img_width / ($length / 3));
199,200c291,292
< 			$font_size	= 16;
< 			$x = rand(0, $img_width/($length/1.5));
---
> 			($font_size > 30) && $font_size = 30;
> 			$x = mt_rand(0, $img_width / ($length / 1.5));
204c296
< 		for ($i = 0; $i < strlen($word); $i++)
---
> 		for ($i = 0; $i < $length; $i++)
206c298
< 			if ($use_font == FALSE)
---
> 			if ($use_font === FALSE)
208,209c300,301
< 				$y = rand(0 , $img_height/2);
< 				imagestring($im, $font_size, $x, $y, substr($word, $i, 1), $text_color);
---
> 				$y = mt_rand(0 , $img_height / 2);
> 				imagestring($im, $font_size, $x, $y, $word[$i], $colors['text']);
214,215c306,307
< 				$y = rand($img_height/2, $img_height-3);
< 				imagettftext($im, $font_size, $angle, $x, $y, $text_color, $font_path, substr($word, $i, 1));
---
> 				$y = mt_rand($img_height / 2, $img_height - 3);
> 				imagettftext($im, $font_size, $angle, $x, $y, $colors['text'], $font_path, $word[$i]);
220,221d311
< 
< 		// -----------------------------------
223,225c313
< 		// -----------------------------------
< 
< 		imagerectangle($im, 0, 0, $img_width-1, $img_height-1, $border_color);
---
> 		imagerectangle($im, 0, 0, $img_width - 1, $img_height - 1, $colors['border']);
229a318
> 		$img_url = rtrim($img_url, '/').'/';
231,235c320,333
< 		$img_name = $now.'.jpg';
< 
< 		ImageJPEG($im, $img_path.$img_name);
< 
< 		$img = "<img src=\"$img_url$img_name\" width=\"$img_width\" height=\"$img_height\" style=\"border:0;\" alt=\" \" />";
---
> 		if (function_exists('imagejpeg'))
> 		{
> 			$img_filename = $now.'.jpg';
> 			imagejpeg($im, $img_path.$img_filename);
> 		}
> 		elseif (function_exists('imagepng'))
> 		{
> 			$img_filename = $now.'.png';
> 			imagepng($im, $img_path.$img_filename);
> 		}
> 		else
> 		{
> 			return FALSE;
> 		}
236a335
> 		$img = '<img '.($img_id === '' ? '' : 'id="'.$img_id.'"').' src="'.$img_url.$img_filename.'" style="width: '.$img_width.'; height: '.$img_height .'; border: 0;" alt=" " />';
239c338
< 		return array('word' => $word, 'time' => $now, 'image' => $img);
---
> 		return array('word' => $word, 'time' => $now, 'image' => $img, 'filename' => $img_filename);
242,246d340
< 
< // ------------------------------------------------------------------------
< 
< /* End of file captcha_helper.php */
< /* Location: ./system/heleprs/captcha_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/cookie_helper.php opensourcepos/system/helpers/cookie_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/cookie_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/cookie_helper.html
29a52,53
> if ( ! function_exists('set_cookie'))
> {
33c57
<  * Accepts six parameter, or you can submit an associative
---
> 	 * Accepts seven parameters, or you can submit an associative
36d59
<  * @access	public
42a66,67
> 	 * @param	bool	true makes the cookie secure
> 	 * @param	bool	true makes the cookie accessible via http(s) only (no javascript)
45,47c70
< if ( ! function_exists('set_cookie'))
< {
< 	function set_cookie($name = '', $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE)
---
> 	function set_cookie($name, $value = '', $expire = '', $domain = '', $path = '/', $prefix = '', $secure = FALSE, $httponly = FALSE)
50,51c73
< 		$CI =& get_instance();
< 		$CI->input->set_cookie($name, $value, $expire, $domain, $path, $prefix, $secure);
---
> 		get_instance()->input->set_cookie($name, $value, $expire, $domain, $path, $prefix, $secure, $httponly);
56a79,80
> if ( ! function_exists('get_cookie'))
> {
60d83
<  * @access	public
65c88
< if ( ! function_exists('get_cookie'))
---
> 	function get_cookie($index, $xss_clean = NULL)
67,78c90,92
< 	function get_cookie($index = '', $xss_clean = FALSE)
< 	{
< 		$CI =& get_instance();
< 
< 		$prefix = '';
< 
< 		if ( ! isset($_COOKIE[$index]) && config_item('cookie_prefix') != '')
< 		{
< 			$prefix = config_item('cookie_prefix');
< 		}
< 
< 		return $CI->input->cookie($prefix.$index, $xss_clean);
---
> 		is_bool($xss_clean) OR $xss_clean = (config_item('global_xss_filtering') === TRUE);
> 		$prefix = isset($_COOKIE[$index]) ? '' : config_item('cookie_prefix');
> 		return get_instance()->input->cookie($prefix.$index, $xss_clean);
83a98,99
> if ( ! function_exists('delete_cookie'))
> {
93,95c109
< if ( ! function_exists('delete_cookie'))
< {
< 	function delete_cookie($name = '', $domain = '', $path = '/', $prefix = '')
---
> 	function delete_cookie($name, $domain = '', $path = '/', $prefix = '')
100,103d113
< 
< 
< /* End of file cookie_helper.php */
< /* Location: ./system/helpers/cookie_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/date_helper.php opensourcepos/system/helpers/date_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/date_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/date_helper.html
29a52,53
> if ( ! function_exists('now'))
> {
33c57,58
<  * Returns time() or its GMT equivalent based on the config file preference
---
> 	 * Returns time() based on the timezone parameter or on the
> 	 * "time_reference" setting
35,36c60,61
<  * @access	public
<  * @return	integer
---
> 	 * @param	string
> 	 * @return	int
38,44c63
< if ( ! function_exists('now'))
< {
< 	function now()
< 	{
< 		$CI =& get_instance();
< 
< 		if (strtolower($CI->config->item('time_reference')) == 'gmt')
---
> 	function now($timezone = NULL)
46,49c65
< 			$now = time();
< 			$system_time = mktime(gmdate("H", $now), gmdate("i", $now), gmdate("s", $now), gmdate("m", $now), gmdate("d", $now), gmdate("Y", $now));
< 
< 			if (strlen($system_time) < 10)
---
> 		if (empty($timezone))
51,52c67
< 				$system_time = time();
< 				log_message('error', 'The Date class could not set a proper GMT timestamp so the local time() value was used.');
---
> 			$timezone = config_item('time_reference');
55,57c70
< 			return $system_time;
< 		}
< 		else
---
> 		if ($timezone === 'local' OR $timezone === date_default_timezone_get())
60a74,78
> 
> 		$datetime = new DateTime('now', new DateTimeZone($timezone));
> 		sscanf($datetime->format('j-n-Y G:i:s'), '%d-%d-%d %d:%d:%d', $day, $month, $year, $hour, $minute, $second);
> 
> 		return mktime($hour, $minute, $second, $month, $day, $year);
65a84,85
> if ( ! function_exists('mdate'))
> {
78d97
<  * @access	public
80,81c99,100
<  * @param	integer
<  * @return	integer
---
> 	 * @param	int
> 	 * @return	int
83,84d101
< if ( ! function_exists('mdate'))
< {
87c104,105
< 		if ($datestr == '')
---
> 		if ($datestr === '')
> 		{
89,90c107,109
< 
< 		if ($time == '')
---
> 		}
> 		elseif (empty($time))
> 		{
91a111,117
> 		}
> 
> 		$datestr = str_replace(
> 			'%\\',
> 			'',
> 			preg_replace('/([a-z]+?){1}/i', '\\\\\\1', $datestr)
> 		);
93d118
< 		$datestr = str_replace('%\\', '', preg_replace("/([a-z]+?){1}/i", "\\\\\\1", $datestr));
99a125,126
> if ( ! function_exists('standard_date'))
> {
105,107c132,143
<  * @access	public
<  * @param	string	the chosen format
<  * @param	integer	Unix timestamp
---
> 	 * As of PHP 5.2, the DateTime extension provides constants that
> 	 * serve for the exact same purpose and are used with date().
> 	 *
> 	 * @todo	Remove in version 3.1+.
> 	 * @deprecated	3.0.0	Use PHP's native date() instead.
> 	 * @link	http://www.php.net/manual/en/class.datetime.php#datetime.constants.types
> 	 *
> 	 * @example	date(DATE_RFC822, now()); // default
> 	 * @example	date(DATE_W3C, $time); // a different format and time
> 	 *
> 	 * @param	string	$fmt = 'DATE_RFC822'	the chosen format
> 	 * @param	int	$time = NULL		Unix timestamp
110c146
< if ( ! function_exists('standard_date'))
---
> 	function standard_date($fmt = 'DATE_RFC822', $time = NULL)
112c148
< 	function standard_date($fmt = 'DATE_RFC822', $time = '')
---
> 		if (empty($time))
114,124c150,151
< 		$formats = array(
< 						'DATE_ATOM'		=>	'%Y-%m-%dT%H:%i:%s%Q',
< 						'DATE_COOKIE'	=>	'%l, %d-%M-%y %H:%i:%s UTC',
< 						'DATE_ISO8601'	=>	'%Y-%m-%dT%H:%i:%s%Q',
< 						'DATE_RFC822'	=>	'%D, %d %M %y %H:%i:%s %O',
< 						'DATE_RFC850'	=>	'%l, %d-%M-%y %H:%i:%s UTC',
< 						'DATE_RFC1036'	=>	'%D, %d %M %y %H:%i:%s %O',
< 						'DATE_RFC1123'	=>	'%D, %d %M %Y %H:%i:%s %O',
< 						'DATE_RSS'		=>	'%D, %d %M %Y %H:%i:%s %O',
< 						'DATE_W3C'		=>	'%Y-%m-%dT%H:%i:%s%Q'
< 						);
---
> 			$time = now();
> 		}
126c153,154
< 		if ( ! isset($formats[$fmt]))
---
> 		// Procedural style pre-defined constants from the DateTime extension
> 		if (strpos($fmt, 'DATE_') !== 0 OR defined($fmt) === FALSE)
131c159
< 		return mdate($formats[$fmt], $time);
---
> 		return date(constant($fmt), $time);
136a165,166
> if ( ! function_exists('timespan'))
> {
143,146c173,176
<  * @access	public
<  * @param	integer	a number of seconds
<  * @param	integer	Unix timestamp
<  * @return	integer
---
> 	 * @param	int	a number of seconds
> 	 * @param	int	Unix timestamp
> 	 * @param	int	a number of display units
> 	 * @return	string
148,150c178
< if ( ! function_exists('timespan'))
< {
< 	function timespan($seconds = 1, $time = '')
---
> 	function timespan($seconds = 1, $time = '', $units = 7)
155,158c183,185
< 		if ( ! is_numeric($seconds))
< 		{
< 			$seconds = 1;
< 		}
---
> 		is_numeric($seconds) OR $seconds = 1;
> 		is_numeric($time) OR $time = time();
> 		is_numeric($units) OR $units = 7;
160,163c187
< 		if ( ! is_numeric($time))
< 		{
< 			$time = time();
< 		}
---
> 		$seconds = ($time <= $seconds) ? 1 : $time - $seconds;
165,175c189,190
< 		if ($time <= $seconds)
< 		{
< 			$seconds = 1;
< 		}
< 		else
< 		{
< 			$seconds = $time - $seconds;
< 		}
< 
< 		$str = '';
< 		$years = floor($seconds / 31536000);
---
> 		$str = array();
> 		$years = floor($seconds / 31557600);
179c194
< 			$str .= $years.' '.$CI->lang->line((($years	> 1) ? 'date_years' : 'date_year')).', ';
---
> 			$str[] = $years.' '.$CI->lang->line($years > 1 ? 'date_years' : 'date_year');
182,183c197,198
< 		$seconds -= $years * 31536000;
< 		$months = floor($seconds / 2628000);
---
> 		$seconds -= $years * 31557600;
> 		$months = floor($seconds / 2629743);
185c200
< 		if ($years > 0 OR $months > 0)
---
> 		if (count($str) < $units && ($years > 0 OR $months > 0))
189c204
< 				$str .= $months.' '.$CI->lang->line((($months	> 1) ? 'date_months' : 'date_month')).', ';
---
> 				$str[] = $months.' '.$CI->lang->line($months > 1 ? 'date_months' : 'date_month');
192c207
< 			$seconds -= $months * 2628000;
---
> 			$seconds -= $months * 2629743;
197c212
< 		if ($years > 0 OR $months > 0 OR $weeks > 0)
---
> 		if (count($str) < $units && ($years > 0 OR $months > 0 OR $weeks > 0))
201c216
< 				$str .= $weeks.' '.$CI->lang->line((($weeks	> 1) ? 'date_weeks' : 'date_week')).', ';
---
> 				$str[] = $weeks.' '.$CI->lang->line($weeks > 1 ? 'date_weeks' : 'date_week');
209c224
< 		if ($months > 0 OR $weeks > 0 OR $days > 0)
---
> 		if (count($str) < $units && ($months > 0 OR $weeks > 0 OR $days > 0))
213c228
< 				$str .= $days.' '.$CI->lang->line((($days	> 1) ? 'date_days' : 'date_day')).', ';
---
> 				$str[] = $days.' '.$CI->lang->line($days > 1 ? 'date_days' : 'date_day');
221c236
< 		if ($days > 0 OR $hours > 0)
---
> 		if (count($str) < $units && ($days > 0 OR $hours > 0))
225c240
< 				$str .= $hours.' '.$CI->lang->line((($hours	> 1) ? 'date_hours' : 'date_hour')).', ';
---
> 				$str[] = $hours.' '.$CI->lang->line($hours > 1 ? 'date_hours' : 'date_hour');
233c248
< 		if ($days > 0 OR $hours > 0 OR $minutes > 0)
---
> 		if (count($str) < $units && ($days > 0 OR $hours > 0 OR $minutes > 0))
237c252
< 				$str .= $minutes.' '.$CI->lang->line((($minutes	> 1) ? 'date_minutes' : 'date_minute')).', ';
---
> 				$str[] = $minutes.' '.$CI->lang->line($minutes > 1 ? 'date_minutes' : 'date_minute');
243c258
< 		if ($str == '')
---
> 		if (count($str) === 0)
245c260
< 			$str .= $seconds.' '.$CI->lang->line((($seconds	> 1) ? 'date_seconds' : 'date_second')).', ';
---
> 			$str[] = $seconds.' '.$CI->lang->line($seconds > 1 ? 'date_seconds' : 'date_second');
248c263
< 		return substr(trim($str), 0, -1);
---
> 		return implode(', ', $str);
253a269,270
> if ( ! function_exists('days_in_month'))
> {
260,263c277,279
<  * @access	public
<  * @param	integer a numeric month
<  * @param	integer	a numeric year
<  * @return	integer
---
> 	 * @param	int	a numeric month
> 	 * @param	int	a numeric year
> 	 * @return	int
265,266d280
< if ( ! function_exists('days_in_month'))
< {
273,274c287
< 
< 		if ( ! is_numeric($year) OR strlen($year) != 4)
---
> 		elseif ( ! is_numeric($year) OR strlen($year) !== 4)
278a292,301
> 		if (defined('CAL_GREGORIAN'))
> 		{
> 			return cal_days_in_month(CAL_GREGORIAN, $month, $year);
> 		}
> 
> 		if ($year >= 1970)
> 		{
> 			return (int) date('t', mktime(12, 0, 0, $month, 1, $year));
> 		}
> 
281c304
< 			if ($year % 400 == 0 OR ($year % 4 == 0 AND $year % 100 != 0))
---
> 			if ($year % 400 === 0 OR ($year % 4 === 0 && $year % 100 !== 0))
293a317,318
> if ( ! function_exists('local_to_gmt'))
> {
297,299c322,323
<  * @access	public
<  * @param	integer Unix timestamp
<  * @return	integer
---
> 	 * @param	int	Unix timestamp
> 	 * @return	int
301,302d324
< if ( ! function_exists('local_to_gmt'))
< {
305c327,328
< 		if ($time == '')
---
> 		if ($time === '')
> 		{
306a330
> 		}
308c332,339
< 		return mktime( gmdate("H", $time), gmdate("i", $time), gmdate("s", $time), gmdate("m", $time), gmdate("d", $time), gmdate("Y", $time));
---
> 		return mktime(
> 			gmdate('G', $time),
> 			gmdate('i', $time),
> 			gmdate('s', $time),
> 			gmdate('n', $time),
> 			gmdate('j', $time),
> 			gmdate('Y', $time)
> 		);
313a345,346
> if ( ! function_exists('gmt_to_local'))
> {
321,322c354
<  * @access	public
<  * @param	integer Unix timestamp
---
> 	 * @param	int	Unix timestamp
325c357
<  * @return	integer
---
> 	 * @return	int
327,328d358
< if ( ! function_exists('gmt_to_local'))
< {
331c361
< 		if ($time == '')
---
> 		if ($time === '')
338,343c368
< 		if ($dst == TRUE)
< 		{
< 			$time += 3600;
< 		}
< 
< 		return $time;
---
> 		return ($dst === TRUE) ? $time + 3600 : $time;
348a374,375
> if ( ! function_exists('mysql_to_unix'))
> {
352,354c379,380
<  * @access	public
<  * @param	integer Unix timestamp
<  * @return	integer
---
> 	 * @param	int	MySQL timestamp YYYY-MM-DD HH:MM:SS
> 	 * @return	int	Unix timstamp
356,357d381
< if ( ! function_exists('mysql_to_unix'))
< {
364,366c388
< 		$time = str_replace('-', '', $time);
< 		$time = str_replace(':', '', $time);
< 		$time = str_replace(' ', '', $time);
---
> 		$time = str_replace(array('-', ':', ' '), '', $time);
381a404,405
> if ( ! function_exists('unix_to_human'))
> {
387,388c411
<  * @access	public
<  * @param	integer Unix timestamp
---
> 	 * @param	int	Unix timestamp
393,394d415
< if ( ! function_exists('unix_to_human'))
< {
399c420
< 		if ($fmt == 'us')
---
> 		if ($fmt === 'us')
413c434
< 		if ($fmt == 'us')
---
> 		if ($fmt === 'us')
415c436
< 			$r .= ' '.date('A', $time);
---
> 			return $r.' '.date('A', $time);
423a445,446
> if ( ! function_exists('human_to_unix'))
> {
429d451
<  * @access	public
431c453
<  * @return	integer
---
> 	 * @return	int
433,434d454
< if ( ! function_exists('human_to_unix'))
< {
437c457
< 		if ($datestr == '')
---
> 		if ($datestr === '')
442,443c462
< 		$datestr = trim($datestr);
< 		$datestr = preg_replace("/\040+/", ' ', $datestr);
---
> 		$datestr = preg_replace('/\040+/', ' ', trim($datestr));
445c464
< 		if ( ! preg_match('/^[0-9]{2,4}\-[0-9]{1,2}\-[0-9]{1,2}\s[0-9]{1,2}:[0-9]{1,2}(?::[0-9]{1,2})?(?:\s[AP]M)?$/i', $datestr))
---
> 		if ( ! preg_match('/^(\d{2}|\d{4})\-[0-9]{1,2}\-[0-9]{1,2}\s[0-9]{1,2}:[0-9]{1,2}(?::[0-9]{1,2})?(?:\s[AP]M)?$/i', $datestr))
450c469,471
< 		$split = explode(' ', $datestr);
---
> 		sscanf($datestr, '%d-%d-%d %s %s', $year, $month, $day, $time, $ampm);
> 		sscanf($time, '%d:%d:%d', $hour, $min, $sec);
> 		isset($sec) OR $sec = 0;
452c473,485
< 		$ex = explode("-", $split['0']);
---
> 		if (isset($ampm))
> 		{
> 			$ampm = strtolower($ampm);
> 
> 			if ($ampm[0] === 'p' && $hour < 12)
> 			{
> 				$hour += 12;
> 			}
> 			elseif ($ampm[0] === 'a' && $hour === 12)
> 			{
> 				$hour = 0;
> 			}
> 		}
454,456c487,489
< 		$year  = (strlen($ex['0']) == 2) ? '20'.$ex['0'] : $ex['0'];
< 		$month = (strlen($ex['1']) == 1) ? '0'.$ex['1']  : $ex['1'];
< 		$day   = (strlen($ex['2']) == 1) ? '0'.$ex['2']  : $ex['2'];
---
> 		return mktime($hour, $min, $sec, $month, $day, $year);
> 	}
> }
458c491
< 		$ex = explode(":", $split['1']);
---
> // ------------------------------------------------------------------------
460,461c493,512
< 		$hour = (strlen($ex['0']) == 1) ? '0'.$ex['0'] : $ex['0'];
< 		$min  = (strlen($ex['1']) == 1) ? '0'.$ex['1'] : $ex['1'];
---
> if ( ! function_exists('nice_date'))
> {
> 	/**
> 	 * Turns many "reasonably-date-like" strings into something
> 	 * that is actually useful. This only works for dates after unix epoch.
> 	 *
> 	 * @param	string	The terribly formatted date-like string
> 	 * @param	string	Date format to return (same as php date function)
> 	 * @return	string
> 	 */
> 	function nice_date($bad_date = '', $format = FALSE)
> 	{
> 		if (empty($bad_date))
> 		{
> 			return 'Unknown';
> 		}
> 		elseif (empty($format))
> 		{
> 			$format = 'U';
> 		}
463c514,515
< 		if (isset($ex['2']) && preg_match('/[0-9]{1,2}/', $ex['2']))
---
> 		// Date like: YYYYMM
> 		if (preg_match('/^\d{6}$/i', $bad_date))
465c517,520
< 			$sec  = (strlen($ex['2']) == 1) ? '0'.$ex['2'] : $ex['2'];
---
> 			if (in_array(substr($bad_date, 0, 2), array('19', '20')))
> 			{
> 				$year  = substr($bad_date, 0, 4);
> 				$month = substr($bad_date, 4, 2);
469,470c524,525
< 			// Unless specified, seconds get set to zero.
< 			$sec = '00';
---
> 				$month  = substr($bad_date, 0, 2);
> 				$year   = substr($bad_date, 2, 4);
473,475c528,529
< 		if (isset($split['2']))
< 		{
< 			$ampm = strtolower($split['2']);
---
> 			return date($format, strtotime($year.'-'.$month.'-01'));
> 		}
477,478c531,535
< 			if (substr($ampm, 0, 1) == 'p' AND $hour < 12)
< 				$hour = $hour + 12;
---
> 		// Date Like: YYYYMMDD
> 		if (preg_match('/^(\d{2})\d{2}(\d{4})$/i', $bad_date, $matches))
> 		{
> 			return date($format, strtotime($matches[1].'/01/'.$matches[2]));
> 		}
480,481c537,541
< 			if (substr($ampm, 0, 1) == 'a' AND $hour == 12)
< 				$hour =  '00';
---
> 		// Date Like: MM-DD-YYYY __or__ M-D-YYYY (or anything in between)
> 		if (preg_match('/^(\d{1,2})-(\d{1,2})-(\d{4})$/i', $bad_date, $matches))
> 		{
> 			return date($format, strtotime($matches[3].'-'.$matches[1].'-'.$matches[2]));
> 		}
483,484c543,548
< 			if (strlen($hour) == 1)
< 				$hour = '0'.$hour;
---
> 		// Any other kind of string, when converted into UNIX time,
> 		// produces "0 seconds after epoc..." is probably bad...
> 		// return "Invalid Date".
> 		if (date('U', strtotime($bad_date)) === '0')
> 		{
> 			return 'Invalid Date';
487c551,552
< 		return mktime($hour, $min, $sec, $month, $day, $year);
---
> 		// It's probably a valid-ish date format already
> 		return date($format, strtotime($bad_date));
492a558,559
> if ( ! function_exists('timezone_menu'))
> {
498d564
<  * @access	public
501a568
> 	 * @param	mixed	attributes
504,506c571
< if ( ! function_exists('timezone_menu'))
< {
< 	function timezone_menu($default = 'UTC', $class = "", $name = 'timezones')
---
> 	function timezone_menu($default = 'UTC', $class = '', $name = 'timezones', $attributes = '')
511,512c576
< 		if ($default == 'GMT')
< 			$default = 'UTC';
---
> 		$default = ($default === 'GMT') ? 'UTC' : $default;
516c580
< 		if ($class != '')
---
> 		if ($class !== '')
521c585
< 		$menu .= ">\n";
---
> 		$menu .= _stringify_attributes($attributes).">\n";
525,526c589,590
< 			$selected = ($default == $key) ? " selected='selected'" : '';
< 			$menu .= "<option value='{$key}'{$selected}>".$CI->lang->line($key)."</option>\n";
---
> 			$selected = ($default === $key) ? ' selected="selected"' : '';
> 			$menu .= '<option value="'.$key.'"'.$selected.'>'.$CI->lang->line($key)."</option>\n";
529,531c593
< 		$menu .= "</select>";
< 
< 		return $menu;
---
> 		return $menu.'</select>';
536a599,600
> if ( ! function_exists('timezones'))
> {
543d606
<  * @access	public
547,548d609
< if ( ! function_exists('timezones'))
< {
597c658
< 		if ($tz == '')
---
> 		if ($tz === '')
602,603c663,667
< 		if ($tz == 'GMT')
< 			$tz = 'UTC';
---
> 		return isset($zones[$tz]) ? $zones[$tz] : 0;
> 	}
> }
> 
> // ------------------------------------------------------------------------
605c669,690
< 		return ( ! isset($zones[$tz])) ? 0 : $zones[$tz];
---
> if ( ! function_exists('date_range'))
> {
> 	/**
> 	 * Date range
> 	 *
> 	 * Returns a list of dates within a specified period.
> 	 *
> 	 * @param	int	unix_start	UNIX timestamp of period start date
> 	 * @param	int	unix_end|days	UNIX timestamp of period end date
> 	 *					or interval in days.
> 	 * @param	mixed	is_unix		Specifies whether the second parameter
> 	 *					is a UNIX timestamp or a day interval
> 	 *					 - TRUE or 'unix' for a timestamp
> 	 *					 - FALSE or 'days' for an interval
> 	 * @param	string  date_format	Output date format, same as in date()
> 	 * @return	array
> 	 */
> 	function date_range($unix_start = '', $mixed = '', $is_unix = TRUE, $format = 'Y-m-d')
> 	{
> 		if ($unix_start == '' OR $mixed == '' OR $format == '')
> 		{
> 			return FALSE;
606a692,738
> 
> 		$is_unix = ! ( ! $is_unix OR $is_unix === 'days');
> 
> 		// Validate input and try strtotime() on invalid timestamps/intervals, just in case
> 		if ( ( ! ctype_digit((string) $unix_start) && ($unix_start = @strtotime($unix_start)) === FALSE)
> 			OR ( ! ctype_digit((string) $mixed) && ($is_unix === FALSE OR ($mixed = @strtotime($mixed)) === FALSE))
> 			OR ($is_unix === TRUE && $mixed < $unix_start))
> 		{
> 			return FALSE;
> 		}
> 
> 		if ($is_unix && ($unix_start == $mixed OR date($format, $unix_start) === date($format, $mixed)))
> 		{
> 			return array(date($format, $unix_start));
> 		}
> 
> 		$range = array();
> 
> 		/* NOTE: Even though the DateTime object has many useful features, it appears that
> 		 *	 it doesn't always handle properly timezones, when timestamps are passed
> 		 *	 directly to its constructor. Neither of the following gave proper results:
> 		 *
> 		 *		new DateTime('<timestamp>')
> 		 *		new DateTime('<timestamp>', '<timezone>')
> 		 *
> 		 *	 --- available in PHP 5.3:
> 		 *
> 		 *		DateTime::createFromFormat('<format>', '<timestamp>')
> 		 *		DateTime::createFromFormat('<format>', '<timestamp>', '<timezone')
> 		 *
> 		 *	 ... so we'll have to set the timestamp after the object is instantiated.
> 		 *	 Furthermore, in PHP 5.3 we can use DateTime::setTimestamp() to do that and
> 		 *	 given that we have UNIX timestamps - we should use it.
> 		*/
> 		$from = new DateTime();
> 
> 		if (is_php('5.3'))
> 		{
> 			$from->setTimestamp($unix_start);
> 			if ($is_unix)
> 			{
> 				$arg = new DateTime();
> 				$arg->setTimestamp($mixed);
> 			}
> 			else
> 			{
> 				$arg = (int) $mixed;
608a741,745
> 			$period = new DatePeriod($from, new DateInterval('P1D'), $arg);
> 			foreach ($period as $date)
> 			{
> 				$range[] = $date->format($format);
> 			}
610,611c747,796
< /* End of file date_helper.php */
< /* Location: ./system/helpers/date_helper.php */
\ No newline at end of file
---
> 			/* If a period end date was passed to the DatePeriod constructor, it might not
> 			 * be in our results. Not sure if this is a bug or it's just possible because
> 			 * the end date might actually be less than 24 hours away from the previously
> 			 * generated DateTime object, but either way - we have to append it manually.
> 			 */
> 			if ( ! is_int($arg) && $range[count($range) - 1] !== $arg->format($format))
> 			{
> 				$range[] = $arg->format($format);
> 			}
> 
> 			return $range;
> 		}
> 
> 		$from->setDate(date('Y', $unix_start), date('n', $unix_start), date('j', $unix_start));
> 		$from->setTime(date('G', $unix_start), date('i', $unix_start), date('s', $unix_start));
> 		if ($is_unix)
> 		{
> 			$arg = new DateTime();
> 			$arg->setDate(date('Y', $mixed), date('n', $mixed), date('j', $mixed));
> 			$arg->setTime(date('G', $mixed), date('i', $mixed), date('s', $mixed));
> 		}
> 		else
> 		{
> 			$arg = (int) $mixed;
> 		}
> 		$range[] = $from->format($format);
> 
> 		if (is_int($arg)) // Day intervals
> 		{
> 			do
> 			{
> 				$from->modify('+1 day');
> 				$range[] = $from->format($format);
> 			}
> 			while (--$arg > 0);
> 		}
> 		else // end date UNIX timestamp
> 		{
> 			for ($from->modify('+1 day'), $end_check = $arg->format('Ymd'); $from->format('Ymd') < $end_check; $from->modify('+1 day'))
> 			{
> 				$range[] = $from->format($format);
> 			}
> 
> 			// Our loop only appended dates prior to our end date
> 			$range[] = $arg->format($format);
> 		}
> 
> 		return $range;
> 	}
> }
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/directory_helper.php opensourcepos/system/helpers/directory_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/directory_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/directory_helper.html
29a52,53
> if ( ! function_exists('directory_map'))
> {
37,39c61,64
<  * @access	public
<  * @param	string	path to source
<  * @param	int		depth of directories to traverse (0 = fully recursive, 1 = current dir, etc)
---
> 	 * @param	string	$source_dir		Path to source
> 	 * @param	int	$directory_depth	Depth of directories to traverse
> 	 *						(0 = fully recursive, 1 = current dir, etc)
> 	 * @param	bool	$hidden			Whether to show hidden files
42,43d66
< if ( ! function_exists('directory_map'))
< {
55c78
< 				if ( ! trim($file, '.') OR ($hidden == FALSE && $file[0] == '.'))
---
> 				if ($file === '.' OR $file === '..' OR ($hidden === FALSE && $file[0] === '.'))
60c83,85
< 				if (($directory_depth < 1 OR $new_depth > 0) && @is_dir($source_dir.$file))
---
> 				is_dir($source_dir.$file) && $file .= DIRECTORY_SEPARATOR;
> 
> 				if (($directory_depth < 1 OR $new_depth > 0) && is_dir($source_dir.$file))
62c87
< 					$filedata[$file] = directory_map($source_dir.$file.DIRECTORY_SEPARATOR, $new_depth, $hidden);
---
> 					$filedata[$file] = directory_map($source_dir.$file, $new_depth, $hidden);
77,80d101
< 
< 
< /* End of file directory_helper.php */
< /* Location: ./system/helpers/directory_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/download_helper.php opensourcepos/system/helpers/download_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/download_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/download_helper.html
29a52,53
> if ( ! function_exists('force_download'))
> {
35d58
<  * @access	public
37a61
> 	 * @param	bool	whether to try and send the actual file MIME type
40c64
< if ( ! function_exists('force_download'))
---
> 	function force_download($filename = '', $data = '', $set_mime = FALSE)
42c66
< 	function force_download($filename = '', $data = '')
---
> 		if ($filename === '' OR $data === '')
44c68,72
< 		if ($filename == '' OR $data == '')
---
> 			return;
> 		}
> 		elseif ($data === NULL)
> 		{
> 			if ( ! @is_file($filename) OR ($filesize = @filesize($filename)) === FALSE)
46c74
< 			return FALSE;
---
> 				return;
49,51c77,81
< 		// Try to determine if the filename includes a file extension.
< 		// We need it in order to set the MIME type
< 		if (FALSE === strpos($filename, '.'))
---
> 			$filepath = $filename;
> 			$filename = explode('/', str_replace(DIRECTORY_SEPARATOR, '/', $filename));
> 			$filename = end($filename);
> 		}
> 		else
53c83
< 			return FALSE;
---
> 			$filesize = strlen($data);
56c86,88
< 		// Grab the file extension
---
> 		// Set the default MIME type to send
> 		$mime = 'application/octet-stream';
> 
59a92,101
> 		if ($set_mime === TRUE)
> 		{
> 			if (count($x) === 1 OR $extension === '')
> 			{
> 				/* If we're going to detect the MIME type,
> 				 * we'll need a file extension.
> 				 */
> 				return;
> 			}
> 
61c103,106
< 		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
---
> 			$mimes =& get_mimes();
> 
> 			// Only change the default MIME if we can find one
> 			if (isset($mimes[$extension]))
63c108,109
< 			include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
---
> 				$mime = is_array($mimes[$extension]) ? $mimes[$extension][0] : $mimes[$extension];
> 			}
65c111,118
< 		elseif (is_file(APPPATH.'config/mimes.php'))
---
> 
> 		/* It was reported that browsers on Android 2.1 (and possibly older as well)
> 		 * need to have the filename extension upper-cased in order to be able to
> 		 * download it.
> 		 *
> 		 * Reference: http://digiblog.de/2011/04/19/android-and-the-download-file-headers/
> 		 */
> 		if (count($x) !== 1 && isset($_SERVER['HTTP_USER_AGENT']) && preg_match('/Android\s(1|2\.[01])/', $_SERVER['HTTP_USER_AGENT']))
67c120,121
< 			include(APPPATH.'config/mimes.php');
---
> 			$x[count($x) - 1] = strtoupper($extension);
> 			$filename = implode('.', $x);
70,71c124
< 		// Set a default mime if we can't find it
< 		if ( ! isset($mimes[$extension]))
---
> 		if ($data === NULL && ($fp = @fopen($filepath, 'rb')) === FALSE)
73c126
< 			$mime = 'application/octet-stream';
---
> 			return;
75c128,130
< 		else
---
> 
> 		// Clean output buffer
> 		if (ob_get_level() !== 0 && @ob_end_clean() === FALSE)
77c132
< 			$mime = (is_array($mimes[$extension])) ? $mimes[$extension][0] : $mimes[$extension];
---
> 			@ob_clean();
81,83c136
< 		if (strpos($_SERVER['HTTP_USER_AGENT'], "MSIE") !== FALSE)
< 		{
< 			header('Content-Type: "'.$mime.'"');
---
> 		header('Content-Type: '.$mime);
86,89c139,146
< 			header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
< 			header("Content-Transfer-Encoding: binary");
< 			header('Pragma: public');
< 			header("Content-Length: ".strlen($data));
---
> 		header('Content-Transfer-Encoding: binary');
> 		header('Content-Length: '.$filesize);
> 		header('Cache-Control: private, no-transform, no-store, must-revalidate');
> 
> 		// If we have raw data - just dump it
> 		if ($data !== NULL)
> 		{
> 			exit($data);
91c148,150
< 		else
---
> 
> 		// Flush 1MB chunks of data
> 		while ( ! feof($fp) && ($data = fread($fp, 1048576)) !== FALSE)
93,98c152
< 			header('Content-Type: "'.$mime.'"');
< 			header('Content-Disposition: attachment; filename="'.$filename.'"');
< 			header("Content-Transfer-Encoding: binary");
< 			header('Expires: 0');
< 			header('Pragma: no-cache');
< 			header("Content-Length: ".strlen($data));
---
> 			echo $data;
101c155,156
< 		exit($data);
---
> 		fclose($fp);
> 		exit;
104,107d158
< 
< 
< /* End of file download_helper.php */
< /* Location: ./system/helpers/download_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/email_helper.php opensourcepos/system/helpers/email_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/email_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/email_helper.html
29a52,53
> if ( ! function_exists('valid_email'))
> {
33c57,58
<  * @access	public
---
> 	 * @deprecated	3.0.0	Use PHP's filter_var() instead
> 	 * @param	string	$email
36,38c61
< if ( ! function_exists('valid_email'))
< {
< 	function valid_email($address)
---
> 	function valid_email($email)
40c63
< 		return ( ! preg_match("/^([a-z0-9\+_\-]+)(\.[a-z0-9\+_\-]+)*@([a-z0-9\-]+\.)+[a-z]{2,6}$/ix", $address)) ? FALSE : TRUE;
---
> 		return (bool) filter_var($email, FILTER_VALIDATE_EMAIL);
45a69,70
> if ( ! function_exists('send_email'))
> {
49c74,77
<  * @access	public
---
> 	 * @deprecated	3.0.0	Use PHP's mail() instead
> 	 * @param	string	$recipient
> 	 * @param	string	$subject
> 	 * @param	string	$message
52,54c80
< if ( ! function_exists('send_email'))
< {
< 	function send_email($recipient, $subject = 'Test email', $message = 'Hello World')
---
> 	function send_email($recipient, $subject, $message)
59,62d84
< 
< 
< /* End of file email_helper.php */
< /* Location: ./system/helpers/email_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/file_helper.php opensourcepos/system/helpers/file_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/file_helpers.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/file_helper.html
29a52,53
> if ( ! function_exists('read_file'))
> {
33c57
<  * Opens the file specfied in the path and returns it as a string.
---
> 	 * Opens the file specified in the path and returns it as a string.
35,37c59,62
<  * @access	public
<  * @param	string	path to file
<  * @return	string
---
> 	 * @todo	Remove in version 3.1+.
> 	 * @deprecated	3.0.0	It is now just an alias for PHP's native file_get_contents().
> 	 * @param	string	$file	Path to file
> 	 * @return	string	File contents
39,40d63
< if ( ! function_exists('read_file'))
< {
43,69c66
< 		if ( ! file_exists($file))
< 		{
< 			return FALSE;
< 		}
< 
< 		if (function_exists('file_get_contents'))
< 		{
< 			return file_get_contents($file);
< 		}
< 
< 		if ( ! $fp = @fopen($file, FOPEN_READ))
< 		{
< 			return FALSE;
< 		}
< 
< 		flock($fp, LOCK_SH);
< 
< 		$data = '';
< 		if (filesize($file) > 0)
< 		{
< 			$data =& fread($fp, filesize($file));
< 		}
< 
< 		flock($fp, LOCK_UN);
< 		fclose($fp);
< 
< 		return $data;
---
> 		return @file_get_contents($file);
74a72,73
> if ( ! function_exists('write_file'))
> {
81,83c80,82
<  * @access	public
<  * @param	string	path to file
<  * @param	string	file data
---
> 	 * @param	string	$path	File path
> 	 * @param	string	$data	Data to write
> 	 * @param	string	$mode	fopen() mode (default: 'wb')
86,88c85
< if ( ! function_exists('write_file'))
< {
< 	function write_file($path, $data, $mode = FOPEN_WRITE_CREATE_DESTRUCTIVE)
---
> 	function write_file($path, $data, $mode = 'wb')
96c93,101
< 		fwrite($fp, $data);
---
> 
> 		for ($result = $written = 0, $length = strlen($data); $written < $length; $written += $result)
> 		{
> 			if (($result = fwrite($fp, substr($data, $written))) === FALSE)
> 			{
> 				break;
> 			}
> 		}
> 
100c105
< 		return TRUE;
---
> 		return is_int($result);
105a111,112
> if ( ! function_exists('delete_files'))
> {
114,116c121,124
<  * @access	public
<  * @param	string	path to file
<  * @param	bool	whether to delete any directories found in the path
---
> 	 * @param	string	$path		File path
> 	 * @param	bool	$del_dir	Whether to delete any directories found in the path
> 	 * @param	bool	$htdocs		Whether to skip deleting .htaccess and index page files
> 	 * @param	int	$_level		Current directory depth level (default: 0; internal use only)
119,121c127
< if ( ! function_exists('delete_files'))
< {
< 	function delete_files($path, $del_dir = FALSE, $level = 0)
---
> 	function delete_files($path, $del_dir = FALSE, $htdocs = FALSE, $_level = 0)
124c130
< 		$path = rtrim($path, DIRECTORY_SEPARATOR);
---
> 		$path = rtrim($path, '/\\');
133c139
< 			if ($filename != "." and $filename != "..")
---
> 			if ($filename !== '.' && $filename !== '..')
135c141
< 				if (is_dir($path.DIRECTORY_SEPARATOR.$filename))
---
> 				if (is_dir($path.DIRECTORY_SEPARATOR.$filename) && $filename[0] !== '.')
137,141c143
< 					// Ignore empty folders
< 					if (substr($filename, 0, 1) != '.')
< 					{
< 						delete_files($path.DIRECTORY_SEPARATOR.$filename, $del_dir, $level + 1);
< 					}
---
> 					delete_files($path.DIRECTORY_SEPARATOR.$filename, $del_dir, $htdocs, $_level + 1);
143c145
< 				else
---
> 				elseif ($htdocs !== TRUE OR ! preg_match('/^(\.htaccess|index\.(html|htm|php)|web\.config)$/i', $filename))
145c147
< 					unlink($path.DIRECTORY_SEPARATOR.$filename);
---
> 					@unlink($path.DIRECTORY_SEPARATOR.$filename);
149d150
< 		@closedir($current_dir);
151,154c152
< 		if ($del_dir == TRUE AND $level > 0)
< 		{
< 			return @rmdir($path);
< 		}
---
> 		closedir($current_dir);
156c154,156
< 		return TRUE;
---
> 		return ($del_dir === TRUE && $_level > 0)
> 			? @rmdir($path)
> 			: TRUE;
161a162,163
> if ( ! function_exists('get_filenames'))
> {
168d169
<  * @access	public
174,175d174
< if ( ! function_exists('get_filenames'))
< {
191c190
< 				if (@is_dir($source_dir.$file) && strncmp($file, '.', 1) !== 0)
---
> 				if (is_dir($source_dir.$file) && $file[0] !== '.')
195c194
< 				elseif (strncmp($file, '.', 1) !== 0)
---
> 				elseif ($file[0] !== '.')
197c196
< 					$_filedata[] = ($include_path == TRUE) ? $source_dir.$file : $file;
---
> 					$_filedata[] = ($include_path === TRUE) ? $source_dir.$file : $file;
199a199,200
> 
> 			closedir($fp);
202,203c203
< 		else
< 		{
---
> 
207d206
< }
210a210,211
> if ( ! function_exists('get_dir_file_info'))
> {
219d219
<  * @access	public
225,226d224
< if ( ! function_exists('get_dir_file_info'))
< {
241c239
< 			// foreach (scandir($source_dir, 1) as $file) // In addition to being PHP5+, scandir() is simply not as fast
---
> 			// Used to be foreach (scandir($source_dir, 1) as $file), but scandir() is simply not as fast
244c242
< 				if (@is_dir($source_dir.$file) AND strncmp($file, '.', 1) !== 0 AND $top_level_only === FALSE)
---
> 				if (is_dir($source_dir.$file) && $file[0] !== '.' && $top_level_only === FALSE)
248c246
< 				elseif (strncmp($file, '.', 1) !== 0)
---
> 				elseif ($file[0] !== '.')
254a253
> 			closedir($fp);
257,258c256
< 		else
< 		{
---
> 
262d259
< }
265a263,264
> if ( ! function_exists('get_file_info'))
> {
274d272
< * @access	public
279,280d276
< if ( ! function_exists('get_file_info'))
< {
299c294
< 					$fileinfo['name'] = substr(strrchr($file, DIRECTORY_SEPARATOR), 1);
---
> 					$fileinfo['name'] = basename($file);
314,315c309
< 					// There are known problems using is_weritable on IIS.  It may not be reliable - consider fileperms()
< 					$fileinfo['writable'] = is_writable($file);
---
> 					$fileinfo['writable'] = is_really_writable($file);
331a326,327
> if ( ! function_exists('get_mime_by_extension'))
> {
341,343c337,338
<  * @access	public
<  * @param	string	path to file
<  * @return	mixed
---
> 	 * @param	string	$filename	File name
> 	 * @return	string
345,347c340
< if ( ! function_exists('get_mime_by_extension'))
< {
< 	function get_mime_by_extension($file)
---
> 	function get_mime_by_extension($filename)
349,351c342
< 		$extension = strtolower(substr(strrchr($file, '.'), 1));
< 
< 		global $mimes;
---
> 		static $mimes;
355,362c346
< 			if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
< 			{
< 				include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
< 			}
< 			elseif (is_file(APPPATH.'config/mimes.php'))
< 			{
< 				include(APPPATH.'config/mimes.php');
< 			}
---
> 			$mimes = get_mimes();
364c348
< 			if ( ! is_array($mimes))
---
> 			if (empty($mimes))
370,377c354,356
< 		if (array_key_exists($extension, $mimes))
< 		{
< 			if (is_array($mimes[$extension]))
< 			{
< 				// Multiple mime types, just give the first one
< 				return current($mimes[$extension]);
< 			}
< 			else
---
> 		$extension = strtolower(substr(strrchr($filename, '.'), 1));
> 
> 		if (isset($mimes[$extension]))
379,380c358,360
< 				return $mimes[$extension];
< 			}
---
> 			return is_array($mimes[$extension])
> 				? current($mimes[$extension]) // Multiple mime types, just give the first one
> 				: $mimes[$extension];
382,383c362
< 		else
< 		{
---
> 
387d365
< }
390a369,370
> if ( ! function_exists('symbolic_permissions'))
> {
397,398c377
<  * @access	public
<  * @param	int
---
> 	 * @param	int	$perms	Permissions
401,402d379
< if ( ! function_exists('symbolic_permissions'))
< {
405c382
< 		if (($perms & 0xC000) == 0xC000)
---
> 		if (($perms & 0xC000) === 0xC000)
409c386
< 		elseif (($perms & 0xA000) == 0xA000)
---
> 		elseif (($perms & 0xA000) === 0xA000)
413c390
< 		elseif (($perms & 0x8000) == 0x8000)
---
> 		elseif (($perms & 0x8000) === 0x8000)
417c394
< 		elseif (($perms & 0x6000) == 0x6000)
---
> 		elseif (($perms & 0x6000) === 0x6000)
421c398
< 		elseif (($perms & 0x4000) == 0x4000)
---
> 		elseif (($perms & 0x4000) === 0x4000)
425c402
< 		elseif (($perms & 0x2000) == 0x2000)
---
> 		elseif (($perms & 0x2000) === 0x2000)
429c406
< 		elseif (($perms & 0x1000) == 0x1000)
---
> 		elseif (($perms & 0x1000) === 0x1000)
439,441c416,418
< 		$symbolic .= (($perms & 0x0100) ? 'r' : '-');
< 		$symbolic .= (($perms & 0x0080) ? 'w' : '-');
< 		$symbolic .= (($perms & 0x0040) ? (($perms & 0x0800) ? 's' : 'x' ) : (($perms & 0x0800) ? 'S' : '-'));
---
> 		$symbolic .= (($perms & 0x0100) ? 'r' : '-')
> 			.(($perms & 0x0080) ? 'w' : '-')
> 			.(($perms & 0x0040) ? (($perms & 0x0800) ? 's' : 'x' ) : (($perms & 0x0800) ? 'S' : '-'));
444,446c421,423
< 		$symbolic .= (($perms & 0x0020) ? 'r' : '-');
< 		$symbolic .= (($perms & 0x0010) ? 'w' : '-');
< 		$symbolic .= (($perms & 0x0008) ? (($perms & 0x0400) ? 's' : 'x' ) : (($perms & 0x0400) ? 'S' : '-'));
---
> 		$symbolic .= (($perms & 0x0020) ? 'r' : '-')
> 			.(($perms & 0x0010) ? 'w' : '-')
> 			.(($perms & 0x0008) ? (($perms & 0x0400) ? 's' : 'x' ) : (($perms & 0x0400) ? 'S' : '-'));
449,451c426,428
< 		$symbolic .= (($perms & 0x0004) ? 'r' : '-');
< 		$symbolic .= (($perms & 0x0002) ? 'w' : '-');
< 		$symbolic .= (($perms & 0x0001) ? (($perms & 0x0200) ? 't' : 'x' ) : (($perms & 0x0200) ? 'T' : '-'));
---
> 		$symbolic .= (($perms & 0x0004) ? 'r' : '-')
> 			.(($perms & 0x0002) ? 'w' : '-')
> 			.(($perms & 0x0001) ? (($perms & 0x0200) ? 't' : 'x' ) : (($perms & 0x0200) ? 'T' : '-'));
458a436,437
> if ( ! function_exists('octal_permissions'))
> {
465,466c444
<  * @access	public
<  * @param	int
---
> 	 * @param	int	$perms	Permissions
469,470d446
< if ( ! function_exists('octal_permissions'))
< {
476,479d451
< 
< 
< /* End of file file_helper.php */
< /* Location: ./system/helpers/file_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/form_helper.php opensourcepos/system/helpers/form_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/form_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/form_helper.html
29a52,53
> if ( ! function_exists('form_open'))
> {
35d58
<  * @access	public
41,43c64
< if ( ! function_exists('form_open'))
< {
< 	function form_open($action = '', $attributes = '', $hidden = array())
---
> 	function form_open($action = '', $attributes = array(), $hidden = array())
47c68,69
< 		if ($attributes == '')
---
> 		// If no action is provided then set to the current url
> 		if ( ! $action)
49c71
< 			$attributes = 'method="post"';
---
> 			$action = $CI->config->site_url($CI->uri->uri_string());
53c74
< 		if ($action && strpos($action, '://') === FALSE)
---
> 		elseif (strpos($action, '://') === FALSE)
58,59c79
< 		// If no action is provided then set to the current url
< 		$action OR $action = $CI->config->site_url($CI->uri->uri_string());
---
> 		$attributes = _attributes_to_string($attributes);
61c81,84
< 		$form = '<form action="'.$action.'"';
---
> 		if (stripos($attributes, 'method=') === FALSE)
> 		{
> 			$attributes .= ' method="post"';
> 		}
63c86,89
< 		$form .= _attributes_to_string($attributes, TRUE);
---
> 		if (stripos($attributes, 'accept-charset=') === FALSE)
> 		{
> 			$attributes .= ' accept-charset="'.strtolower(config_item('charset')).'"';
> 		}
65c91
< 		$form .= '>';
---
> 		$form = '<form action="'.$action.'"'.$attributes.">\n";
68c94
< 		if ($CI->config->item('csrf_protection') === TRUE AND ! (strpos($action, $CI->config->base_url()) === FALSE OR strpos($form, 'method="get"')))	
---
> 		if ($CI->config->item('csrf_protection') === TRUE && strpos($action, $CI->config->base_url()) !== FALSE && ! stripos($form, 'method="get"'))
73c99,101
< 		if (is_array($hidden) AND count($hidden) > 0)
---
> 		if (is_array($hidden))
> 		{
> 			foreach ($hidden as $name => $value)
75c103,104
< 			$form .= sprintf("<div style=\"display:none\">%s</div>", form_hidden($hidden));
---
> 				$form .= '<input type="hidden" name="'.$name.'" value="'.html_escape($value).'" style="display:none;" />'."\n";
> 			}
83a113,114
> if ( ! function_exists('form_open_multipart'))
> {
89d119
<  * @access	public
95,96d124
< if ( ! function_exists('form_open_multipart'))
< {
113a142,143
> if ( ! function_exists('form_hidden'))
> {
117,118c147,148
<  * Generates hidden fields.  You can pass a simple key/value string or an associative
<  * array with multiple values.
---
> 	 * Generates hidden fields. You can pass a simple key/value string or
> 	 * an associative array with multiple values.
120,122c150,152
<  * @access	public
<  * @param	mixed
<  * @param	string
---
> 	 * @param	mixed	$name		Field name
> 	 * @param	string	$value		Field value
> 	 * @param	bool	$recursing
125,126d154
< if ( ! function_exists('form_hidden'))
< {
147c176
< 			$form .= '<input type="hidden" name="'.$name.'" value="'.form_prep($value, $name).'" />'."\n";
---
> 			$form .= '<input type="hidden" name="'.$name.'" value="'.html_escape($value)."\" />\n";
153c182
< 				$k = (is_int($k)) ? '' : $k;
---
> 				$k = is_int($k) ? '' : $k;
163a193,194
> if ( ! function_exists('form_input'))
> {
167d197
<  * @access	public
170c200
<  * @param	string
---
> 	 * @param	mixed
173,174d202
< if ( ! function_exists('form_input'))
< {
177c205,209
< 		$defaults = array('type' => 'text', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
---
> 		$defaults = array(
> 			'type' => 'text',
> 			'name' => is_array($data) ? '' : $data,
> 			'value' => $value
> 		);
179c211
< 		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
---
> 		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
184a217,218
> if ( ! function_exists('form_password'))
> {
190d223
<  * @access	public
193c226
<  * @param	string
---
> 	 * @param	mixed
196,197d228
< if ( ! function_exists('form_password'))
< {
200,204c231
< 		if ( ! is_array($data))
< 		{
< 			$data = array('name' => $data);
< 		}
< 
---
> 		is_array($data) OR $data = array('name' => $data);
211a239,240
> if ( ! function_exists('form_upload'))
> {
217d245
<  * @access	public
220c248
<  * @param	string
---
> 	 * @param	mixed
223,224d250
< if ( ! function_exists('form_upload'))
< {
227,231c253,254
< 		if ( ! is_array($data))
< 		{
< 			$data = array('name' => $data);
< 		}
< 
---
> 		$defaults = array('type' => 'file', 'name' => '');
> 		is_array($data) OR $data = array('name' => $data);
233c256,257
< 		return form_input($data, $value, $extra);
---
> 
> 		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
238a263,264
> if ( ! function_exists('form_textarea'))
> {
242,245c268,270
<  * @access	public
<  * @param	mixed
<  * @param	string
<  * @param	string
---
> 	 * @param	mixed	$data
> 	 * @param	string	$value
> 	 * @param	mixed	$extra
248,249d272
< if ( ! function_exists('form_textarea'))
< {
252c275,279
< 		$defaults = array('name' => (( ! is_array($data)) ? $data : ''), 'cols' => '40', 'rows' => '10');
---
> 		$defaults = array(
> 			'name' => is_array($data) ? '' : $data,
> 			'cols' => '40',
> 			'rows' => '10'
> 		);
264,265c291,293
< 		$name = (is_array($data)) ? $data['name'] : $data;
< 		return "<textarea "._parse_form_attributes($data, $defaults).$extra.">".form_prep($val, $name)."</textarea>";
---
> 		return '<textarea '._parse_form_attributes($data, $defaults)._attributes_to_string($extra).'>'
> 			.html_escape($val)
> 			."</textarea>\n";
270a299,300
> if ( ! function_exists('form_multiselect'))
> {
274d303
<  * @access	public
278,279c307,308
<  * @param	string
<  * @return	type
---
> 	 * @param	mixed
> 	 * @return	string
281,282d309
< if ( ! function_exists('form_multiselect'))
< {
285c312,313
< 		if ( ! strpos($extra, 'multiple'))
---
> 		$extra = _attributes_to_string($extra);
> 		if (stripos($extra, 'multiple') === FALSE)
295a324,325
> if ( ! function_exists('form_dropdown'))
> {
299,303c329,332
<  * @access	public
<  * @param	string
<  * @param	array
<  * @param	string
<  * @param	string
---
> 	 * @param	mixed	$data
> 	 * @param	mixed	$options
> 	 * @param	mixed	$selected
> 	 * @param	mixed	$extra
306c335,341
< if ( ! function_exists('form_dropdown'))
---
> 	function form_dropdown($data = '', $options = array(), $selected = array(), $extra = '')
> 	{
> 		$defaults = array();
> 
> 		if (is_array($data))
> 		{
> 			if (isset($data['selected']))
308c343,347
< 	function form_dropdown($name = '', $options = array(), $selected = array(), $extra = '')
---
> 				$selected = $data['selected'];
> 				unset($data['selected']); // select tags don't have a selected attribute
> 			}
> 
> 			if (isset($data['options']))
310c349,353
< 		if ( ! is_array($selected))
---
> 				$options = $data['options'];
> 				unset($data['options']); // select tags don't use an options attribute
> 			}
> 		}
> 		else
312c355
< 			$selected = array($selected);
---
> 			$defaults = array('name' => $data);
314a358,360
> 		is_array($selected) OR $selected = array($selected);
> 		is_array($options) OR $options = array($options);
> 
316c362,366
< 		if (count($selected) === 0)
---
> 		if (empty($selected))
> 		{
> 			if (is_array($data))
> 			{
> 				if (isset($data['name'], $_POST[$data['name']]))
318,319c368,371
< 			// If the form name appears in the $_POST array we have a winner!
< 			if (isset($_POST[$name]))
---
> 					$selected = array($_POST[$data['name']]);
> 				}
> 			}
> 			elseif (isset($_POST[$data]))
321c373
< 				$selected = array($_POST[$name]);
---
> 				$selected = array($_POST[$data]);
325c377
< 		if ($extra != '') $extra = ' '.$extra;
---
> 		$extra = _attributes_to_string($extra);
327c379
< 		$multiple = (count($selected) > 1 && strpos($extra, 'multiple') === FALSE) ? ' multiple="multiple"' : '';
---
> 		$multiple = (count($selected) > 1 && stripos($extra, 'multiple') === FALSE) ? ' multiple="multiple"' : '';
329c381
< 		$form = '<select name="'.$name.'"'.$extra.$multiple.">\n";
---
> 		$form = '<select '.rtrim(_parse_form_attributes($data, $defaults)).$extra.$multiple.">\n";
335c387
< 			if (is_array($val) && ! empty($val))
---
> 			if (is_array($val))
337c389,394
< 				$form .= '<optgroup label="'.$key.'">'."\n";
---
> 				if (empty($val))
> 				{
> 					continue;
> 				}
> 
> 				$form .= '<optgroup label="'.$key."\">\n";
341,343c398,400
< 					$sel = (in_array($optgroup_key, $selected)) ? ' selected="selected"' : '';
< 
< 					$form .= '<option value="'.$optgroup_key.'"'.$sel.'>'.(string) $optgroup_val."</option>\n";
---
> 					$sel = in_array($optgroup_key, $selected) ? ' selected="selected"' : '';
> 					$form .= '<option value="'.html_escape($optgroup_key).'"'.$sel.'>'
> 						.(string) $optgroup_val."</option>\n";
346c403
< 				$form .= '</optgroup>'."\n";
---
> 				$form .= "</optgroup>\n";
350,352c407,409
< 				$sel = (in_array($key, $selected)) ? ' selected="selected"' : '';
< 
< 				$form .= '<option value="'.$key.'"'.$sel.'>'.(string) $val."</option>\n";
---
> 				$form .= '<option value="'.html_escape($key).'"'
> 					.(in_array($key, $selected) ? ' selected="selected"' : '').'>'
> 					.(string) $val."</option>\n";
356,358c413
< 		$form .= '</select>';
< 
< 		return $form;
---
> 		return $form."</select>\n";
363a419,420
> if ( ! function_exists('form_checkbox'))
> {
367d423
<  * @access	public
371c427
<  * @param	string
---
> 	 * @param	mixed
374,375d429
< if ( ! function_exists('form_checkbox'))
< {
378c432
< 		$defaults = array('type' => 'checkbox', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
---
> 		$defaults = array('type' => 'checkbox', 'name' => ( ! is_array($data) ? $data : ''), 'value' => $value);
380c434
< 		if (is_array($data) AND array_key_exists('checked', $data))
---
> 		if (is_array($data) && array_key_exists('checked', $data))
403c457
< 		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
---
> 		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
408a463,464
> if ( ! function_exists('form_radio'))
> {
412d467
<  * @access	public
416c471
<  * @param	string
---
> 	 * @param	mixed
419,420d473
< if ( ! function_exists('form_radio'))
< {
423,427c476
< 		if ( ! is_array($data))
< 		{
< 			$data = array('name' => $data);
< 		}
< 
---
> 		is_array($data) OR $data = array('name' => $data);
434a485,486
> if ( ! function_exists('form_submit'))
> {
438d489
<  * @access	public
441c492
<  * @param	string
---
> 	 * @param	mixed
444,445d494
< if ( ! function_exists('form_submit'))
< {
448c497,501
< 		$defaults = array('type' => 'submit', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
---
> 		$defaults = array(
> 			'type' => 'submit',
> 			'name' => is_array($data) ? '' : $data,
> 			'value' => $value
> 		);
450c503
< 		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
---
> 		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
455a509,510
> if ( ! function_exists('form_reset'))
> {
459d513
<  * @access	public
462c516
<  * @param	string
---
> 	 * @param	mixed
465,466d518
< if ( ! function_exists('form_reset'))
< {
469c521,525
< 		$defaults = array('type' => 'reset', 'name' => (( ! is_array($data)) ? $data : ''), 'value' => $value);
---
> 		$defaults = array(
> 			'type' => 'reset',
> 			'name' => is_array($data) ? '' : $data,
> 			'value' => $value
> 		);
471c527
< 		return "<input "._parse_form_attributes($data, $defaults).$extra." />";
---
> 		return '<input '._parse_form_attributes($data, $defaults)._attributes_to_string($extra)." />\n";
476a533,534
> if ( ! function_exists('form_button'))
> {
480d537
<  * @access	public
483c540
<  * @param	string
---
> 	 * @param	mixed
486,487d542
< if ( ! function_exists('form_button'))
< {
490c545,548
< 		$defaults = array('name' => (( ! is_array($data)) ? $data : ''), 'type' => 'button');
---
> 		$defaults = array(
> 			'name' => is_array($data) ? '' : $data,
> 			'type' => 'button'
> 		);
492c550
< 		if ( is_array($data) AND isset($data['content']))
---
> 		if (is_array($data) && isset($data['content']))
498c556,558
< 		return "<button "._parse_form_attributes($data, $defaults).$extra.">".$content."</button>";
---
> 		return '<button '._parse_form_attributes($data, $defaults)._attributes_to_string($extra).'>'
> 			.$content
> 			."</button>\n";
503a564,565
> if ( ! function_exists('form_label'))
> {
507d568
<  * @access	public
513,514d573
< if ( ! function_exists('form_label'))
< {
520c579
< 		if ($id != '')
---
> 		if ($id !== '')
522c581
< 			$label .= " for=\"$id\"";
---
> 			$label .= ' for="'.$id.'"';
525c584
< 		if (is_array($attributes) AND count($attributes) > 0)
---
> 		if (is_array($attributes) && count($attributes) > 0)
533,535c592
< 		$label .= ">$label_text</label>";
< 
< 		return $label;
---
> 		return $label.'>'.$label_text.'</label>';
539a597,599
> 
> if ( ! function_exists('form_fieldset'))
> {
546d605
<  * @access	public
548c607
<  * @param	string	Additional attributes
---
> 	 * @param	array	Additional attributes
551,552d609
< if ( ! function_exists('form_fieldset'))
< {
555,561c612,613
< 		$fieldset = "<fieldset";
< 
< 		$fieldset .= _attributes_to_string($attributes, FALSE);
< 
< 		$fieldset .= ">\n";
< 
< 		if ($legend_text != '')
---
> 		$fieldset = '<fieldset'._attributes_to_string($attributes).">\n";
> 		if ($legend_text !== '')
563c615
< 			$fieldset .= "<legend>$legend_text</legend>\n";
---
> 			return $fieldset.'<legend>'.$legend_text."</legend>\n";
571a624,625
> if ( ! function_exists('form_fieldset_close'))
> {
575d628
<  * @access	public
579,580d631
< if ( ! function_exists('form_fieldset_close'))
< {
583c634
< 		return "</fieldset>".$extra;
---
> 		return '</fieldset>'.$extra;
588a640,641
> if ( ! function_exists('form_close'))
> {
592d644
<  * @access	public
596,597d647
< if ( ! function_exists('form_close'))
< {
600c650
< 		return "</form>".$extra;
---
> 		return '</form>'.$extra;
605a656,657
> if ( ! function_exists('form_prep'))
> {
611,613c663,665
<  * @access	public
<  * @param	string
<  * @return	string
---
> 	 * @deprecated	3.0.0	An alias for html_escape()
> 	 * @param	string|string[]	$str		Value to escape
> 	 * @return	string|string[]	Escaped values
615,651c667
< if ( ! function_exists('form_prep'))
< {
< 	function form_prep($str = '', $field_name = '')
< 	{
< 		static $prepped_fields = array();
< 
< 		// if the field name is an array we do this recursively
< 		if (is_array($str))
< 		{
< 			foreach ($str as $key => $val)
< 			{
< 				$str[$key] = form_prep($val);
< 			}
< 
< 			return $str;
< 		}
< 
< 		if ($str === '')
< 		{
< 			return '';
< 		}
< 
< 		// we've already prepped a field with this name
< 		// @todo need to figure out a way to namespace this so
< 		// that we know the *exact* field and not just one with
< 		// the same name
< 		if (isset($prepped_fields[$field_name]))
< 		{
< 			return $str;
< 		}
< 
< 		$str = htmlspecialchars($str);
< 
< 		// In case htmlspecialchars misses these.
< 		$str = str_replace(array("'", '"'), array("&#39;", "&quot;"), $str);
< 
< 		if ($field_name != '')
---
> 	function form_prep($str)
653,656c669
< 			$prepped_fields[$field_name] = $field_name;
< 		}
< 
< 		return $str;
---
> 		return html_escape($str, TRUE);
661a675,676
> if ( ! function_exists('set_value'))
> {
669,671c684,687
<  * @access	public
<  * @param	string
<  * @return	mixed
---
> 	 * @param	string	$field		Field name
> 	 * @param	string	$default	Default value
> 	 * @param	bool	$html_escape	Whether to escape HTML special characters or not
> 	 * @return	string
673,675c689
< if ( ! function_exists('set_value'))
< {
< 	function set_value($field = '', $default = '')
---
> 	function set_value($field, $default = '', $html_escape = TRUE)
677,682c691
< 		if (FALSE === ($OBJ =& _get_validation_object()))
< 		{
< 			if ( ! isset($_POST[$field]))
< 			{
< 				return $default;
< 			}
---
> 		$CI =& get_instance();
684,685c693,695
< 			return form_prep($_POST[$field], $field);
< 		}
---
> 		$value = (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
> 			? $CI->form_validation->set_value($field, $default)
> 			: $CI->input->post($field, FALSE);
687c697,698
< 		return form_prep($OBJ->set_value($field, $default), $field);
---
> 		isset($value) OR $value = $default;
> 		return ($html_escape) ? html_escape($value) : $value;
692a704,705
> if ( ! function_exists('set_select'))
> {
699d711
<  * @access	public
705c717
< if ( ! function_exists('set_select'))
---
> 	function set_select($field, $value = '', $default = FALSE)
707,709c719
< 	function set_select($field = '', $value = '', $default = FALSE)
< 	{
< 		$OBJ =& _get_validation_object();
---
> 		$CI =& get_instance();
711,713c721
< 		if ($OBJ === FALSE)
< 		{
< 			if ( ! isset($_POST[$field]))
---
> 		if (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
715,717c723
< 				if (count($_POST) === 0 AND $default == TRUE)
< 				{
< 					return ' selected="selected"';
---
> 			return $CI->form_validation->set_select($field, $value, $default);
719c725,727
< 				return '';
---
> 		elseif (($input = $CI->input->post($field, FALSE)) === NULL)
> 		{
> 			return ($default === TRUE) ? ' selected="selected"' : '';
722,724c730,731
< 			$field = $_POST[$field];
< 
< 			if (is_array($field))
---
> 		$value = (string) $value;
> 		if (is_array($input))
726c733,734
< 				if ( ! in_array($value, $field))
---
> 			// Note: in_array('', array(0)) returns TRUE, do not use it
> 			foreach ($input as &$v)
728,731c736
< 					return '';
< 				}
< 			}
< 			else
---
> 				if ($value === $v)
733,735c738
< 				if (($field == '' OR $value == '') OR ($field != $value))
< 				{
< 					return '';
---
> 					return ' selected="selected"';
739c742
< 			return ' selected="selected"';
---
> 			return '';
742c745
< 		return $OBJ->set_select($field, $value, $default);
---
> 		return ($input === $value) ? ' selected="selected"' : '';
747a751,752
> if ( ! function_exists('set_checkbox'))
> {
754d758
<  * @access	public
760,762c764
< if ( ! function_exists('set_checkbox'))
< {
< 	function set_checkbox($field = '', $value = '', $default = FALSE)
---
> 	function set_checkbox($field, $value = '', $default = FALSE)
764c766
< 		$OBJ =& _get_validation_object();
---
> 		$CI =& get_instance();
766,770c768
< 		if ($OBJ === FALSE)
< 		{
< 			if ( ! isset($_POST[$field]))
< 			{
< 				if (count($_POST) === 0 AND $default == TRUE)
---
> 		if (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
772,774c770
< 					return ' checked="checked"';
< 				}
< 				return '';
---
> 			return $CI->form_validation->set_checkbox($field, $value, $default);
777c773,775
< 			$field = $_POST[$field];
---
> 		// Form inputs are always strings ...
> 		$value = (string) $value;
> 		$input = $CI->input->post($field, FALSE);
779c777
< 			if (is_array($field))
---
> 		if (is_array($input))
781c779,780
< 				if ( ! in_array($value, $field))
---
> 			// Note: in_array('', array(0)) returns TRUE, do not use it
> 			foreach ($input as &$v)
783c782,784
< 					return '';
---
> 				if ($value === $v)
> 				{
> 					return ' checked="checked"';
786,789c787
< 			else
< 			{
< 				if (($field == '' OR $value == '') OR ($field != $value))
< 				{
---
> 
792d789
< 			}
794c791,794
< 			return ' checked="checked"';
---
> 		// Unchecked checkbox and radio inputs are not even submitted by browsers ...
> 		if ($CI->input->method() === 'post')
> 		{
> 			return ($input === $value) ? ' checked="checked"' : '';
797c797
< 		return $OBJ->set_checkbox($field, $value, $default);
---
> 		return ($default === TRUE) ? ' checked="checked"' : '';
802a803,804
> if ( ! function_exists('set_radio'))
> {
809,812c811,813
<  * @access	public
<  * @param	string
<  * @param	string
<  * @param	bool
---
> 	 * @param	string	$field
> 	 * @param	string	$value
> 	 * @param	bool	$default
815c816
< if ( ! function_exists('set_radio'))
---
> 	function set_radio($field, $value = '', $default = FALSE)
817,819c818
< 	function set_radio($field = '', $value = '', $default = FALSE)
< 	{
< 		$OBJ =& _get_validation_object();
---
> 		$CI =& get_instance();
821,823c820
< 		if ($OBJ === FALSE)
< 		{
< 			if ( ! isset($_POST[$field]))
---
> 		if (isset($CI->form_validation) && is_object($CI->form_validation) && $CI->form_validation->has_rule($field))
825,829c822
< 				if (count($_POST) === 0 AND $default == TRUE)
< 				{
< 					return ' checked="checked"';
< 				}
< 				return '';
---
> 			return $CI->form_validation->set_radio($field, $value, $default);
832c825,827
< 			$field = $_POST[$field];
---
> 		// Form inputs are always strings ...
> 		$value = (string) $value;
> 		$input = $CI->input->post($field, FALSE);
834c829
< 			if (is_array($field))
---
> 		if (is_array($input))
836c831,832
< 				if ( ! in_array($value, $field))
---
> 			// Note: in_array('', array(0)) returns TRUE, do not use it
> 			foreach ($input as &$v)
838c834,836
< 					return '';
---
> 				if ($value === $v)
> 				{
> 					return ' checked="checked"';
841,844c839
< 			else
< 			{
< 				if (($field == '' OR $value == '') OR ($field != $value))
< 				{
---
> 
847d841
< 			}
849c843,846
< 			return ' checked="checked"';
---
> 		// Unchecked checkbox and radio inputs are not even submitted by browsers ...
> 		if ($CI->input->method() === 'post')
> 		{
> 			return ($input === $value) ? ' checked="checked"' : '';
852c849
< 		return $OBJ->set_radio($field, $value, $default);
---
> 		return ($default === TRUE) ? ' checked="checked"' : '';
857a855,856
> if ( ! function_exists('form_error'))
> {
864d862
<  * @access	public
870,871d867
< if ( ! function_exists('form_error'))
< {
884a881,882
> if ( ! function_exists('validation_errors'))
> {
891d888
<  * @access	public
896,897d892
< if ( ! function_exists('validation_errors'))
< {
910a906,907
> if ( ! function_exists('_parse_form_attributes'))
> {
916,918c913,914
<  * @access	private
<  * @param	array
<  * @param	array
---
> 	 * @param	array	$attributes	List of attributes
> 	 * @param	array	$default	Default values
921,922d916
< if ( ! function_exists('_parse_form_attributes'))
< {
946c940,944
< 			if ($key == 'value')
---
> 			if ($key === 'value')
> 			{
> 				$val = html_escape($val);
> 			}
> 			elseif ($key === 'name' && ! strlen($default['name']))
948c946
< 				$val = form_prep($val, $default['name']);
---
> 				continue;
959a958,959
> if ( ! function_exists('_attributes_to_string'))
> {
965d964
<  * @access	private
967d965
<  * @param	bool
970,972c968
< if ( ! function_exists('_attributes_to_string'))
< {
< 	function _attributes_to_string($attributes, $formtag = FALSE)
---
> 	function _attributes_to_string($attributes)
974c970
< 		if (is_string($attributes) AND strlen($attributes) > 0)
---
> 		if (empty($attributes))
976,986c972
< 			if ($formtag == TRUE AND strpos($attributes, 'method=') === FALSE)
< 			{
< 				$attributes .= ' method="post"';
< 			}
< 
< 			if ($formtag == TRUE AND strpos($attributes, 'accept-charset=') === FALSE)
< 			{
< 				$attributes .= ' accept-charset="'.strtolower(config_item('charset')).'"';
< 			}
< 
< 		return ' '.$attributes;
---
> 			return '';
989c975
< 		if (is_object($attributes) AND count($attributes) > 0)
---
> 		if (is_object($attributes))
994c980
< 		if (is_array($attributes) AND count($attributes) > 0)
---
> 		if (is_array($attributes))
998c984
< 			if ( ! isset($attributes['method']) AND $formtag === TRUE)
---
> 			foreach ($attributes as $key => $val)
1000c986
< 				$atts .= ' method="post"';
---
> 				$atts .= ' '.$key.'="'.$val.'"';
1003,1005c989
< 			if ( ! isset($attributes['accept-charset']) AND $formtag === TRUE)
< 			{
< 				$atts .= ' accept-charset="'.strtolower(config_item('charset')).'"';
---
> 			return $atts;
1008c992
< 			foreach ($attributes as $key => $val)
---
> 		if (is_string($attributes))
1010c994
< 				$atts .= ' '.$key.'="'.$val.'"';
---
> 			return ' '.$attributes;
1013,1014c997
< 			return $atts;
< 		}
---
> 		return FALSE;
1019a1003,1004
> if ( ! function_exists('_get_validation_object'))
> {
1026d1010
<  * @access	private
1029,1030d1012
< if ( ! function_exists('_get_validation_object'))
< {
1051,1054d1032
< 
< 
< /* End of file form_helper.php */
< /* Location: ./system/helpers/form_helper.php */
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/html_helper.php opensourcepos/system/helpers/html_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/html_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/html_helper.html
29a52,53
> if ( ! function_exists('heading'))
> {
33,34c57
<  * Generates an HTML heading tag.  First param is the data.
<  * Second param is the size of the heading tag.
---
> 	 * Generates an HTML heading tag.
36c59,60
<  * @access	public
---
> 	 * @param	string	content
> 	 * @param	int	heading level
38d61
<  * @param	integer
41,42d63
< if ( ! function_exists('heading'))
< {
45,46c66
< 		$attributes = ($attributes != '') ? ' '.$attributes : $attributes;
< 		return "<h".$h.$attributes.">".$data."</h".$h.">";
---
> 		return '<h'.$h._stringify_attributes($attributes).'>'.$data.'</h'.$h.'>';
51a72,73
> if ( ! function_exists('ul'))
> {
57d78
<  * @access	public
62,63d82
< if ( ! function_exists('ul'))
< {
71a91,92
> if ( ! function_exists('ol'))
> {
77d97
<  * @access	public
82,83d101
< if ( ! function_exists('ol'))
< {
91a110,111
> if ( ! function_exists('_list'))
> {
97d116
<  * @access	private
101c120
<  * @param	integer
---
> 	 * @param	int
104,106c123
< if ( ! function_exists('_list'))
< {
< 	function _list($type = 'ul', $list, $attributes = '', $depth = 0)
---
> 	function _list($type = 'ul', $list = array(), $attributes = '', $depth = 0)
115,131c132
< 		$out = str_repeat(" ", $depth);
< 
< 		// Were any attributes submitted?  If so generate a string
< 		if (is_array($attributes))
< 		{
< 			$atts = '';
< 			foreach ($attributes as $key => $val)
< 			{
< 				$atts .= ' ' . $key . '="' . $val . '"';
< 			}
< 			$attributes = $atts;
< 		}
< 		elseif (is_string($attributes) AND strlen($attributes) > 0)
< 		{
< 			$attributes = ' '. $attributes;
< 		}
< 
---
> 		$out = str_repeat(' ', $depth)
133c134,135
< 		$out .= "<".$type.$attributes.">\n";
---
> 			.'<'.$type._stringify_attributes($attributes).">\n";
> 
143,144c145
< 			$out .= str_repeat(" ", $depth + 2);
< 			$out .= "<li>";
---
> 			$out .= str_repeat(' ', $depth + 2).'<li>';
152,154c153
< 				$out .= $_last_list_item."\n";
< 				$out .= _list($type, $val, '', $depth + 4);
< 				$out .= str_repeat(" ", $depth + 2);
---
> 				$out .= $_last_list_item."\n"._list($type, $val, '', $depth + 4).str_repeat(' ', $depth + 2);
160,166c159,160
< 		// Set the indentation for the closing tag
< 		$out .= str_repeat(" ", $depth);
< 
< 		// Write the closing list tag
< 		$out .= "</".$type.">\n";
< 
< 		return $out;
---
> 		// Set the indentation for the closing tag and apply it
> 		return $out.str_repeat(' ', $depth).'</'.$type.">\n";
172,181c166
< /**
<  * Generates HTML BR tags based on number supplied
<  *
<  * @access	public
<  * @param	integer
<  * @return	string
<  */
< if ( ! function_exists('br'))
< {
< 	function br($num = 1)
---
> if ( ! function_exists('img'))
183,188d167
< 		return str_repeat("<br />", $num);
< 	}
< }
< 
< // ------------------------------------------------------------------------
< 
194c173,174
<  * @access	public
---
> 	 * @param	mixed
> 	 * @param	bool
198,200c178
< if ( ! function_exists('img'))
< {
< 	function img($src = '', $index_page = FALSE)
---
> 	function img($src = '', $index_page = FALSE, $attributes = '')
217,218c195
< 
< 			if ($k == 'src' AND strpos($v, '://') === FALSE)
---
> 			if ($k === 'src' && ! preg_match('#^([a-z]+:)?//#i', $v))
220,221d196
< 				$CI =& get_instance();
< 
224c199
< 					$img .= ' src="'.$CI->config->site_url($v).'"';
---
> 					$img .= ' src="'.get_instance()->config->site_url($v).'"';
228c203
< 					$img .= ' src="'.$CI->config->slash_item('base_url').$v.'"';
---
> 					$img .= ' src="'.get_instance()->config->slash_item('base_url').$v.'"';
233c208
< 				$img .= " $k=\"$v\"";
---
> 				$img .= ' '.$k.'="'.$v.'"';
237,239c212
< 		$img .= '/>';
< 
< 		return $img;
---
> 		return $img._stringify_attributes($attributes).' />';
244a218,219
> if ( ! function_exists('doctype'))
> {
250,252c225,227
<  * Valid options are xhtml-11, xhtml-strict, xhtml-trans, xhtml-frame,
<  * html4-strict, html4-trans, and html4-frame.  Values are saved in the
<  * doctypes config file.
---
> 	 * Examples of valid options: html5, xhtml-11, xhtml-strict, xhtml-trans,
> 	 * xhtml-frame, html4-strict, html4-trans, and html4-frame.
> 	 * All values are saved in the doctypes config file.
254d228
<  * @access	public
258,259d231
< if ( ! function_exists('doctype'))
< {
262c234
< 		global $_doctypes;
---
> 		static $doctypes;
264c236
< 		if ( ! is_array($_doctypes))
---
> 		if ( ! is_array($doctypes))
266,270c238
< 			if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php'))
< 			{
< 				include(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php');
< 			}
< 			elseif (is_file(APPPATH.'config/doctypes.php'))
---
> 			if (file_exists(APPPATH.'config/doctypes.php'))
275c243
< 			if ( ! is_array($_doctypes))
---
> 			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php'))
277,278c245
< 				return FALSE;
< 			}
---
> 				include(APPPATH.'config/'.ENVIRONMENT.'/doctypes.php');
281,285c248
< 		if (isset($_doctypes[$type]))
< 		{
< 			return $_doctypes[$type];
< 		}
< 		else
---
> 			if (empty($_doctypes) OR ! is_array($_doctypes))
286a250
> 				$doctypes = array();
288a253,257
> 
> 			$doctypes = $_doctypes;
> 		}
> 
> 		return isset($doctypes[$type]) ? $doctypes[$type] : FALSE;
293a263,264
> if ( ! function_exists('link_tag'))
> {
299d269
<  * @access	public
305c275
<  * @param	boolean	should index_page be added to the css path
---
> 	 * @param	bool	should index_page be added to the css path
308,309d277
< if ( ! function_exists('link_tag'))
< {
320c287
< 				if ($k == 'href' AND strpos($v, '://') === FALSE)
---
> 				if ($k === 'href' && ! preg_match('#^([a-z]+:)?//#i', $v))
333c300
< 					$link .= "$k=\"$v\" ";
---
> 					$link .= $k.'="'.$v.'" ';
336,337d302
< 
< 			$link .= "/>";
341c306
< 			if ( strpos($href, '://') !== FALSE)
---
> 			if (preg_match('#^([a-z]+:)?//#i', $href))
356c321
< 			if ($media	!= '')
---
> 			if ($media !== '')
361c326
< 			if ($title	!= '')
---
> 			if ($title !== '')
365,366d329
< 
< 			$link .= '/>';
369,370c332
< 
< 		return $link;
---
> 		return $link."/>\n";
375a338,339
> if ( ! function_exists('meta'))
> {
379d342
<  * @access	public
380a344,346
> 	 * @param	string
> 	 * @param	string
> 	 * @param	string
383,384d348
< if ( ! function_exists('meta'))
< {
393c357
< 		else
---
> 		elseif (isset($name['name']))
396,397d359
< 			if (isset($name['name']))
< 			{
400d361
< 		}
405,408c366,369
< 			$type		= ( ! isset($meta['type']) OR $meta['type'] == 'name') ? 'name' : 'http-equiv';
< 			$name		= ( ! isset($meta['name']))		? ''	: $meta['name'];
< 			$content	= ( ! isset($meta['content']))	? ''	: $meta['content'];
< 			$newline	= ( ! isset($meta['newline']))	? "\n"	: $meta['newline'];
---
> 			$type		= (isset($meta['type']) && $meta['type'] !== 'name')	? 'http-equiv' : 'name';
> 			$name		= isset($meta['name'])					? $meta['name'] : '';
> 			$content	= isset($meta['content'])				? $meta['content'] : '';
> 			$newline	= isset($meta['newline'])				? $meta['newline'] : "\n";
418a380,381
> if ( ! function_exists('br'))
> {
420c383
<  * Generates non-breaking space entities based on number supplied
---
> 	 * Generates HTML BR tags based on number supplied
422,423c385,386
<  * @access	public
<  * @param	integer
---
> 	 * @deprecated	3.0.0	Use str_repeat() instead
> 	 * @param	int	$count	Number of times to repeat the tag
425a389,396
> 	function br($count = 1)
> 	{
> 		return str_repeat('<br />', $count);
> 	}
> }
> 
> // ------------------------------------------------------------------------
> 
427a399,405
> 	/**
> 	 * Generates non-breaking space entities based on number supplied
> 	 *
> 	 * @deprecated	3.0.0	Use str_repeat() instead
> 	 * @param	int
> 	 * @return	string
> 	 */
430c408
< 		return str_repeat("&nbsp;", $num);
---
> 		return str_repeat('&nbsp;', $num);
433,436d410
< 
< 
< /* End of file html_helper.php */
< /* Location: ./system/helpers/html_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/index.html opensourcepos/system/helpers/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/inflector_helper.php opensourcepos/system/helpers/inflector_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/directory_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/inflector_helper.html
30a52,53
> if ( ! function_exists('singular'))
> {
36,38c59,60
<  * @access	public
<  * @param	string
<  * @return	str
---
> 	 * @param	string	$str	Input string
> 	 * @return	string
40,41d61
< if ( ! function_exists('singular'))
< {
45a66,70
> 		if ( ! is_countable($result))
> 		{
> 			return $result;
> 		}
> 
73c98
< 			'/([^u])s$/'            => '\1',
---
> 			'/([^us])s$/'		=> '\1'
90a116,117
> if ( ! function_exists('plural'))
> {
96,99c123,124
<  * @access	public
<  * @param	string
<  * @param	bool
<  * @return	str
---
> 	 * @param	string	$str	Input string
> 	 * @return	string
101,103c126
< if ( ! function_exists('plural'))
< {
< 	function plural($str, $force = FALSE)
---
> 	function plural($str)
106a130,134
> 		if ( ! is_countable($result))
> 		{
> 			return $result;
> 		}
> 
107a136
> 			'/(quiz)$/'                => '\1zes',      // quizzes
122c151
< 			'/(alias|status|virus)/'   => '\1es',       // alias
---
> 			'/(alias|status|virus)$/'  => '\1es',       // alias
143a173,174
> if ( ! function_exists('camelize'))
> {
149,151c180,181
<  * @access	public
<  * @param	string
<  * @return	str
---
> 	 * @param	string	$str	Input string
> 	 * @return	string
153,154d182
< if ( ! function_exists('camelize'))
< {
157,159c185
< 		$str = 'x'.strtolower(trim($str));
< 		$str = ucwords(preg_replace('/[\s_]+/', ' ', $str));
< 		return substr(str_replace(' ', '', $str), 1);
---
> 		return strtolower($str[0]).substr(str_replace(' ', '', ucwords(preg_replace('/[\s_]+/', ' ', $str))), 1);
164a191,192
> if ( ! function_exists('underscore'))
> {
170,172c198,199
<  * @access	public
<  * @param	string
<  * @return	str
---
> 	 * @param	string	$str	Input string
> 	 * @return	string
174,175d200
< if ( ! function_exists('underscore'))
< {
178c203
< 		return preg_replace('/[\s]+/', '_', strtolower(trim($str)));
---
> 		return preg_replace('/[\s]+/', '_', trim(MB_ENABLED ? mb_strtolower($str) : strtolower($str)));
183a209,210
> if ( ! function_exists('humanize'))
> {
187c214
<  * Takes multiple words separated by underscores and changes them to spaces
---
> 	 * Takes multiple words separated by the separator and changes them to spaces
189,191c216,218
<  * @access	public
<  * @param	string
<  * @return	str
---
> 	 * @param	string	$str		Input string
> 	 * @param 	string	$separator	Input separator
> 	 * @return	string
193c220
< if ( ! function_exists('humanize'))
---
> 	function humanize($str, $separator = '_')
195,197c222
< 	function humanize($str)
< 	{
< 		return ucwords(preg_replace('/[_]+/', ' ', strtolower(trim($str))));
---
> 		return ucwords(preg_replace('/['.preg_quote($separator).']+/', ' ', trim(MB_ENABLED ? mb_strtolower($str) : strtolower($str))));
200a226
> // --------------------------------------------------------------------
202,203c228,246
< /* End of file inflector_helper.php */
< /* Location: ./system/helpers/inflector_helper.php */
\ No newline at end of file
---
> if ( ! function_exists('is_countable'))
> {
> 	/**
> 	 * Checks if the given word has a plural version.
> 	 *
> 	 * @param	string	$word	Word to check
> 	 * @return	bool
> 	 */
> 	function is_countable($word)
> 	{
> 		return ! in_array(
> 			strtolower($word),
> 			array(
> 				'equipment', 'information', 'rice', 'money',
> 				'species', 'series', 'fish', 'meta'
> 			)
> 		);
> 	}
> }
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/language_helper.php opensourcepos/system/helpers/language_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/language_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/language_helper.html
29a52,53
> if ( ! function_exists('lang'))
> {
35,37c59,61
<  * @access	public
<  * @param	string	the language line
<  * @param	string	the id of the form element
---
> 	 * @param	string	$line		The language line
> 	 * @param	string	$for		The "for" value (id of the form element)
> 	 * @param	array	$attributes	Any additional HTML attributes
40c64
< if ( ! function_exists('lang'))
---
> 	function lang($line, $for = '', $attributes = array())
42,45c66
< 	function lang($line, $id = '')
< 	{
< 		$CI =& get_instance();
< 		$line = $CI->lang->line($line);
---
> 		$line = get_instance()->lang->line($line);
47c68
< 		if ($id != '')
---
> 		if ($for !== '')
49c70
< 			$line = '<label for="'.$id.'">'.$line."</label>";
---
> 			$line = '<label for="'.$for.'"'._stringify_attributes($attributes).'>'.$line.'</label>';
55,58d75
< 
< // ------------------------------------------------------------------------
< /* End of file language_helper.php */
< /* Location: ./system/helpers/language_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/number_helper.php opensourcepos/system/helpers/number_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/number_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/number_helper.html
29a52,53
> if ( ! function_exists('byte_format'))
> {
33,34c57,58
<  * @access	public
<  * @param	mixed	// will be cast as int
---
> 	 * @param	mixed	will be cast as int
> 	 * @param	int
37,38d60
< if ( ! function_exists('byte_format'))
< {
73,76d94
< 
< 
< /* End of file number_helper.php */
< /* Location: ./system/helpers/number_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/path_helper.php opensourcepos/system/helpers/path_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/xml_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/path_helper.html
29a52,53
> if ( ! function_exists('set_realpath'))
> {
33d56
<  * @access	public
38,39d60
< if ( ! function_exists('set_realpath'))
< {
43c64
< 		if (preg_match("#^(http:\/\/|https:\/\/|www\.|ftp|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})#i", $path))
---
> 		if (preg_match('#^(http:\/\/|https:\/\/|www\.|ftp)#i', $path) OR filter_var($path, FILTER_VALIDATE_IP) === $path )
49c70
< 		if (function_exists('realpath') AND @realpath($path) !== FALSE)
---
> 		if (realpath($path) !== FALSE)
51c72
< 			$path = realpath($path).'/';
---
> 			$path = realpath($path);
53,60c74
< 
< 		// Add a trailing slash
< 		$path = preg_replace("#([^/])/*$#", "\\1/", $path);
< 
< 		// Make sure the path exists
< 		if ($check_existance == TRUE)
< 		{
< 			if ( ! is_dir($path))
---
> 		elseif ($check_existance && ! is_dir($path) && ! is_file($path))
64d77
< 		}
66c79,80
< 		return $path;
---
> 		// Add a trailing slash, if this is a directory
> 		return is_dir($path) ? rtrim($path, DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR : $path;
69,72d82
< 
< 
< /* End of file path_helper.php */
< /* Location: ./system/helpers/path_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/security_helper.php opensourcepos/system/helpers/security_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/security_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/security_helper.html
29a52,53
> if ( ! function_exists('xss_clean'))
> {
33d56
<  * @access	public
38,39d60
< if ( ! function_exists('xss_clean'))
< {
42,43c63
< 		$CI =& get_instance();
< 		return $CI->security->xss_clean($str, $is_image);
---
> 		return get_instance()->security->xss_clean($str, $is_image);
48a69,70
> if ( ! function_exists('sanitize_filename'))
> {
52d73
<  * @access	public
56,57d76
< if ( ! function_exists('sanitize_filename'))
< {
60,61c79
< 		$CI =& get_instance();
< 		return $CI->security->sanitize_filename($filename);
---
> 		return get_instance()->security->sanitize_filename($filename);
66a85,86
> if ( ! function_exists('do_hash'))
> {
70,71c90,93
<  * @access	public
<  * @param	string
---
> 	 * @todo	Remove in version 3.1+.
> 	 * @deprecated	3.0.0	Use PHP's native hash() instead.
> 	 * @param	string	$str
> 	 * @param	string	$type = 'sha1'
74,75d95
< if ( ! function_exists('do_hash'))
< {
78,82c98
< 		if ($type == 'sha1')
< 		{
< 			return sha1($str);
< 		}
< 		else
---
> 		if ( ! in_array(strtolower($type), hash_algos()))
84c100
< 			return md5($str);
---
> 			$type = 'md5';
85a102,103
> 
> 		return hash($type, $str);
90a109,110
> if ( ! function_exists('strip_image_tags'))
> {
94d113
<  * @access	public
98,99d116
< if ( ! function_exists('strip_image_tags'))
< {
102,105c119
< 		$str = preg_replace("#<img\s+.*?src\s*=\s*[\"'](.+?)[\"'].*?\>#", "\\1", $str);
< 		$str = preg_replace("#<img\s+.*?src\s*=\s*(.+?).*?\>#", "\\1", $str);
< 
< 		return $str;
---
> 		return get_instance()->security->strip_image_tags($str);
110a125,126
> if ( ! function_exists('encode_php_tags'))
> {
114d129
<  * @access	public
118,119d132
< if ( ! function_exists('encode_php_tags'))
< {
122c135
< 		return str_replace(array('<?php', '<?PHP', '<?', '?>'),  array('&lt;?php', '&lt;?PHP', '&lt;?', '?&gt;'), $str);
---
> 		return str_replace(array('<?', '?>'), array('&lt;?', '?&gt;'), $str);
125,128d137
< 
< 
< /* End of file security_helper.php */
< /* Location: ./system/helpers/security_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/smiley_helper.php opensourcepos/system/helpers/smiley_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,48
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/smiley_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/smiley_helper.html
>  * @deprecated	3.0.0	This helper is too specific for CI.
29a53,54
> if ( ! function_exists('smiley_js'))
> {
36d60
<  * @access	public
38a63
> 	 * @param	bool
41,42d65
< if ( ! function_exists('smiley_js'))
< {
49c71
< 		if ($alias != '' && ! is_array($alias))
---
> 		if ($alias !== '' && ! is_array($alias))
100,102c121
< 		else
< 		{
< 			if (is_array($alias))
---
> 		elseif (is_array($alias))
106,107c125
< 					$r .= 'smiley_map["'.$name.'"] = "'.$id.'";'."\n";
< 				}
---
> 				$r .= 'smiley_map["'.$name.'"] = "'.$id."\";\n";
111,118c129,131
< 		if ($inline)
< 		{
< 			return '<script type="text/javascript" charset="utf-8">/*<![CDATA[ */'.$r.'// ]]></script>';
< 		}
< 		else
< 		{
< 			return $r;
< 		}
---
> 		return ($inline)
> 			? '<script type="text/javascript" charset="utf-8">/*<![CDATA[ */'.$r.'// ]]></script>'
> 			: $r;
123a137,138
> if ( ! function_exists('get_clickable_smileys'))
> {
130d144
<  * @access	public
131a146
> 	 * @param	array
134,136c149
< if ( ! function_exists('get_clickable_smileys'))
< {
< 	function get_clickable_smileys($image_url, $alias = '', $smileys = NULL)
---
> 	function get_clickable_smileys($image_url, $alias = '')
144,145c156
< 
< 		if ( ! is_array($smileys))
---
> 		elseif (FALSE === ($smileys = _get_smiley_array()))
147,150c158
< 			if (FALSE === ($smileys = _get_smiley_array()))
< 			{
< 				return $smileys;
< 			}
---
> 			return FALSE;
168,169c176
< 			$link[] = "<a href=\"javascript:void(0);\" onclick=\"insert_smiley('".$key."', '".$alias."')\"><img src=\"".$image_url.$smileys[$key][0]."\" width=\"".$smileys[$key][1]."\" height=\"".$smileys[$key][2]."\" alt=\"".$smileys[$key][3]."\" style=\"border:0;\" /></a>";
< 
---
> 			$link[] = '<a href="javascript:void(0);" onclick="insert_smiley(\''.$key.'\', \''.$alias.'\')"><img src="'.$image_url.$smileys[$key][0].'" alt="'.$smileys[$key][3].'" style="width: '.$smileys[$key][1].'; height: '.$smileys[$key][2].'; border: 0;" /></a>';
178a186,187
> if ( ! function_exists('parse_smileys'))
> {
184d192
<  * @access	public
186a195
> 	 * @param	array
189,190d197
< if ( ! function_exists('parse_smileys'))
< {
193c200
< 		if ($image_url == '')
---
> 		if ($image_url === '' OR ( ! is_array($smileys) && FALSE === ($smileys = _get_smiley_array())))
198,205d204
< 		if ( ! is_array($smileys))
< 		{
< 			if (FALSE === ($smileys = _get_smiley_array()))
< 			{
< 				return $str;
< 			}
< 		}
< 
207c206
< 		$image_url = preg_replace("/(.+?)\/*$/", "\\1/",  $image_url);
---
> 		$image_url = rtrim($image_url, '/').'/';
211c210
< 			$str = str_replace($key, "<img src=\"".$image_url.$smileys[$key][0]."\" width=\"".$smileys[$key][1]."\" height=\"".$smileys[$key][2]."\" alt=\"".$smileys[$key][3]."\" style=\"border:0;\" />", $str);
---
> 			$str = str_replace($key, '<img src="'.$image_url.$smileys[$key][0].'" alt="'.$smileys[$key][3].'" style="width: '.$smileys[$key][1].'; height: '.$smileys[$key][2].'; border: 0;" />', $str);
219a219,220
> if ( ! function_exists('_get_smiley_array'))
> {
225d225
<  * @access	private
228,229d227
< if ( ! function_exists('_get_smiley_array'))
< {
232c230,232
< 		if (defined('ENVIRONMENT') AND file_exists(APPPATH.'config/'.ENVIRONMENT.'/smileys.php'))
---
> 		static $_smileys;
> 
> 		if ( ! is_array($_smileys))
234,236c234
< 		    include(APPPATH.'config/'.ENVIRONMENT.'/smileys.php');
< 		}
< 		elseif (file_exists(APPPATH.'config/smileys.php'))
---
> 			if (file_exists(APPPATH.'config/smileys.php'))
241c239
< 		if (isset($smileys) AND is_array($smileys))
---
> 			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/smileys.php'))
243c241
< 			return $smileys;
---
> 				include(APPPATH.'config/'.ENVIRONMENT.'/smileys.php');
245a244,246
> 			if (empty($smileys) OR ! is_array($smileys))
> 			{
> 				$_smileys = array();
248,250d248
< }
< 
< // ------------------------------------------------------------------------
252,272c250
< /**
<  * JS Insert Smiley
<  *
<  * Generates the javascript function needed to insert smileys into a form field
<  *
<  * DEPRECATED as of version 1.7.2, use smiley_js instead
<  *
<  * @access	public
<  * @param	string	form name
<  * @param	string	field name
<  * @return	string
<  */
< if ( ! function_exists('js_insert_smiley'))
< {
< 	function js_insert_smiley($form_name = '', $form_field = '')
< 	{
< 		return <<<EOF
< <script type="text/javascript">
< 	function insert_smiley(smiley)
< 	{
< 		document.{$form_name}.{$form_field}.value += " " + smiley;
---
> 			$_smileys = $smileys;
274,275c252,253
< </script>
< EOF;
---
> 
> 		return $_smileys;
278,281d255
< 
< 
< /* End of file smiley_helper.php */
< /* Location: ./system/helpers/smiley_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/string_helper.php opensourcepos/system/helpers/string_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/string_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/string_helper.html
29a52,53
> if ( ! function_exists('trim_slashes'))
> {
41c65,67
<  * @access	public
---
> 	 * @todo	Remove in version 3.1+.
> 	 * @deprecated	3.0.0	This is just an alias for PHP's native trim()
> 	 *
45,46d70
< if ( ! function_exists('trim_slashes'))
< {
54a79,80
> if ( ! function_exists('strip_slashes'))
> {
60d85
<  * @access	public
64,65d88
< if ( ! function_exists('strip_slashes'))
< {
68c91
< 		if (is_array($str))
---
> 		if ( ! is_array($str))
69a93,95
> 			return stripslashes($str);
> 		}
> 
74,78d99
< 		}
< 		else
< 		{
< 			$str = stripslashes($str);
< 		}
85a107,108
> if ( ! function_exists('strip_quotes'))
> {
91d113
<  * @access	public
95,96d116
< if ( ! function_exists('strip_quotes'))
< {
104a125,126
> if ( ! function_exists('quotes_to_entities'))
> {
110d131
<  * @access	public
114,115d134
< if ( ! function_exists('quotes_to_entities'))
< {
123a143,144
> if ( ! function_exists('reduce_double_slashes'))
> {
136d156
<  * @access	public
140,141d159
< if ( ! function_exists('reduce_double_slashes'))
< {
144c162
< 		return preg_replace("#(^|[^:])//+#", "\\1/", $str);
---
> 		return preg_replace('#(^|[^:])//+#', '\\1/', $str);
149a168,169
> if ( ! function_exists('reduce_multiples'))
> {
161d180
<  * @access	public
167,168d185
< if ( ! function_exists('reduce_multiples'))
< {
172,178c189
< 
< 		if ($trim === TRUE)
< 		{
< 			$str = trim($str, $character);
< 		}
< 
< 		return $str;
---
> 		return ($trim === TRUE) ? trim($str, $character) : $str;
183a195,196
> if ( ! function_exists('random_string'))
> {
189,191c202,203
<  * @access	public
<  * @param	string	type of random string.  basic, alpha, alunum, numeric, nozero, unique, md5, encrypt and sha1
<  * @param	integer	number of characters
---
> 	 * @param	string	type of random string.  basic, alpha, alnum, numeric, nozero, unique, md5, encrypt and sha1
> 	 * @param	int	number of characters
194,195d205
< if ( ! function_exists('random_string'))
< {
200,201c210,211
< 			case 'basic'	: return mt_rand();
< 				break;
---
> 			case 'basic':
> 				return mt_rand();
209c218,219
< 						case 'alpha'	:	$pool = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
---
> 					case 'alpha':
> 						$pool = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
211c221,222
< 						case 'alnum'	:	$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
---
> 					case 'alnum':
> 						$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
213c224,225
< 						case 'numeric'	:	$pool = '0123456789';
---
> 					case 'numeric':
> 						$pool = '0123456789';
215c227,228
< 						case 'nozero'	:	$pool = '123456789';
---
> 					case 'nozero':
> 						$pool = '123456789';
218,226c231,232
< 
< 					$str = '';
< 					for ($i=0; $i < $len; $i++)
< 					{
< 						$str .= substr($pool, mt_rand(0, strlen($pool) -1), 1);
< 					}
< 					return $str;
< 				break;
< 			case 'unique'	:
---
> 				return substr(str_shuffle(str_repeat($pool, ceil($len / strlen($pool)))), 0, $len);
> 			case 'unique': // todo: remove in 3.1+
230,231c235
< 				break;
< 			case 'encrypt'	:
---
> 			case 'encrypt': // todo: remove in 3.1+
233,238c237
< 
< 						$CI =& get_instance();
< 						$CI->load->helper('security');
< 
< 						return do_hash(uniqid(mt_rand(), TRUE), 'sha1');
< 				break;
---
> 				return sha1(uniqid(mt_rand(), TRUE));
244a244,245
> if ( ! function_exists('increment_string'))
> {
248,250c249,251
<  * @param   string  $str  required
<  * @param   string  $separator  What should the duplicate number be appended with
<  * @param   string  $first  Which number should be used for the first dupe increment
---
> 	 * @param	string	required
> 	 * @param	string	What should the duplicate number be appended with
> 	 * @param	string	Which number should be used for the first dupe increment
255,256c256
< 	preg_match('/(.+)'.$separator.'([0-9]+)$/', $str, $match);
< 
---
> 		preg_match('/(.+)'.preg_quote($separator, '/').'([0-9]+)$/', $str, $match);
258a259
> }
261a263,264
> if ( ! function_exists('alternator'))
> {
267d269
<  * @access	public
271,272d272
< if ( ! function_exists('alternator'))
< {
277c277
< 		if (func_num_args() == 0)
---
> 		if (func_num_args() === 0)
288a290,291
> if ( ! function_exists('repeater'))
> {
292,294c295,299
<  * @access	public
<  * @param	string
<  * @param	integer	number of repeats
---
> 	 * @todo	Remove in version 3.1+.
> 	 * @deprecated	3.0.0	This is just an alias for PHP's native str_repeat()
> 	 *
> 	 * @param	string	$data	String to repeat
> 	 * @param	int	$num	Number of repeats
297,298d301
< if ( ! function_exists('repeater'))
< {
301c304
< 		return (($num > 0) ? str_repeat($data, $num) : '');
---
> 		return ($num > 0) ? str_repeat($data, $num) : '';
304,307d306
< 
< 
< /* End of file string_helper.php */
< /* Location: ./system/helpers/string_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/text_helper.php opensourcepos/system/helpers/text_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/text_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/text_helper.html
29a52,53
> if ( ! function_exists('word_limiter'))
> {
35d58
<  * @access	public
37c60
<  * @param	integer
---
> 	 * @param	int
41,42d63
< if ( ! function_exists('word_limiter'))
< {
45c66
< 		if (trim($str) == '')
---
> 		if (trim($str) === '')
52c73
< 		if (strlen($str) == strlen($matches[0]))
---
> 		if (strlen($str) === strlen($matches[0]))
62a84,85
> if ( ! function_exists('character_limiter'))
> {
69d91
<  * @access	public
71c93
<  * @param	integer
---
> 	 * @param	int
75,76d96
< if ( ! function_exists('character_limiter'))
< {
79c99
< 		if (strlen($str) < $n)
---
> 		if (mb_strlen($str) < $n)
84c104,105
< 		$str = preg_replace("/\s+/", ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
---
> 		// a bit complicated, but faster than preg_replace with \s+
> 		$str = preg_replace('/ {2,}/', ' ', str_replace(array("\r", "\n", "\t", "\x0B", "\x0C"), ' ', $str));
86c107
< 		if (strlen($str) <= $n)
---
> 		if (mb_strlen($str) <= $n)
91c112
< 		$out = "";
---
> 		$out = '';
96c117
< 			if (strlen($out) >= $n)
---
> 			if (mb_strlen($out) >= $n)
99c120
< 				return (strlen($out) == strlen($str)) ? $out : $out.$end_char;
---
> 				return (mb_strlen($out) === mb_strlen($str)) ? $out : $out.$end_char;
106a128,129
> if ( ! function_exists('ascii_to_entities'))
> {
112,113c135
<  * @access	public
<  * @param	string
---
> 	 * @param	string	$str
116,117d137
< if ( ! function_exists('ascii_to_entities'))
< {
120d139
< 		$count	= 1;
122,124c141
< 		$temp	= array();
< 
< 		for ($i = 0, $s = strlen($str); $i < $s; $i++)
---
> 		for ($i = 0, $s = strlen($str) - 1, $count = 1, $temp = array(); $i <= $s; $i++)
134c151
< 				if (count($temp) == 1)
---
> 				if (count($temp) === 1)
144c161
< 				if (count($temp) == 0)
---
> 				if (count($temp) === 0)
151c168
< 				if (count($temp) == $count)
---
> 				if (count($temp) === $count)
153c170,172
< 					$number = ($count == 3) ? (($temp['0'] % 16) * 4096) + (($temp['1'] % 64) * 64) + ($temp['2'] % 64) : (($temp['0'] % 32) * 64) + ($temp['1'] % 64);
---
> 					$number = ($count === 3)
> 						? (($temp[0] % 16) * 4096) + (($temp[1] % 64) * 64) + ($temp[2] % 64)
> 						: (($temp[0] % 32) * 64) + ($temp[1] % 64);
158a178,182
> 				// If this is the last iteration, just output whatever we have
> 				elseif ($i === $s)
> 				{
> 					$out .= '&#'.implode(';', $temp).';';
> 				}
167a192,193
> if ( ! function_exists('entities_to_ascii'))
> {
173d198
<  * @access	public
178,179d202
< if ( ! function_exists('entities_to_ascii'))
< {
184c207
< 			for ($i = 0, $s = count($matches['0']); $i < $s; $i++)
---
> 			for ($i = 0, $s = count($matches[0]); $i < $s; $i++)
186,187c209
< 				$digits = $matches['1'][$i];
< 
---
> 				$digits = $matches[1][$i];
197,198c219
< 					$out .= chr(192 + (($digits - ($digits % 64)) / 64));
< 					$out .= chr(128 + ($digits % 64));
---
> 					$out .= chr(192 + (($digits - ($digits % 64)) / 64)).chr(128 + ($digits % 64));
202,204c223,225
< 					$out .= chr(224 + (($digits - ($digits % 4096)) / 4096));
< 					$out .= chr(128 + ((($digits % 4096) - ($digits % 64)) / 64));
< 					$out .= chr(128 + ($digits % 64));
---
> 					$out .= chr(224 + (($digits - ($digits % 4096)) / 4096))
> 						.chr(128 + ((($digits % 4096) - ($digits % 64)) / 64))
> 						.chr(128 + ($digits % 64));
207c228
< 				$str = str_replace($matches['0'][$i], $out, $str);
---
> 				$str = str_replace($matches[0][$i], $out, $str);
213,215c234,238
< 			$str = str_replace(array("&amp;", "&lt;", "&gt;", "&quot;", "&apos;", "&#45;"),
< 								array("&","<",">","\"", "'", "-"),
< 								$str);
---
> 			return str_replace(
> 				array('&amp;', '&lt;', '&gt;', '&quot;', '&apos;', '&#45;'),
> 				array('&', '<', '>', '"', "'", '-'),
> 				$str
> 			);
223a247,248
> if ( ! function_exists('word_censor'))
> {
231d255
<  * @access	public
233c257
<  * @param	string	the array of censoered words
---
> 	 * @param	string	the array of censored words
237,238d260
< if ( ! function_exists('word_censor'))
< {
256c278,279
< 			if ($replacement != '')
---
> 			$badword = str_replace('\*', '\w*?', preg_quote($badword, '/'));
> 			if ($replacement !== '')
258c281,298
< 				$str = preg_replace("/({$delim})(".str_replace('\*', '\w*?', preg_quote($badword, '/')).")({$delim})/i", "\\1{$replacement}\\3", $str);
---
> 				$str = preg_replace(
> 					"/({$delim})(".$badword.")({$delim})/i",
> 					"\\1{$replacement}\\3",
> 					$str
> 				);
> 			}
> 			elseif (preg_match_all("/{$delim}(".$badword."){$delim}/i", $str, $matches, PREG_PATTERN_ORDER | PREG_OFFSET_CAPTURE))
> 			{
> 				$matches = $matches[1];
> 				for ($i = count($matches) - 1; $i >= 0; $i--)
> 				{
> 					$length = strlen($matches[$i][0]);
> 					$str = substr_replace(
> 						$str,
> 						str_repeat('#', $length),
> 						$matches[$i][1],
> 						$length
> 					);
260,262d299
< 			else
< 			{
< 				$str = preg_replace("/({$delim})(".str_replace('\*', '\w*?', preg_quote($badword, '/')).")({$delim})/ie", "'\\1'.str_repeat('#', strlen('\\2')).'\\3'", $str);
271a309,310
> if ( ! function_exists('highlight_code'))
> {
277d315
<  * @access	public
281,282d318
< if ( ! function_exists('highlight_code'))
< {
285,293c321,332
< 		// The highlight string function encodes and highlights
< 		// brackets so we need them to start raw
< 		$str = str_replace(array('&lt;', '&gt;'), array('<', '>'), $str);
< 
< 		// Replace any existing PHP tags to temporary markers so they don't accidentally
< 		// break the string out of PHP, and thus, thwart the highlighting.
< 
< 		$str = str_replace(array('<?', '?>', '<%', '%>', '\\', '</script>'),
< 							array('phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'), $str);
---
> 		/* The highlight string function encodes and highlights
> 		 * brackets so we need them to start raw.
> 		 *
> 		 * Also replace any existing PHP tags to temporary markers
> 		 * so they don't accidentally break the string out of PHP,
> 		 * and thus, thwart the highlighting.
> 		 */
> 		$str = str_replace(
> 			array('&lt;', '&gt;', '<?', '?>', '<%', '%>', '\\', '</script>'),
> 			array('<', '>', 'phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'),
> 			$str
> 		);
297,309c336
< 		$str = '<?php '.$str.' ?>'; // <?
< 
< 		// All the magic happens here, baby!
< 		$str = highlight_string($str, TRUE);
< 
< 		// Prior to PHP 5, the highligh function used icky <font> tags
< 		// so we'll replace them with <span> tags.
< 
< 		if (abs(PHP_VERSION) < 5)
< 		{
< 			$str = str_replace(array('<font ', '</font>'), array('<span ', '</span>'), $str);
< 			$str = preg_replace('#color="(.*?)"#', 'style="color: \\1"', $str);
< 		}
---
> 		$str = highlight_string('<?php '.$str.' ?>', TRUE);
312,314c339,351
< 		$str = preg_replace('/<span style="color: #([A-Z0-9]+)">&lt;\?php(&nbsp;| )/i', '<span style="color: #$1">', $str);
< 		$str = preg_replace('/(<span style="color: #[A-Z0-9]+">.*?)\?&gt;<\/span>\n<\/span>\n<\/code>/is', "$1</span>\n</span>\n</code>", $str);
< 		$str = preg_replace('/<span style="color: #[A-Z0-9]+"\><\/span>/i', '', $str);
---
> 		$str = preg_replace(
> 			array(
> 				'/<span style="color: #([A-Z0-9]+)">&lt;\?php(&nbsp;| )/i',
> 				'/(<span style="color: #[A-Z0-9]+">.*?)\?&gt;<\/span>\n<\/span>\n<\/code>/is',
> 				'/<span style="color: #[A-Z0-9]+"\><\/span>/i'
> 			),
> 			array(
> 				'<span style="color: #$1">',
> 				"$1</span>\n</span>\n</code>",
> 				''
> 			),
> 			$str
> 		);
317,320c354,358
< 		$str = str_replace(array('phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'),
< 							array('&lt;?', '?&gt;', '&lt;%', '%&gt;', '\\', '&lt;/script&gt;'), $str);
< 
< 		return $str;
---
> 		return str_replace(
> 			array('phptagopen', 'phptagclose', 'asptagopen', 'asptagclose', 'backslashtmp', 'scriptclose'),
> 			array('&lt;?', '?&gt;', '&lt;%', '%&gt;', '\\', '&lt;/script&gt;'),
> 			$str
> 		);
325a364,365
> if ( ! function_exists('highlight_phrase'))
> {
331,335c371,374
<  * @access	public
<  * @param	string	the text string
<  * @param	string	the phrase you'd like to highlight
<  * @param	string	the openging tag to precede the phrase with
<  * @param	string	the closing tag to end the phrase with
---
> 	 * @param	string	$str		the text string
> 	 * @param	string	$phrase		the phrase you'd like to highlight
> 	 * @param	string	$tag_open	the openging tag to precede the phrase with
> 	 * @param	string	$tag_close	the closing tag to end the phrase with
338,340c377
< if ( ! function_exists('highlight_phrase'))
< {
< 	function highlight_phrase($str, $phrase, $tag_open = '<strong>', $tag_close = '</strong>')
---
> 	function highlight_phrase($str, $phrase, $tag_open = '<mark>', $tag_close = '</mark>')
342,352c379,381
< 		if ($str == '')
< 		{
< 			return '';
< 		}
< 
< 		if ($phrase != '')
< 		{
< 			return preg_replace('/('.preg_quote($phrase, '/').')/i', $tag_open."\\1".$tag_close, $str);
< 		}
< 
< 		return $str;
---
> 		return ($str !== '' && $phrase !== '')
> 			? preg_replace('/('.preg_quote($phrase, '/').')/i'.(UTF8_ENABLED ? 'u' : ''), $tag_open.'\\1'.$tag_close, $str)
> 			: $str;
357a387,388
> if ( ! function_exists('convert_accented_characters'))
> {
361,362c392
<  * @access	public
<  * @param	string	the text string
---
> 	 * @param	string	$str	Input string
365,366d394
< if ( ! function_exists('convert_accented_characters'))
< {
369c397,399
< 		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php'))
---
> 		static $array_from, $array_to;
> 
> 		if ( ! is_array($array_from))
371,373c401
< 			include(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php');
< 		}
< 		elseif (is_file(APPPATH.'config/foreign_chars.php'))
---
> 			if (file_exists(APPPATH.'config/foreign_chars.php'))
378c406,411
< 		if ( ! isset($foreign_characters))
---
> 			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php'))
> 			{
> 				include(APPPATH.'config/'.ENVIRONMENT.'/foreign_chars.php');
> 			}
> 
> 			if (empty($foreign_characters) OR ! is_array($foreign_characters))
379a413,415
> 				$array_from = array();
> 				$array_to = array();
> 
383c419,423
< 		return preg_replace(array_keys($foreign_characters), array_values($foreign_characters), $str);
---
> 			$array_from = array_keys($foreign_characters);
> 			$array_to = array_values($foreign_characters);
> 		}
> 
> 		return preg_replace($array_from, $array_to, $str);
388a429,430
> if ( ! function_exists('word_wrap'))
> {
396,398c438,439
<  * @access	public
<  * @param	string	the text string
<  * @param	integer	the number of characters to wrap at
---
> 	 * @param	string	$str		the text string
> 	 * @param	int	$charlim = 76	the number of characters to wrap at
401,403c442
< if ( ! function_exists('word_wrap'))
< {
< 	function word_wrap($str, $charlim = '76')
---
> 	function word_wrap($str, $charlim = 76)
405,407c444,445
< 		// Se the character limit
< 		if ( ! is_numeric($charlim))
< 			$charlim = 76;
---
> 		// Set the character limit
> 		is_numeric($charlim) OR $charlim = 76;
410c448
< 		$str = preg_replace("| +|", " ", $str);
---
> 		$str = preg_replace('| +|', ' ', $str);
421c459
< 		if (preg_match_all("|(\{unwrap\}.+?\{/unwrap\})|s", $str, $matches))
---
> 		if (preg_match_all('|\{unwrap\}(.+?)\{/unwrap\}|s', $str, $matches))
423c461
< 			for ($i = 0; $i < count($matches['0']); $i++)
---
> 			for ($i = 0, $c = count($matches[0]); $i < $c; $i++)
425,426c463,464
< 				$unwrap[] = $matches['1'][$i];
< 				$str = str_replace($matches['1'][$i], "{{unwrapped".$i."}}", $str);
---
> 				$unwrap[] = $matches[1][$i];
> 				$str = str_replace($matches[0][$i], '{{unwrapped'.$i.'}}', $str);
436c474
< 		$output = "";
---
> 		$output = '';
441c479
< 			if (strlen($line) <= $charlim)
---
> 			if (mb_strlen($line) <= $charlim)
448c486
< 			while ((strlen($line)) > $charlim)
---
> 			while (mb_strlen($line) > $charlim)
451c489
< 				if (preg_match("!\[url.+\]|://|wwww.!", $line))
---
> 				if (preg_match('!\[url.+\]|://|www\.!', $line))
457,458c495,496
< 				$temp .= substr($line, 0, $charlim-1);
< 				$line = substr($line, $charlim-1);
---
> 				$temp .= mb_substr($line, 0, $charlim - 1);
> 				$line = mb_substr($line, $charlim - 1);
463c501
< 			if ($temp != '')
---
> 			if ($temp !== '')
465c503
< 				$output .= $temp."\n".$line;
---
> 				$output .= $temp."\n".$line."\n";
469c507
< 				$output .= $line;
---
> 				$output .= $line."\n";
471,472d508
< 
< 			$output .= "\n";
480c516
< 				$output = str_replace("{{unwrapped".$key."}}", $val, $output);
---
> 				$output = str_replace('{{unwrapped'.$key.'}}', $val, $output);
484,486d519
< 		// Remove the unwrap tags
< 		$output = str_replace(array('{unwrap}', '{/unwrap}'), '', $output);
< 
492a526,527
> if ( ! function_exists('ellipsize'))
> {
499c534
<  * @param	integer		max length of string
---
> 	 * @param	int	max length of string
504,505d538
< if ( ! function_exists('ellipsize'))
< {
512c545
< 		if (strlen($str) <= $max_length)
---
> 		if (mb_strlen($str) <= $max_length)
517,518c550
< 		$beg = substr($str, 0, floor($max_length * $position));
< 
---
> 		$beg = mb_substr($str, 0, floor($max_length * $position));
523c555
< 			$end = substr($str, 0, -($max_length - strlen($beg)));
---
> 			$end = mb_substr($str, 0, -($max_length - mb_strlen($beg)));
527c559
< 			$end = substr($str, -($max_length - strlen($beg)));
---
> 			$end = mb_substr($str, -($max_length - mb_strlen($beg)));
533,535d564
< 
< /* End of file text_helper.php */
< /* Location: ./system/helpers/text_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/typography_helper.php opensourcepos/system/helpers/typography_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/typography_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/typography_helper.html
29a52,53
> if ( ! function_exists('nl2br_except_pre'))
> {
33d56
<  * @access	public
37,38d59
< if ( ! function_exists('nl2br_except_pre'))
< {
50a70,71
> if ( ! function_exists('auto_typography'))
> {
54,58c75,76
<  *
<  * @access	public
<  * @param	string
<  * @param	bool	whether to allow javascript event handlers
<  * @param	bool	whether to reduce multiple instances of double newlines to two
---
> 	 * @param	string	$str
> 	 * @param	bool	$reduce_linebreaks = FALSE	whether to reduce multiple instances of double newlines to two
61,63c79
< if ( ! function_exists('auto_typography'))
< {
< 	function auto_typography($str, $strip_js_event_handlers = TRUE, $reduce_linebreaks = FALSE)
---
> 	function auto_typography($str, $reduce_linebreaks = FALSE)
67c83
< 		return $CI->typography->auto_typography($str, $strip_js_event_handlers, $reduce_linebreaks);
---
> 		return $CI->typography->auto_typography($str, $reduce_linebreaks);
73a89,90
> if ( ! function_exists('entity_decode'))
> {
79c96
<  * @access	public
---
> 	 * @param	string
83,85c100
< if ( ! function_exists('entity_decode'))
< {
< 	function entity_decode($str, $charset='UTF-8')
---
> 	function entity_decode($str, $charset = NULL)
87,88c102
< 		global $SEC;
< 		return $SEC->entity_decode($str, $charset);
---
> 		return get_instance()->security->entity_decode($str, $charset);
91,93d104
< 
< /* End of file typography_helper.php */
< /* Location: ./system/helpers/typography_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/url_helper.php opensourcepos/system/helpers/url_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/url_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/url_helper.html
29a52,53
> if ( ! function_exists('site_url'))
> {
36,37c60,61
<  * @access	public
<  * @param	string
---
> 	 * @param	string	$uri
> 	 * @param	string	$protocol
40,42c64
< if ( ! function_exists('site_url'))
< {
< 	function site_url($uri = '')
---
> 	function site_url($uri = '', $protocol = NULL)
44,45c66
< 		$CI =& get_instance();
< 		return $CI->config->site_url($uri);
---
> 		return get_instance()->config->site_url($uri, $protocol);
50a72,73
> if ( ! function_exists('base_url'))
> {
58,59c81,82
<  * @access	public
<  * @param string
---
> 	 * @param	string	$uri
> 	 * @param	string	$protocol
62c85
< if ( ! function_exists('base_url'))
---
> 	function base_url($uri = '', $protocol = NULL)
64,67c87
< 	function base_url($uri = '')
< 	{
< 		$CI =& get_instance();
< 		return $CI->config->base_url($uri);
---
> 		return get_instance()->config->base_url($uri, $protocol);
72a93,94
> if ( ! function_exists('current_url'))
> {
79d100
<  * @access	public
82,83d102
< if ( ! function_exists('current_url'))
< {
91a111,113
> 
> if ( ! function_exists('uri_string'))
> {
97d118
<  * @access	public
100,101d120
< if ( ! function_exists('uri_string'))
< {
104,105c123
< 		$CI =& get_instance();
< 		return $CI->uri->uri_string();
---
> 		return get_instance()->uri->uri_string();
110a129,130
> if ( ! function_exists('index_page'))
> {
116d135
<  * @access	public
119,120d137
< if ( ! function_exists('index_page'))
< {
123,124c140
< 		$CI =& get_instance();
< 		return $CI->config->item('index_page');
---
> 		return get_instance()->config->item('index_page');
129a146,147
> if ( ! function_exists('anchor'))
> {
135d152
<  * @access	public
141,142d157
< if ( ! function_exists('anchor'))
< {
147,154c162,164
< 		if ( ! is_array($uri))
< 		{
< 			$site_url = ( ! preg_match('!^\w+://! i', $uri)) ? site_url($uri) : $uri;
< 		}
< 		else
< 		{
< 			$site_url = site_url($uri);
< 		}
---
> 		$site_url = is_array($uri)
> 			? site_url($uri)
> 			: (preg_match('#^(\w+:)?//#i', $uri) ? $uri : site_url($uri));
156c166
< 		if ($title == '')
---
> 		if ($title === '')
161c171
< 		if ($attributes != '')
---
> 		if ($attributes !== '')
163c173
< 			$attributes = _parse_attributes($attributes);
---
> 			$attributes = _stringify_attributes($attributes);
171a182,183
> if ( ! function_exists('anchor_popup'))
> {
178d189
<  * @access	public
184,185d194
< if ( ! function_exists('anchor_popup'))
< {
188a198
> 		$site_url = preg_match('#^(\w+:)?//#i', $uri) ? $uri : site_url($uri);
190,192c200
< 		$site_url = ( ! preg_match('!^\w+://! i', $uri)) ? site_url($uri) : $uri;
< 
< 		if ($title == '')
---
> 		if ($title === '')
199c207
< 			return "<a href='javascript:void(0);' onclick=\"window.open('".$site_url."', '_blank');\">".$title."</a>";
---
> 			return '<a href="'.$site_url.'" onclick="window.open(\''.$site_url."', '_blank'); return false;\">".$title.'</a>';
204,205c212
< 			$attributes = array();
< 		}
---
> 			$attributes = array($attributes);
207c214,217
< 		foreach (array('width' => '800', 'height' => '600', 'scrollbars' => 'yes', 'status' => 'yes', 'resizable' => 'yes', 'screenx' => '0', 'screeny' => '0', ) as $key => $val)
---
> 			// Ref: http://www.w3schools.com/jsref/met_win_open.asp
> 			$window_name = '_blank';
> 		}
> 		elseif ( ! empty($attributes['window_name']))
209,210c219,224
< 			$atts[$key] = ( ! isset($attributes[$key])) ? $val : $attributes[$key];
< 			unset($attributes[$key]);
---
> 			$window_name = $attributes['window_name'];
> 			unset($attributes['window_name']);
> 		}
> 		else
> 		{
> 			$window_name = '_blank';
213c227
< 		if ($attributes != '')
---
> 		foreach (array('width' => '800', 'height' => '600', 'scrollbars' => 'yes', 'menubar' => 'no', 'status' => 'yes', 'resizable' => 'yes', 'screenx' => '0', 'screeny' => '0') as $key => $val)
215c229,230
< 			$attributes = _parse_attributes($attributes);
---
> 			$atts[$key] = isset($attributes[$key]) ? $attributes[$key] : $val;
> 			unset($attributes[$key]);
218c233,237
< 		return "<a href='javascript:void(0);' onclick=\"window.open('".$site_url."', '_blank', '"._parse_attributes($atts, TRUE)."');\"$attributes>".$title."</a>";
---
> 		$attributes = _stringify_attributes($attributes);
> 
> 		return '<a href="'.$site_url
> 			.'" onclick="window.open(\''.$site_url."', '".$window_name."', '"._stringify_attributes($atts, TRUE)."'); return false;\""
> 			.$attributes.'>'.$title.'</a>';
223a243,244
> if ( ! function_exists('mailto'))
> {
227d247
<  * @access	public
233,234d252
< if ( ! function_exists('mailto'))
< {
239c257
< 		if ($title == "")
---
> 		if ($title === '')
244,246c262
< 		$attributes = _parse_attributes($attributes);
< 
< 		return '<a href="mailto:'.$email.'"'.$attributes.'>'.$title.'</a>';
---
> 		return '<a href="mailto:'.$email.'"'._stringify_attributes($attributes).'>'.$title.'</a>';
251a268,269
> if ( ! function_exists('safe_mailto'))
> {
257d274
<  * @access	public
263,264d279
< if ( ! function_exists('safe_mailto'))
< {
269c284
< 		if ($title == "")
---
> 		if ($title === '')
274,277c289
< 		for ($i = 0; $i < 16; $i++)
< 		{
< 			$x[] = substr('<a href="mailto:', $i, 1);
< 		}
---
> 		$x = str_split('<a href="mailto:', 1);
279c291
< 		for ($i = 0; $i < strlen($email); $i++)
---
> 		for ($i = 0, $l = strlen($email); $i < $l; $i++)
281c293
< 			$x[] = "|".ord(substr($email, $i, 1));
---
> 			$x[] = '|'.ord($email[$i]);
286c298
< 		if ($attributes != '')
---
> 		if ($attributes !== '')
293c305
< 					for ($i = 0; $i < strlen($val); $i++)
---
> 					for ($i = 0, $l = strlen($val); $i < $l; $i++)
295c307
< 						$x[] = "|".ord(substr($val, $i, 1));
---
> 						$x[] = '|'.ord($val[$i]);
302c314
< 				for ($i = 0; $i < strlen($attributes); $i++)
---
> 				for ($i = 0, $l = strlen($attributes); $i < $l; $i++)
304c316
< 					$x[] = substr($attributes, $i, 1);
---
> 					$x[] = $attributes[$i];
312c324
< 		for ($i = 0; $i < strlen($title); $i++)
---
> 		for ($i = 0, $l = strlen($title); $i < $l; $i++)
318c330
< 				$x[] = "|".$ordinal;
---
> 				$x[] = '|'.$ordinal;
322c334
< 				if (count($temp) == 0)
---
> 				if (count($temp) === 0)
328c340
< 				if (count($temp) == $count)
---
> 				if (count($temp) === $count)
330,331c342,345
< 					$number = ($count == 3) ? (($temp['0'] % 16) * 4096) + (($temp['1'] % 64) * 64) + ($temp['2'] % 64) : (($temp['0'] % 32) * 64) + ($temp['1'] % 64);
< 					$x[] = "|".$number;
---
> 					$number = ($count === 3)
> 							? (($temp[0] % 16) * 4096) + (($temp[1] % 64) * 64) + ($temp[2] % 64)
> 							: (($temp[0] % 32) * 64) + ($temp[1] % 64);
> 					$x[] = '|'.$number;
341d354
< 		ob_start();
343,348c356,363
< 	?><script type="text/javascript">
< 	//<![CDATA[
< 	var l=new Array();
< 	<?php
< 	$i = 0;
< 	foreach ($x as $val){ ?>l[<?php echo $i++; ?>]='<?php echo $val; ?>';<?php } ?>
---
> 		$output = "<script type=\"text/javascript\">\n"
> 			."\t//<![CDATA[\n"
> 			."\tvar l=new Array();\n";
> 
> 		for ($i = 0, $c = count($x); $i < $c; $i++)
> 		{
> 			$output .= "\tl[".$i."] = '".$x[$i]."';\n";
> 		}
350,358c365,372
< 	for (var i = l.length-1; i >= 0; i=i-1){
< 	if (l[i].substring(0, 1) == '|') document.write("&#"+unescape(l[i].substring(1))+";");
< 	else document.write(unescape(l[i]));}
< 	//]]>
< 	</script><?php
< 
< 		$buffer = ob_get_contents();
< 		ob_end_clean();
< 		return $buffer;
---
> 		$output .= "\n\tfor (var i = l.length-1; i >= 0; i=i-1) {\n"
> 			."\t\tif (l[i].substring(0, 1) === '|') document.write(\"&#\"+unescape(l[i].substring(1))+\";\");\n"
> 			."\t\telse document.write(unescape(l[i]));\n"
> 			."\t}\n"
> 			."\t//]]>\n"
> 			.'</script>';
> 
> 		return $output;
363a378,379
> if ( ! function_exists('auto_link'))
> {
372d387
<  * @access	public
378,379d392
< if ( ! function_exists('auto_link'))
< {
382,384c395,396
< 		if ($type != 'email')
< 		{
< 			if (preg_match_all("#(^|\s|\()((http(s?)://)|(www\.))(\w+[^\s\)\<]+)#i", $str, $matches))
---
> 		// Find and replace any URLs.
> 		if ($type !== 'email' && preg_match_all('#(\w*://|www\.)[^\s()<>;]+\w#i', $str, $matches, PREG_OFFSET_CAPTURE | PREG_SET_ORDER))
386c398,399
< 				$pop = ($popup == TRUE) ? " target=\"_blank\" " : "";
---
> 			// Set our target HTML if using popup links.
> 			$target = ($popup) ? ' target="_blank"' : '';
388c401,404
< 				for ($i = 0; $i < count($matches['0']); $i++)
---
> 			// We process the links in reverse order (last -> first) so that
> 			// the returned string offsets from preg_match_all() are not
> 			// moved as we add more HTML.
> 			foreach (array_reverse($matches) as $match)
390,406c406,412
< 					$period = '';
< 					if (preg_match("|\.$|", $matches['6'][$i]))
< 					{
< 						$period = '.';
< 						$matches['6'][$i] = substr($matches['6'][$i], 0, -1);
< 					}
< 
< 					$str = str_replace($matches['0'][$i],
< 										$matches['1'][$i].'<a href="http'.
< 										$matches['4'][$i].'://'.
< 										$matches['5'][$i].
< 										$matches['6'][$i].'"'.$pop.'>http'.
< 										$matches['4'][$i].'://'.
< 										$matches['5'][$i].
< 										$matches['6'][$i].'</a>'.
< 										$period, $str);
< 				}
---
> 				// $match[0] is the matched string/link
> 				// $match[1] is either a protocol prefix or 'www.'
> 				//
> 				// With PREG_OFFSET_CAPTURE, both of the above is an array,
> 				// where the actual value is held in [0] and its offset at the [1] index.
> 				$a = '<a href="'.(strpos($match[1][0], '/') ? '' : 'http://').$match[0][0].'"'.$target.'>'.$match[0][0].'</a>';
> 				$str = substr_replace($str, $a, $match[0][1], strlen($match[0][0]));
410c416,417
< 		if ($type != 'url')
---
> 		// Find and replace any emails.
> 		if ($type !== 'url' && preg_match_all('#([\w\.\-\+]+@[a-z0-9\-]+\.[a-z0-9\-\.]+[^[:punct:]\s])#i', $str, $matches, PREG_OFFSET_CAPTURE))
412c419
< 			if (preg_match_all("/([a-zA-Z0-9_\.\-\+]+)@([a-zA-Z0-9\-]+)\.([a-zA-Z0-9\-\.]*)/i", $str, $matches))
---
> 			foreach (array_reverse($matches[0]) as $match)
414c421
< 				for ($i = 0; $i < count($matches['0']); $i++)
---
> 				if (filter_var($match[0], FILTER_VALIDATE_EMAIL) !== FALSE)
416,423c423
< 					$period = '';
< 					if (preg_match("|\.$|", $matches['3'][$i]))
< 					{
< 						$period = '.';
< 						$matches['3'][$i] = substr($matches['3'][$i], 0, -1);
< 					}
< 
< 					$str = str_replace($matches['0'][$i], safe_mailto($matches['1'][$i].'@'.$matches['2'][$i].'.'.$matches['3'][$i]).$period, $str);
---
> 					$str = substr_replace($str, safe_mailto($match[0]), $match[1], strlen($match[0]));
433a434,435
> if ( ! function_exists('prep_url'))
> {
439d440
<  * @access	public
443,444d443
< if ( ! function_exists('prep_url'))
< {
447c446
< 		if ($str == 'http://' OR $str == '')
---
> 		if ($str === 'http://' OR $str === '')
456c455
< 			$str = 'http://'.$str;
---
> 			return 'http://'.$str;
464a464,465
> if ( ! function_exists('url_title'))
> {
472,474c473,477
<  * @access	public
<  * @param	string	the string
<  * @param	string	the separator
---
> 	 * @todo	Remove old 'dash' and 'underscore' usage in 3.1+.
> 	 * @param	string	$str		Input string
> 	 * @param	string	$separator	Word separator
> 	 *			(usually '-' or '_')
> 	 * @param	bool	$lowercase	Whether to transform the output string to lowercase
477,478d479
< if ( ! function_exists('url_title'))
< {
481c482
< 		if ($separator == 'dash') 
---
> 		if ($separator === 'dash')
485c486
< 		else if ($separator == 'underscore')
---
> 		elseif ($separator === 'underscore')
490c491
< 		$q_separator = preg_quote($separator);
---
> 		$q_separator = preg_quote($separator, '#');
494c495
< 			'[^a-z0-9 _-]'          => '',
---
> 			'[^\w\d _-]'		=> '',
503c503
< 			$str = preg_replace("#".$key."#i", $val, $str);
---
> 			$str = preg_replace('#'.$key.'#i'.(UTF8_ENABLED ? 'u' : ''), $val, $str);
511c511
< 		return trim($str, $separator);
---
> 		return trim(trim($str, $separator));
516a517,518
> if ( ! function_exists('redirect'))
> {
524,527c526,530
<  * @access	public
<  * @param	string	the URL
<  * @param	string	the method: location or redirect
<  * @return	string
---
> 	 * @param	string	$uri	URL
> 	 * @param	string	$method	Redirect method
> 	 *			'auto', 'location' or 'refresh'
> 	 * @param	int	$code	HTTP Response status code
> 	 * @return	void
529,531c532
< if ( ! function_exists('redirect'))
< {
< 	function redirect($uri = '', $method = 'location', $http_response_code = 302)
---
> 	function redirect($uri = '', $method = 'auto', $code = NULL)
533c534
< 		if ( ! preg_match('#^https?://#i', $uri))
---
> 		if ( ! preg_match('#^(\w+:)?//#i', $uri))
538c539,540
< 		switch($method)
---
> 		// IIS environment likely? Use 'refresh' for better compatibility
> 		if ($method === 'auto' && isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'Microsoft-IIS') !== FALSE)
540,546c542
< 			case 'refresh'	: header("Refresh:0;url=".$uri);
< 				break;
< 			default			: header("Location: ".$uri, TRUE, $http_response_code);
< 				break;
< 		}
< 		exit;
< 	}
---
> 			$method = 'refresh';
548,571c544
< 
< // ------------------------------------------------------------------------
< 
< /**
<  * Parse out the attributes
<  *
<  * Some of the functions use this
<  *
<  * @access	private
<  * @param	array
<  * @param	bool
<  * @return	string
<  */
< if ( ! function_exists('_parse_attributes'))
< {
< 	function _parse_attributes($attributes, $javascript = FALSE)
< 	{
< 		if (is_string($attributes))
< 		{
< 			return ($attributes != '') ? ' '.$attributes : '';
< 		}
< 
< 		$att = '';
< 		foreach ($attributes as $key => $val)
---
> 		elseif ($method !== 'refresh' && (empty($code) OR ! is_numeric($code)))
573c546
< 			if ($javascript == TRUE)
---
> 			if (isset($_SERVER['SERVER_PROTOCOL'], $_SERVER['REQUEST_METHOD']) && $_SERVER['SERVER_PROTOCOL'] === 'HTTP/1.1')
575c548,550
< 				$att .= $key . '=' . $val . ',';
---
> 				$code = ($_SERVER['REQUEST_METHOD'] !== 'GET')
> 					? 303	// reference: http://en.wikipedia.org/wiki/Post/Redirect/Get
> 					: 307;
579c554
< 				$att .= ' ' . $key . '="' . $val . '"';
---
> 				$code = 302;
583c558
< 		if ($javascript == TRUE AND $att != '')
---
> 		switch ($method)
585c560,565
< 			$att = substr($att, 0, -1);
---
> 			case 'refresh':
> 				header('Refresh:0;url='.$uri);
> 				break;
> 			default:
> 				header('Location: '.$uri, TRUE, $code);
> 				break;
587,588c567
< 
< 		return $att;
---
> 		exit;
591,594d569
< 
< 
< /* End of file url_helper.php */
< /* Location: ./system/helpers/url_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/helpers/xml_helper.php opensourcepos/system/helpers/xml_helper.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/xml_helper.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/helpers/xml_helper.html
29a52,53
> if ( ! function_exists('xml_convert'))
> {
33d56
<  * @access	public
34a58
> 	 * @param	bool
37,38d60
< if ( ! function_exists('xml_convert'))
< {
45c67
< 		$str = preg_replace("/&#(\d+);/", "$temp\\1;", $str);
---
> 		$str = preg_replace('/&#(\d+);/', $temp.'\\1;', $str);
49c71
< 			$str = preg_replace("/&(\w+);/",  "$temp\\1;", $str);
---
> 			$str = preg_replace('/&(\w+);/', $temp.'\\1;', $str);
52,54c74,78
< 		$str = str_replace(array("&","<",">","\"", "'", "-"),
< 							array("&amp;", "&lt;", "&gt;", "&quot;", "&apos;", "&#45;"),
< 							$str);
---
> 		$str = str_replace(
> 			array('&', '<', '>', '"', "'", '-'),
> 			array('&amp;', '&lt;', '&gt;', '&quot;', '&apos;', '&#45;'),
> 			$str
> 		);
57c81
< 		$str = preg_replace("/$temp(\d+);/","&#\\1;",$str);
---
> 		$str = preg_replace('/'.$temp.'(\d+);/', '&#\\1;', $str);
61c85
< 			$str = preg_replace("/$temp(\w+);/","&\\1;", $str);
---
> 			return preg_replace('/'.$temp.'(\w+);/', '&\\1;', $str);
67,71d90
< 
< // ------------------------------------------------------------------------
< 
< /* End of file xml_helper.php */
< /* Location: ./system/helpers/xml_helper.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/index.html opensourcepos/system/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/calendar_lang.php opensourcepos/system/language/en/calendar_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,51c40,84
< $lang['cal_su']			= "Su";
< $lang['cal_mo']			= "Mo";
< $lang['cal_tu']			= "Tu";
< $lang['cal_we']			= "We";
< $lang['cal_th']			= "Th";
< $lang['cal_fr']			= "Fr";
< $lang['cal_sa']			= "Sa";
< $lang['cal_sun']		= "Sun";
< $lang['cal_mon']		= "Mon";
< $lang['cal_tue']		= "Tue";
< $lang['cal_wed']		= "Wed";
< $lang['cal_thu']		= "Thu";
< $lang['cal_fri']		= "Fri";
< $lang['cal_sat']		= "Sat";
< $lang['cal_sunday']		= "Sunday";
< $lang['cal_monday']		= "Monday";
< $lang['cal_tuesday']	= "Tuesday";
< $lang['cal_wednesday']	= "Wednesday";
< $lang['cal_thursday']	= "Thursday";
< $lang['cal_friday']		= "Friday";
< $lang['cal_saturday']	= "Saturday";
< $lang['cal_jan']		= "Jan";
< $lang['cal_feb']		= "Feb";
< $lang['cal_mar']		= "Mar";
< $lang['cal_apr']		= "Apr";
< $lang['cal_may']		= "May";
< $lang['cal_jun']		= "Jun";
< $lang['cal_jul']		= "Jul";
< $lang['cal_aug']		= "Aug";
< $lang['cal_sep']		= "Sep";
< $lang['cal_oct']		= "Oct";
< $lang['cal_nov']		= "Nov";
< $lang['cal_dec']		= "Dec";
< $lang['cal_january']	= "January";
< $lang['cal_february']	= "February";
< $lang['cal_march']		= "March";
< $lang['cal_april']		= "April";
< $lang['cal_mayl']		= "May";
< $lang['cal_june']		= "June";
< $lang['cal_july']		= "July";
< $lang['cal_august']		= "August";
< $lang['cal_september']	= "September";
< $lang['cal_october']	= "October";
< $lang['cal_november']	= "November";
< $lang['cal_december']	= "December";
< 
< 
< /* End of file calendar_lang.php */
< /* Location: ./system/language/english/calendar_lang.php */
---
> $lang['cal_su'] = 'Su';
> $lang['cal_mo'] = 'Mo';
> $lang['cal_tu'] = 'Tu';
> $lang['cal_we'] = 'We';
> $lang['cal_th'] = 'Th';
> $lang['cal_fr'] = 'Fr';
> $lang['cal_sa'] = 'Sa';
> $lang['cal_sun'] = 'Sun';
> $lang['cal_mon'] = 'Mon';
> $lang['cal_tue'] = 'Tue';
> $lang['cal_wed'] = 'Wed';
> $lang['cal_thu'] = 'Thu';
> $lang['cal_fri'] = 'Fri';
> $lang['cal_sat'] = 'Sat';
> $lang['cal_sunday'] = 'Sunday';
> $lang['cal_monday'] = 'Monday';
> $lang['cal_tuesday'] = 'Tuesday';
> $lang['cal_wednesday'] = 'Wednesday';
> $lang['cal_thursday'] = 'Thursday';
> $lang['cal_friday'] = 'Friday';
> $lang['cal_saturday'] = 'Saturday';
> $lang['cal_jan'] = 'Jan';
> $lang['cal_feb'] = 'Feb';
> $lang['cal_mar'] = 'Mar';
> $lang['cal_apr'] = 'Apr';
> $lang['cal_may'] = 'May';
> $lang['cal_jun'] = 'Jun';
> $lang['cal_jul'] = 'Jul';
> $lang['cal_aug'] = 'Aug';
> $lang['cal_sep'] = 'Sep';
> $lang['cal_oct'] = 'Oct';
> $lang['cal_nov'] = 'Nov';
> $lang['cal_dec'] = 'Dec';
> $lang['cal_january'] = 'January';
> $lang['cal_february'] = 'February';
> $lang['cal_march'] = 'March';
> $lang['cal_april'] = 'April';
> $lang['cal_mayl'] = 'May';
> $lang['cal_june'] = 'June';
> $lang['cal_july'] = 'July';
> $lang['cal_august'] = 'August';
> $lang['cal_september'] = 'September';
> $lang['cal_october'] = 'October';
> $lang['cal_november'] = 'November';
> $lang['cal_december'] = 'December';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/date_lang.php opensourcepos/system/language/en/date_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,16c40,53
< $lang['date_year'] = "Year";
< $lang['date_years'] = "Years";
< $lang['date_month'] = "Month";
< $lang['date_months'] = "Months";
< $lang['date_week'] = "Week";
< $lang['date_weeks'] = "Weeks";
< $lang['date_day'] = "Day";
< $lang['date_days'] = "Days";
< $lang['date_hour'] = "Hour";
< $lang['date_hours'] = "Hours";
< $lang['date_minute'] = "Minute";
< $lang['date_minutes'] = "Minutes";
< $lang['date_second'] = "Second";
< $lang['date_seconds'] = "Seconds";
---
> $lang['date_year'] = 'Year';
> $lang['date_years'] = 'Years';
> $lang['date_month'] = 'Month';
> $lang['date_months'] = 'Months';
> $lang['date_week'] = 'Week';
> $lang['date_weeks'] = 'Weeks';
> $lang['date_day'] = 'Day';
> $lang['date_days'] = 'Days';
> $lang['date_hour'] = 'Hour';
> $lang['date_hours'] = 'Hours';
> $lang['date_minute'] = 'Minute';
> $lang['date_minutes'] = 'Minutes';
> $lang['date_second'] = 'Second';
> $lang['date_seconds'] = 'Seconds';
19c56
< $lang['UM11']	= '(UTC -11:00) Samoa Time Zone, Niue';
---
> $lang['UM11']	= '(UTC -11:00) Niue';
36c73
< $lang['UP3']	= '(UTC +3:00) Moscow Time, East Africa Time';
---
> $lang['UP3']	= '(UTC +3:00) Moscow Time, East Africa Time, Arabia Standard Time';
52c89
< $lang['UP11']	= '(UTC +11:00) Magadan Time, Solomon Islands, Vanuatu';
---
> $lang['UP11']	= '(UTC +11:00) Srednekolymsk Time, Solomon Islands, Vanuatu';
56c93
< $lang['UP13']	= '(UTC +13:00) Phoenix Islands Time, Tonga';
---
> $lang['UP13']	= '(UTC +13:00) Samoa Time Zone, Phoenix Islands Time, Tonga';
58,61d94
< 
< 
< /* End of file date_lang.php */
< /* Location: ./system/language/english/date_lang.php */
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/db_lang.php opensourcepos/system/language/en/db_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
18,19c55,56
< $lang['db_unsuported_feature'] = 'Unsupported feature of the database platform you are using.';
< $lang['db_unsuported_compression'] = 'The file compression format you chose is not supported by your server.';
---
> $lang['db_unsupported_feature'] = 'Unsupported feature of the database platform you are using.';
> $lang['db_unsupported_compression'] = 'The file compression format you chose is not supported by your server.';
27,29d63
< 
< /* End of file db_lang.php */
< /* Location: ./system/language/english/db_lang.php */
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/email_lang.php opensourcepos/system/language/en/email_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,24c40,58
< $lang['email_must_be_array'] = "The email validation method must be passed an array.";
< $lang['email_invalid_address'] = "Invalid email address: %s";
< $lang['email_attachment_missing'] = "Unable to locate the following email attachment: %s";
< $lang['email_attachment_unreadable'] = "Unable to open this attachment: %s";
< $lang['email_no_recipients'] = "You must include recipients: To, Cc, or Bcc";
< $lang['email_send_failure_phpmail'] = "Unable to send email using PHP mail().  Your server might not be configured to send mail using this method.";
< $lang['email_send_failure_sendmail'] = "Unable to send email using PHP Sendmail.  Your server might not be configured to send mail using this method.";
< $lang['email_send_failure_smtp'] = "Unable to send email using PHP SMTP.  Your server might not be configured to send mail using this method.";
< $lang['email_sent'] = "Your message has been successfully sent using the following protocol: %s";
< $lang['email_no_socket'] = "Unable to open a socket to Sendmail. Please check settings.";
< $lang['email_no_hostname'] = "You did not specify a SMTP hostname.";
< $lang['email_smtp_error'] = "The following SMTP error was encountered: %s";
< $lang['email_no_smtp_unpw'] = "Error: You must assign a SMTP username and password.";
< $lang['email_failed_smtp_login'] = "Failed to send AUTH LOGIN command. Error: %s";
< $lang['email_smtp_auth_un'] = "Failed to authenticate username. Error: %s";
< $lang['email_smtp_auth_pw'] = "Failed to authenticate password. Error: %s";
< $lang['email_smtp_data_failure'] = "Unable to send data: %s";
< $lang['email_exit_status'] = "Exit status code: %s";
< 
< 
< /* End of file email_lang.php */
< /* Location: ./system/language/english/email_lang.php */
---
> $lang['email_must_be_array'] = 'The email validation method must be passed an array.';
> $lang['email_invalid_address'] = 'Invalid email address: %s';
> $lang['email_attachment_missing'] = 'Unable to locate the following email attachment: %s';
> $lang['email_attachment_unreadable'] = 'Unable to open this attachment: %s';
> $lang['email_no_from'] = 'Cannot send mail with no "From" header.';
> $lang['email_no_recipients'] = 'You must include recipients: To, Cc, or Bcc';
> $lang['email_send_failure_phpmail'] = 'Unable to send email using PHP mail(). Your server might not be configured to send mail using this method.';
> $lang['email_send_failure_sendmail'] = 'Unable to send email using PHP Sendmail. Your server might not be configured to send mail using this method.';
> $lang['email_send_failure_smtp'] = 'Unable to send email using PHP SMTP. Your server might not be configured to send mail using this method.';
> $lang['email_sent'] = 'Your message has been successfully sent using the following protocol: %s';
> $lang['email_no_socket'] = 'Unable to open a socket to Sendmail. Please check settings.';
> $lang['email_no_hostname'] = 'You did not specify a SMTP hostname.';
> $lang['email_smtp_error'] = 'The following SMTP error was encountered: %s';
> $lang['email_no_smtp_unpw'] = 'Error: You must assign a SMTP username and password.';
> $lang['email_failed_smtp_login'] = 'Failed to send AUTH LOGIN command. Error: %s';
> $lang['email_smtp_auth_un'] = 'Failed to authenticate username. Error: %s';
> $lang['email_smtp_auth_pw'] = 'Failed to authenticate password. Error: %s';
> $lang['email_smtp_data_failure'] = 'Unable to send data: %s';
> $lang['email_exit_status'] = 'Exit status code: %s';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/form_validation_lang.php opensourcepos/system/language/en/form_validation_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,29c40,68
< $lang['required']			= "The %s field is required.";
< $lang['isset']				= "The %s field must have a value.";
< $lang['valid_email']		= "The %s field must contain a valid email address.";
< $lang['valid_emails']		= "The %s field must contain all valid email addresses.";
< $lang['valid_url']			= "The %s field must contain a valid URL.";
< $lang['valid_ip']			= "The %s field must contain a valid IP.";
< $lang['min_length']			= "The %s field must be at least %s characters in length.";
< $lang['max_length']			= "The %s field can not exceed %s characters in length.";
< $lang['exact_length']		= "The %s field must be exactly %s characters in length.";
< $lang['alpha']				= "The %s field may only contain alphabetical characters.";
< $lang['alpha_numeric']		= "The %s field may only contain alpha-numeric characters.";
< $lang['alpha_dash']			= "The %s field may only contain alpha-numeric characters, underscores, and dashes.";
< $lang['numeric']			= "The %s field must contain only numbers.";
< $lang['is_numeric']			= "The %s field must contain only numeric characters.";
< $lang['integer']			= "The %s field must contain an integer.";
< $lang['regex_match']		= "The %s field is not in the correct format.";
< $lang['matches']			= "The %s field does not match the %s field.";
< $lang['is_unique'] 			= "The %s field must contain a unique value.";
< $lang['is_natural']			= "The %s field must contain only positive numbers.";
< $lang['is_natural_no_zero']	= "The %s field must contain a number greater than zero.";
< $lang['decimal']			= "The %s field must contain a decimal number.";
< $lang['less_than']			= "The %s field must contain a number less than %s.";
< $lang['greater_than']		= "The %s field must contain a number greater than %s.";
< 
< 
< /* End of file form_validation_lang.php */
< /* Location: ./system/language/english/form_validation_lang.php */
---
> $lang['form_validation_required']		= 'The {field} field is required.';
> $lang['form_validation_isset']			= 'The {field} field must have a value.';
> $lang['form_validation_valid_email']		= 'The {field} field must contain a valid email address.';
> $lang['form_validation_valid_emails']		= 'The {field} field must contain all valid email addresses.';
> $lang['form_validation_valid_url']		= 'The {field} field must contain a valid URL.';
> $lang['form_validation_valid_ip']		= 'The {field} field must contain a valid IP.';
> $lang['form_validation_min_length']		= 'The {field} field must be at least {param} characters in length.';
> $lang['form_validation_max_length']		= 'The {field} field cannot exceed {param} characters in length.';
> $lang['form_validation_exact_length']		= 'The {field} field must be exactly {param} characters in length.';
> $lang['form_validation_alpha']			= 'The {field} field may only contain alphabetical characters.';
> $lang['form_validation_alpha_numeric']		= 'The {field} field may only contain alpha-numeric characters.';
> $lang['form_validation_alpha_numeric_spaces']	= 'The {field} field may only contain alpha-numeric characters and spaces.';
> $lang['form_validation_alpha_dash']		= 'The {field} field may only contain alpha-numeric characters, underscores, and dashes.';
> $lang['form_validation_numeric']		= 'The {field} field must contain only numbers.';
> $lang['form_validation_is_numeric']		= 'The {field} field must contain only numeric characters.';
> $lang['form_validation_integer']		= 'The {field} field must contain an integer.';
> $lang['form_validation_regex_match']		= 'The {field} field is not in the correct format.';
> $lang['form_validation_matches']		= 'The {field} field does not match the {param} field.';
> $lang['form_validation_differs']		= 'The {field} field must differ from the {param} field.';
> $lang['form_validation_is_unique'] 		= 'The {field} field must contain a unique value.';
> $lang['form_validation_is_natural']		= 'The {field} field must only contain digits.';
> $lang['form_validation_is_natural_no_zero']	= 'The {field} field must only contain digits and must be greater than zero.';
> $lang['form_validation_decimal']		= 'The {field} field must contain a decimal number.';
> $lang['form_validation_less_than']		= 'The {field} field must contain a number less than {param}.';
> $lang['form_validation_less_than_equal_to']	= 'The {field} field must contain a number less than or equal to {param}.';
> $lang['form_validation_greater_than']		= 'The {field} field must contain a number greater than {param}.';
> $lang['form_validation_greater_than_equal_to']	= 'The {field} field must contain a number greater than or equal to {param}.';
> $lang['form_validation_error_message_not_set']	= 'Unable to access an error message corresponding to your field name {field}.';
> $lang['form_validation_in_list']		= 'The {field} field must be one of: {param}.';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/ftp_lang.php opensourcepos/system/language/en/ftp_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,18c40,51
< $lang['ftp_no_connection']			= "Unable to locate a valid connection ID. Please make sure you are connected before peforming any file routines.";
< $lang['ftp_unable_to_connect']		= "Unable to connect to your FTP server using the supplied hostname.";
< $lang['ftp_unable_to_login']		= "Unable to login to your FTP server. Please check your username and password.";
< $lang['ftp_unable_to_makdir']		= "Unable to create the directory you have specified.";
< $lang['ftp_unable_to_changedir']	= "Unable to change directories.";
< $lang['ftp_unable_to_chmod']		= "Unable to set file permissions. Please check your path. Note: This feature is only available in PHP 5 or higher.";
< $lang['ftp_unable_to_upload']		= "Unable to upload the specified file. Please check your path.";
< $lang['ftp_unable_to_download']		= "Unable to download the specified file. Please check your path.";
< $lang['ftp_no_source_file']			= "Unable to locate the source file. Please check your path.";
< $lang['ftp_unable_to_rename']		= "Unable to rename the file.";
< $lang['ftp_unable_to_delete']		= "Unable to delete the file.";
< $lang['ftp_unable_to_move']			= "Unable to move the file. Please make sure the destination directory exists.";
< 
< 
< /* End of file ftp_lang.php */
< /* Location: ./system/language/english/ftp_lang.php */
---
> $lang['ftp_no_connection']		= 'Unable to locate a valid connection ID. Please make sure you are connected before performing any file routines.';
> $lang['ftp_unable_to_connect']		= 'Unable to connect to your FTP server using the supplied hostname.';
> $lang['ftp_unable_to_login']		= 'Unable to login to your FTP server. Please check your username and password.';
> $lang['ftp_unable_to_mkdir']		= 'Unable to create the directory you have specified.';
> $lang['ftp_unable_to_changedir']	= 'Unable to change directories.';
> $lang['ftp_unable_to_chmod']		= 'Unable to set file permissions. Please check your path.';
> $lang['ftp_unable_to_upload']		= 'Unable to upload the specified file. Please check your path.';
> $lang['ftp_unable_to_download']		= 'Unable to download the specified file. Please check your path.';
> $lang['ftp_no_source_file']		= 'Unable to locate the source file. Please check your path.';
> $lang['ftp_unable_to_rename']		= 'Unable to rename the file.';
> $lang['ftp_unable_to_delete']		= 'Unable to delete the file.';
> $lang['ftp_unable_to_move']		= 'Unable to move the file. Please make sure the destination directory exists.';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/imglib_lang.php opensourcepos/system/language/en/imglib_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,24c40,56
< $lang['imglib_source_image_required'] = "You must specify a source image in your preferences.";
< $lang['imglib_gd_required'] = "The GD image library is required for this feature.";
< $lang['imglib_gd_required_for_props'] = "Your server must support the GD image library in order to determine the image properties.";
< $lang['imglib_unsupported_imagecreate'] = "Your server does not support the GD function required to process this type of image.";
< $lang['imglib_gif_not_supported'] = "GIF images are often not supported due to licensing restrictions.  You may have to use JPG or PNG images instead.";
< $lang['imglib_jpg_not_supported'] = "JPG images are not supported.";
< $lang['imglib_png_not_supported'] = "PNG images are not supported.";
< $lang['imglib_jpg_or_png_required'] = "The image resize protocol specified in your preferences only works with JPEG or PNG image types.";
< $lang['imglib_copy_error'] = "An error was encountered while attempting to replace the file.  Please make sure your file directory is writable.";
< $lang['imglib_rotate_unsupported'] = "Image rotation does not appear to be supported by your server.";
< $lang['imglib_libpath_invalid'] = "The path to your image library is not correct.  Please set the correct path in your image preferences.";
< $lang['imglib_image_process_failed'] = "Image processing failed.  Please verify that your server supports the chosen protocol and that the path to your image library is correct.";
< $lang['imglib_rotation_angle_required'] = "An angle of rotation is required to rotate the image.";
< $lang['imglib_writing_failed_gif'] = "GIF image.";
< $lang['imglib_invalid_path'] = "The path to the image is not correct.";
< $lang['imglib_copy_failed'] = "The image copy routine failed.";
< $lang['imglib_missing_font'] = "Unable to find a font to use.";
< $lang['imglib_save_failed'] = "Unable to save the image.  Please make sure the image and file directory are writable.";
< 
< 
< /* End of file imglib_lang.php */
< /* Location: ./system/language/english/imglib_lang.php */
---
> $lang['imglib_source_image_required'] = 'You must specify a source image in your preferences.';
> $lang['imglib_gd_required'] = 'The GD image library is required for this feature.';
> $lang['imglib_gd_required_for_props'] = 'Your server must support the GD image library in order to determine the image properties.';
> $lang['imglib_unsupported_imagecreate'] = 'Your server does not support the GD function required to process this type of image.';
> $lang['imglib_gif_not_supported'] = 'GIF images are often not supported due to licensing restrictions. You may have to use JPG or PNG images instead.';
> $lang['imglib_jpg_not_supported'] = 'JPG images are not supported.';
> $lang['imglib_png_not_supported'] = 'PNG images are not supported.';
> $lang['imglib_jpg_or_png_required'] = 'The image resize protocol specified in your preferences only works with JPEG or PNG image types.';
> $lang['imglib_copy_error'] = 'An error was encountered while attempting to replace the file. Please make sure your file directory is writable.';
> $lang['imglib_rotate_unsupported'] = 'Image rotation does not appear to be supported by your server.';
> $lang['imglib_libpath_invalid'] = 'The path to your image library is not correct. Please set the correct path in your image preferences.';
> $lang['imglib_image_process_failed'] = 'Image processing failed. Please verify that your server supports the chosen protocol and that the path to your image library is correct.';
> $lang['imglib_rotation_angle_required'] = 'An angle of rotation is required to rotate the image.';
> $lang['imglib_invalid_path'] = 'The path to the image is not correct.';
> $lang['imglib_copy_failed'] = 'The image copy routine failed.';
> $lang['imglib_missing_font'] = 'Unable to find a font to use.';
> $lang['imglib_save_failed'] = 'Unable to save the image. Please make sure the image and file directory are writable.';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/index.html opensourcepos/system/language/en/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/migration_lang.php opensourcepos/system/language/en/migration_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 3.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,13c40,47
< $lang['migration_none_found']			= "No migrations were found.";
< $lang['migration_not_found']			= "This migration could not be found.";
< $lang['migration_multiple_version']		= "This are multiple migrations with the same version number: %d.";
< $lang['migration_class_doesnt_exist']	= "The migration class \"%s\" could not be found.";
< $lang['migration_missing_up_method']	= "The migration class \"%s\" is missing an 'up' method.";
< $lang['migration_missing_down_method']	= "The migration class \"%s\" is missing an 'up' method.";
< $lang['migration_invalid_filename']		= "Migration \"%s\" has an invalid filename.";
< 
< 
< /* End of file migration_lang.php */
< /* Location: ./system/language/english/migration_lang.php */
---
> $lang['migration_none_found'] = 'No migrations were found.';
> $lang['migration_not_found'] = 'No migration could be found with the version number: %s.';
> $lang['migration_sequence_gap'] = 'There is a gap in the migration sequence near version number: %s.';
> $lang['migration_multiple_version'] = 'There are multiple migrations with the same version number: %s.';
> $lang['migration_class_doesnt_exist'] = 'The migration class "%s" could not be found.';
> $lang['migration_missing_up_method'] = 'The migration class "%s" is missing an "up" method.';
> $lang['migration_missing_down_method'] = 'The migration class "%s" is missing a "down" method.';
> $lang['migration_invalid_filename'] = 'Migration "%s" has an invalid filename.';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/number_lang.php opensourcepos/system/language/en/number_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,10c40,44
< $lang['terabyte_abbr'] = "TB";
< $lang['gigabyte_abbr'] = "GB";
< $lang['megabyte_abbr'] = "MB";
< $lang['kilobyte_abbr'] = "KB";
< $lang['bytes'] = "Bytes";
< 
< /* End of file number_lang.php */
< /* Location: ./system/language/english/number_lang.php */
---
> $lang['terabyte_abbr'] = 'TB';
> $lang['gigabyte_abbr'] = 'GB';
> $lang['megabyte_abbr'] = 'MB';
> $lang['kilobyte_abbr'] = 'KB';
> $lang['bytes'] = 'Bytes';
Only in opensourcepos/system/language/en: pagination_lang.php
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/profiler_lang.php opensourcepos/system/language/en/profiler_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
23,25c60
< 
< /* End of file profiler_lang.php */
< /* Location: ./system/language/english/profiler_lang.php */
---
> $lang['profiler_seconds'] = 'seconds';
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/unit_test_lang.php opensourcepos/system/language/en/unit_test_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
22,25d58
< 
< 
< /* End of file unit_test_lang.php */
< /* Location: ./system/language/english/unit_test_lang.php */
diff -rBwi --ignore-file-name-case pos-prod/system/language/en/upload_lang.php opensourcepos/system/language/en/upload_lang.php
1a2,38
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
3,22c40,55
< $lang['upload_userfile_not_set'] = "Unable to find a post variable called userfile.";
< $lang['upload_file_exceeds_limit'] = "The uploaded file exceeds the maximum allowed size in your PHP configuration file.";
< $lang['upload_file_exceeds_form_limit'] = "The uploaded file exceeds the maximum size allowed by the submission form.";
< $lang['upload_file_partial'] = "The file was only partially uploaded.";
< $lang['upload_no_temp_directory'] = "The temporary folder is missing.";
< $lang['upload_unable_to_write_file'] = "The file could not be written to disk.";
< $lang['upload_stopped_by_extension'] = "The file upload was stopped by extension.";
< $lang['upload_no_file_selected'] = "You did not select a file to upload.";
< $lang['upload_invalid_filetype'] = "The filetype you are attempting to upload is not allowed.";
< $lang['upload_invalid_filesize'] = "The file you are attempting to upload is larger than the permitted size.";
< $lang['upload_invalid_dimensions'] = "The image you are attempting to upload exceedes the maximum height or width.";
< $lang['upload_destination_error'] = "A problem was encountered while attempting to move the uploaded file to the final destination.";
< $lang['upload_no_filepath'] = "The upload path does not appear to be valid.";
< $lang['upload_no_file_types'] = "You have not specified any allowed file types.";
< $lang['upload_bad_filename'] = "The file name you submitted already exists on the server.";
< $lang['upload_not_writable'] = "The upload destination folder does not appear to be writable.";
< 
< 
< /* End of file upload_lang.php */
< /* Location: ./system/language/english/upload_lang.php */
---
> $lang['upload_userfile_not_set'] = 'Unable to find a post variable called userfile.';
> $lang['upload_file_exceeds_limit'] = 'The uploaded file exceeds the maximum allowed size in your PHP configuration file.';
> $lang['upload_file_exceeds_form_limit'] = 'The uploaded file exceeds the maximum size allowed by the submission form.';
> $lang['upload_file_partial'] = 'The file was only partially uploaded.';
> $lang['upload_no_temp_directory'] = 'The temporary folder is missing.';
> $lang['upload_unable_to_write_file'] = 'The file could not be written to disk.';
> $lang['upload_stopped_by_extension'] = 'The file upload was stopped by extension.';
> $lang['upload_no_file_selected'] = 'You did not select a file to upload.';
> $lang['upload_invalid_filetype'] = 'The filetype you are attempting to upload is not allowed.';
> $lang['upload_invalid_filesize'] = 'The file you are attempting to upload is larger than the permitted size.';
> $lang['upload_invalid_dimensions'] = 'The image you are attempting to upload doesn\'t fit into the allowed dimensions.';
> $lang['upload_destination_error'] = 'A problem was encountered while attempting to move the uploaded file to the final destination.';
> $lang['upload_no_filepath'] = 'The upload path does not appear to be valid.';
> $lang['upload_no_file_types'] = 'You have not specified any allowed file types.';
> $lang['upload_bad_filename'] = 'The file name you submitted already exists on the server.';
> $lang['upload_not_writable'] = 'The upload destination folder does not appear to be writable.';
Only in pos-prod/system/language: english
Only in opensourcepos/system/language: es
Only in opensourcepos/system/language: fr
Only in opensourcepos/system/language: id
diff -rBwi --ignore-file-name-case pos-prod/system/language/index.html opensourcepos/system/language/index.html
0a1
> <!DOCTYPE html>
Only in pos-prod/system/language: indonesia
Only in opensourcepos/system/language: ru
Only in pos-prod/system/language: spanish
Only in opensourcepos/system/language: th
Only in opensourcepos/system/language: tr
Only in opensourcepos/system/language: zh
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/Cache.php opensourcepos/system/libraries/Cache/Cache.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 2.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24c46
<  * @author		ExpressionEngine Dev Team
---
>  * @author		EllisLab Dev Team
28a51,55
> 	/**
> 	 * Valid cache drivers
> 	 *
> 	 * @var array
> 	 */
30c57,62
< 		'cache_apc', 'cache_file', 'cache_memcached', 'cache_dummy'
---
> 		'apc',
> 		'dummy',
> 		'file',
> 		'memcached',
> 		'redis',
> 		'wincache'
33c65,76
< 	protected $_cache_path		= NULL;		// Path of cache files (if file-based cache)
---
> 	/**
> 	 * Path of cache files (if file-based cache)
> 	 *
> 	 * @var string
> 	 */
> 	protected $_cache_path = NULL;
> 
> 	/**
> 	 * Reference to the driver
> 	 *
> 	 * @var mixed
> 	 */
35d77
< 	protected $_backup_driver;
37c79,91
< 	// ------------------------------------------------------------------------
---
> 	/**
> 	 * Fallback driver
> 	 *
> 	 * @var string
> 	 */
> 	protected $_backup_driver = 'dummy';
> 
> 	/**
> 	 * Cache key prefix
> 	 *
> 	 * @var	string
> 	 */
> 	public $key_prefix = '';
42c96,99
< 	 * @param array
---
> 	 * Initialize class properties based on the configuration array.
> 	 *
> 	 * @param	array	$config = array()
> 	 * @return	void
46c103,110
< 		if ( ! empty($config))
---
> 		isset($config['adapter']) && $this->_adapter = $config['adapter'];
> 		isset($config['backup']) && $this->_backup_driver = $config['backup'];
> 		isset($config['key_prefix']) && $this->key_prefix = $config['key_prefix'];
> 
> 		// If the specified adapter isn't available, check the backup.
> 		if ( ! $this->is_supported($this->_adapter))
> 		{
> 			if ( ! $this->is_supported($this->_backup_driver))
48c112,121
< 			$this->_initialize($config);
---
> 				// Backup isn't supported either. Default to 'Dummy' driver.
> 				log_message('error', 'Cache adapter "'.$this->_adapter.'" and backup "'.$this->_backup_driver.'" are both unavailable. Cache is now using "Dummy" adapter.');
> 				$this->_adapter = 'dummy';
> 			}
> 			else
> 			{
> 				// Backup is supported. Set it to primary.
> 				log_message('debug', 'Cache adapter "'.$this->_adapter.'" is unavailable. Falling back to "'.$this->_backup_driver.'" backup adapter.');
> 				$this->_adapter = $this->_backup_driver;
> 			}
60,61c133,134
< 	 * @param 	string
< 	 * @return 	mixed		value that is stored/FALSE on failure
---
> 	 * @param	string	$id
> 	 * @return	mixed	value matching $id or FALSE on failure
65c138
< 		return $this->{$this->_adapter}->get($id);
---
> 		return $this->{$this->_adapter}->get($this->key_prefix.$id);
73,77c146,150
< 	 * @param 	string		Unique Key
< 	 * @param 	mixed		Data to store
< 	 * @param 	int			Length of time (in seconds) to cache the data
< 	 *
< 	 * @return 	boolean		true on success/false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @param	mixed	$data	Data to store
> 	 * @param	int	$ttl	Cache TTL (in seconds)
> 	 * @param	bool	$raw	Whether to store the raw value
> 	 * @return	bool	TRUE on success, FALSE on failure
79c152
< 	public function save($id, $data, $ttl = 60)
---
> 	public function save($id, $data, $ttl = 60, $raw = FALSE)
81c154
< 		return $this->{$this->_adapter}->save($id, $data, $ttl);
---
> 		return $this->{$this->_adapter}->save($this->key_prefix.$id, $data, $ttl, $raw);
89,90c162,163
< 	 * @param 	mixed		unique identifier of the item in the cache
< 	 * @return 	boolean		true on success/false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @return	bool	TRUE on success, FALSE on failure
94c167
< 		return $this->{$this->_adapter}->delete($id);
---
> 		return $this->{$this->_adapter}->delete($this->key_prefix.$id);
100c173
< 	 * Clean the cache
---
> 	 * Increment a raw value
102c175,177
< 	 * @return 	boolean		false on failure/true on success
---
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to add
> 	 * @return	mixed	New value on success or FALSE on failure
104c179
< 	public function clean()
---
> 	public function increment($id, $offset = 1)
106c181
< 		return $this->{$this->_adapter}->clean();
---
> 		return $this->{$this->_adapter}->increment($this->key_prefix.$id, $offset);
112c187
< 	 * Cache Info
---
> 	 * Decrement a raw value
114,115c189,191
< 	 * @param 	string		user/filehits
< 	 * @return 	mixed		array on success, false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to reduce by
> 	 * @return	mixed	New value on success or FALSE on failure
117c193
< 	public function cache_info($type = 'user')
---
> 	public function decrement($id, $offset = 1)
119c195
< 		return $this->{$this->_adapter}->cache_info($type);
---
> 		return $this->{$this->_adapter}->decrement($this->key_prefix.$id, $offset);
125c201
< 	 * Get Cache Metadata
---
> 	 * Clean the cache
127,128c203
< 	 * @param 	mixed		key to get cache metadata on
< 	 * @return 	mixed		return value from child method
---
> 	 * @return	bool	TRUE on success, FALSE on failure
130c205
< 	public function get_metadata($id)
---
> 	public function clean()
132c207
< 		return $this->{$this->_adapter}->get_metadata($id);
---
> 		return $this->{$this->_adapter}->clean();
138,140c213
< 	 * Initialize
< 	 *
< 	 * Initialize class properties based on the configuration array.
---
> 	 * Cache Info
142,143c215,216
< 	 * @param	array
< 	 * @return 	void
---
> 	 * @param	string	$type = 'user'	user/filehits
> 	 * @return	mixed	array containing cache info on success OR FALSE on failure
145,164c218
< 	private function _initialize($config)
< 	{
< 		$default_config = array(
< 				'adapter',
< 				'memcached'
< 			);
< 
< 		foreach ($default_config as $key)
< 		{
< 			if (isset($config[$key]))
< 			{
< 				$param = '_'.$key;
< 
< 				$this->{$param} = $config[$key];
< 			}
< 		}
< 
< 		if (isset($config['backup']))
< 		{
< 			if (in_array('cache_'.$config['backup'], $this->valid_drivers))
---
> 	public function cache_info($type = 'user')
166,168c220
< 				$this->_backup_driver = $config['backup'];
< 			}
< 		}
---
> 		return $this->{$this->_adapter}->cache_info($type);
174c226
< 	 * Is the requested driver supported in this environment?
---
> 	 * Get Cache Metadata
176,177c228,229
< 	 * @param 	string	The driver to test.
< 	 * @return 	array
---
> 	 * @param	string	$id	key to get cache metadata on
> 	 * @return	mixed	cache item metadata
179,183c231
< 	public function is_supported($driver)
< 	{
< 		static $support = array();
< 
< 		if ( ! isset($support[$driver]))
---
> 	public function get_metadata($id)
185,188c233
< 			$support[$driver] = $this->{$driver}->is_supported();
< 		}
< 
< 		return $support[$driver];
---
> 		return $this->{$this->_adapter}->get_metadata($this->key_prefix.$id);
194c239
< 	 * __get()
---
> 	 * Is the requested driver supported in this environment?
196,197c241,242
< 	 * @param 	child
< 	 * @return 	object
---
> 	 * @param	string	$driver	The driver to test
> 	 * @return	array
199c244
< 	public function __get($child)
---
> 	public function is_supported($driver)
201c246
< 		$obj = parent::__get($child);
---
> 		static $support;
203c248
< 		if ( ! $this->is_supported($child))
---
> 		if ( ! isset($support, $support[$driver]))
205c250
< 			$this->_adapter = $this->_backup_driver;
---
> 			$support[$driver] = $this->{$driver}->is_supported();
208c253
< 		return $obj;
---
> 		return $support[$driver];
212,214d255
< 
< /* End of file Cache.php */
< /* Location: ./system/libraries/Cache/Cache.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/drivers/Cache_apc.php opensourcepos/system/libraries/Cache/drivers/Cache_apc.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 2.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 2.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24c46
<  * @author		ExpressionEngine Dev Team
---
>  * @author		EllisLab Dev Team
30a52,69
> 	 * Class constructor
> 	 *
> 	 * Only present so that an error message is logged
> 	 * if APC is not available.
> 	 *
> 	 * @return	void
> 	 */
> 	public function __construct()
> 	{
> 		if ( ! $this->is_supported())
> 		{
> 			log_message('error', 'Cache: Failed to initialize APC; extension not loaded/enabled?');
> 		}
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
41c80,88
< 		$data = apc_fetch($id);
---
> 		$success = FALSE;
> 		$data = apc_fetch($id, $success);
> 
> 		if ($success === TRUE)
> 		{
> 			return is_array($data)
> 				? unserialize($data[0])
> 				: $data;
> 		}
43c90
< 		return (is_array($data)) ? $data[0] : FALSE;
---
> 		return FALSE;
51,59c98,112
< 	 * @param 	string		Unique Key
< 	 * @param 	mixed		Data to store
< 	 * @param 	int			Length of time (in seconds) to cache the data
< 	 *
< 	 * @return 	boolean		true on success/false on failure
< 	 */
< 	public function save($id, $data, $ttl = 60)
< 	{
< 		return apc_store($id, array($data, time(), $ttl), $ttl);
---
> 	 * @param	string	$id	Cache ID
> 	 * @param	mixed	$data	Data to store
> 	 * @param	int	$ttol	Length of time (in seconds) to cache the data
> 	 * @param	bool	$raw	Whether to store the raw value
> 	 * @return	bool	TRUE on success, FALSE on failure
> 	 */
> 	public function save($id, $data, $ttl = 60, $raw = FALSE)
> 	{
> 		$ttl = (int) $ttl;
> 
> 		return apc_store(
> 			$id,
> 			($raw === TRUE ? $data : array(serialize($data), time(), $ttl)),
> 			$ttl
> 		);
68c121
< 	 * @param 	boolean		true on success/false on failure
---
> 	 * @return	bool	true on success/false on failure
77a131,158
> 	 * Increment a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to add
> 	 * @return	mixed	New value on success or FALSE on failure
> 	 */
> 	public function increment($id, $offset = 1)
> 	{
> 		return apc_inc($id, $offset);
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Decrement a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to reduce by
> 	 * @return	mixed	New value on success or FALSE on failure
> 	 */
> 	public function decrement($id, $offset = 1)
> 	{
> 		return apc_dec($id, $offset);
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
80c161
< 	 * @return 	boolean		false on failure/true on success
---
> 	 * @return	bool	false on failure/true on success
110c191,192
< 		$stored = apc_fetch($id);
---
> 		$success = FALSE;
> 		$stored = apc_fetch($id, $success);
112c194
< 		if (count($stored) !== 3)
---
> 		if ($success === FALSE OR count($stored) !== 3)
122c204
< 			'data'		=> $data
---
> 			'data'		=> unserialize($data)
131a214,215
> 	 *
> 	 * @return	bool
135,141c219
< 		if ( ! extension_loaded('apc') OR ini_get('apc.enabled') != "1")
< 		{
< 			log_message('error', 'The APC PHP extension must be loaded to use APC Cache.');
< 			return FALSE;
< 		}
< 
< 		return TRUE;
---
> 		return (extension_loaded('apc') && ini_get('apc.enabled'));
145,147d221
< 
< /* End of file Cache_apc.php */
< /* Location: ./system/libraries/Cache/drivers/Cache_apc.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/drivers/Cache_dummy.php opensourcepos/system/libraries/Cache/drivers/Cache_dummy.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,11c30,34
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24c46
<  * @author		ExpressionEngine Dev Team
---
>  * @author		EllisLab Dev Team
36c57
< 	 * @return 	Boolean		FALSE
---
> 	 * @return	bool	FALSE
51,52c72,73
< 	 *
< 	 * @return 	boolean		TRUE, Simulating success
---
> 	 * @param	bool	Whether to store the raw value
> 	 * @return	bool	TRUE, Simulating success
54c75
< 	public function save($id, $data, $ttl = 60)
---
> 	public function save($id, $data, $ttl = 60, $raw = FALSE)
65c86
< 	 * @param 	boolean		TRUE, simulating success
---
> 	 * @return	bool	TRUE, simulating success
74a96,123
> 	 * Increment a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to add
> 	 * @return	mixed	New value on success or FALSE on failure
> 	 */
> 	public function increment($id, $offset = 1)
> 	{
> 		return TRUE;
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Decrement a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to reduce by
> 	 * @return	mixed	New value on success or FALSE on failure
> 	 */
> 	public function decrement($id, $offset = 1)
> 	{
> 		return TRUE;
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
77c126
< 	 * @return 	boolean		TRUE, simulating success
---
> 	 * @return	bool	TRUE, simulating success
90c139
< 	 * @return 	boolean		FALSE
---
> 	 * @return	bool	FALSE
103c152
< 	 * @return 	boolean		FALSE
---
> 	 * @return	bool	FALSE
116c165
< 	 * @return TRUE;
---
> 	 * @return	bool	TRUE
124,126d172
< 
< /* End of file Cache_dummy.php */
< /* Location: ./system/libraries/Cache/drivers/Cache_dummy.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/drivers/Cache_file.php opensourcepos/system/libraries/Cache/drivers/Cache_file.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,11c30,34
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
19c41
<  * CodeIgniter Memcached Caching Class
---
>  * CodeIgniter File Caching Class
24c46
<  * @author		ExpressionEngine Dev Team
---
>  * @author		EllisLab Dev Team
29a51,55
> 	/**
> 	 * Directory in which to save cache files
> 	 *
> 	 * @var string
> 	 */
33c59,61
< 	 * Constructor
---
> 	 * Initialize file-based cache
> 	 *
> 	 * @return	void
41,42c68
< 
< 		$this->_cache_path = ($path == '') ? APPPATH.'cache/' : $path;
---
> 		$this->_cache_path = ($path === '') ? APPPATH.'cache/' : $path;
50,51c76,77
< 	 * @param 	mixed		unique key id
< 	 * @return 	mixed		data on success/false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @return	mixed	Data on success, FALSE on failure
55,69c81,82
< 		if ( ! file_exists($this->_cache_path.$id))
< 		{
< 			return FALSE;
< 		}
< 
< 		$data = read_file($this->_cache_path.$id);
< 		$data = unserialize($data);
< 
< 		if (time() >  $data['time'] + $data['ttl'])
< 		{
< 			unlink($this->_cache_path.$id);
< 			return FALSE;
< 		}
< 
< 		return $data['data'];
---
> 		$data = $this->_get($id);
> 		return is_array($data) ? $data['data'] : FALSE;
77,81c90,94
< 	 * @param 	string		unique key
< 	 * @param 	mixed		data to store
< 	 * @param 	int		length of time (in seconds) the cache is valid
< 	 *					- Default is 60 seconds
< 	 * @return 	boolean		true on success/false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @param	mixed	$data	Data to store
> 	 * @param	int	$ttl	Time to live in seconds
> 	 * @param	bool	$raw	Whether to store the raw value (unused)
> 	 * @return	bool	TRUE on success, FALSE on failure
83c96
< 	public function save($id, $data, $ttl = 60)
---
> 	public function save($id, $data, $ttl = 60, $raw = FALSE)
93c106
< 			@chmod($this->_cache_path.$id, 0777);
---
> 			chmod($this->_cache_path.$id, 0640);
106c119
< 	 * @return 	boolean		true on success/false on failure
---
> 	 * @return	bool	true on success/false on failure
110c123,179
< 		return unlink($this->_cache_path.$id);
---
> 		return file_exists($this->_cache_path.$id) ? unlink($this->_cache_path.$id) : FALSE;
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Increment a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to add
> 	 * @return	New value on success, FALSE on failure
> 	 */
> 	public function increment($id, $offset = 1)
> 	{
> 		$data = $this->_get($id);
> 
> 		if ($data === FALSE)
> 		{
> 			$data = array('data' => 0, 'ttl' => 60);
> 		}
> 		elseif ( ! is_int($data['data']))
> 		{
> 			return FALSE;
> 		}
> 
> 		$new_value = $data['data'] + $offset;
> 		return $this->save($id, $new_value, $data['ttl'])
> 			? $new_value
> 			: FALSE;
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Decrement a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to reduce by
> 	 * @return	New value on success, FALSE on failure
> 	 */
> 	public function decrement($id, $offset = 1)
> 	{
> 		$data = $this->_get($id);
> 
> 		if ($data === FALSE)
> 		{
> 			$data = array('data' => 0, 'ttl' => 60);
> 		}
> 		elseif ( ! is_int($data['data']))
> 		{
> 			return FALSE;
> 		}
> 
> 		$new_value = $data['data'] - $offset;
> 		return $this->save($id, $new_value, $data['ttl'])
> 			? $new_value
> 			: FALSE;
118c187
< 	 * @return 	boolean		false on failure/true on success
---
> 	 * @return	bool	false on failure/true on success
122c191
< 		return delete_files($this->_cache_path);
---
> 		return delete_files($this->_cache_path, FALSE, TRUE);
155,156c224
< 		$data = read_file($this->_cache_path.$id);
< 		$data = unserialize($data);
---
> 		$data = unserialize(file_get_contents($this->_cache_path.$id));
183c251
< 	 * @return boolean
---
> 	 * @return	bool
189a258,272
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Get all data
> 	 *
> 	 * Internal method to get all the relevant data about a cache item
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @return	mixed	Data array on success or FALSE on failure
> 	 */
> 	protected function _get($id)
> 	{
> 		if ( ! is_file($this->_cache_path.$id))
> 		{
> 			return FALSE;
192,193c275,286
< /* End of file Cache_file.php */
< /* Location: ./system/libraries/Cache/drivers/Cache_file.php */
\ No newline at end of file
---
> 		$data = unserialize(file_get_contents($this->_cache_path.$id));
> 
> 		if ($data['ttl'] > 0 && time() > $data['time'] + $data['ttl'])
> 		{
> 			unlink($this->_cache_path.$id);
> 			return FALSE;
> 		}
> 
> 		return $data;
> 	}
> 
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/drivers/Cache_memcached.php opensourcepos/system/libraries/Cache/drivers/Cache_memcached.php
1c1
< <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,11c30,34
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2006 - 2014 EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24c46
<  * @author		ExpressionEngine Dev Team
---
>  * @author		EllisLab Dev Team
30c51,56
< 	private $_memcached;	// Holds the memcached object
---
> 	/**
> 	 * Holds the memcached object
> 	 *
> 	 * @var object
> 	 */
> 	protected $_memcached;
31a58,62
> 	/**
> 	 * Memcached configuration
> 	 *
> 	 * @var array
> 	 */
34,36c65,67
< 						'default_host'		=> '127.0.0.1',
< 						'default_port'		=> 11211,
< 						'default_weight'	=> 1
---
> 			'host'		=> '127.0.0.1',
> 			'port'		=> 11211,
> 			'weight'	=> 1
42a74,142
> 	 * Class constructor
> 	 *
> 	 * Setup Memcache(d)
> 	 *
> 	 * @return	void
> 	 */
> 	public function __construct()
> 	{
> 		// Try to load memcached server info from the config file.
> 		$CI =& get_instance();
> 		$defaults = $this->_memcache_conf['default'];
> 
> 		if ($CI->config->load('memcached', TRUE, TRUE))
> 		{
> 			if (is_array($CI->config->config['memcached']))
> 			{
> 				$this->_memcache_conf = array();
> 
> 				foreach ($CI->config->config['memcached'] as $name => $conf)
> 				{
> 					$this->_memcache_conf[$name] = $conf;
> 				}
> 			}
> 		}
> 
> 		if (class_exists('Memcached', FALSE))
> 		{
> 			$this->_memcached = new Memcached();
> 		}
> 		elseif (class_exists('Memcache', FALSE))
> 		{
> 			$this->_memcached = new Memcache();
> 		}
> 		else
> 		{
> 			log_message('error', 'Cache: Failed to create Memcache(d) object; extension not loaded?');
> 			return;
> 		}
> 
> 		foreach ($this->_memcache_conf as $cache_server)
> 		{
> 			isset($cache_server['hostname']) OR $cache_server['hostname'] = $defaults['host'];
> 			isset($cache_server['port']) OR $cache_server['port'] = $defaults['port'];
> 			isset($cache_server['weight']) OR $cache_server['weight'] = $defaults['weight'];
> 
> 			if (get_class($this->_memcached) === 'Memcache')
> 			{
> 				// Third parameter is persistance and defaults to TRUE.
> 				$this->_memcached->addServer(
> 					$cache_server['hostname'],
> 					$cache_server['port'],
> 					TRUE,
> 					$cache_server['weight']
> 				);
> 			}
> 			else
> 			{
> 				$this->_memcached->addServer(
> 					$cache_server['hostname'],
> 					$cache_server['port'],
> 					$cache_server['weight']
> 				);
> 			}
> 		}
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
45,46c145,146
< 	 * @param 	mixed		unique key id
< 	 * @return 	mixed		data on success/false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @return	mixed	Data on success, FALSE on failure
52c152
< 		return (is_array($data)) ? $data[0] : FALSE;
---
> 		return is_array($data) ? $data[0] : $data;
60,63c160,164
< 	 * @param 	string		unique identifier
< 	 * @param 	mixed		data being cached
< 	 * @param 	int			time to live
< 	 * @return 	boolean 	true on success, false on failure
---
> 	 * @param	string	$id	Cache ID
> 	 * @param	mixed	$data	Data being cached
> 	 * @param	int	$ttl	Time to live
> 	 * @param	bool	$raw	Whether to store the raw value
> 	 * @return	bool	TRUE on success, FALSE on failure
65c166
< 	public function save($id, $data, $ttl = 60)
---
> 	public function save($id, $data, $ttl = 60, $raw = FALSE)
67c168,173
< 		if (get_class($this->_memcached) == 'Memcached')
---
> 		if ($raw !== TRUE)
> 		{
> 			$data = array($data, time(), $ttl);
> 		}
> 
> 		if (get_class($this->_memcached) === 'Memcached')
69c175
< 			return $this->_memcached->set($id, array($data, time(), $ttl), $ttl);
---
> 			return $this->_memcached->set($id, $data, $ttl);
71c177
< 		else if (get_class($this->_memcached) == 'Memcache')
---
> 		elseif (get_class($this->_memcached) === 'Memcache')
73c179
< 			return $this->_memcached->set($id, array($data, time(), $ttl), 0, $ttl);
---
> 			return $this->_memcached->set($id, $data, 0, $ttl);
85c191
< 	 * @return 	boolean 	true on success, false on failure
---
> 	 * @return	bool	true on success, false on failure
94a201,228
> 	 * Increment a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to add
> 	 * @return	mixed	New value on success or FALSE on failure
> 	 */
> 	public function increment($id, $offset = 1)
> 	{
> 		return $this->_memcached->increment($id, $offset);
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
> 	 * Decrement a raw value
> 	 *
> 	 * @param	string	$id	Cache ID
> 	 * @param	int	$offset	Step/value to reduce by
> 	 * @return	mixed	New value on success or FALSE on failure
> 	 */
> 	public function decrement($id, $offset = 1)
> 	{
> 		return $this->_memcached->decrement($id, $offset);
> 	}
> 
> 	// ------------------------------------------------------------------------
> 
> 	/**
97c231
< 	 * @return 	boolean		false on failure/true on success
---
> 	 * @return	bool	false on failure/true on success
109d242
< 	 * @param 	null		type not supported in memcached
112c245
< 	public function cache_info($type = NULL)
---
> 	public function cache_info()
146,193d278
< 	 * Setup memcached.
< 	 */
< 	private function _setup_memcached()
< 	{
< 		// Try to load memcached server info from the config file.
< 		$CI =& get_instance();
< 		if ($CI->config->load('memcached', TRUE, TRUE))
< 		{
< 			if (is_array($CI->config->config['memcached']))
< 			{
< 				$this->_memcache_conf = NULL;
< 
< 				foreach ($CI->config->config['memcached'] as $name => $conf)
< 				{
< 					$this->_memcache_conf[$name] = $conf;
< 				}
< 			}
< 		}
< 
< 		$this->_memcached = new Memcached();
< 
< 		foreach ($this->_memcache_conf as $name => $cache_server)
< 		{
< 			if ( ! array_key_exists('hostname', $cache_server))
< 			{
< 				$cache_server['hostname'] = $this->_default_options['default_host'];
< 			}
< 
< 			if ( ! array_key_exists('port', $cache_server))
< 			{
< 				$cache_server['port'] = $this->_default_options['default_port'];
< 			}
< 	
< 			if ( ! array_key_exists('weight', $cache_server))
< 			{
< 				$cache_server['weight'] = $this->_default_options['default_weight'];
< 			}
< 	
< 			$this->_memcached->addServer(
< 					$cache_server['hostname'], $cache_server['port'], $cache_server['weight']
< 			);
< 		}
< 	}
< 
< 	// ------------------------------------------------------------------------
< 
< 
< 	/**
197a283,284
> 	 *
> 	 * @return	bool
201,204c288
< 		if ( ! extension_loaded('memcached'))
< 		{
< 			log_message('error', 'The Memcached Extension must be loaded to use Memcached Cache.');
< 			return FALSE;
---
> 		return (extension_loaded('memcached') OR extension_loaded('memcache'));
206,208d289
< 
< 		$this->_setup_memcached();
< 		return TRUE;
210,214d290
< 
< }
< 
< /* End of file Cache_memcached.php */
< /* Location: ./system/libraries/Cache/drivers/Cache_memcached.php */
\ No newline at end of file
Only in opensourcepos/system/libraries/Cache/drivers: Cache_redis.php
Only in opensourcepos/system/libraries/Cache/drivers: Cache_wincache.php
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/drivers/index.html opensourcepos/system/libraries/Cache/drivers/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cache/index.html opensourcepos/system/libraries/Cache/index.html
0a1
> <!DOCTYPE html>
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Calendar.php opensourcepos/system/libraries/Calendar.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/calendar.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/calendar.html
31,39c53,109
< 	var $CI;
< 	var $lang;
< 	var $local_time;
< 	var $template		= '';
< 	var $start_day		= 'sunday';
< 	var $month_type		= 'long';
< 	var $day_type		= 'abr';
< 	var $show_next_prev	= FALSE;
< 	var $next_prev_url	= '';
---
> 	/**
> 	 * Calendar layout template
> 	 *
> 	 * @var mixed
> 	 */
> 	public $template = '';
> 
> 	/**
> 	 * Replacements array for template
> 	 *
> 	 * @var array
> 	 */
> 	public $replacements = array();
> 
> 	/**
> 	 * Day of the week to start the calendar on
> 	 *
> 	 * @var string
> 	 */
> 	public $start_day = 'sunday';
> 
> 	/**
> 	 * How to display months
> 	 *
> 	 * @var string
> 	 */
> 	public $month_type = 'long';
> 
> 	/**
> 	 * How to display names of days
> 	 *
> 	 * @var string
> 	 */
> 	public $day_type = 'abr';
> 
> 	/**
> 	 * Whether to show next/prev month links
> 	 *
> 	 * @var bool
> 	 */
> 	public $show_next_prev = FALSE;
> 
> 	/**
> 	 * Url base to use for next/prev month links
> 	 *
> 	 * @var bool
> 	 */
> 	public $next_prev_url = '';
> 
> 	/**
> 	 * Show days of other months
> 	 *
> 	 * @var bool
> 	 */
> 	public $show_other_days = FALSE;
> 
> 	// --------------------------------------------------------------------
42c112
< 	 * Constructor
---
> 	 * CI Singleton
44c114,128
< 	 * Loads the calendar language file and sets the default time reference
---
> 	 * @var object
> 	 */
> 	protected $CI;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
> 	 *
> 	 * Loads the calendar language file and sets the default time reference.
> 	 *
> 	 * @uses	CI_Lang::$is_loaded
> 	 *
> 	 * @param	array	$config	Calendar options
> 	 * @return	void
49,51d132
< 
< 		if ( ! in_array('calendar_lang.php', $this->CI->lang->is_loaded, TRUE))
< 		{
53,55d133
< 		}
< 
< 		$this->local_time = time();
57,60c135
< 		if (count($config) > 0)
< 		{
< 			$this->initialize($config);
< 		}
---
> 		empty($config) OR $this->initialize($config);
62c137
< 		log_message('debug', "Calendar Class Initialized");
---
> 		log_message('info', 'Calendar Class Initialized');
72d146
< 	 * @access	public
74c148
< 	 * @return	void
---
> 	 * @return	CI_Calendar
76c150
< 	function initialize($config = array())
---
> 	public function initialize($config = array())
84a159,166
> 
> 		// Set the next_prev_url to the controller if required but not defined
> 		if ($this->show_next_prev === TRUE && empty($this->next_prev_url))
> 		{
> 			$this->next_prev_url = $this->CI->config->site_url($this->CI->router->class.'/'.$this->CI->router->method);
> 		}
> 
> 		return $this;
92,94c174,175
< 	 * @access	public
< 	 * @param	integer	the year
< 	 * @param	integer	the month
---
> 	 * @param	int	the year
> 	 * @param	int	the month
98c179
< 	function generate($year = '', $month = '', $data = array())
---
> 	public function generate($year = '', $month = '', $data = array())
100,102c181
< 		// Set and validate the supplied month/year
< 		if ($year == '')
< 			$year  = date("Y", $this->local_time);
---
> 		$local_time = time();
104,107c183,189
< 		if ($month == '')
< 			$month = date("m", $this->local_time);
< 
< 		if (strlen($year) == 1)
---
> 		// Set and validate the supplied month/year
> 		if (empty($year))
> 		{
> 			$year = date('Y', $local_time);
> 		}
> 		elseif (strlen($year) === 1)
> 		{
109,110c191,193
< 
< 		if (strlen($year) == 2)
---
> 		}
> 		elseif (strlen($year) === 2)
> 		{
111a195
> 		}
113c197,202
< 		if (strlen($month) == 1)
---
> 		if (empty($month))
> 		{
> 			$month = date('m', $local_time);
> 		}
> 		elseif (strlen($month) === 1)
> 		{
114a204
> 		}
126c216
< 		$start_day = ( ! isset($start_days[$this->start_day])) ? 0 : $start_days[$this->start_day];
---
> 		$start_day	= isset($start_days[$this->start_day]) ? $start_days[$this->start_day] : 0;
131c221
< 		$day  = $start_day + 1 - $date["wday"];
---
> 		$day  = $start_day + 1 - $date['wday'];
140,142c230,232
< 		$cur_year	= date("Y", $this->local_time);
< 		$cur_month	= date("m", $this->local_time);
< 		$cur_day	= date("j", $this->local_time);
---
> 		$cur_year	= date('Y', $local_time);
> 		$cur_month	= date('m', $local_time);
> 		$cur_day	= date('j', $local_time);
144c234
< 		$is_current_month = ($cur_year == $year AND $cur_month == $month) ? TRUE : FALSE;
---
> 		$is_current_month = ($cur_year == $year && $cur_month == $month);
150,155c240
< 		$out = $this->temp['table_open'];
< 		$out .= "\n";
< 
< 		$out .= "\n";
< 		$out .= $this->temp['heading_row_start'];
< 		$out .= "\n";
---
> 		$out = $this->replacements['table_open']."\n\n".$this->replacements['heading_row_start']."\n";
158c243
< 		if ($this->show_next_prev == TRUE)
---
> 		if ($this->show_next_prev === TRUE)
161c246
< 			$this->next_prev_url = preg_replace("/(.+?)\/*$/", "\\1/",  $this->next_prev_url);
---
> 			$this->next_prev_url = preg_replace('/(.+?)\/*$/', '\\1/', $this->next_prev_url);
164,165c249
< 			$out .= str_replace('{previous_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->temp['heading_previous_cell']);
< 			$out .= "\n";
---
> 			$out .= str_replace('{previous_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->replacements['heading_previous_cell'])."\n";
169c253
< 		$colspan = ($this->show_next_prev == TRUE) ? 5 : 7;
---
> 		$colspan = ($this->show_next_prev === TRUE) ? 5 : 7;
171,172c255,256
< 		$this->temp['heading_title_cell'] = str_replace('{colspan}', $colspan, $this->temp['heading_title_cell']);
< 		$this->temp['heading_title_cell'] = str_replace('{heading}', $this->get_month_name($month)."&nbsp;".$year, $this->temp['heading_title_cell']);
---
> 		$this->replacements['heading_title_cell'] = str_replace('{colspan}', $colspan,
> 								str_replace('{heading}', $this->get_month_name($month).'&nbsp;'.$year, $this->replacements['heading_title_cell']));
174,175c258
< 		$out .= $this->temp['heading_title_cell'];
< 		$out .= "\n";
---
> 		$out .= $this->replacements['heading_title_cell']."\n";
178c261
< 		if ($this->show_next_prev == TRUE)
---
> 		if ($this->show_next_prev === TRUE)
181c264
< 			$out .= str_replace('{next_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->temp['heading_next_cell']);
---
> 			$out .= str_replace('{next_url}', $this->next_prev_url.$adjusted_date['year'].'/'.$adjusted_date['month'], $this->replacements['heading_next_cell']);
184,187c267
< 		$out .= "\n";
< 		$out .= $this->temp['heading_row_end'];
< 		$out .= "\n";
< 
---
> 		$out .= "\n".$this->replacements['heading_row_end']."\n\n"
189,191c269
< 		$out .= "\n";
< 		$out .= $this->temp['week_row_start'];
< 		$out .= "\n";
---
> 			.$this->replacements['week_row_start']."\n";
197c275
< 			$out .= str_replace('{week_day}', $day_names[($start_day + $i) %7], $this->temp['week_day_cell']);
---
> 			$out .= str_replace('{week_day}', $day_names[($start_day + $i) %7], $this->replacements['week_day_cell']);
200,202c278
< 		$out .= "\n";
< 		$out .= $this->temp['week_row_end'];
< 		$out .= "\n";
---
> 		$out .= "\n".$this->replacements['week_row_end']."\n";
207,209c283
< 			$out .= "\n";
< 			$out .= $this->temp['cal_row_start'];
< 			$out .= "\n";
---
> 			$out .= "\n".$this->replacements['cal_row_start']."\n";
213,215c287
< 				$out .= ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_start_today'] : $this->temp['cal_cell_start'];
< 
< 				if ($day > 0 AND $day <= $total_days)
---
> 				if ($day > 0 && $day <= $total_days)
216a289,290
> 					$out .= ($is_current_month === TRUE && $day == $cur_day) ? $this->replacements['cal_cell_start_today'] : $this->replacements['cal_cell_start'];
> 
220,221c294,296
< 						$temp = ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_content_today'] : $this->temp['cal_cell_content'];
< 						$out .= str_replace('{day}', $day, str_replace('{content}', $data[$day], $temp));
---
> 						$temp = ($is_current_month === TRUE && $day == $cur_day) ?
> 								$this->replacements['cal_cell_content_today'] : $this->replacements['cal_cell_content'];
> 						$out .= str_replace(array('{content}', '{day}'), array($data[$day], $day), $temp);
226c301,302
< 						$temp = ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_no_content_today'] : $this->temp['cal_cell_no_content'];
---
> 						$temp = ($is_current_month === TRUE && $day == $cur_day) ?
> 								$this->replacements['cal_cell_no_content_today'] : $this->replacements['cal_cell_no_content'];
228a305,325
> 
> 					$out .= ($is_current_month === TRUE && $day == $cur_day) ? $this->replacements['cal_cell_end_today'] : $this->replacements['cal_cell_end'];
> 				}
> 				elseif ($this->show_other_days === TRUE)
> 				{
> 					$out .= $this->replacements['cal_cell_start_other'];
> 
> 					if ($day <= 0)
> 					{
> 						// Day of previous month
> 						$prev_month = $this->adjust_date($month - 1, $year);
> 						$prev_month_days = $this->get_total_days($prev_month['month'], $prev_month['year']);
> 						$out .= str_replace('{day}', $prev_month_days + $day, $this->replacements['cal_cell_other']);
> 					}
> 					else
> 					{
> 						// Day of next month
> 						$out .= str_replace('{day}', $day - $total_days, $this->replacements['cal_cell_other']);
> 					}
> 
> 					$out .= $this->replacements['cal_cell_end_other'];
233c330
< 					$out .= $this->temp['cal_cell_blank'];
---
> 					$out .= $this->replacements['cal_cell_start'].$this->replacements['cal_cell_blank'].$this->replacements['cal_cell_end'];
236d332
< 				$out .= ($is_current_month == TRUE AND $day == $cur_day) ? $this->temp['cal_cell_end_today'] : $this->temp['cal_cell_end'];					
240,242c336
< 			$out .= "\n";
< 			$out .= $this->temp['cal_row_end'];
< 			$out .= "\n";
---
> 			$out .= "\n".$this->replacements['cal_row_end']."\n";
245,248c339
< 		$out .= "\n";
< 		$out .= $this->temp['table_close'];
< 
< 		return $out;
---
> 		return $out .= "\n".$this->replacements['table_close'];
259,260c350
< 	 * @access	public
< 	 * @param	integer	the month
---
> 	 * @param	int	the month
263c353
< 	function get_month_name($month)
---
> 	public function get_month_name($month)
265c355
< 		if ($this->month_type == 'short')
---
> 		if ($this->month_type === 'short')
274,281c364,366
< 		$month = $month_names[$month];
< 
< 		if ($this->CI->lang->line($month) === FALSE)
< 		{
< 			return ucfirst(str_replace('cal_', '', $month));
< 		}
< 
< 		return $this->CI->lang->line($month);
---
> 		return ($this->CI->lang->line($month_names[$month]) === FALSE)
> 			? ucfirst(substr($month_names[$month], 4))
> 			: $this->CI->lang->line($month_names[$month]);
290c375
< 	 * on the type.  Options: long, short, abrev
---
> 	 * on the type. Options: long, short, abr
292d376
< 	 * @access	public
296c380,382
< 	function get_day_names($day_type = '')
---
> 	public function get_day_names($day_type = '')
> 	{
> 		if ($day_type !== '')
298d383
< 		if ($day_type != '')
299a385
> 		}
301c387
< 		if ($this->day_type == 'long')
---
> 		if ($this->day_type === 'long')
305c391
< 		elseif ($this->day_type == 'short')
---
> 		elseif ($this->day_type === 'short')
315c401
< 		foreach ($day_names as $val)
---
> 		for ($i = 0, $c = count($day_names); $i < $c; $i++)
317c403
< 			$days[] = ($this->CI->lang->line('cal_'.$val) === FALSE) ? ucfirst($val) : $this->CI->lang->line('cal_'.$val);
---
> 			$days[] = ($this->CI->lang->line('cal_'.$day_names[$i]) === FALSE) ? ucfirst($day_names[$i]) : $this->CI->lang->line('cal_'.$day_names[$i]);
332,334c418,419
< 	 * @access	public
< 	 * @param	integer	the month
< 	 * @param	integer	the year
---
> 	 * @param	int	the month
> 	 * @param	int	the year
337c422
< 	function adjust_date($month, $year)
---
> 	public function adjust_date($month, $year)
356c441
< 		if (strlen($date['month']) == 1)
---
> 		if (strlen($date['month']) === 1)
369,372c454,456
< 	 * @access	public
< 	 * @param	integer	the month
< 	 * @param	integer	the year
< 	 * @return	integer
---
> 	 * @param	int	the month
> 	 * @param	int	the year
> 	 * @return	int
374c458
< 	function get_total_days($month, $year)
---
> 	public function get_total_days($month, $year)
376,392c460,461
< 		$days_in_month	= array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
< 
< 		if ($month < 1 OR $month > 12)
< 		{
< 			return 0;
< 		}
< 
< 		// Is the year a leap year?
< 		if ($month == 2)
< 		{
< 			if ($year % 400 == 0 OR ($year % 4 == 0 AND $year % 100 != 0))
< 			{
< 				return 29;
< 			}
< 		}
< 
< 		return $days_in_month[$month - 1];
---
> 		$this->CI->load->helper('date');
> 		return days_in_month($month, $year);
402d470
< 	 * @access	public
405c473
< 	function default_template()
---
> 	public function default_template()
419a488
> 			'cal_cell_start_other'		=> '<td style="color: #666;">',
424a494
> 			'cal_cell_other'			=> '{day}',
426a497
> 			'cal_cell_end_other'		=> '</td>',
440,441c511
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	CI_Calendar
443c513
< 	function parse_template()
---
> 	public function parse_template()
445c515
< 		$this->temp = $this->default_template();
---
> 		$this->replacements = $this->default_template();
447c517
< 		if ($this->template == '')
---
> 		if (empty($this->template))
449c519
< 			return;
---
> 			return $this;
451a522,523
> 		if (is_string($this->template))
> 		{
454c526
< 		foreach (array('table_open', 'table_close', 'heading_row_start', 'heading_previous_cell', 'heading_title_cell', 'heading_next_cell', 'heading_row_end', 'week_row_start', 'week_day_cell', 'week_row_end', 'cal_row_start', 'cal_cell_start', 'cal_cell_content', 'cal_cell_no_content',  'cal_cell_blank', 'cal_cell_end', 'cal_row_end', 'cal_cell_start_today', 'cal_cell_content_today', 'cal_cell_no_content_today', 'cal_cell_end_today') as $val)
---
> 			foreach (array('table_open', 'table_close', 'heading_row_start', 'heading_previous_cell', 'heading_title_cell', 'heading_next_cell', 'heading_row_end', 'week_row_start', 'week_day_cell', 'week_row_end', 'cal_row_start', 'cal_cell_start', 'cal_cell_content', 'cal_cell_no_content', 'cal_cell_blank', 'cal_cell_end', 'cal_row_end', 'cal_cell_start_today', 'cal_cell_content_today', 'cal_cell_no_content_today', 'cal_cell_end_today', 'cal_cell_start_other', 'cal_cell_other', 'cal_cell_end_other') as $val)
456c528
< 			if (preg_match("/\{".$val."\}(.*?)\{\/".$val."\}/si", $this->template, $match))
---
> 				if (preg_match('/\{'.$val.'\}(.*?)\{\/'.$val.'\}/si', $this->template, $match))
458c530
< 				$this->temp[$val] = $match['1'];
---
> 					$this->replacements[$val] = $match[1];
460,462c532
< 			else
< 			{
< 				if (in_array($val, $today, TRUE))
---
> 				elseif (in_array($val, $today, TRUE))
464c534
< 					$this->temp[$val] = $this->temp[str_replace('_today', '', $val)];
---
> 					$this->replacements[$val] = $this->replacements[substr($val, 0, -6)];
467a538,540
> 		elseif (is_array($this->template))
> 		{
> 			$this->replacements = array_merge($this->replacements, $this->template);
469a543
> 		return $this;
472,475c546
< // END CI_Calendar class
< 
< /* End of file Calendar.php */
< /* Location: ./system/libraries/Calendar.php */
\ No newline at end of file
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Cart.php opensourcepos/system/libraries/Cart.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2006 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,48
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/cart.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/cart.html
>  * @deprecated	3.0.0	This class is too specific for CI.
29,35c52,58
< 	// These are the regular expression rules that we use to validate the product ID and product name
< 	var $product_id_rules	= '\.a-z0-9_-'; // alpha-numeric, dashes, underscores, or periods
< 	var $product_name_rules	= '\.\:\-_ a-z0-9'; // alpha-numeric, dashes, underscores, colons or periods
< 
< 	// Private variables.  Do not change!
< 	var $CI;
< 	var $_cart_contents	= array();
---
> 	/**
> 	 * These are the regular expression rules that we use to validate the product ID and product name
> 	 * alpha-numeric, dashes, underscores, or periods
> 	 *
> 	 * @var string
> 	 */
> 	public $product_id_rules = '\.a-z0-9_-';
36a60,89
> 	/**
> 	 * These are the regular expression rules that we use to validate the product ID and product name
> 	 * alpha-numeric, dashes, underscores, colons or periods
> 	 *
> 	 * @var string
> 	 */
> 	public $product_name_rules = '\w \-\.\:';
> 
> 	/**
> 	 * only allow safe product names
> 	 *
> 	 * @var bool
> 	 */
> 	public $product_name_safe = TRUE;
> 
> 	// --------------------------------------------------------------------------
> 
> 	/**
> 	 * Reference to CodeIgniter instance
> 	 *
> 	 * @var object
> 	 */
> 	protected $CI;
> 
> 	/**
> 	 * Contents of the cart
> 	 *
> 	 * @var array
> 	 */
> 	protected $_cart_contents = array();
41a95,97
> 	 *
> 	 * @param	array
> 	 * @return	void
49,56c105
< 		$config = array();
< 		if (count($params) > 0)
< 		{
< 			foreach ($params as $key => $val)
< 			{
< 				$config[$key] = $val;
< 			}
< 		}
---
> 		$config = is_array($params) ? $params : array();
59c108
< 		$this->CI->load->library('session', $config);
---
> 		$this->CI->load->driver('session', $config);
61,63c110
< 		// Grab the shopping cart array from the session table, if it exists
< 		if ($this->CI->session->userdata('cart_contents') !== FALSE)
< 		{
---
> 		// Grab the shopping cart array from the session table
65,66c112
< 		}
< 		else
---
> 		if ($this->_cart_contents === NULL)
69,70c115
< 			$this->_cart_contents['cart_total'] = 0;
< 			$this->_cart_contents['total_items'] = 0;
---
> 			$this->_cart_contents = array('cart_total' => 0, 'total_items' => 0);
73c118
< 		log_message('debug', "Cart Class Initialized");
---
> 		log_message('info', 'Cart Class Initialized');
81d125
< 	 * @access	public
85c129
< 	function insert($items = array())
---
> 	public function insert($items = array())
88c132
< 		if ( ! is_array($items) OR count($items) == 0)
---
> 		if ( ! is_array($items) OR count($items) === 0)
111c155
< 				if (is_array($val) AND isset($val['id']))
---
> 				if (is_array($val) && isset($val['id']))
122c166
< 		if ($save_cart == TRUE)
---
> 		if ($save_cart === TRUE)
136d179
< 	 * @access	private
140c183
< 	function _insert($items = array())
---
> 	protected function _insert($items = array())
143c186
< 		if ( ! is_array($items) OR count($items) == 0)
---
> 		if ( ! is_array($items) OR count($items) === 0)
152c195
< 		if ( ! isset($items['id']) OR ! isset($items['qty']) OR ! isset($items['price']) OR ! isset($items['name']))
---
> 		if ( ! isset($items['id'], $items['qty'], $items['price'], $items['name']))
160,163c203,204
< 		// Prep the quantity. It can only be a number.  Duh...
< 		$items['qty'] = trim(preg_replace('/([^0-9])/i', '', $items['qty']));
< 		// Trim any leading zeros
< 		$items['qty'] = trim(preg_replace('/(^[0]+)/i', '', $items['qty']));
---
> 		// Prep the quantity. It can only be a number.  Duh... also trim any leading zeros
> 		$items['qty'] = (float) $items['qty'];
166c207
< 		if ( ! is_numeric($items['qty']) OR $items['qty'] == 0)
---
> 		if ($items['qty'] == 0)
176c217
< 		if ( ! preg_match("/^[".$this->product_id_rules."]+$/i", $items['id']))
---
> 		if ( ! preg_match('/^['.$this->product_id_rules.']+$/i', $items['id']))
186c227
< 		if ( ! preg_match("/^[".$this->product_name_rules."]+$/i", $items['name']))
---
> 		if ($this->product_name_safe && ! preg_match('/^['.$this->product_name_rules.']+$/i'.(UTF8_ENABLED ? 'u' : ''), $items['name']))
194,206c235,236
< 		// Prep the price.  Remove anything that isn't a number or decimal point.
< 		$items['price'] = trim(preg_replace('/([^0-9\.])/i', '', $items['price']));
< 		// Trim any leading zeros
< 		$items['price'] = trim(preg_replace('/(^[0]+)/i', '', $items['price']));
< 
< 		// Is the price a valid number?
< 		if ( ! is_numeric($items['price']))
< 		{
< 			log_message('error', 'An invalid price was submitted for product ID: '.$items['id']);
< 			return FALSE;
< 		}
< 
< 		// --------------------------------------------------------------------
---
> 		// Prep the price. Remove leading zeros and anything that isn't a number or decimal point.
> 		$items['price'] = (float) $items['price'];
218c248
< 		if (isset($items['options']) AND count($items['options']) > 0)
---
> 		if (isset($items['options']) && count($items['options']) > 0)
220c250
< 			$rowid = md5($items['id'].implode('', $items['options']));
---
> 			$rowid = md5($items['id'].serialize($items['options']));
232a263,264
> 		// grab quantity if it's already there and add it on
> 		$old_quantity = isset($this->_cart_contents[$rowid]['qty']) ? (int) $this->_cart_contents[$rowid]['qty'] : 0;
234,244c266,269
< 		// let's unset this first, just to make sure our index contains only the data from this submission
< 		unset($this->_cart_contents[$rowid]);
< 
< 		// Create a new index with our new row ID
< 		$this->_cart_contents[$rowid]['rowid'] = $rowid;
< 
< 		// And add the new items to the cart array
< 		foreach ($items as $key => $val)
< 		{
< 			$this->_cart_contents[$rowid][$key] = $val;
< 		}
---
> 		// Re-create the entry, just to make sure our index contains only the data from this submission
> 		$items['rowid'] = $rowid;
> 		$items['qty'] += $old_quantity;
> 		$this->_cart_contents[$rowid] = $items;
246d270
< 		// Woot!
260d283
< 	 * @access	public
262d284
< 	 * @param	string
265c287
< 	function update($items = array())
---
> 	public function update($items = array())
268c290
< 		if ( ! is_array($items) OR count($items) == 0)
---
> 		if ( ! is_array($items) OR count($items) === 0)
275c297
< 		// determine the array type is by looking for a required array key named "id".
---
> 		// determine the array type is by looking for a required array key named "rowid".
278c300
< 		if (isset($items['rowid']) AND isset($items['qty']))
---
> 		if (isset($items['rowid']))
280c302
< 			if ($this->_update($items) == TRUE)
---
> 			if ($this->_update($items) === TRUE)
289c311
< 				if (is_array($val) AND isset($val['rowid']) AND isset($val['qty']))
---
> 				if (is_array($val) && isset($val['rowid']))
291c313
< 					if ($this->_update($val) == TRUE)
---
> 					if ($this->_update($val) === TRUE)
300c322
< 		if ($save_cart == TRUE)
---
> 		if ($save_cart === TRUE)
314c336
< 	 * This function permits the quantity of a given item to be changed.
---
> 	 * This function permits changing item properties.
317c339
< 	 * product ID and quantity for each item.
---
> 	 * rowid and quantity for each item.
319d340
< 	 * @access	private
323c344
< 	function _update($items = array())
---
> 	protected function _update($items = array())
326c347
< 		if ( ! isset($items['qty']) OR ! isset($items['rowid']) OR ! isset($this->_cart_contents[$items['rowid']]))
---
> 		if ( ! isset($items['rowid'], $this->_cart_contents[$items['rowid']]))
332,342c353
< 		$items['qty'] = preg_replace('/([^0-9])/i', '', $items['qty']);
< 
< 		// Is the quantity a number?
< 		if ( ! is_numeric($items['qty']))
< 		{
< 			return FALSE;
< 		}
< 
< 		// Is the new quantity different than what is already saved in the cart?
< 		// If it's the same there's nothing to do
< 		if ($this->_cart_contents[$items['rowid']]['qty'] == $items['qty'])
---
> 		if (isset($items['qty']))
344,346c355
< 			return FALSE;
< 		}
< 
---
> 			$items['qty'] = (float) $items['qty'];
351a361
> 				return TRUE;
353c363,368
< 		else
---
> 		}
> 
> 		// find updatable keys
> 		$keys = array_intersect(array_keys($this->_cart_contents[$items['rowid']]), array_keys($items));
> 		// if a price was passed, make sure it contains valid data
> 		if (isset($items['price']))
355c370,376
< 			$this->_cart_contents[$items['rowid']]['qty'] = $items['qty'];
---
> 			$items['price'] = (float) $items['price'];
> 		}
> 
> 		// product id & name shouldn't be changed
> 		foreach (array_diff($keys, array('id', 'name')) as $key)
> 		{
> 			$this->_cart_contents[$items['rowid']][$key] = $items[$key];
366d386
< 	 * @access	private
369c389
< 	function _save_cart()
---
> 	protected function _save_cart()
371,377c391,392
< 		// Unset these so our total can be calculated correctly below
< 		unset($this->_cart_contents['total_items']);
< 		unset($this->_cart_contents['cart_total']);
< 
< 		// Lets add up the individual prices and set the cart sub-total
< 		$total = 0;
< 		$items = 0;
---
> 		// Let's add up the individual prices and set the cart sub-total
> 		$this->_cart_contents['total_items'] = $this->_cart_contents['cart_total'] = 0;
381c396
< 			if ( ! is_array($val) OR ! isset($val['price']) OR ! isset($val['qty']))
---
> 			if ( ! is_array($val) OR ! isset($val['price'], $val['qty']))
386,389c401,402
< 			$total += ($val['price'] * $val['qty']);
< 			$items += $val['qty'];
< 
< 			// Set the subtotal
---
> 			$this->_cart_contents['cart_total'] += ($val['price'] * $val['qty']);
> 			$this->_cart_contents['total_items'] += $val['qty'];
393,396d405
< 		// Set the cart total and total items.
< 		$this->_cart_contents['total_items'] = $items;
< 		$this->_cart_contents['cart_total'] = $total;
< 
419,420c428
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
422c430
< 	function total()
---
> 	public function total()
429a438,455
> 	 * Remove Item
> 	 *
> 	 * Removes an item from the cart
> 	 *
> 	 * @param	int
> 	 * @return	bool
> 	 */
> 	 public function remove($rowid)
> 	 {
> 		// unset & save
> 		unset($this->_cart_contents[$rowid]);
> 		$this->_save_cart();
> 		return TRUE;
> 	 }
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
434,435c460
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @return	int
437c462
< 	function total_items()
---
> 	public function total_items()
449c474
< 	 * @access	public
---
> 	 * @param	bool
452c477
< 	function contents()
---
> 	public function contents($newest_first = FALSE)
454c479,480
< 		$cart = $this->_cart_contents;
---
> 		// do we want the newest first?
> 		$cart = ($newest_first) ? array_reverse($this->_cart_contents) : $this->_cart_contents;
466c492
< 	 * Has options
---
> 	 * Get cart item
468,469c494
< 	 * Returns TRUE if the rowid passed to this function correlates to an item
< 	 * that has options associated with it.
---
> 	 * Returns the details of a specific item in the cart
471c496
< 	 * @access	public
---
> 	 * @param	string	$row_id
474,476c499
< 	function has_options($rowid = '')
< 	{
< 		if ( ! isset($this->_cart_contents[$rowid]['options']) OR count($this->_cart_contents[$rowid]['options']) === 0)
---
> 	public function get_item($row_id)
478c501,503
< 			return FALSE;
---
> 		return (in_array($row_id, array('total_items', 'cart_total'), TRUE) OR ! isset($this->_cart_contents[$row_id]))
> 			? FALSE
> 			: $this->_cart_contents[$row_id];
481c506,519
< 		return TRUE;
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Has options
> 	 *
> 	 * Returns TRUE if the rowid passed to this function correlates to an item
> 	 * that has options associated with it.
> 	 *
> 	 * @param	string	$row_id = ''
> 	 * @return	bool
> 	 */
> 	public function has_options($row_id = '')
> 	{
> 		return (isset($this->_cart_contents[$row_id]['options']) && count($this->_cart_contents[$row_id]['options']) !== 0);
491c529
< 	 * @access	public
---
> 	 * @param	string	$row_id = ''
494c532
< 	function product_options($rowid = '')
---
> 	public function product_options($row_id = '')
496,501c534
< 		if ( ! isset($this->_cart_contents[$rowid]['options']))
< 		{
< 			return array();
< 		}
< 
< 		return $this->_cart_contents[$rowid]['options'];
---
> 		return isset($this->_cart_contents[$row_id]['options']) ? $this->_cart_contents[$row_id]['options'] : array();
511,512c544,545
< 	 * @access	public
< 	 * @return	integer
---
> 	 * @param	float
> 	 * @return	string
514,516c547
< 	function format_number($n = '')
< 	{
< 		if ($n == '')
---
> 	public function format_number($n = '')
518,524c549
< 			return '';
< 		}
< 
< 		// Remove anything that isn't a number or decimal point.
< 		$n = trim(preg_replace('/([^0-9\.])/i', '', $n));
< 
< 		return number_format($n, 2, '.', ',');
---
> 		return ($n === '') ? '' : number_format( (float) $n, 2, '.', ',');
534,535c559
< 	 * @access	public
< 	 * @return	null
---
> 	 * @return	void
537c561
< 	function destroy()
---
> 	public function destroy()
539,543c563
< 		unset($this->_cart_contents);
< 
< 		$this->_cart_contents['cart_total'] = 0;
< 		$this->_cart_contents['total_items'] = 0;
< 
---
> 		$this->_cart_contents = array('cart_total' => 0, 'total_items' => 0);
549,551d567
< 
< /* End of file Cart.php */
< /* Location: ./system/libraries/Cart.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Driver.php opensourcepos/system/libraries/Driver.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
9,12c31,35
<  * @copyright	Copyright (c) 2006 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
31a54,58
> 	/**
> 	 * Array of drivers that are available to use with the driver class
> 	 *
> 	 * @var array
> 	 */
32a60,65
> 
> 	/**
> 	 * Name of the current class - usually the driver class
> 	 *
> 	 * @var string
> 	 */
35,37c68,91
< 	// The first time a child is used it won't exist, so we instantiate it
< 	// subsequents calls will go straight to the proper child.
< 	function __get($child)
---
> 	/**
> 	 * Get magic method
> 	 *
> 	 * The first time a child is used it won't exist, so we instantiate it
> 	 * subsequents calls will go straight to the proper child.
> 	 *
> 	 * @param	string	Child class name
> 	 * @return	object	Child class
> 	 */
> 	public function __get($child)
> 	{
> 		// Try to load the driver
> 		return $this->load_driver($child);
> 	}
> 
> 	/**
> 	 * Load driver
> 	 *
> 	 * Separate load_driver call to support explicit driver load by library or user
> 	 *
> 	 * @param	string	Driver name (w/o parent prefix)
> 	 * @return	object	Child class
> 	 */
> 	public function load_driver($child)
38a93,95
> 		// Get CodeIgniter instance and subclass prefix
> 		$prefix = config_item('subclass_prefix');
> 
41c98,99
< 			$this->lib_name = get_class($this);
---
> 			// Get library name without any prefix
> 			$this->lib_name = str_replace(array('CI_', $prefix), '', get_class($this));
44,45c102,103
< 		// The class will be prefixed with the parent lib
< 		$child_class = $this->lib_name.'_'.$child;
---
> 		// The child will be prefixed with the parent lib
> 		$child_name = $this->lib_name.'_'.$child;
47,49c105,116
< 		// Remove the CI_ prefix and lowercase
< 		$lib_name = ucfirst(strtolower(str_replace('CI_', '', $this->lib_name)));
< 		$driver_name = strtolower(str_replace('CI_', '', $child_class));
---
> 		// See if requested child is a valid driver
> 		if ( ! in_array($child, $this->valid_drivers))
> 		{
> 			// The requested driver isn't valid!
> 			$msg = 'Invalid driver requested: '.$child_name;
> 			log_message('error', $msg);
> 			show_error($msg);
> 		}
> 
> 		// Get package paths and filename case variations to search
> 		$CI = get_instance();
> 		$paths = $CI->load->get_package_paths(TRUE);
51c118,121
< 		if (in_array($driver_name, array_map('strtolower', $this->valid_drivers)))
---
> 		// Is there an extension?
> 		$class_name = $prefix.$child_name;
> 		$found = class_exists($class_name, FALSE);
> 		if ( ! $found)
53,54c123,124
< 			// check and see if the driver is in a separate file
< 			if ( ! class_exists($child_class))
---
> 			// Check for subclass file
> 			foreach ($paths as $path)
56,57c126,128
< 				// check application path first
< 				foreach (get_instance()->load->get_package_paths(TRUE) as $path)
---
> 				// Does the file exist?
> 				$file = $path.'libraries/'.$this->lib_name.'/drivers/'.$prefix.$child_name.'.php';
> 				if (file_exists($file))
59,60c130,132
< 					// loves me some nesting!
< 					foreach (array(ucfirst($driver_name), $driver_name) as $class)
---
> 					// Yes - require base class from BASEPATH
> 					$basepath = BASEPATH.'libraries/'.$this->lib_name.'/drivers/'.$child_name.'.php';
> 					if ( ! file_exists($basepath))
62c134,137
< 						$filepath = $path.'libraries/'.$lib_name.'/drivers/'.$class.'.php';
---
> 						$msg = 'Unable to load the requested class: CI_'.$child_name;
> 						log_message('error', $msg);
> 						show_error($msg);
> 					}
64c139,160
< 						if (file_exists($filepath))
---
> 					// Include both sources and mark found
> 					include_once($basepath);
> 					include_once($file);
> 					$found = TRUE;
> 					break;
> 				}
> 			}
> 		}
> 
> 		// Do we need to search for the class?
> 		if ( ! $found)
> 		{
> 			// Use standard class name
> 			$class_name = 'CI_'.$child_name;
> 			if ( ! class_exists($class_name, FALSE))
> 			{
> 				// Check package paths
> 				foreach ($paths as $path)
> 				{
> 					// Does the file exist?
> 					$file = $path.'libraries/'.$this->lib_name.'/drivers/'.$child_name.'.php';
> 					if (file_exists($file))
66c162,163
< 							include_once $filepath;
---
> 						// Include source
> 						include_once($file);
70a168
> 		}
72,73c170,173
< 				// it's a valid driver, but the file simply can't be found
< 				if ( ! class_exists($child_class))
---
> 		// Did we finally find the class?
> 		if ( ! class_exists($class_name, FALSE))
> 		{
> 			if (class_exists($child_name, FALSE))
75,76c175,181
< 					log_message('error', "Unable to load the requested driver: ".$child_class);
< 					show_error("Unable to load the requested driver: ".$child_class);
---
> 				$class_name = $child_name;
> 			}
> 			else
> 			{
> 				$msg = 'Unable to load the requested driver: '.$class_name;
> 				log_message('error', $msg);
> 				show_error($msg);
80c185,186
< 			$obj = new $child_class;
---
> 		// Instantiate, decorate and add child
> 		$obj = new $class_name();
86,88d191
< 		// The requested driver isn't valid!
< 		log_message('error', "Invalid driver requested: ".$child_class);
< 		show_error("Invalid driver requested: ".$child_class);
91,95c194
< 	// --------------------------------------------------------------------
< 
< }
< // END CI_Driver_Library CLASS
< 
---
> // --------------------------------------------------------------------------
110d208
< 	protected $parent;
112,113c210,229
< 	private $methods = array();
< 	private $properties = array();
---
> 	/**
> 	 * Instance of the parent class
> 	 *
> 	 * @var object
> 	 */
> 	protected $_parent;
> 
> 	/**
> 	 * List of methods in the parent class
> 	 *
> 	 * @var array
> 	 */
> 	protected $_methods = array();
> 
> 	/**
> 	 * List of properties in the parent class
> 	 *
> 	 * @var array
> 	 */
> 	protected $_properties = array();
115c231,237
< 	private static $reflections = array();
---
> 	/**
> 	 * Array of methods and properties for the parent class(es)
> 	 *
> 	 * @static
> 	 * @var	array
> 	 */
> 	protected static $_reflections = array();
127c249
< 		$this->parent = $parent;
---
> 		$this->_parent = $parent;
134c256
< 		if ( ! isset(self::$reflections[$class_name]))
---
> 		if ( ! isset(self::$_reflections[$class_name]))
142c264
< 					$this->methods[] = $method->getName();
---
> 					$this->_methods[] = $method->getName();
150c272
< 					$this->properties[] = $prop->getName();
---
> 					$this->_properties[] = $prop->getName();
154c276
< 			self::$reflections[$class_name] = array($this->methods, $this->properties);
---
> 			self::$_reflections[$class_name] = array($this->_methods, $this->_properties);
158c280
< 			list($this->methods, $this->properties) = self::$reflections[$class_name];
---
> 			list($this->_methods, $this->_properties) = self::$_reflections[$class_name];
169d290
< 	 * @access	public
176c297
< 		if (in_array($method, $this->methods))
---
> 		if (in_array($method, $this->_methods))
178c299
< 			return call_user_func_array(array($this->parent, $method), $args);
---
> 			return call_user_func_array(array($this->_parent, $method), $args);
181,183c302
< 		$trace = debug_backtrace();
< 		_exception_handler(E_ERROR, "No such method '{$method}'", $trace[1]['file'], $trace[1]['line']);
< 		exit;
---
> 		throw new BadMethodCallException('No such method: '.$method.'()');
198c317
< 		if (in_array($var, $this->properties))
---
> 		if (in_array($var, $this->_properties))
200c319
< 			return $this->parent->$var;
---
> 			return $this->_parent->$var;
217c336
< 		if (in_array($var, $this->properties))
---
> 		if (in_array($var, $this->_properties))
219c338
< 			$this->parent->$var = $val;
---
> 			$this->_parent->$var = $val;
224,227d342
< // END CI_Driver CLASS
< 
< /* End of file Driver.php */
< /* Location: ./system/libraries/Driver.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Email.php opensourcepos/system/libraries/Email.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/email.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/email.html
31,78c53,121
< 	var	$useragent		= "CodeIgniter";
< 	var	$mailpath		= "/usr/sbin/sendmail";	// Sendmail path
< 	var	$protocol		= "mail";	// mail/sendmail/smtp
< 	var	$smtp_host		= "";		// SMTP Server.  Example: mail.earthlink.net
< 	var	$smtp_user		= "";		// SMTP Username
< 	var	$smtp_pass		= "";		// SMTP Password
< 	var	$smtp_port		= "25";		// SMTP Port
< 	var	$smtp_timeout	= 5;		// SMTP Timeout in seconds
< 	var	$smtp_crypto	= "";		// SMTP Encryption. Can be null, tls or ssl.
< 	var	$wordwrap		= TRUE;		// TRUE/FALSE  Turns word-wrap on/off
< 	var	$wrapchars		= "76";		// Number of characters to wrap at.
< 	var	$mailtype		= "text";	// text/html  Defines email formatting
< 	var	$charset		= "utf-8";	// Default char set: iso-8859-1 or us-ascii
< 	var	$multipart		= "mixed";	// "mixed" (in the body) or "related" (separate)
< 	var $alt_message	= '';		// Alternative message for HTML emails
< 	var	$validate		= FALSE;	// TRUE/FALSE.  Enables email validation
< 	var	$priority		= "3";		// Default priority (1 - 5)
< 	var	$newline		= "\n";		// Default newline. "\r\n" or "\n" (Use "\r\n" to comply with RFC 822)
< 	var $crlf			= "\n";		// The RFC 2045 compliant CRLF for quoted-printable is "\r\n".  Apparently some servers,
< 									// even on the receiving end think they need to muck with CRLFs, so using "\n", while
< 									// distasteful, is the only thing that seems to work for all environments.
< 	var $send_multipart	= TRUE;		// TRUE/FALSE - Yahoo does not like multipart alternative, so this is an override.  Set to FALSE for Yahoo.
< 	var	$bcc_batch_mode	= FALSE;	// TRUE/FALSE  Turns on/off Bcc batch feature
< 	var	$bcc_batch_size	= 200;		// If bcc_batch_mode = TRUE, sets max number of Bccs in each batch
< 	var $_safe_mode		= FALSE;
< 	var	$_subject		= "";
< 	var	$_body			= "";
< 	var	$_finalbody		= "";
< 	var	$_alt_boundary	= "";
< 	var	$_atc_boundary	= "";
< 	var	$_header_str	= "";
< 	var	$_smtp_connect	= "";
< 	var	$_encoding		= "8bit";
< 	var $_IP			= FALSE;
< 	var	$_smtp_auth		= FALSE;
< 	var $_replyto_flag	= FALSE;
< 	var	$_debug_msg		= array();
< 	var	$_recipients	= array();
< 	var	$_cc_array		= array();
< 	var	$_bcc_array		= array();
< 	var	$_headers		= array();
< 	var	$_attach_name	= array();
< 	var	$_attach_type	= array();
< 	var	$_attach_disp	= array();
< 	var	$_protocols		= array('mail', 'sendmail', 'smtp');
< 	var	$_base_charsets	= array('us-ascii', 'iso-2022-');	// 7-bit charsets (excluding language suffix)
< 	var	$_bit_depths	= array('7bit', '8bit');
< 	var	$_priorities	= array('1 (Highest)', '2 (High)', '3 (Normal)', '4 (Low)', '5 (Lowest)');
---
> 	/**
> 	 * Used as the User-Agent and X-Mailer headers' value.
> 	 *
> 	 * @var	string
> 	 */
> 	public $useragent	= 'CodeIgniter';
> 
> 	/**
> 	 * Path to the Sendmail binary.
> 	 *
> 	 * @var	string
> 	 */
> 	public $mailpath	= '/usr/sbin/sendmail';	// Sendmail path
> 
> 	/**
> 	 * Which method to use for sending e-mails.
> 	 *
> 	 * @var	string	'mail', 'sendmail' or 'smtp'
> 	 */
> 	public $protocol	= 'mail';		// mail/sendmail/smtp
> 
> 	/**
> 	 * STMP Server host
> 	 *
> 	 * @var	string
> 	 */
> 	public $smtp_host	= '';
> 
> 	/**
> 	 * SMTP Username
> 	 *
> 	 * @var	string
> 	 */
> 	public $smtp_user	= '';
> 
> 	/**
> 	 * SMTP Password
> 	 *
> 	 * @var	string
> 	 */
> 	public $smtp_pass	= '';
> 
> 	/**
> 	 * SMTP Server port
> 	 *
> 	 * @var	int
> 	 */
> 	public $smtp_port	= 25;
> 
> 	/**
> 	 * SMTP connection timeout in seconds
> 	 *
> 	 * @var	int
> 	 */
> 	public $smtp_timeout	= 5;
> 
> 	/**
> 	 * SMTP persistent connection
> 	 *
> 	 * @var	bool
> 	 */
> 	public $smtp_keepalive	= FALSE;
> 
> 	/**
> 	 * SMTP Encryption
> 	 *
> 	 * @var	string	empty, 'tls' or 'ssl'
> 	 */
> 	public $smtp_crypto	= '';
79a123,398
> 	/**
> 	 * Whether to apply word-wrapping to the message body.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $wordwrap	= TRUE;
> 
> 	/**
> 	 * Number of characters to wrap at.
> 	 *
> 	 * @see	CI_Email::$wordwrap
> 	 * @var	int
> 	 */
> 	public $wrapchars	= 76;
> 
> 	/**
> 	 * Message format.
> 	 *
> 	 * @var	string	'text' or 'html'
> 	 */
> 	public $mailtype	= 'text';
> 
> 	/**
> 	 * Character set (default: utf-8)
> 	 *
> 	 * @var	string
> 	 */
> 	public $charset		= 'utf-8';
> 
> 	/**
> 	 * Multipart message
> 	 *
> 	 * @var	string	'mixed' (in the body) or 'related' (separate)
> 	 */
> 	public $multipart	= 'mixed';		// "mixed" (in the body) or "related" (separate)
> 
> 	/**
> 	 * Alternative message (for HTML messages only)
> 	 *
> 	 * @var	string
> 	 */
> 	public $alt_message	= '';
> 
> 	/**
> 	 * Whether to validate e-mail addresses.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $validate	= FALSE;
> 
> 	/**
> 	 * X-Priority header value.
> 	 *
> 	 * @var	int	1-5
> 	 */
> 	public $priority	= 3;			// Default priority (1 - 5)
> 
> 	/**
> 	 * Newline character sequence.
> 	 * Use "\r\n" to comply with RFC 822.
> 	 *
> 	 * @link	http://www.ietf.org/rfc/rfc822.txt
> 	 * @var	string	"\r\n" or "\n"
> 	 */
> 	public $newline		= "\n";			// Default newline. "\r\n" or "\n" (Use "\r\n" to comply with RFC 822)
> 
> 	/**
> 	 * CRLF character sequence
> 	 *
> 	 * RFC 2045 specifies that for 'quoted-printable' encoding,
> 	 * "\r\n" must be used. However, it appears that some servers
> 	 * (even on the receiving end) don't handle it properly and
> 	 * switching to "\n", while improper, is the only solution
> 	 * that seems to work for all environments.
> 	 *
> 	 * @link	http://www.ietf.org/rfc/rfc822.txt
> 	 * @var	string
> 	 */
> 	public $crlf		= "\n";
> 
> 	/**
> 	 * Whether to use Delivery Status Notification.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $dsn		= FALSE;
> 
> 	/**
> 	 * Whether to send multipart alternatives.
> 	 * Yahoo! doesn't seem to like these.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $send_multipart	= TRUE;
> 
> 	/**
> 	 * Whether to send messages to BCC recipients in batches.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $bcc_batch_mode	= FALSE;
> 
> 	/**
> 	 * BCC Batch max number size.
> 	 *
> 	 * @see	CI_Email::$bcc_batch_mode
> 	 * @var	int
> 	 */
> 	public $bcc_batch_size	= 200;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Whether PHP is running in safe mode. Initialized by the class constructor.
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_safe_mode		= FALSE;
> 
> 	/**
> 	 * Subject header
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_subject		= '';
> 
> 	/**
> 	 * Message body
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_body		= '';
> 
> 	/**
> 	 * Final message body to be sent.
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_finalbody		= '';
> 
> 	/**
> 	 * multipart/alternative boundary
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_alt_boundary	= '';
> 
> 	/**
> 	 * Attachment boundary
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_atc_boundary	= '';
> 
> 	/**
> 	 * Final headers to send
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_header_str		= '';
> 
> 	/**
> 	 * SMTP Connection socket placeholder
> 	 *
> 	 * @var	resource
> 	 */
> 	protected $_smtp_connect	= '';
> 
> 	/**
> 	 * Mail encoding
> 	 *
> 	 * @var	string	'8bit' or '7bit'
> 	 */
> 	protected $_encoding		= '8bit';
> 
> 	/**
> 	 * Whether to perform SMTP authentication
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_smtp_auth		= FALSE;
> 
> 	/**
> 	 * Whether to send a Reply-To header
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_replyto_flag	= FALSE;
> 
> 	/**
> 	 * Debug messages
> 	 *
> 	 * @see	CI_Email::print_debugger()
> 	 * @var	string
> 	 */
> 	protected $_debug_msg		= array();
> 
> 	/**
> 	 * Recipients
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_recipients		= array();
> 
> 	/**
> 	 * CC Recipients
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_cc_array		= array();
> 
> 	/**
> 	 * BCC Recipients
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_bcc_array		= array();
> 
> 	/**
> 	 * Message headers
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_headers		= array();
> 
> 	/**
> 	 * Attachment data
> 	 *
> 	 * @var	array
> 	 */
> 	protected $_attachments		= array();
> 
> 	/**
> 	 * Valid $protocol values
> 	 *
> 	 * @see	CI_Email::$protocol
> 	 * @var	string[]
> 	 */
> 	protected $_protocols		= array('mail', 'sendmail', 'smtp');
> 
> 	/**
> 	 * Base charsets
> 	 *
> 	 * Character sets valid for 7-bit encoding,
> 	 * excluding language suffix.
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_base_charsets	= array('us-ascii', 'iso-2022-');
> 
> 	/**
> 	 * Bit depths
> 	 *
> 	 * Valid mail encodings
> 	 *
> 	 * @see	CI_Email::$_encoding
> 	 * @var	string[]
> 	 */
> 	protected $_bit_depths		= array('7bit', '8bit');
> 
> 	/**
> 	 * $priority translations
> 	 *
> 	 * Actual values to send with the X-Priority header
> 	 *
> 	 * @var	string[]
> 	 */
> 	protected $_priorities = array(
> 		1 => '1 (Highest)',
> 		2 => '2 (High)',
> 		3 => '3 (Normal)',
> 		4 => '4 (Low)',
> 		5 => '5 (Lowest)'
> 	);
> 
> 	// --------------------------------------------------------------------
84a404,406
> 	 *
> 	 * @param	array	$config = array()
> 	 * @return	void
86c408
< 	public function __construct($config = array())
---
> 	public function __construct(array $config = array())
87a410,411
> 		$this->charset = config_item('charset');
> 
94,95c418
< 			$this->_smtp_auth = ($this->smtp_user == '' AND $this->smtp_pass == '') ? FALSE : TRUE;
< 			$this->_safe_mode = ((boolean)@ini_get("safe_mode") === FALSE) ? FALSE : TRUE;
---
> 			$this->_smtp_auth = ! ($this->smtp_user === '' && $this->smtp_pass === '');
98c421,439
< 		log_message('debug', "Email Class Initialized");
---
> 		$this->_safe_mode = ( ! is_php('5.4') && ini_get('safe_mode'));
> 		$this->charset = strtoupper($this->charset);
> 
> 		log_message('info', 'Email Class Initialized');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Destructor - Releases Resources
> 	 *
> 	 * @return	void
> 	 */
> 	public function __destruct()
> 	{
> 		if (is_resource($this->_smtp_connect))
> 		{
> 			$this->_send_command('quit');
> 		}
106d446
< 	 * @access	public
108c448
< 	 * @return	void
---
> 	 * @return	CI_Email
130,131c470
< 		$this->_smtp_auth = ($this->smtp_user == '' AND $this->smtp_pass == '') ? FALSE : TRUE;
< 		$this->_safe_mode = ((boolean)@ini_get("safe_mode") === FALSE) ? FALSE : TRUE;
---
> 		$this->_smtp_auth = ! ($this->smtp_user === '' && $this->smtp_pass === '');
141,142c480,481
< 	 * @access	public
< 	 * @return	void
---
> 	 * @param	bool
> 	 * @return	CI_Email
146,149c485,488
< 		$this->_subject		= "";
< 		$this->_body		= "";
< 		$this->_finalbody	= "";
< 		$this->_header_str	= "";
---
> 		$this->_subject		= '';
> 		$this->_body		= '';
> 		$this->_finalbody	= '';
> 		$this->_header_str	= '';
157,158c496,497
< 		$this->_set_header('User-Agent', $this->useragent);
< 		$this->_set_header('Date', $this->_set_date());
---
> 		$this->set_header('User-Agent', $this->useragent);
> 		$this->set_header('Date', $this->_set_date());
162,164c501
< 			$this->_attach_name = array();
< 			$this->_attach_type = array();
< 			$this->_attach_disp = array();
---
> 			$this->_attachments = array();
175,178c512,515
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$from
> 	 * @param	string	$name
> 	 * @param	string	$return_path = NULL	Return-Path
> 	 * @return	CI_Email
180c517
< 	public function from($from, $name = '')
---
> 	public function from($from, $name = '', $return_path = NULL)
184c521
< 			$from = $match['1'];
---
> 			$from = $match[1];
189a527,530
> 			if ($return_path)
> 			{
> 				$this->validate_email($this->_str_to_array($return_path));
> 			}
193c534
< 		if ($name != '')
---
> 		if ($name !== '')
203c544
< 				$name = $this->_prep_q_encoding($name, TRUE);
---
> 				$name = $this->_prep_q_encoding($name);
207,208c548,551
< 		$this->_set_header('From', $name.' <'.$from.'>');
< 		$this->_set_header('Return-Path', '<'.$from.'>');
---
> 		$this->set_header('From', $name.' <'.$from.'>');
> 
> 		isset($return_path) OR $return_path = $from;
> 		$this->set_header('Return-Path', '<'.$return_path.'>');
218d560
< 	 * @access	public
221c563
< 	 * @return	void
---
> 	 * @return	CI_Email
227c569
< 			$replyto = $match['1'];
---
> 			$replyto = $match[1];
235c577
< 		if ($name == '')
---
> 		if ($name !== '')
237c579,583
< 			$name = $replyto;
---
> 			// only use Q encoding if there are characters that would require it
> 			if ( ! preg_match('/[\200-\377]/', $name))
> 			{
> 				// add slashes for non-printing characters, slashes, and double quotes, and surround it in double quotes
> 				$name = '"'.addcslashes($name, "\0..\37\177'\"\\").'"';
239,240c585
< 
< 		if (strncmp($name, '"', 1) != 0)
---
> 			else
242c587,588
< 			$name = '"'.$name.'"';
---
> 				$name = $this->_prep_q_encoding($name);
> 			}
245c591
< 		$this->_set_header('Reply-To', $name.' <'.$replyto.'>');
---
> 		$this->set_header('Reply-To', $name.' <'.$replyto.'>');
256d601
< 	 * @access	public
258c603
< 	 * @return	void
---
> 	 * @return	CI_Email
270c615
< 		if ($this->_get_protocol() != 'mail')
---
> 		if ($this->_get_protocol() !== 'mail')
272c617
< 			$this->_set_header('To', implode(", ", $to));
---
> 			$this->set_header('To', implode(', ', $to));
275,277d619
< 		switch ($this->_get_protocol())
< 		{
< 			case 'smtp'		:
279,284d620
< 			break;
< 			case 'sendmail'	:
< 			case 'mail'		:
< 				$this->_recipients = implode(", ", $to);
< 			break;
< 		}
294d629
< 	 * @access	public
296c631
< 	 * @return	void
---
> 	 * @return	CI_Email
300,301c635
< 		$cc = $this->_str_to_array($cc);
< 		$cc = $this->clean_email($cc);
---
> 		$cc = $this->clean_email($this->_str_to_array($cc));
308c642
< 		$this->_set_header('Cc', implode(", ", $cc));
---
> 		$this->set_header('Cc', implode(', ', $cc));
310c644
< 		if ($this->_get_protocol() == "smtp")
---
> 		if ($this->_get_protocol() === 'smtp')
323d656
< 	 * @access	public
326c659
< 	 * @return	void
---
> 	 * @return	CI_Email
330c663
< 		if ($limit != '' && is_numeric($limit))
---
> 		if ($limit !== '' && is_numeric($limit))
336,337c669
< 		$bcc = $this->_str_to_array($bcc);
< 		$bcc = $this->clean_email($bcc);
---
> 		$bcc = $this->clean_email($this->_str_to_array($bcc));
344c676
< 		if (($this->_get_protocol() == "smtp") OR ($this->bcc_batch_mode && count($bcc) > $this->bcc_batch_size))
---
> 		if ($this->_get_protocol() === 'smtp' OR ($this->bcc_batch_mode && count($bcc) > $this->bcc_batch_size))
350c682
< 			$this->_set_header('Bcc', implode(", ", $bcc));
---
> 			$this->set_header('Bcc', implode(', ', $bcc));
361d692
< 	 * @access	public
363c694
< 	 * @return	void
---
> 	 * @return	CI_Email
368c699
< 		$this->_set_header('Subject', $subject);
---
> 		$this->set_header('Subject', $subject);
377d707
< 	 * @access	public
379c709
< 	 * @return	void
---
> 	 * @return	CI_Email
383c713
< 		$this->_body = rtrim(str_replace("\r", "", $body));
---
> 		$this->_body = rtrim(str_replace("\r", '', $body));
404,406c734,738
< 	 * @access	public
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$file	Can be local path, URL or buffered content
> 	 * @param	string	$disposition = 'attachment'
> 	 * @param	string	$newname = NULL
> 	 * @param	string	$mime = ''
> 	 * @return	CI_Email
408c740,744
< 	public function attach($filename, $disposition = 'attachment')
---
> 	public function attach($file, $disposition = '', $newname = NULL, $mime = '')
> 	{
> 		if ($mime === '')
> 		{
> 			if (strpos($file, '://') === FALSE && ! file_exists($file))
410,412c746,771
< 		$this->_attach_name[] = $filename;
< 		$this->_attach_type[] = $this->_mime_types(pathinfo($filename, PATHINFO_EXTENSION));
< 		$this->_attach_disp[] = $disposition; // Can also be 'inline'  Not sure if it matters
---
> 				$this->_set_error_message('lang:email_attachment_missing', $file);
> 				return FALSE;
> 			}
> 
> 			if ( ! $fp = @fopen($file, 'rb'))
> 			{
> 				$this->_set_error_message('lang:email_attachment_unreadable', $file);
> 				return FALSE;
> 			}
> 
> 			$file_content = stream_get_contents($fp);
> 			$mime = $this->_mime_types(pathinfo($file, PATHINFO_EXTENSION));
> 			fclose($fp);
> 		}
> 		else
> 		{
> 			$file_content =& $file; // buffered file
> 		}
> 
> 		$this->_attachments[] = array(
> 			'name'		=> array($file, $newname),
> 			'disposition'	=> empty($disposition) ? 'attachment' : $disposition,  // Can also be 'inline'  Not sure if it matters
> 			'type'		=> $mime,
> 			'content'	=> chunk_split(base64_encode($file_content))
> 		);
> 
418a778,806
> 	 * Set and return attachment Content-ID
> 	 *
> 	 * Useful for attached inline pictures
> 	 *
> 	 * @param	string	$filename
> 	 * @return	string
> 	 */
> 	public function attachment_cid($filename)
> 	{
> 		if ($this->multipart !== 'related')
> 		{
> 			$this->multipart = 'related'; // Thunderbird need this for inline images
> 		}
> 
> 		for ($i = 0, $c = count($this->_attachments); $i < $c; $i++)
> 		{
> 			if ($this->_attachments[$i]['name'][0] === $filename)
> 			{
> 				$this->_attachments[$i]['cid'] = uniqid(basename($this->_attachments[$i]['name'][0]).'@');
> 				return $this->_attachments[$i]['cid'];
> 			}
> 		}
> 
> 		return FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
421d808
< 	 * @access	protected
424c811
< 	 * @return	void
---
> 	 * @return	CI_Email
426c813
< 	protected function _set_header($header, $value)
---
> 	public function set_header($header, $value)
428c815,816
< 		$this->_headers[$header] = $value;
---
> 		$this->_headers[$header] = str_replace(array("\n", "\r"), '', $value);
> 		return $this;
436d823
< 	 * @access	protected
444,452c831,833
< 			if (strpos($email, ',') !== FALSE)
< 			{
< 				$email = preg_split('/[\s,]/', $email, -1, PREG_SPLIT_NO_EMPTY);
< 			}
< 			else
< 			{
< 				$email = trim($email);
< 				settype($email, "array");
< 			}
---
> 			return (strpos($email, ',') !== FALSE)
> 				? preg_split('/[\s,]/', $email, -1, PREG_SPLIT_NO_EMPTY)
> 				: (array) trim($email);
462d843
< 	 * @access	public
464c845
< 	 * @return	void
---
> 	 * @return	CI_Email
466c847
< 	public function set_alt_message($str = '')
---
> 	public function set_alt_message($str)
468c849
< 		$this->alt_message = $str;
---
> 		$this->alt_message = (string) $str;
477d857
< 	 * @access	public
479c859
< 	 * @return	void
---
> 	 * @return	CI_Email
483c863
< 		$this->mailtype = ($type == 'html') ? 'html' : 'text';
---
> 		$this->mailtype = ($type === 'html') ? 'html' : 'text';
492,494c872,873
< 	 * @access	public
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	bool
> 	 * @return	CI_Email
498c877
< 		$this->wordwrap = ($wordwrap === FALSE) ? FALSE : TRUE;
---
> 		$this->wordwrap = (bool) $wordwrap;
507d885
< 	 * @access	public
509c887
< 	 * @return	void
---
> 	 * @return	CI_Email
513c891
< 		$this->protocol = ( ! in_array($protocol, $this->_protocols, TRUE)) ? 'mail' : strtolower($protocol);
---
> 		$this->protocol = in_array($protocol, $this->_protocols, TRUE) ? strtolower($protocol) : 'mail';
522,524c900,901
< 	 * @access	public
< 	 * @param	integer
< 	 * @return	void
---
> 	 * @param	int
> 	 * @return	CI_Email
528,540c905
< 		if ( ! is_numeric($n))
< 		{
< 			$this->priority = 3;
< 			return;
< 		}
< 
< 		if ($n < 1 OR $n > 5)
< 		{
< 			$this->priority = 3;
< 			return;
< 		}
< 
< 		$this->priority = $n;
---
> 		$this->priority = preg_match('/^[1-5]$/', $n) ? (int) $n : 3;
549d913
< 	 * @access	public
551c915
< 	 * @return	void
---
> 	 * @return	CI_Email
555,562c919
< 		if ($newline != "\n" AND $newline != "\r\n" AND $newline != "\r")
< 		{
< 			$this->newline	= "\n";
< 			return;
< 		}
< 
< 		$this->newline	= $newline;
< 
---
> 		$this->newline = in_array($newline, array("\n", "\r\n", "\r")) ? $newline : "\n";
571d927
< 	 * @access	public
573c929
< 	 * @return	void
---
> 	 * @return	CI_Email
577,584c933
< 		if ($crlf != "\n" AND $crlf != "\r\n" AND $crlf != "\r")
< 		{
< 			$this->crlf	= "\n";
< 			return;
< 		}
< 
< 		$this->crlf	= $crlf;
< 
---
> 		$this->crlf = ($crlf !== "\n" && $crlf !== "\r\n" && $crlf !== "\r") ? "\n" : $crlf;
593d941
< 	 * @access	protected
598,599c946,947
< 		$this->_alt_boundary = "B_ALT_".uniqid(''); // multipart/alternative
< 		$this->_atc_boundary = "B_ATC_".uniqid(''); // attachment boundary
---
> 		$this->_alt_boundary = 'B_ALT_'.uniqid(''); // multipart/alternative
> 		$this->_atc_boundary = 'B_ATC_'.uniqid(''); // attachment boundary
607d954
< 	 * @access	protected
612,616c959,960
< 		$from = $this->_headers['Return-Path'];
< 		$from = str_replace(">", "", $from);
< 		$from = str_replace("<", "", $from);
< 
< 		return  "<".uniqid('').strstr($from, '@').">";
---
> 		$from = str_replace(array('>', '<'), '', $this->_headers['Return-Path']);
> 		return '<'.uniqid('').strstr($from, '@').'>';
624d967
< 	 * @access	protected
626c969
< 	 * @return	string
---
> 	 * @return	mixed
631c974
< 		$this->protocol = ( ! in_array($this->protocol, $this->_protocols, TRUE)) ? 'mail' : $this->protocol;
---
> 		in_array($this->protocol, $this->_protocols, TRUE) OR $this->protocol = 'mail';
633c976
< 		if ($return == TRUE)
---
> 		if ($return === TRUE)
644d986
< 	 * @access	protected
650c992
< 		$this->_encoding = ( ! in_array($this->_encoding, $this->_bit_depths)) ? '8bit' : $this->_encoding;
---
> 		in_array($this->_encoding, $this->_bit_depths) OR $this->_encoding = '8bit';
654c996
< 			if (strncmp($charset, $this->charset, strlen($charset)) == 0)
---
> 			if (strpos($charset, $this->charset) === 0)
660c1002
< 		if ($return == TRUE)
---
> 		if ($return === TRUE)
671d1012
< 	 * @access	protected
676,680c1017
< 		if	($this->mailtype == 'html' &&  count($this->_attach_name) == 0)
< 		{
< 			return 'html';
< 		}
< 		elseif	($this->mailtype == 'html' &&  count($this->_attach_name)  > 0)
---
> 		if ($this->mailtype === 'html')
682c1019
< 			return 'html-attach';
---
> 			return (count($this->_attachments) === 0) ? 'html' : 'html-attach';
684c1021
< 		elseif	($this->mailtype == 'text' &&  count($this->_attach_name)  > 0)
---
> 		elseif	($this->mailtype === 'text' && count($this->_attachments) > 0)
699d1035
< 	 * @access	protected
704,705c1040,1041
< 		$timezone = date("Z");
< 		$operator = (strncmp($timezone, '-', 1) == 0) ? '-' : '+';
---
> 		$timezone = date('Z');
> 		$operator = ($timezone[0] === '-') ? '-' : '+';
709c1045
< 		return sprintf("%s %s%04d", date("D, j M Y H:i:s"), $operator, $timezone);
---
> 		return sprintf('%s %s%04d', date('D, j M Y H:i:s'), $operator, $timezone);
717d1052
< 	 * @access	protected
722c1057
< 		return "This is a multi-part message in MIME format.".$this->newline."Your email application may not support this format.";
---
> 		return 'This is a multi-part message in MIME format.'.$this->newline.'Your email application may not support this format.';
730d1064
< 	 * @access	public
759d1092
< 	 * @access	public
763c1096
< 	public function valid_email($address)
---
> 	public function valid_email($email)
765c1098,1103
< 		return ( ! preg_match("/^([a-z0-9\+_\-]+)(\.[a-z0-9\+_\-]+)*@([a-z0-9\-]+\.)+[a-z]{2,6}$/ix", $address)) ? FALSE : TRUE;
---
> 		if (function_exists('idn_to_ascii') && $atpos = strpos($email, '@'))
> 		{
> 			$email = substr($email, 0, ++$atpos).idn_to_ascii(substr($email, $atpos));
> 		}
> 
> 		return (bool) filter_var($email, FILTER_VALIDATE_EMAIL);
773d1110
< 	 * @access	public
781,788c1118
< 			if (preg_match('/\<(.*)\>/', $email, $match))
< 			{
< 				return $match['1'];
< 			}
< 			else
< 			{
< 				return $email;
< 			}
---
> 			return preg_match('/\<(.*)\>/', $email, $match) ? $match[1] : $email;
795,802c1125
< 			if (preg_match( '/\<(.*)\>/', $addy, $match))
< 			{
< 				$clean_email[] = $match['1'];
< 			}
< 			else
< 			{
< 				$clean_email[] = $addy;
< 			}
---
> 			$clean_email[] = preg_match('/\<(.*)\>/', $addy, $match) ? $match[1] : $addy;
813,814c1136,1137
< 	 * This public function provides the raw message for use
< 	 * in plain-text headers of HTML-formatted emails.
---
> 	 * Provides the raw message for use in plain-text headers of
> 	 * HTML-formatted emails.
818d1140
< 	 * @access	protected
823c1145
< 		if ($this->alt_message != "")
---
> 		if ( ! empty($this->alt_message))
825c1147,1149
< 			return $this->word_wrap($this->alt_message, '76');
---
> 			return ($this->wordwrap)
> 				? $this->word_wrap($this->alt_message, 76)
> 				: $this->alt_message;
828,839c1152,1153
< 		if (preg_match('/\<body.*?\>(.*)\<\/body\>/si', $this->_body, $match))
< 		{
< 			$body = $match['1'];
< 		}
< 		else
< 		{
< 			$body = $this->_body;
< 		}
< 
< 		$body = trim(strip_tags($body));
< 		$body = preg_replace( '#<!--(.*)--\>#', "", $body);
< 		$body = str_replace("\t", "", $body);
---
> 		$body = preg_match('/\<body.*?\>(.*)\<\/body\>/si', $this->_body, $match) ? $match[1] : $this->_body;
> 		$body = str_replace("\t", '', preg_replace('#<!--(.*)--\>#', '', trim(strip_tags($body))));
843,847c1157
< 			$n = "";
< 
< 			for ($x = 1; $x <= $i; $x ++)
< 			{
< 				$n .= "\n";
---
> 			$body = str_replace(str_repeat("\n", $i), "\n\n", $body);
850,851c1160,1161
< 			$body = str_replace($n, "\n\n", $body);
< 		}
---
> 		// Reduce multiple spaces
> 		$body = preg_replace('| +|', ' ', $body);
853c1163,1165
< 		return $this->word_wrap($body, '76');
---
> 		return ($this->wordwrap)
> 			? $this->word_wrap($body, 76)
> 			: $body;
861d1172
< 	 * @access	public
863c1174
< 	 * @param	integer
---
> 	 * @param	int	line-length limit
866c1177
< 	public function word_wrap($str, $charlim = '')
---
> 	public function word_wrap($str, $charlim = NULL)
868,869c1179,1180
< 		// Se the character limit
< 		if ($charlim == '')
---
> 		// Set the character limit, if not already present
> 		if (empty($charlim))
871c1182
< 			$charlim = ($this->wrapchars == "") ? "76" : $this->wrapchars;
---
> 			$charlim = empty($this->wrapchars) ? 76 : $this->wrapchars;
874,876d1184
< 		// Reduce multiple spaces
< 		$str = preg_replace("| +|", " ", $str);
< 
882a1191,1193
> 		// Reduce multiple spaces at end of line
> 		$str = preg_replace('| +\n|', "\n", $str);
> 
886c1197
< 		if (preg_match_all("|(\{unwrap\}.+?\{/unwrap\})|s", $str, $matches))
---
> 		if (preg_match_all('|\{unwrap\}(.+?)\{/unwrap\}|s', $str, $matches))
888c1199
< 			for ($i = 0; $i < count($matches['0']); $i++)
---
> 			for ($i = 0, $c = count($matches[0]); $i < $c; $i++)
890,891c1201,1202
< 				$unwrap[] = $matches['1'][$i];
< 				$str = str_replace($matches['1'][$i], "{{unwrapped".$i."}}", $str);
---
> 				$unwrap[] = $matches[1][$i];
> 				$str = str_replace($matches[0][$i], '{{unwrapped'.$i.'}}', $str);
895c1206
< 		// Use PHP's native public function to do the initial wordwrap.
---
> 		// Use PHP's native function to do the initial wordwrap.
901c1212
< 		$output = "";
---
> 		$output = '';
906c1217
< 			if (strlen($line) <= $charlim)
---
> 			if (mb_strlen($line) <= $charlim)
913c1224
< 			while ((strlen($line)) > $charlim)
---
> 			do
916c1227
< 				if (preg_match("!\[url.+\]|://|wwww.!", $line))
---
> 				if (preg_match('!\[url.+\]|://|www\.!', $line))
922,923c1233,1234
< 				$temp .= substr($line, 0, $charlim-1);
< 				$line = substr($line, $charlim-1);
---
> 				$temp .= mb_substr($line, 0, $charlim - 1);
> 				$line = mb_substr($line, $charlim - 1);
924a1236
> 			while (mb_strlen($line) > $charlim);
928,932c1240
< 			if ($temp != '')
< 			{
< 				$output .= $temp.$this->newline.$line;
< 			}
< 			else
---
> 			if ($temp !== '')
934c1242
< 				$output .= $line;
---
> 				$output .= $temp.$this->newline;
937c1245
< 			$output .= $this->newline;
---
> 			$output .= $line.$this->newline;
945c1253
< 				$output = str_replace("{{unwrapped".$key."}}", $val, $output);
---
> 				$output = str_replace('{{unwrapped'.$key.'}}', $val, $output);
957,958d1264
< 	 * @access	protected
< 	 * @param	string
963,967c1269,1273
< 		$this->_set_header('X-Sender', $this->clean_email($this->_headers['From']));
< 		$this->_set_header('X-Mailer', $this->useragent);
< 		$this->_set_header('X-Priority', $this->_priorities[$this->priority - 1]);
< 		$this->_set_header('Message-ID', $this->_get_message_id());
< 		$this->_set_header('Mime-Version', '1.0');
---
> 		$this->set_header('X-Sender', $this->clean_email($this->_headers['From']));
> 		$this->set_header('X-Mailer', $this->useragent);
> 		$this->set_header('X-Priority', $this->_priorities[$this->priority]);
> 		$this->set_header('Message-ID', $this->_get_message_id());
> 		$this->set_header('Mime-Version', '1.0');
975d1280
< 	 * @access	protected
980c1285,1287
< 		if ($this->protocol == 'mail')
---
> 		if ($this->protocol === 'mail')
> 		{
> 			if (isset($this->_headers['Subject']))
984a1292
> 		}
987c1295
< 		$this->_header_str = "";
---
> 		$this->_header_str = '';
993c1301
< 			if ($val != "")
---
> 			if ($val !== '')
995c1303
< 				$this->_header_str .= $key.": ".$val.$this->newline;
---
> 				$this->_header_str .= $key.': '.$val.$this->newline;
999c1307
< 		if ($this->_get_protocol() == 'mail')
---
> 		if ($this->_get_protocol() === 'mail')
1010,1011c1318
< 	 * @access	protected
< 	 * @return	void
---
> 	 * @return	bool
1015c1322
< 		if ($this->wordwrap === TRUE  AND  $this->mailtype != 'html')
---
> 		if ($this->wordwrap === TRUE && $this->mailtype !== 'html')
1023c1330
< 		$hdr = ($this->_get_protocol() == 'mail') ? $this->newline : '';
---
> 		$hdr = ($this->_get_protocol() === 'mail') ? $this->newline : '';
1030,1031c1337,1338
< 				$hdr .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
< 				$hdr .= "Content-Transfer-Encoding: " . $this->_get_encoding();
---
> 				$hdr .= 'Content-Type: text/plain; charset='.$this->charset.$this->newline
> 					.'Content-Transfer-Encoding: '.$this->_get_encoding();
1033c1340
< 				if ($this->_get_protocol() == 'mail')
---
> 				if ($this->_get_protocol() === 'mail')
1035c1342
< 					$this->_header_str .= rtrim($hdr);
---
> 					$this->_header_str .= $hdr;
1045d1351
< 			break;
1050,1051c1356,1357
< 					$hdr .= "Content-Type: text/html; charset=" . $this->charset . $this->newline;
< 					$hdr .= "Content-Transfer-Encoding: quoted-printable";
---
> 					$hdr .= 'Content-Type: text/html; charset='.$this->charset.$this->newline
> 						.'Content-Transfer-Encoding: quoted-printable';
1055c1361
< 					$hdr .= "Content-Type: multipart/alternative; boundary=\"" . $this->_alt_boundary . "\"" . $this->newline . $this->newline;
---
> 					$hdr .= 'Content-Type: multipart/alternative; boundary="'.$this->_alt_boundary.'"';
1057,1058c1363,1364
< 					$body .= $this->_get_mime_message() . $this->newline . $this->newline;
< 					$body .= "--" . $this->_alt_boundary . $this->newline;
---
> 					$body .= $this->_get_mime_message().$this->newline.$this->newline
> 						.'--'.$this->_alt_boundary.$this->newline
1060,1062c1366,1368
< 					$body .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
< 					$body .= "Content-Transfer-Encoding: " . $this->_get_encoding() . $this->newline . $this->newline;
< 					$body .= $this->_get_alt_message() . $this->newline . $this->newline . "--" . $this->_alt_boundary . $this->newline;
---
> 						.'Content-Type: text/plain; charset='.$this->charset.$this->newline
> 						.'Content-Transfer-Encoding: '.$this->_get_encoding().$this->newline.$this->newline
> 						.$this->_get_alt_message().$this->newline.$this->newline.'--'.$this->_alt_boundary.$this->newline
1064,1065c1370,1371
< 					$body .= "Content-Type: text/html; charset=" . $this->charset . $this->newline;
< 					$body .= "Content-Transfer-Encoding: quoted-printable" . $this->newline . $this->newline;
---
> 						.'Content-Type: text/html; charset='.$this->charset.$this->newline
> 						.'Content-Transfer-Encoding: quoted-printable'.$this->newline.$this->newline;
1070,1071c1376
< 
< 				if ($this->_get_protocol() == 'mail')
---
> 				if ($this->_get_protocol() === 'mail')
1073c1378
< 					$this->_header_str .= rtrim($hdr);
---
> 					$this->_header_str .= $hdr;
1077c1382
< 					$this->_finalbody = $hdr . $this->_finalbody;
---
> 					$this->_finalbody = $hdr.$this->newline.$this->newline.$this->_finalbody;
1083c1387
< 					$this->_finalbody .= "--" . $this->_alt_boundary . "--";
---
> 					$this->_finalbody .= '--'.$this->_alt_boundary.'--';
1088d1391
< 			break;
1091c1394
< 				$hdr .= "Content-Type: multipart/".$this->multipart."; boundary=\"" . $this->_atc_boundary."\"" . $this->newline . $this->newline;
---
> 				$hdr .= 'Content-Type: multipart/'.$this->multipart.'; boundary="'.$this->_atc_boundary.'"';
1093c1396
< 				if ($this->_get_protocol() == 'mail')
---
> 				if ($this->_get_protocol() === 'mail')
1095c1398
< 					$this->_header_str .= rtrim($hdr);
---
> 					$this->_header_str .= $hdr;
1098,1104c1401,1407
< 				$body .= $this->_get_mime_message() . $this->newline . $this->newline;
< 				$body .= "--" . $this->_atc_boundary . $this->newline;
< 
< 				$body .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
< 				$body .= "Content-Transfer-Encoding: " . $this->_get_encoding() . $this->newline . $this->newline;
< 
< 				$body .= $this->_body . $this->newline . $this->newline;
---
> 				$body .= $this->_get_mime_message().$this->newline
> 					.$this->newline
> 					.'--'.$this->_atc_boundary.$this->newline
> 					.'Content-Type: text/plain; charset='.$this->charset.$this->newline
> 					.'Content-Transfer-Encoding: '.$this->_get_encoding().$this->newline
> 					.$this->newline
> 					.$this->_body.$this->newline.$this->newline;
1109c1412
< 				$hdr .= "Content-Type: multipart/".$this->multipart."; boundary=\"" . $this->_atc_boundary."\"" . $this->newline . $this->newline;
---
> 				$hdr .= 'Content-Type: multipart/'.$this->multipart.'; boundary="'.$this->_atc_boundary.'"';
1111c1414
< 				if ($this->_get_protocol() == 'mail')
---
> 				if ($this->_get_protocol() === 'mail')
1113c1416
< 					$this->_header_str .= rtrim($hdr);
---
> 					$this->_header_str .= $hdr;
1116,1117c1419,1420
< 				$body .= $this->_get_mime_message() . $this->newline . $this->newline;
< 				$body .= "--" . $this->_atc_boundary . $this->newline;
---
> 				$body .= $this->_get_mime_message().$this->newline.$this->newline
> 					.'--'.$this->_atc_boundary.$this->newline
1119,1120c1422,1423
< 				$body .= "Content-Type: multipart/alternative; boundary=\"" . $this->_alt_boundary . "\"" . $this->newline .$this->newline;
< 				$body .= "--" . $this->_alt_boundary . $this->newline;
---
> 					.'Content-Type: multipart/alternative; boundary="'.$this->_alt_boundary.'"'.$this->newline.$this->newline
> 					.'--'.$this->_alt_boundary.$this->newline
1122,1124c1425,1427
< 				$body .= "Content-Type: text/plain; charset=" . $this->charset . $this->newline;
< 				$body .= "Content-Transfer-Encoding: " . $this->_get_encoding() . $this->newline . $this->newline;
< 				$body .= $this->_get_alt_message() . $this->newline . $this->newline . "--" . $this->_alt_boundary . $this->newline;
---
> 					.'Content-Type: text/plain; charset='.$this->charset.$this->newline
> 					.'Content-Transfer-Encoding: '.$this->_get_encoding().$this->newline.$this->newline
> 					.$this->_get_alt_message().$this->newline.$this->newline.'--'.$this->_alt_boundary.$this->newline
1126,1127c1429,1430
< 				$body .= "Content-Type: text/html; charset=" . $this->charset . $this->newline;
< 				$body .= "Content-Transfer-Encoding: quoted-printable" . $this->newline . $this->newline;
---
> 					.'Content-Type: text/html; charset='.$this->charset.$this->newline
> 					.'Content-Transfer-Encoding: quoted-printable'.$this->newline.$this->newline
1129,1130c1432,1433
< 				$body .= $this->_prep_quoted_printable($this->_body) . $this->newline . $this->newline;
< 				$body .= "--" . $this->_alt_boundary . "--" . $this->newline . $this->newline;
---
> 					.$this->_prep_quoted_printable($this->_body).$this->newline.$this->newline
> 					.'--'.$this->_alt_boundary.'--'.$this->newline.$this->newline;
1136,1173c1439
< 
< 		$z = 0;
< 
< 		for ($i=0; $i < count($this->_attach_name); $i++)
< 		{
< 			$filename = $this->_attach_name[$i];
< 			$basename = basename($filename);
< 			$ctype = $this->_attach_type[$i];
< 
< 			if ( ! file_exists($filename))
< 			{
< 				$this->_set_error_message('lang:email_attachment_missing', $filename);
< 				return FALSE;
< 			}
< 
< 			$h  = "--".$this->_atc_boundary.$this->newline;
< 			$h .= "Content-type: ".$ctype."; ";
< 			$h .= "name=\"".$basename."\"".$this->newline;
< 			$h .= "Content-Disposition: ".$this->_attach_disp[$i].";".$this->newline;
< 			$h .= "Content-Transfer-Encoding: base64".$this->newline;
< 
< 			$attachment[$z++] = $h;
< 			$file = filesize($filename) +1;
< 
< 			if ( ! $fp = fopen($filename, FOPEN_READ))
< 			{
< 				$this->_set_error_message('lang:email_attachment_unreadable', $filename);
< 				return FALSE;
< 			}
< 
< 			$attachment[$z++] = chunk_split(base64_encode(fread($fp, $file)));
< 			fclose($fp);
< 		}
< 
< 		$body .= implode($this->newline, $attachment).$this->newline."--".$this->_atc_boundary."--";
< 
< 
< 		if ($this->_get_protocol() == 'mail')
---
> 		for ($i = 0, $c = count($this->_attachments), $z = 0; $i < $c; $i++)
1175,1180c1441,1458
< 			$this->_finalbody = $body;
< 		}
< 		else
< 		{
< 			$this->_finalbody = $hdr . $body;
< 		}
---
> 			$filename = $this->_attachments[$i]['name'][0];
> 			$basename = ($this->_attachments[$i]['name'][1] === NULL)
> 				? basename($filename) : $this->_attachments[$i]['name'][1];
> 
> 			$attachment[$z++] = '--'.$this->_atc_boundary.$this->newline
> 				.'Content-type: '.$this->_attachments[$i]['type'].'; '
> 				.'name="'.$basename.'"'.$this->newline
> 				.'Content-Disposition: '.$this->_attachments[$i]['disposition'].';'.$this->newline
> 				.'Content-Transfer-Encoding: base64'.$this->newline
> 				.(empty($this->_attachments[$i]['cid']) ? '' : 'Content-ID: <'.$this->_attachments[$i]['cid'].'>'.$this->newline);
> 
> 			$attachment[$z++] = $this->_attachments[$i]['content'];
> 		}
> 
> 		$body .= implode($this->newline, $attachment).$this->newline.'--'.$this->_atc_boundary.'--';
> 		$this->_finalbody = ($this->_get_protocol() === 'mail')
> 			? $body
> 			: $hdr.$this->newline.$this->newline.$body;
1182c1460
< 		return;
---
> 		return TRUE;
1193d1470
< 	 * @access	protected
1195d1471
< 	 * @param	integer
1198c1474,1498
< 	protected function _prep_quoted_printable($str, $charlim = '')
---
> 	protected function _prep_quoted_printable($str)
> 	{
> 		// ASCII code numbers for "safe" characters that can always be
> 		// used literally, without encoding, as described in RFC 2049.
> 		// http://www.ietf.org/rfc/rfc2049.txt
> 		static $ascii_safe_chars = array(
> 			// ' (  )   +   ,   -   .   /   :   =   ?
> 			39, 40, 41, 43, 44, 45, 46, 47, 58, 61, 63,
> 			// numbers
> 			48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
> 			// upper-case letters
> 			65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
> 			// lower-case letters
> 			97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122
> 		);
> 
> 		// We are intentionally wrapping so mail servers will encode characters
> 		// properly and MUAs will behave, so {unwrap} must go!
> 		$str = str_replace(array('{unwrap}', '{/unwrap}'), '', $str);
> 
> 		// RFC 2045 specifies CRLF as "\r\n".
> 		// However, many developers choose to override that and violate
> 		// the RFC rules due to (apparently) a bug in MS Exchange,
> 		// which only works with "\n".
> 		if ($this->crlf === "\r\n")
1200,1203c1500
< 		// Set the character limit
< 		// Don't allow over 76, as that will make servers and MUAs barf
< 		// all over quoted-printable data
< 		if ($charlim == '' OR $charlim > '76')
---
> 			if (is_php('5.3'))
1205c1502,1507
< 			$charlim = '76';
---
> 				return quoted_printable_encode($str);
> 			}
> 			elseif (function_exists('imap_8bit'))
> 			{
> 				return imap_8bit($str);
> 			}
1208,1212c1510,1511
< 		// Reduce multiple spaces
< 		$str = preg_replace("| +|", " ", $str);
< 
< 		// kill nulls
< 		$str = preg_replace('/\x00+/', '', $str);
---
> 		// Reduce multiple spaces & remove nulls
> 		$str = preg_replace(array('| +|', '/\x00+/'), array(' ', ''), $str);
1220,1226d1518
< 		// We are intentionally wrapping so mail servers will encode characters
< 		// properly and MUAs will behave, so {unwrap} must go!
< 		$str = str_replace(array('{unwrap}', '{/unwrap}'), '', $str);
< 
< 		// Break into an array of lines
< 		$lines = explode("\n", $str);
< 
1230c1522
< 		foreach ($lines as $line)
---
> 		foreach (explode("\n", $str) as $line)
1241c1533
< 				$char = substr($line, $i, 1);
---
> 				$char = $line[$i];
1245c1537
< 				if ($i == ($length - 1))
---
> 				if ($ascii === 32 OR $ascii === 9)
1247c1539,1541
< 					$char = ($ascii == '32' OR $ascii == '9') ? $escape.sprintf('%02s', dechex($ascii)) : $char;
---
> 					if ($i === ($length - 1))
> 					{
> 						$char = $escape.sprintf('%02s', dechex($ascii));
1249,1251c1543,1548
< 
< 				// encode = signs
< 				if ($ascii == '61')
---
> 				}
> 				// DO NOT move this below the $ascii_safe_chars line!
> 				//
> 				// = (equals) signs are allowed by RFC2049, but must be encoded
> 				// as they are the encoding delimiter!
> 				elseif ($ascii === 61)
1254a1552,1555
> 				elseif ( ! in_array($ascii, $ascii_safe_chars, TRUE))
> 				{
> 					$char = $escape.strtoupper(sprintf('%02s', dechex($ascii)));
> 				}
1258c1559
< 				if ((strlen($temp) + strlen($char)) >= $charlim)
---
> 				if ((strlen($temp) + strlen($char)) >= 76)
1273,1275c1574
< 		$output = substr($output, 0, strlen($this->crlf) * -1);
< 
< 		return $output;
---
> 		return substr($output, 0, strlen($this->crlf) * -1);
1283,1284c1582,1584
< 	 * Performs "Q Encoding" on a string for use in email headers.  It's related
< 	 * but not identical to quoted-printable, so it has its own method
---
> 	 * Performs "Q Encoding" on a string for use in email headers.
> 	 * It's related but not identical to quoted-printable, so it has its
> 	 * own method.
1286,1289c1586,1587
< 	 * @access	public
< 	 * @param	str
< 	 * @param	bool	// set to TRUE for processing From: headers
< 	 * @return	str
---
> 	 * @param	string
> 	 * @return	string
1291c1589
< 	protected function _prep_q_encoding($str, $from = FALSE)
---
> 	protected function _prep_q_encoding($str)
1293,1297c1591
< 		$str = str_replace(array("\r", "\n"), array('', ''), $str);
< 
< 		// Line length must not exceed 76 characters, so we adjust for
< 		// a space, 7 extra characters =??Q??=, and the charset that we will add to each line
< 		$limit = 75 - 7 - strlen($this->charset);
---
> 		$str = str_replace(array("\r", "\n"), '', $str);
1299,1300c1593,1608
< 		// these special characters must be converted too
< 		$convert = array('_', '=', '?');
---
> 		if ($this->charset === 'UTF-8')
> 		{
> 			// Note: We used to have mb_encode_mimeheader() as the first choice
> 			//       here, but it turned out to be buggy and unreliable. DO NOT
> 			//       re-add it! -- Narf
> 			if (ICONV_ENABLED === TRUE)
> 			{
> 				$output = @iconv_mime_encode('', $str,
> 					array(
> 						'scheme' => 'Q',
> 						'line-length' => 76,
> 						'input-charset' => $this->charset,
> 						'output-charset' => $this->charset,
> 						'line-break-chars' => $this->crlf
> 					)
> 				);
1302c1610,1611
< 		if ($from === TRUE)
---
> 				// There are reports that iconv_mime_encode() might fail and return FALSE
> 				if ($output !== FALSE)
1304,1305c1613,1616
< 			$convert[] = ',';
< 			$convert[] = ';';
---
> 					// iconv_mime_encode() will always put a header field name.
> 					// We've passed it an empty one, but it still prepends our
> 					// encoded string with ': ', so we need to strip it.
> 					return substr($output, 2);
1308,1311c1619,1621
< 		$output = '';
< 		$temp = '';
< 
< 		for ($i = 0, $length = strlen($str); $i < $length; $i++)
---
> 				$chars = iconv_strlen($str, 'UTF-8');
> 			}
> 			elseif (MB_ENABLED === TRUE)
1313,1315c1623,1625
< 			// Grab the next character
< 			$char = substr($str, $i, 1);
< 			$ascii = ord($char);
---
> 				$chars = mb_strlen($str, 'UTF-8');
> 			}
> 		}
1317,1318c1627,1631
< 			// convert ALL non-printable ASCII characters and our specials
< 			if ($ascii < 32 OR $ascii > 126 OR in_array($char, $convert))
---
> 		// We might already have this set for UTF-8
> 		isset($chars) OR $chars = strlen($str);
> 
> 		$output = '=?'.$this->charset.'?Q?';
> 		for ($i = 0, $length = strlen($output); $i < $chars; $i++)
1320,1321c1633,1635
< 				$char = '='.dechex($ascii);
< 			}
---
> 			$chr = ($this->charset === 'UTF-8' && ICONV_ENABLED === TRUE)
> 				? '='.implode('=', str_split(strtoupper(bin2hex(iconv_substr($str, $i, 1, $this->charset))), 2))
> 				: '='.strtoupper(bin2hex($str[$i]));
1323,1324c1637,1639
< 			// handle regular spaces a bit more compactly than =20
< 			if ($ascii == 32)
---
> 			// RFC 2045 sets a limit of 76 characters per line.
> 			// We'll append ?= to the end of each line though.
> 			if ($length + ($l = strlen($chr)) > 74)
1326c1641,1643
< 				$char = '_';
---
> 				$output .= '?='.$this->crlf // EOL
> 					.' =?'.$this->charset.'?Q?'.$chr; // New line
> 				$length = 6 + strlen($this->charset) + $l; // Reset the length for the new line
1328,1331c1645
< 
< 			// If we're at the character limit, add the line to the output,
< 			// reset our temp variable, and keep on chuggin'
< 			if ((strlen($temp) + strlen($char)) >= $limit)
---
> 			else
1333,1334c1647,1648
< 				$output .= $temp.$this->crlf;
< 				$temp = '';
---
> 				$output .= $chr;
> 				$length += $l;
1336,1338d1649
< 
< 			// Add the character to our temporary line
< 			$temp .= $char;
1341,1347c1652,1653
< 		$str = $output.$temp;
< 
< 		// wrap each line with the shebang, charset, and transfer encoding
< 		// the preceding space on successive lines is required for header "folding"
< 		$str = trim(preg_replace('/^(.*)$/m', ' =?'.$this->charset.'?Q?$1?=', $str));
< 
< 		return $str;
---
> 		// End the header
> 		return $output.'?=';
1355c1661
< 	 * @access	public
---
> 	 * @param	bool	$auto_clear = TRUE
1358c1664,1666
< 	public function send()
---
> 	public function send($auto_clear = TRUE)
> 	{
> 		if ( ! isset($this->_headers['From']))
1360c1668,1672
< 		if ($this->_replyto_flag == FALSE)
---
> 			$this->_set_error_message('lang:email_no_from');
> 			return FALSE;
> 		}
> 
> 		if ($this->_replyto_flag === FALSE)
1365,1367c1677,1679
< 		if (( ! isset($this->_recipients) AND ! isset($this->_headers['To']))  AND
< 			( ! isset($this->_bcc_array) AND ! isset($this->_headers['Bcc'])) AND
< 			( ! isset($this->_headers['Cc'])))
---
> 		if ( ! isset($this->_recipients) && ! isset($this->_headers['To'])
> 			&& ! isset($this->_bcc_array) && ! isset($this->_headers['Bcc'])
> 			&& ! isset($this->_headers['Cc']))
1375c1687,1691
< 		if ($this->bcc_batch_mode  AND  count($this->_bcc_array) > 0)
---
> 		if ($this->bcc_batch_mode && count($this->_bcc_array) > $this->bcc_batch_size)
> 		{
> 			$result = $this->batch_bcc_send();
> 
> 			if ($result && $auto_clear)
1377,1378c1693
< 			if (count($this->_bcc_array) > $this->bcc_batch_size)
< 				return $this->batch_bcc_send();
---
> 				$this->clear();
1381c1696,1697
< 		$this->_build_message();
---
> 			return $result;
> 		}
1383c1699
< 		if ( ! $this->_spool_email())
---
> 		if ($this->_build_message() === FALSE)
1387c1703,1706
< 		else
---
> 
> 		$result = $this->_spool_email();
> 
> 		if ($result && $auto_clear)
1389c1708
< 			return TRUE;
---
> 			$this->clear();
1390a1710,1711
> 
> 		return $result;
1398,1399c1719
< 	 * @access	public
< 	 * @return	bool
---
> 	 * @return	void
1404,1406c1724
< 
< 		$set = "";
< 
---
> 		$set = '';
1409c1727
< 		for ($i = 0; $i < count($this->_bcc_array); $i++)
---
> 		for ($i = 0, $c = count($this->_bcc_array); $i < $c; $i++)
1413c1731
< 				$set .= ", ".$this->_bcc_array[$i];
---
> 				$set .= ', '.$this->_bcc_array[$i];
1416c1734
< 			if ($i == $float)
---
> 			if ($i === $float)
1419,1420c1737,1738
< 				$float = $float + $this->bcc_batch_size;
< 				$set = "";
---
> 				$float += $this->bcc_batch_size;
> 				$set = '';
1423c1741
< 			if ($i == count($this->_bcc_array)-1)
---
> 			if ($i === $c-1)
1429c1747
< 		for ($i = 0; $i < count($chunk); $i++)
---
> 		for ($i = 0, $c = count($chunk); $i < $c; $i++)
1432d1749
< 			unset($bcc);
1434,1435c1751
< 			$bcc = $this->_str_to_array($chunk[$i]);
< 			$bcc = $this->clean_email($bcc);
---
> 			$bcc = $this->clean_email($this->_str_to_array($chunk[$i]));
1437c1753
< 			if ($this->protocol != 'smtp')
---
> 			if ($this->protocol !== 'smtp')
1439c1755
< 				$this->_set_header('Bcc', implode(", ", $bcc));
---
> 				$this->set_header('Bcc', implode(', ', $bcc));
1446c1762,1766
< 			$this->_build_message();
---
> 			if ($this->_build_message() === FALSE)
> 			{
> 				return FALSE;
> 			}
> 
1456d1775
< 	 * @access	protected
1461c1780
< 		$this->_finalbody = preg_replace_callback("/\{unwrap\}(.*?)\{\/unwrap\}/si", array($this, '_remove_nl_callback'), $this->_finalbody);
---
> 		$this->_finalbody = preg_replace_callback('/\{unwrap\}(.*?)\{\/unwrap\}/si', array($this, '_remove_nl_callback'), $this->_finalbody);
1469c1788
< 	 * @access	protected
---
> 	 * @param	string	$matches
1487d1805
< 	 * @access	protected
1494,1514c1812,1813
< 		switch ($this->_get_protocol())
< 		{
< 			case 'mail'	:
< 
< 					if ( ! $this->_send_with_mail())
< 					{
< 						$this->_set_error_message('lang:email_send_failure_phpmail');
< 						return FALSE;
< 					}
< 			break;
< 			case 'sendmail'	:
< 
< 					if ( ! $this->_send_with_sendmail())
< 					{
< 						$this->_set_error_message('lang:email_send_failure_sendmail');
< 						return FALSE;
< 					}
< 			break;
< 			case 'smtp'	:
< 
< 					if ( ! $this->_send_with_smtp())
---
> 		$method = '_send_with_'.$this->_get_protocol();
> 		if ( ! $this->$method())
1516c1815
< 						$this->_set_error_message('lang:email_send_failure_smtp');
---
> 			$this->_set_error_message('lang:email_send_failure_'.($this->_get_protocol() === 'mail' ? 'phpmail' : $this->_get_protocol()));
1519,1521d1817
< 			break;
< 
< 		}
1532d1827
< 	 * @access	protected
1537c1832
< 		if ($this->_safe_mode == TRUE)
---
> 		if (is_array($this->_recipients))
1539,1541c1834
< 			if ( ! mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str))
< 			{
< 				return FALSE;
---
> 			$this->_recipients = implode(', ', $this->_recipients);
1543c1836,1837
< 			else
---
> 
> 		if ($this->_safe_mode === TRUE)
1545,1546c1839
< 				return TRUE;
< 			}
---
> 			return mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str);
1552,1560c1845
< 
< 			if ( ! mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str, "-f ".$this->clean_email($this->_headers['From'])))
< 			{
< 				return FALSE;
< 			}
< 			else
< 			{
< 				return TRUE;
< 			}
---
> 			return mail($this->_recipients, $this->_subject, $this->_finalbody, $this->_header_str, '-f '.$this->clean_email($this->_headers['Return-Path']));
1569d1853
< 	 * @access	protected
1574,1576c1858,1863
< 		$fp = @popen($this->mailpath . " -oi -f ".$this->clean_email($this->_headers['From'])." -t", 'w');
< 
< 		if ($fp === FALSE OR $fp === NULL)
---
> 		// is popen() enabled?
> 		if ( ! function_usable('popen')
> 			OR FALSE === ($fp = @popen(
> 						$this->mailpath.' -oi -f '.$this->clean_email($this->_headers['From']).' -t'
> 						, 'w'))
> 		) // server probably has popen disabled, so nothing we can do to get a verbose error.
1578d1864
< 			// server probably has popen disabled, so nothing we can do to get a verbose error.
1587,1592c1873
< 		if (version_compare(PHP_VERSION, '4.2.3') == -1)
< 		{
< 			$status = $status >> 8 & 0xFF;
< 		}
< 
< 		if ($status != 0)
---
> 		if ($status !== 0)
1607d1887
< 	 * @access	protected
1612c1892
< 		if ($this->smtp_host == '')
---
> 		if ($this->smtp_host === '')
1618,1619c1898,1901
< 		$this->_smtp_connect();
< 		$this->_smtp_authenticate();
---
> 		if ( ! $this->_smtp_connect() OR ! $this->_smtp_authenticate())
> 		{
> 			return FALSE;
> 		}
1621c1903,1906
< 		$this->_send_command('from', $this->clean_email($this->_headers['From']));
---
> 		if ( ! $this->_send_command('from', $this->clean_email($this->_headers['From'])))
> 		{
> 			return FALSE;
> 		}
1625c1910,1913
< 			$this->_send_command('to', $val);
---
> 			if ( ! $this->_send_command('to', $val))
> 			{
> 				return FALSE;
> 			}
1632c1920
< 				if ($val != "")
---
> 				if ($val !== '' && ! $this->_send_command('to', $val))
1634c1922
< 					$this->_send_command('to', $val);
---
> 					return FALSE;
1643c1931
< 				if ($val != "")
---
> 				if ($val !== '' && ! $this->_send_command('to', $val))
1645c1933
< 					$this->_send_command('to', $val);
---
> 					return FALSE;
1650c1938,1941
< 		$this->_send_command('data');
---
> 		if ( ! $this->_send_command('data'))
> 		{
> 			return FALSE;
> 		}
1661c1952
< 		if (strncmp($reply, '250', 3) != 0)
---
> 		if (strpos($reply, '250') !== 0)
1666a1958,1963
> 		if ($this->smtp_keepalive)
> 		{
> 			$this->_send_command('reset');
> 		}
> 		else
> 		{
1667a1965,1966
> 		}
> 
1676,1677d1974
< 	 * @access	protected
< 	 * @param	string
1682,1684c1979,1985
< 		$ssl = NULL;
< 		if ($this->smtp_crypto == 'ssl')
< 			$ssl = 'ssl://';
---
> 		if (is_resource($this->_smtp_connect))
> 		{
> 			return TRUE;
> 		}
> 
> 		$ssl = ($this->smtp_crypto === 'ssl') ? 'ssl://' : '';
> 
1693c1994
< 			$this->_set_error_message('lang:email_smtp_error', $errno." ".$errstr);
---
> 			$this->_set_error_message('lang:email_smtp_error', $errno.' '.$errstr);
1696a1998
> 		stream_set_timeout($this->_smtp_connect, $this->smtp_timeout);
1699c2001
< 		if ($this->smtp_crypto == 'tls')
---
> 		if ($this->smtp_crypto === 'tls')
1703c2005,2012
< 			stream_socket_enable_crypto($this->_smtp_connect, TRUE, STREAM_CRYPTO_METHOD_TLS_CLIENT);
---
> 
> 			$crypto = stream_socket_enable_crypto($this->_smtp_connect, TRUE, STREAM_CRYPTO_METHOD_TLS_CLIENT);
> 
> 			if ($crypto !== TRUE)
> 			{
> 				$this->_set_error_message('lang:email_smtp_error', $this->_get_smtp_data());
> 				return FALSE;
> 			}
1714d2022
< 	 * @access	protected
1725c2033,2034
< 					if ($this->_smtp_auth OR $this->_get_encoding() == '8bit')
---
> 						if ($this->_smtp_auth OR $this->_get_encoding() === '8bit')
> 						{
1726a2036
> 						}
1727a2038
> 						{
1728a2040
> 						}
1745a2056,2061
> 						if ($this->dsn)
> 						{
> 							$this->_send_data('RCPT TO:<'.$data.'> NOTIFY=SUCCESS,DELAY,FAILURE ORCPT=rfc822;'.$data);
> 						}
> 						else
> 						{
1746a2063
> 						}
1755a2072,2076
> 			case 'reset':
> 
> 						$this->_send_data('RSET');
> 						$resp = 250;
> 			break;
1766c2086
< 		$this->_debug_msg[] = "<pre>".$cmd.": ".$reply."</pre>";
---
> 		$this->_debug_msg[] = '<pre>'.$cmd.': '.$reply.'</pre>';
1768c2088
< 		if (substr($reply, 0, 3) != $resp)
---
> 		if ((int) substr($reply, 0, 3) !== $resp)
1774c2094
< 		if ($cmd == 'quit')
---
> 		if ($cmd === 'quit')
1787d2106
< 	 * @access	protected
1797c2116
< 		if ($this->smtp_user == ""  AND  $this->smtp_pass == "")
---
> 		if ($this->smtp_user === '' && $this->smtp_pass === '')
1807c2126,2130
< 		if (strncmp($reply, '334', 3) != 0)
---
> 		if (strpos($reply, '503') === 0)	// Already authenticated
> 		{
> 			return TRUE;
> 		}
> 		elseif (strpos($reply, '334') !== 0)
1817c2140
< 		if (strncmp($reply, '334', 3) != 0)
---
> 		if (strpos($reply, '334') !== 0)
1827c2150
< 		if (strncmp($reply, '235', 3) != 0)
---
> 		if (strpos($reply, '235') !== 0)
1841c2164
< 	 * @access	protected
---
> 	 * @param	string	$data
1846c2169,2170
< 		if ( ! fwrite($this->_smtp_connect, $data . $this->newline))
---
> 		$data .= $this->newline;
> 		for ($written = $timestamp = 0, $length = strlen($data); $written < $length; $written += $result)
1848,1849c2172,2190
< 			$this->_set_error_message('lang:email_smtp_data_failure', $data);
< 			return FALSE;
---
> 			if (($result = fwrite($this->_smtp_connect, substr($data, $written))) === FALSE)
> 			{
> 				break;
> 			}
> 			// See https://bugs.php.net/bug.php?id=39598 and http://php.net/manual/en/function.fwrite.php#96951
> 			elseif ($result === 0)
> 			{
> 				if ($timestamp === 0)
> 				{
> 					$timestamp = time();
> 				}
> 				elseif ($timestamp < (time() - $this->smtp_timeout))
> 				{
> 					$result = FALSE;
> 					break;
> 				}
> 
> 				usleep(250000);
> 				continue;
1853c2194,2201
< 			return TRUE;
---
> 				$timestamp = 0;
> 			}
> 		}
> 
> 		if ($result === FALSE)
> 		{
> 			$this->_set_error_message('lang:email_smtp_data_failure', $data);
> 			return FALSE;
1854a2203,2204
> 
> 		return TRUE;
1862d2211
< 	 * @access	protected
1867c2216
< 		$data = "";
---
> 		$data = '';
1873c2222
< 			if (substr($str, 3, 1) == " ")
---
> 			if ($str[3] === ' ')
1887,1898c2236,2238
< 	 * @access	protected
< 	 * @return	string
< 	 */
< 	protected function _get_hostname()
< 	{
< 		return (isset($_SERVER['SERVER_NAME'])) ? $_SERVER['SERVER_NAME'] : 'localhost.localdomain';
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Get IP
---
> 	 * There are only two legal types of hostname - either a fully
> 	 * qualified domain name (eg: "mail.example.com") or an IP literal
> 	 * (eg: "[1.2.3.4]").
1900c2240,2241
< 	 * @access	protected
---
> 	 * @link	https://tools.ietf.org/html/rfc5321#section-2.3.5
> 	 * @link	http://cbl.abuseat.org/namingproblems.html
1903,1919c2244
< 	protected function _get_ip()
< 	{
< 		if ($this->_IP !== FALSE)
< 		{
< 			return $this->_IP;
< 		}
< 
< 		$cip = (isset($_SERVER['HTTP_CLIENT_IP']) AND $_SERVER['HTTP_CLIENT_IP'] != "") ? $_SERVER['HTTP_CLIENT_IP'] : FALSE;
< 		$rip = (isset($_SERVER['REMOTE_ADDR']) AND $_SERVER['REMOTE_ADDR'] != "") ? $_SERVER['REMOTE_ADDR'] : FALSE;
< 		$fip = (isset($_SERVER['HTTP_X_FORWARDED_FOR']) AND $_SERVER['HTTP_X_FORWARDED_FOR'] != "") ? $_SERVER['HTTP_X_FORWARDED_FOR'] : FALSE;
< 
< 		if ($cip && $rip)	$this->_IP = $cip;
< 		elseif ($rip)		$this->_IP = $rip;
< 		elseif ($cip)		$this->_IP = $cip;
< 		elseif ($fip)		$this->_IP = $fip;
< 
< 		if (strpos($this->_IP, ',') !== FALSE)
---
> 	protected function _get_hostname()
1921,1925c2246
< 			$x = explode(',', $this->_IP);
< 			$this->_IP = end($x);
< 		}
< 
< 		if ( ! preg_match( "/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/", $this->_IP))
---
> 		if (isset($_SERVER['SERVER_NAME']))
1927c2248
< 			$this->_IP = '0.0.0.0';
---
> 			return $_SERVER['SERVER_NAME'];
1930,1934c2251
< 		unset($cip);
< 		unset($rip);
< 		unset($fip);
< 
< 		return $this->_IP;
---
> 		return isset($_SERVER['SERVER_ADDR']) ? '['.$_SERVER['SERVER_ADDR'].']' : '[127.0.0.1]';
1942c2259,2260
< 	 * @access	public
---
> 	 * @param	array	$include	List of raw data chunks to include in the output
> 	 *					Valid options are: 'headers', 'subject', 'body'
1945c2263
< 	public function print_debugger()
---
> 	public function print_debugger($include = array('headers', 'subject', 'body'))
1957,1958c2275,2294
< 		$msg .= "<pre>".htmlspecialchars($this->_header_str)."\n".htmlspecialchars($this->_subject)."\n".htmlspecialchars($this->_finalbody).'</pre>';
< 		return $msg;
---
> 		// Determine which parts of our raw data needs to be printed
> 		$raw_data = '';
> 		is_array($include) OR $include = array($include);
> 
> 		if (in_array('headers', $include, TRUE))
> 		{
> 			$raw_data = htmlspecialchars($this->_header_str)."\n";
> 		}
> 
> 		if (in_array('subject', $include, TRUE))
> 		{
> 			$raw_data .= htmlspecialchars($this->_subject)."\n";
> 		}
> 
> 		if (in_array('body', $include, TRUE))
> 		{
> 			$raw_data .= htmlspecialchars($this->_finalbody);
> 		}
> 
> 		return $msg.($raw_data === '' ? '' : '<pre>'.$raw_data.'</pre>');
1966,1968c2302,2304
< 	 * @access	protected
< 	 * @param	string
< 	 * @return	string
---
> 	 * @param	string	$msg
> 	 * @param	string	$val = ''
> 	 * @return	void
1975c2311
< 		if (substr($msg, 0, 5) != 'lang:' || FALSE === ($line = $CI->lang->line(substr($msg, 5))))
---
> 		if (sscanf($msg, 'lang:%s', $line) !== 1 OR FALSE === ($line = $CI->lang->line($line)))
1977c2313
< 			$this->_debug_msg[] = str_replace('%s', $val, $msg)."<br />";
---
> 			$this->_debug_msg[] = str_replace('%s', $val, $msg).'<br />';
1981c2317
< 			$this->_debug_msg[] = str_replace('%s', $val, $line)."<br />";
---
> 			$this->_debug_msg[] = str_replace('%s', $val, $line).'<br />';
1990d2325
< 	 * @access	protected
1994c2329
< 	protected function _mime_types($ext = "")
---
> 	protected function _mime_types($ext = '')
1996,2083c2331,2333
< 		$mimes = array(	'hqx'	=>	'application/mac-binhex40',
< 						'cpt'	=>	'application/mac-compactpro',
< 						'doc'	=>	'application/msword',
< 						'bin'	=>	'application/macbinary',
< 						'dms'	=>	'application/octet-stream',
< 						'lha'	=>	'application/octet-stream',
< 						'lzh'	=>	'application/octet-stream',
< 						'exe'	=>	'application/octet-stream',
< 						'class'	=>	'application/octet-stream',
< 						'psd'	=>	'application/octet-stream',
< 						'so'	=>	'application/octet-stream',
< 						'sea'	=>	'application/octet-stream',
< 						'dll'	=>	'application/octet-stream',
< 						'oda'	=>	'application/oda',
< 						'pdf'	=>	'application/pdf',
< 						'ai'	=>	'application/postscript',
< 						'eps'	=>	'application/postscript',
< 						'ps'	=>	'application/postscript',
< 						'smi'	=>	'application/smil',
< 						'smil'	=>	'application/smil',
< 						'mif'	=>	'application/vnd.mif',
< 						'xls'	=>	'application/vnd.ms-excel',
< 						'ppt'	=>	'application/vnd.ms-powerpoint',
< 						'wbxml'	=>	'application/vnd.wap.wbxml',
< 						'wmlc'	=>	'application/vnd.wap.wmlc',
< 						'dcr'	=>	'application/x-director',
< 						'dir'	=>	'application/x-director',
< 						'dxr'	=>	'application/x-director',
< 						'dvi'	=>	'application/x-dvi',
< 						'gtar'	=>	'application/x-gtar',
< 						'php'	=>	'application/x-httpd-php',
< 						'php4'	=>	'application/x-httpd-php',
< 						'php3'	=>	'application/x-httpd-php',
< 						'phtml'	=>	'application/x-httpd-php',
< 						'phps'	=>	'application/x-httpd-php-source',
< 						'js'	=>	'application/x-javascript',
< 						'swf'	=>	'application/x-shockwave-flash',
< 						'sit'	=>	'application/x-stuffit',
< 						'tar'	=>	'application/x-tar',
< 						'tgz'	=>	'application/x-tar',
< 						'xhtml'	=>	'application/xhtml+xml',
< 						'xht'	=>	'application/xhtml+xml',
< 						'zip'	=>	'application/zip',
< 						'mid'	=>	'audio/midi',
< 						'midi'	=>	'audio/midi',
< 						'mpga'	=>	'audio/mpeg',
< 						'mp2'	=>	'audio/mpeg',
< 						'mp3'	=>	'audio/mpeg',
< 						'aif'	=>	'audio/x-aiff',
< 						'aiff'	=>	'audio/x-aiff',
< 						'aifc'	=>	'audio/x-aiff',
< 						'ram'	=>	'audio/x-pn-realaudio',
< 						'rm'	=>	'audio/x-pn-realaudio',
< 						'rpm'	=>	'audio/x-pn-realaudio-plugin',
< 						'ra'	=>	'audio/x-realaudio',
< 						'rv'	=>	'video/vnd.rn-realvideo',
< 						'wav'	=>	'audio/x-wav',
< 						'bmp'	=>	'image/bmp',
< 						'gif'	=>	'image/gif',
< 						'jpeg'	=>	'image/jpeg',
< 						'jpg'	=>	'image/jpeg',
< 						'jpe'	=>	'image/jpeg',
< 						'png'	=>	'image/png',
< 						'tiff'	=>	'image/tiff',
< 						'tif'	=>	'image/tiff',
< 						'css'	=>	'text/css',
< 						'html'	=>	'text/html',
< 						'htm'	=>	'text/html',
< 						'shtml'	=>	'text/html',
< 						'txt'	=>	'text/plain',
< 						'text'	=>	'text/plain',
< 						'log'	=>	'text/plain',
< 						'rtx'	=>	'text/richtext',
< 						'rtf'	=>	'text/rtf',
< 						'xml'	=>	'text/xml',
< 						'xsl'	=>	'text/xml',
< 						'mpeg'	=>	'video/mpeg',
< 						'mpg'	=>	'video/mpeg',
< 						'mpe'	=>	'video/mpeg',
< 						'qt'	=>	'video/quicktime',
< 						'mov'	=>	'video/quicktime',
< 						'avi'	=>	'video/x-msvideo',
< 						'movie'	=>	'video/x-sgi-movie',
< 						'doc'	=>	'application/msword',
< 						'word'	=>	'application/msword',
< 						'xl'	=>	'application/excel',
< 						'eml'	=>	'message/rfc822'
< 					);
---
> 		$ext = strtolower($ext);
> 
> 		$mimes =& get_mimes();
2085c2335,2339
< 		return ( ! isset($mimes[strtolower($ext)])) ? "application/x-unknown-content-type" : $mimes[strtolower($ext)];
---
> 		if (isset($mimes[$ext]))
> 		{
> 			return is_array($mimes[$ext])
> 				? current($mimes[$ext])
> 				: $mimes[$ext];
2087a2342
> 		return 'application/x-unknown-content-type';
2089d2343
< // END CI_Email class
2091,2092c2345
< /* End of file Email.php */
< /* Location: ./system/libraries/Email.php */
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Encrypt.php opensourcepos/system/libraries/Encrypt.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/encryption.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/encryption.html
31,36c53,79
< 	var $CI;
< 	var $encryption_key	= '';
< 	var $_hash_type	= 'sha1';
< 	var $_mcrypt_exists = FALSE;
< 	var $_mcrypt_cipher;
< 	var $_mcrypt_mode;
---
> 	/**
> 	 * Reference to the user's encryption key
> 	 *
> 	 * @var string
> 	 */
> 	public $encryption_key		= '';
> 
> 	/**
> 	 * Type of hash operation
> 	 *
> 	 * @var string
> 	 */
> 	protected $_hash_type		= 'sha1';
> 
> 	/**
> 	 * Flag for the existence of mcrypt
> 	 *
> 	 * @var bool
> 	 */
> 	protected $_mcrypt_exists	= FALSE;
> 
> 	/**
> 	 * Current cipher to be used with mcrypt
> 	 *
> 	 * @var string
> 	 */
> 	protected $_mcrypt_cipher;
39c82
< 	 * Constructor
---
> 	 * Method for encrypting/decrypting data
41c84,89
< 	 * Simply determines whether the mcrypt library exists.
---
> 	 * @var int
> 	 */
> 	protected $_mcrypt_mode;
> 
> 	/**
> 	 * Initialize Encryption class
42a91
> 	 * @return	void
46,49c95
< 		$this->CI =& get_instance();
< 		$this->_mcrypt_exists = ( ! function_exists('mcrypt_encrypt')) ? FALSE : TRUE;
< 
< 		if ($this->_mcrypt_exists === FALSE)
---
> 		if (($this->_mcrypt_exists = function_exists('mcrypt_encrypt')) === FALSE)
54c100
< 		log_message('debug', "Encrypt Class Initialized");
---
> 		log_message('info', 'Encrypt Class Initialized');
65d110
< 	 * @access	public
69c114
< 	function get_key($key = '')
---
> 	public function get_key($key = '')
71c116
< 		if ($key == '')
---
> 		if ($key === '')
73c118
< 			if ($this->encryption_key != '')
---
> 			if ($this->encryption_key !== '')
78,79c123
< 			$CI =& get_instance();
< 			$key = $CI->config->item('encryption_key');
---
> 			$key = config_item('encryption_key');
81c125
< 			if ($key == FALSE)
---
> 			if ( ! strlen($key))
95d138
< 	 * @access	public
97c140
< 	 * @return	void
---
> 	 * @return	CI_Encrypt
99c142
< 	function set_key($key = '')
---
> 	public function set_key($key = '')
101a145
> 		return $this;
117d160
< 	 * @access	public
122c165
< 	function encode($string, $key = '')
---
> 	public function encode($string, $key = '')
124,127c167
< 		$key = $this->get_key($key);
< 		$enc = $this->mcrypt_encode($string, $key);
< 
< 		return base64_encode($enc);
---
> 		return base64_encode($this->mcrypt_encode($string, $this->get_key($key)));
137d176
< 	 * @access	public
142,146c181
< 	function decode($string, $key = '')
< 	{
< 		$key = $this->get_key($key);
< 
< 		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string))
---
> 	public function decode($string, $key = '')
148,153c183
< 			return FALSE;
< 		}
< 
< 		$dec = base64_decode($string);
< 
< 		if (($dec = $this->mcrypt_decode($dec, $key)) === FALSE)
---
> 		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string) OR base64_encode(base64_decode($string)) !== $string)
158c188
< 		return $dec;
---
> 		return $this->mcrypt_decode(base64_decode($string), $this->get_key($key));
171c201
< 	 * For more details, see http://codeigniter.com/user_guide/installation/upgrade_200.html#encryption
---
> 	 * For more details, see https://codeigniter.com/user_guide/installation/upgrade_200.html#encryption
173d202
< 	 * @access	public
179c208,210
< 	function encode_from_legacy($string, $legacy_mode = MCRYPT_MODE_ECB, $key = '')
---
> 	public function encode_from_legacy($string, $legacy_mode = MCRYPT_MODE_ECB, $key = '')
> 	{
> 		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string))
180a212,214
> 			return FALSE;
> 		}
> 
188,193d221
< 
< 		if (preg_match('/[^a-zA-Z0-9\/\+=]/', $string))
< 		{
< 			return FALSE;
< 		}
< 
197a225
> 			$this->set_mode($current_mode);
218d245
< 	 * @access	private
223c250
< 	function _xor_decode($string, $key)
---
> 	protected function _xor_decode($string, $key)
228c255
< 		for ($i = 0; $i < strlen($string); $i++)
---
> 		for ($i = 0, $l = strlen($string); $i < $l; $i++)
230c257
< 			$dec .= (substr($string, $i++, 1) ^ substr($string, $i, 1));
---
> 			$dec .= ($string[$i++] ^ $string[$i]);
243d269
< 	 * @access	private
248c274
< 	function _xor_merge($string, $key)
---
> 	protected function _xor_merge($string, $key)
252c278
< 		for ($i = 0; $i < strlen($string); $i++)
---
> 		for ($i = 0, $ls = strlen($string), $lh = strlen($hash); $i < $ls; $i++)
254c280
< 			$str .= substr($string, $i, 1) ^ substr($hash, ($i % strlen($hash)), 1);
---
> 			$str .= $string[$i] ^ $hash[($i % $lh)];
265d290
< 	 * @access	public
270c295
< 	function mcrypt_encode($data, $key)
---
> 	public function mcrypt_encode($data, $key)
282d306
< 	 * @access	public
287c311
< 	function mcrypt_decode($data, $key)
---
> 	public function mcrypt_decode($data, $key)
309,311d332
< 	 * Function description
< 	 *
< 	 * @access	private
316c337
< 	function _add_cipher_noise($data, $key)
---
> 	protected function _add_cipher_noise($data, $key)
318,319c339
< 		$keyhash = $this->hash($key);
< 		$keylen = strlen($keyhash);
---
> 		$key = $this->hash($key);
322c342
< 		for ($i = 0, $j = 0, $len = strlen($data); $i < $len; ++$i, ++$j)
---
> 		for ($i = 0, $j = 0, $ld = strlen($data), $lk = strlen($key); $i < $ld; ++$i, ++$j)
324c344
< 			if ($j >= $keylen)
---
> 			if ($j >= $lk)
329c349
< 			$str .= chr((ord($data[$i]) + ord($keyhash[$j])) % 256);
---
> 			$str .= chr((ord($data[$i]) + ord($key[$j])) % 256);
343,345c363,365
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @param	string	$data
> 	 * @param	string	$key
> 	 * @return	string
347c367
< 	function _remove_cipher_noise($data, $key)
---
> 	protected function _remove_cipher_noise($data, $key)
349,350c369
< 		$keyhash = $this->hash($key);
< 		$keylen = strlen($keyhash);
---
> 		$key = $this->hash($key);
353c372
< 		for ($i = 0, $j = 0, $len = strlen($data); $i < $len; ++$i, ++$j)
---
> 		for ($i = 0, $j = 0, $ld = strlen($data), $lk = strlen($key); $i < $ld; ++$i, ++$j)
355c374
< 			if ($j >= $keylen)
---
> 			if ($j >= $lk)
360c379
< 			$temp = ord($data[$i]) - ord($keyhash[$j]);
---
> 			$temp = ord($data[$i]) - ord($key[$j]);
364c383
< 				$temp = $temp + 256;
---
> 				$temp += 256;
378,380c397,398
< 	 * @access	public
< 	 * @param	constant
< 	 * @return	string
---
> 	 * @param	int
> 	 * @return	CI_Encrypt
382c400
< 	function set_cipher($cipher)
---
> 	public function set_cipher($cipher)
384a403
> 		return $this;
392,394c411,412
< 	 * @access	public
< 	 * @param	constant
< 	 * @return	string
---
> 	 * @param	int
> 	 * @return	CI_Encrypt
396c414
< 	function set_mode($mode)
---
> 	public function set_mode($mode)
398a417
> 		return $this;
406,407c425
< 	 * @access	private
< 	 * @return	string
---
> 	 * @return	int
409c427
< 	function _get_cipher()
---
> 	protected function _get_cipher()
411c429
< 		if ($this->_mcrypt_cipher == '')
---
> 		if ($this->_mcrypt_cipher === NULL)
413c431
< 			$this->_mcrypt_cipher = MCRYPT_RIJNDAEL_256;
---
> 			return $this->_mcrypt_cipher = MCRYPT_RIJNDAEL_256;
424,425c442
< 	 * @access	private
< 	 * @return	string
---
> 	 * @return	int
427c444
< 	function _get_mode()
---
> 	protected function _get_mode()
429c446
< 		if ($this->_mcrypt_mode == '')
---
> 		if ($this->_mcrypt_mode === NULL)
431c448
< 			$this->_mcrypt_mode = MCRYPT_MODE_CBC;
---
> 			return $this->_mcrypt_mode = MCRYPT_MODE_CBC;
442d458
< 	 * @access	public
444c460
< 	 * @return	string
---
> 	 * @return	void
446c462
< 	function set_hash($type = 'sha1')
---
> 	public function set_hash($type = 'sha1')
448c464
< 		$this->_hash_type = ($type != 'sha1' AND $type != 'md5') ? 'sha1' : $type;
---
> 		$this->_hash_type = in_array($type, hash_algos()) ? $type : 'sha1';
456d471
< 	 * @access	public
460c475
< 	function hash($str)
---
> 	public function hash($str)
462c477
< 		return ($this->_hash_type == 'sha1') ? $this->sha1($str) : md5($str);
---
> 		return hash($this->_hash_type, $str);
465,482d479
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Generate an SHA1 Hash
< 	 *
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	function sha1($str)
< 	{
< 		if ( ! function_exists('sha1'))
< 		{
< 			if ( ! function_exists('mhash'))
< 			{
< 				require_once(BASEPATH.'libraries/Sha1.php');
< 				$SH = new CI_SHA;
< 				return $SH->generate($str);
484,500d480
< 			else
< 			{
< 				return bin2hex(mhash(MHASH_SHA1, $str));
< 			}
< 		}
< 		else
< 		{
< 			return sha1($str);
< 		}
< 	}
< 
< }
< 
< // END CI_Encrypt class
< 
< /* End of file Encrypt.php */
< /* Location: ./system/libraries/Encrypt.php */
Only in opensourcepos/system/libraries: Encryption.php
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Form_validation.php opensourcepos/system/libraries/Form_validation.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/form_validation.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/form_validation.html
28a51,55
> 	/**
> 	 * Reference to the CodeIgniter instance
> 	 *
> 	 * @var object
> 	 */
29a57,62
> 
> 	/**
> 	 * Validation data for the current form submission
> 	 *
> 	 * @var array
> 	 */
30a64,69
> 
> 	/**
> 	 * Validation rules for the current form
> 	 *
> 	 * @var array
> 	 */
31a71,76
> 
> 	/**
> 	 * Array of validation errors
> 	 *
> 	 * @var array
> 	 */
32a78,83
> 
> 	/**
> 	 * Array of custom error messages
> 	 *
> 	 * @var array
> 	 */
33a85,90
> 
> 	/**
> 	 * Start tag for error wrapping
> 	 *
> 	 * @var string
> 	 */
34a92,97
> 
> 	/**
> 	 * End tag for error wrapping
> 	 *
> 	 * @var string
> 	 */
35a99,104
> 
> 	/**
> 	 * Custom error message
> 	 *
> 	 * @var string
> 	 */
36a106,111
> 
> 	/**
> 	 * Whether the form data has been validated as safe
> 	 *
> 	 * @var bool
> 	 */
40c115,125
< 	 * Constructor
---
> 	 * Custom data to validate
> 	 *
> 	 * @var array
> 	 */
> 	public $validation_data	= array();
> 
> 	/**
> 	 * Initialize Form_Validation class
> 	 *
> 	 * @param	array	$rules
> 	 * @return	void
45a131,142
> 		// applies delimiters set in config file.
> 		if (isset($rules['error_prefix']))
> 		{
> 			$this->_error_prefix = $rules['error_prefix'];
> 			unset($rules['error_prefix']);
> 		}
> 		if (isset($rules['error_suffix']))
> 		{
> 			$this->_error_suffix = $rules['error_suffix'];
> 			unset($rules['error_suffix']);
> 		}
> 
52,58c149
< 		// Set the character encoding in MB.
< 		if (function_exists('mb_internal_encoding'))
< 		{
< 			mb_internal_encoding($this->CI->config->item('charset'));
< 		}
< 
< 		log_message('debug', "Form Validation Class Initialized");
---
> 		log_message('info', 'Form Validation Class Initialized');
67c158,159
< 	 * rules as input, validates the info, and stores it
---
> 	 * rules as input, any custom error messages, validates the info,
> 	 * and stores it
69,72c161,165
< 	 * @access	public
< 	 * @param	mixed
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	mixed	$field
> 	 * @param	string	$label
> 	 * @param	mixed	$rules
> 	 * @param	array	$errors
> 	 * @return	CI_Form_validation
74c167
< 	public function set_rules($field, $label = '', $rules = '')
---
> 	public function set_rules($field, $label = '', $rules = array(), $errors = array())
77c170,171
< 		if (count($_POST) == 0)
---
> 		// or a validation array has not been specified
> 		if ($this->CI->input->method() !== 'post' && empty($this->validation_data))
82c176
< 		// If an array was passed via the first parameter instead of indidual string
---
> 		// If an array was passed via the first parameter instead of individual string
89c183
< 				if ( ! isset($row['field']) OR ! isset($row['rules']))
---
> 				if ( ! isset($row['field'], $row['rules']))
95c189,192
< 				$label = ( ! isset($row['label'])) ? $row['field'] : $row['label'];
---
> 				$label = isset($row['label']) ? $row['label'] : $row['field'];
> 
> 				// Add the custom error message array
> 				$errors = (isset($row['errors']) && is_array($row['errors'])) ? $row['errors'] : array();
98c195
< 				$this->set_rules($row['field'], $label, $row['rules']);
---
> 				$this->set_rules($row['field'], $label, $row['rules'], $errors);
103,104c201,209
< 		// No fields? Nothing to do...
< 		if ( ! is_string($field) OR  ! is_string($rules) OR $field == '')
---
> 		// No fields or no rules? Nothing to do...
> 		if ( ! is_string($field) OR $field === '' OR empty($rules))
> 		{
> 			return $this;
> 		}
> 		elseif ( ! is_array($rules))
> 		{
> 			// BC: Convert pipe-separated rules string to an array
> 			if ( ! is_string($rules))
108a214,216
> 			$rules = preg_split('/\|(?![^\[]*\])/', $rules);
> 		}
> 
110c218
< 		$label = ($label == '') ? $field : $label;
---
> 		$label = ($label === '') ? $field : $label;
112,113c220,222
< 		// Is the field name an array?  We test for the existence of a bracket "[" in
< 		// the field name to determine this.  If it is an array, we break it apart
---
> 		$indexes = array();
> 
> 		// Is the field name an array? If it is an array, we break it apart
115c224
< 		if (strpos($field, '[') !== FALSE AND preg_match_all('/\[(.*?)\]/', $field, $matches))
---
> 		if (($is_array = (bool) preg_match_all('/\[(.*?)\]/', $field, $matches)) === TRUE)
117,120c226
< 			// Note: Due to a bug in current() that affects some versions
< 			// of PHP we can not pass function call directly into it
< 			$x = explode('[', $field);
< 			$indexes[] = current($x);
---
> 			sscanf($field, '%[^[][', $indexes[0]);
122c228
< 			for ($i = 0; $i < count($matches['0']); $i++)
---
> 			for ($i = 0, $c = count($matches[0]); $i < $c; $i++)
124c230
< 				if ($matches['1'][$i] != '')
---
> 				if ($matches[1][$i] !== '')
126c232
< 					$indexes[] = $matches['1'][$i];
---
> 					$indexes[] = $matches[1][$i];
129,135d234
< 
< 			$is_array = TRUE;
< 		}
< 		else
< 		{
< 			$indexes	= array();
< 			$is_array	= FALSE;
142a242
> 			'errors'	=> $errors,
154a255,279
> 	 * By default, form validation uses the $_POST array to validate
> 	 *
> 	 * If an array is set through this method, then this array will
> 	 * be used instead of the $_POST array
> 	 *
> 	 * Note that if you are validating multiple arrays, then the
> 	 * reset_validation() function should be called after validating
> 	 * each array due to the limitations of CI's singleton
> 	 *
> 	 * @param	array	$data
> 	 * @return	CI_Form_validation
> 	 */
> 	public function set_data(array $data)
> 	{
> 		if ( ! empty($data))
> 		{
> 			$this->validation_data = $data;
> 		}
> 
> 		return $this;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
157,158c282,283
< 	 * Lets users set their own error messages on the fly.  Note:  The key
< 	 * name has to match the  function name that it corresponds to.
---
> 	 * Lets users set their own error messages on the fly. Note:
> 	 * The key name has to match the function name that it corresponds to.
160,161c285
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	array
163c287
< 	 * @return	string
---
> 	 * @return	CI_Form_validation
184d306
< 	 * @access	public
187c309
< 	 * @return	void
---
> 	 * @return	CI_Form_validation
204,206c325,328
< 	 * @access	public
< 	 * @param	string	the field name
< 	 * @return	void
---
> 	 * @param	string	$field	Field name
> 	 * @param	string	$prefix	HTML start tag
> 	 * @param 	string	$suffix	HTML end tag
> 	 * @return	string
208c330
< 	public function error($field = '', $prefix = '', $suffix = '')
---
> 	public function error($field, $prefix = '', $suffix = '')
210c332
< 		if ( ! isset($this->_field_data[$field]['error']) OR $this->_field_data[$field]['error'] == '')
---
> 		if (empty($this->_field_data[$field]['error']))
215c337
< 		if ($prefix == '')
---
> 		if ($prefix === '')
220c342
< 		if ($suffix == '')
---
> 		if ($suffix === '')
230a353,366
> 	 * Get Array of Error Messages
> 	 *
> 	 * Returns the error messages as an array
> 	 *
> 	 * @return	array
> 	 */
> 	public function error_array()
> 	{
> 		return $this->_error_array;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
235d370
< 	 * @access	public
238c373
< 	 * @return	str
---
> 	 * @return	string
242c377
< 		// No errrors, validation passes!
---
> 		// No errors, validation passes!
248c383
< 		if ($prefix == '')
---
> 		if ($prefix === '')
253c388
< 		if ($suffix == '')
---
> 		if ($suffix === '')
262c397
< 			if ($val != '')
---
> 			if ($val !== '')
278c413
< 	 * @access	public
---
> 	 * @param	string	$group
283,287c418,420
< 		// Do we even have any data to process?  Mm?
< 		if (count($_POST) == 0)
< 		{
< 			return FALSE;
< 		}
---
> 		$validation_array = empty($this->validation_data)
> 			? $_POST
> 			: $this->validation_data;
291c424
< 		if (count($this->_field_data) == 0)
---
> 		if (count($this->_field_data) === 0)
294c427
< 			if (count($this->_config_rules) == 0)
---
> 			if (count($this->_config_rules) === 0)
299,302c432
< 			// Is there a validation rule for the particular URI being accessed?
< 			$uri = ($group == '') ? trim($this->CI->uri->ruri_string(), '/') : $group;
< 
< 			if ($uri != '' AND isset($this->_config_rules[$uri]))
---
> 			if (empty($group))
304,308c434,436
< 				$this->set_rules($this->_config_rules[$uri]);
< 			}
< 			else
< 			{
< 				$this->set_rules($this->_config_rules);
---
> 				// Is there a validation rule for the particular URI being accessed?
> 				$group = trim($this->CI->uri->ruri_string(), '/');
> 				isset($this->_config_rules[$group]) OR $group = $this->CI->router->class.'/'.$this->CI->router->method;
311,312c439,442
< 			// We're we able to set the rules correctly?
< 			if (count($this->_field_data) == 0)
---
> 			$this->set_rules(isset($this->_config_rules[$group]) ? $this->_config_rules[$group] : $this->_config_rules);
> 
> 			// Were we able to set the rules correctly?
> 			if (count($this->_field_data) === 0)
314c444
< 				log_message('debug', "Unable to find validation rules");
---
> 				log_message('debug', 'Unable to find validation rules');
322,323c452
< 		// Cycle through the rules for each field, match the
< 		// corresponding $_POST item and test for errors
---
> 		// Cycle through the rules for each field and match the corresponding $validation_data item
326c455
< 			// Fetch the data from the corresponding $_POST array and cache it in the _field_data array.
---
> 			// Fetch the data from the validation_data array item and cache it in the _field_data array.
328,329c457
< 
< 			if ($row['is_array'] == TRUE)
---
> 			if ($row['is_array'] === TRUE)
331c459
< 				$this->_field_data[$field]['postdata'] = $this->_reduce_array($_POST, $row['keys']);
---
> 				$this->_field_data[$field]['postdata'] = $this->_reduce_array($validation_array, $row['keys']);
333,335c461
< 			else
< 			{
< 				if (isset($_POST[$field]) AND $_POST[$field] != "")
---
> 			elseif (isset($validation_array[$field]))
337c463
< 					$this->_field_data[$field]['postdata'] = $_POST[$field];
---
> 				$this->_field_data[$field]['postdata'] = $validation_array[$field];
341c467,478
< 			$this->_execute($row, explode('|', $row['rules']), $this->_field_data[$field]['postdata']);
---
> 		// Execute validation rules
> 		// Note: A second foreach (for now) is required in order to avoid false-positives
> 		//	 for rules like 'matches', which correlate to other validation fields.
> 		foreach ($this->_field_data as $field => $row)
> 		{
> 			// Don't try to validate if we have no rules set
> 			if (empty($row['rules']))
> 			{
> 				continue;
> 			}
> 
> 			$this->_execute($row, $row['rules'], $this->_field_data[$field]['postdata']);
355,362c491
< 		// No errors, validation passes!
< 		if ($total_errors == 0)
< 		{
< 			return TRUE;
< 		}
< 
< 		// Validation fails
< 		return FALSE;
---
> 		return ($total_errors === 0);
370d498
< 	 * @access	private
373c501
< 	 * @param	integer
---
> 	 * @param	int
378,386c506
< 		if (is_array($array))
< 		{
< 			if (isset($keys[$i]))
< 			{
< 				if (isset($array[$keys[$i]]))
< 				{
< 					$array = $this->_reduce_array($array[$keys[$i]], $keys, ($i+1));
< 				}
< 				else
---
> 		if (is_array($array) && isset($keys[$i]))
388,394c508
< 					return NULL;
< 				}
< 			}
< 			else
< 			{
< 				return $array;
< 			}
---
> 			return isset($array[$keys[$i]]) ? $this->_reduce_array($array[$keys[$i]], $keys, ($i+1)) : NULL;
397c511,512
< 		return $array;
---
> 		// NULL must be returned for empty fields
> 		return ($array === '') ? NULL : $array;
405,406c520
< 	 * @access	private
< 	 * @return	null
---
> 	 * @return	void
412c526
< 			if ( ! is_null($row['postdata']))
---
> 			if ($row['postdata'] !== NULL)
414c528
< 				if ($row['is_array'] == FALSE)
---
> 				if ($row['is_array'] === FALSE)
418c532
< 						$_POST[$row['field']] = $this->prep_for_form($row['postdata']);
---
> 						$_POST[$row['field']] = $row['postdata'];
427c541
< 					if (count($row['keys']) == 1)
---
> 					if (count($row['keys']) === 1)
444c558
< 							$array[$k] = $this->prep_for_form($v);
---
> 							$array[$k] = $v;
451c565
< 						$post_ref = $this->prep_for_form($row['postdata']);
---
> 						$post_ref = $row['postdata'];
463d576
< 	 * @access	private
467c580
< 	 * @param	integer
---
> 	 * @param	int
477,478c590
< 				$this->_execute($row, $rules, $val, $cycles);
< 				$cycles++;
---
> 				$this->_execute($row, $rules, $val, $key);
484,485d595
< 		// --------------------------------------------------------------------
< 
488c598
< 		if ( ! in_array('required', $rules) AND is_null($postdata))
---
> 		if ( ! in_array('required', $rules) && ($postdata === NULL OR $postdata === ''))
491c601,605
< 			if (preg_match("/(callback_\w+(\[.*?\])?)/", implode(' ', $rules), $match))
---
> 			foreach ($rules as &$rule)
> 			{
> 				if (is_string($rule))
> 				{
> 					if (strncmp($rule, 'callback_', 9) === 0)
494c608,609
< 				$rules = (array('1' => $match[1]));
---
> 						$rules = array(1 => $rule);
> 						break;
496c611,612
< 			else
---
> 				}
> 				elseif (is_callable($rule))
498c614,622
< 				return;
---
> 					$callback = TRUE;
> 					$rules = array(1 => $rule);
> 					break;
> 				}
> 				elseif (is_array($rule) && isset($rule[0], $rule[1]) && is_callable($rule[1]))
> 				{
> 					$callback = TRUE;
> 					$rules = array(array($rule[0], $rule[1]));
> 					break;
502c626,630
< 		// --------------------------------------------------------------------
---
> 			if ( ! $callback)
> 			{
> 				return;
> 			}
> 		}
505c633
< 		if (is_null($postdata) AND $callback == FALSE)
---
> 		if (($postdata === NULL OR $postdata === '') && ! $callback)
510c638
< 				$type = (in_array('required', $rules)) ? 'required' : 'isset';
---
> 				$type = in_array('required', $rules) ? 'required' : 'isset';
512,522c640
< 				if ( ! isset($this->_error_messages[$type]))
< 				{
< 					if (FALSE === ($line = $this->CI->lang->line($type)))
< 					{
< 						$line = 'The field was not set';
< 					}
< 				}
< 				else
< 				{
< 					$line = $this->_error_messages[$type];
< 				}
---
> 				$line = $this->_get_error_message($type, $row['field']);
525c643
< 				$message = sprintf($line, $this->_translate_fieldname($row['label']));
---
> 				$message = $this->_build_error_msg($line, $this->_translate_fieldname($row['label']));
548c666
< 			if ($row['is_array'] == TRUE AND is_array($this->_field_data[$row['field']]['postdata']))
---
> 			if ($row['is_array'] === TRUE && is_array($this->_field_data[$row['field']]['postdata']))
562c680,685
< 				$postdata = $this->_field_data[$row['field']]['postdata'];
---
> 				// If we get an array field, but it's not expected - then it is most likely
> 				// somebody messing with the form on the client side, so we'll just consider
> 				// it an empty field
> 				$postdata = is_array($this->_field_data[$row['field']]['postdata'])
> 					? NULL
> 					: $this->_field_data[$row['field']]['postdata'];
565,566d687
< 			// --------------------------------------------------------------------
< 
568,569c689,692
< 			$callback = FALSE;
< 			if (substr($rule, 0, 9) == 'callback_')
---
> 			$callback = $callable = FALSE;
> 			if (is_string($rule))
> 			{
> 				if (strpos($rule, 'callback_') === 0)
573a697,707
> 			}
> 			elseif (is_callable($rule))
> 			{
> 				$callable = TRUE;
> 			}
> 			elseif (is_array($rule) && isset($rule[0], $rule[1]) && is_callable($rule[1]))
> 			{
> 				// We have a "named" callable, so save the name
> 				$callable = $rule[0];
> 				$rule = $rule[1];
> 			}
578c712
< 			if (preg_match("/(.*?)\[(.*)\]/", $rule, $match))
---
> 			if ( ! $callable && preg_match('/(.*?)\[(.*)\]/', $rule, $match))
585c719,721
< 			if ($callback === TRUE)
---
> 			if ($callback OR $callable !== FALSE)
> 			{
> 				if ($callback)
589c725,726
< 					continue;
---
> 						log_message('debug', 'Unable to find callback validation rule: '.$rule);
> 						$result = FALSE;
591c728,729
< 
---
> 					else
> 					{
593a732,745
> 					}
> 				}
> 				else
> 				{
> 					$result = is_array($rule)
> 						? $rule[0]->{$rule[1]}($postdata)
> 						: $rule($postdata);
> 
> 					// Is $callable set to a rule name?
> 					if ($callable !== FALSE)
> 					{
> 						$rule = $callable;
> 					}
> 				}
596c748
< 				if ($_in_array == TRUE)
---
> 				if ($_in_array === TRUE)
598c750
< 					$this->_field_data[$row['field']]['postdata'][$cycles] = (is_bool($result)) ? $postdata : $result;
---
> 					$this->_field_data[$row['field']]['postdata'][$cycles] = is_bool($result) ? $postdata : $result;
602c754
< 					$this->_field_data[$row['field']]['postdata'] = (is_bool($result)) ? $postdata : $result;
---
> 					$this->_field_data[$row['field']]['postdata'] = is_bool($result) ? $postdata : $result;
606c758
< 				if ( ! in_array('required', $rules, TRUE) AND $result !== FALSE)
---
> 				if ( ! in_array('required', $rules, TRUE) && $result !== FALSE)
611,613c763
< 			else
< 			{
< 				if ( ! method_exists($this, $rule))
---
> 			elseif ( ! method_exists($this, $rule))
619c769,770
< 						$result = $rule($postdata);
---
> 					// Native PHP functions issue warnings if you pass them more parameters than they use
> 					$result = ($param !== FALSE) ? $rule($postdata, $param) : $rule($postdata);
621c772
< 						if ($_in_array == TRUE)
---
> 					if ($_in_array === TRUE)
623c774
< 							$this->_field_data[$row['field']]['postdata'][$cycles] = (is_bool($result)) ? $postdata : $result;
---
> 						$this->_field_data[$row['field']]['postdata'][$cycles] = is_bool($result) ? $postdata : $result;
627c778
< 							$this->_field_data[$row['field']]['postdata'] = (is_bool($result)) ? $postdata : $result;
---
> 						$this->_field_data[$row['field']]['postdata'] = is_bool($result) ? $postdata : $result;
632c783,784
< 						log_message('debug', "Unable to find validation rule: ".$rule);
---
> 					log_message('debug', 'Unable to find validation rule: '.$rule);
> 					$result = FALSE;
634,635d785
< 
< 					continue;
637c787,788
< 
---
> 			else
> 			{
640c791
< 				if ($_in_array == TRUE)
---
> 				if ($_in_array === TRUE)
642c793
< 					$this->_field_data[$row['field']]['postdata'][$cycles] = (is_bool($result)) ? $postdata : $result;
---
> 					$this->_field_data[$row['field']]['postdata'][$cycles] = is_bool($result) ? $postdata : $result;
646c797
< 					$this->_field_data[$row['field']]['postdata'] = (is_bool($result)) ? $postdata : $result;
---
> 					$this->_field_data[$row['field']]['postdata'] = is_bool($result) ? $postdata : $result;
653,655c804,805
< 				if ( ! isset($this->_error_messages[$rule]))
< 				{
< 					if (FALSE === ($line = $this->CI->lang->line($rule)))
---
> 				// Callable rules might not have named error messages
> 				if ( ! is_string($rule))
657,658c807
< 						$line = 'Unable to access an error message corresponding to your field name.';
< 					}
---
> 					$line = $this->CI->lang->line('form_validation_error_message_not_set').'(Anonymous function)';
662c811
< 					$line = $this->_error_messages[$rule];
---
> 					$line = $this->_get_error_message($rule, $row['field']);
667c816
< 				if (isset($this->_field_data[$param]) AND isset($this->_field_data[$param]['label']))
---
> 				if (isset($this->_field_data[$param], $this->_field_data[$param]['label']))
673c822
< 				$message = sprintf($line, $this->_translate_fieldname($row['label']), $param);
---
> 				$message = $this->_build_error_msg($line, $this->_translate_fieldname($row['label']), $param);
690a840,873
> 	 * Get the error message for the rule
> 	 *
> 	 * @param 	string $rule 	The rule name
> 	 * @param 	string $field	The field name
> 	 * @return 	string
> 	 */
> 	protected function _get_error_message($rule, $field)
> 	{
> 		// check if a custom message is defined through validation config row.
> 		if (isset($this->_field_data[$field]['errors'][$rule]))
> 		{
> 			return $this->_field_data[$field]['errors'][$rule];
> 		}
> 		// check if a custom message has been set using the set_message() function
> 		elseif (isset($this->_error_messages[$rule]))
> 		{
> 			return $this->_error_messages[$rule];
> 		}
> 		elseif (FALSE !== ($line = $this->CI->lang->line('form_validation_'.$rule)))
> 		{
> 			return $line;
> 		}
> 		// DEPRECATED support for non-prefixed keys, lang file again
> 		elseif (FALSE !== ($line = $this->CI->lang->line($rule, FALSE)))
> 		{
> 			return $line;
> 		}
> 
> 		return $this->CI->lang->line('form_validation_error_message_not_set').'('.$rule.')';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
693d875
< 	 * @access	private
699,701c881,883
< 		// Do we need to translate the field name?
< 		// We look for the prefix lang: to determine this
< 		if (substr($fieldname, 0, 5) == 'lang:')
---
> 		// Do we need to translate the field name? We look for the prefix 'lang:' to determine this
> 		// If we find one, but there's no translation for the string - just return it
> 		if (sscanf($fieldname, 'lang:%s', $line) === 1 && FALSE === ($fieldname = $this->CI->lang->line($line, FALSE)))
703,704c885,889
< 			// Grab the variable
< 			$line = substr($fieldname, 5);
---
> 			return $line;
> 		}
> 
> 		return $fieldname;
> 	}
706,707c891,901
< 			// Were we able to translate the field name?  If not we use $line
< 			if (FALSE === ($fieldname = $this->CI->lang->line($line)))
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Build an error message using the field and param.
> 	 *
> 	 * @param	string	The error message line
> 	 * @param	string	A field's human name
> 	 * @param	mixed	A rule's optional parameter
> 	 * @return	string
> 	 */
> 	protected function _build_error_msg($line, $field = '', $param = '')
709c903,906
< 				return $line;
---
> 		// Check for %s in the string for legacy support.
> 		if (strpos($line, '%s') !== FALSE)
> 		{
> 			return sprintf($line, $field, $param);
710a908,909
> 
> 		return str_replace(array('{field}', '{param}'), array($field, $param), $line);
713c912,924
< 		return $fieldname;
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Checks if the rule is present within the validator
> 	 *
> 	 * Permits you to check if a rule is present within the validator
> 	 *
> 	 * @param	string	the field name
> 	 * @return	bool
> 	 */
> 	public function has_rule($field)
> 	{
> 		return isset($this->_field_data[$field]);
724d934
< 	 * @access	public
727c937
< 	 * @return	void
---
> 	 * @return	string
731c941
< 		if ( ! isset($this->_field_data[$field]))
---
> 		if ( ! isset($this->_field_data[$field], $this->_field_data[$field]['postdata']))
754d963
< 	 * @access	public
756a966
> 	 * @param	bool
761,763c971
< 		if ( ! isset($this->_field_data[$field]) OR ! isset($this->_field_data[$field]['postdata']))
< 		{
< 			if ($default === TRUE AND count($this->_field_data) === 0)
---
> 		if ( ! isset($this->_field_data[$field], $this->_field_data[$field]['postdata']))
765,767c973
< 				return ' selected="selected"';
< 			}
< 			return '';
---
> 			return ($default === TRUE && count($this->_field_data) === 0) ? ' selected="selected"' : '';
771c977
< 
---
> 		$value = (string) $value;
774c980,981
< 			if ( ! in_array($value, $field))
---
> 			// Note: in_array('', array(0)) returns TRUE, do not use it
> 			foreach ($field as &$v)
776c983,985
< 				return '';
---
> 				if ($value === $v)
> 				{
> 					return ' selected="selected"';
779,782c988
< 		else
< 		{
< 			if (($field == '' OR $value == '') OR ($field != $value))
< 			{
---
> 
784a991,993
> 		elseif (($field === '' OR $value === '') OR ($field !== $value))
> 		{
> 			return '';
798d1006
< 	 * @access	public
800a1009
> 	 * @param	bool
805,807c1014
< 		if ( ! isset($this->_field_data[$field]) OR ! isset($this->_field_data[$field]['postdata']))
< 		{
< 			if ($default === TRUE AND count($this->_field_data) === 0)
---
> 		if ( ! isset($this->_field_data[$field], $this->_field_data[$field]['postdata']))
809,811c1016
< 				return ' checked="checked"';
< 			}
< 			return '';
---
> 			return ($default === TRUE && count($this->_field_data) === 0) ? ' checked="checked"' : '';
815c1020
< 
---
> 		$value = (string) $value;
818c1023,1024
< 			if ( ! in_array($value, $field))
---
> 			// Note: in_array('', array(0)) returns TRUE, do not use it
> 			foreach ($field as &$v)
820c1026,1028
< 				return '';
---
> 				if ($value === $v)
> 				{
> 					return ' checked="checked"';
823,826c1031
< 		else
< 		{
< 			if (($field == '' OR $value == '') OR ($field != $value))
< 			{
---
> 
828a1034,1036
> 		elseif (($field === '' OR $value === '') OR ($field !== $value))
> 		{
> 			return '';
842d1049
< 	 * @access	public
844a1052
> 	 * @param	bool
849,875c1057,1058
< 		if ( ! isset($this->_field_data[$field]) OR ! isset($this->_field_data[$field]['postdata']))
< 		{
< 			if ($default === TRUE AND count($this->_field_data) === 0)
< 			{
< 				return ' checked="checked"';
< 			}
< 			return '';
< 		}
< 
< 		$field = $this->_field_data[$field]['postdata'];
< 
< 		if (is_array($field))
< 		{
< 			if ( ! in_array($value, $field))
< 			{
< 				return '';
< 			}
< 		}
< 		else
< 		{
< 			if (($field == '' OR $value == '') OR ($field != $value))
< 			{
< 				return '';
< 			}
< 		}
< 
< 		return ' checked="checked"';
---
> 		// Logic is exactly the same as for radio fields
> 		return $this->set_radio($field, $value, $default);
883d1065
< 	 * @access	public
889,896c1071
< 		if ( ! is_array($str))
< 		{
< 			return (trim($str) == '') ? FALSE : TRUE;
< 		}
< 		else
< 		{
< 			return ( ! empty($str));
< 		}
---
> 		return is_array($str) ? (bool) count($str) : (trim($str) !== '');
904d1078
< 	 * @access	public
906c1080
< 	 * @param	regex
---
> 	 * @param	string	regex
911,916c1085
< 		if ( ! preg_match($regex, $str))
< 		{
< 			return FALSE;
< 		}
< 
< 		return  TRUE;
---
> 		return (bool) preg_match($regex, $str);
924,926c1093,1094
< 	 * @access	public
< 	 * @param	string
< 	 * @param	field
---
> 	 * @param	string	$str	string to compare against
> 	 * @param	string	$field
931,933c1099,1101
< 		if ( ! isset($_POST[$field]))
< 		{
< 			return FALSE;
---
> 		return isset($this->_field_data[$field], $this->_field_data[$field]['postdata'])
> 			? ($str === $this->_field_data[$field]['postdata'])
> 			: FALSE;
936c1104
< 		$field = $_POST[$field];
---
> 	// --------------------------------------------------------------------
938c1106,1115
< 		return ($str !== $field) ? FALSE : TRUE;
---
> 	/**
> 	 * Differs from another field
> 	 *
> 	 * @param	string
> 	 * @param	string	field
> 	 * @return	bool
> 	 */
> 	public function differs($str, $field)
> 	{
> 		return ! (isset($this->_field_data[$field]) && $this->_field_data[$field]['postdata'] === $str);
944c1121
< 	 * Match one field to another
---
> 	 * Is Unique
946,948c1123,1127
< 	 * @access	public
< 	 * @param	string
< 	 * @param	field
---
> 	 * Check if the input value doesn't already exist
> 	 * in the specified database field.
> 	 *
> 	 * @param	string	$str
> 	 * @param	string	$field
953,956c1132,1135
< 		list($table, $field)=explode('.', $field);
< 		$query = $this->CI->db->limit(1)->get_where($table, array($field => $str));
< 		
< 		return $query->num_rows() === 0;
---
> 		sscanf($field, '%[^.].%[^.]', $table, $field);
> 		return isset($this->CI->db)
> 			? ($this->CI->db->limit(1)->get_where($table, array($field => $str))->num_rows() === 0)
> 			: FALSE;
964d1142
< 	 * @access	public
966c1144
< 	 * @param	value
---
> 	 * @param	string
971c1149
< 		if (preg_match("/[^0-9]/", $val))
---
> 		if ( ! is_numeric($val))
976,981c1154
< 		if (function_exists('mb_strlen'))
< 		{
< 			return (mb_strlen($str) < $val) ? FALSE : TRUE;
< 		}
< 
< 		return (strlen($str) < $val) ? FALSE : TRUE;
---
> 		return ($val <= mb_strlen($str));
989d1161
< 	 * @access	public
991c1163
< 	 * @param	value
---
> 	 * @param	string
996c1168
< 		if (preg_match("/[^0-9]/", $val))
---
> 		if ( ! is_numeric($val))
1001,1006c1173
< 		if (function_exists('mb_strlen'))
< 		{
< 			return (mb_strlen($str) > $val) ? FALSE : TRUE;
< 		}
< 
< 		return (strlen($str) > $val) ? FALSE : TRUE;
---
> 		return ($val >= mb_strlen($str));
1014d1180
< 	 * @access	public
1016c1182
< 	 * @param	value
---
> 	 * @param	string
1021c1187
< 		if (preg_match("/[^0-9]/", $val))
---
> 		if ( ! is_numeric($val))
1026c1192,1226
< 		if (function_exists('mb_strlen'))
---
> 		return (mb_strlen($str) === (int) $val);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Valid URL
> 	 *
> 	 * @param	string	$str
> 	 * @return	bool
> 	 */
> 	public function valid_url($str)
> 	{
> 		if (empty($str))
> 		{
> 			return FALSE;
> 		}
> 		elseif (preg_match('/^(?:([^:]*)\:)?\/\/(.+)$/', $str, $matches))
> 		{
> 			if (empty($matches[2]))
> 			{
> 				return FALSE;
> 			}
> 			elseif ( ! in_array($matches[1], array('http', 'https'), TRUE))
> 			{
> 				return FALSE;
> 			}
> 
> 			$str = $matches[2];
> 		}
> 
> 		// PHP 7 accepts IPv6 addresses within square brackets as hostnames,
> 		// but it appears that the PR that came in with https://bugs.php.net/bug.php?id=68039
> 		// was never merged into a PHP 5 branch ... https://3v4l.org/8PsSN
> 		if (preg_match('/^\[([^\]]+)\]/', $str, $matches) && ! is_php('7') && filter_var($matches[1], FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) !== FALSE)
1028c1228
< 			return (mb_strlen($str) != $val) ? FALSE : TRUE;
---
> 			$str = 'ipv6.host'.substr($str, strlen($matches[1]) + 2);
1031c1231,1242
< 		return (strlen($str) != $val) ? FALSE : TRUE;
---
> 		$str = 'http://'.$str;
> 
> 		// There's a bug affecting PHP 5.2.13, 5.3.2 that considers the
> 		// underscore to be a valid hostname character instead of a dash.
> 		// Reference: https://bugs.php.net/bug.php?id=51192
> 		if (version_compare(PHP_VERSION, '5.2.13', '==') OR version_compare(PHP_VERSION, '5.3.2', '=='))
> 		{
> 			sscanf($str, 'http://%[^/]', $host);
> 			$str = substr_replace($str, strtr($host, array('_' => '-', '-' => '_')), 7, strlen($host));
> 		}
> 
> 		return (filter_var($str, FILTER_VALIDATE_URL) !== FALSE);
1039d1249
< 	 * @access	public
1045c1255,1260
< 		return ( ! preg_match("/^([a-z0-9\+_\-]+)(\.[a-z0-9\+_\-]+)*@([a-z0-9\-]+\.)+[a-z]{2,6}$/ix", $str)) ? FALSE : TRUE;
---
> 		if (function_exists('idn_to_ascii') && $atpos = strpos($str, '@'))
> 		{
> 			$str = substr($str, 0, ++$atpos).idn_to_ascii(substr($str, $atpos));
> 		}
> 
> 		return (bool) filter_var($str, FILTER_VALIDATE_EMAIL);
1053d1267
< 	 * @access	public
1066c1280
< 			if (trim($email) != '' && $this->valid_email(trim($email)) === FALSE)
---
> 			if (trim($email) !== '' && $this->valid_email(trim($email)) === FALSE)
1080d1293
< 	 * @access	public
1082,1083c1295,1296
< 	 * @param	string "ipv4" or "ipv6" to validate a specific ip format
< 	 * @return	string
---
> 	 * @param	string	'ipv4' or 'ipv6' to validate a specific IP format
> 	 * @return	bool
1095d1307
< 	 * @access	public
1101c1313
< 		return ( ! preg_match("/^([a-z])+$/i", $str)) ? FALSE : TRUE;
---
> 		return ctype_alpha($str);
1109d1320
< 	 * @access	public
1115c1326
< 		return ( ! preg_match("/^([a-z0-9])+$/i", $str)) ? FALSE : TRUE;
---
> 		return ctype_alnum((string) $str);
1121c1332
< 	 * Alpha-numeric with underscores and dashes
---
> 	 * Alpha-numeric w/ spaces
1123d1333
< 	 * @access	public
1127c1337
< 	public function alpha_dash($str)
---
> 	public function alpha_numeric_spaces($str)
1129c1339
< 		return ( ! preg_match("/^([-a-z0-9_-])+$/i", $str)) ? FALSE : TRUE;
---
> 		return (bool) preg_match('/^[A-Z0-9 ]+$/i', $str);
1135c1345
< 	 * Numeric
---
> 	 * Alpha-numeric with underscores and dashes
1137d1346
< 	 * @access	public
1141c1350
< 	public function numeric($str)
---
> 	public function alpha_dash($str)
1143,1144c1352
< 		return (bool)preg_match( '/^[\-+]?[0-9]*\.?[0-9]+$/', $str);
< 
---
> 		return (bool) preg_match('/^[a-z0-9_-]+$/i', $str);
1150c1358
< 	 * Is Numeric
---
> 	 * Numeric
1152d1359
< 	 * @access	public
1156c1363
< 	public function is_numeric($str)
---
> 	public function numeric($str)
1158c1365,1366
< 		return ( ! is_numeric($str)) ? FALSE : TRUE;
---
> 		return (bool) preg_match('/^[\-+]?[0-9]*\.?[0-9]+$/', $str);
> 
1166d1373
< 	 * @access	public
1180d1386
< 	 * @access	public
1192c1398
< 	 * Greather than
---
> 	 * Greater than
1194d1399
< 	 * @access	public
1195a1401
> 	 * @param	int
1200,1202c1406
< 		if ( ! is_numeric($str))
< 		{
< 			return FALSE;
---
> 		return is_numeric($str) ? ($str > $min) : FALSE;
1204c1408,1420
< 		return $str > $min;
---
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Equal to or Greater than
> 	 *
> 	 * @param	string
> 	 * @param	int
> 	 * @return	bool
> 	 */
> 	public function greater_than_equal_to($str, $min)
> 	{
> 		return is_numeric($str) ? ($str >= $min) : FALSE;
1212d1427
< 	 * @access	public
1213a1429
> 	 * @param	int
1218c1434,1446
< 		if ( ! is_numeric($str))
---
> 		return is_numeric($str) ? ($str < $max) : FALSE;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Equal to or Less than
> 	 *
> 	 * @param	string
> 	 * @param	int
> 	 * @return	bool
> 	 */
> 	public function less_than_equal_to($str, $max)
1220c1448
< 			return FALSE;
---
> 		return is_numeric($str) ? ($str <= $max) : FALSE;
1222c1450,1462
< 		return $str < $max;
---
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Value should be within an array of values
> 	 *
> 	 * @param	string
> 	 * @param	string
> 	 * @return	bool
> 	 */
> 	public function in_list($value, $list)
> 	{
> 		return in_array($value, explode(',', $list), TRUE);
1230d1469
< 	 * @access	public
1236c1475
< 		return (bool) preg_match( '/^[0-9]+$/', $str);
---
> 		return ctype_digit((string) $str);
1244d1482
< 	 * @access	public
1250,1260c1488
< 		if ( ! preg_match( '/^[0-9]+$/', $str))
< 		{
< 			return FALSE;
< 		}
< 
< 		if ($str == 0)
< 		{
< 			return FALSE;
< 		}
< 
< 		return TRUE;
---
> 		return ($str != 0 && ctype_digit((string) $str));
1271d1498
< 	 * @access	public
1277c1504
< 		return (bool) ! preg_match('/[^a-zA-Z0-9\/\+=]/', $str);
---
> 		return (base64_encode(base64_decode($str)) === $str);
1288d1514
< 	 * @access	public
1293a1520,1524
> 		if ($this->_safe_form_data === FALSE OR empty($data))
> 		{
> 			return $data;
> 		}
> 
1304,1309c1535
< 		if ($this->_safe_form_data == FALSE OR $data === '')
< 		{
< 			return $data;
< 		}
< 
< 		return str_replace(array("'", '"', '<', '>'), array("&#39;", "&quot;", '&lt;', '&gt;'), stripslashes($data));
---
> 		return str_replace(array("'", '"', '<', '>'), array('&#39;', '&quot;', '&lt;', '&gt;'), stripslashes($data));
1317d1542
< 	 * @access	public
1323c1548
< 		if ($str == 'http://' OR $str == '')
---
> 		if ($str === 'http://' OR $str === '')
1328c1553
< 		if (substr($str, 0, 7) != 'http://' && substr($str, 0, 8) != 'https://')
---
> 		if (strpos($str, 'http://') !== 0 && strpos($str, 'https://') !== 0)
1330c1555
< 			$str = 'http://'.$str;
---
> 			return 'http://'.$str;
1341d1565
< 	 * @access	public
1347c1571
< 		return $this->CI->input->strip_image_tags($str);
---
> 		return $this->CI->security->strip_image_tags($str);
1353c1577
< 	 * XSS Clean
---
> 	 * Convert PHP tags to entities
1355d1578
< 	 * @access	public
1359c1582
< 	public function xss_clean($str)
---
> 	public function encode_php_tags($str)
1361c1584
< 		return $this->CI->security->xss_clean($str);
---
> 		return str_replace(array('<?', '?>'), array('&lt;?', '?&gt;'), $str);
1367c1590
< 	 * Convert PHP tags to entities
---
> 	 * Reset validation vars
1369,1371c1592,1595
< 	 * @access	public
< 	 * @param	string
< 	 * @return	string
---
> 	 * Prevents subsequent validation routines from being affected by the
> 	 * results of any previous validation routine due to the CI singleton.
> 	 *
> 	 * @return	CI_Form_validation
1373c1597
< 	public function encode_php_tags($str)
---
> 	public function reset_validation()
1375c1599,1603
< 		return str_replace(array('<?php', '<?PHP', '<?', '?>'),  array('&lt;?php', '&lt;?PHP', '&lt;?', '?&gt;'), $str);
---
> 		$this->_field_data = array();
> 		$this->_error_array = array();
> 		$this->_error_messages = array();
> 		$this->error_string = '';
> 		return $this;
1379,1382d1606
< // END Form Validation Class
< 
< /* End of file Form_validation.php */
< /* Location: ./system/libraries/Form_validation.php */
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Ftp.php opensourcepos/system/libraries/Ftp.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/ftp.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/ftp.html
29,35c51,93
< 	var $hostname	= '';
< 	var $username	= '';
< 	var $password	= '';
< 	var $port		= 21;
< 	var $passive	= TRUE;
< 	var $debug		= FALSE;
< 	var $conn_id	= FALSE;
---
> 	/**
> 	 * FTP Server hostname
> 	 *
> 	 * @var	string
> 	 */
> 	public $hostname = '';
> 
> 	/**
> 	 * FTP Username
> 	 *
> 	 * @var	string
> 	 */
> 	public $username = '';
> 
> 	/**
> 	 * FTP Password
> 	 *
> 	 * @var	string
> 	 */
> 	public $password = '';
> 
> 	/**
> 	 * FTP Server port
> 	 *
> 	 * @var	int
> 	 */
> 	public $port = 21;
> 
> 	/**
> 	 * Passive mode flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $passive = TRUE;
> 
> 	/**
> 	 * Debug flag
> 	 *
> 	 * Specifies whether to display error messages.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $debug = FALSE;
36a95
> 	// --------------------------------------------------------------------
39c98
< 	 * Constructor - Sets Preferences
---
> 	 * Connection ID
41c100,110
< 	 * The constructor can be passed an array of config values
---
> 	 * @var	resource
> 	 */
> 	protected $conn_id;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	array	$config
> 	 * @return	void
45,50c114,115
< 		if (count($config) > 0)
< 		{
< 			$this->initialize($config);
< 		}
< 
< 		log_message('debug', "FTP Class Initialized");
---
> 		empty($config) OR $this->initialize($config);
> 		log_message('info', 'FTP Class Initialized');
58,59c123
< 	 * @access	public
< 	 * @param	array
---
> 	 * @param	array	$config
62c126
< 	function initialize($config = array())
---
> 	public function initialize($config = array())
81,82c145
< 	 * @access	public
< 	 * @param	array	 the connection values
---
> 	 * @param	array	 $config	Connection values
85c148
< 	function connect($config = array())
---
> 	public function connect($config = array())
94c157
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
103c167
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
111c176
< 		if ($this->passive == TRUE)
---
> 		if ($this->passive === TRUE)
124d188
< 	 * @access	private
127c191
< 	function _login()
---
> 	protected function _login()
137d200
< 	 * @access	private
140c203
< 	function _is_conn()
---
> 	protected function _is_conn()
144c207
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
165,167c229,230
< 	 * @access	public
< 	 * @param	string
< 	 * @param	bool
---
> 	 * @param	string	$path
> 	 * @param	bool	$suppress_debug
170c233
< 	function changedir($path = '', $supress_debug = FALSE)
---
> 	public function changedir($path, $suppress_debug = FALSE)
172c235
< 		if ($path == '' OR ! $this->_is_conn())
---
> 		if ( ! $this->_is_conn())
181c244
< 			if ($this->debug == TRUE AND $supress_debug == FALSE)
---
> 			if ($this->debug === TRUE && $suppress_debug === FALSE)
196,197c260,261
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$path
> 	 * @param	int	$permissions
200c264
< 	function mkdir($path = '', $permissions = NULL)
---
> 	public function mkdir($path, $permissions = NULL)
202c266
< 		if ($path == '' OR ! $this->_is_conn())
---
> 		if ($path === '' OR ! $this->_is_conn())
211c275
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
213c277
< 				$this->_error('ftp_unable_to_makdir');
---
> 				$this->_error('ftp_unable_to_mkdir');
219c284
< 		if ( ! is_null($permissions))
---
> 		if ($permissions !== NULL)
232,235c297,300
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @param	string
---
> 	 * @param	string	$locpath
> 	 * @param	string	$rempath
> 	 * @param	string	$mode
> 	 * @param	int	$permissions
238c303
< 	function upload($locpath, $rempath, $mode = 'auto', $permissions = NULL)
---
> 	public function upload($locpath, $rempath, $mode = 'auto', $permissions = NULL)
252c317
< 		if ($mode == 'auto')
---
> 		if ($mode === 'auto')
259c324
< 		$mode = ($mode == 'ascii') ? FTP_ASCII : FTP_BINARY;
---
> 		$mode = ($mode === 'ascii') ? FTP_ASCII : FTP_BINARY;
265c330
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
273c339
< 		if ( ! is_null($permissions))
---
> 		if ($permissions !== NULL)
286,289c352,354
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @param	string
---
> 	 * @param	string	$rempath
> 	 * @param	string	$locpath
> 	 * @param	string	$mode
292c357
< 	function download($rempath, $locpath, $mode = 'auto')
---
> 	public function download($rempath, $locpath, $mode = 'auto')
300c365
< 		if ($mode == 'auto')
---
> 		if ($mode === 'auto')
307c372
< 		$mode = ($mode == 'ascii') ? FTP_ASCII : FTP_BINARY;
---
> 		$mode = ($mode === 'ascii') ? FTP_ASCII : FTP_BINARY;
313c378
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
328,331c394,396
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
< 	 * @param	bool
---
> 	 * @param	string	$old_file
> 	 * @param	string	$new_file
> 	 * @param	bool	$move
334c399
< 	function rename($old_file, $new_file, $move = FALSE)
---
> 	public function rename($old_file, $new_file, $move = FALSE)
345c410
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
347,349c412
< 				$msg = ($move == FALSE) ? 'ftp_unable_to_rename' : 'ftp_unable_to_move';
< 
< 				$this->_error($msg);
---
> 				$this->_error('ftp_unable_to_'.($move === FALSE ? 'rename' : 'move'));
362,364c426,427
< 	 * @access	public
< 	 * @param	string
< 	 * @param	string
---
> 	 * @param	string	$old_file
> 	 * @param	string	$new_file
367c430
< 	function move($old_file, $new_file)
---
> 	public function move($old_file, $new_file)
377,378c440
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$filepath
381c443
< 	function delete_file($filepath)
---
> 	public function delete_file($filepath)
392c454
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
406c469
< 	 * containted within it.
---
> 	 * contained within it.
408,409c471
< 	 * @access	public
< 	 * @param	string
---
> 	 * @param	string	$filepath
412c474
< 	function delete_dir($filepath)
---
> 	public function delete_dir($filepath)
420c482
< 		$filepath = preg_replace("/(.+?)\/*$/", "\\1/",  $filepath);
---
> 		$filepath = preg_replace('/(.+?)\/*$/', '\\1/', $filepath);
423,424c485
< 
< 		if ($list !== FALSE AND count($list) > 0)
---
> 		if ( ! empty($list))
426c487
< 			foreach ($list as $item)
---
> 			for ($i = 0, $c = count($list); $i < $c; $i++)
428,430c489,491
< 				// If we can't delete the item it's probaly a folder so
< 				// we'll recursively call delete_dir()
< 				if ( ! @ftp_delete($this->conn_id, $item))
---
> 				// If we can't delete the item it's probaly a directory,
> 				// so we'll recursively call delete_dir()
> 				if ( ! preg_match('#/\.\.?$#', $list[$i]) && ! @ftp_delete($this->conn_id, $list[$i]))
432c493
< 					$this->delete_dir($item);
---
> 					$this->delete_dir($filepath.$list[$i]);
437,439c498
< 		$result = @ftp_rmdir($this->conn_id, $filepath);
< 
< 		if ($result === FALSE)
---
> 		if (@ftp_rmdir($this->conn_id, $filepath) === FALSE)
441c500
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
456,458c516,517
< 	 * @access	public
< 	 * @param	string	the file path
< 	 * @param	string	the permissions
---
> 	 * @param	string	$path	File path
> 	 * @param	int	$perm	Permissions
461c520
< 	function chmod($path, $perm)
---
> 	public function chmod($path, $perm)
468,469c527
< 		// Permissions can only be set when running PHP 5
< 		if ( ! function_exists('ftp_chmod'))
---
> 		if (@ftp_chmod($this->conn_id, $perm, $path) === FALSE)
471c529
< 			if ($this->debug == TRUE)
---
> 			if ($this->debug === TRUE)
475,476d532
< 			return FALSE;
< 		}
478,485d533
< 		$result = @ftp_chmod($this->conn_id, $perm, $path);
< 
< 		if ($result === FALSE)
< 		{
< 			if ($this->debug == TRUE)
< 			{
< 				$this->_error('ftp_unable_to_chmod');
< 			}
497c545
< 	 * @access	public
---
> 	 * @param	string	$path
500,502c548
< 	function list_files($path = '.')
< 	{
< 		if ( ! $this->_is_conn())
---
> 	public function list_files($path = '.')
504,507c550,552
< 			return FALSE;
< 		}
< 
< 		return ftp_nlist($this->conn_id, $path);
---
> 		return $this->_is_conn()
> 			? ftp_nlist($this->conn_id, $path)
> 			: FALSE;
515,517c560,563
< 	 * This function recursively reads a folder and everything it contains (including
< 	 * sub-folders) and creates a mirror via FTP based on it.  Whatever the directory structure
< 	 * of the original file path will be recreated on the server.
---
> 	 * This function recursively reads a folder and everything it contains
> 	 * (including sub-folders) and creates a mirror via FTP based on it.
> 	 * Whatever the directory structure of the original file path will be
> 	 * recreated on the server.
519,521c565,566
< 	 * @access	public
< 	 * @param	string	path to source with trailing slash
< 	 * @param	string	path to destination - include the base folder with trailing slash
---
> 	 * @param	string	$locpath	Path to source with trailing slash
> 	 * @param	string	$rempath	Path to destination - include the base folder with trailing slash
524c569
< 	function mirror($locpath, $rempath)
---
> 	public function mirror($locpath, $rempath)
534,538c579,580
< 			// Attempt to open the remote file path.
< 			if ( ! $this->changedir($rempath, TRUE))
< 			{
< 				// If it doesn't exist we'll attempt to create the direcotory
< 				if ( ! $this->mkdir($rempath) OR ! $this->changedir($rempath))
---
> 			// Attempt to open the remote file path and try to create it, if it doesn't exist
> 			if ( ! $this->changedir($rempath, TRUE) && ( ! $this->mkdir($rempath) OR ! $this->changedir($rempath)))
542d583
< 			}
547c588
< 				if (@is_dir($locpath.$file) && substr($file, 0, 1) != '.')
---
> 				if (is_dir($locpath.$file) && $file[0] !== '.')
549c590
< 					$this->mirror($locpath.$file."/", $rempath.$file."/");
---
> 					$this->mirror($locpath.$file.'/', $rempath.$file.'/');
551c592
< 				elseif (substr($file, 0, 1) != ".")
---
> 				elseif ($file[0] !== '.')
572,573c613
< 	 * @access	private
< 	 * @param	string
---
> 	 * @param	string	$filename
576,578c616
< 	function _getext($filename)
< 	{
< 		if (FALSE === strpos($filename, '.'))
---
> 	protected function _getext($filename)
580c618,620
< 			return 'txt';
---
> 		return (($dot = strrpos($filename, '.')) === FALSE)
> 			? 'txt'
> 			: substr($filename, $dot + 1);
583,587d622
< 		$x = explode('.', $filename);
< 		return end($x);
< 	}
< 
< 
593,594c628
< 	 * @access	private
< 	 * @param	string
---
> 	 * @param	string	$ext	Filename extension
597c631
< 	function _settype($ext)
---
> 	protected function _settype($ext)
599,616c633,635
< 		$text_types = array(
< 							'txt',
< 							'text',
< 							'php',
< 							'phps',
< 							'php4',
< 							'js',
< 							'css',
< 							'htm',
< 							'html',
< 							'phtml',
< 							'shtml',
< 							'log',
< 							'xml'
< 							);
< 
< 
< 		return (in_array($ext, $text_types)) ? 'ascii' : 'binary';
---
> 		return in_array($ext, array('txt', 'text', 'php', 'phps', 'php4', 'js', 'css', 'htm', 'html', 'phtml', 'shtml', 'log', 'xml'), TRUE)
> 			? 'ascii'
> 			: 'binary';
624,626d642
< 	 * @access	public
< 	 * @param	string	path to source
< 	 * @param	string	path to destination
629,631c645
< 	function close()
< 	{
< 		if ( ! $this->_is_conn())
---
> 	public function close()
633,636c647,649
< 			return FALSE;
< 		}
< 
< 		@ftp_close($this->conn_id);
---
> 		return $this->_is_conn()
> 			? @ftp_close($this->conn_id)
> 			: FALSE;
644,646c657,658
< 	 * @access	private
< 	 * @param	string
< 	 * @return	bool
---
> 	 * @param	string	$line
> 	 * @return	void
648c660
< 	function _error($line)
---
> 	protected function _error($line)
657,660d667
< // END FTP Class
< 
< /* End of file Ftp.php */
< /* Location: ./system/libraries/Ftp.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Image_lib.php opensourcepos/system/libraries/Image_lib.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/image_lib.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/image_lib.html
29,43c51,92
< 	var $image_library		= 'gd2';	// Can be:  imagemagick, netpbm, gd, gd2
< 	var $library_path		= '';
< 	var $dynamic_output		= FALSE;	// Whether to send to browser or write to disk
< 	var $source_image		= '';
< 	var $new_image			= '';
< 	var $width				= '';
< 	var $height				= '';
< 	var $quality			= '90';
< 	var $create_thumb		= FALSE;
< 	var $thumb_marker		= '_thumb';
< 	var $maintain_ratio		= TRUE;		// Whether to maintain aspect ratio when resizing or use hard values
< 	var $master_dim			= 'auto';	// auto, height, or width.  Determines what to use as the master dimension
< 	var $rotation_angle		= '';
< 	var $x_axis				= '';
< 	var	$y_axis				= '';
---
> 	/**
> 	 * PHP extension/library to use for image manipulation
> 	 * Can be: imagemagick, netpbm, gd, gd2
> 	 *
> 	 * @var string
> 	 */
> 	public $image_library		= 'gd2';
> 
> 	/**
> 	 * Path to the graphic library (if applicable)
> 	 *
> 	 * @var string
> 	 */
> 	public $library_path		= '';
> 
> 	/**
> 	 * Whether to send to browser or write to disk
> 	 *
> 	 * @var bool
> 	 */
> 	public $dynamic_output		= FALSE;
> 
> 	/**
> 	 * Path to original image
> 	 *
> 	 * @var string
> 	 */
> 	public $source_image		= '';
> 
> 	/**
> 	 * Path to the modified image
> 	 *
> 	 * @var string
> 	 */
> 	public $new_image		= '';
> 
> 	/**
> 	 * Image width
> 	 *
> 	 * @var int
> 	 */
> 	public $width			= '';
44a94,157
> 	/**
> 	 * Image height
> 	 *
> 	 * @var int
> 	 */
> 	public $height			= '';
> 
> 	/**
> 	 * Quality percentage of new image
> 	 *
> 	 * @var int
> 	 */
> 	public $quality			= 90;
> 
> 	/**
> 	 * Whether to create a thumbnail
> 	 *
> 	 * @var bool
> 	 */
> 	public $create_thumb		= FALSE;
> 
> 	/**
> 	 * String to add to thumbnail version of image
> 	 *
> 	 * @var string
> 	 */
> 	public $thumb_marker		= '_thumb';
> 
> 	/**
> 	 * Whether to maintain aspect ratio when resizing or use hard values
> 	 *
> 	 * @var bool
> 	 */
> 	public $maintain_ratio		= TRUE;
> 
> 	/**
> 	 * auto, height, or width.  Determines what to use as the master dimension
> 	 *
> 	 * @var string
> 	 */
> 	public $master_dim		= 'auto';
> 
> 	/**
> 	 * Angle at to rotate image
> 	 *
> 	 * @var string
> 	 */
> 	public $rotation_angle		= '';
> 
> 	/**
> 	 * X Coordinate for manipulation of the current image
> 	 *
> 	 * @var int
> 	 */
> 	public $x_axis			= '';
> 
> 	/**
> 	 * Y Coordinate for manipulation of the current image
> 	 *
> 	 * @var int
> 	 */
> 	public $y_axis			= '';
> 
> 	// --------------------------------------------------------------------------
46,61c159,187
< 	var $wm_text			= '';			// Watermark text if graphic is not used
< 	var $wm_type			= 'text';		// Type of watermarking.  Options:  text/overlay
< 	var $wm_x_transp		= 4;
< 	var $wm_y_transp		= 4;
< 	var $wm_overlay_path	= '';			// Watermark image path
< 	var $wm_font_path		= '';			// TT font
< 	var $wm_font_size		= 17;			// Font size (different versions of GD will either use points or pixels)
< 	var $wm_vrt_alignment	= 'B';			// Vertical alignment:   T M B
< 	var $wm_hor_alignment	= 'C';			// Horizontal alignment: L R C
< 	var $wm_padding			= 0;			// Padding around text
< 	var $wm_hor_offset		= 0;			// Lets you push text to the right
< 	var $wm_vrt_offset		= 0;			// Lets you push  text down
< 	var $wm_font_color		= '#ffffff';	// Text color
< 	var $wm_shadow_color	= '';			// Dropshadow color
< 	var $wm_shadow_distance	= 2;			// Dropshadow distance
< 	var $wm_opacity			= 50;			// Image opacity: 1 - 100  Only works with image
---
> 	// --------------------------------------------------------------------------
> 
> 	/**
> 	 * Watermark text if graphic is not used
> 	 *
> 	 * @var string
> 	 */
> 	public $wm_text			= '';
> 
> 	/**
> 	 * Type of watermarking.  Options:  text/overlay
> 	 *
> 	 * @var string
> 	 */
> 	public $wm_type			= 'text';
> 
> 	/**
> 	 * Default transparency for watermark
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_x_transp		= 4;
> 
> 	/**
> 	 * Default transparency for watermark
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_y_transp		= 4;
62a189,273
> 	/**
> 	 * Watermark image path
> 	 *
> 	 * @var string
> 	 */
> 	public $wm_overlay_path		= '';
> 
> 	/**
> 	 * TT font
> 	 *
> 	 * @var string
> 	 */
> 	public $wm_font_path		= '';
> 
> 	/**
> 	 * Font size (different versions of GD will either use points or pixels)
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_font_size		= 17;
> 
> 	/**
> 	 * Vertical alignment:   T M B
> 	 *
> 	 * @var string
> 	 */
> 	public $wm_vrt_alignment	= 'B';
> 
> 	/**
> 	 * Horizontal alignment: L R C
> 	 *
> 	 * @var string
> 	 */
> 	public $wm_hor_alignment	= 'C';
> 
> 	/**
> 	 * Padding around text
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_padding			= 0;
> 
> 	/**
> 	 * Lets you push text to the right
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_hor_offset		= 0;
> 
> 	/**
> 	 * Lets you push text down
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_vrt_offset		= 0;
> 
> 	/**
> 	 * Text color
> 	 *
> 	 * @var string
> 	 */
> 	protected $wm_font_color	= '#ffffff';
> 
> 	/**
> 	 * Dropshadow color
> 	 *
> 	 * @var string
> 	 */
> 	protected $wm_shadow_color	= '';
> 
> 	/**
> 	 * Dropshadow distance
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_shadow_distance	= 2;
> 
> 	/**
> 	 * Image opacity: 1 - 100  Only works with image
> 	 *
> 	 * @var int
> 	 */
> 	public $wm_opacity		= 50;
> 
> 	// --------------------------------------------------------------------------
64,77c275
< 	var $source_folder		= '';
< 	var $dest_folder		= '';
< 	var $mime_type			= '';
< 	var $orig_width			= '';
< 	var $orig_height		= '';
< 	var $image_type			= '';
< 	var $size_str			= '';
< 	var $full_src_path		= '';
< 	var $full_dst_path		= '';
< 	var $create_fnc			= 'imagecreatetruecolor';
< 	var $copy_fnc			= 'imagecopyresampled';
< 	var $error_msg			= array();
< 	var $wm_use_drop_shadow	= FALSE;
< 	var $wm_use_truetype	= FALSE;
---
> 	// --------------------------------------------------------------------------
80c278
< 	 * Constructor
---
> 	 * Source image folder
82c280,385
< 	 * @param	string
---
> 	 * @var string
> 	 */
> 	public $source_folder		= '';
> 
> 	/**
> 	 * Destination image folder
> 	 *
> 	 * @var string
> 	 */
> 	public $dest_folder		= '';
> 
> 	/**
> 	 * Image mime-type
> 	 *
> 	 * @var string
> 	 */
> 	public $mime_type		= '';
> 
> 	/**
> 	 * Original image width
> 	 *
> 	 * @var int
> 	 */
> 	public $orig_width		= '';
> 
> 	/**
> 	 * Original image height
> 	 *
> 	 * @var int
> 	 */
> 	public $orig_height		= '';
> 
> 	/**
> 	 * Image format
> 	 *
> 	 * @var string
> 	 */
> 	public $image_type		= '';
> 
> 	/**
> 	 * Size of current image
> 	 *
> 	 * @var string
> 	 */
> 	public $size_str		= '';
> 
> 	/**
> 	 * Full path to source image
> 	 *
> 	 * @var string
> 	 */
> 	public $full_src_path		= '';
> 
> 	/**
> 	 * Full path to destination image
> 	 *
> 	 * @var string
> 	 */
> 	public $full_dst_path		= '';
> 
> 	/**
> 	 * File permissions
> 	 *
> 	 * @var	int
> 	 */
> 	public $file_permissions = 0644;
> 
> 	/**
> 	 * Name of function to create image
> 	 *
> 	 * @var string
> 	 */
> 	public $create_fnc		= 'imagecreatetruecolor';
> 
> 	/**
> 	 * Name of function to copy image
> 	 *
> 	 * @var string
> 	 */
> 	public $copy_fnc		= 'imagecopyresampled';
> 
> 	/**
> 	 * Error messages
> 	 *
> 	 * @var array
> 	 */
> 	public $error_msg		= array();
> 
> 	/**
> 	 * Whether to have a drop shadow on watermark
> 	 *
> 	 * @var bool
> 	 */
> 	protected $wm_use_drop_shadow	= FALSE;
> 
> 	/**
> 	 * Whether to use truetype fonts
> 	 *
> 	 * @var bool
> 	 */
> 	public $wm_use_truetype	= FALSE;
> 
> 	/**
> 	 * Initialize Image Library
> 	 *
> 	 * @param	array	$props
92c395
< 		log_message('debug', "Image Lib Class Initialized");
---
> 		log_message('info', 'Image Lib Class Initialized');
102d404
< 	 * @access	public
105c407
< 	function clear()
---
> 	public function clear()
107c409
< 		$props = array('source_folder', 'dest_folder', 'source_image', 'full_src_path', 'full_dst_path', 'new_image', 'image_type', 'size_str', 'quality', 'orig_width', 'orig_height', 'width', 'height', 'rotation_angle', 'x_axis', 'y_axis', 'create_fnc', 'copy_fnc', 'wm_overlay_path', 'wm_use_truetype', 'dynamic_output', 'wm_font_size', 'wm_text', 'wm_vrt_alignment', 'wm_hor_alignment', 'wm_padding', 'wm_hor_offset', 'wm_vrt_offset', 'wm_font_color', 'wm_use_drop_shadow', 'wm_shadow_color', 'wm_shadow_distance', 'wm_opacity');
---
> 		$props = array('thumb_marker', 'library_path', 'source_image', 'new_image', 'width', 'height', 'rotation_angle', 'x_axis', 'y_axis', 'wm_text', 'wm_overlay_path', 'wm_font_path', 'wm_shadow_color', 'source_folder', 'dest_folder', 'mime_type', 'orig_width', 'orig_height', 'image_type', 'size_str', 'full_src_path', 'full_dst_path');
114c416,421
< 		// special consideration for master_dim
---
> 		$this->image_library 		= 'gd2';
> 		$this->dynamic_output 		= FALSE;
> 		$this->quality 				= 90;
> 		$this->create_thumb 		= FALSE;
> 		$this->thumb_marker 		= '_thumb';
> 		$this->maintain_ratio 		= TRUE;
115a423,439
> 		$this->wm_type 				= 'text';
> 		$this->wm_x_transp 			= 4;
> 		$this->wm_y_transp 			= 4;
> 		$this->wm_font_size 		= 17;
> 		$this->wm_vrt_alignment 	= 'B';
> 		$this->wm_hor_alignment 	= 'C';
> 		$this->wm_padding 			= 0;
> 		$this->wm_hor_offset 		= 0;
> 		$this->wm_vrt_offset 		= 0;
> 		$this->wm_font_color		= '#ffffff';
> 		$this->wm_shadow_distance 	= 2;
> 		$this->wm_opacity 			= 50;
> 		$this->create_fnc 			= 'imagecreatetruecolor';
> 		$this->copy_fnc 			= 'imagecopyresampled';
> 		$this->error_msg 			= array();
> 		$this->wm_use_drop_shadow 	= FALSE;
> 		$this->wm_use_truetype 		= FALSE;
123d446
< 	 * @access	public
127c450
< 	function initialize($props = array())
---
> 	public function initialize($props = array())
129,131c452
< 		/*
< 		 * Convert array elements into class variables
< 		 */
---
> 		// Convert array elements into class variables
135a457,481
> 				if (property_exists($this, $key))
> 				{
> 					if (in_array($key, array('wm_font_color', 'wm_shadow_color')))
> 					{
> 						if (preg_match('/^#?([0-9a-f]{3}|[0-9a-f]{6})$/i', $val, $matches))
> 						{
> 							/* $matches[1] contains our hex color value, but it might be
> 							 * both in the full 6-length format or the shortened 3-length
> 							 * value.
> 							 * We'll later need the full version, so we keep it if it's
> 							 * already there and if not - we'll convert to it. We can
> 							 * access string characters by their index as in an array,
> 							 * so we'll do that and use concatenation to form the final
> 							 * value:
> 							 */
> 							$val = (strlen($matches[1]) === 6)
> 								? '#'.$matches[1]
> 								: '#'.$matches[1][0].$matches[1][0].$matches[1][1].$matches[1][1].$matches[1][2].$matches[1][2];
> 						}
> 						else
> 						{
> 							continue;
> 						}
> 					}
> 
138a485
> 		}
140,146c487,488
< 		/*
< 		 * Is there a source image?
< 		 *
< 		 * If not, there's no reason to continue
< 		 *
< 		 */
< 		if ($this->source_image == '')
---
> 		// Is there a source image? If not, there's no reason to continue
> 		if ($this->source_image === '')
152,153c494
< 		/*
< 		 * Is getimagesize() Available?
---
> 		/* Is getimagesize() available?
158d498
< 		 *
168,169c508
< 		/*
< 		 * Set the full server path
---
> 		/* Set the full server path
174d512
< 		 *
176c514
< 		if (function_exists('realpath') AND @realpath($this->source_image) !== FALSE)
---
> 		if (($full_source_path = realpath($this->source_image)) !== FALSE)
178c516
< 			$full_source_path = str_replace("\\", "/", realpath($this->source_image));
---
> 			$full_source_path = str_replace('\\', '/', $full_source_path);
202d539
< 		 *
204c541
< 		if ($this->new_image == '')
---
> 		if ($this->new_image === '')
209,211c546
< 		else
< 		{
< 			if (strpos($this->new_image, '/') === FALSE AND strpos($this->new_image, '\\') === FALSE)
---
> 		elseif (strpos($this->new_image, '/') === FALSE)
218c553
< 				if (function_exists('realpath') AND @realpath($this->new_image) !== FALSE)
---
> 			if (strpos($this->new_image, '/') === FALSE && strpos($this->new_image, '\\') === FALSE)
220c555
< 					$full_dest_path = str_replace("\\", "/", realpath($this->new_image));
---
> 				$full_dest_path = str_replace('\\', '/', realpath($this->new_image));
228c563
< 				if ( ! preg_match("#\.(jpg|jpeg|gif|png)$#i", $full_dest_path))
---
> 			if ( ! preg_match('#\.(jpg|jpeg|gif|png)$#i', $full_dest_path))
240d574
< 		}
242,243c576
< 		/*
< 		 * Compile the finalized filenames/paths
---
> 		/* Compile the finalized filenames/paths
250d582
< 		 *
252c584
< 		if ($this->create_thumb === FALSE OR $this->thumb_marker == '')
---
> 		if ($this->create_thumb === FALSE OR $this->thumb_marker === '')
265,266c597
< 		/*
< 		 * Should we maintain image proportions?
---
> 		/* Should we maintain image proportions?
271d601
< 		 *
273c603
< 		if ($this->maintain_ratio === TRUE && ($this->width != '' AND $this->height != ''))
---
> 		if ($this->maintain_ratio === TRUE && ($this->width !== 0 OR $this->height !== 0))
278,283c608
< 		/*
< 		 * Was a width and height specified?
< 		 *
< 		 * If the destination width/height was
< 		 * not submitted we will use the values
< 		 * from the actual file
---
> 		/* Was a width and height specified?
284a610,611
> 		 * If the destination width/height was not submitted we
> 		 * will use the values from the actual file
286c613,614
< 		if ($this->width == '')
---
> 		if ($this->width === '')
> 		{
287a616
> 		}
289c618,619
< 		if ($this->height == '')
---
> 		if ($this->height === '')
> 		{
290a621
> 		}
293c624
< 		$this->quality = trim(str_replace("%", "", $this->quality));
---
> 		$this->quality = trim(str_replace('%', '', $this->quality));
295c626,627
< 		if ($this->quality == '' OR $this->quality == 0 OR ! is_numeric($this->quality))
---
> 		if ($this->quality === '' OR $this->quality === 0 OR ! ctype_digit($this->quality))
> 		{
296a629
> 		}
299,300c632,633
< 		$this->x_axis = ($this->x_axis == '' OR ! is_numeric($this->x_axis)) ? 0 : $this->x_axis;
< 		$this->y_axis = ($this->y_axis == '' OR ! is_numeric($this->y_axis)) ? 0 : $this->y_axis;
---
> 		is_numeric($this->x_axis) OR $this->x_axis = 0;
> 		is_numeric($this->y_axis) OR $this->y_axis = 0;
303,305c636
< 		if ($this->wm_font_color != '')
< 		{
< 			if (strlen($this->wm_font_color) == 6)
---
> 		if ($this->wm_overlay_path !== '')
307,308c638
< 				$this->wm_font_color = '#'.$this->wm_font_color;
< 			}
---
> 			$this->wm_overlay_path = str_replace('\\', '/', realpath($this->wm_overlay_path));
311,313c641
< 		if ($this->wm_shadow_color != '')
< 		{
< 			if (strlen($this->wm_shadow_color) == 6)
---
> 		if ($this->wm_shadow_color !== '')
315,321c643
< 				$this->wm_shadow_color = '#'.$this->wm_shadow_color;
< 			}
< 		}
< 
< 		if ($this->wm_overlay_path != '')
< 		{
< 			$this->wm_overlay_path = str_replace("\\", "/", realpath($this->wm_overlay_path));
---
> 			$this->wm_use_drop_shadow = TRUE;
323,324c645
< 
< 		if ($this->wm_shadow_color != '')
---
> 		elseif ($this->wm_use_drop_shadow === TRUE && $this->wm_shadow_color === '')
326c647
< 			$this->wm_use_drop_shadow = TRUE;
---
> 			$this->wm_use_drop_shadow = FALSE;
329c650
< 		if ($this->wm_font_path != '')
---
> 		if ($this->wm_font_path !== '')
345d665
< 	 * @access	public
348c668
< 	function resize()
---
> 	public function resize()
350,356c670
< 		$protocol = 'image_process_'.$this->image_library;
< 
< 		if (preg_match('/gd2$/i', $protocol))
< 		{
< 			$protocol = 'image_process_gd';
< 		}
< 
---
> 		$protocol = ($this->image_library === 'gd2') ? 'image_process_gd' : 'image_process_'.$this->image_library;
368d681
< 	 * @access	public
371c684
< 	function crop()
---
> 	public function crop()
373,379c686
< 		$protocol = 'image_process_'.$this->image_library;
< 
< 		if (preg_match('/gd2$/i', $protocol))
< 		{
< 			$protocol = 'image_process_gd';
< 		}
< 
---
> 		$protocol = ($this->image_library === 'gd2') ? 'image_process_gd' : 'image_process_'.$this->image_library;
391d697
< 	 * @access	public
394c700
< 	function rotate()
---
> 	public function rotate()
399c705
< 		if ($this->rotation_angle == '' OR ! in_array($this->rotation_angle, $degs))
---
> 		if ($this->rotation_angle === '' OR ! in_array($this->rotation_angle, $degs))
406c712
< 		if ($this->rotation_angle == 90 OR $this->rotation_angle == 270)
---
> 		if ($this->rotation_angle === 90 OR $this->rotation_angle === 270)
419c724
< 		if ($this->image_library == 'imagemagick' OR $this->image_library == 'netpbm')
---
> 		if ($this->image_library === 'imagemagick' OR $this->image_library === 'netpbm')
426,433c730,732
< 		if ($this->rotation_angle == 'hor' OR $this->rotation_angle == 'vrt')
< 		{
< 			return $this->image_mirror_gd();
< 		}
< 		else
< 		{
< 			return $this->image_rotate_gd();
< 		}
---
> 		return ($this->rotation_angle === 'hor' OR $this->rotation_angle === 'vrt')
> 			? $this->image_mirror_gd()
> 			: $this->image_rotate_gd();
443d741
< 	 * @access	public
447c745
< 	function image_process_gd($action = 'resize')
---
> 	public function image_process_gd($action = 'resize')
453c751
< 		if ($this->dynamic_output === FALSE)
---
> 		if ($this->dynamic_output === FALSE && $this->orig_width === $this->width && $this->orig_height === $this->height)
455c753
< 			if ($this->orig_width == $this->width AND $this->orig_height == $this->height)
---
> 			if ($this->source_image !== $this->new_image && @copy($this->full_src_path, $this->full_dst_path))
457,462c755
< 				if ($this->source_image != $this->new_image)
< 				{
< 					if (@copy($this->full_src_path, $this->full_dst_path))
< 					{
< 						@chmod($this->full_dst_path, FILE_WRITE_MODE);
< 					}
---
> 				chmod($this->full_dst_path, $this->file_permissions);
467d759
< 		}
470c762
< 		if ($action == 'crop')
---
> 		if ($action === 'crop')
480c772
< 				$v2_override = ($gd_version == 2) ? TRUE : FALSE;
---
> 				$v2_override = ($gd_version == 2);
496,503c788,796
< 		//  Create The Image
< 		//
< 		//  old conditional which users report cause problems with shared GD libs who report themselves as "2.0 or greater"
< 		//  it appears that this is no longer the issue that it was in 2004, so we've removed it, retaining it in the comment
< 		//  below should that ever prove inaccurate.
< 		//
< 		//  if ($this->image_library == 'gd2' AND function_exists('imagecreatetruecolor') AND $v2_override == FALSE)
< 		if ($this->image_library == 'gd2' AND function_exists('imagecreatetruecolor'))
---
> 		/* Create the image
> 		 *
> 		 * Old conditional which users report cause problems with shared GD libs who report themselves as "2.0 or greater"
> 		 * it appears that this is no longer the issue that it was in 2004, so we've removed it, retaining it in the comment
> 		 * below should that ever prove inaccurate.
> 		 *
> 		 * if ($this->image_library === 'gd2' && function_exists('imagecreatetruecolor') && $v2_override === FALSE)
> 		 */
> 		if ($this->image_library === 'gd2' && function_exists('imagecreatetruecolor'))
516c809
< 		if ($this->image_type == 3) // png we can actually preserve transparency
---
> 		if ($this->image_type === 3) // png we can actually preserve transparency
525c818
< 		if ($this->dynamic_output == TRUE)
---
> 		if ($this->dynamic_output === TRUE)
529,532c822
< 		else
< 		{
< 			// Or save it
< 			if ( ! $this->image_save_gd($dst_img))
---
> 		elseif ( ! $this->image_save_gd($dst_img)) // Or save it
536d825
< 		}
542,543c831
< 		// Set the file to 777
< 		@chmod($this->full_dst_path, FILE_WRITE_MODE);
---
> 		chmod($this->full_dst_path, $this->file_permissions);
555d842
< 	 * @access	public
559c846
< 	function image_process_imagemagick($action = 'resize')
---
> 	public function image_process_imagemagick($action = 'resize')
562c849
< 		if ($this->library_path == '')
---
> 		if ($this->library_path === '')
568c855
< 		if ( ! preg_match("/convert$/i", $this->library_path))
---
> 		if ( ! preg_match('/convert$/i', $this->library_path))
570,572c857
< 			$this->library_path = rtrim($this->library_path, '/').'/';
< 
< 			$this->library_path .= 'convert';
---
> 			$this->library_path = rtrim($this->library_path, '/').'/convert';
576c861
< 		$cmd = $this->library_path." -quality ".$this->quality;
---
> 		$cmd = $this->library_path.' -quality '.$this->quality;
578c863
< 		if ($action == 'crop')
---
> 		if ($action === 'crop')
580c865
< 			$cmd .= " -crop ".$this->width."x".$this->height."+".$this->x_axis."+".$this->y_axis." \"$this->full_src_path\" \"$this->full_dst_path\" 2>&1";
---
> 			$cmd .= ' -crop '.$this->width.'x'.$this->height.'+'.$this->x_axis.'+'.$this->y_axis.' "'.$this->full_src_path.'" "'.$this->full_dst_path .'" 2>&1';
582,584c867
< 		elseif ($action == 'rotate')
< 		{
< 			switch ($this->rotation_angle)
---
> 		elseif ($action === 'rotate')
586,592c869,870
< 				case 'hor'	: $angle = '-flop';
< 					break;
< 				case 'vrt'	: $angle = '-flip';
< 					break;
< 				default		: $angle = '-rotate '.$this->rotation_angle;
< 					break;
< 			}
---
> 			$angle = ($this->rotation_angle === 'hor' OR $this->rotation_angle === 'vrt')
> 					? '-flop' : '-rotate '.$this->rotation_angle;
594c872
< 			$cmd .= " ".$angle." \"$this->full_src_path\" \"$this->full_dst_path\" 2>&1";
---
> 			$cmd .= ' '.$angle.' "'.$this->full_src_path.'" "'.$this->full_dst_path.'" 2>&1';
598c876,883
< 			$cmd .= " -resize ".$this->width."x".$this->height." \"$this->full_src_path\" \"$this->full_dst_path\" 2>&1";
---
> 			if($this->maintain_ratio === TRUE)
> 			{
> 				$cmd .= ' -resize '.$this->width.'x'.$this->height.' "'.$this->full_src_path.'" "'.$this->full_dst_path.'" 2>&1';
> 			}
> 			else
> 			{
> 				$cmd .= ' -resize '.$this->width.'x'.$this->height.'\! "'.$this->full_src_path.'" "'.$this->full_dst_path.'" 2>&1';
> 			}
602c887,889
< 
---
> 		// exec() might be disabled
> 		if (function_usable('exec'))
> 		{
603a891
> 		}
612,613c900
< 		// Set the file to 777
< 		@chmod($this->full_dst_path, FILE_WRITE_MODE);
---
> 		chmod($this->full_dst_path, $this->file_permissions);
625d911
< 	 * @access	public
629c915
< 	function image_process_netpbm($action = 'resize')
---
> 	public function image_process_netpbm($action = 'resize')
631c917
< 		if ($this->library_path == '')
---
> 		if ($this->library_path === '')
654c940
< 		if ($action == 'crop')
---
> 		if ($action === 'crop')
658c944
< 		elseif ($action == 'rotate')
---
> 		elseif ($action === 'rotate')
684c970,972
< 
---
> 		// exec() might be disabled
> 		if (function_usable('exec'))
> 		{
685a974
> 		}
699c988
< 		@chmod($this->full_dst_path, FILE_WRITE_MODE);
---
> 		chmod($this->full_dst_path, $this->file_permissions);
709d997
< 	 * @access	public
712c1000
< 	function image_rotate_gd()
---
> 	public function image_rotate_gd()
730,731c1018,1019
< 		//  Save the Image
< 		if ($this->dynamic_output == TRUE)
---
> 		// Show the image
> 		if ($this->dynamic_output === TRUE)
735,738c1023
< 		else
< 		{
< 			// Or save it
< 			if ( ! $this->image_save_gd($dst_img))
---
> 		elseif ( ! $this->image_save_gd($dst_img)) // ... or save it
742d1026
< 		}
748,750c1032
< 		// Set the file to 777
< 
< 		@chmod($this->full_dst_path, FILE_WRITE_MODE);
---
> 		chmod($this->full_dst_path, $this->file_permissions);
762d1043
< 	 * @access	public
765c1046
< 	function image_mirror_gd()
---
> 	public function image_mirror_gd()
775c1056
< 		if ($this->rotation_angle == 'hor')
---
> 		if ($this->rotation_angle === 'hor')
800c1081
< 				$bot = $height-1;
---
> 				$bottom = $height - 1;
802c1083
< 				while ($top < $bot)
---
> 				while ($top < $bottom)
805c1086
< 					$cb = imagecolorat($src_img, $i, $bot);
---
> 					$cb = imagecolorat($src_img, $i, $bottom);
808c1089
< 					imagesetpixel($src_img, $i, $bot, $ct);
---
> 					imagesetpixel($src_img, $i, $bottom, $ct);
811c1092
< 					$bot--;
---
> 					$bottom--;
817c1098
< 		if ($this->dynamic_output == TRUE)
---
> 		if ($this->dynamic_output === TRUE)
821,824c1102
< 		else
< 		{
< 			// Or save it
< 			if ( ! $this->image_save_gd($src_img))
---
> 		elseif ( ! $this->image_save_gd($src_img)) // ... or save it
828d1105
< 		}
833,834c1110
< 		// Set the file to 777
< 		@chmod($this->full_dst_path, FILE_WRITE_MODE);
---
> 		chmod($this->full_dst_path, $this->file_permissions);
847,848d1122
< 	 * @access	public
< 	 * @param	string
851c1125
< 	function watermark()
---
> 	public function watermark()
853,860c1127
< 		if ($this->wm_type == 'overlay')
< 		{
< 			return $this->overlay_watermark();
< 		}
< 		else
< 		{
< 			return $this->text_watermark();
< 		}
---
> 		return ($this->wm_type === 'overlay') ? $this->overlay_watermark() : $this->text_watermark();
868d1134
< 	 * @access	public
871c1137
< 	function overlay_watermark()
---
> 	public function overlay_watermark()
899,900c1165,1166
< 		$this->wm_vrt_alignment = strtoupper(substr($this->wm_vrt_alignment, 0, 1));
< 		$this->wm_hor_alignment = strtoupper(substr($this->wm_hor_alignment, 0, 1));
---
> 		$this->wm_vrt_alignment = strtoupper($this->wm_vrt_alignment[0]);
> 		$this->wm_hor_alignment = strtoupper($this->wm_hor_alignment[0]);
902c1168
< 		if ($this->wm_vrt_alignment == 'B')
---
> 		if ($this->wm_vrt_alignment === 'B')
905c1171
< 		if ($this->wm_hor_alignment == 'R')
---
> 		if ($this->wm_hor_alignment === 'R')
913c1179
< 		switch ($this->wm_vrt_alignment)
---
> 		if ($this->wm_vrt_alignment === 'M')
915,920c1181,1185
< 			case 'T':
< 				break;
< 			case 'M':	$y_axis += ($this->orig_height / 2) - ($wm_height / 2);
< 				break;
< 			case 'B':	$y_axis += $this->orig_height - $wm_height;
< 				break;
---
> 			$y_axis += ($this->orig_height / 2) - ($wm_height / 2);
> 		}
> 		elseif ($this->wm_vrt_alignment === 'B')
> 		{
> 			$y_axis += $this->orig_height - $wm_height;
924c1189
< 		switch ($this->wm_hor_alignment)
---
> 		if ($this->wm_hor_alignment === 'C')
926,931c1191,1195
< 			case 'L':
< 				break;
< 			case 'C':	$x_axis += ($this->orig_width / 2) - ($wm_width / 2);
< 				break;
< 			case 'R':	$x_axis += $this->orig_width - $wm_width;
< 				break;
---
> 			$x_axis += ($this->orig_width / 2) - ($wm_width / 2);
> 		}
> 		elseif ($this->wm_hor_alignment === 'R')
> 		{
> 			$x_axis += $this->orig_width - $wm_width;
935c1199
< 		if ($wm_img_type == 3 AND function_exists('imagealphablending'))
---
> 		if ($wm_img_type === 3 && function_exists('imagealphablending'))
956a1221,1227
> 		// We can preserve transparency for PNG images
> 		if ($this->image_type === 3)
> 		{
> 			imagealphablending($src_img, FALSE);
> 			imagesavealpha($src_img, TRUE);
> 		}
> 
958c1229
< 		if ($this->dynamic_output == TRUE)
---
> 		if ($this->dynamic_output === TRUE)
962,964c1233
< 		else
< 		{
< 			if ( ! $this->image_save_gd($src_img))
---
> 		elseif ( ! $this->image_save_gd($src_img)) // ... or save it
968d1236
< 		}
981d1248
< 	 * @access	public
984c1251
< 	function text_watermark()
---
> 	public function text_watermark()
991c1258
< 		if ($this->wm_use_truetype == TRUE AND ! file_exists($this->wm_font_path))
---
> 		if ($this->wm_use_truetype === TRUE && ! file_exists($this->wm_font_path))
1000,1014d1266
< 		// Set RGB values for text and shadow
< 		$this->wm_font_color	= str_replace('#', '', $this->wm_font_color);
< 		$this->wm_shadow_color	= str_replace('#', '', $this->wm_shadow_color);
< 
< 		$R1 = hexdec(substr($this->wm_font_color, 0, 2));
< 		$G1 = hexdec(substr($this->wm_font_color, 2, 2));
< 		$B1 = hexdec(substr($this->wm_font_color, 4, 2));
< 
< 		$R2 = hexdec(substr($this->wm_shadow_color, 0, 2));
< 		$G2 = hexdec(substr($this->wm_shadow_color, 2, 2));
< 		$B2 = hexdec(substr($this->wm_shadow_color, 4, 2));
< 
< 		$txt_color	= imagecolorclosest($src_img, $R1, $G1, $B1);
< 		$drp_color	= imagecolorclosest($src_img, $R2, $G2, $B2);
< 
1022c1274,1275
< 		if ($this->wm_vrt_alignment == 'B')
---
> 		if ($this->wm_vrt_alignment === 'B')
> 		{
1023a1277
> 		}
1025c1279,1280
< 		if ($this->wm_hor_alignment == 'R')
---
> 		if ($this->wm_hor_alignment === 'R')
> 		{
1026a1282
> 		}
1031c1287,1289
< 		if ($this->wm_use_truetype == TRUE)
---
> 		if ($this->wm_use_truetype === TRUE)
> 		{
> 			if (empty($this->wm_font_size))
1033,1034c1291,1292
< 			if ($this->wm_font_size == '')
< 				$this->wm_font_size = '17';
---
> 				$this->wm_font_size = 17;
> 			}
1035a1294,1302
> 			if (function_exists('imagettfbbox'))
> 			{
> 				$temp = imagettfbbox($this->wm_font_size, 0, $this->wm_font_path, $this->wm_text);
> 				$temp = $temp[2] - $temp[0];
> 
> 				$fontwidth = $temp / strlen($this->wm_text);
> 			}
> 			else
> 			{
1036a1304,1305
> 			}
> 
1050,1051c1319,1320
< 		// Set verticle alignment
< 		if ($this->wm_use_drop_shadow == FALSE)
---
> 		if ($this->wm_use_drop_shadow === FALSE)
> 		{
1052a1322
> 		}
1054,1055c1324,1325
< 		$this->wm_vrt_alignment = strtoupper(substr($this->wm_vrt_alignment, 0, 1));
< 		$this->wm_hor_alignment = strtoupper(substr($this->wm_hor_alignment, 0, 1));
---
> 		$this->wm_vrt_alignment = strtoupper($this->wm_vrt_alignment[0]);
> 		$this->wm_hor_alignment = strtoupper($this->wm_hor_alignment[0]);
1057c1327,1328
< 		switch ($this->wm_vrt_alignment)
---
> 		// Set vertical alignment
> 		if ($this->wm_vrt_alignment === 'M')
1059,1064c1330,1344
< 			case	 "T" :
< 				break;
< 			case "M":	$y_axis += ($this->orig_height/2)+($fontheight/2);
< 				break;
< 			case "B":	$y_axis += ($this->orig_height - $fontheight - $this->wm_shadow_distance - ($fontheight/2));
< 				break;
---
> 			$y_axis += ($this->orig_height / 2) + ($fontheight / 2);
> 		}
> 		elseif ($this->wm_vrt_alignment === 'B')
> 		{
> 			$y_axis += $this->orig_height - $fontheight - $this->wm_shadow_distance - ($fontheight / 2);
> 		}
> 
> 		// Set horizontal alignment
> 		if ($this->wm_hor_alignment === 'R')
> 		{
> 			$x_axis += $this->orig_width - ($fontwidth * strlen($this->wm_text)) - $this->wm_shadow_distance;
> 		}
> 		elseif ($this->wm_hor_alignment === 'C')
> 		{
> 			$x_axis += floor(($this->orig_width - ($fontwidth * strlen($this->wm_text))) / 2);
1066a1347,1349
> 		if ($this->wm_use_drop_shadow)
> 		{
> 			// Offset from text
1070,1071c1353,1363
< 		// Set horizontal alignment
< 		switch ($this->wm_hor_alignment)
---
> 			/* Set RGB values for shadow
> 			 *
> 			 * First character is #, so we don't really need it.
> 			 * Get the rest of the string and split it into 2-length
> 			 * hex values:
> 			 */
> 			$drp_color = str_split(substr($this->wm_shadow_color, 1, 6), 2);
> 			$drp_color = imagecolorclosest($src_img, hexdec($drp_color[0]), hexdec($drp_color[1]), hexdec($drp_color[2]));
> 
> 			// Add the shadow to the source image
> 			if ($this->wm_use_truetype)
1073,1084c1365,1370
< 			case "L":
< 				break;
< 			case "R":
< 						if ($this->wm_use_drop_shadow)
< 							$x_shad += ($this->orig_width - $fontwidth*strlen($this->wm_text));
< 							$x_axis += ($this->orig_width - $fontwidth*strlen($this->wm_text));
< 				break;
< 			case "C":
< 						if ($this->wm_use_drop_shadow)
< 							$x_shad += floor(($this->orig_width - $fontwidth*strlen($this->wm_text))/2);
< 							$x_axis += floor(($this->orig_width  -$fontwidth*strlen($this->wm_text))/2);
< 				break;
---
> 				imagettftext($src_img, $this->wm_font_size, 0, $x_shad, $y_shad, $drp_color, $this->wm_font_path, $this->wm_text);
> 			}
> 			else
> 			{
> 				imagestring($src_img, $this->wm_font_size, $x_shad, $y_shad, $this->wm_text, $drp_color);
> 			}
1086a1373,1381
> 		/* Set RGB values for text
> 		 *
> 		 * First character is #, so we don't really need it.
> 		 * Get the rest of the string and split it into 2-length
> 		 * hex values:
> 		 */
> 		$txt_color = str_split(substr($this->wm_font_color, 1, 6), 2);
> 		$txt_color = imagecolorclosest($src_img, hexdec($txt_color[0]), hexdec($txt_color[1]), hexdec($txt_color[2]));
> 
1090,1091d1384
< 			if ($this->wm_use_drop_shadow)
< 				imagettftext($src_img, $this->wm_font_size, 0, $x_shad, $y_shad, $drp_color, $this->wm_font_path, $this->wm_text);
1096,1097d1388
< 			if ($this->wm_use_drop_shadow)
< 				imagestring($src_img, $this->wm_font_size, $x_shad, $y_shad, $this->wm_text, $drp_color);
1100a1392,1398
> 		// We can preserve transparency for PNG images
> 		if ($this->image_type === 3)
> 		{
> 			imagealphablending($src_img, FALSE);
> 			imagesavealpha($src_img, TRUE);
> 		}
> 
1102c1400
< 		if ($this->dynamic_output == TRUE)
---
> 		if ($this->dynamic_output === TRUE)
1124c1422
< 	 * @access	public
---
> 	 * @param	string
1128c1426,1428
< 	function image_create_gd($path = '', $image_type = '')
---
> 	public function image_create_gd($path = '', $image_type = '')
> 	{
> 		if ($path === '')
1130d1429
< 		if ($path == '')
1131a1431
> 		}
1133c1433,1434
< 		if ($image_type == '')
---
> 		if ($image_type === '')
> 		{
1135c1436
< 
---
> 		}
1147d1447
< 				break;
1156d1455
< 				break;
1165,1168c1464
< 				break;
< 
< 		}
< 
---
> 			default:
1171a1468
> 	}
1181d1477
< 	 * @access	public
1185c1481
< 	function image_save_gd($resource)
---
> 	public function image_save_gd($resource)
1242d1537
< 	 * @access	public
1246c1541
< 	function image_display_gd($resource)
---
> 	public function image_display_gd($resource)
1248,1249c1543,1544
< 		header("Content-Disposition: filename={$this->source_image};");
< 		header("Content-Type: {$this->mime_type}");
---
> 		header('Content-Disposition: filename='.$this->source_image.';');
> 		header('Content-Type: '.$this->mime_type);
1257c1552
< 			case 2		:	imagejpeg($resource, '', $this->quality);
---
> 			case 2	:	imagejpeg($resource, NULL, $this->quality);
1278d1572
< 	 * @access	public
1281c1575,1579
< 	function image_reproportion()
---
> 	public function image_reproportion()
> 	{
> 		if (($this->width === 0 && $this->height === 0) OR $this->orig_width === 0 OR $this->orig_height === 0
> 			OR ( ! ctype_digit((string) $this->width) && ! ctype_digit((string) $this->height))
> 			OR ! ctype_digit((string) $this->orig_width) OR ! ctype_digit((string) $this->orig_height))
1283,1286d1580
< 		if ( ! is_numeric($this->width) OR ! is_numeric($this->height) OR $this->width == 0 OR $this->height == 0)
< 			return;
< 
< 		if ( ! is_numeric($this->orig_width) OR ! is_numeric($this->orig_height) OR $this->orig_width == 0 OR $this->orig_height == 0)
1287a1582
> 		}
1289,1292c1584,1586
< 		$new_width	= ceil($this->orig_width*$this->height/$this->orig_height);
< 		$new_height	= ceil($this->width*$this->orig_height/$this->orig_width);
< 
< 		$ratio = (($this->orig_height/$this->orig_width) - ($this->height/$this->width));
---
> 		// Sanitize
> 		$this->width = (int) $this->width;
> 		$this->height = (int) $this->height;
1294c1588,1590
< 		if ($this->master_dim != 'width' AND $this->master_dim != 'height')
---
> 		if ($this->master_dim !== 'width' && $this->master_dim !== 'height')
> 		{
> 			if ($this->width > 0 && $this->height > 0)
1296c1592,1593
< 			$this->master_dim = ($ratio < 0) ? 'width' : 'height';
---
> 				$this->master_dim = ((($this->orig_height/$this->orig_width) - ($this->height/$this->width)) < 0)
> 							? 'width' : 'height';
1298,1299c1595,1601
< 
< 		if (($this->width != $new_width) AND ($this->height != $new_height))
---
> 			else
> 			{
> 				$this->master_dim = ($this->height === 0) ? 'width' : 'height';
> 			}
> 		}
> 		elseif (($this->master_dim === 'width' && $this->width === 0)
> 			OR ($this->master_dim === 'height' && $this->height === 0))
1301c1603,1606
< 			if ($this->master_dim == 'height')
---
> 			return;
> 		}
> 
> 		if ($this->master_dim === 'width')
1303c1608
< 				$this->width = $new_width;
---
> 			$this->height = (int) ceil($this->width*$this->orig_height/$this->orig_width);
1307,1308c1612
< 				$this->height = $new_height;
< 			}
---
> 			$this->width = (int) ceil($this->orig_width*$this->height/$this->orig_height);
1319d1622
< 	 * @access	public
1320a1624
> 	 * @param	bool
1323c1627
< 	function get_image_properties($path = '', $return = FALSE)
---
> 	public function get_image_properties($path = '', $return = FALSE)
1328c1632,1633
< 		if ($path == '')
---
> 		if ($path === '')
> 		{
1329a1635
> 		}
1337,1338c1643
< 		$vals = @getimagesize($path);
< 
---
> 		$vals = getimagesize($path);
1339a1645
> 		$mime = (isset($types[$vals[2]])) ? 'image/'.$types[$vals[2]] : 'image/jpg';
1341,1343c1647
< 		$mime = (isset($types[$vals['2']])) ? 'image/'.$types[$vals['2']] : 'image/jpg';
< 
< 		if ($return == TRUE)
---
> 		if ($return === TRUE)
1345,1357c1649,1661
< 			$v['width']			= $vals['0'];
< 			$v['height']		= $vals['1'];
< 			$v['image_type']	= $vals['2'];
< 			$v['size_str']		= $vals['3'];
< 			$v['mime_type']		= $mime;
< 
< 			return $v;
< 		}
< 
< 		$this->orig_width	= $vals['0'];
< 		$this->orig_height	= $vals['1'];
< 		$this->image_type	= $vals['2'];
< 		$this->size_str		= $vals['3'];
---
> 			return array(
> 					'width' =>	$vals[0],
> 					'height' =>	$vals[1],
> 					'image_type' =>	$vals[2],
> 					'size_str' =>	$vals[3],
> 					'mime_type' =>	$mime
> 				);
> 		}
> 
> 		$this->orig_width	= $vals[0];
> 		$this->orig_height	= $vals[1];
> 		$this->image_type	= $vals[2];
> 		$this->size_str		= $vals[3];
1379d1682
< 	 * @access	public
1383c1686
< 	function size_calculator($vals)
---
> 	public function size_calculator($vals)
1394c1697,1698
< 			if ( ! isset($vals[$item]) OR $vals[$item] == '')
---
> 			if (empty($vals[$item]))
> 			{
1396a1701
> 		}
1398c1703
< 		if ($vals['width'] == 0 OR $vals['height'] == 0)
---
> 		if ($vals['width'] === 0 OR $vals['height'] === 0)
1403c1708
< 		if ($vals['new_width'] == 0)
---
> 		if ($vals['new_width'] === 0)
1407c1712
< 		elseif ($vals['new_height'] == 0)
---
> 		elseif ($vals['new_height'] === 0)
1427d1731
< 	 * @access	public
1431c1735
< 	function explode_name($source_image)
---
> 	public function explode_name($source_image)
1444d1747
< 	 * @access	public
1447c1750
< 	function gd_loaded()
---
> 	public function gd_loaded()
1451,1454c1754,1757
< 			if ( ! dl('gd.so'))
< 			{
< 				return FALSE;
< 			}
---
> 			/* As it is stated in the PHP manual, dl() is not always available
> 			 * and even if so - it could generate an E_WARNING message on failure
> 			 */
> 			return (function_exists('dl') && @dl('gd.so'));
1465d1767
< 	 * @access	public
1468c1770
< 	function gd_version()
---
> 	public function gd_version()
1473,1475c1775
< 			$gd_version = preg_replace("/\D/", "", $gd_version['GD Version']);
< 
< 			return $gd_version;
---
> 			return preg_replace('/\D/', '', $gd_version['GD Version']);
1486d1785
< 	 * @access	public
1490c1789
< 	function set_error($msg)
---
> 	public function set_error($msg)
1499,1500c1798
< 
< 				$msg = ($CI->lang->line($val) == FALSE) ? $val : $CI->lang->line($val);
---
> 				$msg = ($CI->lang->line($val) === FALSE) ? $val : $CI->lang->line($val);
1507c1805
< 			$msg = ($CI->lang->line($msg) == FALSE) ? $msg : $CI->lang->line($msg);
---
> 			$msg = ($CI->lang->line($msg) === FALSE) ? $msg : $CI->lang->line($msg);
1518c1816
< 	 * @access	public
---
> 	 * @param	string
1522,1525c1820
< 	function display_errors($open = '<p>', $close = '</p>')
< 	{
< 		$str = '';
< 		foreach ($this->error_msg as $val)
---
> 	public function display_errors($open = '<p>', $close = '</p>')
1527c1822
< 			$str .= $open.$val.$close;
---
> 		return (count($this->error_msg) > 0) ? $open.implode($close.$open, $this->error_msg).$close : '';
1530d1824
< 		return $str;
1532,1537d1825
< 
< }
< // END Image_lib Class
< 
< /* End of file Image_lib.php */
< /* Location: ./system/libraries/Image_lib.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/index.html opensourcepos/system/libraries/index.html
0a1
> <!DOCTYPE html>
Only in opensourcepos/system/libraries/Javascript: index.html
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/javascript/Jquery.php opensourcepos/system/libraries/Javascript/Jquery.php
0a1,1076
> <?php
> /**
>  * CodeIgniter
>  *
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
>  *
>  * @package	CodeIgniter
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
>  * @filesource
>  */
> defined('BASEPATH') OR exit('No direct script access allowed');
> 
> /**
>  * Jquery Class
>  *
>  * @package		CodeIgniter
>  * @subpackage	Libraries
>  * @category	Loader
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/javascript.html
>  */
> class CI_Jquery extends CI_Javascript {
> 
> 	/**
> 	 * JavaScript directory location
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_javascript_folder = 'js';
> 
> 	/**
> 	 * JQuery code for load
> 	 *
> 	 * @var	array
> 	 */
> 	public $jquery_code_for_load = array();
> 
> 	/**
> 	 * JQuery code for compile
> 	 *
> 	 * @var	array
> 	 */
> 	public $jquery_code_for_compile = array();
> 
> 	/**
> 	 * JQuery corner active flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $jquery_corner_active = FALSE;
> 
> 	/**
> 	 * JQuery table sorter active flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $jquery_table_sorter_active = FALSE;
> 
> 	/**
> 	 * JQuery table sorter pager active
> 	 *
> 	 * @var	bool
> 	 */
> 	public $jquery_table_sorter_pager_active = FALSE;
> 
> 	/**
> 	 * JQuery AJAX image
> 	 *
> 	 * @var	string
> 	 */
> 	public $jquery_ajax_img = '';
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	array	$params
> 	 * @return	void
> 	 */
> 	public function __construct($params)
> 	{
> 		$this->CI =& get_instance();
> 		extract($params);
> 
> 		if ($autoload === TRUE)
> 		{
> 			$this->script();
> 		}
> 
> 		log_message('info', 'Jquery Class Initialized');
> 	}
> 
> 	// --------------------------------------------------------------------
> 	// Event Code
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Blur
> 	 *
> 	 * Outputs a jQuery blur event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _blur($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'blur');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Change
> 	 *
> 	 * Outputs a jQuery change event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _change($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'change');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Click
> 	 *
> 	 * Outputs a jQuery click event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @param	bool	whether or not to return false
> 	 * @return	string
> 	 */
> 	protected function _click($element = 'this', $js = '', $ret_false = TRUE)
> 	{
> 		is_array($js) OR $js = array($js);
> 
> 		if ($ret_false)
> 		{
> 			$js[] = 'return false;';
> 		}
> 
> 		return $this->_add_event($element, $js, 'click');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Double Click
> 	 *
> 	 * Outputs a jQuery dblclick event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _dblclick($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'dblclick');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Error
> 	 *
> 	 * Outputs a jQuery error event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _error($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'error');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Focus
> 	 *
> 	 * Outputs a jQuery focus event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _focus($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'focus');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Hover
> 	 *
> 	 * Outputs a jQuery hover event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- Javascript code for mouse over
> 	 * @param	string	- Javascript code for mouse out
> 	 * @return	string
> 	 */
> 	protected function _hover($element = 'this', $over = '', $out = '')
> 	{
> 		$event = "\n\t$(".$this->_prep_element($element).").hover(\n\t\tfunction()\n\t\t{\n\t\t\t{$over}\n\t\t}, \n\t\tfunction()\n\t\t{\n\t\t\t{$out}\n\t\t});\n";
> 
> 		$this->jquery_code_for_compile[] = $event;
> 
> 		return $event;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Keydown
> 	 *
> 	 * Outputs a jQuery keydown event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _keydown($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'keydown');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Keyup
> 	 *
> 	 * Outputs a jQuery keydown event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _keyup($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'keyup');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Load
> 	 *
> 	 * Outputs a jQuery load event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _load($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'load');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Mousedown
> 	 *
> 	 * Outputs a jQuery mousedown event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _mousedown($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'mousedown');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Mouse Out
> 	 *
> 	 * Outputs a jQuery mouseout event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _mouseout($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'mouseout');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Mouse Over
> 	 *
> 	 * Outputs a jQuery mouseover event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _mouseover($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'mouseover');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Mouseup
> 	 *
> 	 * Outputs a jQuery mouseup event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _mouseup($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'mouseup');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Output
> 	 *
> 	 * Outputs script directly
> 	 *
> 	 * @param	array	$array_js = array()
> 	 * @return	void
> 	 */
> 	protected function _output($array_js = array())
> 	{
> 		if ( ! is_array($array_js))
> 		{
> 			$array_js = array($array_js);
> 		}
> 
> 		foreach ($array_js as $js)
> 		{
> 			$this->jquery_code_for_compile[] = "\t".$js."\n";
> 		}
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Resize
> 	 *
> 	 * Outputs a jQuery resize event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _resize($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'resize');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Scroll
> 	 *
> 	 * Outputs a jQuery scroll event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _scroll($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'scroll');
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Unload
> 	 *
> 	 * Outputs a jQuery unload event
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @return	string
> 	 */
> 	protected function _unload($element = 'this', $js = '')
> 	{
> 		return $this->_add_event($element, $js, 'unload');
> 	}
> 
> 	// --------------------------------------------------------------------
> 	// Effects
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add Class
> 	 *
> 	 * Outputs a jQuery addClass event
> 	 *
> 	 * @param	string	$element
> 	 * @param	string	$class
> 	 * @return	string
> 	 */
> 	protected function _addClass($element = 'this', $class = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		return '$('.$element.').addClass("'.$class.'");';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Animate
> 	 *
> 	 * Outputs a jQuery animate event
> 	 *
> 	 * @param	string	$element
> 	 * @param	array	$params
> 	 * @param	string	$speed	'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	$extra
> 	 * @return	string
> 	 */
> 	protected function _animate($element = 'this', $params = array(), $speed = '', $extra = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		$animations = "\t\t\t";
> 
> 		foreach ($params as $param => $value)
> 		{
> 			$animations .= $param.": '".$value."', ";
> 		}
> 
> 		$animations = substr($animations, 0, -2); // remove the last ", "
> 
> 		if ($speed !== '')
> 		{
> 			$speed = ', '.$speed;
> 		}
> 
> 		if ($extra !== '')
> 		{
> 			$extra = ', '.$extra;
> 		}
> 
> 		return "$({$element}).animate({\n$animations\n\t\t}".$speed.$extra.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fade In
> 	 *
> 	 * Outputs a jQuery hide event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _fadeIn($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return "$({$element}).fadeIn({$speed}{$callback});";
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fade Out
> 	 *
> 	 * Outputs a jQuery hide event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _fadeOut($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return '$('.$element.').fadeOut('.$speed.$callback.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Hide
> 	 *
> 	 * Outputs a jQuery hide action
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _hide($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return "$({$element}).hide({$speed}{$callback});";
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Remove Class
> 	 *
> 	 * Outputs a jQuery remove class event
> 	 *
> 	 * @param	string	$element
> 	 * @param	string	$class
> 	 * @return	string
> 	 */
> 	protected function _removeClass($element = 'this', $class = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		return '$('.$element.').removeClass("'.$class.'");';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Slide Up
> 	 *
> 	 * Outputs a jQuery slideUp event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _slideUp($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return '$('.$element.').slideUp('.$speed.$callback.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Slide Down
> 	 *
> 	 * Outputs a jQuery slideDown event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _slideDown($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return '$('.$element.').slideDown('.$speed.$callback.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Slide Toggle
> 	 *
> 	 * Outputs a jQuery slideToggle event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _slideToggle($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return '$('.$element.').slideToggle('.$speed.$callback.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Toggle
> 	 *
> 	 * Outputs a jQuery toggle event
> 	 *
> 	 * @param	string	- element
> 	 * @return	string
> 	 */
> 	protected function _toggle($element = 'this')
> 	{
> 		$element = $this->_prep_element($element);
> 		return '$('.$element.').toggle();';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Toggle Class
> 	 *
> 	 * Outputs a jQuery toggle class event
> 	 *
> 	 * @param	string	$element
> 	 * @param	string	$class
> 	 * @return	string
> 	 */
> 	protected function _toggleClass($element = 'this', $class = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		return '$('.$element.').toggleClass("'.$class.'");';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Show
> 	 *
> 	 * Outputs a jQuery show event
> 	 *
> 	 * @param	string	- element
> 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	- Javascript callback function
> 	 * @return	string
> 	 */
> 	protected function _show($element = 'this', $speed = '', $callback = '')
> 	{
> 		$element = $this->_prep_element($element);
> 		$speed = $this->_validate_speed($speed);
> 
> 		if ($callback !== '')
> 		{
> 			$callback = ", function(){\n{$callback}\n}";
> 		}
> 
> 		return '$('.$element.').show('.$speed.$callback.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Updater
> 	 *
> 	 * An Ajax call that populates the designated DOM node with
> 	 * returned content
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	the controller to run the call against
> 	 * @param	string	optional parameters
> 	 * @return	string
> 	 */
> 
> 	protected function _updater($container = 'this', $controller = '', $options = '')
> 	{
> 		$container = $this->_prep_element($container);
> 		$controller = (strpos('://', $controller) === FALSE) ? $controller : $this->CI->config->site_url($controller);
> 
> 		// ajaxStart and ajaxStop are better choices here... but this is a stop gap
> 		if ($this->CI->config->item('javascript_ajax_img') === '')
> 		{
> 			$loading_notifier = 'Loading...';
> 		}
> 		else
> 		{
> 			$loading_notifier = '<img src="'.$this->CI->config->slash_item('base_url').$this->CI->config->item('javascript_ajax_img').'" alt="Loading" />';
> 		}
> 
> 		$updater = '$('.$container.").empty();\n" // anything that was in... get it out
> 			."\t\t$(".$container.').prepend("'.$loading_notifier."\");\n"; // to replace with an image
> 
> 		$request_options = '';
> 		if ($options !== '')
> 		{
> 			$request_options .= ', {'
> 					.(is_array($options) ? "'".implode("', '", $options)."'" : "'".str_replace(':', "':'", $options)."'")
> 					.'}';
> 		}
> 
> 		return $updater."\t\t$($container).load('$controller'$request_options);";
> 	}
> 
> 	// --------------------------------------------------------------------
> 	// Pre-written handy stuff
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Zebra tables
> 	 *
> 	 * @param	string	$class
> 	 * @param	string	$odd
> 	 * @param	string	$hover
> 	 * @return	string
> 	 */
> 	protected function _zebraTables($class = '', $odd = 'odd', $hover = '')
> 	{
> 		$class = ($class !== '') ? '.'.$class : '';
> 		$zebra = "\t\$(\"table{$class} tbody tr:nth-child(even)\").addClass(\"{$odd}\");";
> 
> 		$this->jquery_code_for_compile[] = $zebra;
> 
> 		if ($hover !== '')
> 		{
> 			$hover = $this->hover("table{$class} tbody tr", "$(this).addClass('hover');", "$(this).removeClass('hover');");
> 		}
> 
> 		return $zebra;
> 	}
> 
> 	// --------------------------------------------------------------------
> 	// Plugins
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Corner Plugin
> 	 *
> 	 * @link	http://www.malsup.com/jquery/corner/
> 	 * @param	string	$element
> 	 * @param	string	$corner_style
> 	 * @return	string
> 	 */
> 	public function corner($element = '', $corner_style = '')
> 	{
> 		// may want to make this configurable down the road
> 		$corner_location = '/plugins/jquery.corner.js';
> 
> 		if ($corner_style !== '')
> 		{
> 			$corner_style = '"'.$corner_style.'"';
> 		}
> 
> 		return '$('.$this->_prep_element($element).').corner('.$corner_style.');';
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Modal window
> 	 *
> 	 * Load a thickbox modal window
> 	 *
> 	 * @param	string	$src
> 	 * @param	bool	$relative
> 	 * @return	void
> 	 */
> 	public function modal($src, $relative = FALSE)
> 	{
> 		$this->jquery_code_for_load[] = $this->external($src, $relative);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Effect
> 	 *
> 	 * Load an Effect library
> 	 *
> 	 * @param	string	$src
> 	 * @param	bool	$relative
> 	 * @return	void
> 	 */
> 	public function effect($src, $relative = FALSE)
> 	{
> 		$this->jquery_code_for_load[] = $this->external($src, $relative);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Plugin
> 	 *
> 	 * Load a plugin library
> 	 *
> 	 * @param	string	$src
> 	 * @param	bool	$relative
> 	 * @return	void
> 	 */
> 	public function plugin($src, $relative = FALSE)
> 	{
> 		$this->jquery_code_for_load[] = $this->external($src, $relative);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * UI
> 	 *
> 	 * Load a user interface library
> 	 *
> 	 * @param	string	$src
> 	 * @param	bool	$relative
> 	 * @return	void
> 	 */
> 	public function ui($src, $relative = FALSE)
> 	{
> 		$this->jquery_code_for_load[] = $this->external($src, $relative);
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Sortable
> 	 *
> 	 * Creates a jQuery sortable
> 	 *
> 	 * @param	string	$element
> 	 * @param	array	$options
> 	 * @return	string
> 	 */
> 	public function sortable($element, $options = array())
> 	{
> 		if (count($options) > 0)
> 		{
> 			$sort_options = array();
> 			foreach ($options as $k=>$v)
> 			{
> 				$sort_options[] = "\n\t\t".$k.': '.$v;
> 			}
> 			$sort_options = implode(',', $sort_options);
> 		}
> 		else
> 		{
> 			$sort_options = '';
> 		}
> 
> 		return '$('.$this->_prep_element($element).').sortable({'.$sort_options."\n\t});";
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Table Sorter Plugin
> 	 *
> 	 * @param	string	table name
> 	 * @param	string	plugin location
> 	 * @return	string
> 	 */
> 	public function tablesorter($table = '', $options = '')
> 	{
> 		$this->jquery_code_for_compile[] = "\t$(".$this->_prep_element($table).').tablesorter('.$options.");\n";
> 	}
> 
> 	// --------------------------------------------------------------------
> 	// Class functions
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add Event
> 	 *
> 	 * Constructs the syntax for an event, and adds to into the array for compilation
> 	 *
> 	 * @param	string	The element to attach the event to
> 	 * @param	string	The code to execute
> 	 * @param	string	The event to pass
> 	 * @return	string
> 	 */
> 	protected function _add_event($element, $js, $event)
> 	{
> 		if (is_array($js))
> 		{
> 			$js = implode("\n\t\t", $js);
> 		}
> 
> 		$event = "\n\t$(".$this->_prep_element($element).').'.$event."(function(){\n\t\t{$js}\n\t});\n";
> 		$this->jquery_code_for_compile[] = $event;
> 		return $event;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Compile
> 	 *
> 	 * As events are specified, they are stored in an array
> 	 * This function compiles them all for output on a page
> 	 *
> 	 * @param	string	$view_var
> 	 * @param	bool	$script_tags
> 	 * @return	void
> 	 */
> 	protected function _compile($view_var = 'script_foot', $script_tags = TRUE)
> 	{
> 		// External references
> 		$external_scripts = implode('', $this->jquery_code_for_load);
> 		$this->CI->load->vars(array('library_src' => $external_scripts));
> 
> 		if (count($this->jquery_code_for_compile) === 0)
> 		{
> 			// no inline references, let's just return
> 			return;
> 		}
> 
> 		// Inline references
> 		$script = '$(document).ready(function() {'."\n"
> 			.implode('', $this->jquery_code_for_compile)
> 			.'});';
> 
> 		$output = ($script_tags === FALSE) ? $script : $this->inline($script);
> 
> 		$this->CI->load->vars(array($view_var => $output));
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Clear Compile
> 	 *
> 	 * Clears the array of script events collected for output
> 	 *
> 	 * @return	void
> 	 */
> 	protected function _clear_compile()
> 	{
> 		$this->jquery_code_for_compile = array();
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Document Ready
> 	 *
> 	 * A wrapper for writing document.ready()
> 	 *
> 	 * @param	array	$js
> 	 * @return	void
> 	 */
> 	protected function _document_ready($js)
> 	{
> 		is_array($js) OR $js = array($js);
> 
> 		foreach ($js as $script)
> 		{
> 			$this->jquery_code_for_compile[] = $script;
> 		}
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Script Tag
> 	 *
> 	 * Outputs the script tag that loads the jquery.js file into an HTML document
> 	 *
> 	 * @param	string	$library_src
> 	 * @param	bool	$relative
> 	 * @return	string
> 	 */
> 	public function script($library_src = '', $relative = FALSE)
> 	{
> 		$library_src = $this->external($library_src, $relative);
> 		$this->jquery_code_for_load[] = $library_src;
> 		return $library_src;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Prep Element
> 	 *
> 	 * Puts HTML element in quotes for use in jQuery code
> 	 * unless the supplied element is the Javascript 'this'
> 	 * object, in which case no quotes are added
> 	 *
> 	 * @param	string
> 	 * @return	string
> 	 */
> 	protected function _prep_element($element)
> 	{
> 		if ($element !== 'this')
> 		{
> 			$element = '"'.$element.'"';
> 		}
> 
> 		return $element;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Validate Speed
> 	 *
> 	 * Ensures the speed parameter is valid for jQuery
> 	 *
> 	 * @param	string
> 	 * @return	string
> 	 */
> 	protected function _validate_speed($speed)
> 	{
> 		if (in_array($speed, array('slow', 'normal', 'fast')))
> 		{
> 			return '"'.$speed.'"';
> 		}
> 		elseif (preg_match('/[^0-9]/', $speed))
> 		{
> 			return '';
> 		}
> 
> 		return $speed;
> 	}
> 
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Javascript.php opensourcepos/system/libraries/Javascript.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,48
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/javascript.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/javascript.html
>  * @deprecated	3.0.0	This was never a good idea in the first place.
29c52,59
< 	var $_javascript_location = 'js';
---
> 	/**
> 	 * JavaScript location
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_javascript_location = 'js';
> 
> 	// --------------------------------------------------------------------
30a61,66
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	array	$params
> 	 * @return	void
> 	 */
37c73
< 			if (isset($params[$key]) && $params[$key] !== "")
---
> 			if (isset($params[$key]) && $params[$key] !== '')
52c88
< 		log_message('debug', "Javascript Class Initialized and loaded.  Driver used: $js_library_driver");
---
> 		log_message('info', 'Javascript Class Initialized and loaded. Driver used: '.$js_library_driver);
64d99
< 	 * @access	public
69c104
< 	function blur($element = 'this', $js = '')
---
> 	public function blur($element = 'this', $js = '')
81d115
< 	 * @access	public
86c120
< 	function change($element = 'this', $js = '')
---
> 	public function change($element = 'this', $js = '')
98d131
< 	 * @access	public
101c134
< 	 * @param	boolean	whether or not to return false
---
> 	 * @param	bool	whether or not to return false
104c137
< 	function click($element = 'this', $js = '', $ret_false = TRUE)
---
> 	public function click($element = 'this', $js = '', $ret_false = TRUE)
116d148
< 	 * @access	public
121c153
< 	function dblclick($element = 'this', $js = '')
---
> 	public function dblclick($element = 'this', $js = '')
133d164
< 	 * @access	public
138c169
< 	function error($element = 'this', $js = '')
---
> 	public function error($element = 'this', $js = '')
150d180
< 	 * @access	public
155c185
< 	function focus($element = 'this', $js = '')
---
> 	public function focus($element = 'this', $js = '')
157c187
< 		return $this->js->__add_event($focus, $js);
---
> 		return $this->js->_focus($element, $js);
167d196
< 	 * @access	public
173c202
< 	function hover($element = 'this', $over, $out)
---
> 	public function hover($element = 'this', $over = '', $out = '')
175c204
< 		return $this->js->__hover($element, $over, $out);
---
> 		return $this->js->_hover($element, $over, $out);
185d213
< 	 * @access	public
190c218
< 	function keydown($element = 'this', $js = '')
---
> 	public function keydown($element = 'this', $js = '')
202d229
< 	 * @access	public
207c234
< 	function keyup($element = 'this', $js = '')
---
> 	public function keyup($element = 'this', $js = '')
219d245
< 	 * @access	public
224c250
< 	function load($element = 'this', $js = '')
---
> 	public function load($element = 'this', $js = '')
236d261
< 	 * @access	public
241c266
< 	function mousedown($element = 'this', $js = '')
---
> 	public function mousedown($element = 'this', $js = '')
253d277
< 	 * @access	public
258c282
< 	function mouseout($element = 'this', $js = '')
---
> 	public function mouseout($element = 'this', $js = '')
270d293
< 	 * @access	public
275c298
< 	function mouseover($element = 'this', $js = '')
---
> 	public function mouseover($element = 'this', $js = '')
287d309
< 	 * @access	public
292c314
< 	function mouseup($element = 'this', $js = '')
---
> 	public function mouseup($element = 'this', $js = '')
304d325
< 	 * @access	public
308c329
< 	function output($js)
---
> 	public function output($js)
320,322c341
< 	 * @access	public
< 	 * @param	string	The element to attach the event to
< 	 * @param	string	The code to execute
---
> 	 * @param	string	$js	Code to execute
325c344
< 	function ready($js)
---
> 	public function ready($js)
337d355
< 	 * @access	public
342c360
< 	function resize($element = 'this', $js = '')
---
> 	public function resize($element = 'this', $js = '')
354d371
< 	 * @access	public
359c376
< 	function scroll($element = 'this', $js = '')
---
> 	public function scroll($element = 'this', $js = '')
371d387
< 	 * @access	public
376c392
< 	function unload($element = 'this', $js = '')
---
> 	public function unload($element = 'this', $js = '')
391d405
< 	 * @access	public
396c410
< 	function addClass($element = 'this', $class = '')
---
> 	public function addClass($element = 'this', $class = '')
408,411c422,425
< 	 * @access	public
< 	 * @param	string	- element
< 	 * @param	string	- One of 'slow', 'normal', 'fast', or time in milliseconds
< 	 * @param	string	- Javascript callback function
---
> 	 * @param	string	$element = 'this'
> 	 * @param	array	$params = array()
> 	 * @param	mixed	$speed			'slow', 'normal', 'fast', or time in milliseconds
> 	 * @param	string	$extra
414c428
< 	function animate($element = 'this', $params = array(), $speed = '', $extra = '')
---
> 	public function animate($element = 'this', $params = array(), $speed = '', $extra = '')
426d439
< 	 * @access	public
432c445
< 	function fadeIn($element = 'this', $speed = '', $callback = '')
---
> 	public function fadeIn($element = 'this', $speed = '', $callback = '')
444d456
< 	 * @access	public
450c462
< 	function fadeOut($element = 'this', $speed = '', $callback = '')
---
> 	public function fadeOut($element = 'this', $speed = '', $callback = '')
461d472
< 	 * @access	public
467c478
< 	function slideUp($element = 'this', $speed = '', $callback = '')
---
> 	public function slideUp($element = 'this', $speed = '', $callback = '')
480d490
< 	 * @access	public
485c495
< 	function removeClass($element = 'this', $class = '')
---
> 	public function removeClass($element = 'this', $class = '')
497d506
< 	 * @access	public
503c512
< 	function slideDown($element = 'this', $speed = '', $callback = '')
---
> 	public function slideDown($element = 'this', $speed = '', $callback = '')
515d523
< 	 * @access	public
521c529
< 	function slideToggle($element = 'this', $speed = '', $callback = '')
---
> 	public function slideToggle($element = 'this', $speed = '', $callback = '')
534d541
< 	 * @access	public
540c547
< 	function hide($element = 'this', $speed = '', $callback = '')
---
> 	public function hide($element = 'this', $speed = '', $callback = '')
552d558
< 	 * @access	public
556c562
< 	function toggle($element = 'this')
---
> 	public function toggle($element = 'this')
569,570c575,576
< 	 * @access	public
< 	 * @param	string	- element
---
> 	 * @param	string	$element = 'this'
> 	 * @param	string	$class = ''
573c579
< 	function toggleClass($element = 'this', $class='')
---
> 	public function toggleClass($element = 'this', $class = '')
585d590
< 	 * @access	public
591c596
< 	function show($element = 'this', $speed = '', $callback = '')
---
> 	public function show($element = 'this', $speed = '', $callback = '')
604,605c608,609
< 	 * @access	public
< 	 * @param	string	The element to attach the event to
---
> 	 * @param	string	$view_var
> 	 * @param	bool	$script_tags
608c612
< 	function compile($view_var = 'script_foot', $script_tags = TRUE)
---
> 	public function compile($view_var = 'script_foot', $script_tags = TRUE)
612a617,618
> 	// --------------------------------------------------------------------
> 
618d623
< 	 * @access	public
621c626
< 	function clear_compile()
---
> 	public function clear_compile()
633,634c638,639
< 	 * @access	public
< 	 * @param	string	The element to attach the event to
---
> 	 * @param	string	$external_file
> 	 * @param	bool	$relative
637c642
< 	function external($external_file = '', $relative = FALSE)
---
> 	public function external($external_file = '', $relative = FALSE)
643,645c648
< 		else
< 		{
< 			if ($this->CI->config->item('javascript_location') != '')
---
> 		elseif ($this->CI->config->item('javascript_location') !== '')
649d651
< 		}
651c653
< 		if ($relative === TRUE OR strncmp($external_file, 'http://', 7) == 0 OR strncmp($external_file, 'https://', 8) == 0)
---
> 		if ($relative === TRUE OR strpos($external_file, 'http://') === 0 OR strpos($external_file, 'https://') === 0)
664,665c666
< 		$str .= $this->_close_script();
< 		return $str;
---
> 		return $str.$this->_close_script();
675d675
< 	 * @access	public
677c677
< 	 * @param	boolean	If a CDATA section should be added
---
> 	 * @param	bool	If a CDATA section should be added
680c680
< 	function inline($script, $cdata = TRUE)
---
> 	public function inline($script, $cdata = TRUE)
682,686c682,684
< 		$str = $this->_open_script();
< 		$str .= ($cdata) ? "\n// <![CDATA[\n{$script}\n// ]]>\n" : "\n{$script}\n";
< 		$str .= $this->_close_script();
< 
< 		return $str;
---
> 		return $this->_open_script()
> 			. ($cdata ? "\n// <![CDATA[\n".$script."\n// ]]>\n" : "\n".$script."\n")
> 			. $this->_close_script();
696d693
< 	 * @access	private
700c697
< 	function _open_script($src = '')
---
> 	protected function _open_script($src = '')
702,704c699,700
< 		$str = '<script type="text/javascript" charset="'.strtolower($this->CI->config->item('charset')).'"';
< 		$str .= ($src == '') ? '>' : ' src="'.$src.'">';
< 		return $str;
---
> 		return '<script type="text/javascript" charset="'.strtolower($this->CI->config->item('charset')).'"'
> 			.($src === '' ? '>' : ' src="'.$src.'">');
714d709
< 	 * @access	private
718c713
< 	function _close_script($extra = "\n")
---
> 	protected function _close_script($extra = "\n")
720c715
< 		return "</script>$extra";
---
> 		return '</script>'.$extra;
723,724d717
< 
< 	// --------------------------------------------------------------------
728d720
< 	// --------------------------------------------------------------------
735d726
< 	 * @access	public
741c732
< 	function update($element = 'this', $speed = '', $callback = '')
---
> 	public function update($element = 'this', $speed = '', $callback = '')
757c748
< 	function generate_json($result = NULL, $match_array_type = FALSE)
---
> 	public function generate_json($result = NULL, $match_array_type = FALSE)
761c752
< 		if ( ! is_null($result))
---
> 		if ($result !== NULL)
765c756
< 				$json_result = $result->result_array();
---
> 				$json_result = is_callable(array($result, 'result_array')) ? $result->result_array() : (array) $result;
784c775
< 		if ( ! is_array($json_result) AND empty($json_result))
---
> 		if ( ! is_array($json_result) && empty($json_result))
786c777
< 			show_error("Generate JSON Failed - Illegal key, value pair.");
---
> 			show_error('Generate JSON Failed - Illegal key, value pair.');
807c798
< 		return $_is_assoc ? "{".$json."}" : "[".$json."]";
---
> 		return $_is_assoc ? '{'.$json.'}' : '['.$json.']';
818,820c809,810
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @param	array
> 	 * @return	bool
822c812
< 	function _is_associative_array($arr)
---
> 	protected function _is_associative_array($arr)
842,844c832,834
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @param	mixed	$result
> 	 * @param	bool	$is_key = FALSE
> 	 * @return	string
846c836
< 	function _prep_args($result, $is_key = FALSE)
---
> 	protected function _prep_args($result, $is_key = FALSE)
848c838
< 		if (is_null($result))
---
> 		if ($result === NULL)
866d855
< 	// --------------------------------------------------------------------
868,871d856
< // END Javascript Class
< 
< /* End of file Javascript.php */
< /* Location: ./system/libraries/Javascript.php */
\ No newline at end of file
Only in pos-prod/system/libraries: Log.php
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Migration.php opensourcepos/system/libraries/Migration.php
1c1
< <?php defined('BASEPATH') OR exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
9,12c31,35
<  * @copyright	Copyright (c) 2006 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 3.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
31a54,58
> 	/**
> 	 * Whether the library is enabled
> 	 *
> 	 * @var bool
> 	 */
32a60,72
> 
> 	/**
> 	 * Migration numbering type
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_migration_type = 'sequential';
> 
> 	/**
> 	 * Path to migration classes
> 	 *
> 	 * @var string
> 	 */
33a74,79
> 
> 	/**
> 	 * Current migration version
> 	 *
> 	 * @var mixed
> 	 */
35a82,107
> 	/**
> 	 * Database table with migration info
> 	 *
> 	 * @var string
> 	 */
> 	protected $_migration_table = 'migrations';
> 
> 	/**
> 	 * Whether to automatically run migrations
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $_migration_auto_latest = FALSE;
> 
> 	/**
> 	 * Migration basename regex
> 	 *
> 	 * @var bool
> 	 */
> 	protected $_migration_regex = NULL;
> 
> 	/**
> 	 * Error message
> 	 *
> 	 * @var string
> 	 */
37a110,115
> 	/**
> 	 * Initialize Migration Class
> 	 *
> 	 * @param	array	$config
> 	 * @return	void
> 	 */
40,41c118,119
< 		# Only run this constructor on main library load
< 		if (get_parent_class($this) !== FALSE)
---
> 		// Only run this constructor on main library load
> 		if ( ! in_array(get_class($this), array('CI_Migration', config_item('subclass_prefix').'Migration'), TRUE))
51c129
< 		log_message('debug', 'Migrations class initialized');
---
> 		log_message('info', 'Migrations Class Initialized');
60c138
< 		$this->_migration_path == '' AND $this->_migration_path = APPPATH . 'migrations/';
---
> 		$this->_migration_path !== '' OR $this->_migration_path = APPPATH.'migrations/';
70a149,165
> 		// Make sure the migration table name was set.
> 		if (empty($this->_migration_table))
> 		{
> 			show_error('Migrations configuration file (migration.php) must have "migration_table" set.');
> 		}
> 
> 		// Migration basename regex
> 		$this->_migration_regex = ($this->_migration_type === 'timestamp')
> 			? '/^\d{14}_(\w+)$/'
> 			: '/^\d{3}_(\w+)$/';
> 
> 		// Make sure a valid migration numbering type was set.
> 		if ( ! in_array($this->_migration_type, array('sequential', 'timestamp')))
> 		{
> 			show_error('An invalid migration numbering type was specified: '.$this->_migration_type);
> 		}
> 
72c167
< 		if ( ! $this->db->table_exists('migrations'))
---
> 		if ( ! $this->db->table_exists($this->_migration_table))
75c170
< 				'version' => array('type' => 'INT', 'constraint' => 3),
---
> 				'version' => array('type' => 'BIGINT', 'constraint' => 20),
78c173
< 			$this->dbforge->create_table('migrations', TRUE);
---
> 			$this->dbforge->create_table($this->_migration_table, TRUE);
80c175,181
< 			$this->db->insert('migrations', array('version' => 0));
---
> 			$this->db->insert($this->_migration_table, array('version' => 0));
> 		}
> 
> 		// Do we auto migrate to the latest migration?
> 		if ($this->_migration_auto_latest === TRUE && ! $this->latest())
> 		{
> 			show_error($this->error_string());
92,93c193,194
< 	 * @param	int	Target schema version
< 	 * @return	mixed	TRUE if already latest, FALSE if failed, int if upgraded
---
> 	 * @param	string	$target_version	Target schema version
> 	 * @return	mixed	TRUE if no migrations are found, current version string on success, FALSE on failure
97,98c198,199
< 		$start = $current_version = $this->_get_version();
< 		$stop = $target_version;
---
> 		// Note: We use strings, so that timestamp versions work on 32-bit systems
> 		$current_version = $this->_get_version();
100c201
< 		if ($target_version > $current_version)
---
> 		if ($this->_migration_type === 'sequential')
102,105c203
< 			// Moving Up
< 			++$start;
< 			++$stop;
< 			$step = 1;
---
> 			$target_version = sprintf('%03d', $target_version);
109,110c207
< 			// Moving Down
< 			$step = -1;
---
> 			$target_version = (string) $target_version;
113,114c210
< 		$method = ($step === 1) ? 'up' : 'down';
< 		$migrations = array();
---
> 		$migrations = $this->find_migrations();
116,118c212
< 		// We now prepare to actually DO the migrations
< 		// But first let's make sure that everything is the way it should be
< 		for ($i = $start; $i != $stop; $i += $step)
---
> 		if ($target_version > 0 && ! isset($migrations[$target_version]))
120,125c214
< 			$f = glob(sprintf($this->_migration_path . '%03d_*.php', $i));
< 
< 			// Only one migration per step is permitted
< 			if (count($f) > 1)
< 			{
< 				$this->_error_string = sprintf($this->lang->line('migration_multiple_version'), $i);
---
> 			$this->_error_string = sprintf($this->lang->line('migration_not_found'), $target_version);
129,130c218
< 			// Migration step not found
< 			if (count($f) == 0)
---
> 		if ($target_version > $current_version)
132,134c220,223
< 				// If trying to migrate up to a version greater than the last
< 				// existing one, migrate to the last one.
< 				if ($step == 1)
---
> 			// Moving Up
> 			$method = 'up';
> 		}
> 		else
136c225,227
< 					break;
---
> 			// Moving Down, apply in reverse order
> 			$method = 'down';
> 			krsort($migrations);
139,142c230,232
< 				// If trying to migrate down but we're missing a step,
< 				// something must definitely be wrong.
< 				$this->_error_string = sprintf($this->lang->line('migration_not_found'), $i);
< 				return FALSE;
---
> 		if (empty($migrations))
> 		{
> 			return TRUE;
145,146c235
< 			$file = basename($f[0]);
< 			$name = basename($f[0], '.php');
---
> 		$previous = FALSE;
148,149c237,238
< 			// Filename validations
< 			if (preg_match('/^\d{3}_(\w+)$/', $name, $match))
---
> 		// Validate all available migrations, and run the ones within our target range
> 		foreach ($migrations as $number => $file)
151,154c240,241
< 				$match[1] = strtolower($match[1]);
< 
< 				// Cannot repeat a migration at different steps
< 				if (in_array($match[1], $migrations))
---
> 			// Check for sequence gaps
> 			if ($this->_migration_type === 'sequential' && $previous !== FALSE && abs($number - $previous) > 1)
156c243
< 					$this->_error_string = sprintf($this->lang->line('migration_multiple_version'), $match[1]);
---
> 				$this->_error_string = sprintf($this->lang->line('migration_sequence_gap'), $number);
160,161c247,248
< 				include $f[0];
< 				$class = 'Migration_' . ucfirst($match[1]);
---
> 			include_once($file);
> 			$class = 'Migration_'.ucfirst(strtolower($this->_get_migration_name(basename($file, '.php'))));
163c250,251
< 				if ( ! class_exists($class))
---
> 			// Validate the migration file structure
> 			if ( ! class_exists($class, FALSE))
169c257,266
< 				if ( ! is_callable(array($class, $method)))
---
> 			$previous = $number;
> 
> 			// Run migrations that are inside the target range
> 			if (
> 				($method === 'up'   && $number > $current_version && $number <= $target_version) OR
> 				($method === 'down' && $number <= $current_version && $number > $target_version)
> 			)
> 			{
> 				$instance = new $class();
> 				if ( ! is_callable(array($instance, $method)))
175,181c272,275
< 				$migrations[] = $match[1];
< 			}
< 			else
< 			{
< 				$this->_error_string = sprintf($this->lang->line('migration_invalid_filename'), $file);
< 				return FALSE;
< 			}
---
> 				log_message('debug', 'Migrating '.$method.' from version '.$current_version.' to version '.$number);
> 				call_user_func(array($instance, $method));
> 				$current_version = $number;
> 				$this->_update_version($current_version);
183,191d276
< 
< 		log_message('debug', 'Current migration: ' . $current_version);
< 
< 		$version = $i + ($step == 1 ? -1 : 0);
< 
< 		// If there is nothing to do so quit
< 		if ($migrations === array())
< 		{
< 			return TRUE;
194,197c279,281
< 		log_message('debug', 'Migrating from ' . $method . ' to version ' . $version);
< 
< 		// Loop through the migrations
< 		foreach ($migrations AS $migration)
---
> 		// This is necessary when moving down, since the the last migration applied
> 		// will be the down() method for the next migration up from the target
> 		if ($current_version <> $target_version)
199,203c283
< 			// Run the migration class
< 			$class = 'Migration_' . ucfirst(strtolower($migration));
< 			call_user_func(array(new $class, $method));
< 
< 			$current_version += $step;
---
> 			$current_version = $target_version;
215c295
< 	 * Set's the schema to the latest migration
---
> 	 * Sets the schema to the latest migration
217c297
< 	 * @return	mixed	true if already latest, false if failed, int if upgraded
---
> 	 * @return	mixed	Current version string on success, FALSE on failure
221c301,303
< 		if ( ! $migrations = $this->find_migrations())
---
> 		$migrations = $this->find_migrations();
> 
> 		if (empty($migrations))
230,231c312,313
< 		// filenames and procceed to the standard version migration
< 		return $this->version((int) substr($last_migration, 0, 3));
---
> 		// filenames and proceed to the standard version migration
> 		return $this->version($this->_get_migration_number($last_migration));
237c319
< 	 * Set's the schema to the migration version set in config
---
> 	 * Sets the schema to the migration version set in config
239c321
< 	 * @return	mixed	true if already current, false if failed, int if upgraded
---
> 	 * @return	mixed	TRUE if no migrations are found, current version string on success, FALSE on failure
261c343
< 	 * Set's the schema to the latest migration
---
> 	 * Retrieves list of available migration scripts
263c345
< 	 * @return	mixed	true if already latest, false if failed, int if upgraded
---
> 	 * @return	array	list of migration file paths sorted by version
265c347
< 	protected function find_migrations()
---
> 	public function find_migrations()
266a349,350
> 		$migrations = array();
> 
268,269c352,354
< 		$files = glob($this->_migration_path . '*_*.php');
< 		$file_count = count($files);
---
> 		foreach (glob($this->_migration_path.'*_*.php') as $file)
> 		{
> 			$name = basename($file, '.php');
271c356,357
< 		for ($i = 0; $i < $file_count; $i++)
---
> 			// Filter out non-migration files
> 			if (preg_match($this->_migration_regex, $name))
273,275c359,362
< 			// Mark wrongly formatted files as false for later filtering
< 			$name = basename($files[$i], '.php');
< 			if ( ! preg_match('/^\d{3}_(\w+)$/', $name))
---
> 				$number = $this->_get_migration_number($name);
> 
> 				// There cannot be duplicate migration numbers
> 				if (isset($migrations[$number]))
277c364,373
< 				$files[$i] = FALSE;
---
> 					$this->_error_string = sprintf($this->lang->line('migration_multiple_version'), $number);
> 					show_error($this->_error_string);
> 				}
> 
> 				$migrations[$number] = $file;
> 			}
> 		}
> 
> 		ksort($migrations);
> 		return $migrations;
278a375,387
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Extracts the migration number from a filename
> 	 *
> 	 * @param	string	$migration
> 	 * @return	string	Numeric portion of a migration filename
> 	 */
> 	protected function _get_migration_number($migration)
> 	{
> 		return sscanf($migration, '%[0-9]+', $number)
> 			? $number : '0';
281,282c390,402
< 		sort($files);
< 		return $files;
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Extracts the migration class name from a filename
> 	 *
> 	 * @param	string	$migration
> 	 * @return	string	text portion of a migration filename
> 	 */
> 	protected function _get_migration_name($migration)
> 	{
> 		$parts = explode('_', $migration);
> 		array_shift($parts);
> 		return implode('_', $parts);
290c410
< 	 * @return	int	Current Migration
---
> 	 * @return	string	Current migration version
294,295c414,415
< 		$row = $this->db->get('migrations')->row();
< 		return $row ? $row->version : 0;
---
> 		$row = $this->db->select('version')->get($this->_migration_table)->row();
> 		return $row ? $row->version : '0';
303,304c423,424
< 	 * @param	int	Migration reached
< 	 * @return	bool
---
> 	 * @param	string	$migration	Migration reached
> 	 * @return	void
306c426
< 	protected function _update_version($migrations)
---
> 	protected function _update_version($migration)
308,309c428,429
< 		return $this->db->update('migrations', array(
< 			'version' => $migrations
---
> 		$this->db->update($this->_migration_table, array(
> 			'version' => $migration
318c438
< 	 * @param	mixed	$var
---
> 	 * @param	string	$var
327,329d446
< 
< /* End of file Migration.php */
< /* Location: ./system/libraries/Migration.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Pagination.php opensourcepos/system/libraries/Pagination.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/pagination.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/pagination.html
29,61c51,322
< 	var $base_url			= ''; // The page we are linking to
< 	var $prefix				= ''; // A custom prefix added to the path.
< 	var $suffix				= ''; // A custom suffix added to the path.
< 
< 	var $total_rows			=  0; // Total number of items (database results)
< 	var $per_page			= 10; // Max number of items you want shown per page
< 	var $num_links			=  2; // Number of "digit" links to show before/after the currently viewed page
< 	var $cur_page			=  0; // The current page being viewed
< 	var $use_page_numbers	= FALSE; // Use page number for segment instead of offset
< 	var $first_link			= '&lsaquo; First';
< 	var $next_link			= '&gt;';
< 	var $prev_link			= '&lt;';
< 	var $last_link			= 'Last &rsaquo;';
< 	var $uri_segment		= 3;
< 	var $full_tag_open		= '';
< 	var $full_tag_close		= '';
< 	var $first_tag_open		= '';
< 	var $first_tag_close	= '&nbsp;';
< 	var $last_tag_open		= '&nbsp;';
< 	var $last_tag_close		= '';
< 	var $first_url			= ''; // Alternative URL for the First Page.
< 	var $cur_tag_open		= '&nbsp;<strong>';
< 	var $cur_tag_close		= '</strong>';
< 	var $next_tag_open		= '&nbsp;';
< 	var $next_tag_close		= '&nbsp;';
< 	var $prev_tag_open		= '&nbsp;';
< 	var $prev_tag_close		= '';
< 	var $num_tag_open		= '&nbsp;';
< 	var $num_tag_close		= '';
< 	var $page_query_string	= FALSE;
< 	var $query_string_segment = 'per_page';
< 	var $display_pages		= TRUE;
< 	var $anchor_class		= '';
---
> 	/**
> 	 * Base URL
> 	 *
> 	 * The page that we're linking to
> 	 *
> 	 * @var	string
> 	 */
> 	protected $base_url		= '';
> 
> 	/**
> 	 * Prefix
> 	 *
> 	 * @var	string
> 	 */
> 	protected $prefix = '';
> 
> 	/**
> 	 * Suffix
> 	 *
> 	 * @var	string
> 	 */
> 	protected $suffix = '';
> 
> 	/**
> 	 * Total number of items
> 	 *
> 	 * @var	int
> 	 */
> 	protected $total_rows = 0;
> 
> 	/**
> 	 * Number of links to show
> 	 *
> 	 * Relates to "digit" type links shown before/after
> 	 * the currently viewed page.
> 	 *
> 	 * @var	int
> 	 */
> 	protected $num_links = 2;
> 
> 	/**
> 	 * Items per page
> 	 *
> 	 * @var	int
> 	 */
> 	public $per_page = 10;
> 
> 	/**
> 	 * Current page
> 	 *
> 	 * @var	int
> 	 */
> 	public $cur_page = 0;
> 
> 	/**
> 	 * Use page numbers flag
> 	 *
> 	 * Whether to use actual page numbers instead of an offset
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $use_page_numbers = FALSE;
> 
> 	/**
> 	 * First link
> 	 *
> 	 * @var	string
> 	 */
> 	protected $first_link = '&lsaquo; First';
> 
> 	/**
> 	 * Next link
> 	 *
> 	 * @var	string
> 	 */
> 	protected $next_link = '&gt;';
> 
> 	/**
> 	 * Previous link
> 	 *
> 	 * @var	string
> 	 */
> 	protected $prev_link = '&lt;';
> 
> 	/**
> 	 * Last link
> 	 *
> 	 * @var	string
> 	 */
> 	protected $last_link = 'Last &rsaquo;';
> 
> 	/**
> 	 * URI Segment
> 	 *
> 	 * @var	int
> 	 */
> 	protected $uri_segment = 0;
> 
> 	/**
> 	 * Full tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $full_tag_open = '';
> 
> 	/**
> 	 * Full tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $full_tag_close = '';
> 
> 	/**
> 	 * First tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $first_tag_open = '';
> 
> 	/**
> 	 * First tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $first_tag_close = '';
> 
> 	/**
> 	 * Last tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $last_tag_open = '';
> 
> 	/**
> 	 * Last tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $last_tag_close = '';
> 
> 	/**
> 	 * First URL
> 	 *
> 	 * An alternative URL for the first page
> 	 *
> 	 * @var	string
> 	 */
> 	protected $first_url = '';
> 
> 	/**
> 	 * Current tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $cur_tag_open = '<strong>';
> 
> 	/**
> 	 * Current tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $cur_tag_close = '</strong>';
> 
> 	/**
> 	 * Next tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $next_tag_open = '';
> 
> 	/**
> 	 * Next tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $next_tag_close = '';
> 
> 	/**
> 	 * Previous tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $prev_tag_open = '';
> 
> 	/**
> 	 * Previous tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $prev_tag_close = '';
> 
> 	/**
> 	 * Number tag open
> 	 *
> 	 * @var	string
> 	 */
> 	protected $num_tag_open = '';
> 
> 	/**
> 	 * Number tag close
> 	 *
> 	 * @var	string
> 	 */
> 	protected $num_tag_close = '';
> 
> 	/**
> 	 * Page query string flag
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $page_query_string = FALSE;
> 
> 	/**
> 	 * Query string segment
> 	 *
> 	 * @var	string
> 	 */
> 	protected $query_string_segment = 'per_page';
> 
> 	/**
> 	 * Display pages flag
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $display_pages = TRUE;
> 
> 	/**
> 	 * Attributes
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_attributes = '';
> 
> 	/**
> 	 * Link types
> 	 *
> 	 * "rel" attribute
> 	 *
> 	 * @see	CI_Pagination::_attr_rel()
> 	 * @var	array
> 	 */
> 	protected $_link_types = array();
> 
> 	/**
> 	 * Reuse query string flag
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $reuse_query_string = FALSE;
> 
> 	/**
> 	 * Use global URL suffix flag
> 	 *
> 	 * @var	bool
> 	 */
> 	protected $use_global_url_suffix = FALSE;
> 
> 	/**
> 	 * Data page attribute
> 	 *
> 	 * @var	string
> 	 */
> 	protected $data_page_attr = 'data-ci-pagination-page';
> 
> 	/**
> 	 * CI Singleton
> 	 *
> 	 * @var	object
> 	 */
> 	protected $CI;
> 
> 	// --------------------------------------------------------------------
66,67c327,328
< 	 * @access	public
< 	 * @param	array	initialization parameters
---
> 	 * @param	array	$params	Initialization parameters
> 	 * @return	void
71c332,334
< 		if (count($params) > 0)
---
> 		$this->CI =& get_instance();
> 		$this->CI->load->language('pagination');
> 		foreach (array('first_link', 'next_link', 'prev_link', 'last_link') as $key)
73,76c336
< 			$this->initialize($params);
< 		}
< 
< 		if ($this->anchor_class != '')
---
> 			if (($val = $this->CI->lang->line('pagination_'.$key)) !== FALSE)
78c338,339
< 			$this->anchor_class = 'class="'.$this->anchor_class.'" ';
---
> 				$this->$key = $val;
> 			}
81c342,343
< 		log_message('debug', "Pagination Class Initialized");
---
> 		$this->initialize($params);
> 		log_message('info', 'Pagination Class Initialized');
89,91c351,352
< 	 * @access	public
< 	 * @param	array	initialization parameters
< 	 * @return	void
---
> 	 * @param	array	$params	Initialization parameters
> 	 * @return	CI_Pagination
93c354
< 	function initialize($params = array())
---
> 	public function initialize(array $params = array())
95c356,357
< 		if (count($params) > 0)
---
> 		isset($params['attributes']) OR $params['attributes'] = array();
> 		if (is_array($params['attributes']))
96a359,370
> 			$this->_parse_attributes($params['attributes']);
> 			unset($params['attributes']);
> 		}
> 
> 		// Deprecated legacy support for the anchor_class option
> 		// Should be removed in CI 3.1+
> 		if (isset($params['anchor_class']))
> 		{
> 			empty($params['anchor_class']) OR $attributes['class'] = $params['anchor_class'];
> 			unset($params['anchor_class']);
> 		}
> 
99c373
< 				if (isset($this->$key))
---
> 			if (property_exists($this, $key))
103a378,381
> 
> 		if ($this->CI->config->item('enable_query_strings') === TRUE)
> 		{
> 			$this->page_query_string = TRUE;
104a383,389
> 
> 		if ($this->use_global_url_suffix === TRUE)
> 		{
> 			$this->suffix = $this->CI->config->item('url_suffix');
> 		}
> 
> 		return $this;
112d396
< 	 * @access	public
115c399
< 	function create_links()
---
> 	public function create_links()
117a402
> 		// Note: DO NOT change the operator to === here!
124c409
< 		$num_pages = ceil($this->total_rows / $this->per_page);
---
> 		$num_pages = (int) ceil($this->total_rows / $this->per_page);
127c412
< 		if ($num_pages == 1)
---
> 		if ($num_pages === 1)
132,133c417,420
< 		// Set the base page index for starting page number
< 		if ($this->use_page_numbers)
---
> 		// Check the user defined number of links.
> 		$this->num_links = (int) $this->num_links;
> 
> 		if ($this->num_links < 0)
135c422,432
< 			$base_page = 1;
---
> 			show_error('Your number of links must be a non-negative number.');
> 		}
> 
> 		// Keep any existing query string items.
> 		// Note: Has nothing to do with any other query string option.
> 		if ($this->reuse_query_string === TRUE)
> 		{
> 			$get = $this->CI->input->get();
> 
> 			// Unset the controll, method, old-school routing options
> 			unset($get['c'], $get['m'], $get[$this->query_string_segment]);
139c436
< 			$base_page = 0;
---
> 			$get = array();
142,143c439,445
< 		// Determine the current page number.
< 		$CI =& get_instance();
---
> 		// Put together our base and first URLs.
> 		// Note: DO NOT append to the properties as that would break successive calls
> 		$base_url = trim($this->base_url);
> 		$first_url = $this->first_url;
> 
> 		$query_string = '';
> 		$query_string_sep = (strpos($base_url, '?') === FALSE) ? '?' : '&amp;';
145c447,448
< 		if ($CI->config->item('enable_query_strings') === TRUE OR $this->page_query_string === TRUE)
---
> 		// Are we using query strings?
> 		if ($this->page_query_string === TRUE)
147c450,452
< 			if ($CI->input->get($this->query_string_segment) != $base_page)
---
> 			// If a custom first_url hasn't been specified, we'll create one from
> 			// the base_url, but without the page item.
> 			if ($first_url === '')
149c454
< 				$this->cur_page = $CI->input->get($this->query_string_segment);
---
> 				$first_url = $base_url;
151,152c456,459
< 				// Prep the current page - no funny business!
< 				$this->cur_page = (int) $this->cur_page;
---
> 				// If we saved any GET items earlier, make sure they're appended.
> 				if ( ! empty($get))
> 				{
> 					$first_url .= $query_string_sep.http_build_query($get);
154a462,466
> 
> 			// Add the page segment to the end of the query string, where the
> 			// page number will be appended.
> 			$base_url .= $query_string_sep.http_build_query(array_merge($get, array($this->query_string_segment => '')));
> 		}
157c469,471
< 			if ($CI->uri->segment($this->uri_segment) != $base_page)
---
> 			// Standard segment mode.
> 			// Generate our saved query string to append later after the page number.
> 			if ( ! empty($get))
159c473,475
< 				$this->cur_page = $CI->uri->segment($this->uri_segment);
---
> 				$query_string = $query_string_sep.http_build_query($get);
> 				$this->suffix .= $query_string;
> 			}
161,162c477,481
< 				// Prep the current page - no funny business!
< 				$this->cur_page = (int) $this->cur_page;
---
> 			// Does the base_url have the query string in it?
> 			// If we're supposed to save it, remove it so we can append it later.
> 			if ($this->reuse_query_string === TRUE && ($base_query_pos = strpos($base_url, '?')) !== FALSE)
> 			{
> 				$base_url = substr($base_url, 0, $base_query_pos);
163a483,486
> 
> 			if ($first_url === '')
> 			{
> 				$first_url = $base_url.$query_string;
166,167c489,496
< 		// Set current page to 1 if using page numbers instead of offset
< 		if ($this->use_page_numbers AND $this->cur_page == 0)
---
> 			$base_url = rtrim($base_url, '/').'/';
> 		}
> 
> 		// Determine the current page number.
> 		$base_page = ($this->use_page_numbers) ? 1 : 0;
> 
> 		// Are we using query strings?
> 		if ($this->page_query_string === TRUE)
169c498,505
< 			$this->cur_page = $base_page;
---
> 			$this->cur_page = $this->CI->input->get($this->query_string_segment);
> 		}
> 		elseif (empty($this->cur_page))
> 		{
> 			// Default to the last segment number if one hasn't been defined.
> 			if ($this->uri_segment === 0)
> 			{
> 				$this->uri_segment = count($this->CI->uri->segment_array());
172c508
< 		$this->num_links = (int)$this->num_links;
---
> 			$this->cur_page = $this->CI->uri->segment($this->uri_segment);
174c510,516
< 		if ($this->num_links < 1)
---
> 			// Remove any specified prefix/suffix from the segment.
> 			if ($this->prefix !== '' OR $this->suffix !== '')
> 			{
> 				$this->cur_page = str_replace(array($this->prefix, $this->suffix), '', $this->cur_page);
> 			}
> 		}
> 		else
176c518
< 			show_error('Your number of links must be a positive number.');
---
> 			$this->cur_page = (string) $this->cur_page;
179c521,522
< 		if ( ! is_numeric($this->cur_page))
---
> 		// If something isn't quite right, back to the default base page.
> 		if ( ! ctype_digit($this->cur_page) OR ($this->use_page_numbers && (int) $this->cur_page === 0))
182a526,530
> 		else
> 		{
> 			// Make sure we're using integers for comparisons later.
> 			$this->cur_page = (int) $this->cur_page;
> 		}
185c533
< 		// If so we show the last page
---
> 		// If so, we show the last page.
193,195c541
< 		else
< 		{
< 			if ($this->cur_page > $this->total_rows)
---
> 		elseif ($this->cur_page > $this->total_rows)
199d544
< 		}
202a548,549
> 		// If we're using offset instead of page numbers, convert it
> 		// to a page number, so we can generate the surrounding number links.
205c552
< 			$this->cur_page = floor(($this->cur_page/$this->per_page) + 1);
---
> 			$this->cur_page = (int) floor(($this->cur_page/$this->per_page) + 1);
209c556
< 		// which number to start and end the digit links with
---
> 		// which number to start and end the digit links with.
213,223d559
< 		// Is pagination being used over GET or POST?  If get, add a per_page query
< 		// string. If post, add a trailing slash to the base URL if needed
< 		if ($CI->config->item('enable_query_strings') === TRUE OR $this->page_query_string === TRUE)
< 		{
< 			$this->base_url = rtrim($this->base_url).'&amp;'.$this->query_string_segment.'=';
< 		}
< 		else
< 		{
< 			$this->base_url = rtrim($this->base_url, '/') .'/';
< 		}
< 
227,228c563,564
< 		// Render the "First" link
< 		if  ($this->first_link !== FALSE AND $this->cur_page > ($this->num_links + 1))
---
> 		// Render the "First" link.
> 		if ($this->first_link !== FALSE && $this->cur_page > ($this->num_links + 1 + ! $this->num_links))
230,232c566,567
< 			$first_url = ($this->first_url == '') ? $this->base_url : $this->first_url;
< 			$output .= $this->first_tag_open.'<a '.$this->anchor_class.'href="'.$first_url.'">'.$this->first_link.'</a>'.$this->first_tag_close;
< 		}
---
> 			// Take the general parameters, and squeeze this pagination-page attr in for JS frameworks.
> 			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, 1);
234,239c569,570
< 		// Render the "previous" link
< 		if  ($this->prev_link !== FALSE AND $this->cur_page != 1)
< 		{
< 			if ($this->use_page_numbers)
< 			{
< 				$i = $uri_page_number - 1;
---
> 			$output .= $this->first_tag_open.'<a href="'.$first_url.'"'.$attributes.$this->_attr_rel('start').'>'
> 				.$this->first_link.'</a>'.$this->first_tag_close;
241c572,574
< 			else
---
> 
> 		// Render the "Previous" link.
> 		if ($this->prev_link !== FALSE && $this->cur_page !== 1)
243,244c576
< 				$i = $uri_page_number - $this->per_page;
< 			}
---
> 			$i = ($this->use_page_numbers) ? $uri_page_number - 1 : $uri_page_number - $this->per_page;
246c578,580
< 			if ($i == 0 && $this->first_url != '')
---
> 			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, ($this->cur_page - 1));
> 
> 			if ($i === $base_page)
248c582,584
< 				$output .= $this->prev_tag_open.'<a '.$this->anchor_class.'href="'.$this->first_url.'">'.$this->prev_link.'</a>'.$this->prev_tag_close;
---
> 				// First page
> 				$output .= $this->prev_tag_open.'<a href="'.$first_url.'"'.$attributes.$this->_attr_rel('prev').'>'
> 					.$this->prev_link.'</a>'.$this->prev_tag_close;
252,253c588,590
< 				$i = ($i == 0) ? '' : $this->prefix.$i.$this->suffix;
< 				$output .= $this->prev_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$i.'">'.$this->prev_link.'</a>'.$this->prev_tag_close;
---
> 				$append = $this->prefix.$i.$this->suffix;
> 				$output .= $this->prev_tag_open.'<a href="'.$base_url.$append.'"'.$attributes.$this->_attr_rel('prev').'>'
> 					.$this->prev_link.'</a>'.$this->prev_tag_close;
264,271c601,603
< 				if ($this->use_page_numbers)
< 				{
< 					$i = $loop;
< 				}
< 				else
< 				{
< 					$i = ($loop * $this->per_page) - $this->per_page;
< 				}
---
> 				$i = ($this->use_page_numbers) ? $loop : ($loop * $this->per_page) - $this->per_page;
> 
> 				$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, $loop);
275c607
< 					if ($this->cur_page == $loop)
---
> 					if ($this->cur_page === $loop)
277c609,610
< 						$output .= $this->cur_tag_open.$loop.$this->cur_tag_close; // Current page
---
> 						// Current page
> 						$output .= $this->cur_tag_open.$loop.$this->cur_tag_close;
279c612
< 					else
---
> 					elseif ($i === $base_page)
281,285c614,616
< 						$n = ($i == $base_page) ? '' : $i;
< 
< 						if ($n == '' && $this->first_url != '')
< 						{
< 							$output .= $this->num_tag_open.'<a '.$this->anchor_class.'href="'.$this->first_url.'">'.$loop.'</a>'.$this->num_tag_close;
---
> 						// First page
> 						$output .= $this->num_tag_open.'<a href="'.$first_url.'"'.$attributes.$this->_attr_rel('start').'>'
> 							.$loop.'</a>'.$this->num_tag_close;
289,292c620,622
< 							$n = ($n == '') ? '' : $this->prefix.$n.$this->suffix;
< 
< 							$output .= $this->num_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$n.'">'.$loop.'</a>'.$this->num_tag_close;
< 						}
---
> 						$append = $this->prefix.$i.$this->suffix;
> 						$output .= $this->num_tag_open.'<a href="'.$base_url.$append.'"'.$attributes.'>'
> 							.$loop.'</a>'.$this->num_tag_close;
299,305c629
< 		if ($this->next_link !== FALSE AND $this->cur_page < $num_pages)
< 		{
< 			if ($this->use_page_numbers)
< 			{
< 				$i = $this->cur_page + 1;
< 			}
< 			else
---
> 		if ($this->next_link !== FALSE && $this->cur_page < $num_pages)
307,308c631,633
< 				$i = ($this->cur_page * $this->per_page);
< 			}
---
> 			$i = ($this->use_page_numbers) ? $this->cur_page + 1 : $this->cur_page * $this->per_page;
> 
> 			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, $this->cur_page + 1);
310c635,636
< 			$output .= $this->next_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$this->prefix.$i.$this->suffix.'">'.$this->next_link.'</a>'.$this->next_tag_close;
---
> 			$output .= $this->next_tag_open.'<a href="'.$base_url.$this->prefix.$i.$this->suffix.'"'.$attributes
> 				.$this->_attr_rel('next').'>'.$this->next_link.'</a>'.$this->next_tag_close;
314,316c640
< 		if ($this->last_link !== FALSE AND ($this->cur_page + $this->num_links) < $num_pages)
< 		{
< 			if ($this->use_page_numbers)
---
> 		if ($this->last_link !== FALSE && ($this->cur_page + $this->num_links + ! $this->num_links) < $num_pages)
318,324c642,647
< 				$i = $num_pages;
< 			}
< 			else
< 			{
< 				$i = (($num_pages * $this->per_page) - $this->per_page);
< 			}
< 			$output .= $this->last_tag_open.'<a '.$this->anchor_class.'href="'.$this->base_url.$this->prefix.$i.$this->suffix.'">'.$this->last_link.'</a>'.$this->last_tag_close;
---
> 			$i = ($this->use_page_numbers) ? $num_pages : ($num_pages * $this->per_page) - $this->per_page;
> 
> 			$attributes = sprintf('%s %s="%d"', $this->_attributes, $this->data_page_attr, $num_pages);
> 
> 			$output .= $this->last_tag_open.'<a href="'.$base_url.$this->prefix.$i.$this->suffix.'"'.$attributes.'>'
> 				.$this->last_link.'</a>'.$this->last_tag_close;
329c652
< 		$output = preg_replace("#([^:])//+#", "\\1/", $output);
---
> 		$output = preg_replace('#([^:"])//+#', '\\1/', $output);
332c655,658
< 		$output = $this->full_tag_open.$output.$this->full_tag_close;
---
> 		return $this->full_tag_open.$output.$this->full_tag_close;
> 	}
> 
> 	// --------------------------------------------------------------------
334c660,677
< 		return $output;
---
> 	/**
> 	 * Parse attributes
> 	 *
> 	 * @param	array	$attributes
> 	 * @return	void
> 	 */
> 	protected function _parse_attributes($attributes)
> 	{
> 		isset($attributes['rel']) OR $attributes['rel'] = TRUE;
> 		$this->_link_types = ($attributes['rel'])
> 			? array('start' => 'start', 'prev' => 'prev', 'next' => 'next')
> 			: array();
> 		unset($attributes['rel']);
> 
> 		$this->_attributes = '';
> 		foreach ($attributes as $key => $value)
> 		{
> 			$this->_attributes .= ' '.$key.'="'.$value.'"';
337d679
< // END Pagination Class
339,340c681,701
< /* End of file Pagination.php */
< /* Location: ./system/libraries/Pagination.php */
\ No newline at end of file
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add "rel" attribute
> 	 *
> 	 * @link	http://www.w3.org/TR/html5/links.html#linkTypes
> 	 * @param	string	$type
> 	 * @return	string
> 	 */
> 	protected function _attr_rel($type)
> 	{
> 		if (isset($this->_link_types[$type]))
> 		{
> 			unset($this->_link_types[$type]);
> 			return ' rel="'.$type.'"';
> 		}
> 
> 		return '';
> 	}
> 
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Parser.php opensourcepos/system/libraries/Parser.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/parser.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/parser.html
29,31c51,85
< 	var $l_delim = '{';
< 	var $r_delim = '}';
< 	var $object;
---
> 	/**
> 	 * Left delimiter character for pseudo vars
> 	 *
> 	 * @var string
> 	 */
> 	public $l_delim = '{';
> 
> 	/**
> 	 * Right delimiter character for pseudo vars
> 	 *
> 	 * @var string
> 	 */
> 	public $r_delim = '}';
> 
> 	/**
> 	 * Reference to CodeIgniter instance
> 	 *
> 	 * @var object
> 	 */
> 	protected $CI;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Class constructor
> 	 *
> 	 * @return	void
> 	 */
> 	public function __construct()
> 	{
> 		$this->CI =& get_instance();
> 		log_message('info', 'Parser Class Initialized');
> 	}
> 
> 	// --------------------------------------------------------------------
39d92
< 	 * @access	public
47,48c100
< 		$CI =& get_instance();
< 		$template = $CI->load->view($template, $data, TRUE);
---
> 		$template = $this->CI->load->view($template, $data, TRUE);
61d112
< 	 * @access	public
67c118
< 	function parse_string($template, $data, $return = FALSE)
---
> 	public function parse_string($template, $data, $return = FALSE)
80d130
< 	 * @access	public
86c136
< 	function _parse($template, $data, $return = FALSE)
---
> 	protected function _parse($template, $data, $return = FALSE)
88c138
< 		if ($template == '')
---
> 		if ($template === '')
92a143
> 		$replace = array();
95,102c146,151
< 			if (is_array($val))
< 			{
< 				$template = $this->_parse_pair($key, $val, $template);
< 			}
< 			else
< 			{
< 				$template = $this->_parse_single($key, (string)$val, $template);
< 			}
---
> 			$replace = array_merge(
> 				$replace,
> 				is_array($val)
> 					? $this->_parse_pair($key, $val, $template)
> 					: $this->_parse_single($key, (string) $val, $template)
> 			);
105c154,157
< 		if ($return == FALSE)
---
> 		unset($data);
> 		$template = strtr($template, $replace);
> 
> 		if ($return === FALSE)
107,108c159
< 			$CI =& get_instance();
< 			$CI->output->append_output($template);
---
> 			$this->CI->output->append_output($template);
119d169
< 	 * @access	public
124c174
< 	function set_delimiters($l = '{', $r = '}')
---
> 	public function set_delimiters($l = '{', $r = '}')
135d184
< 	 * @access	private
141c190
< 	function _parse_single($key, $val, $string)
---
> 	protected function _parse_single($key, $val, $string)
143c192
< 		return str_replace($this->l_delim.$key.$this->r_delim, $val, $string);
---
> 		return array($this->l_delim.$key.$this->r_delim => (string) $val);
153d201
< 	 * @access	private
159,161c207
< 	function _parse_pair($variable, $data, $string)
< 	{
< 		if (FALSE === ($match = $this->_match_pair($string, $variable)))
---
> 	protected function _parse_pair($variable, $data, $string)
163,164c209,215
< 			return $string;
< 		}
---
> 		$replace = array();
> 		preg_match_all(
> 			'#'.preg_quote($this->l_delim.$variable.$this->r_delim).'(.+?)'.preg_quote($this->l_delim.'/'.$variable.$this->r_delim).'#s',
> 			$string,
> 			$matches,
> 			PREG_SET_ORDER
> 		);
165a217,218
> 		foreach ($matches as $match)
> 		{
169c222
< 			$temp = $match['1'];
---
> 				$temp = array();
172c225
< 				if ( ! is_array($val))
---
> 					if (is_array($val))
174,176c227,228
< 					$temp = $this->_parse_single($key, $val, $temp);
< 				}
< 				else
---
> 						$pair = $this->_parse_pair($key, $val, $match[1]);
> 						if ( ! empty($pair))
178,179c230
< 					$temp = $this->_parse_pair($key, $val, $temp);
< 				}
---
> 							$temp = array_merge($temp, $pair);
182c233
< 			$str .= $temp;
---
> 						continue;
185c236
< 		return str_replace($match['0'], $str, $string);
---
> 					$temp[$this->l_delim.$key.$this->r_delim] = $val;
188,202c239
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 *  Matches a variable pair
< 	 *
< 	 * @access	private
< 	 * @param	string
< 	 * @param	string
< 	 * @return	mixed
< 	 */
< 	function _match_pair($string, $variable)
< 	{
< 		if ( ! preg_match("|" . preg_quote($this->l_delim) . $variable . preg_quote($this->r_delim) . "(.+?)". preg_quote($this->l_delim) . '/' . $variable . preg_quote($this->r_delim) . "|s", $string, $match))
< 		{
< 			return FALSE;
---
> 				$str .= strtr($match[1], $temp);
205c242
< 		return $match;
---
> 			$replace[$match[0]] = $str;
207a245
> 		return $replace;
209d246
< // END Parser Class
211,212c248
< /* End of file Parser.php */
< /* Location: ./system/libraries/Parser.php */
---
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Profiler.php opensourcepos/system/libraries/Profiler.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
30,31c52,53
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/general/profiling.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/general/profiling.html
34a57,61
> 	/**
> 	 * List of profiler sections available to show
> 	 *
> 	 * @var array
> 	 */
47a75,79
> 	/**
> 	 * Number of queries to show before making the additional queries togglable
> 	 *
> 	 * @var int
> 	 */
49a82,86
> 	/**
> 	 * Reference to the CodeIgniter singleton
> 	 *
> 	 * @var object
> 	 */
53a91,97
> 	/**
> 	 * Class constructor
> 	 *
> 	 * Initialize Profiler
> 	 *
> 	 * @param	array	$config	Parameters
> 	 */
59,64d102
< 		if (isset($config['query_toggle_count']))
< 		{
< 			$this->_query_toggle_count = (int) $config['query_toggle_count'];
< 			unset($config['query_toggle_count']);
< 		}
< 
74a113
> 		log_message('info', 'Profiler Class Initialized');
84c123
< 	 * @param	mixed
---
> 	 * @param	mixed	$config
88a128,133
> 		if (isset($config['query_toggle_count']))
> 		{
> 			$this->_query_toggle_count = (int) $config['query_toggle_count'];
> 			unset($config['query_toggle_count']);
> 		}
> 
93c138
< 				$this->_compile_{$method} = ($enable !== FALSE) ? TRUE : FALSE;
---
> 				$this->_compile_{$method} = ($enable !== FALSE);
117,119c162,163
< 			if (preg_match("/(.+?)_end/i", $key, $match))
< 			{
< 				if (isset($this->CI->benchmark->marker[$match[1].'_end']) AND isset($this->CI->benchmark->marker[$match[1].'_start']))
---
> 			if (preg_match('/(.+?)_end$/i', $key, $match)
> 				&& isset($this->CI->benchmark->marker[$match[1].'_end'], $this->CI->benchmark->marker[$match[1].'_start']))
124d167
< 		}
130,135c173,177
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_benchmarks" style="border:1px solid #900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_benchmarks').'&nbsp;&nbsp;</legend>';
< 		$output .= "\n";
< 		$output .= "\n\n<table style='width:100%'>\n";
---
> 		$output = "\n\n"
> 			.'<fieldset id="ci_profiler_benchmarks" style="border:1px solid #900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_benchmarks')."&nbsp;&nbsp;</legend>"
> 			."\n\n\n<table style=\"width:100%;\">\n";
140c182,184
< 			$output .= "<tr><td style='padding:5px;width:50%;color:#000;font-weight:bold;background-color:#ddd;'>".$key."&nbsp;&nbsp;</td><td style='padding:5px;width:50%;color:#900;font-weight:normal;background-color:#ddd;'>".$val."</td></tr>\n";
---
> 			$output .= '<tr><td style="padding:5px;width:50%;color:#000;font-weight:bold;background-color:#ddd;">'
> 					.$key.'&nbsp;&nbsp;</td><td style="padding:5px;width:50%;color:#900;font-weight:normal;background-color:#ddd;">'
> 					.$val."</td></tr>\n";
143,146c187
< 		$output .= "</table>\n";
< 		$output .= "</fieldset>";
< 
< 		return $output;
---
> 		return $output."</table>\n</fieldset>";
161c202,204
< 		foreach (get_object_vars($this->CI) as $CI_object)
---
> 		foreach (get_object_vars($this->CI) as $name => $cobject)
> 		{
> 			if (is_object($cobject))
163c206
< 			if (is_object($CI_object) && is_subclass_of(get_class($CI_object), 'CI_DB') )
---
> 				if ($cobject instanceof CI_DB)
165c208,219
< 				$dbs[] = $CI_object;
---
> 					$dbs[get_class($this->CI).':$'.$name] = $cobject;
> 				}
> 				elseif ($cobject instanceof CI_Model)
> 				{
> 					foreach (get_object_vars($cobject) as $mname => $mobject)
> 					{
> 						if ($mobject instanceof CI_DB)
> 						{
> 							$dbs[get_class($cobject).':$'.$mname] = $mobject;
> 						}
> 					}
> 				}
169c223
< 		if (count($dbs) == 0)
---
> 		if (count($dbs) === 0)
171,181c225,232
< 			$output  = "\n\n";
< 			$output .= '<fieldset id="ci_profiler_queries" style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 			$output .= "\n";
< 			$output .= '<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries').'&nbsp;&nbsp;</legend>';
< 			$output .= "\n";
< 			$output .= "\n\n<table style='border:none; width:100%;'>\n";
< 			$output .="<tr><td style='width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px'>".$this->CI->lang->line('profiler_no_db')."</td></tr>\n";
< 			$output .= "</table>\n";
< 			$output .= "</fieldset>";
< 
< 			return $output;
---
> 			return "\n\n"
> 				.'<fieldset id="ci_profiler_queries" style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 				."\n"
> 				.'<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries').'&nbsp;&nbsp;</legend>'
> 				."\n\n\n<table style=\"border:none; width:100%;\">\n"
> 				.'<tr><td style="width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px;">'
> 				.$this->CI->lang->line('profiler_no_db')
> 				."</td></tr>\n</table>\n</fieldset>";
194c244
< 		foreach ($dbs as $db)
---
> 		foreach ($dbs as $name => $db)
196,197d245
< 			$count++;
< 
198a247
> 			$total_time = number_format(array_sum($db->query_times), 4).' '.$this->CI->lang->line('profiler_seconds');
202c251
< 			if ($hide_queries != '')
---
> 			if ($hide_queries !== '')
207,211c256,261
< 			$output .= '<fieldset style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 			$output .= "\n";
< 			$output .= '<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_database').':&nbsp; '.$db->database.'&nbsp;&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries').': '.count($db->queries).'&nbsp;&nbsp;'.$show_hide_js.'</legend>';
< 			$output .= "\n";
< 			$output .= "\n\n<table style='width:100%;{$hide_queries}' id='ci_profiler_queries_db_{$count}'>\n";
---
> 			$output .= '<fieldset style="border:1px solid #0000FF;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 				."\n"
> 				.'<legend style="color:#0000FF;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_database')
> 				.':&nbsp; '.$db->database.' ('.$name.')&nbsp;&nbsp;&nbsp;'.$this->CI->lang->line('profiler_queries')
> 				.': '.count($db->queries).' ('.$total_time.')&nbsp;&nbsp;'.$show_hide_js."</legend>\n\n\n"
> 				.'<table style="width:100%;'.$hide_queries.'" id="ci_profiler_queries_db_'.$count."\">\n";
213c263
< 			if (count($db->queries) == 0)
---
> 			if (count($db->queries) === 0)
215c265,266
< 				$output .= "<tr><td style='width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px;'>".$this->CI->lang->line('profiler_no_queries')."</td></tr>\n";
---
> 				$output .= '<tr><td style="width:100%;color:#0000FF;font-weight:normal;background-color:#eee;padding:5px;">'
> 						.$this->CI->lang->line('profiler_no_queries')."</td></tr>\n";
222,223c273
< 
< 					$val = highlight_code($val, ENT_QUOTES);
---
> 					$val = highlight_code($val);
230c280,282
< 					$output .= "<tr><td style='padding:5px; vertical-align: top;width:1%;color:#900;font-weight:normal;background-color:#ddd;'>".$time."&nbsp;&nbsp;</td><td style='padding:5px; color:#000;font-weight:normal;background-color:#ddd;'>".$val."</td></tr>\n";
---
> 					$output .= '<tr><td style="padding:5px;vertical-align:top;width:1%;color:#900;font-weight:normal;background-color:#ddd;">'
> 							.$time.'&nbsp;&nbsp;</td><td style="padding:5px;color:#000;font-weight:normal;background-color:#ddd;">'
> 							.$val."</td></tr>\n";
234,236c286,287
< 			$output .= "</table>\n";
< 			$output .= "</fieldset>";
< 
---
> 			$output .= "</table>\n</fieldset>";
> 			$count++;
252,256c302,305
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_get" style="border:1px solid #cd6e00;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#cd6e00;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_get_data').'&nbsp;&nbsp;</legend>';
< 		$output .= "\n";
---
> 		$output = "\n\n"
> 			.'<fieldset id="ci_profiler_get" style="border:1px solid #cd6e00;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#cd6e00;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_get_data')."&nbsp;&nbsp;</legend>\n";
258c307
< 		if (count($_GET) == 0)
---
> 		if (count($_GET) === 0)
260c309
< 			$output .= "<div style='color:#cd6e00;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_get')."</div>";
---
> 			$output .= '<div style="color:#cd6e00;font-weight:normal;padding:4px 0 4px 0;">'.$this->CI->lang->line('profiler_no_get').'</div>';
264c313
< 			$output .= "\n\n<table style='width:100%; border:none'>\n";
---
> 			$output .= "\n\n<table style=\"width:100%;border:none;\">\n";
268,282c317,324
< 				if ( ! is_numeric($key))
< 				{
< 					$key = "'".$key."'";
< 				}
< 
< 				$output .= "<tr><td style='width:50%;color:#000;background-color:#ddd;padding:5px'>&#36;_GET[".$key."]&nbsp;&nbsp; </td><td style='width:50%;padding:5px;color:#cd6e00;font-weight:normal;background-color:#ddd;'>";
< 				if (is_array($val))
< 				{
< 					$output .= "<pre>" . htmlspecialchars(stripslashes(print_r($val, true))) . "</pre>";
< 				}
< 				else
< 				{
< 					$output .= htmlspecialchars(stripslashes($val));
< 				}
< 				$output .= "</td></tr>\n";
---
> 				is_int($key) OR $key = "'".htmlspecialchars($key, ENT_QUOTES, config_item('charset'))."'";
> 				$val = (is_array($val) OR is_object($val))
> 					? '<pre>'.htmlspecialchars(print_r($val, TRUE), ENT_QUOTES, config_item('charset'))
> 					: htmlspecialchars($val, ENT_QUOTES, config_item('charset'));
> 
> 				$output .= '<tr><td style="width:50%;color:#000;background-color:#ddd;padding:5px;">&#36;_GET['
> 					.$key.']&nbsp;&nbsp; </td><td style="width:50%;padding:5px;color:#cd6e00;font-weight:normal;background-color:#ddd;">'
> 					.$val."</td></tr>\n";
287d328
< 		$output .= "</fieldset>";
289c330
< 		return $output;
---
> 		return $output.'</fieldset>';
301,305c342,345
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_post" style="border:1px solid #009900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#009900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_post_data').'&nbsp;&nbsp;</legend>';
< 		$output .= "\n";
---
> 		$output = "\n\n"
> 			.'<fieldset id="ci_profiler_post" style="border:1px solid #009900;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#009900;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_post_data')."&nbsp;&nbsp;</legend>\n";
307c347
< 		if (count($_POST) == 0)
---
> 		if (count($_POST) === 0 && count($_FILES) === 0)
309c349
< 			$output .= "<div style='color:#009900;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_post')."</div>";
---
> 			$output .= '<div style="color:#009900;font-weight:normal;padding:4px 0 4px 0;">'.$this->CI->lang->line('profiler_no_post').'</div>';
313c353
< 			$output .= "\n\n<table style='width:100%'>\n";
---
> 			$output .= "\n\n<table style=\"width:100%;\">\n";
317,331c357,376
< 				if ( ! is_numeric($key))
< 				{
< 					$key = "'".$key."'";
< 				}
< 
< 				$output .= "<tr><td style='width:50%;padding:5px;color:#000;background-color:#ddd;'>&#36;_POST[".$key."]&nbsp;&nbsp; </td><td style='width:50%;padding:5px;color:#009900;font-weight:normal;background-color:#ddd;'>";
< 				if (is_array($val))
< 				{
< 					$output .= "<pre>" . htmlspecialchars(stripslashes(print_r($val, TRUE))) . "</pre>";
< 				}
< 				else
< 				{
< 					$output .= htmlspecialchars(stripslashes($val));
< 				}
< 				$output .= "</td></tr>\n";
---
> 				is_int($key) OR $key = "'".htmlspecialchars($key, ENT_QUOTES, config_item('charset'))."'";
> 				$val = (is_array($val) OR is_object($val))
> 					? '<pre>'.htmlspecialchars(print_r($val, TRUE), ENT_QUOTES, config_item('charset'))
> 					: htmlspecialchars($val, ENT_QUOTES, config_item('charset'));
> 
> 				$output .= '<tr><td style="width:50%;padding:5px;color:#000;background-color:#ddd;">&#36;_POST['
> 					.$key.']&nbsp;&nbsp; </td><td style="width:50%;padding:5px;color:#009900;font-weight:normal;background-color:#ddd;">'
> 					.$val."</td></tr>\n";
> 			}
> 
> 			foreach ($_FILES as $key => $val)
> 			{
> 				is_int($key) OR $key = "'".htmlspecialchars($key, ENT_QUOTES, config_item('charset'))."'";
> 				$val = (is_array($val) OR is_object($val))
> 					? '<pre>'.htmlspecialchars(print_r($val, TRUE), ENT_QUOTES, config_item('charset'))
> 					: htmlspecialchars($val, ENT_QUOTES, config_item('charset'));
> 
> 				$output .= '<tr><td style="width:50%;padding:5px;color:#000;background-color:#ddd;">&#36;_FILES['
> 					.$key.']&nbsp;&nbsp; </td><td style="width:50%;padding:5px;color:#009900;font-weight:normal;background-color:#ddd;">'
> 					.$val."</td></tr>\n";
336d380
< 		$output .= "</fieldset>";
338c382
< 		return $output;
---
> 		return $output.'</fieldset>';
350,367c394,400
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_uri_string" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_uri_string').'&nbsp;&nbsp;</legend>';
< 		$output .= "\n";
< 
< 		if ($this->CI->uri->uri_string == '')
< 		{
< 			$output .= "<div style='color:#000;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_uri')."</div>";
< 		}
< 		else
< 		{
< 			$output .= "<div style='color:#000;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->uri->uri_string."</div>";
< 		}
< 
< 		$output .= "</fieldset>";
< 
< 		return $output;
---
> 		return "\n\n"
> 			.'<fieldset id="ci_profiler_uri_string" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_uri_string')."&nbsp;&nbsp;</legend>\n"
> 			.'<div style="color:#000;font-weight:normal;padding:4px 0 4px 0;">'
> 			.($this->CI->uri->uri_string === '' ? $this->CI->lang->line('profiler_no_uri') : $this->CI->uri->uri_string)
> 			.'</div></fieldset>';
379,389c412,417
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_controller_info" style="border:1px solid #995300;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#995300;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_controller_info').'&nbsp;&nbsp;</legend>';
< 		$output .= "\n";
< 
< 		$output .= "<div style='color:#995300;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->router->fetch_class()."/".$this->CI->router->fetch_method()."</div>";
< 
< 		$output .= "</fieldset>";
< 
< 		return $output;
---
> 		return "\n\n"
> 			.'<fieldset id="ci_profiler_controller_info" style="border:1px solid #995300;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#995300;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_controller_info')."&nbsp;&nbsp;</legend>\n"
> 			.'<div style="color:#995300;font-weight:normal;padding:4px 0 4px 0;">'.$this->CI->router->class.'/'.$this->CI->router->method
> 			.'</div></fieldset>';
403,420c431,437
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_memory_usage" style="border:1px solid #5a0099;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#5a0099;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_memory_usage').'&nbsp;&nbsp;</legend>';
< 		$output .= "\n";
< 
< 		if (function_exists('memory_get_usage') && ($usage = memory_get_usage()) != '')
< 		{
< 			$output .= "<div style='color:#5a0099;font-weight:normal;padding:4px 0 4px 0'>".number_format($usage).' bytes</div>';
< 		}
< 		else
< 		{
< 			$output .= "<div style='color:#5a0099;font-weight:normal;padding:4px 0 4px 0'>".$this->CI->lang->line('profiler_no_memory')."</div>";
< 		}
< 
< 		$output .= "</fieldset>";
< 
< 		return $output;
---
> 		return "\n\n"
> 			.'<fieldset id="ci_profiler_memory_usage" style="border:1px solid #5a0099;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#5a0099;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_memory_usage')."&nbsp;&nbsp;</legend>\n"
> 			.'<div style="color:#5a0099;font-weight:normal;padding:4px 0 4px 0;">'
> 			.(($usage = memory_get_usage()) != '' ? number_format($usage).' bytes' : $this->CI->lang->line('profiler_no_memory'))
> 			.'</div></fieldset>';
434,440c451,456
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_http_headers" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_headers').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_httpheaders_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>';
< 		$output .= "\n";
< 
< 		$output .= "\n\n<table style='width:100%;display:none' id='ci_profiler_httpheaders_table'>\n";
---
> 		$output = "\n\n"
> 			.'<fieldset id="ci_profiler_http_headers" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_headers')
> 			.'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_httpheaders_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show')."</span>)</legend>\n\n\n"
> 			.'<table style="width:100%;display:none;" id="ci_profiler_httpheaders_table">'."\n";
442c458
< 		foreach (array('HTTP_ACCEPT', 'HTTP_USER_AGENT', 'HTTP_CONNECTION', 'SERVER_PORT', 'SERVER_NAME', 'REMOTE_ADDR', 'SERVER_SOFTWARE', 'HTTP_ACCEPT_LANGUAGE', 'SCRIPT_NAME', 'REQUEST_METHOD',' HTTP_HOST', 'REMOTE_HOST', 'CONTENT_TYPE', 'SERVER_PROTOCOL', 'QUERY_STRING', 'HTTP_ACCEPT_ENCODING', 'HTTP_X_FORWARDED_FOR') as $header)
---
> 		foreach (array('HTTP_ACCEPT', 'HTTP_USER_AGENT', 'HTTP_CONNECTION', 'SERVER_PORT', 'SERVER_NAME', 'REMOTE_ADDR', 'SERVER_SOFTWARE', 'HTTP_ACCEPT_LANGUAGE', 'SCRIPT_NAME', 'REQUEST_METHOD',' HTTP_HOST', 'REMOTE_HOST', 'CONTENT_TYPE', 'SERVER_PROTOCOL', 'QUERY_STRING', 'HTTP_ACCEPT_ENCODING', 'HTTP_X_FORWARDED_FOR', 'HTTP_DNT') as $header)
444,445c460,462
< 			$val = (isset($_SERVER[$header])) ? $_SERVER[$header] : '';
< 			$output .= "<tr><td style='vertical-align: top;width:50%;padding:5px;color:#900;background-color:#ddd;'>".$header."&nbsp;&nbsp;</td><td style='width:50%;padding:5px;color:#000;background-color:#ddd;'>".$val."</td></tr>\n";
---
> 			$val = isset($_SERVER[$header]) ? htmlspecialchars($_SERVER[$header], ENT_QUOTES, config_item('charset')) : '';
> 			$output .= '<tr><td style="vertical-align:top;width:50%;padding:5px;color:#900;background-color:#ddd;">'
> 				.$header.'&nbsp;&nbsp;</td><td style="width:50%;padding:5px;color:#000;background-color:#ddd;">'.$val."</td></tr>\n";
448,451c465
< 		$output .= "</table>\n";
< 		$output .= "</fieldset>";
< 
< 		return $output;
---
> 		return $output."</table>\n</fieldset>";
465,471c479,483
< 		$output  = "\n\n";
< 		$output .= '<fieldset id="ci_profiler_config" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= "\n";
< 		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_config').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_config_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>';
< 		$output .= "\n";
< 
< 		$output .= "\n\n<table style='width:100%; display:none' id='ci_profiler_config_table'>\n";
---
> 		$output = "\n\n"
> 			.'<fieldset id="ci_profiler_config" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			."\n"
> 			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_config').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_config_table\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show')."</span>)</legend>\n\n\n"
> 			.'<table style="width:100%;display:none;" id="ci_profiler_config_table">'."\n";
475c487
< 			if (is_array($val))
---
> 			if (is_array($val) OR is_object($val))
480c492,493
< 			$output .= "<tr><td style='padding:5px; vertical-align: top;color:#900;background-color:#ddd;'>".$config."&nbsp;&nbsp;</td><td style='padding:5px; color:#000;background-color:#ddd;'>".htmlspecialchars($val)."</td></tr>\n";
---
> 			$output .= '<tr><td style="padding:5px;vertical-align:top;color:#900;background-color:#ddd;">'
> 				.$config.'&nbsp;&nbsp;</td><td style="padding:5px;color:#000;background-color:#ddd;">'.htmlspecialchars($val)."</td></tr>\n";
483,486c496
< 		$output .= "</table>\n";
< 		$output .= "</fieldset>";
< 
< 		return $output;
---
> 		return $output."</table>\n</fieldset>";
496c506
< 	private function _compile_session_data()
---
> 	protected function _compile_session_data()
503,505c513,515
< 		$output = '<fieldset id="ci_profiler_csession" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee">';
< 		$output .= '<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_session_data').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_session_data\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>';
< 		$output .= "<table style='width:100%;display:none' id='ci_profiler_session_data'>";
---
> 		$output = '<fieldset id="ci_profiler_csession" style="border:1px solid #000;padding:6px 10px 10px 10px;margin:20px 0 20px 0;background-color:#eee;">'
> 			.'<legend style="color:#000;">&nbsp;&nbsp;'.$this->CI->lang->line('profiler_session_data').'&nbsp;&nbsp;(<span style="cursor: pointer;" onclick="var s=document.getElementById(\'ci_profiler_session_data\').style;s.display=s.display==\'none\'?\'\':\'none\';this.innerHTML=this.innerHTML==\''.$this->CI->lang->line('profiler_section_show').'\'?\''.$this->CI->lang->line('profiler_section_hide').'\':\''.$this->CI->lang->line('profiler_section_show').'\';">'.$this->CI->lang->line('profiler_section_show').'</span>)</legend>'
> 			.'<table style="width:100%;display:none;" id="ci_profiler_session_data">';
507c517
< 		foreach ($this->CI->session->all_userdata() as $key => $val)
---
> 		foreach ($this->CI->session->userdata() as $key => $val)
514c524,525
< 			$output .= "<tr><td style='padding:5px; vertical-align: top;color:#900;background-color:#ddd;'>".$key."&nbsp;&nbsp;</td><td style='padding:5px; color:#000;background-color:#ddd;'>".htmlspecialchars($val)."</td></tr>\n";
---
> 			$output .= '<tr><td style="padding:5px;vertical-align:top;color:#900;background-color:#ddd;">'
> 				.$key.'&nbsp;&nbsp;</td><td style="padding:5px;color:#000;background-color:#ddd;">'.htmlspecialchars($val)."</td></tr>\n";
517,519c528
< 		$output .= '</table>';
< 		$output .= "</fieldset>";
< 		return $output;
---
> 		return $output."</table>\n</fieldset>";
531c540
< 		$output = "<div id='codeigniter_profiler' style='clear:both;background-color:#fff;padding:10px;'>";
---
> 		$output = '<div id="codeigniter_profiler" style="clear:both;background-color:#fff;padding:10px;">';
538c547
< 				$func = "_compile_{$section}";
---
> 				$func = '_compile_'.$section;
544c553
< 		if ($fields_displayed == 0)
---
> 		if ($fields_displayed === 0)
546c555,556
< 			$output .= '<p style="border:1px solid #5a0099;padding:10px;margin:20px 0;background-color:#eee">'.$this->CI->lang->line('profiler_no_profiles').'</p>';
---
> 			$output .= '<p style="border:1px solid #5a0099;padding:10px;margin:20px 0;background-color:#eee;">'
> 				.$this->CI->lang->line('profiler_no_profiles').'</p>';
549,551c559
< 		$output .= '</div>';
< 
< 		return $output;
---
> 		return $output.'</div>';
553,555d560
< }
< 
< // END CI_Profiler class
557,558c562
< /* End of file Profiler.php */
< /* Location: ./system/libraries/Profiler.php */
\ No newline at end of file
---
> }
Only in opensourcepos/system/libraries: Session
Only in pos-prod/system/libraries: Session.php
Only in pos-prod/system/libraries: Sha1.php
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Table.php opensourcepos/system/libraries/Table.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,11c30,34
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/uri.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/table.html
31,38c53,58
< 	var $rows				= array();
< 	var $heading			= array();
< 	var $auto_heading		= TRUE;
< 	var $caption			= NULL;
< 	var $template			= NULL;
< 	var $newline			= "\n";
< 	var $empty_cells		= "";
< 	var	$function			= FALSE;
---
> 	/**
> 	 * Data for table rows
> 	 *
> 	 * @var array
> 	 */
> 	public $rows		= array();
40c60,118
< 	public function __construct()
---
> 	/**
> 	 * Data for table heading
> 	 *
> 	 * @var array
> 	 */
> 	public $heading		= array();
> 
> 	/**
> 	 * Whether or not to automatically create the table header
> 	 *
> 	 * @var bool
> 	 */
> 	public $auto_heading	= TRUE;
> 
> 	/**
> 	 * Table caption
> 	 *
> 	 * @var string
> 	 */
> 	public $caption		= NULL;
> 
> 	/**
> 	 * Table layout template
> 	 *
> 	 * @var array
> 	 */
> 	public $template	= NULL;
> 
> 	/**
> 	 * Newline setting
> 	 *
> 	 * @var string
> 	 */
> 	public $newline		= "\n";
> 
> 	/**
> 	 * Contents of empty cells
> 	 *
> 	 * @var string
> 	 */
> 	public $empty_cells	= '';
> 
> 	/**
> 	 * Callback for custom table layout
> 	 *
> 	 * @var function
> 	 */
> 	public $function	= NULL;
> 
> 	/**
> 	 * Set the template from the table config file if it exists
> 	 *
> 	 * @param	array	$config	(default: array())
> 	 * @return	void
> 	 */
> 	public function __construct($config = array())
> 	{
> 		// initialize config
> 		foreach ($config as $key => $val)
42c120,123
< 		log_message('debug', "Table Class Initialized");
---
> 			$this->template[$key] = $val;
> 		}
> 
> 		log_message('info', 'Table Class Initialized');
50,52c131,132
< 	 * @access	public
< 	 * @param	array
< 	 * @return	void
---
> 	 * @param	array	$template
> 	 * @return	bool
54c134
< 	function set_template($template)
---
> 	public function set_template($template)
61a142
> 		return TRUE;
71d151
< 	 * @access	public
73c153
< 	 * @return	void
---
> 	 * @return	CI_Table
75c155
< 	function set_heading()
---
> 	public function set_heading($args = array())
77,78c157,158
< 		$args = func_get_args();
< 		$this->heading = $this->_prep_args($args);
---
> 		$this->heading = $this->_prep_args(func_get_args());
> 		return $this;
89,92c169,171
< 	 * @access	public
< 	 * @param	array
< 	 * @param	int
< 	 * @return	void
---
> 	 * @param	array	$array
> 	 * @param	int	$col_limit
> 	 * @return	array
94c173
< 	function make_columns($array = array(), $col_limit = 0)
---
> 	public function make_columns($array = array(), $col_limit = 0)
96c175
< 		if ( ! is_array($array) OR count($array) == 0)
---
> 		if ( ! is_array($array) OR count($array) === 0 OR ! is_int($col_limit))
105c184
< 		if ($col_limit == 0)
---
> 		if ($col_limit === 0)
111c190
< 		while (count($array) > 0)
---
> 		do
124a204
> 		while (count($array) > 0);
136,138c216,217
< 	 * @access	public
< 	 * @param	mixed
< 	 * @return	void
---
> 	 * @param	mixed	$value
> 	 * @return	CI_Table
140c219
< 	function set_empty($value)
---
> 	public function set_empty($value)
142a222
> 		return $this;
152d231
< 	 * @access	public
154c233
< 	 * @return	void
---
> 	 * @return	CI_Table
156c235
< 	function add_row()
---
> 	public function add_row($args = array())
158,159c237,238
< 		$args = func_get_args();
< 		$this->rows[] = $this->_prep_args($args);
---
> 		$this->rows[] = $this->_prep_args(func_get_args());
> 		return $this;
169,171c248,249
< 	 * @access	public
< 	 * @param	type
< 	 * @return	type
---
> 	 * @param	array
> 	 * @return	array
173c251
< 	function _prep_args($args)
---
> 	protected function _prep_args($args)
178,183c256
< 		if (isset($args[0]) AND (count($args) == 1 && is_array($args[0])))
< 		{
< 			// args sent as indexed array
< 			if ( ! isset($args[0]['data']))
< 			{
< 				foreach ($args[0] as $key => $val)
---
> 		if (isset($args[0]) && count($args) === 1 && is_array($args[0]) && ! isset($args[0]['data']))
185,187c258
< 					if (is_array($val) && isset($val['data']))
< 					{
< 						$args[$key] = $val;
---
> 			$args = $args[0];
189,197c260
< 					else
< 					{
< 						$args[$key] = array('data' => $val);
< 					}
< 				}
< 			}
< 		}
< 		else
< 		{
---
> 
200,204c263
< 				if ( ! is_array($val))
< 				{
< 					$args[$key] = array('data' => $val);
< 				}
< 			}
---
> 			is_array($val) OR $args[$key] = array('data' => $val);
215,217c274,275
< 	 * @access	public
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$caption
> 	 * @return	CI_Table
219c277
< 	function set_caption($caption)
---
> 	public function set_caption($caption)
229,230c287
< 	 * @access	public
< 	 * @param	mixed
---
> 	 * @param	mixed	$table_data
233c290
< 	function generate($table_data = NULL)
---
> 	public function generate($table_data = NULL)
237c294
< 		if ( ! is_null($table_data))
---
> 		if ( ! empty($table_data))
239c296
< 			if (is_object($table_data))
---
> 			if ($table_data instanceof CI_DB_result)
241c298
< 				$this->_set_from_object($table_data);
---
> 				$this->_set_from_db_result($table_data);
245,246c302
< 				$set_heading = (count($this->heading) == 0 AND $this->auto_heading == FALSE) ? FALSE : TRUE;
< 				$this->_set_from_array($table_data, $set_heading);
---
> 				$this->_set_from_array($table_data);
251c307
< 		if (count($this->heading) == 0 AND count($this->rows) == 0)
---
> 		if (empty($this->heading) && empty($this->rows))
259,260c315,319
< 		// set a custom cell manipulation function to a locally scoped variable so its callable
< 		$function = $this->function;
---
> 		// Validate a possibly existing custom cell manipulation function
> 		if (isset($this->function) && ! is_callable($this->function))
> 		{
> 			$this->function = NULL;
> 		}
264,265c323
< 		$out = $this->template['table_open'];
< 		$out .= $this->newline;
---
> 		$out = $this->template['table_open'].$this->newline;
270,272c328
< 			$out .= $this->newline;
< 			$out .= '<caption>' . $this->caption . '</caption>';
< 			$out .= $this->newline;
---
> 			$out .= '<caption>'.$this->caption.'</caption>'.$this->newline;
276c332
< 		if (count($this->heading) > 0)
---
> 		if ( ! empty($this->heading))
278,281c334
< 			$out .= $this->template['thead_open'];
< 			$out .= $this->newline;
< 			$out .= $this->template['heading_row_start'];
< 			$out .= $this->newline;
---
> 			$out .= $this->template['thead_open'].$this->newline.$this->template['heading_row_start'].$this->newline;
289c342
< 					if ($key != 'data')
---
> 					if ($key !== 'data')
291c344
< 						$temp = str_replace('<th', "<th $key='$val'", $temp);
---
> 						$temp = str_replace('<th', '<th '.$key.'="'.$val.'"', $temp);
295,297c348
< 				$out .= $temp;
< 				$out .= isset($heading['data']) ? $heading['data'] : '';
< 				$out .= $this->template['heading_cell_end'];
---
> 				$out .= $temp.(isset($heading['data']) ? $heading['data'] : '').$this->template['heading_cell_end'];
300,303c351
< 			$out .= $this->template['heading_row_end'];
< 			$out .= $this->newline;
< 			$out .= $this->template['thead_close'];
< 			$out .= $this->newline;
---
> 			$out .= $this->template['heading_row_end'].$this->newline.$this->template['thead_close'].$this->newline;
307c355
< 		if (count($this->rows) > 0)
---
> 		if ( ! empty($this->rows))
309,310c357
< 			$out .= $this->template['tbody_open'];
< 			$out .= $this->newline;
---
> 			$out .= $this->template['tbody_open'].$this->newline;
321c368
< 				$name = (fmod($i++, 2)) ? '' : 'alt_';
---
> 				$name = fmod($i++, 2) ? '' : 'alt_';
323,324c370
< 				$out .= $this->template['row_'.$name.'start'];
< 				$out .= $this->newline;
---
> 				$out .= $this->template['row_'.$name.'start'].$this->newline;
332c378
< 						if ($key != 'data')
---
> 						if ($key !== 'data')
334c380
< 							$temp = str_replace('<td', "<td $key='$val'", $temp);
---
> 							$temp = str_replace('<td', '<td '.$key.'="'.$val.'"', $temp);
341c387
< 					if ($cell === "" OR $cell === NULL)
---
> 					if ($cell === '' OR $cell === NULL)
345,347c391
< 					else
< 					{
< 						if ($function !== FALSE && is_callable($function))
---
> 					elseif (isset($this->function))
349c393
< 							$out .= call_user_func($function, $cell);
---
> 						$out .= call_user_func($this->function, $cell);
355d398
< 					}
360,361c403
< 				$out .= $this->template['row_'.$name.'end'];
< 				$out .= $this->newline;
---
> 				$out .= $this->template['row_'.$name.'end'].$this->newline;
364,365c406
< 			$out .= $this->template['tbody_close'];
< 			$out .= $this->newline;
---
> 			$out .= $this->template['tbody_close'].$this->newline;
381,382c422
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	CI_Table
384c424
< 	function clear()
---
> 	public function clear()
388a429
> 		return $this;
396,397c437
< 	 * @access	public
< 	 * @param	object
---
> 	 * @param	CI_DB_result	$db_result	Database result object
400,402c440
< 	function _set_from_object($query)
< 	{
< 		if ( ! is_object($query))
---
> 	protected function _set_from_db_result($object)
404,406d441
< 			return FALSE;
< 		}
< 
408,410c443
< 		if (count($this->heading) == 0)
< 		{
< 			if ( ! method_exists($query, 'list_fields'))
---
> 		if ($this->auto_heading === TRUE && empty($this->heading))
412,415c445
< 				return FALSE;
< 			}
< 
< 			$this->heading = $this->_prep_args($query->list_fields());
---
> 			$this->heading = $this->_prep_args($object->list_fields());
418,422c448
< 		// Next blast through the result array and build out the rows
< 
< 		if ($query->num_rows() > 0)
< 		{
< 			foreach ($query->result_array() as $row)
---
> 		foreach ($object->result_array() as $row)
427d452
< 	}
434,435c459
< 	 * @access	public
< 	 * @param	array
---
> 	 * @param	array	$data
438c462
< 	function _set_from_array($data, $set_heading = TRUE)
---
> 	protected function _set_from_array($data)
440c464
< 		if ( ! is_array($data) OR count($data) == 0)
---
> 		if ($this->auto_heading === TRUE && empty($this->heading))
442c466
< 			return FALSE;
---
> 			$this->heading = $this->_prep_args(array_shift($data));
445,453c469
< 		$i = 0;
< 		foreach ($data as $row)
< 		{
< 			// If a heading hasn't already been set we'll use the first row of the array as the heading
< 			if ($i == 0 AND count($data) > 1 AND count($this->heading) == 0 AND $set_heading == TRUE)
< 			{
< 				$this->heading = $this->_prep_args($row);
< 			}
< 			else
---
> 		foreach ($data as &$row)
457,459d472
< 
< 			$i++;
< 		}
467d479
< 	 * @access	private
470c482
< 	function _compile_template()
---
> 	protected function _compile_template()
472c484
< 		if ($this->template == NULL)
---
> 		if ($this->template === NULL)
493,494c505
< 	 * @access	private
< 	 * @return	void
---
> 	 * @return	array
496c507
< 	function _default_template()
---
> 	protected function _default_template()
528,531d537
< 
< 
< /* End of file Table.php */
< /* Location: ./system/libraries/Table.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Trackback.php opensourcepos/system/libraries/Trackback.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/trackback.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/trackback.html
31,36c53,97
< 	var $time_format	= 'local';
< 	var $charset		= 'UTF-8';
< 	var $data			= array('url' => '', 'title' => '', 'excerpt' => '', 'blog_name' => '', 'charset' => '');
< 	var $convert_ascii	= TRUE;
< 	var $response		= '';
< 	var $error_msg		= array();
---
> 	/**
> 	 * Character set
> 	 *
> 	 * @var	string
> 	 */
> 	public $charset = 'UTF-8';
> 
> 	/**
> 	 * Trackback data
> 	 *
> 	 * @var	array
> 	 */
> 	public $data = array(
> 		'url' => '',
> 		'title' => '',
> 		'excerpt' => '',
> 		'blog_name' => '',
> 		'charset' => ''
> 	);
> 
> 	/**
> 	 * Convert ASCII flag
> 	 *
> 	 * Whether to convert high-ASCII and MS Word
> 	 * characters to HTML entities.
> 	 *
> 	 * @var	bool
> 	 */
> 	public $convert_ascii = TRUE;
> 
> 	/**
> 	 * Response
> 	 *
> 	 * @var	string
> 	 */
> 	public $response = '';
> 
> 	/**
> 	 * Error messages list
> 	 *
> 	 * @var	string[]
> 	 */
> 	public $error_msg = array();
> 
> 	// --------------------------------------------------------------------
41c102
< 	 * @access	public
---
> 	 * @return	void
45c106
< 		log_message('debug', "Trackback Class Initialized");
---
> 		log_message('info', 'Trackback Class Initialized');
53d113
< 	 * @access	public
57c117
< 	function send($tb_data)
---
> 	public function send($tb_data)
76c136,137
< 				case 'ping_url'	: $$item = $this->extract_urls($tb_data[$item]);
---
> 				case 'ping_url':
> 					$$item = $this->extract_urls($tb_data[$item]);
78c139,140
< 				case 'excerpt'	: $$item = $this->limit_characters($this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
---
> 				case 'excerpt':
> 					$$item = $this->limit_characters($this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
80c142,143
< 				case 'url'		: $$item = str_replace('&#45;', '-', $this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
---
> 				case 'url':
> 					$$item = str_replace('&#45;', '-', $this->convert_xml(strip_tags(stripslashes($tb_data[$item]))));
82c145,146
< 				default			: $$item = $this->convert_xml(strip_tags(stripslashes($tb_data[$item])));
---
> 				default:
> 					$$item = $this->convert_xml(strip_tags(stripslashes($tb_data[$item])));
87,97c151
< 			if ($this->convert_ascii == TRUE)
< 			{
< 				if ($item == 'excerpt')
< 				{
< 					$$item = $this->convert_ascii($$item);
< 				}
< 				elseif ($item == 'title')
< 				{
< 					$$item = $this->convert_ascii($$item);
< 				}
< 				elseif ($item == 'blog_name')
---
> 			if ($this->convert_ascii === TRUE && in_array($item, array('excerpt', 'title', 'blog_name'), TRUE))
102d155
< 		}
105c158
< 		$charset = ( ! isset($tb_data['charset'])) ? $this->charset : $tb_data['charset'];
---
> 		$charset = isset($tb_data['charset']) ? $tb_data['charset'] : $this->charset;
107c160,161
< 		$data = "url=".rawurlencode($url)."&title=".rawurlencode($title)."&blog_name=".rawurlencode($blog_name)."&excerpt=".rawurlencode($excerpt)."&charset=".rawurlencode($charset);
---
> 		$data = 'url='.rawurlencode($url).'&title='.rawurlencode($title).'&blog_name='.rawurlencode($blog_name)
> 			.'&excerpt='.rawurlencode($excerpt).'&charset='.rawurlencode($charset);
115c169
< 				if ($this->process($url, $data) == FALSE)
---
> 				if ($this->process($url, $data) === FALSE)
135d188
< 	 * @access	public
138c191
< 	function receive()
---
> 	public function receive()
142c195
< 			if ( ! isset($_POST[$val]) OR $_POST[$val] == '')
---
> 			if (empty($_POST[$val]))
148c201
< 			$this->data['charset'] = ( ! isset($_POST['charset'])) ? 'auto' : strtoupper(trim($_POST['charset']));
---
> 			$this->data['charset'] = isset($_POST['charset']) ? strtoupper(trim($_POST['charset'])) : 'auto';
150c203,205
< 			if ($val != 'url' && function_exists('mb_convert_encoding'))
---
> 			if ($val !== 'url' && MB_ENABLED === TRUE)
> 			{
> 				if (MB_ENABLED === TRUE)
153a209,213
> 				elseif (ICONV_ENABLED === TRUE)
> 				{
> 					$_POST[$val] = @iconv($this->data['charset'], $this->charset.'//IGNORE', $_POST[$val]);
> 				}
> 			}
155c215
< 			$_POST[$val] = ($val != 'url') ? $this->convert_xml(strip_tags($_POST[$val])) : strip_tags($_POST[$val]);
---
> 			$_POST[$val] = ($val !== 'url') ? $this->convert_xml(strip_tags($_POST[$val])) : strip_tags($_POST[$val]);
157c217
< 			if ($val == 'excerpt')
---
> 			if ($val === 'excerpt')
177d236
< 	 * @access	public
181c240
< 	function send_error($message = 'Incomplete Information')
---
> 	public function send_error($message = 'Incomplete Information')
183,184c242
< 		echo "<?xml version=\"1.0\" encoding=\"utf-8\"?".">\n<response>\n<error>1</error>\n<message>".$message."</message>\n</response>";
< 		exit;
---
> 		exit('<?xml version="1.0" encoding="utf-8"?'.">\n<response>\n<error>1</error>\n<message>".$message."</message>\n</response>");
195d252
< 	 * @access	public
198c255
< 	function send_success()
---
> 	public function send_success()
200,201c257
< 		echo "<?xml version=\"1.0\" encoding=\"utf-8\"?".">\n<response>\n<error>0</error>\n</response>";
< 		exit;
---
> 		exit('<?xml version="1.0" encoding="utf-8"?'.">\n<response>\n<error>0</error>\n</response>");
209d264
< 	 * @access	public
213c268
< 	function data($item)
---
> 	public function data($item)
215c270
< 		return ( ! isset($this->data[$item])) ? '' : $this->data[$item];
---
> 		return isset($this->data[$item]) ? $this->data[$item] : '';
226d280
< 	 * @access	public
231c285
< 	function process($url, $data)
---
> 	public function process($url, $data)
243,245c297,298
< 		$ppath = ( ! isset($target['path'])) ? $url : $target['path'];
< 
< 		$path = (isset($target['query']) && $target['query'] != "") ? $ppath.'?'.$target['query'] : $ppath;
---
> 		$path = isset($target['path']) ? $target['path'] : $url;
> 		empty($target['query']) OR $path .= '?'.$target['query'];
250c303
< 			$data = "tb_id=".$id."&".$data;
---
> 			$data = 'tb_id='.$id.'&'.$data;
254,255c307,308
< 		fputs ($fp, "POST " . $path . " HTTP/1.0\r\n" );
< 		fputs ($fp, "Host: " . $target['host'] . "\r\n" );
---
> 		fputs($fp, 'POST '.$path." HTTP/1.0\r\n");
> 		fputs($fp, 'Host: '.$target['host']."\r\n");
257c310
< 		fputs ($fp, "Content-length: " . strlen($data) . "\r\n" );
---
> 		fputs($fp, 'Content-length: '.strlen($data)."\r\n");
262d314
< 		$this->response = "";
263a316
> 		$this->response = '';
270,275c323
< 
< 		if (stristr($this->response, '<error>0</error>') === FALSE)
< 		{
< 			$message = 'An unknown error was encountered';
< 
< 			if (preg_match("/<message>(.*?)<\/message>/is", $this->response, $match))
---
> 		if (stripos($this->response, '<error>0</error>') === FALSE)
277,279c325,327
< 				$message = trim($match['1']);
< 			}
< 
---
> 			$message = preg_match('/<message>(.*?)<\/message>/is', $this->response, $match)
> 				? trim($match[1])
> 				: 'An unknown error was encountered';
296d343
< 	 * @access	public
300,309c347
< 	function extract_urls($urls)
< 	{
< 		// Remove the pesky white space and replace with a comma.
< 		$urls = preg_replace("/\s*(\S+)\s*/", "\\1,", $urls);
< 
< 		// If they use commas get rid of the doubles.
< 		$urls = str_replace(",,", ",", $urls);
< 
< 		// Remove any comma that might be at the end
< 		if (substr($urls, -1) == ",")
---
> 	public function extract_urls($urls)
311,312c349,350
< 			$urls = substr($urls, 0, -1);
< 		}
---
> 		// Remove the pesky white space and replace with a comma, then replace doubles.
> 		$urls = str_replace(',,', ',', preg_replace('/\s*(\S+)\s*/', '\\1,', $urls));
314,318c352,353
< 		// Break into an array via commas
< 		$urls = preg_split('/[,]/', $urls);
< 
< 		// Removes duplicates
< 		$urls = array_unique($urls);
---
> 		// Break into an array via commas and remove duplicates
> 		$urls = array_unique(preg_split('/[,]/', rtrim($urls, ',')));
332d365
< 	 * @access	public
334c367
< 	 * @return	string
---
> 	 * @return	void
336c369
< 	function validate_url($url)
---
> 	public function validate_url(&$url)
340c373
< 		if (substr($url, 0, 4) != "http")
---
> 		if (strpos($url, 'http') !== 0)
342c375
< 			$url = "http://".$url;
---
> 			$url = 'http://'.$url;
351d383
< 	 * @access	public
355c387
< 	function get_id($url)
---
> 	public function get_id($url)
357c389
< 		$tb_id = "";
---
> 		$tb_id = '';
385,392c417
< 		if ( ! preg_match ("/^([0-9]+)$/", $tb_id))
< 		{
< 			return FALSE;
< 		}
< 		else
< 		{
< 			return $tb_id;
< 		}
---
> 		return ctype_digit((string) $tb_id) ? $tb_id : FALSE;
400d424
< 	 * @access	public
404c428
< 	function convert_xml($str)
---
> 	public function convert_xml($str)
408,409c432
< 		$str = preg_replace("/&#(\d+);/", "$temp\\1;", $str);
< 		$str = preg_replace("/&(\w+);/",  "$temp\\1;", $str);
---
> 		$str = preg_replace(array('/&#(\d+);/', '/&(\w+);/'), $temp.'\\1;', $str);
411,412c434,435
< 		$str = str_replace(array("&","<",">","\"", "'", "-"),
< 							array("&amp;", "&lt;", "&gt;", "&quot;", "&#39;", "&#45;"),
---
> 		$str = str_replace(array('&', '<', '>', '"', "'", '-'),
> 					array('&amp;', '&lt;', '&gt;', '&quot;', '&#39;', '&#45;'),
415,418c438
< 		$str = preg_replace("/$temp(\d+);/","&#\\1;",$str);
< 		$str = preg_replace("/$temp(\w+);/","&\\1;", $str);
< 
< 		return $str;
---
> 		return preg_replace(array('/'.$temp.'(\d+);/', '/'.$temp.'(\w+);/'), array('&#\\1;', '&\\1;'), $str);
428d447
< 	 * @access	public
430c449
< 	 * @param	integer
---
> 	 * @param	int
434c453
< 	function limit_characters($str, $n = 500, $end_char = '&#8230;')
---
> 	public function limit_characters($str, $n = 500, $end_char = '&#8230;')
441c460
< 		$str = preg_replace("/\s+/", ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
---
> 		$str = preg_replace('/\s+/', ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
448c467
< 		$out = "";
---
> 		$out = '';
454c473
< 				return trim($out).$end_char;
---
> 				return rtrim($out).$end_char;
467d485
< 	 * @access	public
471c489
< 	function convert_ascii($str)
---
> 	public function convert_ascii($str)
487c505
< 				if (count($temp) == 0)
---
> 				if (count($temp) === 0)
494c512
< 				if (count($temp) == $count)
---
> 				if (count($temp) === $count)
496c514,516
< 					$number = ($count == 3) ? (($temp['0'] % 16) * 4096) + (($temp['1'] % 64) * 64) + ($temp['2'] % 64) : (($temp['0'] % 32) * 64) + ($temp['1'] % 64);
---
> 					$number = ($count === 3)
> 						? (($temp[0] % 16) * 4096) + (($temp[1] % 64) * 64) + ($temp[2] % 64)
> 						: (($temp[0] % 32) * 64) + ($temp[1] % 64);
513d532
< 	 * @access	public
517c536
< 	function set_error($msg)
---
> 	public function set_error($msg)
528d546
< 	 * @access	public
533,536c551
< 	function display_errors($open = '<p>', $close = '</p>')
< 	{
< 		$str = '';
< 		foreach ($this->error_msg as $val)
---
> 	public function display_errors($open = '<p>', $close = '</p>')
538,541c553
< 			$str .= $open.$val.$close;
< 		}
< 
< 		return $str;
---
> 		return (count($this->error_msg) > 0) ? $open.implode($close.$open, $this->error_msg).$close : '';
545,548d556
< // END Trackback Class
< 
< /* End of file Trackback.php */
< /* Location: ./system/libraries/Trackback.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Typography.php opensourcepos/system/libraries/Typography.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
21,22c43,44
<  *
<  * @access		private
---
>  * @package		CodeIgniter
>  * @subpackage	Libraries
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/helpers/
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/typography.html
29,30c51,56
< 	// Block level elements that should not be wrapped inside <p> tags
< 	var $block_elements = 'address|blockquote|div|dl|fieldset|form|h\d|hr|noscript|object|ol|p|pre|script|table|ul';
---
> 	/**
> 	 * Block level elements that should not be wrapped inside <p> tags
> 	 *
> 	 * @var string
> 	 */
> 	public $block_elements = 'address|blockquote|div|dl|fieldset|form|h\d|hr|noscript|object|ol|p|pre|script|table|ul';
32,33c58,63
< 	// Elements that should not have <p> and <br /> tags within them.
< 	var $skip_elements	= 'p|pre|ol|ul|dl|object|table|h\d';
---
> 	/**
> 	 * Elements that should not have <p> and <br /> tags within them.
> 	 *
> 	 * @var string
> 	 */
> 	public $skip_elements	= 'p|pre|ol|ul|dl|object|table|h\d';
35,36c65,70
< 	// Tags we want the parser to completely ignore when splitting the string.
< 	var $inline_elements = 'a|abbr|acronym|b|bdo|big|br|button|cite|code|del|dfn|em|i|img|ins|input|label|map|kbd|q|samp|select|small|span|strong|sub|sup|textarea|tt|var';
---
> 	/**
> 	 * Tags we want the parser to completely ignore when splitting the string.
> 	 *
> 	 * @var string
> 	 */
> 	public $inline_elements = 'a|abbr|acronym|b|bdo|big|br|button|cite|code|del|dfn|em|i|img|ins|input|label|map|kbd|q|samp|select|small|span|strong|sub|sup|textarea|tt|var';
38,39c72,77
< 	// array of block level elements that require inner content to be within another block level element
< 	var $inner_block_required = array('blockquote');
---
> 	/**
> 	 * array of block level elements that require inner content to be within another block level element
> 	 *
> 	 * @var array
> 	 */
> 	public $inner_block_required = array('blockquote');
41,42c79,84
< 	// the last block element parsed
< 	var $last_block_element = '';
---
> 	/**
> 	 * the last block element parsed
> 	 *
> 	 * @var string
> 	 */
> 	public $last_block_element = '';
44,45c86,91
< 	// whether or not to protect quotes within { curly braces }
< 	var $protect_braced_quotes = FALSE;
---
> 	/**
> 	 * whether or not to protect quotes within { curly braces }
> 	 *
> 	 * @var bool
> 	 */
> 	public $protect_braced_quotes = FALSE;
58d103
< 	 * @access	public
63c108
< 	function auto_typography($str, $reduce_linebreaks = FALSE)
---
> 	public function auto_typography($str, $reduce_linebreaks = FALSE)
65c110
< 		if ($str == '')
---
> 		if ($str === '')
85,87c130
< 		if (strpos($str, '<!--') !== FALSE)
< 		{
< 			if (preg_match_all("#(<!\-\-.*?\-\->)#s", $str, $matches))
---
> 		if (strpos($str, '<!--') !== FALSE && preg_match_all('#(<!\-\-.*?\-\->)#s', $str, $matches))
95d137
< 		}
101c143
< 			$str = preg_replace_callback("#<pre.*?>.*?</pre>#si", array($this, '_protect_characters'), $str);
---
> 			$str = preg_replace_callback('#<pre.*?>.*?</pre>#si', array($this, '_protect_characters'), $str);
105c147
< 		$str = preg_replace_callback("#<.+?>#si", array($this, '_protect_characters'), $str);
---
> 		$str = preg_replace_callback('#<.+?>#si', array($this, '_protect_characters'), $str);
110c152
< 			$str = preg_replace_callback("#\{.+?\}#si", array($this, '_protect_characters'), $str);
---
> 			$str = preg_replace_callback('#\{.+?\}#si', array($this, '_protect_characters'), $str);
116c158
< 		$str = preg_replace("#<(/*)(".$this->inline_elements.")([ >])#i", "{@TAG}\\1\\2\\3", $str);
---
> 		$str = preg_replace('#<(/*)('.$this->inline_elements.')([ >])#i', '{@TAG}\\1\\2\\3', $str);
118,126c160,169
< 		// Split the string at every tag.  This expression creates an array with this prototype:
< 		//
< 		//	[array]
< 		//	{
< 		//		[0] = <opening tag>
< 		//		[1] = Content...
< 		//		[2] = <closing tag>
< 		//		Etc...
< 		//	}
---
> 		/* Split the string at every tag. This expression creates an array with this prototype:
> 		 *
> 		 *	[array]
> 		 *	{
> 		 *		[0] = <opening tag>
> 		 *		[1] = Content...
> 		 *		[2] = <closing tag>
> 		 *		Etc...
> 		 *	}
> 		 */
132,134d174
< 		$paragraph = FALSE;
< 		$current_chunk = 0;
< 		$total_chunks = count($chunks);
136c176
< 		foreach ($chunks as $chunk)
---
> 		for ($i = 0, $c = count($chunks) - 1; $i <= $c; $i++)
138,139d177
< 			$current_chunk++;
< 
142c180
< 			if (preg_match("#<(/*)(".$this->block_elements.").*?>#", $chunk, $match))
---
> 			if (preg_match('#<(/*)('.$this->block_elements.').*?>#', $chunks[$i], $match))
144c182
< 				if (preg_match("#".$this->skip_elements."#", $match[2]))
---
> 				if (preg_match('#'.$this->skip_elements.'#', $match[2]))
146c184
< 					$process =  ($match[1] == '/') ? TRUE : FALSE;
---
> 					$process = ($match[1] === '/');
149c187
< 				if ($match[1] == '')
---
> 				if ($match[1] === '')
154c192
< 				$str .= $chunk;
---
> 				$str .= $chunks[$i];
158c196
< 			if ($process == FALSE)
---
> 			if ($process === FALSE)
160c198
< 				$str .= $chunk;
---
> 				$str .= $chunks[$i];
165c203
< 			if ($current_chunk == $total_chunks)
---
> 			if ($i === $c)
167c205
< 				$chunk .= "\n";
---
> 				$chunks[$i] .= "\n";
171c209
< 			$str .= $this->_format_newlines($chunk);
---
> 			$str .= $this->_format_newlines($chunks[$i]);
175c213
< 		if ( ! preg_match("/^\s*<(?:".$this->block_elements.")/i", $str))
---
> 		if ( ! preg_match('/^\s*<(?:'.$this->block_elements.')/i', $str))
177c215
< 			$str = preg_replace("/^(.*?)<(".$this->block_elements.")/i", '<p>$1</p><$2', $str);
---
> 			$str = preg_replace('/^(.*?)<('.$this->block_elements.')/i', '<p>$1</p><$2', $str);
224c262
< 						"#</p></#"			=> "</p>\n</"
---
> 						'#</p></#'			=> "</p>\n</"
252d289
< 	 * @access	public
256c293
< 	function format_characters($str)
---
> 	public function format_characters($str)
316d352
< 	 * @access	public
320c356
< 	function _format_newlines($str)
---
> 	protected function _format_newlines($str)
322,327c358
< 		if ($str == '')
< 		{
< 			return $str;
< 		}
< 
< 		if (strpos($str, "\n") === FALSE  && ! in_array($this->last_block_element, $this->inner_block_required))
---
> 		if ($str === '' OR (strpos($str, "\n") === FALSE && ! in_array($this->last_block_element, $this->inner_block_required)))
336c367
< 		$str = preg_replace("/([^\n])(\n)([^\n])/", "\\1<br />\\2\\3", $str);
---
> 		$str = preg_replace("/([^\n])(\n)([^\n])/", '\\1<br />\\2\\3', $str);
339c370
< 		if ($str != "\n")
---
> 		if ($str !== "\n")
349,351c380
< 		$str = preg_replace("/<p><\/p>(.*)/", "\\1", $str, 1);
< 
< 		return $str;
---
> 		return preg_replace('/<p><\/p>(.*)/', '\\1', $str, 1);
364d392
< 	 * @access	public
368c396
< 	function _protect_characters($match)
---
> 	protected function _protect_characters($match)
378d405
< 	 * @access	public
382,388c409
< 	function nl2br_except_pre($str)
< 	{
< 		$ex = explode("pre>",$str);
< 		$ct = count($ex);
< 
< 		$newstr = "";
< 		for ($i = 0; $i < $ct; $i++)
---
> 	public function nl2br_except_pre($str)
390c411,412
< 			if (($i % 2) == 0)
---
> 		$newstr = '';
> 		for ($ex = explode('pre>', $str), $ct = count($ex), $i = 0; $i < $ct; $i++)
392,394c414,415
< 				$newstr .= nl2br($ex[$i]);
< 			}
< 			else
---
> 			$newstr .= (($i % 2) === 0) ? nl2br($ex[$i]) : $ex[$i];
> 			if ($ct - 1 !== $i)
396c417
< 				$newstr .= $ex[$i];
---
> 				$newstr .= 'pre>';
398,400d418
< 
< 			if ($ct - 1 != $i)
< 				$newstr .= "pre>";
407,410d424
< // END Typography Class
< 
< /* End of file Typography.php */
< /* Location: ./system/libraries/Typography.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Unit_test.php opensourcepos/system/libraries/Unit_test.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,11c30,34
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/uri.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/unit_testing.html
31,36c53,58
< 	var $active					= TRUE;
< 	var $results				= array();
< 	var $strict					= FALSE;
< 	var $_template				= NULL;
< 	var $_template_rows			= NULL;
< 	var $_test_items_visible	= array();
---
> 	/**
> 	 * Active flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $active = TRUE;
38,41c60,95
< 	public function __construct()
< 	{
< 		// These are the default items visible when a test is run.
< 		$this->_test_items_visible = array (
---
> 	/**
> 	 * Test results
> 	 *
> 	 * @var	array
> 	 */
> 	public $results = array();
> 
> 	/**
> 	 * Strict comparison flag
> 	 *
> 	 * Whether to use === or == when comparing
> 	 *
> 	 * @var	bool
> 	 */
> 	public $strict = FALSE;
> 
> 	/**
> 	 * Template
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_template = NULL;
> 
> 	/**
> 	 * Template rows
> 	 *
> 	 * @var	string
> 	 */
> 	protected $_template_rows = NULL;
> 
> 	/**
> 	 * List of visible test items
> 	 *
> 	 * @var	array
> 	 */
> 	protected $_test_items_visible	= array(
51c105,114
< 		log_message('debug', "Unit Testing Class Initialized");
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @return	void
> 	 */
> 	public function __construct()
> 	{
> 		log_message('info', 'Unit Testing Class Initialized');
61,62c124
< 	 * @access	public
< 	 * @param	array
---
> 	 * @param	array	$items
65c127
< 	function set_test_items($items = array())
---
> 	public function set_test_items($items)
67c129
< 		if ( ! empty($items) AND is_array($items))
---
> 		if ( ! empty($items) && is_array($items))
80,83c142,145
< 	 * @access	public
< 	 * @param	mixed
< 	 * @param	mixed
< 	 * @param	string
---
> 	 * @param	mixed	$test
> 	 * @param	mixed	$expected
> 	 * @param	string	$test_name
> 	 * @param	string	$notes
86c148
< 	function run($test, $expected = TRUE, $test_name = 'undefined', $notes = '')
---
> 	public function run($test, $expected = TRUE, $test_name = 'undefined', $notes = '')
88c150
< 		if ($this->active == FALSE)
---
> 		if ($this->active === FALSE)
93c155
< 		if (in_array($expected, array('is_object', 'is_string', 'is_bool', 'is_true', 'is_false', 'is_int', 'is_numeric', 'is_float', 'is_double', 'is_array', 'is_null'), TRUE))
---
> 		if (in_array($expected, array('is_object', 'is_string', 'is_bool', 'is_true', 'is_false', 'is_int', 'is_numeric', 'is_float', 'is_double', 'is_array', 'is_null', 'is_resource'), TRUE))
95,96c157,158
< 			$expected = str_replace('is_float', 'is_double', $expected);
< 			$result = ($expected($test)) ? TRUE : FALSE;
---
> 			$expected = str_replace('is_double', 'is_float', $expected);
> 			$result = $expected($test);
101,105c163
< 			if ($this->strict == TRUE)
< 				$result = ($test === $expected) ? TRUE : FALSE;
< 			else
< 				$result = ($test == $expected) ? TRUE : FALSE;
< 
---
> 			$result = ($this->strict === TRUE) ? ($test === $expected) : ($test == $expected);
111c169
< 		$report[] = array (
---
> 		$report = array (
123c181
< 		return($this->report($this->result($report)));
---
> 		return $this->report($this->result(array($report)));
133c191
< 	 * @access	public
---
> 	 * @param	array	 $result
136c194
< 	function report($result = array())
---
> 	public function report($result = array())
138c196
< 		if (count($result) == 0)
---
> 		if (count($result) === 0)
155c213
< 				if ($key == $CI->lang->line('ut_result'))
---
> 				if ($key === $CI->lang->line('ut_result'))
157c215
< 					if ($val == $CI->lang->line('ut_passed'))
---
> 					if ($val === $CI->lang->line('ut_passed'))
161c219
< 					elseif ($val == $CI->lang->line('ut_failed'))
---
> 					elseif ($val === $CI->lang->line('ut_failed'))
167,170c225
< 				$temp = $this->_template_rows;
< 				$temp = str_replace('{item}', $key, $temp);
< 				$temp = str_replace('{result}', $val, $temp);
< 				$table .= $temp;
---
> 				$table .= str_replace(array('{item}', '{result}'), array($key, $val), $this->_template_rows);
186,188c241,242
< 	 * @access	public
< 	 * @param	bool
< 	 * @return	null
---
> 	 * @param	bool	$state
> 	 * @return	void
190c244
< 	function use_strict($state = TRUE)
---
> 	public function use_strict($state = TRUE)
192c246
< 		$this->strict = ($state == FALSE) ? FALSE : TRUE;
---
> 		$this->strict = (bool) $state;
202d255
< 	 * @access	public
204c257
< 	 * @return	null
---
> 	 * @return	void
206c259
< 	function active($state = TRUE)
---
> 	public function active($state = TRUE)
208c261
< 		$this->active = ($state == FALSE) ? FALSE : TRUE;
---
> 		$this->active = (bool) $state;
218c271
< 	 * @access	public
---
> 	 * @param	array	$results
221c274
< 	function result($results = array())
---
> 	public function result($results = array())
226c279
< 		if (count($results) == 0)
---
> 		if (count($results) === 0)
241,253c294
< 
< 				if (is_array($val))
< 				{
< 					foreach ($val as $k => $v)
< 					{
< 						if (FALSE !== ($line = $CI->lang->line(strtolower('ut_'.$v))))
< 						{
< 							$v = $line;
< 						}
< 						$temp[$CI->lang->line('ut_'.$k)] = $v;
< 					}
< 				}
< 				else
---
> 				elseif (in_array($key, array('test_name', 'test_datatype', 'test_res_datatype', 'result'), TRUE))
255c296
< 					if (FALSE !== ($line = $CI->lang->line(strtolower('ut_'.$val))))
---
> 					if (FALSE !== ($line = $CI->lang->line(strtolower('ut_'.$val), FALSE)))
259d299
< 					$temp[$CI->lang->line('ut_'.$key)] = $val;
260a301,302
> 
> 				$temp[$CI->lang->line('ut_'.$key, FALSE)] = $val;
276d317
< 	 * @access	public
280c321
< 	function set_template($template)
---
> 	public function set_template($template)
292d332
< 	 * @access	private
295,297c335
< 	function _backtrace()
< 	{
< 		if (function_exists('debug_backtrace'))
---
> 	protected function _backtrace()
300,306c338,341
< 
< 			$file = ( ! isset($back['1']['file'])) ? '' : $back['1']['file'];
< 			$line = ( ! isset($back['1']['line'])) ? '' : $back['1']['line'];
< 
< 			return array('file' => $file, 'line' => $line);
< 		}
< 		return array('file' => 'Unknown', 'line' => 'Unknown');
---
> 		return array(
> 			'file' => (isset($back[1]['file']) ? $back[1]['file'] : ''),
> 			'line' => (isset($back[1]['line']) ? $back[1]['line'] : '')
> 		);
314d348
< 	 * @access	private
317c351
< 	function _default_template()
---
> 	protected function _default_template()
319,326c353,356
< 		$this->_template = "\n".'<table style="width:100%; font-size:small; margin:10px 0; border-collapse:collapse; border:1px solid #CCC;">';
< 		$this->_template .= '{rows}';
< 		$this->_template .= "\n".'</table>';
< 
< 		$this->_template_rows = "\n\t".'<tr>';
< 		$this->_template_rows .= "\n\t\t".'<th style="text-align: left; border-bottom:1px solid #CCC;">{item}</th>';
< 		$this->_template_rows .= "\n\t\t".'<td style="border-bottom:1px solid #CCC;">{result}</td>';
< 		$this->_template_rows .= "\n\t".'</tr>';
---
> 		$this->_template = "\n".'<table style="width:100%; font-size:small; margin:10px 0; border-collapse:collapse; border:1px solid #CCC;">{rows}'."\n</table>";
> 
> 		$this->_template_rows = "\n\t<tr>\n\t\t".'<th style="text-align: left; border-bottom:1px solid #CCC;">{item}</th>'
> 					."\n\t\t".'<td style="border-bottom:1px solid #CCC;">{result}</td>'."\n\t</tr>";
336d365
< 	 * @access	private
339c368
< 	function _parse_template()
---
> 	protected function _parse_template()
341c370
< 		if ( ! is_null($this->_template_rows))
---
> 		if ($this->_template_rows !== NULL)
346,352c375
< 		if (is_null($this->_template))
< 		{
< 			$this->_default_template();
< 			return;
< 		}
< 
< 		if ( ! preg_match("/\{rows\}(.*?)\{\/rows\}/si", $this->_template, $match))
---
> 		if ($this->_template === NULL OR ! preg_match('/\{rows\}(.*?)\{\/rows\}/si', $this->_template, $match))
358,359c381,382
< 		$this->_template_rows = $match['1'];
< 		$this->_template = str_replace($match['0'], '{rows}', $this->_template);
---
> 		$this->_template_rows = $match[1];
> 		$this->_template = str_replace($match[0], '{rows}', $this->_template);
363d385
< // END Unit_test Class
366c388
<  * Helper functions to test boolean true/false
---
>  * Helper function to test boolean TRUE
368,369c390
<  *
<  * @access	private
---
>  * @param	mixed	$test
374c395
< 	return (is_bool($test) AND $test === TRUE) ? TRUE : FALSE;
---
> 	return ($test === TRUE);
375a397,403
> 
> /**
>  * Helper function to test boolean FALSE
>  *
>  * @param	mixed	$test
>  * @return	bool
>  */
378c406
< 	return (is_bool($test) AND $test === FALSE) ? TRUE : FALSE;
---
> 	return ($test === FALSE);
380,383d407
< 
< 
< /* End of file Unit_test.php */
< /* Location: ./system/libraries/Unit_test.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Upload.php opensourcepos/system/libraries/Upload.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
24,25c46,47
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/file_uploading.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/file_uploading.html
28a51,55
> 	/**
> 	 * Maximum file size
> 	 *
> 	 * @var	int
> 	 */
29a57,62
> 
> 	/**
> 	 * Maximum image width
> 	 *
> 	 * @var	int
> 	 */
30a64,69
> 
> 	/**
> 	 * Maximum image height
> 	 *
> 	 * @var	int
> 	 */
31a71,90
> 
> 	/**
> 	 * Minimum image width
> 	 *
> 	 * @var	int
> 	 */
> 	public $min_width = 0;
> 
> 	/**
> 	 * Minimum image height
> 	 *
> 	 * @var	int
> 	 */
> 	public $min_height = 0;
> 
> 	/**
> 	 * Maximum filename length
> 	 *
> 	 * @var	int
> 	 */
33,40c92,167
< 	public $allowed_types			= "";
< 	public $file_temp				= "";
< 	public $file_name				= "";
< 	public $orig_name				= "";
< 	public $file_type				= "";
< 	public $file_size				= "";
< 	public $file_ext				= "";
< 	public $upload_path				= "";
---
> 
> 	/**
> 	 * Maximum duplicate filename increment ID
> 	 *
> 	 * @var	int
> 	 */
> 	public $max_filename_increment = 100;
> 
> 	/**
> 	 * Allowed file types
> 	 *
> 	 * @var	string
> 	 */
> 	public $allowed_types = '';
> 
> 	/**
> 	 * Temporary filename
> 	 *
> 	 * @var	string
> 	 */
> 	public $file_temp = '';
> 
> 	/**
> 	 * Filename
> 	 *
> 	 * @var	string
> 	 */
> 	public $file_name = '';
> 
> 	/**
> 	 * Original filename
> 	 *
> 	 * @var	string
> 	 */
> 	public $orig_name = '';
> 
> 	/**
> 	 * File type
> 	 *
> 	 * @var	string
> 	 */
> 	public $file_type = '';
> 
> 	/**
> 	 * File size
> 	 *
> 	 * @var	int
> 	 */
> 	public $file_size = NULL;
> 
> 	/**
> 	 * Filename extension
> 	 *
> 	 * @var	string
> 	 */
> 	public $file_ext = '';
> 
> 	/**
> 	 * Force filename extension to lowercase
> 	 *
> 	 * @var	string
> 	 */
> 	public $file_ext_tolower = FALSE;
> 
> 	/**
> 	 * Upload path
> 	 *
> 	 * @var	string
> 	 */
> 	public $upload_path = '';
> 
> 	/**
> 	 * Overwrite flag
> 	 *
> 	 * @var	bool
> 	 */
41a169,174
> 
> 	/**
> 	 * Obfuscate filename flag
> 	 *
> 	 * @var	bool
> 	 */
42a176,181
> 
> 	/**
> 	 * Is image flag
> 	 *
> 	 * @var	bool
> 	 */
44,45c183,202
< 	public $image_width				= '';
< 	public $image_height			= '';
---
> 
> 	/**
> 	 * Image width
> 	 *
> 	 * @var	int
> 	 */
> 	public $image_width = NULL;
> 
> 	/**
> 	 * Image height
> 	 *
> 	 * @var	int
> 	 */
> 	public $image_height = NULL;
> 
> 	/**
> 	 * Image type
> 	 *
> 	 * @var	string
> 	 */
46a204,209
> 
> 	/**
> 	 * Image size string
> 	 *
> 	 * @var	string
> 	 */
47a211,216
> 
> 	/**
> 	 * Error messages list
> 	 *
> 	 * @var	array
> 	 */
49c218,223
< 	public $mimes					= array();
---
> 
> 	/**
> 	 * Remove spaces flag
> 	 *
> 	 * @var	bool
> 	 */
50a225,237
> 
> 	/**
> 	 * MIME detection flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $detect_mime = TRUE;
> 
> 	/**
> 	 * XSS filter flag
> 	 *
> 	 * @var	bool
> 	 */
52c239,258
< 	public $temp_prefix				= "temp_file_";
---
> 
> 	/**
> 	 * Apache mod_mime fix flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $mod_mime_fix = TRUE;
> 
> 	/**
> 	 * Temporary filename prefix
> 	 *
> 	 * @var	string
> 	 */
> 	public $temp_prefix = 'temp_file_';
> 
> 	/**
> 	 * Filename sent by the client
> 	 *
> 	 * @var	bool
> 	 */
54a261,267
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Filename override
> 	 *
> 	 * @var	string
> 	 */
57a271,286
> 	 * MIME types list
> 	 *
> 	 * @var	array
> 	 */
> 	protected $_mimes = array();
> 
> 	/**
> 	 * CI Singleton
> 	 *
> 	 * @var	object
> 	 */
> 	protected $_CI;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
60c289,290
< 	 * @access	public
---
> 	 * @param	array	$props
> 	 * @return	void
62,64c292
< 	public function __construct($props = array())
< 	{
< 		if (count($props) > 0)
---
> 	public function __construct($config = array())
66,67c294,297
< 			$this->initialize($props);
< 		}
---
> 		empty($config) OR $this->initialize($config, FALSE);
> 
> 		$this->_mimes =& get_mimes();
> 		$this->_CI =& get_instance();
69c299
< 		log_message('debug', "Upload Class Initialized");
---
> 		log_message('info', 'Upload Class Initialized');
77,78c307,309
< 	 * @param	array
< 	 * @return	void
---
> 	 * @param	array	$config
> 	 * @param	bool	$reset
> 	 * @return	CI_Upload
80c311
< 	public function initialize($config = array())
---
> 	public function initialize(array $config = array(), $reset = TRUE)
82,109c313
< 		$defaults = array(
< 							'max_size'			=> 0,
< 							'max_width'			=> 0,
< 							'max_height'		=> 0,
< 							'max_filename'		=> 0,
< 							'allowed_types'		=> "",
< 							'file_temp'			=> "",
< 							'file_name'			=> "",
< 							'orig_name'			=> "",
< 							'file_type'			=> "",
< 							'file_size'			=> "",
< 							'file_ext'			=> "",
< 							'upload_path'		=> "",
< 							'overwrite'			=> FALSE,
< 							'encrypt_name'		=> FALSE,
< 							'is_image'			=> FALSE,
< 							'image_width'		=> '',
< 							'image_height'		=> '',
< 							'image_type'		=> '',
< 							'image_size_str'	=> '',
< 							'error_msg'			=> array(),
< 							'mimes'				=> array(),
< 							'remove_spaces'		=> TRUE,
< 							'xss_clean'			=> FALSE,
< 							'temp_prefix'		=> "temp_file_",
< 							'client_name'		=> ''
< 						);
< 
---
> 		$reflection = new ReflectionClass($this);
111c315,320
< 		foreach ($defaults as $key => $val)
---
> 		if ($reset === TRUE)
> 		{
> 			$defaults = $reflection->getDefaultProperties();
> 			foreach (array_keys($defaults) as $key)
> 			{
> 				if ($key[0] === '_')
112a322,324
> 					continue;
> 				}
> 
115,116c327
< 				$method = 'set_'.$key;
< 				if (method_exists($this, $method))
---
> 					if ($reflection->hasMethod('set_'.$key))
118c329
< 					$this->$method($config[$key]);
---
> 						$this->{'set_'.$key}($config[$key]);
127c338,356
< 				$this->$key = $val;
---
> 					$this->$key = $defaults[$key];
> 				}
> 			}
> 		}
> 		else
> 		{
> 			foreach ($config as $key => &$value)
> 			{
> 				if ($key[0] !== '_' && $reflection->hasProperty($key))
> 				{
> 					if ($reflection->hasMethod('set_'.$key))
> 					{
> 						$this->{'set_'.$key}($value);
> 					}
> 					else
> 					{
> 						$this->$key = $value;
> 					}
> 				}
133a363
> 		return $this;
140a371
> 	 * @param	string	$field
147c377,388
< 		if ( ! isset($_FILES[$field]))
---
> 		if (isset($_FILES[$field]))
> 		{
> 			$_file = $_FILES[$field];
> 		}
> 		// Does the field name contain array notation?
> 		elseif (($c = preg_match_all('/(?:^[^\[]+)|\[[^]]*\]/', $field, $matches)) > 1)
> 		{
> 			$_file = $_FILES;
> 			for ($i = 0; $i < $c; $i++)
> 			{
> 				// We can't track numeric iterations, only full field names are accepted
> 				if (($field = trim($matches[0][$i], '[]')) === '' OR ! isset($_file[$field]))
149c390,400
< 			$this->set_error('upload_no_file_selected');
---
> 					$_file = NULL;
> 					break;
> 				}
> 
> 				$_file = $_file[$field];
> 			}
> 		}
> 
> 		if ( ! isset($_file))
> 		{
> 			$this->set_error('upload_no_file_selected', 'debug');
161c412
< 		if ( ! is_uploaded_file($_FILES[$field]['tmp_name']))
---
> 		if ( ! is_uploaded_file($_file['tmp_name']))
163c414
< 			$error = ( ! isset($_FILES[$field]['error'])) ? 4 : $_FILES[$field]['error'];
---
> 			$error = isset($_file['error']) ? $_file['error'] : 4;
167,168c418,419
< 				case 1:	// UPLOAD_ERR_INI_SIZE
< 					$this->set_error('upload_file_exceeds_limit');
---
> 				case UPLOAD_ERR_INI_SIZE:
> 					$this->set_error('upload_file_exceeds_limit', 'info');
170,171c421,422
< 				case 2: // UPLOAD_ERR_FORM_SIZE
< 					$this->set_error('upload_file_exceeds_form_limit');
---
> 				case UPLOAD_ERR_FORM_SIZE:
> 					$this->set_error('upload_file_exceeds_form_limit', 'info');
173,174c424,425
< 				case 3: // UPLOAD_ERR_PARTIAL
< 					$this->set_error('upload_file_partial');
---
> 				case UPLOAD_ERR_PARTIAL:
> 					$this->set_error('upload_file_partial', 'debug');
176,177c427,428
< 				case 4: // UPLOAD_ERR_NO_FILE
< 					$this->set_error('upload_no_file_selected');
---
> 				case UPLOAD_ERR_NO_FILE:
> 					$this->set_error('upload_no_file_selected', 'debug');
179,180c430,431
< 				case 6: // UPLOAD_ERR_NO_TMP_DIR
< 					$this->set_error('upload_no_temp_directory');
---
> 				case UPLOAD_ERR_NO_TMP_DIR:
> 					$this->set_error('upload_no_temp_directory', 'error');
182,183c433,434
< 				case 7: // UPLOAD_ERR_CANT_WRITE
< 					$this->set_error('upload_unable_to_write_file');
---
> 				case UPLOAD_ERR_CANT_WRITE:
> 					$this->set_error('upload_unable_to_write_file', 'error');
185,186c436,437
< 				case 8: // UPLOAD_ERR_EXTENSION
< 					$this->set_error('upload_stopped_by_extension');
---
> 				case UPLOAD_ERR_EXTENSION:
> 					$this->set_error('upload_stopped_by_extension', 'debug');
188c439,440
< 				default :   $this->set_error('upload_no_file_selected');
---
> 				default:
> 					$this->set_error('upload_no_file_selected', 'debug');
197,200c448,457
< 		$this->file_temp = $_FILES[$field]['tmp_name'];
< 		$this->file_size = $_FILES[$field]['size'];
< 		$this->_file_mime_type($_FILES[$field]);
< 		$this->file_type = preg_replace("/^(.+?);.*$/", "\\1", $this->file_type);
---
> 		$this->file_temp = $_file['tmp_name'];
> 		$this->file_size = $_file['size'];
> 
> 		// Skip MIME type detection?
> 		if ($this->detect_mime !== FALSE)
> 		{
> 			$this->_file_mime_type($_file);
> 		}
> 
> 		$this->file_type = preg_replace('/^(.+?);.*$/', '\\1', $this->file_type);
202c459
< 		$this->file_name = $this->_prep_filename($_FILES[$field]['name']);
---
> 		$this->file_name = $this->_prep_filename($_file['name']);
209c466
< 			$this->set_error('upload_invalid_filetype');
---
> 			$this->set_error('upload_invalid_filetype', 'debug');
214c471
< 		if ($this->_file_name_override != '')
---
> 		if ($this->_file_name_override !== '')
223,224d479
< 
< 			// An extension was provided, lets have it!
226a482
> 				// An extension was provided, let's have it!
232c488
< 				$this->set_error('upload_invalid_filetype');
---
> 				$this->set_error('upload_invalid_filetype', 'debug');
246c502
< 			$this->set_error('upload_invalid_filesize');
---
> 			$this->set_error('upload_invalid_filesize', 'info');
251c507
< 		// Note: This can fail if the server has an open_basdir restriction.
---
> 		// Note: This can fail if the server has an open_basedir restriction.
254c510
< 			$this->set_error('upload_invalid_dimensions');
---
> 			$this->set_error('upload_invalid_dimensions', 'info');
259c515
< 		$this->file_name = $this->clean_file_name($this->file_name);
---
> 		$this->file_name = $this->_CI->security->sanitize_filename($this->file_name);
268c524,529
< 		if ($this->remove_spaces == TRUE)
---
> 		if ($this->remove_spaces === TRUE)
> 		{
> 			$this->file_name = preg_replace('/\s+/', '_', $this->file_name);
> 		}
> 
> 		if ($this->file_ext_tolower && ($ext_length = strlen($this->file_ext)))
270c531,532
< 			$this->file_name = preg_replace("/\s+/", "_", $this->file_name);
---
> 			// file_ext was previously lower-cased by a get_extension() call
> 			$this->file_name = substr($this->file_name, 0, -$ext_length).$this->file_ext;
280,285c542
< 
< 		if ($this->overwrite == FALSE)
< 		{
< 			$this->file_name = $this->set_filename($this->upload_path, $this->file_name);
< 
< 			if ($this->file_name === FALSE)
---
> 		if (FALSE === ($this->file_name = $this->set_filename($this->upload_path, $this->file_name)))
289d545
< 		}
297,299c553
< 		if ($this->xss_clean)
< 		{
< 			if ($this->do_xss_clean() === FALSE)
---
> 		if ($this->xss_clean && $this->do_xss_clean() === FALSE)
301c555
< 				$this->set_error('upload_unable_to_write_file');
---
> 			$this->set_error('upload_unable_to_write_file', 'error');
304d557
< 		}
317c570
< 				$this->set_error('upload_destination_error');
---
> 				$this->set_error('upload_destination_error', 'error');
341c594,595
< 	 * @return	array
---
> 	 * @param	string	$index
> 	 * @return	mixed
343c597
< 	public function data()
---
> 	public function data($index = NULL)
345c599
< 		return array (
---
> 		$data = array(
360a615,621
> 
> 		if ( ! empty($index))
> 		{
> 			return isset($data[$index]) ? $data[$index] : NULL;
> 		}
> 
> 		return $data;
368,369c629,630
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$path
> 	 * @return	CI_Upload
374a636
> 		return $this;
386,387c648,649
< 	 * @param	string
< 	 * @param	string
---
> 	 * @param	string	$path
> 	 * @param	string	$filename
392c654
< 		if ($this->encrypt_name == TRUE)
---
> 		if ($this->encrypt_name === TRUE)
394d655
< 			mt_srand();
398c659
< 		if ( ! file_exists($path.$filename))
---
> 		if ($this->overwrite === TRUE OR ! file_exists($path.$filename))
406c667
< 		for ($i = 1; $i < 100; $i++)
---
> 		for ($i = 1; $i < $this->max_filename_increment; $i++)
415c676
< 		if ($new_filename == '')
---
> 		if ($new_filename === '')
417c678
< 			$this->set_error('upload_bad_filename');
---
> 			$this->set_error('upload_bad_filename', 'debug');
431,432c692,693
< 	 * @param	integer
< 	 * @return	void
---
> 	 * @param	int	$n
> 	 * @return	CI_Upload
436c697,714
< 		$this->max_size = ((int) $n < 0) ? 0: (int) $n;
---
> 		$this->max_size = ($n < 0) ? 0 : (int) $n;
> 		return $this;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Set Maximum File Size
> 	 *
> 	 * An internal alias to set_max_filesize() to help with configuration
> 	 * as initialize() will look for a set_<property_name>() method ...
> 	 *
> 	 * @param	int	$n
> 	 * @return	CI_Upload
> 	 */
> 	protected function set_max_size($n)
> 	{
> 		return $this->set_max_filesize($n);
444,445c722,723
< 	 * @param	integer
< 	 * @return	void
---
> 	 * @param	int	$n
> 	 * @return	CI_Upload
449c727,728
< 		$this->max_filename = ((int) $n < 0) ? 0: (int) $n;
---
> 		$this->max_filename = ($n < 0) ? 0 : (int) $n;
> 		return $this;
457,458c736,737
< 	 * @param	integer
< 	 * @return	void
---
> 	 * @param	int	$n
> 	 * @return	CI_Upload
462c741,742
< 		$this->max_width = ((int) $n < 0) ? 0: (int) $n;
---
> 		$this->max_width = ($n < 0) ? 0 : (int) $n;
> 		return $this;
470,471c750,751
< 	 * @param	integer
< 	 * @return	void
---
> 	 * @param	int	$n
> 	 * @return	CI_Upload
475c755,756
< 		$this->max_height = ((int) $n < 0) ? 0: (int) $n;
---
> 		$this->max_height = ($n < 0) ? 0 : (int) $n;
> 		return $this;
481c762
< 	 * Set Allowed File Types
---
> 	 * Set minimum image width
483,484c764,765
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	int	$n
> 	 * @return	CI_Upload
486c767
< 	public function set_allowed_types($types)
---
> 	public function set_min_width($n)
488c769,781
< 		if ( ! is_array($types) && $types == '*')
---
> 		$this->min_width = ($n < 0) ? 0 : (int) $n;
> 		return $this;
> 	}
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Set minimum image height
> 	 *
> 	 * @param	int	$n
> 	 * @return	CI_Upload
> 	 */
> 	public function set_min_height($n)
490,491c783,784
< 			$this->allowed_types = '*';
< 			return;
---
> 		$this->min_height = ($n < 0) ? 0 : (int) $n;
> 		return $this;
493c786,800
< 		$this->allowed_types = explode('|', $types);
---
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Set Allowed File Types
> 	 *
> 	 * @param	mixed	$types
> 	 * @return	CI_Upload
> 	 */
> 	public function set_allowed_types($types)
> 	{
> 		$this->allowed_types = (is_array($types) OR $types === '*')
> 			? $types
> 			: explode('|', $types);
> 		return $this;
503,504c810,811
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$path
> 	 * @return	CI_Upload
508,513c815
< 		if ( ! $this->is_image())
< 		{
< 			return;
< 		}
< 
< 		if (function_exists('getimagesize'))
---
> 		if ($this->is_image() && function_exists('getimagesize'))
519,522c821,824
< 				$this->image_width		= $D['0'];
< 				$this->image_height		= $D['1'];
< 				$this->image_type		= ( ! isset($types[$D['2']])) ? 'unknown' : $types[$D['2']];
< 				$this->image_size_str	= $D['3'];  // string containing height and width
---
> 				$this->image_width	= $D[0];
> 				$this->image_height	= $D[1];
> 				$this->image_type	= isset($types[$D[2]]) ? $types[$D[2]] : 'unknown';
> 				$this->image_size_str	= $D[3]; // string containing height and width
524a827,828
> 
> 		return $this;
535,536c839,840
< 	 * @param	bool
< 	 * @return	void
---
> 	 * @param	bool	$flag
> 	 * @return	CI_Upload
540c844,845
< 		$this->xss_clean = ($flag == TRUE) ? TRUE : FALSE;
---
> 		$this->xss_clean = ($flag === TRUE);
> 		return $this;
562,563c867
< 
< 		if (in_array($this->file_type, $jpeg_mimes))
---
> 		elseif (in_array($this->file_type, $jpeg_mimes))
568,572c872
< 		$img_mimes = array(
< 							'image/gif',
< 							'image/jpeg',
< 							'image/png',
< 						);
---
> 		$img_mimes = array('image/gif',	'image/jpeg', 'image/png');
574c874
< 		return (in_array($this->file_type, $img_mimes, TRUE)) ? TRUE : FALSE;
---
> 		return in_array($this->file_type, $img_mimes, TRUE);
581a882
> 	 * @param	bool	$ignore_mime
586c887
< 		if ($this->allowed_types == '*')
---
> 		if ($this->allowed_types === '*')
591c892
< 		if (count($this->allowed_types) == 0 OR ! is_array($this->allowed_types))
---
> 		if (empty($this->allowed_types) OR ! is_array($this->allowed_types))
593c894
< 			$this->set_error('upload_no_file_types');
---
> 			$this->set_error('upload_no_file_types', 'debug');
599c900
< 		if ( ! in_array($ext, $this->allowed_types))
---
> 		if ( ! in_array($ext, $this->allowed_types, TRUE))
605,609c906
< 		$image_types = array('gif', 'jpg', 'jpeg', 'png', 'jpe');
< 
< 		if (in_array($ext, $image_types))
< 		{
< 			if (getimagesize($this->file_temp) === FALSE)
---
> 		if (in_array($ext, array('gif', 'jpg', 'jpeg', 'jpe', 'png'), TRUE) && @getimagesize($this->file_temp) === FALSE)
613d909
< 		}
620,629c916
< 		$mime = $this->mimes_types($ext);
< 
< 		if (is_array($mime))
< 		{
< 			if (in_array($this->file_type, $mime, TRUE))
< 			{
< 				return TRUE;
< 			}
< 		}
< 		elseif ($mime == $this->file_type)
---
> 		if (isset($this->_mimes[$ext]))
631c918,920
< 				return TRUE;
---
> 			return is_array($this->_mimes[$ext])
> 				? in_array($this->file_type, $this->_mimes[$ext], TRUE)
> 				: ($this->_mimes[$ext] === $this->file_type);
646,653c935
< 		if ($this->max_size != 0  AND  $this->file_size > $this->max_size)
< 		{
< 			return FALSE;
< 		}
< 		else
< 		{
< 			return TRUE;
< 		}
---
> 		return ($this->max_size === 0 OR $this->max_size > $this->file_size);
674c956
< 			if ($this->max_width > 0 AND $D['0'] > $this->max_width)
---
> 			if ($this->max_width > 0 && $D[0] > $this->max_width)
679c961
< 			if ($this->max_height > 0 AND $D['1'] > $this->max_height)
---
> 			if ($this->max_height > 0 && $D[1] > $this->max_height)
684c966,974
< 			return TRUE;
---
> 			if ($this->min_width > 0 && $D[0] < $this->min_width)
> 			{
> 				return FALSE;
> 			}
> 
> 			if ($this->min_height > 0 && $D[1] < $this->min_height)
> 			{
> 				return FALSE;
> 			}
697d986
< 	 *
702c991
< 		if ($this->upload_path == '')
---
> 		if ($this->upload_path === '')
704c993
< 			$this->set_error('upload_no_filepath');
---
> 			$this->set_error('upload_no_filepath', 'error');
708c997
< 		if (function_exists('realpath') AND @realpath($this->upload_path) !== FALSE)
---
> 		if (realpath($this->upload_path) !== FALSE)
710c999
< 			$this->upload_path = str_replace("\\", "/", realpath($this->upload_path));
---
> 			$this->upload_path = str_replace('\\', '/', realpath($this->upload_path));
713c1002
< 		if ( ! @is_dir($this->upload_path))
---
> 		if ( ! is_dir($this->upload_path))
715c1004
< 			$this->set_error('upload_no_filepath');
---
> 			$this->set_error('upload_no_filepath', 'error');
721c1010
< 			$this->set_error('upload_not_writable');
---
> 			$this->set_error('upload_not_writable', 'error');
725c1014
< 		$this->upload_path = preg_replace("/(.+?)\/*$/", "\\1/",  $this->upload_path);
---
> 		$this->upload_path = preg_replace('/(.+?)\/*$/', '\\1/',  $this->upload_path);
734c1023
< 	 * @param	string
---
> 	 * @param	string	$filename
740,741d1028
< 		return '.'.end($x);
< 	}
743,751c1030
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * Clean the file name for security
< 	 *
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	public function clean_file_name($filename)
---
> 		if (count($x) === 1)
753,782c1032,1033
< 		$bad = array(
< 						"<!--",
< 						"-->",
< 						"'",
< 						"<",
< 						">",
< 						'"',
< 						'&',
< 						'$',
< 						'=',
< 						';',
< 						'?',
< 						'/',
< 						"%20",
< 						"%22",
< 						"%3c",		// <
< 						"%253c",	// <
< 						"%3e",		// >
< 						"%0e",		// >
< 						"%28",		// (
< 						"%29",		// )
< 						"%2528",	// (
< 						"%26",		// &
< 						"%24",		// $
< 						"%3f",		// ?
< 						"%3b",		// ;
< 						"%3d"		// =
< 					);
< 
< 		$filename = str_replace($bad, '', $filename);
---
> 			return '';
> 		}
784c1035,1036
< 		return stripslashes($filename);
---
> 		$ext = ($this->file_ext_tolower) ? strtolower(end($x)) : end($x);
> 		return '.'.$ext;
792c1044,1045
< 	 * @param	string
---
> 	 * @param	string	$filename
> 	 * @param	int	$length
822c1075
< 	 * @return	void
---
> 	 * @return	string
833c1086
< 		if (function_exists('memory_get_usage') && memory_get_usage() && ini_get('memory_limit') != '')
---
> 		if (memory_get_usage() && ($memory_limit = ini_get('memory_limit')))
835c1088
< 			$current = ini_get('memory_limit') * 1024 * 1024;
---
> 			$memory_limit *= 1024 * 1024;
841c1094
< 			$new_memory = number_format(ceil(filesize($file) + $current), 0, '.', '');
---
> 			$memory_limit = number_format(ceil(filesize($file) + $memory_limit), 0, '.', '');
843c1096
< 			ini_set('memory_limit', $new_memory); // When an integer is used, the value is measured in bytes. - PHP.net
---
> 			ini_set('memory_limit', $memory_limit); // When an integer is used, the value is measured in bytes. - PHP.net
867,874c1120,1121
< 			if ( ! preg_match('/<(a|body|head|html|img|plaintext|pre|script|table|title)[\s>]/i', $opening_bytes))
< 			{
< 				return TRUE; // its an image, no "triggers" detected in the first 256 bytes, we're good
< 			}
< 			else
< 			{
< 				return FALSE;
< 			}
---
> 			// if it's an image or no "triggers" detected in the first 256 bytes - we're good
> 			return ! preg_match('/<(a|body|head|html|img|plaintext|pre|script|table|title)[\s>]/i', $opening_bytes);
882,883c1129
< 		$CI =& get_instance();
< 		return $CI->security->xss_clean($data, TRUE);
---
> 		return $this->_CI->security->xss_clean($data, TRUE);
891,892c1137,1138
< 	 * @param	string
< 	 * @return	void
---
> 	 * @param	string	$msg
> 	 * @return	CI_Upload
894c1140
< 	public function set_error($msg)
---
> 	public function set_error($msg, $log_level = 'error')
896,897c1142
< 		$CI =& get_instance();
< 		$CI->lang->load('upload');
---
> 		$this->_CI->lang->load('upload');
899,900c1144
< 		if (is_array($msg))
< 		{
---
> 		is_array($msg) OR $msg = array($msg);
903,910c1147
< 				$msg = ($CI->lang->line($val) == FALSE) ? $val : $CI->lang->line($val);
< 				$this->error_msg[] = $msg;
< 				log_message('error', $msg);
< 			}
< 		}
< 		else
< 		{
< 			$msg = ($CI->lang->line($msg) == FALSE) ? $msg : $CI->lang->line($msg);
---
> 			$msg = ($this->_CI->lang->line($val) === FALSE) ? $val : $this->_CI->lang->line($val);
912c1149
< 			log_message('error', $msg);
---
> 			log_message($log_level, $msg);
913a1151,1152
> 
> 		return $this;
921,922c1160,1161
< 	 * @param	string
< 	 * @param	string
---
> 	 * @param	string	$open
> 	 * @param	string	$close
927,970c1166
< 		$str = '';
< 		foreach ($this->error_msg as $val)
< 		{
< 			$str .= $open.$val.$close;
< 		}
< 
< 		return $str;
< 	}
< 
< 	// --------------------------------------------------------------------
< 
< 	/**
< 	 * List of Mime Types
< 	 *
< 	 * This is a list of mime types.  We use it to validate
< 	 * the "allowed types" set by the developer
< 	 *
< 	 * @param	string
< 	 * @return	string
< 	 */
< 	public function mimes_types($mime)
< 	{
< 		global $mimes;
< 
< 		if (count($this->mimes) == 0)
< 		{
< 			if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
< 			{
< 				include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php');
< 			}
< 			elseif (is_file(APPPATH.'config/mimes.php'))
< 			{
< 				include(APPPATH.'config//mimes.php');
< 			}
< 			else
< 			{
< 				return FALSE;
< 			}
< 
< 			$this->mimes = $mimes;
< 			unset($mimes);
< 		}
< 
< 		return ( ! isset($this->mimes[$mime])) ? FALSE : $this->mimes[$mime];
---
> 		return (count($this->error_msg) > 0) ? $open.implode($close.$open, $this->error_msg).$close : '';
978,979c1174,1177
< 	 * Prevents possible script execution from Apache's handling of files multiple extensions
< 	 * http://httpd.apache.org/docs/1.3/mod/mod_mime.html#multipleext
---
> 	 * Prevents possible script execution from Apache's handling
> 	 * of files' multiple extensions.
> 	 *
> 	 * @link	http://httpd.apache.org/docs/1.3/mod/mod_mime.html#multipleext
981c1179
< 	 * @param	string
---
> 	 * @param	string	$filename
986c1184
< 		if (strpos($filename, '.') === FALSE OR $this->allowed_types == '*')
---
> 		if ($this->mod_mime_fix === FALSE OR $this->allowed_types === '*' OR ($ext_pos = strrpos($filename, '.')) === FALSE)
991,1009c1189,1191
< 		$parts		= explode('.', $filename);
< 		$ext		= array_pop($parts);
< 		$filename	= array_shift($parts);
< 
< 		foreach ($parts as $part)
< 		{
< 			if ( ! in_array(strtolower($part), $this->allowed_types) OR $this->mimes_types(strtolower($part)) === FALSE)
< 			{
< 				$filename .= '.'.$part.'_';
< 			}
< 			else
< 			{
< 				$filename .= '.'.$part;
< 			}
< 		}
< 
< 		$filename .= '.'.$ext;
< 
< 		return $filename;
---
> 		$ext = substr($filename, $ext_pos);
> 		$filename = substr($filename, 0, $ext_pos);
> 		return str_replace('.', '_', $filename).$ext;
1020c1202
< 	 * @param	array
---
> 	 * @param	array	$file
1035c1217
< 			$finfo = finfo_open(FILEINFO_MIME);
---
> 			$finfo = @finfo_open(FILEINFO_MIME);
1062c1244
< 		 *	  due to security concerns, hence the function_exists() checks
---
> 		 *	  due to security concerns, hence the function_usable() checks
1066c1248,1250
< 			$cmd = 'file --brief --mime ' . escapeshellarg($file['tmp_name']) . ' 2>&1';
---
> 			$cmd = function_exists('escapeshellarg')
> 				? 'file --brief --mime '.escapeshellarg($file['tmp_name']).' 2>&1'
> 				: 'file --brief --mime '.$file['tmp_name'].' 2>&1';
1068c1252
< 			if (function_exists('exec'))
---
> 			if (function_usable('exec'))
1071c1255
< 				 * However, we only neeed the last line, which is the actual return value of exec(), and as such - it overwrites
---
> 				 * However, we only need the last line, which is the actual return value of exec(), and as such - it overwrites
1083c1267
< 			if ( (bool) @ini_get('safe_mode') === FALSE && function_exists('shell_exec'))
---
> 			if ( ! ini_get('safe_mode') && function_usable('shell_exec'))
1097c1281
< 			if (function_exists('popen'))
---
> 			if (function_usable('popen'))
1130,1131d1313
< 	// --------------------------------------------------------------------
< 
1133,1136d1314
< // END Upload Class
< 
< /* End of file Upload.php */
< /* Location: ./system/libraries/Upload.php */
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/User_agent.php opensourcepos/system/libraries/User_agent.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
21c43
<  * Identifies the platform, browser, robot, or mobile devise of the browsing agent
---
>  * Identifies the platform, browser, robot, or mobile device of the browsing agent
26,27c48,49
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/user_agent.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/user_agent.html
31c53,86
< 	var $agent		= NULL;
---
> 	/**
> 	 * Current user-agent
> 	 *
> 	 * @var string
> 	 */
> 	public $agent = NULL;
> 
> 	/**
> 	 * Flag for if the user-agent belongs to a browser
> 	 *
> 	 * @var bool
> 	 */
> 	public $is_browser = FALSE;
> 
> 	/**
> 	 * Flag for if the user-agent is a robot
> 	 *
> 	 * @var bool
> 	 */
> 	public $is_robot = FALSE;
> 
> 	/**
> 	 * Flag for if the user-agent is a mobile browser
> 	 *
> 	 * @var bool
> 	 */
> 	public $is_mobile = FALSE;
> 
> 	/**
> 	 * Languages accepted by the current user agent
> 	 *
> 	 * @var array
> 	 */
> 	public $languages = array();
33,49c88,165
< 	var $is_browser	= FALSE;
< 	var $is_robot	= FALSE;
< 	var $is_mobile	= FALSE;
< 
< 	var $languages	= array();
< 	var $charsets	= array();
< 
< 	var $platforms	= array();
< 	var $browsers	= array();
< 	var $mobiles	= array();
< 	var $robots		= array();
< 
< 	var $platform	= '';
< 	var $browser	= '';
< 	var $version	= '';
< 	var $mobile		= '';
< 	var $robot		= '';
---
> 	/**
> 	 * Character sets accepted by the current user agent
> 	 *
> 	 * @var array
> 	 */
> 	public $charsets = array();
> 
> 	/**
> 	 * List of platforms to compare against current user agent
> 	 *
> 	 * @var array
> 	 */
> 	public $platforms = array();
> 
> 	/**
> 	 * List of browsers to compare against current user agent
> 	 *
> 	 * @var array
> 	 */
> 	public $browsers = array();
> 
> 	/**
> 	 * List of mobile browsers to compare against current user agent
> 	 *
> 	 * @var array
> 	 */
> 	public $mobiles = array();
> 
> 	/**
> 	 * List of robots to compare against current user agent
> 	 *
> 	 * @var array
> 	 */
> 	public $robots = array();
> 
> 	/**
> 	 * Current user-agent platform
> 	 *
> 	 * @var string
> 	 */
> 	public $platform = '';
> 
> 	/**
> 	 * Current user-agent browser
> 	 *
> 	 * @var string
> 	 */
> 	public $browser = '';
> 
> 	/**
> 	 * Current user-agent version
> 	 *
> 	 * @var string
> 	 */
> 	public $version = '';
> 
> 	/**
> 	 * Current user-agent mobile name
> 	 *
> 	 * @var string
> 	 */
> 	public $mobile = '';
> 
> 	/**
> 	 * Current user-agent robot name
> 	 *
> 	 * @var string
> 	 */
> 	public $robot = '';
> 
> 	/**
> 	 * HTTP Referer
> 	 *
> 	 * @var	mixed
> 	 */
> 	public $referer;
> 
> 	// --------------------------------------------------------------------
56d171
< 	 * @access	public
66,68c181
< 		if ( ! is_null($this->agent))
< 		{
< 			if ($this->_load_agent_file())
---
> 		if ($this->agent !== NULL && $this->_load_agent_file())
72d184
< 		}
74c186
< 		log_message('debug', "User Agent Class Initialized");
---
> 		log_message('info', 'User Agent Class Initialized');
82d193
< 	 * @access	private
85c196
< 	private function _load_agent_file()
---
> 	protected function _load_agent_file()
87c198
< 		if (defined('ENVIRONMENT') AND is_file(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php'))
---
> 		if (($found = file_exists(APPPATH.'config/user_agents.php')))
89c200
< 			include(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php');
---
> 			include(APPPATH.'config/user_agents.php');
91c202,203
< 		elseif (is_file(APPPATH.'config/user_agents.php'))
---
> 
> 		if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php'))
93c205,206
< 			include(APPPATH.'config/user_agents.php');
---
> 			include(APPPATH.'config/'.ENVIRONMENT.'/user_agents.php');
> 			$found = TRUE;
95c208,209
< 		else
---
> 
> 		if ($found !== TRUE)
138d251
< 	 * @access	private
141c254
< 	private function _compile_data()
---
> 	protected function _compile_data()
159,160c272
< 	 * @access	private
< 	 * @return	mixed
---
> 	 * @return	bool
162c274
< 	private function _set_platform()
---
> 	protected function _set_platform()
164c276
< 		if (is_array($this->platforms) AND count($this->platforms) > 0)
---
> 		if (is_array($this->platforms) && count($this->platforms) > 0)
168c280
< 				if (preg_match("|".preg_quote($key)."|i", $this->agent))
---
> 				if (preg_match('|'.preg_quote($key).'|i', $this->agent))
175a289
> 		return FALSE;
183d296
< 	 * @access	private
186c299
< 	private function _set_browser()
---
> 	protected function _set_browser()
188c301
< 		if (is_array($this->browsers) AND count($this->browsers) > 0)
---
> 		if (is_array($this->browsers) && count($this->browsers) > 0)
192c305
< 				if (preg_match("|".preg_quote($key).".*?([0-9\.]+)|i", $this->agent, $match))
---
> 				if (preg_match('|'.$key.'.*?([0-9\.]+)|i', $this->agent, $match))
210d323
< 	 * @access	private
213c326
< 	private function _set_robot()
---
> 	protected function _set_robot()
215c328
< 		if (is_array($this->robots) AND count($this->robots) > 0)
---
> 		if (is_array($this->robots) && count($this->robots) > 0)
219c332
< 				if (preg_match("|".preg_quote($key)."|i", $this->agent))
---
> 				if (preg_match('|'.preg_quote($key).'|i', $this->agent))
222a336
> 					$this->_set_mobile();
235d349
< 	 * @access	private
238c352
< 	private function _set_mobile()
---
> 	protected function _set_mobile()
240c354
< 		if (is_array($this->mobiles) AND count($this->mobiles) > 0)
---
> 		if (is_array($this->mobiles) && count($this->mobiles) > 0)
244c358
< 				if (FALSE !== (strpos(strtolower($this->agent), $key)))
---
> 				if (FALSE !== (stripos($this->agent, $key)))
260d374
< 	 * @access	private
263c377
< 	private function _set_languages()
---
> 	protected function _set_languages()
265c379
< 		if ((count($this->languages) == 0) AND isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) AND $_SERVER['HTTP_ACCEPT_LANGUAGE'] != '')
---
> 		if ((count($this->languages) === 0) && ! empty($_SERVER['HTTP_ACCEPT_LANGUAGE']))
267,269c381
< 			$languages = preg_replace('/(;q=[0-9\.]+)/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_LANGUAGE'])));
< 
< 			$this->languages = explode(',', $languages);
---
> 			$this->languages = explode(',', preg_replace('/(;\s?q=[0-9\.]+)|\s/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_LANGUAGE']))));
272c384
< 		if (count($this->languages) == 0)
---
> 		if (count($this->languages) === 0)
283d394
< 	 * @access	private
286c397
< 	private function _set_charsets()
---
> 	protected function _set_charsets()
288c399
< 		if ((count($this->charsets) == 0) AND isset($_SERVER['HTTP_ACCEPT_CHARSET']) AND $_SERVER['HTTP_ACCEPT_CHARSET'] != '')
---
> 		if ((count($this->charsets) === 0) && ! empty($_SERVER['HTTP_ACCEPT_CHARSET']))
290,292c401
< 			$charsets = preg_replace('/(;q=.+)/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_CHARSET'])));
< 
< 			$this->charsets = explode(',', $charsets);
---
> 			$this->charsets = explode(',', preg_replace('/(;\s?q=.+)|\s/i', '', strtolower(trim($_SERVER['HTTP_ACCEPT_CHARSET']))));
295c404
< 		if (count($this->charsets) == 0)
---
> 		if (count($this->charsets) === 0)
306c415
< 	 * @access	public
---
> 	 * @param	string	$key
323c432
< 		return array_key_exists($key, $this->browsers) AND $this->browser === $this->browsers[$key];
---
> 		return (isset($this->browsers[$key]) && $this->browser === $this->browsers[$key]);
331c440
< 	 * @access	public
---
> 	 * @param	string	$key
348c457
< 		return array_key_exists($key, $this->robots) AND $this->robot === $this->robots[$key];
---
> 		return (isset($this->robots[$key]) && $this->robot === $this->robots[$key]);
356c465
< 	 * @access	public
---
> 	 * @param	string	$key
373c482
< 		return array_key_exists($key, $this->mobiles) AND $this->mobile === $this->mobiles[$key];
---
> 		return (isset($this->mobiles[$key]) && $this->mobile === $this->mobiles[$key]);
381d489
< 	 * @access	public
386c494
< 		if ( ! isset($_SERVER['HTTP_REFERER']) OR $_SERVER['HTTP_REFERER'] == '')
---
> 		if ( ! isset($this->referer))
388c496,505
< 			return FALSE;
---
> 			if (empty($_SERVER['HTTP_REFERER']))
> 			{
> 				$this->referer = FALSE;
> 			}
> 			else
> 			{
> 				$referer_host = @parse_url($_SERVER['HTTP_REFERER'], PHP_URL_HOST);
> 				$own_host = parse_url(config_item('base_url'), PHP_URL_HOST);
> 
> 				$this->referer = ($referer_host && $referer_host !== $own_host);
390c507,509
< 		return TRUE;
---
> 		}
> 
> 		return $this->referer;
398d516
< 	 * @access	public
411d528
< 	 * @access	public
424d540
< 	 * @access	public
437d552
< 	 * @access	public
450d564
< 	 * @access	public
462d575
< 	 * @access	public
475d587
< 	 * @access	public
480c592
< 		return ( ! isset($_SERVER['HTTP_REFERER']) OR $_SERVER['HTTP_REFERER'] == '') ? '' : trim($_SERVER['HTTP_REFERER']);
---
> 		return empty($_SERVER['HTTP_REFERER']) ? '' : trim($_SERVER['HTTP_REFERER']);
488d599
< 	 * @access	public
493c604
< 		if (count($this->languages) == 0)
---
> 		if (count($this->languages) === 0)
506d616
< 	 * @access	public
511c621
< 		if (count($this->charsets) == 0)
---
> 		if (count($this->charsets) === 0)
524c634
< 	 * @access	public
---
> 	 * @param	string	$lang
529c639
< 		return (in_array(strtolower($lang), $this->languages(), TRUE));
---
> 		return in_array(strtolower($lang), $this->languages(), TRUE);
537c647
< 	 * @access	public
---
> 	 * @param	string	$charset
542c652
< 		return (in_array(strtolower($charset), $this->charsets(), TRUE));
---
> 		return in_array(strtolower($charset), $this->charsets(), TRUE);
545c655,672
< }
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Parse a custom user-agent string
> 	 *
> 	 * @param	string	$string
> 	 * @return	void
> 	 */
> 	public function parse($string)
> 	{
> 		// Reset values
> 		$this->is_browser = FALSE;
> 		$this->is_robot = FALSE;
> 		$this->is_mobile = FALSE;
> 		$this->browser = '';
> 		$this->version = '';
> 		$this->mobile = '';
> 		$this->robot = '';
546a674,675
> 		// Set the new user-agent string and parse it, unless empty
> 		$this->agent = $string;
548,549c677,683
< /* End of file User_agent.php */
< /* Location: ./system/libraries/User_agent.php */
\ No newline at end of file
---
> 		if ( ! empty($string))
> 		{
> 			$this->_compile_data();
> 		}
> 	}
> 
> }
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Xmlrpc.php opensourcepos/system/libraries/Xmlrpc.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
14a38
> defined('BASEPATH') OR exit('No direct script access allowed');
30,31c53,54
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
35,64c58,70
< 	var $debug			= FALSE;	// Debugging on or off
< 	var $xmlrpcI4		= 'i4';
< 	var $xmlrpcInt		= 'int';
< 	var $xmlrpcBoolean	= 'boolean';
< 	var $xmlrpcDouble	= 'double';
< 	var $xmlrpcString	= 'string';
< 	var $xmlrpcDateTime	= 'dateTime.iso8601';
< 	var $xmlrpcBase64	= 'base64';
< 	var $xmlrpcArray	= 'array';
< 	var $xmlrpcStruct	= 'struct';
< 
< 	var $xmlrpcTypes	= array();
< 	var $valid_parents	= array();
< 	var $xmlrpcerr		= array();	// Response numbers
< 	var $xmlrpcstr		= array();  // Response strings
< 
< 	var $xmlrpc_defencoding = 'UTF-8';
< 	var $xmlrpcName			= 'XML-RPC for CodeIgniter';
< 	var $xmlrpcVersion		= '1.1';
< 	var $xmlrpcerruser		= 800; // Start of user errors
< 	var $xmlrpcerrxml		= 100; // Start of XML Parse errors
< 	var $xmlrpc_backslash	= ''; // formulate backslashes for escaping regexp
< 
< 	var $client;
< 	var $method;
< 	var $data;
< 	var $message			= '';
< 	var $error				= '';		// Error string for request
< 	var $result;
< 	var $response			= array();  // Response from remote server
---
> 	/**
> 	 * Debug flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $debug		= FALSE;
> 
> 	/**
> 	 * I4 data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcI4	= 'i4';
66c72,77
< 	var $xss_clean			= TRUE;
---
> 	/**
> 	 * Integer data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcInt	= 'int';
68,70c79,182
< 	//-------------------------------------
< 	//  VALUES THAT MULTIPLE CLASSES NEED
< 	//-------------------------------------
---
> 	/**
> 	 * Boolean data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcBoolean	= 'boolean';
> 
> 	/**
> 	 * Double data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcDouble	= 'double';
> 
> 	/**
> 	 * String data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcString	= 'string';
> 
> 	/**
> 	 * DateTime format
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcDateTime	= 'dateTime.iso8601';
> 
> 	/**
> 	 * Base64 data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcBase64	= 'base64';
> 
> 	/**
> 	 * Array data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcArray	= 'array';
> 
> 	/**
> 	 * Struct data type
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcStruct	= 'struct';
> 
> 	/**
> 	 * Data types list
> 	 *
> 	 * @var	array
> 	 */
> 	public $xmlrpcTypes	= array();
> 
> 	/**
> 	 * Valid parents list
> 	 *
> 	 * @var	array
> 	 */
> 	public $valid_parents	= array();
> 
> 	/**
> 	 * Response error numbers list
> 	 *
> 	 * @var	array
> 	 */
> 	public $xmlrpcerr		= array();
> 
> 	/**
> 	 * Response error messages list
> 	 *
> 	 * @var	string[]
> 	 */
> 	public $xmlrpcstr		= array();
> 
> 	/**
> 	 * Encoding charset
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpc_defencoding	= 'UTF-8';
> 
> 	/**
> 	 * XML-RPC client name
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcName		= 'XML-RPC for CodeIgniter';
> 
> 	/**
> 	 * XML-RPC version
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpcVersion		= '1.1';
> 
> 	/**
> 	 * Start of user errors
> 	 *
> 	 * @var	int
> 	 */
> 	public $xmlrpcerruser		= 800;
71a184,263
> 	/**
> 	 * Start of XML parse errors
> 	 *
> 	 * @var	int
> 	 */
> 	public $xmlrpcerrxml		= 100;
> 
> 	/**
> 	 * Backslash replacement value
> 	 *
> 	 * @var	string
> 	 */
> 	public $xmlrpc_backslash	= '';
> 
> 	/**
> 	 * XML-RPC Client object
> 	 *
> 	 * @var	object
> 	 */
> 	public $client;
> 
> 	/**
> 	 * XML-RPC Method name
> 	 *
> 	 * @var	string
> 	 */
> 	public $method;
> 
> 	/**
> 	 * XML-RPC Data
> 	 *
> 	 * @var	array
> 	 */
> 	public $data;
> 
> 	/**
> 	 * XML-RPC Message
> 	 *
> 	 * @var	string
> 	 */
> 	public $message			= '';
> 
> 	/**
> 	 * Request error message
> 	 *
> 	 * @var	string
> 	 */
> 	public $error			= '';
> 
> 	/**
> 	 * XML-RPC result object
> 	 *
> 	 * @var	object
> 	 */
> 	public $result;
> 
> 	/**
> 	 * XML-RPC Reponse
> 	 *
> 	 * @var	array
> 	 */
> 	public $response		= array(); // Response from remote server
> 
> 	/**
> 	 * XSS Filter flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $xss_clean		= TRUE;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * Initializes property default values
> 	 *
> 	 * @param	array	$config
> 	 * @return	void
> 	 */
74d265
< 		$this->xmlrpcName		= $this->xmlrpcName;
119c309
< 		$this->xmlrpcstr['introspect_unknown'] = "Cannot inspect signature for request: method unknown";
---
> 		$this->xmlrpcstr['introspect_unknown'] = 'Cannot inspect signature for request: method unknown';
127c317
< 		log_message('debug', "XML-RPC Class Initialized");
---
> 		log_message('info', 'XML-RPC Class Initialized');
129a320
> 	// --------------------------------------------------------------------
131,135c322,328
< 	//-------------------------------------
< 	//  Initialize Prefs
< 	//-------------------------------------
< 
< 	function initialize($config = array())
---
> 	/**
> 	 * Initialize
> 	 *
> 	 * @param	array	$config
> 	 * @return	void
> 	 */
> 	public function initialize($config = array())
148d340
< 	// END
150,152c342
< 	//-------------------------------------
< 	//  Take URL and parse it
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
154c344,353
< 	function server($url, $port=80)
---
> 	/**
> 	 * Parse server URL
> 	 *
> 	 * @param	string	$url
> 	 * @param	int	$port
> 	 * @param	string	$proxy
> 	 * @param	int	$proxy_port
> 	 * @return	void
> 	 */
> 	public function server($url, $port = 80, $proxy = FALSE, $proxy_port = 8080)
156c355
< 		if (substr($url, 0, 4) != "http")
---
> 		if (strpos($url, 'http') !== 0)
158c357
< 			$url = "http://".$url;
---
> 			$url = 'http://'.$url;
163c362,367
< 		$path = ( ! isset($parts['path'])) ? '/' : $parts['path'];
---
> 		if (isset($parts['user'], $parts['pass']))
> 		{
> 			$parts['host'] = $parts['user'].':'.$parts['pass'].'@'.$parts['host'];
> 		}
> 
> 		$path = isset($parts['path']) ? $parts['path'] : '/';
165c369
< 		if (isset($parts['query']) && $parts['query'] != '')
---
> 		if ( ! empty($parts['query']))
170c374
< 		$this->client = new XML_RPC_Client($path, $parts['host'], $port);
---
> 		$this->client = new XML_RPC_Client($path, $parts['host'], $port, $proxy, $proxy_port);
172d375
< 	// END
174,176c377
< 	//-------------------------------------
< 	//  Set Timeout
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
178c379,385
< 	function timeout($seconds=5)
---
> 	/**
> 	 * Set Timeout
> 	 *
> 	 * @param	int	$seconds
> 	 * @return	void
> 	 */
> 	public function timeout($seconds = 5)
180c387
< 		if ( ! is_null($this->client) && is_int($seconds))
---
> 		if ($this->client !== NULL && is_int($seconds))
185d391
< 	// END
187,189c393
< 	//-------------------------------------
< 	//  Set Methods
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
191c395,401
< 	function method($function)
---
> 	/**
> 	 * Set Methods
> 	 *
> 	 * @param	string	$function	Method name
> 	 * @return	void
> 	 */
> 	public function method($function)
195d404
< 	// END
197,199c406
< 	//-------------------------------------
< 	//  Take Array of Data and Create Objects
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
201c408,414
< 	function request($incoming)
---
> 	/**
> 	 * Take Array of Data and Create Objects
> 	 *
> 	 * @param	array	$incoming
> 	 * @return	void
> 	 */
> 	public function request($incoming)
205a419
> 			return;
215d428
< 	// END
216a430
> 	// --------------------------------------------------------------------
218,222c432,438
< 	//-------------------------------------
< 	//  Set Debug
< 	//-------------------------------------
< 
< 	function set_debug($flag = TRUE)
---
> 	/**
> 	 * Set Debug
> 	 *
> 	 * @param	bool	$flag
> 	 * @return	void
> 	 */
> 	public function set_debug($flag = TRUE)
224c440
< 		$this->debug = ($flag == TRUE) ? TRUE : FALSE;
---
> 		$this->debug = ($flag === TRUE);
227,229c443
< 	//-------------------------------------
< 	//  Values Parsing
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
231c445,451
< 	function values_parsing($value, $return = FALSE)
---
> 	/**
> 	 * Values Parsing
> 	 *
> 	 * @param	mixed	$value
> 	 * @return	object
> 	 */
> 	public function values_parsing($value)
235c455
< 			if ( ! isset($value['1']) OR ( ! isset($this->xmlrpcTypes[$value['1']])))
---
> 			if ( ! isset($value[1], $this->xmlrpcTypes[$value[1]]))
237,239c457
< 				if (is_array($value[0]))
< 				{
< 					$temp = new XML_RPC_Values($value['0'], 'array');
---
> 				$temp = new XML_RPC_Values($value[0], (is_array($value[0]) ? 'array' : 'string'));
243,246c461
< 					$temp = new XML_RPC_Values($value['0'], 'string');
< 				}
< 			}
< 			elseif (is_array($value['0']) && ($value['1'] == 'struct' OR $value['1'] == 'array'))
---
> 				if (is_array($value[0]) && ($value[1] === 'struct' OR $value[1] === 'array'))
248c463
< 				while (list($k) = each($value['0']))
---
> 					while (list($k) = each($value[0]))
250c465
< 					$value['0'][$k] = $this->values_parsing($value['0'][$k], TRUE);
---
> 						$value[0][$k] = $this->values_parsing($value[0][$k]);
252,253d466
< 
< 				$temp = new XML_RPC_Values($value['0'], $value['1']);
255,257c468,469
< 			else
< 			{
< 				$temp = new XML_RPC_Values($value['0'], $value['1']);
---
> 
> 				$temp = new XML_RPC_Values($value[0], $value[1]);
267,268d478
< 	// END
< 
270,272c480
< 	//-------------------------------------
< 	//  Sends XML-RPC Request
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
274c482,487
< 	function send_request()
---
> 	/**
> 	 * Sends XML-RPC Request
> 	 *
> 	 * @return	bool
> 	 */
> 	public function send_request()
279,284c492
< 		if ( ! $this->result = $this->client->send($this->message))
< 		{
< 			$this->error = $this->result->errstr;
< 			return FALSE;
< 		}
< 		elseif ( ! is_object($this->result->val))
---
> 		if ( ! $this->result = $this->client->send($this->message) OR ! is_object($this->result->val))
294d500
< 	// END
296,298c502
< 	//-------------------------------------
< 	//  Returns Error
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
300c504,509
< 	function display_error()
---
> 	/**
> 	 * Returns Error
> 	 *
> 	 * @return	string
> 	 */
> 	public function display_error()
304d512
< 	// END
306,308c514
< 	//-------------------------------------
< 	//  Returns Remote Server Response
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
310c516,521
< 	function display_response()
---
> 	/**
> 	 * Returns Remote Server Response
> 	 *
> 	 * @return	string
> 	 */
> 	public function display_response()
314d524
< 	// END
316,318c526
< 	//-------------------------------------
< 	//  Sends an Error Message for Server Request
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
320c528,535
< 	function send_error_message($number, $message)
---
> 	/**
> 	 * Sends an Error Message for Server Request
> 	 *
> 	 * @param	int	$number
> 	 * @param	string	$message
> 	 * @return	object
> 	 */
> 	public function send_error_message($number, $message)
322c537
< 		return new XML_RPC_Response('0',$number, $message);
---
> 		return new XML_RPC_Response(0, $number, $message);
324d538
< 	// END
325a540
> 	// --------------------------------------------------------------------
327,331c542,548
< 	//-------------------------------------
< 	//  Send Response for Server Request
< 	//-------------------------------------
< 
< 	function send_response($response)
---
> 	/**
> 	 * Send Response for Server Request
> 	 *
> 	 * @param	array	$response
> 	 * @return	object
> 	 */
> 	public function send_response($response)
335,338c552
< 
< 		$response = $this->values_parsing($response);
< 
< 		return new XML_RPC_Response($response);
---
> 		return new XML_RPC_Response($this->values_parsing($response));
340d553
< 	// END
350,351c561,562
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
355,361c566,621
< 	var $path			= '';
< 	var $server			= '';
< 	var $port			= 80;
< 	var $errno			= '';
< 	var $errstring		= '';
< 	var $timeout		= 5;
< 	var $no_multicall	= FALSE;
---
> 	/**
> 	 * Path
> 	 *
> 	 * @var	string
> 	 */
> 	public $path			= '';
> 
> 	/**
> 	 * Server hostname
> 	 *
> 	 * @var	string
> 	 */
> 	public $server			= '';
> 
> 	/**
> 	 * Server port
> 	 *
> 	 * @var	int
> 	 */
> 	public $port			= 80;
> 
> 	/**
> 	 *
> 	 * Server username
> 	 *
> 	 * @var	string
> 	 */
> 	public $username;
> 
> 	/**
> 	 * Server password
> 	 *
> 	 * @var	string
> 	 */
> 	public $password;
> 
> 	/**
> 	 * Proxy hostname
> 	 *
> 	 * @var	string
> 	 */
> 	public $proxy			= FALSE;
> 
> 	/**
> 	 * Proxy port
> 	 *
> 	 * @var	int
> 	 */
> 	public $proxy_port		= 8080;
> 
> 	/**
> 	 * Error number
> 	 *
> 	 * @var	string
> 	 */
> 	public $errno			= '';
363c623,656
< 	public function __construct($path, $server, $port=80)
---
> 	/**
> 	 * Error message
> 	 *
> 	 * @var	string
> 	 */
> 	public $errstring		= '';
> 
> 	/**
> 	 * Timeout in seconds
> 	 *
> 	 * @var	int
> 	 */
> 	public $timeout		= 5;
> 
> 	/**
> 	 * No Multicall flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $no_multicall	= FALSE;
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	string	$path
> 	 * @param	object	$server
> 	 * @param	int	$port
> 	 * @param	string	$proxy
> 	 * @param	int	$proxy_port
> 	 * @return	void
> 	 */
> 	public function __construct($path, $server, $port = 80, $proxy = FALSE, $proxy_port = 8080)
366a660,667
> 		$url = parse_url('http://'.$server);
> 
> 		if (isset($url['user'], $url['pass']))
> 		{
> 			$this->username = $url['user'];
> 			$this->password = $url['pass'];
> 		}
> 
368c669
< 		$this->server = $server;
---
> 		$this->server = $url['host'];
369a671,672
> 		$this->proxy = $proxy;
> 		$this->proxy_port = $proxy_port;
372c675,683
< 	function send($msg)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Send message
> 	 *
> 	 * @param	mixed	$msg
> 	 * @return	object
> 	 */
> 	public function send($msg)
377,378c688
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['multicall_recursion'],$this->xmlrpcstr['multicall_recursion']);
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['multicall_recursion'], $this->xmlrpcstr['multicall_recursion']);
384c694,704
< 	function sendPayload($msg)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Send payload
> 	 *
> 	 * @param	object	$msg
> 	 * @return	object
> 	 */
> 	public function sendPayload($msg)
> 	{
> 		if ($this->proxy === FALSE)
386c706,715
< 		$fp = @fsockopen($this->server, $this->port,$this->errno, $this->errstr, $this->timeout);
---
> 			$server = $this->server;
> 			$port = $this->port;
> 		}
> 		else
> 		{
> 			$server = $this->proxy;
> 			$port = $this->proxy_port;
> 		}
> 
> 		$fp = @fsockopen($server, $port, $this->errno, $this->errstring, $this->timeout);
391,392c720
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['http_error'],$this->xmlrpcstr['http_error']);
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']);
402,407c730,736
< 		$op  = "POST {$this->path} HTTP/1.0$r";
< 		$op .= "Host: {$this->server}$r";
< 		$op .= "Content-Type: text/xml$r";
< 		$op .= "User-Agent: {$this->xmlrpcName}$r";
< 		$op .= "Content-Length: ".strlen($msg->payload). "$r$r";
< 		$op .= $msg->payload;
---
> 		$op = 'POST '.$this->path.' HTTP/1.0'.$r
> 			.'Host: '.$this->server.$r
> 			.'Content-Type: text/xml'.$r
> 			.(isset($this->username, $this->password) ? 'Authorization: Basic '.base64_encode($this->username.':'.$this->password).$r : '')
> 			.'User-Agent: '.$this->xmlrpcName.$r
> 			.'Content-Length: '.strlen($msg->payload).$r.$r
> 			.$msg->payload;
408a738,764
> 		for ($written = $timestamp = 0, $length = strlen($op); $written < $length; $written += $result)
> 		{
> 			if (($result = fwrite($fp, substr($op, $written))) === FALSE)
> 			{
> 				break;
> 			}
> 			// See https://bugs.php.net/bug.php?id=39598 and http://php.net/manual/en/function.fwrite.php#96951
> 			elseif ($result === 0)
> 			{
> 				if ($timestamp === 0)
> 				{
> 					$timestamp = time();
> 				}
> 				elseif ($timestamp < (time() - $this->timeout))
> 				{
> 					$result = FALSE;
> 					break;
> 				}
> 
> 				usleep(250000);
> 				continue;
> 			}
> 			else
> 			{
> 				$timestamp = 0;
> 			}
> 		}
410c766
< 		if ( ! fputs($fp, $op, strlen($op)))
---
> 		if ($result === FALSE)
413,414c769
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']);
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']);
421c777,822
< } // end class XML_RPC_Client
---
> } // END XML_RPC_Client Class
> 
> /**
>  * XML-RPC Response class
>  *
>  * @category	XML-RPC
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
>  */
> class XML_RPC_Response
> {
> 
> 	/**
> 	 * Value
> 	 *
> 	 * @var	mixed
> 	 */
> 	public $val		= 0;
> 
> 	/**
> 	 * Error number
> 	 *
> 	 * @var	int
> 	 */
> 	public $errno		= 0;
> 
> 	/**
> 	 * Error message
> 	 *
> 	 * @var	string
> 	 */
> 	public $errstr		= '';
> 
> 	/**
> 	 * Headers list
> 	 *
> 	 * @var	array
> 	 */
> 	public $headers		= array();
> 
> 	/**
> 	 * XSS Filter flag
> 	 *
> 	 * @var	bool
> 	 */
> 	public $xss_clean	= TRUE;
422a824
> 	// --------------------------------------------------------------------
425c827
<  * XML-RPC Response class
---
> 	 * Constructor
427,429c829,832
<  * @category	XML-RPC
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
---
> 	 * @param	mixed	$val
> 	 * @param	int	$code
> 	 * @param	string	$fstr
> 	 * @return	void
431,438d833
< class XML_RPC_Response
< {
< 	var $val = 0;
< 	var $errno = 0;
< 	var $errstr = '';
< 	var $headers = array();
< 	var $xss_clean = TRUE;
< 
441c836
< 		if ($code != 0)
---
> 		if ($code !== 0)
445c840,842
< 			$this->errstr = htmlentities($fstr);
---
> 			$this->errstr = htmlspecialchars($fstr,
> 							(is_php('5.4') ? ENT_XML1 | ENT_NOQUOTES : ENT_NOQUOTES),
> 							'UTF-8');
450c847
< 			error_log("Invalid type '" . gettype($val) . "' (value: $val) passed to XML_RPC_Response.  Defaulting to empty value.");
---
> 			error_log("Invalid type '".gettype($val)."' (value: ".$val.') passed to XML_RPC_Response. Defaulting to empty value.');
459c856,863
< 	function faultCode()
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fault code
> 	 *
> 	 * @return	int
> 	 */
> 	public function faultCode()
464c868,875
< 	function faultString()
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Fault string
> 	 *
> 	 * @return	string
> 	 */
> 	public function faultString()
469c880,887
< 	function value()
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Value
> 	 *
> 	 * @return	mixed
> 	 */
> 	public function value()
474,477c892,899
< 	function prepare_response()
< 	{
< 		$result = "<methodResponse>\n";
< 		if ($this->errno)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Prepare response
> 	 *
> 	 * @return	string	xml
> 	 */
> 	public function prepare_response()
479c901,903
< 			$result .= '<fault>
---
> 		return "<methodResponse>\n"
> 			.($this->errno
> 				? '<fault>
492,501c916,918
< </fault>';
< 		}
< 		else
< 		{
< 			$result .= "<params>\n<param>\n" .
< 					$this->val->serialize_class() .
< 					"</param>\n</params>";
< 		}
< 		$result .= "\n</methodResponse>";
< 		return $result;
---
> </fault>'
> 				: "<params>\n<param>\n".$this->val->serialize_class()."</param>\n</params>")
> 			."\n</methodResponse>";
504c921,929
< 	function decode($array=FALSE)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Decode
> 	 *
> 	 * @param	mixed	$array
> 	 * @return	array
> 	 */
> 	public function decode($array = NULL)
508c933
< 		if ($array !== FALSE && is_array($array))
---
> 		if (is_array($array))
516c941
< 				else
---
> 				elseif ($this->xss_clean)
518c943
< 					$array[$key] = ($this->xss_clean) ? $CI->security->xss_clean($array[$key]) : $array[$key];
---
> 					$array[$key] = $CI->security->xss_clean($array[$key]);
522c947
< 			$result = $array;
---
> 			return $array;
524,525c949
< 		else
< 		{
---
> 
532c956
< 			else
---
> 		elseif ($this->xss_clean)
534,535c958
< 				$result = ($this->xss_clean) ? $CI->security->xss_clean($result) : $result;
< 			}
---
> 			$result = $CI->security->xss_clean($result);
540a964
> 	// --------------------------------------------------------------------
542,547c966,972
< 
< 	//-------------------------------------
< 	//  XML-RPC Object to PHP Types
< 	//-------------------------------------
< 
< 	function xmlrpc_decoder($xmlrpc_val)
---
> 	/**
> 	 * XML-RPC Object to PHP Types
> 	 *
> 	 * @param	object
> 	 * @return	array
> 	 */
> 	public function xmlrpc_decoder($xmlrpc_val)
551c976
< 		if ($kind == 'scalar')
---
> 		if ($kind === 'scalar')
555c980
< 		elseif ($kind == 'array')
---
> 		elseif ($kind === 'array')
558,560c983
< 			list($a,$b) = each($xmlrpc_val->me);
< 			$size = count($b);
< 
---
> 			$b = current($xmlrpc_val->me);
563c986
< 			for ($i = 0; $i < $size; $i++)
---
> 			for ($i = 0, $size = count($b); $i < $size; $i++)
569c992
< 		elseif ($kind == 'struct')
---
> 		elseif ($kind === 'struct')
581a1005
> 	// --------------------------------------------------------------------
583,587c1007,1014
< 	//-------------------------------------
< 	//  ISO-8601 time to server or UTC time
< 	//-------------------------------------
< 
< 	function iso8601_decode($time, $utc=0)
---
> 	/**
> 	 * ISO-8601 time to server or UTC time
> 	 *
> 	 * @param	string
> 	 * @param	bool
> 	 * @return	int	unix timestamp
> 	 */
> 	public function iso8601_decode($time, $utc = FALSE)
589c1016
< 		// return a timet in the localtime, or UTC
---
> 		// Return a time in the localtime, or UTC
593c1020
< 			$fnc = ($utc == 1) ? 'gmmktime' : 'mktime';
---
> 			$fnc = ($utc === TRUE) ? 'gmmktime' : 'mktime';
599,601c1026
< } // End Response Class
< 
< 
---
> } // END XML_RPC_Response Class
607,608c1032,1033
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
612,615d1036
< 	var $payload;
< 	var $method_name;
< 	var $params			= array();
< 	var $xh				= array();
617c1038,1075
< 	public function __construct($method, $pars=0)
---
> 	/**
> 	 * Payload
> 	 *
> 	 * @var	string
> 	 */
> 	public $payload;
> 
> 	/**
> 	 * Method name
> 	 *
> 	 * @var	string
> 	 */
> 	public $method_name;
> 
> 	/**
> 	 * Parameter list
> 	 *
> 	 * @var	array
> 	 */
> 	public $params		= array();
> 
> 	/**
> 	 * XH?
> 	 *
> 	 * @var	array
> 	 */
> 	public $xh		= array();
> 
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	string	$method
> 	 * @param	array	$pars
> 	 * @return	void
> 	 */
> 	public function __construct($method, $pars = FALSE)
624c1082
< 			for ($i=0; $i<count($pars); $i++)
---
> 			for ($i = 0, $c = count($pars); $i < $c; $i++)
632,634c1090
< 	//-------------------------------------
< 	//  Create Payload to Send
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
636c1092,1097
< 	function createPayload()
---
> 	/**
> 	 * Create Payload to Send
> 	 *
> 	 * @return	void
> 	 */
> 	public function createPayload()
638,640c1099,1101
< 		$this->payload = "<?xml version=\"1.0\"?".">\r\n<methodCall>\r\n";
< 		$this->payload .= '<methodName>' . $this->method_name . "</methodName>\r\n";
< 		$this->payload .= "<params>\r\n";
---
> 		$this->payload = '<?xml version="1.0"?'.">\r\n<methodCall>\r\n"
> 				.'<methodName>'.$this->method_name."</methodName>\r\n"
> 				."<params>\r\n";
642c1103
< 		for ($i=0; $i<count($this->params); $i++)
---
> 		for ($i = 0, $c = count($this->params); $i < $c; $i++)
652,654c1113
< 	//-------------------------------------
< 	//  Parse External XML-RPC Server's Response
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
656c1115,1121
< 	function parseResponse($fp)
---
> 	/**
> 	 * Parse External XML-RPC Server's Response
> 	 *
> 	 * @param	resource
> 	 * @return	object
> 	 */
> 	public function parseResponse($fp)
665d1129
< 		//-------------------------------------
667,668d1130
< 		//-------------------------------------
< 
671,673c1133
< 			echo "<pre>";
< 			echo "---DATA---\n" . htmlspecialchars($data) . "\n---END DATA---\n\n";
< 			echo "</pre>";
---
> 			echo "<pre>---DATA---\n".htmlspecialchars($data)."\n---END DATA---\n\n</pre>";
676d1135
< 		//-------------------------------------
678,680c1137
< 		//-------------------------------------
< 
< 		if ($data == "")
---
> 		if ($data === '')
683,684c1140
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['no_data'], $this->xmlrpcstr['no_data']);
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['no_data'], $this->xmlrpcstr['no_data']);
687,688d1142
< 
< 		//-------------------------------------
690,692c1144
< 		//-------------------------------------
< 
< 		if (strncmp($data, 'HTTP', 4) == 0 && ! preg_match('/^HTTP\/[0-9\.]+ 200 /', $data))
---
> 		if (strpos($data, 'HTTP') === 0 && ! preg_match('/^HTTP\/[0-9\.]+ 200 /', $data))
695,696c1147
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error']. ' (' . $errstr . ')');
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['http_error'], $this->xmlrpcstr['http_error'].' ('.$errstr.')');
704,711c1155,1163
< 
< 		$this->xh[$parser]					= array();
< 		$this->xh[$parser]['isf']			= 0;
< 		$this->xh[$parser]['ac']			= '';
< 		$this->xh[$parser]['headers']		= array();
< 		$this->xh[$parser]['stack']			= array();
< 		$this->xh[$parser]['valuestack']	= array();
< 		$this->xh[$parser]['isf_reason']	= 0;
---
> 		$pname = (string) $parser;
> 		$this->xh[$pname] = array(
> 			'isf'		=> 0,
> 			'ac'		=> '',
> 			'headers'	=> array(),
> 			'stack'		=> array(),
> 			'valuestack'	=> array(),
> 			'isf_reason'	=> 0
> 		);
719,720d1170
< 
< 		//-------------------------------------
722,723d1171
< 		//-------------------------------------
< 
731c1179
< 			$this->xh[$parser]['headers'][] = $line;
---
> 			$this->xh[$pname]['headers'][] = $line;
735,736d1182
< 
< 		//-------------------------------------
738,739d1183
< 		//-------------------------------------
< 
745c1189
< 			//error_log($errstr);
---
> 
752d1195
< 		// ---------------------------------------
754,756c1197
< 		// ---------------------------------------
< 
< 		if ($this->xh[$parser]['isf'] > 1)
---
> 		if ($this->xh[$pname]['isf'] > 1)
760,762c1201
< 				echo "---Invalid Return---\n";
< 				echo $this->xh[$parser]['isf_reason'];
< 				echo "---Invalid Return---\n\n";
---
> 				echo "---Invalid Return---\n".$this->xh[$pname]['isf_reason']."---Invalid Return---\n\n";
765,766c1204
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'],$this->xmlrpcstr['invalid_return'].' '.$this->xh[$parser]['isf_reason']);
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'], $this->xmlrpcstr['invalid_return'].' '.$this->xh[$pname]['isf_reason']);
768c1206
< 		elseif ( ! is_object($this->xh[$parser]['value']))
---
> 		elseif ( ! is_object($this->xh[$pname]['value']))
770,771c1208
< 			$r = new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'],$this->xmlrpcstr['invalid_return'].' '.$this->xh[$parser]['isf_reason']);
< 			return $r;
---
> 			return new XML_RPC_Response(0, $this->xmlrpcerr['invalid_return'], $this->xmlrpcstr['invalid_return'].' '.$this->xh[$pname]['isf_reason']);
774d1210
< 		//-------------------------------------
776,777d1211
< 		//-------------------------------------
< 
780c1214
< 			echo "<pre>";
---
> 			echo '<pre>';
782c1216
< 			if (count($this->xh[$parser]['headers'] > 0))
---
> 			if (count($this->xh[$pname]['headers'] > 0))
785c1219
< 				foreach ($this->xh[$parser]['headers'] as $header)
---
> 				foreach ($this->xh[$pname]['headers'] as $header)
787c1221
< 					echo "$header\n";
---
> 					echo $header."\n";
792,795c1226,1227
< 			echo "---DATA---\n" . htmlspecialchars($data) . "\n---END DATA---\n\n";
< 
< 			echo "---PARSED---\n" ;
< 			var_dump($this->xh[$parser]['value']);
---
> 			echo "---DATA---\n".htmlspecialchars($data)."\n---END DATA---\n\n---PARSED---\n";
> 			var_dump($this->xh[$pname]['value']);
799d1230
< 		//-------------------------------------
801,805c1232,1233
< 		//-------------------------------------
< 
< 		$v = $this->xh[$parser]['value'];
< 
< 		if ($this->xh[$parser]['isf'])
---
> 		$v = $this->xh[$pname]['value'];
> 		if ($this->xh[$pname]['isf'])
811c1239
< 			if ($errno == 0)
---
> 			if ($errno === 0)
824c1252
< 		$r->headers = $this->xh[$parser]['headers'];
---
> 		$r->headers = $this->xh[$pname]['headers'];
827a1256,1257
> 	// --------------------------------------------------------------------
> 
842,844c1272
< 	//-------------------------------------
< 	//  Start Element Handler
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
846c1274,1281
< 	function open_tag($the_parser, $name, $attrs)
---
> 	/**
> 	 * Start Element Handler
> 	 *
> 	 * @param	string
> 	 * @param	string
> 	 * @return	void
> 	 */
> 	public function open_tag($the_parser, $name)
847a1283,1284
> 		$the_parser = (string) $the_parser;
> 
852,853c1289
< 
< 		if (count($this->xh[$the_parser]['stack']) == 0)
---
> 		if (count($this->xh[$the_parser]['stack']) === 0)
855c1291
< 			if ($name != 'METHODRESPONSE' && $name != 'METHODCALL')
---
> 			if ($name !== 'METHODRESPONSE' && $name !== 'METHODCALL')
862,863d1297
< 		else
< 		{
865c1299
< 			if ( ! in_array($this->xh[$the_parser]['stack'][0], $this->valid_parents[$name], TRUE))
---
> 		elseif ( ! in_array($this->xh[$the_parser]['stack'][0], $this->valid_parents[$name], TRUE))
868c1302
< 				$this->xh[$the_parser]['isf_reason'] = "XML-RPC element $name cannot be child of ".$this->xh[$the_parser]['stack'][0];
---
> 			$this->xh[$the_parser]['isf_reason'] = 'XML-RPC element '.$name.' cannot be child of '.$this->xh[$the_parser]['stack'][0];
871d1304
< 		}
878,881c1311
< 
< 				$cur_val = array('value' => array(),
< 								 'type'	 => $name);
< 
---
> 				$cur_val = array('value' => array(), 'type' => $name);
906c1336
< 				if ($this->xh[$the_parser]['vt'] != 'value')
---
> 				if ($this->xh[$the_parser]['vt'] !== 'value')
910c1340,1341
< 					$this->xh[$the_parser]['isf_reason'] = "'Twas a $name element following a ".$this->xh[$the_parser]['vt']." element inside a single value";
---
> 					$this->xh[$the_parser]['isf_reason'] = 'There is a '.$name.' element following a '
> 										.$this->xh[$the_parser]['vt'].' element inside a single value';
932c1363
< 				$this->xh[$the_parser]['isf_reason'] = "Invalid XML-RPC element found: $name";
---
> 				$this->xh[$the_parser]['isf_reason'] = 'Invalid XML-RPC element found: '.$name;
939c1370
< 		if ($name != 'VALUE') $this->xh[$the_parser]['lv'] = 0;
---
> 		$name === 'VALUE' OR $this->xh[$the_parser]['lv'] = 0;
941,942d1371
< 	// END
< 
944,946c1373
< 	//-------------------------------------
< 	//  End Element Handler
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
948c1375,1382
< 	function closing_tag($the_parser, $name)
---
> 	/**
> 	 * End Element Handler
> 	 *
> 	 * @param	string
> 	 * @param	string
> 	 * @return	void
> 	 */
> 	public function closing_tag($the_parser, $name)
949a1384,1385
> 		$the_parser = (string) $the_parser;
> 
964c1400
< 				$this->xh[$the_parser]['value'] = ( ! isset($cur_val['values'])) ? array() : $cur_val['values'];
---
> 				$this->xh[$the_parser]['value'] = isset($cur_val['values']) ? $cur_val['values'] : array();
979c1415
< 				if ($name == 'STRING')
---
> 				if ($name === 'STRING')
983c1419
< 				elseif ($name=='DATETIME.ISO8601')
---
> 				elseif ($name === 'DATETIME.ISO8601')
988c1424
< 				elseif ($name=='BASE64')
---
> 				elseif ($name === 'BASE64')
992c1428
< 				elseif ($name=='BOOLEAN')
---
> 				elseif ($name === 'BOOLEAN')
995,1002c1431
< 					if ($this->xh[$the_parser]['ac'] == '1')
< 					{
< 						$this->xh[$the_parser]['value'] = TRUE;
< 					}
< 					else
< 					{
< 						$this->xh[$the_parser]['value'] = FALSE;
< 					}
---
> 					$this->xh[$the_parser]['value'] = (bool) $this->xh[$the_parser]['ac'];
1008,1015c1437,1439
< 					if ( ! preg_match('/^[+-]?[eE0-9\t \.]+$/', $this->xh[$the_parser]['ac']))
< 					{
< 						$this->xh[$the_parser]['value'] = 'ERROR_NON_NUMERIC_FOUND';
< 					}
< 					else
< 					{
< 						$this->xh[$the_parser]['value'] = (double)$this->xh[$the_parser]['ac'];
< 					}
---
> 					$this->xh[$the_parser]['value'] = preg_match('/^[+-]?[eE0-9\t \.]+$/', $this->xh[$the_parser]['ac'])
> 										? (float) $this->xh[$the_parser]['ac']
> 										: 'ERROR_NON_NUMERIC_FOUND';
1021,1028c1445,1447
< 					if ( ! preg_match('/^[+-]?[0-9\t ]+$/', $this->xh[$the_parser]['ac']))
< 					{
< 						$this->xh[$the_parser]['value'] = 'ERROR_NON_NUMERIC_FOUND';
< 					}
< 					else
< 					{
< 						$this->xh[$the_parser]['value'] = (int)$this->xh[$the_parser]['ac'];
< 					}
---
> 					$this->xh[$the_parser]['value'] = preg_match('/^[+-]?[0-9\t ]+$/', $this->xh[$the_parser]['ac'])
> 										? (int) $this->xh[$the_parser]['ac']
> 										: 'ERROR_NON_NUMERIC_FOUND';
1044c1463
< 				if (count($this->xh[$the_parser]['valuestack']) && $this->xh[$the_parser]['valuestack'][0]['type'] == 'ARRAY')
---
> 				if (count($this->xh[$the_parser]['valuestack']) && $this->xh[$the_parser]['valuestack'][0]['type'] === 'ARRAY')
1088,1090c1507
< 	//-------------------------------------
< 	//  Parses Character Data
< 	//-------------------------------------
---
> 	// --------------------------------------------------------------------
1092c1509,1516
< 	function character_data($the_parser, $data)
---
> 	/**
> 	 * Parse character data
> 	 *
> 	 * @param	string
> 	 * @param	string
> 	 * @return	void
> 	 */
> 	public function character_data($the_parser, $data)
1093a1518,1519
> 		$the_parser = (string) $the_parser;
> 
1097c1523
< 		if ($this->xh[$the_parser]['lv'] != 3)
---
> 		if ($this->xh[$the_parser]['lv'] !== 3)
1099c1525
< 			if ($this->xh[$the_parser]['lv'] == 1)
---
> 			if ($this->xh[$the_parser]['lv'] === 1)
1104c1530
< 			if ( ! @isset($this->xh[$the_parser]['ac']))
---
> 			if ( ! isset($this->xh[$the_parser]['ac']))
1112a1539,1550
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add parameter
> 	 *
> 	 * @param	mixed
> 	 * @return	void
> 	 */
> 	public function addParam($par)
> 	{
> 		$this->params[] = $par;
> 	}
1114c1552
< 	function addParam($par) { $this->params[]=$par; }
---
> 	// --------------------------------------------------------------------
1116c1554,1560
< 	function output_parameters($array=FALSE)
---
> 	/**
> 	 * Output parameters
> 	 *
> 	 * @param	array	$array
> 	 * @return	array
> 	 */
> 	public function output_parameters(array $array = array())
1120c1564
< 		if ($array !== FALSE && is_array($array))
---
> 		if ( ! empty($array))
1128c1572
< 				else
---
> 				elseif ($key !== 'bits' && $this->xss_clean)
1132c1576
< 					$array[$key] = ($key == 'bits' OR $this->xss_clean == FALSE) ? $array[$key] : $CI->security->xss_clean($array[$key]);
---
> 					$array[$key] = $CI->security->xss_clean($array[$key]);
1136c1580
< 			$parameters = $array;
---
> 			return $array;
1138,1139c1582
< 		else
< 		{
---
> 
1142c1585
< 			for ($i = 0; $i < count($this->params); $i++)
---
> 		for ($i = 0, $c = count($this->params); $i < $c; $i++)
1155d1597
< 		}
1159a1602
> 	// --------------------------------------------------------------------
1161c1604,1610
< 	function decode_message($param)
---
> 	/**
> 	 * Decode message
> 	 *
> 	 * @param	object
> 	 * @return	mixed
> 	 */
> 	public function decode_message($param)
1165c1614
< 		if ($kind == 'scalar')
---
> 		if ($kind === 'scalar')
1169c1618
< 		elseif ($kind == 'array')
---
> 		elseif ($kind === 'array')
1172,1173c1621
< 			list($a,$b) = each($param->me);
< 
---
> 			$b = current($param->me);
1176c1624
< 			for($i = 0; $i < count($b); $i++)
---
> 			for ($i = 0, $c = count($b); $i < $c; $i++)
1183c1631
< 		elseif ($kind == 'struct')
---
> 		elseif ($kind === 'struct')
1198,1200c1645
< } // End XML_RPC_Messages class
< 
< 
---
> } // END XML_RPC_Message Class
1206,1207c1651,1652
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
1211,1212c1656,1670
< 	var $me		= array();
< 	var $mytype	= 0;
---
> 	/**
> 	 * Value data
> 	 *
> 	 * @var	array
> 	 */
> 	public $me	= array();
> 
> 	/**
> 	 * Value type
> 	 *
> 	 * @var	int
> 	 */
> 	public $mytype	= 0;
> 
> 	// --------------------------------------------------------------------
1213a1672,1678
> 	/**
> 	 * Constructor
> 	 *
> 	 * @param	mixed	$val
> 	 * @param	string	$type
> 	 * @return	void
> 	 */
1218c1683
< 		if ($val != -1 OR $type != '')
---
> 		if ($val !== -1 OR $type !== '')
1220c1685
< 			$type = $type == '' ? 'string' : $type;
---
> 			$type = $type === '' ? 'string' : $type;
1237c1702,1711
< 	function addScalar($val, $type='string')
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add scalar value
> 	 *
> 	 * @param	scalar
> 	 * @param	string
> 	 * @return	int
> 	 */
> 	public function addScalar($val, $type = 'string')
1241c1715
< 		if ($this->mytype==1)
---
> 		if ($this->mytype === 1)
1253,1259c1727
< 		if ($type == $this->xmlrpcBoolean)
< 		{
< 			if (strcasecmp($val,'true')==0 OR $val==1 OR ($val==true && strcasecmp($val,'false')))
< 			{
< 				$val = 1;
< 			}
< 			else
---
> 		if ($type === $this->xmlrpcBoolean)
1261,1262c1729
< 				$val=0;
< 			}
---
> 			$val = (int) (strcasecmp($val, 'true') === 0 OR $val === 1 OR ($val === TRUE && strcasecmp($val, 'false')));
1265c1732
< 		if ($this->mytype == 2)
---
> 		if ($this->mytype === 2)
1281c1749,1757
< 	function addArray($vals)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add array value
> 	 *
> 	 * @param	array
> 	 * @return	int
> 	 */
> 	public function addArray($vals)
1283c1759
< 		if ($this->mytype != 0)
---
> 		if ($this->mytype !== 0)
1294c1770,1778
< 	function addStruct($vals)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Add struct value
> 	 *
> 	 * @param	object
> 	 * @return	int
> 	 */
> 	public function addStruct($vals)
1296c1780
< 		if ($this->mytype != 0)
---
> 		if ($this->mytype !== 0)
1306c1790,1797
< 	function kindOf()
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Get value type
> 	 *
> 	 * @return	string
> 	 */
> 	public function kindOf()
1310,1320c1801,1804
< 			case 3:
< 				return 'struct';
< 				break;
< 			case 2:
< 				return 'array';
< 				break;
< 			case 1:
< 				return 'scalar';
< 				break;
< 			default:
< 				return 'undef';
---
> 			case 3: return 'struct';
> 			case 2: return 'array';
> 			case 1: return 'scalar';
> 			default: return 'undef';
1324c1808,1817
< 	function serializedata($typ, $val)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Serialize data
> 	 *
> 	 * @param	string
> 	 * @param	mixed
> 	 * @return	string
> 	 */
> 	public function serializedata($typ, $val)
1336,1338c1829
< 					$rs .= "<member>\n<name>{$key2}</name>\n";
< 					$rs .= $this->serializeval($val2);
< 					$rs .= "</member>\n";
---
> 					$rs .= "<member>\n<name>{$key2}</name>\n".$this->serializeval($val2)."</member>\n";
1345c1836
< 				for($i=0; $i < count($val); $i++)
---
> 				for ($i = 0, $c = count($val); $i < $c; $i++)
1356c1847
< 						$rs .= "<{$typ}>" . base64_encode((string)$val) . "</{$typ}>\n";
---
> 						$rs .= '<'.$typ.'>'.base64_encode( (string) $val).'</'.$typ.">\n";
1359c1850
< 						$rs .= "<{$typ}>" . ((bool)$val ? '1' : '0') . "</{$typ}>\n";
---
> 						$rs .= '<'.$typ.'>'.( (bool) $val ? '1' : '0').'</'.$typ.">\n";
1362c1853
< 						$rs .= "<{$typ}>" . htmlspecialchars((string)$val). "</{$typ}>\n";
---
> 						$rs .= '<'.$typ.'>'.htmlspecialchars( (string) $val).'</'.$typ.">\n";
1365c1856
< 						$rs .= "<{$typ}>{$val}</{$typ}>\n";
---
> 						$rs .= '<'.$typ.'>'.$val.'</'.$typ.">\n";
1374c1866,1873
< 	function serialize_class()
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Serialize class
> 	 *
> 	 * @return	string
> 	 */
> 	public function serialize_class()
1379c1878,1886
< 	function serializeval($o)
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Serialize value
> 	 *
> 	 * @param	object
> 	 * @return	string
> 	 */
> 	public function serializeval($o)
1385,1386c1892
< 		$rs = "<value>\n".$this->serializedata($typ, $val)."</value>\n";
< 		return $rs;
---
> 		return "<value>\n".$this->serializedata($typ, $val)."</value>\n";
1389c1895,1902
< 	function scalarval()
---
> 	// --------------------------------------------------------------------
> 
> 	/**
> 	 * Scalar value
> 	 *
> 	 * @return	mixed
> 	 */
> 	public function scalarval()
1392,1393c1905
< 		list($a,$b) = each($this->me);
< 		return $b;
---
> 		return current($this->me);
1395a1908
> 	// --------------------------------------------------------------------
1397,1409c1910,1918
< 	//-------------------------------------
< 	// Encode time in ISO-8601 form.
< 	//-------------------------------------
< 
< 	// Useful for sending time in XML-RPC
< 
< 	function iso8601_encode($time, $utc=0)
< 	{
< 		if ($utc == 1)
< 		{
< 			$t = strftime("%Y%m%dT%H:%i:%s", $time);
< 		}
< 		else
---
> 	/**
> 	 * Encode time in ISO-8601 form.
> 	 * Useful for sending time in XML-RPC
> 	 *
> 	 * @param	int	unix timestamp
> 	 * @param	bool
> 	 * @return	string
> 	*/
> 	public function iso8601_encode($time, $utc = FALSE)
1411,1418c1920
< 			if (function_exists('gmstrftime'))
< 				$t = gmstrftime("%Y%m%dT%H:%i:%s", $time);
< 			else
< 				$t = strftime("%Y%m%dT%H:%i:%s", $time - date('Z'));
< 		}
< 		return $t;
< 	}
< 
---
> 		return ($utc) ? strftime('%Y%m%dT%H:%i:%s', $time) : gmstrftime('%Y%m%dT%H:%i:%s', $time);
1420d1921
< // END XML_RPC_Values Class
1422,1423c1923
< /* End of file Xmlrpc.php */
< /* Location: ./system/libraries/Xmlrpc.php */
\ No newline at end of file
---
> } // END XML_RPC_Values Class
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Xmlrpcs.php opensourcepos/system/libraries/Xmlrpcs.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
14a38
> defined('BASEPATH') OR exit('No direct script access allowed');
21c45
< if ( ! class_exists('CI_Xmlrpc'))
---
> if ( ! class_exists('CI_Xmlrpc', FALSE))
34,35c58,59
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/xmlrpc.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/xmlrpc.html
37,42c61,82
< class CI_Xmlrpcs extends CI_Xmlrpc
< {
< 	var $methods		= array();	//array of methods mapped to function names and signatures
< 	var $debug_msg		= '';		// Debug Message
< 	var $system_methods = array();	// XML RPC Server methods
< 	var $controller_obj;
---
> class CI_Xmlrpcs extends CI_Xmlrpc {
> 
> 	/**
> 	 * Array of methods mapped to function names and signatures
> 	 *
> 	 * @var array
> 	 */
> 	public $methods = array();
> 
> 	/**
> 	 * Debug Message
> 	 *
> 	 * @var string
> 	 */
> 	public $debug_msg = '';
> 
> 	/**
> 	 * XML RPC Server methods
> 	 *
> 	 * @var array
> 	 */
> 	public $system_methods	= array();
44c84,89
< 	var $object			= FALSE;
---
> 	/**
> 	 * Configuration object
> 	 *
> 	 * @var object
> 	 */
> 	public $object = FALSE;
47c92,95
< 	 * Constructor
---
> 	 * Initialize XMLRPC class
> 	 *
> 	 * @param	array	$config
> 	 * @return	void
59c107
< 		log_message('debug', "XML-RPC Server Class Initialized");
---
> 		log_message('info', 'XML-RPC Server Class Initialized');
67d114
< 	 * @access	public
71c118
< 	function initialize($config=array())
---
> 	public function initialize($config = array())
99d145
< 	 * @access	public
102c148
< 	function set_system_methods()
---
> 	public function set_system_methods()
129d174
< 	 * @access	public
132c177
< 	function serve()
---
> 	public function serve()
135,137c180
< 		$payload  = '<?xml version="1.0" encoding="'.$this->xmlrpc_defencoding.'"?'.'>'."\n";
< 		$payload .= $this->debug_msg;
< 		$payload .= $r->prepare_response();
---
> 		$payload = '<?xml version="1.0" encoding="'.$this->xmlrpc_defencoding.'"?'.'>'."\n".$this->debug_msg.$r->prepare_response();
139,140c182,183
< 		header("Content-Type: text/xml");
< 		header("Content-Length: ".strlen($payload));
---
> 		header('Content-Type: text/xml');
> 		header('Content-Length: '.strlen($payload));
149d191
< 	 * @access	public
156c198
< 	function add_to_map($methodname, $function, $sig, $doc)
---
> 	public function add_to_map($methodname, $function, $sig, $doc)
170d211
< 	 * @access	public
174c215
< 	function parseRequest($data='')
---
> 	public function parseRequest($data = '')
176,177d216
< 		global $HTTP_RAW_POST_DATA;
< 
182c221,224
< 		if ($data == '')
---
> 		if ($data === '')
> 		{
> 			$CI =& get_instance();
> 			if ($CI->input->method() === 'post')
184c226,227
< 			$data = $HTTP_RAW_POST_DATA;
---
> 				$data = $CI->input->raw_input_stream;
> 			}
192c235,236
< 		$parser_object = new XML_RPC_Message("filler");
---
> 		$parser_object = new XML_RPC_Message('filler');
> 		$pname = (string) $parser;
194,200c238,245
< 		$parser_object->xh[$parser]					= array();
< 		$parser_object->xh[$parser]['isf']			= 0;
< 		$parser_object->xh[$parser]['isf_reason']	= '';
< 		$parser_object->xh[$parser]['params']		= array();
< 		$parser_object->xh[$parser]['stack']		= array();
< 		$parser_object->xh[$parser]['valuestack']	= array();
< 		$parser_object->xh[$parser]['method']		= '';
---
> 		$parser_object->xh[$pname] = array(
> 			'isf' => 0,
> 			'isf_reason' => '',
> 			'params' => array(),
> 			'stack' => array(),
> 			'valuestack' => array(),
> 			'method' => ''
> 		);
223c267
< 		elseif ($parser_object->xh[$parser]['isf'])
---
> 		elseif ($parser_object->xh[$pname]['isf'])
231c275
< 			$m = new XML_RPC_Message($parser_object->xh[$parser]['method']);
---
> 			$m = new XML_RPC_Message($parser_object->xh[$pname]['method']);
234c278
< 			for ($i=0; $i < count($parser_object->xh[$parser]['params']); $i++)
---
> 			for ($i = 0, $c = count($parser_object->xh[$pname]['params']); $i < $c; $i++)
238c282
< 					$plist .= "$i - " .  print_r(get_object_vars($parser_object->xh[$parser]['params'][$i]), TRUE). ";\n";
---
> 					$plist .= $i.' - '.print_r(get_object_vars($parser_object->xh[$pname]['params'][$i]), TRUE).";\n";
241c285
< 				$m->addParam($parser_object->xh[$parser]['params'][$i]);
---
> 				$m->addParam($parser_object->xh[$pname]['params'][$i]);
246,248c290
< 				echo "<pre>";
< 				echo "---PLIST---\n" . $plist . "\n---PLIST END---\n\n";
< 				echo "</pre>";
---
> 				echo "<pre>---PLIST---\n".$plist."\n---PLIST END---\n\n</pre>";
271d312
< 	 * @access	protected
275c316
< 	function _execute($m)
---
> 	protected function _execute($m)
280c321
< 		$system_call = (strncmp($methName, 'system', 5) == 0) ? TRUE : FALSE;
---
> 		$system_call = (strpos($methName, 'system') === 0);
282c323
< 		if ($this->xss_clean == FALSE)
---
> 		if ($this->xss_clean === FALSE)
300,301c341,342
< 		$method_parts = explode(".", $this->methods[$methName]['function']);
< 		$objectCall = (isset($method_parts['1']) && $method_parts['1'] != "") ? TRUE : FALSE;
---
> 		$method_parts = explode('.', $this->methods[$methName]['function']);
> 		$objectCall = (isset($method_parts[1]) && $method_parts[1] !== '');
305c346
< 			if ( ! is_callable(array($this,$method_parts['1'])))
---
> 			if ( ! is_callable(array($this,$method_parts[1])))
310,312c351,353
< 		else
< 		{
< 			if ($objectCall && ! is_callable(array($method_parts['0'],$method_parts['1'])))
---
> 		elseif (($objectCall && ! is_callable(array($method_parts[0], $method_parts[1])))
> 			OR ( ! $objectCall && ! is_callable($this->methods[$methName]['function']))
> 		)
316,320d356
< 			elseif ( ! $objectCall && ! is_callable($this->methods[$methName]['function']))
< 			{
< 				return new XML_RPC_Response(0, $this->xmlrpcerr['unknown_method'], $this->xmlrpcstr['unknown_method']);
< 			}
< 		}
329c365
< 			for ($i=0; $i<count($sig); $i++)
---
> 			for ($i = 0, $c = count($sig); $i < $c; $i++)
333c369
< 				if (count($current_sig) == count($m->params)+1)
---
> 				if (count($current_sig) === count($m->params)+1)
335c371
< 					for ($n=0; $n < count($m->params); $n++)
---
> 					for ($n = 0, $mc = count($m->params); $n < $mc; $n++)
338c374
< 						$pt = ($p->kindOf() == 'scalar') ? $p->scalarval() : $p->kindOf();
---
> 						$pt = ($p->kindOf() === 'scalar') ? $p->scalarval() : $p->kindOf();
340c376
< 						if ($pt != $current_sig[$n+1])
---
> 						if ($pt !== $current_sig[$n+1])
348c384
< 								": Wanted {$wanted}, got {$pt} at param {$pno})");
---
> 								': Wanted '.$wanted.', got '.$pt.' at param '.$pno.')');
361c397
< 			if ($method_parts[0] == "this" && $system_call == TRUE)
---
> 			if ($method_parts[0] === 'this' && $system_call === TRUE)
365,367c401
< 			else
< 			{
< 				if ($this->object === FALSE)
---
> 			elseif ($this->object === FALSE)
369,370c403
< 					$CI =& get_instance();
< 					return $CI->$method_parts['1']($m);
---
> 				return get_instance()->$method_parts[1]($m);
374,376c407
< 					return $this->object->$method_parts['1']($m);
< 					//return call_user_func(array(&$method_parts['0'],$method_parts['1']), $m);
< 				}
---
> 				return $this->object->$method_parts[1]($m);
390d420
< 	 * @access	public
394c424
< 	function listMethods($m)
---
> 	public function listMethods($m)
418d447
< 	 * @access	public
422c451
< 	function methodSignature($m)
---
> 	public function methodSignature($m)
434c463
< 				for ($i=0; $i < count($signature); $i++)
---
> 				for ($i = 0, $c = count($signature); $i < $c; $i++)
438c467
< 					for ($j=0; $j<count($inSig); $j++)
---
> 					for ($j = 0, $jc = count($inSig); $j < $jc; $j++)
444,449c473,474
< 				$r = new XML_RPC_Response(new XML_RPC_Values($sigs, 'array'));
< 			}
< 			else
< 			{
< 				$r = new XML_RPC_Response(new XML_RPC_Values('undef', 'string'));
< 			}
---
> 
> 				return new XML_RPC_Response(new XML_RPC_Values($sigs, 'array'));
451,453c476,477
< 		else
< 		{
< 			$r = new XML_RPC_Response(0,$this->xmlrpcerr['introspect_unknown'], $this->xmlrpcstr['introspect_unknown']);
---
> 
> 			return new XML_RPC_Response(new XML_RPC_Values('undef', 'string'));
455c479,480
< 		return $r;
---
> 
> 		return new XML_RPC_Response(0, $this->xmlrpcerr['introspect_unknown'], $this->xmlrpcstr['introspect_unknown']);
463d487
< 	 * @access	public
467c491
< 	function methodHelp($m)
---
> 	public function methodHelp($m)
489d512
< 	 * @access	public
493c516
< 	function multicall($m)
---
> 	public function multicall($m)
505,506d527
< 			//$attempt = $this->_execute(new XML_RPC_Message($value[0], $value[1]));
< 
510c531
< 			for ($i=0; $i < count($value[1]); $i++)
---
> 			for ($i = 0, $c = count($value[1]); $i < $c; $i++)
517c538
< 			if ($attempt->faultCode() != 0)
---
> 			if ($attempt->faultCode() !== 0)
533d553
< 	 * @access	public
537c557
< 	function multicall_error($err)
---
> 	public function multicall_error($err)
553d572
< 	 * @access	public
557c576
< 	function do_multicall($call)
---
> 	public function do_multicall($call)
559c578
< 		if ($call->kindOf() != 'struct')
---
> 		if ($call->kindOf() !== 'struct')
569c588
< 		$scalar_type = $scalar_type == $this->xmlrpcI4 ? $this->xmlrpcInt : $scalar_type;
---
> 		$scalar_type = $scalar_type === $this->xmlrpcI4 ? $this->xmlrpcInt : $scalar_type;
571c590
< 		if ($methName->kindOf() != 'scalar' OR $scalar_type != 'string')
---
> 		if ($methName->kindOf() !== 'scalar' OR $scalar_type !== 'string')
575c594
< 		elseif ($scalar_value == 'system.multicall')
---
> 		elseif ($scalar_value === 'system.multicall')
583c602
< 		elseif ($params->kindOf() != 'array')
---
> 		elseif ($params->kindOf() !== 'array')
589d607
< 		$numParams = count($b);
592c610
< 		for ($i = 0; $i < $numParams; $i++)
---
> 		for ($i = 0, $numParams = count($b); $i < $numParams; $i++)
599c617
< 		if ($result->faultCode() != 0)
---
> 		if ($result->faultCode() !== 0)
608,612d625
< // END XML_RPC_Server class
< 
< 
< /* End of file Xmlrpcs.php */
< /* Location: ./system/libraries/Xmlrpcs.php */
\ No newline at end of file
diff -rBwi --ignore-file-name-case pos-prod/system/libraries/Zip.php opensourcepos/system/libraries/Zip.php
1c1
< <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
---
> <?php
5c5,27
<  * An open source application development framework for PHP 5.1.6 or newer
---
>  * An open source application development framework for PHP
>  *
>  * This content is released under the MIT License (MIT)
>  *
>  * Copyright (c) 2014 - 2016, British Columbia Institute of Technology
>  *
>  * Permission is hereby granted, free of charge, to any person obtaining a copy
>  * of this software and associated documentation files (the "Software"), to deal
>  * in the Software without restriction, including without limitation the rights
>  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>  * copies of the Software, and to permit persons to whom the Software is
>  * furnished to do so, subject to the following conditions:
>  *
>  * The above copyright notice and this permission notice shall be included in
>  * all copies or substantial portions of the Software.
>  *
>  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>  * THE SOFTWARE.
8,12c30,35
<  * @author		ExpressionEngine Dev Team
<  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc.
<  * @license		http://codeigniter.com/user_guide/license.html
<  * @link		http://codeigniter.com
<  * @since		Version 1.0
---
>  * @author	EllisLab Dev Team
>  * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
>  * @copyright	Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)
>  * @license	http://opensource.org/licenses/MIT	MIT License
>  * @link	https://codeigniter.com
>  * @since	Version 1.0.0
15,16c38
< 
< // ------------------------------------------------------------------------
---
> defined('BASEPATH') OR exit('No direct script access allowed');
30,31c52,53
<  * @author		ExpressionEngine Dev Team
<  * @link		http://codeigniter.com/user_guide/libraries/zip.html
---
>  * @author		EllisLab Dev Team
>  * @link		https://codeigniter.com/user_guide/libraries/zip.html
35,40c57,106
< 	var $zipdata	= '';
< 	var $directory	= '';
< 	var $entries	= 0;
< 	var $file_num	= 0;
< 	var $offset		= 0;
< 	var $now;
---
> 	/**
> 	 * Zip data in string form
> 	 *
> 	 * @var string
> 	 */
> 	public $zipdata = '';
> 
> 	/**
> 	 * Zip data for a directory in string form
> 	 *
> 	 * @var string
> 	 */
> 	public $directory = '';
> 
> 	/**
> 	 * Number of files/folder in zip file
> 	 *
> 	 * @var int
> 	 */
> 	public $entries = 0;
> 
> 	/**
> 	 * Number of files in zip
> 	 *
> 	 * @var int
> 	 */
> 	public $file_num = 0;
> 
> 	/**
> 	 * relative offset of local header
> 	 *
> 	 * @var int
> 	 */
> 	public $offset = 0;
> 
> 	/**
> 	 * Reference to time at init
> 	 *
> 	 * @var int
> 	 */
> 	public $now;
> 
> 	/**
> 	 * The level of compression
> 	 *
> 	 * Ranges from 0 to 9, with 9 being the highest level.
> 	 *
> 	 * @var	int
> 	 */
> 	public $compression_level = 2;
43c109,111
< 	 * Constructor
---
> 	 * Initialize zip compression class
> 	 *
> 	 * @return	void
47,48d114
< 		log_message('debug', "Zip Compression Class Initialized");
< 
49a116
> 		log_message('info', 'Zip Compression Class Initialized');
59,60c126
< 	 * @access	public
< 	 * @param	mixed	the directory name. Can be string or array
---
> 	 * @param	mixed	$directory	the directory name. Can be string or array
63c129
< 	function add_dir($directory)
---
> 	public function add_dir($directory)
67c133
< 			if ( ! preg_match("|.+/$|", $dir))
---
> 			if ( ! preg_match('|.+/$|', $dir))
85c150
< 	 *	@param string	path to file
---
> 	 * @param	string	$dir	path to file
88c153
< 	function _get_mod_time($dir)
---
> 	protected function _get_mod_time($dir)
90,94c155,156
< 		// filemtime() will return false, but it does raise an error.
< 		$date = (@filemtime($dir)) ? filemtime($dir) : getdate($this->now);
< 
< 		$time['file_mtime'] = ($date['hours'] << 11) + ($date['minutes'] << 5) + $date['seconds'] / 2;
< 		$time['file_mdate'] = (($date['year'] - 1980) << 9) + ($date['mon'] << 5) + $date['mday'];
---
> 		// filemtime() may return false, but raises an error for non-existing files
> 		$date = file_exists($dir) ? getdate(filemtime($dir)) : getdate($this->now);
96c158,161
< 		return $time;
---
> 		return array(
> 			'file_mtime' => ($date['hours'] << 11) + ($date['minutes'] << 5) + $date['seconds'] / 2,
> 			'file_mdate' => (($date['year'] - 1980) << 9) + ($date['mon'] << 5) + $date['mday']
> 		);
104,105c169,171
< 	 * @access	private
< 	 * @param	string	the directory name
---
> 	 * @param	string	$dir	the directory name
> 	 * @param	int	$file_mtime
> 	 * @param	int	$file_mdate
108c174
< 	function _add_dir($dir, $file_mtime, $file_mdate)
---
> 	protected function _add_dir($dir, $file_mtime, $file_mdate)
110c176
< 		$dir = str_replace("\\", "/", $dir);
---
> 		$dir = str_replace('\\', '/', $dir);
156,158c222,223
< 	 * @access	public
< 	 * @param	mixed
< 	 * @param	string
---
> 	 * @param	mixed	$filepath	A single filepath or an array of file => data pairs
> 	 * @param	string	$data		Single file contents
161c226
< 	function add_data($filepath, $data = NULL)
---
> 	public function add_data($filepath, $data = NULL)
185,187c248,251
< 	 * @access	private
< 	 * @param	string	the file name/path
< 	 * @param	string	the data to be encoded
---
> 	 * @param	string	$filepath	the file name/path
> 	 * @param	string	$data	the data to be encoded
> 	 * @param	int	$file_mtime
> 	 * @param	int	$file_mdate
190c254
< 	function _add_data($filepath, $data, $file_mtime, $file_mdate)
---
> 	protected function _add_data($filepath, $data, $file_mtime, $file_mdate)
192c256
< 		$filepath = str_replace("\\", "/", $filepath);
---
> 		$filepath = str_replace('\\', '/', $filepath);
196,198c260
< 
< 		$gzdata = gzcompress($data);
< 		$gzdata = substr($gzdata, 2, -4);
---
> 		$gzdata = substr(gzcompress($data, $this->compression_level), 2, -4);
239c301,302
< 	 * @access	public
---
> 	 * @param	string	$path
> 	 * @param	bool	$archive_filepath
242c305
< 	function read_file($path, $preserve_filepath = FALSE)
---
> 	public function read_file($path, $archive_filepath = FALSE)
244c307
< 		if ( ! file_exists($path))
---
> 		if (file_exists($path) && FALSE !== ($data = file_get_contents($path)))
246c309,311
< 			return FALSE;
---
> 			if (is_string($archive_filepath))
> 			{
> 				$name = str_replace('\\', '/', $archive_filepath);
248,249c313
< 
< 		if (FALSE !== ($data = file_get_contents($path)))
---
> 			else
251c315
< 			$name = str_replace("\\", "/", $path);
---
> 				$name = str_replace('\\', '/', $path);
253c317
< 			if ($preserve_filepath === FALSE)
---
> 				if ($archive_filepath === FALSE)
255c319,320
< 				$name = preg_replace("|.*/(.+)|", "\\1", $name);
---
> 					$name = preg_replace('|.*/(.+)|', '\\1', $name);
> 				}
273,274c339,341
< 	 * @access	public
< 	 * @param	string	path to source
---
> 	 * @param	string	$path	path to source directory
> 	 * @param	bool	$preserve_filepath
> 	 * @param	string	$root_path
277c344
< 	function read_dir($path, $preserve_filepath = TRUE, $root_path = NULL)
---
> 	public function read_dir($path, $preserve_filepath = TRUE, $root_path = NULL)
278a346
> 		$path = rtrim($path, '/\\').DIRECTORY_SEPARATOR;
287c355
< 			$root_path = dirname($path).'/';
---
> 			$root_path = str_replace(array('\\', '/'), DIRECTORY_SEPARATOR, dirname($path)).DIRECTORY_SEPARATOR;
292c360
< 			if (substr($file, 0, 1) == '.')
---
> 			if ($file[0] === '.')
297c365
< 			if (@is_dir($path.$file))
---
> 			if (is_dir($path.$file))
299c367
< 				$this->read_dir($path.$file."/", $preserve_filepath, $root_path);
---
> 				$this->read_dir($path.$file.DIRECTORY_SEPARATOR, $preserve_filepath, $root_path);
301,303c369
< 			else
< 			{
< 				if (FALSE !== ($data = file_get_contents($path.$file)))
---
> 			elseif (FALSE !== ($data = file_get_contents($path.$file)))
305,306c371
< 					$name = str_replace("\\", "/", $path);
< 
---
> 				$name = str_replace(array('\\', '/'), DIRECTORY_SEPARATOR, $path);
315d379
< 		}
316a381
> 		closedir($fp);
325,326c390
< 	 * @access	public
< 	 * @return	binary string
---
> 	 * @return	string	(binary encoded)
328c392
< 	function get_zip()
---
> 	public function get_zip()
331c395
< 		if ($this->entries == 0)
---
> 		if ($this->entries === 0)
336,344c400,406
< 		$zip_data = $this->zipdata;
< 		$zip_data .= $this->directory."\x50\x4b\x05\x06\x00\x00\x00\x00";
< 		$zip_data .= pack('v', $this->entries); // total # of entries "on this disk"
< 		$zip_data .= pack('v', $this->entries); // total # of entries overall
< 		$zip_data .= pack('V', strlen($this->directory)); // size of central dir
< 		$zip_data .= pack('V', strlen($this->zipdata)); // offset to start of central dir
< 		$zip_data .= "\x00\x00"; // .zip file comment length
< 
< 		return $zip_data;
---
> 		return $this->zipdata
> 			.$this->directory."\x50\x4b\x05\x06\x00\x00\x00\x00"
> 			.pack('v', $this->entries) // total # of entries "on this disk"
> 			.pack('v', $this->entries) // total # of entries overall
> 			.pack('V', strlen($this->directory)) // size of central dir
> 			.pack('V', strlen($this->zipdata)) // offset to start of central dir
> 			."\x00\x00"; // .zip file comment length
354,355c416
< 	 * @access	public
< 	 * @param	string	the file name
---
> 	 * @param	string	$filepath	the file name
358c419
< 	function archive($filepath)
---
> 	public function archive($filepath)
360c421
< 		if ( ! ($fp = @fopen($filepath, FOPEN_WRITE_CREATE_DESTRUCTIVE)))
---
> 		if ( ! ($fp = @fopen($filepath, 'w+b')))
366c427,435
< 		fwrite($fp, $this->get_zip());
---
> 
> 		for ($result = $written = 0, $data = $this->get_zip(), $length = strlen($data); $written < $length; $written += $result)
> 		{
> 			if (($result = fwrite($fp, substr($data, $written))) === FALSE)
> 			{
> 				break;
> 			}
> 		}
> 
370c439
< 		return TRUE;
---
> 		return is_int($result);
378,381c447,448
< 	 * @access	public
< 	 * @param	string	the file name
< 	 * @param	string	the data to be encoded
< 	 * @return	bool
---
> 	 * @param	string	$filename	the file name
> 	 * @return	void
383c450
< 	function download($filename = 'backup.zip')
---
> 	public function download($filename = 'backup.zip')
385c452
< 		if ( ! preg_match("|.+?\.zip$|", $filename))
---
> 		if ( ! preg_match('|.+?\.zip$|', $filename))
390,392c457
< 		$CI =& get_instance();
< 		$CI->load->helper('download');
< 
---
> 		get_instance()->load->helper('download');
408,409c472
< 	 * @access	public
< 	 * @return	void
---
> 	 * @return	CI_Zip
411c474
< 	function clear_data()
---
> 	public function clear_data()
417a481
> 		return $this;
421,423d484
< 
< /* End of file Zip.php */
< /* Location: ./system/libraries/Zip.php */
\ No newline at end of file
Only in opensourcepos: test
Only in opensourcepos: translations
diff -rBwi --ignore-file-name-case pos-prod/UPGRADE.txt opensourcepos/UPGRADE.txt
3,4c3,14
< 1. Replace all code from your point of sale installation with the code downloaded
< 2. Run the necessary database upgrades from the database folder
---
> 1. Backup all your current database and OSPOS code
> 2. Make sure you have a copy of application/config/config.php and application/config/database.php
> 3. Remove all directories
> 4. Install tne new OSPOS
> 5. Run the database upgrade scripts from database/ (check which ones you need according to the version you are upgrading from)
> 6. Take the saved old config.php and upgrade the new config.php with any additional changes you made in the old.
>    Take time to understand if new config rules require some changes (e.g. encryption keys)
> 7. Copy application/config/database.php.tmpl to application/config/database.php
> 8. Take the saved old database.php and change the new database.php to contain all the configuration you had in the old setup.
>    Please try not to use the old layout, use the new one and just copy the content of the config variables
> 9. Once new code is in place, database is updated and config files are sorted you are good to start the new OSPOS
> 10. If any issue please check GitHub issues as somebody else might have had your problem already or post a question
Only in opensourcepos: uploads
diff -rBwi --ignore-file-name-case pos-prod/WHATS_NEW.txt opensourcepos/WHATS_NEW.txt
0a1,87
> Version 2.4
> -----------
> + *CodeIgniter 3.0.5* Upgrade (please read UPGRADE.txt)
> + Fix for spurious logouts
> + Apache .htaccess mod_expiry caching and security optimizations
> + Bulk item edit fixes (category, tax and supplier fields)
> + Remove f-key shortcuts used for module navigation
> + Allow to use custom invoice numbers when suspending sale
> + PHP7 fixes
> + Specific warnings to distinguish between reorder level and out of stock situation in sales
> + Fix malware detection issues due to usage of base64 encoding for storing session variables
> + Improve language generation scripts (use PHP builtin functionality)
> + Add extra buttons for navigation and printing to receipt and invoice
> + Improve print layout for invoices
> + Make layout consistent for items between receipt and invoice templates
> + Minor bugfixes
>  
> Version 2.3.4
> -------------
> + Migration script fixes
> + Improved continuous integration setup
> + More integration tests
> + Virtualized container setup (docker install)
> + Live clock functionality + favicon
> + Improved PHP 7 compatbility
> + Added de_CH (German) as language 
> + Minor code cleanup
> + Removal of annoying backup prompt on logout
> 
> Version 2.3.3
> -------------
> + Item kit fixes (search, list, ..)
> + Add datepicker widgets in sale/receiving edit forms
> + Add date filter in items module
> + Add barcode generation logic for EAN8, EAN13
> + Add barcode validation + fallback logic for EAN8, EAN13
> + New config option to generate barcodes if item_number empty
> + Add cost + count to inventory reports
> + Giftcard fixes
> + Refactor sales overview (added date filtering + search options)
> + Better locale config support
> + Improve php compatibility
> + Fix invoice numbering bug on suspend
> + Add configurable locale-dependent dateformat
> + Add grunt-cache-breaker plugin
> + Suspend button appeaers before adding a payment
> + Searching of deleted items, filtering part is removed
> + Remove infamous "0" after leaving sale or receiving comments empty
> + Add SQL script to clean zeroes in sales/receivings comments
> + Numerous other bug fixes
> 
> Version 2.3.2
> -------------
> + Nominatim (OpenStreetMap) customer address autocompletion
> + Sale invoice templating
> + Configurable barcode generation for items
> + Stock location filtering in detailed sales and receivings reports
> + Giftcards bugfixes
> + Proper pagination support for most modules
> + Language updates
> + Bugfix for decimal taxrates
> + Add gender + company name attributes to customer
> + Stock location config screen refactor
> + Basic travis-ci + phantomJs setup
> + Database backup on admin logout
> + Modifiable item thumbnails
> + Email invoice PDF generation using DomPDF
> + Modifiable company logo
> + jQuery upgrade (1.2 -> 1.8.3)
> + Javascript minification (using grunt)
> + Numerous bugfixes
> 
> Version 2.3.1
> -------------
> 
> + Extra report permissions (this includes a refactoring of the database model - new grants table)
> + Tax inclusive/exclusive pricing
> + Receivings amount multiplication (can be configured in items section)
> + Customizable sale and receiving numbering
> + Giftcard improvements
> + Fix item import through csv
> + Bug fixes for reports
> 
> Version 2.3
> -----------
> + Support for multiple stock locations
> 
Only in opensourcepos: with_current_pos_prod.diff
